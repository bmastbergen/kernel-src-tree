Rebuild_History BUILDABLE
Rebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v3.10~1..master: 848130
Number of commits in rpm: 13470
Number of commits matched with upstream: 13055 (96.92%)
Number of commits in upstream but not in rpm: 835215
Number of commits NOT found in upstream: 415 (3.08%)

Rebuilding Kernel on Branch centos7_rebuild_kernel-3.10.0-693.el7 for kernel-3.10.0-693.el7
Clean Cherry Picks: 8199 (62.80%)
Empty Cherry Picks: 4637 (35.52%)
_______________________________

__EMPTY COMMITS__________________________
e64fb7e272885c1ea3cd2f68f267ae12fa04c8b1 KVM: PPC: Book3S HV: Move struct kvmppc_vcore from kvm_host.h to kvm_book3s.h
88b02cf97bb7e742db3e31671d54177e3e19fd89 KVM: PPC: Book3S: Treat VTB as a per-subcore register, not per-thread
b009031f74da1c71f306bbe410da78bd9d848669 KVM: PPC: Book3S HV: Take out virtual core piggybacking code
fd07160bb7180cdd0afeb089d8cdfd66002f17e6 xen-netfront: avoid packet loss when ethernet header crosses page boundary
576243b3f9eaa47ab568ac49574b3a095c2365f1 PCI: pciehp: Allow exclusive userspace control of indicators
3161832d58c7f3bf8b190a2887086be0932d8dd3 x86/PCI: VMD: Request userspace control of PCIe hotplug indicators
970fc7f4afd52d638d88aeda985ea03ccd33acee rtc: cmos: Initialize hpet timer before irq is registered
d09960b0032174eb493c4c13be5b9c9ef36dc9a7 dm: free io_barrier after blk_cleanup_queue call
4214ebf4654798309364d0c678b799e402f38288 Fix memory leaks in cifs_do_mount()
c3c188b2c3ed29effe8693672ee1c84184103b4e selinux: Create a common helper to determine an inode label [ver #3]
d8ad8b49618410ddeafd78465b63a6cedd6c9484 security, overlayfs: provide copy up security hook for unioned files
56909eb3f559103196ecbf2c08c923e0804980fb selinux: Implementation for inode_copy_up() hook
121ab822ef21914adac2fa3730efeeb8fd762473 security,overlayfs: Provide security hook for copy up of xattrs for overlay file
19472b69d639d58415866bf127d5f9005038c105 selinux: Implementation for inode_copy_up_xattr() hook
c957f6df52c509ccfbb96659fd1a0f7812de333f selinux: Pass security pointer to determine_inode_label()
2602625b7e46576b00db619ac788c508ba3bcb2c security, overlayfs: Provide hook to correctly label newly created files
a518b0a5b0d7f3397e065acb956bca9635aa892d selinux: Implement dentry_create_files_as() hook
43af5de74288a7cdc3684902c5259346ae67adf8 lsm,audit,selinux: Introduce a new audit data type LSM_AUDIT_DATA_FILE
ce52914eb76efd62aa48d738cf845b37852bf920 sunrpc: move NO_CRKEY_TIMEOUT to the auth->au_flags
12703dbfeb15402260e7554d32a34ac40c233990 fsnotify: add a way to stop queueing events on group shutdown
e26fbffd32c28107d9d268b432706ccf84fb6411 sched: Allow hotplug notifiers to be setup early
935a9e3f9d57be122013113318e30e68530b474d ACPI / IPMI: Cleanup some inclusion codes
50065300314e95c945665a17febc0c4e02941b06 ACPI / IPMI: Cleanup coding styles
8c57cac1457f3125a5d13dc03635c0708c61bff0 mei: me: disable driver on SPT SPS firmware
cfb4bbd8fbed76a6b715916fabeca4597cb38721 spi: spi-gpio: Fix compiler warning when building for 64 bit systems
956b56a984ddf10aa69b25318dc04430101beed6 vfio/pci: Fix ordering of eventfd vs virqfd shutdown
48459340b92b00ae1a75179f168ef20d3e61f264 ACPI / scan: use platform bus type by default for _HID enumeration
54f19b4a679149130f78413c421a5780e90a9d0a tty/serial/8250: Touch NMI watchdog in wait_for_xmitr
8d93c874ac899bfdf0ad3787baef684a0c878c2c KVM: x86: move nsec_to_cycles from x86.c to x86.h
0a6fa23dcb10eeb21adfd9955f7030f952a8122d ipv4: Use math to point per net sysctls into the appropriate struct net.
5cde282938915f36a2e6769b51c24c4159654859 net: Separate the close_list and the unreg_list v2
b61c654f9b3f1a271217e46c893f80565b1f754d sctp: free msg->chunks when sctp_primitive_SEND return err
18103efcacee0563d57c3b7af8d849faae62a117 scsi: megaraid-sas: request irqs later
522e66464467543c0d88d023336eec4df03ad40b x86/apic: Disable I/O APIC before shutdown of the local APIC
2885432aaf15c1b7e65c787bfe7c5fec428296f0 x86/apic, doc: Justification for disabling IO APIC before Local APIC
a9cbf0b2195b695cbeeeecaa4e2770948c212e9a powerpc/powernv : Drop reference added by kset_find_obj()
70b565bbdb911023373e035225ab10077e4ab937 cxl: Prevent adapter reset if an active context exists
655e52d2b62458032fc67ff7daaa664af6f36fb5 x86/tsc: Use cpu id defines instead of hex constants
6baf3d61821f5b38f27b4e9f044ad4d1e8f3d14f x86/tsc: Add additional Intel CPU models to the crystal quirk list
906c55579a6360dd9ef5a3101bb2e3ae396dfb97 timekeeping: Copy the shadow-timekeeper over the real timekeeper last
51f9039ffd751dee54fe26609df645bfd128b1d0 scsi: megaraid_sas: Fix the search of first memory bar
748c7201e622d1c24abb4f85072d2e74d12f295f sched/core: Panic on scheduling while atomic bugs if kernel.panic_on_warn is set
088e9d253d3a4ab7e058dd84bb532c32dadf1882 rcu: sysctl: Panic on RCU Stall
66d219014a4ee47ad4ca2b9db5fe6547353e2a56 perf/x86/intel/pt: Move transaction start/stop to PMU start/stop callbacks
86e7972f690c1017fd086cdfe53d8524e68c661c perf/ring_buffer: Introduce new ioctl options to pause and resume the ring-buffer
9ecda41acb971ebd07c8fb35faf24005c0baea12 perf/core: Add ::write_backward attribute to perf event
375637bc524952f1122ea22caf5a8f1fecad8228 perf/core: Introduce address range filtering
1b6de5917172967acd8db4d222df4225d23a8a60 perf/x86/intel/pt: Convert ACCESS_ONCE()s
fd0db10268b3729eb466fd726a39ce7d800bb150 perf trace: Move syscall table id <-> name routines to separate class
5af56fab2b11769e35ce96613d321bcc0f7b84c1 perf tools: Allow generating per-arch syscall table arrays
1b700c9975008615ad470cf79acc8455ce60a695 perf tools: Build syscall table .c header from kernel's syscall_64.tbl
566a08859f63a33746e25246c5cda0f52528d2e4 perf trace: Add support for printing call chains on sys_exit events.
ff0c107806cf9d237e50e21de66d6909391071cd perf evsel: Rename print_ip() to fprintf_sym()
ea4539652eccc87b14fbcbc90467ebcb87f02ddb perf evsel: Introduce fprintf_callchain() method out of fprintf_sym()
44621819ddc9d5d0bfd0b0616c6cf33c94189b67 perf trace: Exclude the kernel part of the callchain leading to a syscall
e68ae9cf7d734e669bc0a981b4154f70d29b5059 perf evsel: Do not use globals in config()
01e0d50c3f95cb1bae2dbfd83173bc2864d6d28c perf evsel: Rename config_callgraph() to config_callchain() and make it public
fde54b7860ffff1c93e6b9abb3fbc3b8b95f2695 perf trace: Make "--call-graph" affect just "raw_syscalls:sys_exit"
fd4be13067ef65bf33b965a18c717889305d5fea perf evsel: Allow unresolved symbol names to be printed as addresses
00768a2bd3245eace0690fcf2c02776a256b66d7 perf trace: Print unresolved symbol names as addresses
202ff9684a912c96e0f2fac65e34280a97ad3611 perf trace: Support callchains for --event too
e20ab86e51218f9949f41fb39a6c4f63b662f135 perf evsel: Move some methods from session.[ch] to evsel.[ch]
59247e33ff494e3643cdff54b64bf72575052b76 perf trace: Do not accept --no-syscalls together with -e
91d7b2de318ff701451dfc7ede1c029b150ef0e9 perf callchain: Start moving away from global per thread cursors
de446b40d5ddb2c3f1fe453ac405543663f9ac5d perf evsel: Remove symbol_conf usage
bfbba189b681c86b9ae380358e5f50ce1e33d240 perf symbols: Move fprintf routines to separate object file
6f736735e30f51805f6be31d20a4bf5b0ae91bae perf evsel: Require that callchains be resolved before calling fprintf_{sym,callchain}
d327e60cfae2201bcdee5aeb9b5a42e3988b184f perf tools: Remove addr_location argument to sample__fprintf_callchain
c6d4a494a207a336b45e52a44550150964daf1ce perf trace: Add --max-stack knob
25da4fab5f66e659da768cd61dbf8c3861104d7c perf evsel: Move fprintf methods to separate source file
5cf9c84e21067ec7a44648aedbc38c197d707258 perf trace: Introduce --min-stack filter
0883e820a0ac18e04f036dbebc3580351d7fd6cf perf record: Export record_opts based callchain parsing helper
056149932602ef905f1e26fc4fe242ef0533a597 perf trace: Make --(min,max}-stack imply "--call-graph dwarf"
f3e459d16a8493b617ccf2a940330279679e0291 perf trace: Bump --mmap-pages when --call-graph is used by the root user
ccd62a896ffe3dbd60f3b7570a2b74e4fe030ed6 perf trace: Fix build when DWARF unwind isn't available
acf2abbd0b7fcc6325e9690a8a32ee924c827f70 perf evsel: Add missign class prefix to has_branch_stack method
922315210b8007a26374e30712813b714af71cac perf script: Check sample->callchain before using it
2ddd5c049e71dd8551c268e7386fefeb7495e988 perf tools: Ditch record_opts.callgraph_set
0c3a6ef4ea54a179328734a45b7f7698e44ad805 perf trace: Make --pf maj/min/all use callchains too
e557b674a9470dae99916be6105e6780b3a072ca perf script: Fix segfault when printing callchains
7ad356159542e1f0dd4703ff3604f67390657f57 perf trace: Make --event honour --min-stack too
1df54290463e84b7b5eb26e5e6472167c3749901 perf trace: Make --pf honour --min-stack too
6404436a63a463d03ef9b5d7cd5edd371e711a95 perf tools: Make the x86 clean quiet
4cb93446c587d56e2a54f4f83113daba2c0b6dee perf tools: Set the maximum allowed stack from /proc/sys/kernel/perf_event_max_stack
5f9cf5992cfb9d9763fb92f755642dda8f9e844f perf tools: Derive trigger class from auxtrace_snapshot
3c1cb7e3723caad9b4c1b2f816d86d8605296a4b perf record: Split output into multiple files via '--switch-output'
eca857ab381858450ec2f91f5aaae7f2f7a7a180 perf record: Force enable --timestamp-filename when --switch-output is provided
0c1d46a8796e8309f1ca693e5cad6f318e4b8159 perf record: Disable buildid cache options by default in switch output mode
be7b0c9e376e93a00b6c8631e2721e9dc7c6a1fa perf record: Generate tracking events for process forked by perf
96c144512263906cc41a25524fa114c90acd3a01 perf trace: Sort summary output by number of events
de7e6a7c8bf9ee46dcbee749bc3cdd0d9c21998a perf hists: Move sort__has_parent into struct perf_hpp_list
2e0453af4e16e97268b9e66aad37beb607ed7c0f perf hists: Move sort__has_sym into struct perf_hpp_list
69849fc5d2119799509026df7a6fd5ffe5a578b3 perf hists: Move sort__has_dso into struct perf_hpp_list
35a634f76c02b98d31397a589544022b478c0e12 perf hists: Move sort__has_socket into struct perf_hpp_list
fa82911a1bdf4f9870ffca097d7fe21128b5639c perf hists: Move sort__has_thread into struct perf_hpp_list
7cecb7fe8388d5c39708d7f07e642ed31bb9d4fe perf hists: Move sort__has_comm into struct perf_hpp_list
9919a65ec532799544dfdfd6df6f994b74c12b42 perf callchain: Fix incorrect ordering of entries
d5d71e86d226abe7e08df5763127ed2bd07649a1 perf trace: Move futex_op beautifier to tools/perf/trace/beauty/
8bf382ce0aef999663bf8d2b02bbfa7da1e9d272 perf trace: Move flock op beautifier to tools/perf/trace/beauty/
446957ba5127141ee007fc61509e24a9e60853d9 powerpc: Fix misspellings in comments.
caa36ed7ba82caa9f685dd04aa10d0bf87ea8b6a perf trace: Only auto set call-graph to "dwarf" when syscalls are being traced
b90dc17a5d14a881f9bb3b58edb3d71075d58afb perf evsel: Add overwrite attribute and check write_backward
1ecf689013b598918cd9a261a078e64571b60f90 devlink: add missing install of header
fbf2671bb8e9c3329c52dae34b06e975a061d0a0 bridge: use DEVICE_ATTR_xx macros
b86f81cca9442ce6cfbe76d10fb8d2c61122ae12 bridge: move br_net_exit() to br.c
f6367b4660dde412f9b7af94763efb1d89cefb74 bridge: use is_skb_forwardable in forward path
b1282726d53465c7362eb134eb335173e8cd5b8c bridge: make br_device_notifier static
204177f3f30c2dbd2db0aa62b5e9cf9029786450 bridge: Support 802.1ad vlan filtering
5e6d243587990a588143b9da3974833649595587 bridge: netlink dump interface at par with brctl
ced8283f90b88bbf7ec9a6b869586b611167394e bridge: implement rtnl_link_ops->get_slave_size and rtnl_link_ops->fill_slave_info
3ac636b8591c37bb5028814a4ebd41d263b56181 bridge: implement rtnl_link_ops->slave_changelink
13323516172178ff8184855ee4bc66d46fd89619 bridge: implement rtnl_link_ops->changelink
20adfa1a81af00bf2027644507ad4fa9cd2849cf bridge: Check if vlan filtering is enabled only once.
c095f248e63ada504dd90c90baae673ae10ee3fe bridge: Fix br_should_learn to check vlan_enabled
93859b13fa7ecef9d4d8bab4a7acc9f212c8fce2 bridge: convert flags in fbd entry into bitfields
007f790c8276271de26416f90d55561bcc96588a net: introduce generic switch devices support
82f2841291cfaf4d225aa1766424280254d3e3b2 rtnl: expose physical switch id for particular device
38dcf357aed299186ecb090cc2f5290cc17d637d bridge: call netdev_sw_port_stp_update when bridge port STP status changes
cf6b8e1eedffd9ef9a22c0c9453d752b07daf89a bridge: add API to notify bridge driver of learned FBD on offloaded device
345cd494a324c149ef7293f4bedf2d7131a6de7c bridge: add new hwmode swdev
4b8ac9660af07be6f6602b523929793eed314997 rocker: introduce rocker switch driver
9f6bbf7cfcb4dd734ce6c3fe7e512274311de380 rocker: implement rocker ofdpa flow table manipulation
6c7079450071f889b4c2b55f8d030b1a5e859401 rocker: implement L2 bridge offloading
ce76ca689dfe0bafba21b0dc002c7f92eb629fd8 rocker: implement ndo_fdb_dump
5111f80cbc759bed12941678bd029fca76512815 rocker: add ndo_bridge_setlink/getlink support for learning policy
e75605822e3190a1bd7935599e93f13ab1ba7c9d rocker: Add proper validation of Netlink attributes
51ace887a0c08cc431f99d46ab63c6b316052640 rocker: Use logical operators on booleans
9b03c71fcd698e6b4529df93a4eb87dd64588bbc rocker: introduce be put/get variants and use it when appropriate
11e6c65a4cb421436a3b533096701c63762db3aa rocker: fix eth_type type in struct rocker_ctrl
1d460b988d97c5283e85c5bd00a7aafd5f1304b7 rocker: remove swdev mode
6cb69742daa1770fe1ce54cf45f8951376518176 net: Do not call ndo_dflt_fdb_dump if ndo_fdb_dump is defined
adedf37b5908de05256913875f1041e838994b49 rocker: fix harmless warning on 32-bit machines
03bf0c281234028388108d0aee720954f5fe6924 switchdev: introduce switchdev notifier
3aeb66176ffa8fefd7a9f7d37bda1d8adcf469a1 net: replace br_fdb_external_learn_* calls with switchdev notifier events
27c00132852b77b12e625cd6a0ccf43d6bf5795f switchdev: fix typo in inline function definition
aafb3e98b27977148c8c86499684f8f5c3decfbb netdev: introduce new NETIF_F_HW_SWITCH_OFFLOAD feature flag for switch device offloads
8a44dbb202617aa66968ba74fdabf1b654dfe661 swdevice: add new apis to set and del bridge port attributes
eb0ac4207f2db7245f07606a2b7929e604b875bd rocker: set feature NETIF_F_HW_SWITCH_OFFLOAD
c158cba38ccd6e7c7787a6ec904d97b9d22537f5 bonding: handle NETIF_F_HW_SWITCH_OFFLOAD flag and add ndo_bridge_setlink/dellink handlers
a16a8ee7f60327086a35b688c78b555a8b4ac363 team: handle NETIF_F_HW_SWITCH_OFFLOAD flag and add ndo_bridge_setlink/dellink handlers
9766e97af1b901ffbb36fcc648e50626d926bb24 net: rocker: Add support for retrieving port level statistics
b7853d73e39b099bbee149cac4c34dbf98f3fefa bridge: add vlan info to bridge setlink and dellink notification messages
7eb344f8731a0327155814f387984dedb1df032a rocker: fix non-portable err return codes
4a6bb6d35980ebbf0d130c516c929ab5e60231f9 rocker: rename lport to pport
e47172ab7e4176883077b454286bbd5b87b5f488 rocker: put port in FORWADING state after leaving bridge
fed0a159c8c5e453d79d6a73897c576efea0a8a5 bridge: fix link notification skb size calculation to include vlan ranges
e65ad3be869b45f90a401d8ce4d4e7381c99ceb0 rocker: add a check for NULL in rocker_probe_ports()
2f56f6be47dbc6883e28107edfe2f9f98f4d5a24 bridge: fix bridge netlink RCU usage
4586f1bb911ce219a4bc1c2a9d6eee2e058b2b51 netdevice: add IPv4 fib add/del ops
5e8d90497d65f528c54015644095ace6e330fd8e switchdev: add IPv4 fib ndo ops wrappers
104616e74e0b464d449fdd2ee2f547d2fad71610 switchdev: don't support custom ip rules, for now
b5d6fbdeede861b52d67b9a4ea3fdfcc6e6865cd switchdev: implement IPv4 fib ndo wrappers
8e05fd7166c6123334b7a739a697d677747aa462 fib: hook IPv4 fib for hardware offload
c1beeef7a32a791a60e2adcc217d4461cd1e25d1 rocker: implement IPv4 fib offloading
e1315db17dc81238e6eb048b2221ccae88d8ef67 switchdev: fix CONFIG_IP_MULTIPLE_TABLES compile issue
8ea696384a1641048a17d1ed3cee4fabb0bf4e03 rocker: fix some sparse warnings
89650ad0047f039b3c3bc0f6a5823bb9c9738152 fib: make netdev_switch_fib_ipv4_abort in header file static inline
0f43deba6f79c8f2004008fe0c0afa23bc061b2f rocker: quiet sparce endianess warnings
1b5ef07e3dd3972d9111650fb6e0f5a566c741d8 rocker: sparse: fix dynamic allocation on stack warning
f4427bc3e2735831fdf66f091429ec328feda246 switchdev: use gpl variant of symbol export
f8f2147150de303e814c0452075d467734d3544b switchdev: add netlink flags to IPv4 FIB add op
ac70c05b6f2b228f778cbde94f64e5df8a2c4d55 switchdev: correct spelling of notifier in comments
4170604feec780d00e7511c24fa0f6e5c2e4ed75 switchdev: add swdev ops
98237d433b98d27fdffb09e4a1a510e9f00c6f31 switchdev: use new swdev ops
812a1c3ff3ee9d5100e0e71edb06681014e84a9b netdev: remove ndo ops for switchdev
04f49faf70d4c056cd6576ff0614bb54e7a70bbc rocker: replace fixed stack allocation with dynamic allocation
db24a9044ee191c397dcd1c6574f56d67d7c8df5 net: add support for phys_port_name
db19170bc0a254b46c732ea4bdf1c6cf0de6b38b rocker: add support for phys_port_name
af615762e972be0c66cf1d156ca4fac13b93c0b0 bridge: add ageing_time, stp_state, priority over netlink
13bb8e2eb37eb3badf5bf4b6bb90e485fbb6b1cd switchdev: kernel-doc cleanup on swithdev ops
558d51fa2f400774ffe3ea76a0df7c1cf92bc598 switchdev: fix stp update API to work with layered netdevices
a6e95cc718c8916a13f1e1e9d33cacbc5db56c0f rocker: handle non-bridge master change
3122a92e80957e30ea9afd963128c6e6c0f5c2ac rocker: fix error return code in rocker_probe()
629161f649ca259cfc1473a98347b941dd7a52bc net: rocker: Use ether_addr_equal
ebb9a03a590e2325f747be43c8db450e92509501 switchdev: s/netdev_switch_/switchdev_/ and s/NETDEV_SWITCH_/SWITCHDEV_/
9d47c0a2d958e06322c88245749278633d333cca switchdev: s/swdev_/switchdev_/
3094333d9089d43e8b8f0418676fa6ae06c27b51 switchdev: introduce get/set attrs ops
f8e20a9f87d33865cc1d67f13da0db8d457fc3c9 switchdev: convert parent_id_get to switchdev attr get
c4f20321d9680760a291991d77bc5b6d0eb2ed78 rocker: support prepare-commit transaction model
3563606258cf3b8f02eabddb1cb45a94c44d9611 switchdev: convert STP update to switchdev attr set
491d0f1533ac750260406dbf84cdad44fd3d8a29 switchdev: introduce switchdev add/del obj ops
6fc3016da7c1587aa59e71f8c4dbc4cf1343eab2 switchdev: add port vlan obj
9228ad26abeec99caf139e6d641e0199c95fd677 rocker: use switchdev add/del obj for bridge port vlans
6004c86718998aee1337efd3b087d6e17284632d switchdev: add bridge port flags attr
47f8328bb1a4115413e35b9b20d04b061ed544f8 switchdev: add new switchdev bridge setlink
fc8f40d8644f15f0fd5fbc49012802a00f36ad55 switchdev: cut over to new switchdev_port_bridge_setlink
e71f220b342d78cfb8ee9f1b60f1351f7183f2a5 switchdev: remove old switchdev_port_bridge_setlink
41c498b9359e360f08723b7605ec0c40926ec415 bridge: restore br_setlink back to original
5c34e0221423aeabc0b085adc5fccda3f91e2c49 switchdev: add new switchdev_port_bridge_dellink
54ba5a0bbc739ae77a217d7340149e6f35934c4b switchdev: cut over to new switchdev_port_bridge_dellink
87a5dae59e7abaad911ab719caa5548dd6df5557 switchdev: remove unused switchdev_port_bridge_dellink
8508025c598bdee33d9afa153e9c00c7771e7d63 bridge: revert br_dellink change back to original
8793d0a664a8a2c5e18e929c1f995c784c105705 switchdev: add new switchdev_port_bridge_getlink
85fdb956726ff2af609e2f6ea7be781e4db74a07 switchdev: cut over to new switchdev_port_bridge_getlink
58c2cb16b116d7feace621bd6b647bbabacfa225 switchdev: convert fib_ipv4_add/del over to switchdev_port_obj_add/del
7889cbee8357aaed85898d028829dfb4f75bae2c switchdev: remove NETIF_F_HW_SWITCH_OFFLOAD feature flag
4725ceb9b70115b210a01d73318ce4430e4f0125 rocker: make checkpatch -f clean
4ceec22d6d89360ff7ebbf53dd3ab4e29e3d8a09 switchdev: bring documentation up-to-date
22c1f67ea5cd3296ee82df7397fb5e5f81eccb98 switchdev: sparse warning: make __switchdev_port_obj_add static
7a7ee5312d133a01cb23626c133ae30692ecb748 switchdev: sparse warning: pass ipv4 fib dst as network-byte order
5eb764edee52e837638b8d55ceace2c68e248cd2 switchdev: align comment with other comments in block
1f5dc44c881281c6573b73366bcfde575074d1b0 switchdev: apply review comments on documentation
42275bd8fcb351f951781d8882f359d25976824b switchdev: don't use anonymous union on switchdev attr/obj structs
eea39946a1f36e8a5a47c86e7ecfca6076868505 rename RTNH_F_EXTERNAL to RTNH_F_OFFLOAD
4133fc0952cbe724161b729fb4cc63a29b5bbbfe rocker: fix a neigh entry leak issue
45d4122ca7cdb3a4b91f392605cd22cfa75f1d99 switchdev: add support for fdb add/del/dump via switchdev_port_obj ops.
3098ac39630c8908fb13cd3137a4629c04df9fe3 rocker: do not delete fdb entries in rocker_port_fdb_flush() when preparing transactions
42e9488971f26c07719e99e33d14811488d31632 rocker: do not modify fdb table in rocker_port_fdb() when preparing transactions
550ecc92feb10fdb7ab1d052707b11bca955de5f rocker: do not make neighbour entry changes when preparing transactions
df6a20673011e89f7fbe3d667eee0a9550679841 rocker: make rocker_port_internal_vlan_id_{get, put}() non-transactional
0985df7390fd7285eb1aeed788107fa56ffdae1f rocker: remove unused rocker_port parameter from rocker_port_kfree
e5054643551f183e1aefb03f5a1f3e903b98368b rocker: mark parameters and local variables as const
534ba6a87d46733b896baa741e8e2f7e722d27c5 rocker: remove rocker parameter from functions that have rocker_port parameter
27b808cbc2ad72608fb2fd9abd81930d32464546 rocker: zero allocate ports array
cec04a60bcd72ce43618ca62da5e0f508e694703 rocker: cleanup vlan table on error adding vlan
bcfd780144371fa0156176fa5518d4dabcd5aab9 rocker: install untagged VLAN (vid=0) support for each port
027e00dc0bc7049e66124a3943efa9defa5cd835 rocker: install/remove router MAC for untagged VLAN when joining/leaving bridge
2aa2ed0864b3cf96479a401c449dd4a3eea15ce8 rocker: remove support for legacy VLAN ndo ops
f5ed2febda3ae51cc382a1341381506cec09248b switchdev: documentation: fix longer-than-80-char lines
d290f1fc7092814ee0e14b80ad09b06af7bd3484 switchdev: documentation: fix grammer error
4b5364fbdce7e4b947e6e76d7341675ea2e12f4d switchdev: documentation: for static FDB ops, use switchdev_port_fdb_xxx ops
7616dcbb212eeec00c9bcc0fecb953fdee60634c switchdev: documentation: use switchdev_port_obj_xxx for IPv4 FIB add/modify/delete ops
af201f723f694c8bf12f80c39c897371c4800d31 switchdev: fix handling for drivers not supporting IPv4 fib add/del ops
57225e7720ac3d7ffcb0086c716753abf6e54e8d switchdev: fix BUG when port driver doesn't support set attr op
7f1095394918c7058ff81c96c3bab3a897e97a9d bridge: use either ndo VLAN ops or switchdev VLAN ops to install MASTER vlans
a07203108494d00efdd8f2fcbf9f2f4f63110e60 rocker: gaurd against NULL rocker_port when removing ports
4d81db4156caef7b223dde07e50db0144d12a192 rocker: fix neigh tbl index increment race
179f9a2590a9f585fe052f87f10a83a84613ee43 rocker: revert back to support for nowait processes
02a9fbfc878ec3e4c17b11d6ac41dfe86667b732 rocker: mark neigh update event processing as 'no wait'
ac28393e8514927e58af99ea12d4ee0eac6d11a8 rocker: mark STP update as 'no wait' processing
92014b97edb6e90901849a6b2c7ca76e43e0fdbb rocker: move MAC learn event back to 'no wait' processing
f66feaa98be00e59d4f4c9759f7b064908f52a5c rocker: move port stop to 'no wait' processing
b4ad7baa01970d2c5096fbbcb0c593e199c6f18b bridge: del external_learned fdbs from device on flush or ageout
10ea5165e44ec8467e393a84ecfbf5732605d504 switchdev: fdb filter_dev is always NULL for self (device), so remove check
3e3a78b49508e58f798cf519876bbb9ca0f931af switchdev: rename vlan vid_start to vid_begin
7d4f8d871ab15bd50a5771382ca2c9355b38d73c switchdev; add VLAN support for port's bridge_getlink
e9fdaec0e0d40f548c2b79e147c7ffd2809d2a64 switchdev: change BUG_ON to WARN for attr set failure case
a076e6bfe7fe92a3825b3d1448e6f988fd033722 rocker: call correct unregister function on error
5c8079d049c8452aeacec96a260200d468afc87d net: switchdev: ignore unsupported bridge flags
77a58c741df1b91258cc4df3e6893ff61e8293a4 rocker: add change MTU support
09cf0211f970311383fdb453bbd5b3beeb294324 bridge: mdb: fill state in br_mdb_notify
2ee94014d9bd3868b1c0d17405f96d63bec83f28 net: switchdev: don't abort unsupported operations
74fe61f17e999a458d5f64ca2aa9a0282ca32198 bridge: mdb: add vlan support for user entries
88d6378bd6c096cb8440face3ae3f33d55a2e6e4 netlink: changes for setting and clearing protodown via netlink.
c305524617dcd617d698dfe2682f3212e698f781 rocker: Handle protodown notifications.
8254973fa3459b512b6c0cd5b0e4641e4d7c048c rocker: forward packets to CPU when port is joined to openvswitch
0c4f691ff6791e55ac831666df0b49b1679c56e4 net: don't reforward packets already forwarded by offload device
d754f98b502ad9a8c7570d494e1eaa0e6bc0350c net: add phys ID compare helper to test if two IDs are the same
1a3b2ec93d4277b121979321b4024b438cb09504 switchdev: add offload_fwd_mark generator helper
3f98a8e636757ce404f305d65dc93e9366112886 rocker: add offload_fwd_mark support
a48037e7c6c25436912f78f48cdbb75a710b7aa9 switchdev: update documentation for offload_fwd_mark
963ad94853000ab100f5ff19eea80095660d41b4 bridge: netlink: fix slave_changelink/br_setport race conditions
1ebd47efa4e17391dfac8caa349c6a8d35f996d1 rocker: free netdevice during netdevice removal
21518a6eb92afa9c285ae7b33dd9357a99224b8f rocker: enable support for scattered packets
95b9be64d1683c4552ab94d94c08bf833561b1c4 rocker: linearize skb in case frags would not fit into tx descriptor
6c4f7780a5dd6773a653c87bf7ee61c6aea6a4e7 rocker: NULL port if port probe fails
ff1470284493ca18da852e36afe39d29d0feb875 rocker: use netdev_err after register_netdev
a7854037da006a7472c48773e3190db55217ec9b bridge: netlink: add support for vlan_filtering attribute
890248261a18c7ae22923095dfadea2c0a2a304a net: switchdev: support static FDB addresses
c8beb5b2613418e7ac1ffaee1f0796e77a4000be rocker: print switch ID consistent with phys_switch_id sysfs node
dd19f83d6cd90e4b7a601da2ed40d2a9d70aaf10 rocker: hook ndo_neigh_destroy to cleanup neigh refs in driver
eb4cb85180cd3baee4a01fd32e296fc28c2cffc1 bridge: fix netlink max attr size
d2d427b3927bd7a0348fc7f323d0e291f79a2779 bridge: Add netlink support for vlan_protocol attribute
0894ae3f0a587bda9733ec4a4b67af7ded3a9498 net: add netif_is_bridge_master helper
fb4bf214346e37778bcf00a89bfb90112859b23c rocker: use new helper to figure out master kind
686ed3047e8727fe3c7eb5a3c63a5e9b1556bbbb rocker: use change upper info
0890cf6cb6ab1af650025670b1a839671a9a3fcb switchdev: fix return value of switchdev_port_fdb_dump in case of error
bf361ad38165939049a2649b1a0078f3268d4bd1 net: bridge: check __vlan_vid_del for error
a471be41f2bfe4ee3a4b38b0e5af17d0abfd3aa6 rocker: track when FDB entry is touched.
4c660496c95af93f3461c06d46fd33c0719625db rocker: store rocker_port in fdb key rather than pport
e7335703e33e7787333872a31e0f4491f9d76cac rocker: adding port ageing_time for ageing out FDB entries
52fe3e2d51d27c0e68b2bea29dea0b64af2c665e rocker: add FDB cleanup timer
45ffda75e145ed7a2b40f6a5de35431d7e62d1f0 switchdev: update documentation on FDB ageing_time
69f5df491e0becb75d2d795add7481a35218d657 switchdev: rename "trans" to "trans_ph".
7ea6eb3f56f45cf4babae8b9a7421868e5005f17 switchdev: introduce transaction item queue for attr_set and obj_add
f8db83486e316ff50f97961a82b614985645508e switchdev: move transaction phase enum under transaction structure
8bdb427206f077cdb567bf34da2e7212ecb2603c switchdev: add switchdev_trans_ph_prepare/commit helpers
76c6f945cc8ec92918ab5459eaa0958dedbfbcfe rocker: push struct switchdev_trans down through rocker code
ac3dbc68a4a74e74f4604207d01456d075394a64 rocker: use switchdev transaction queue for allocated memory
2b8a61a6fd5fdd161ae16e4f76bfb09d6de95ddd switchdev: remove "NONE" transaction phase
9f6467cf229a0e8a7580401b07de2a76e4c8618d switchdev: remove "ABORT" transaction phase
f623ab7f51b1bfb523c9cd492747392abf3c4421 switchdev: reduce transaction phase enum down to a boolean
2594e9064a57634efc146ff4e89a5de562e05011 bridge: vlan: add per-vlan struct and move to rhashtables
e23b002b23dfdcd12ca982fbc57dcb071a1fee62 net: switchdev: remove dev in port_vlan_dump_put
e02a06b2a7c6e8b43c60ed8e0181172231af13d7 net: switchdev: move dev in switchdev_fdb_dump
03d5fb18626aff95426a380aef0d1c6904cac7c9 net: switchdev: remove dev from switchdev_obj cb
25f07adc473f05f850efc9414b9da3374563015f net: switchdev: pass callback to dump operation
ab06900230181b5a717b1e1a39c44e96f6292e71 net: switchdev: abstract object in add/del ops
44bbcf5c4a19a8be43ba35ca7e22310e171f022c net: switchdev: extract struct switchdev_obj_*
8af78b6487856d8a896ba15e9255b8e5fa91eb5f bridge: vlan: adjust rhashtable initial size and hash locks size
468e7944589c7f096bb4ea14db17980aa6c2766c bridge: vlan: fix possible null vlgrp deref while registering new port
77751ee8aec3e1748e0d1471ccbfc008793e88a6 bridge: vlan: move pvid inside net_bridge_vlan_group
263344e64c0a2ac0e409a1a3f27effb6d57b853e bridge: vlan: fix possible null ptr derefs on port init and deinit
248234ca029710fbad6423c48f98c2a6ea9582fb bridge: vlan: don't pass flags when creating context only
57d80838dae55c1bc6ca629e471c84100513079a switchdev: rename SWITCHDEV_OBJ_* enum values to SWITCHDEV_OBJ_ID_*
1f86839874a50c9ee2009567d2f312b1e1949e24 switchdev: rename SWITCHDEV_ATTR_* enum values to SWITCHDEV_ATTR_ID_*
8f24f3095dcedaa4eb4719eee2bed738fe2ce4a0 switchdev: rename switchdev_obj_vlan to switchdev_obj_port_vlan
52ba57cfdc4c90da3bf996dfbe0c5feb731eb477 switchdev: rename switchdev_obj_fdb to switchdev_obj_port_fdb
648b4a995a057187ddd77cdb181e6a0b24ab2959 switchdev: bring back switchdev_obj and use it as a generic object param
9e8f4a548ab4710002c23c94c4b1bbde91b5e335 switchdev: push object ID back to object structure
586c2b573ee4c2c4ba03e16318a16614ebf876f8 bridge: vlan: use rcu list for the ordered vlan list
f8ed289fab843fbc9251aa2f5c3d416f09b5fc7e bridge: vlan: use br_vlan_(get|put)_master to deal with refcounts
2ffdf508d278d48ccb928238846df352db21f4eb bridge: vlan: drop master_flags from __vlan_add
6be144f62f64c8a67e11b2f8b86c7bf390b87411 bridge: vlan: use br_vlan_should_use to simplify __vlan_add/del
7910228b6bb35f3c8e0bc72a8d84c29616cb1b90 bridge: netlink: add group_fwd_mask support
5127c81f84de0dd643d5840a2c7de571bc6aceb3 bridge: netlink: export root id
7599a2201fc71cdca16a92d350f14cce8730e03f bridge: netlink: export bridge id
8762ba680fe8d41b444fc92f90ce7194b2b8303b bridge: netlink: export root port
684dd248bee8c73eadb90706123bf1494d3218b8 bridge: netlink: export root path cost
ed4163098e3090bb7b51421bde977e355275a554 bridge: netlink: export topology_change and topology_change_detected
d76bd14e0f759040efc8ce142dd6d1f9eca33d39 bridge: netlink: export all timers
111189abc5c3f0ea6f516a6c3e8d8c3a2cf391d9 bridge: netlink: add group_addr support
150217c688217e549ef8a36ea4f6718977373765 bridge: netlink: add fdb flush
a9a6bc70f5f70b3835b081e401b469b88c7c8a3a bridge: netlink: add support for multicast_router
89126327f921bd278c72284d38428443bbef344f bridge: netlink: add support for multicast_snooping
295141d9049bdf4fa316b325d2e2501b210dbe06 bridge: netlink: add support for multicast_query_use_ifaddr
ba062d7cc6a09a8194eba975d5ee635378a55bfc bridge: netlink: add support for multicast_querier
431db3c050af0be72b3b01fa7484982f35cb268f bridge: netlink: add support for igmp's hash_elasticity
858079fdae16421d4908722140346cfdddedf343 bridge: netlink: add support for igmp's hash_max
79b859f573d6afa64e328cc7f50ad7a209e0c92d bridge: netlink: add support for multicast_last_member_count
b89e6babad4b7ca7298ad863c6c83dc76b0abdef bridge: netlink: add support for multicast_startup_query_count
7e4df51eb35deedd3ba8d4db92a6c36fb7eff90a bridge: netlink: add support for igmp's intervals
93870cc02a0af4392401713d14235accafc752bc bridge: netlink: add support for netfilter tables config
0f963b7592ef9e054974b6672b86ec1edd84b4bc bridge: netlink: add support for default_pvid
4917a1548ff41e53d863d6845b4da1884e4282b4 bridge: netlink: make br_fill_info's frame size smaller
4ebc7660ab4559cad10b6595e05f70562bb26dc5 bridge: netlink: export port's root id
80df9a2692edf7afffda9282e716e7b1df198e07 bridge: netlink: export port's bridge id
96f94e7f4a216282a24819968184c881e6343692 bridge: netlink: export port's designated cost and port
42d452c4b5e7bf0e3024fa9512ec462f70545ae5 bridge: netlink: export port's id and number
e08e838ac5707cb1f1294e0d53b31997a0367b99 bridge: netlink: export port's topology_change_ack and config_pending
61c0a9a83e0b12c712cd686172446aba8ea48685 bridge: netlink: export port's timer values
9b0c6e4deb3df91bf0aea8158ea77dc58c9d90b6 bridge: netlink: allow to flush port's fdb
5d6ae479ab7ddf77bb22bdf739268581453ff886 bridge: netlink: add support for port's multicast_router attribute
3741873b4f73b572b8f8835e6bd114e08316a160 bridge: allow adding of fdb entries pointing to the bridge device
f55ac58ae64cbb0315382e738681fe31837dcac0 switchdev: add bridge ageing_time attribute
464314ea6c119ebc22ee78453e63814453c31611 switchdev: skip over ports returning -EOPNOTSUPP when recursing ports
c62987bbd8a1a1664f99e89e3959339350a6131e bridge: push bridge setting ageing_time down to switchdev
d0cf57f9dddb50ea404bf747a3c6b22b29f82b9a rocker: handle setting bridge ageing_time
0944d6b5a2fad9ba3b7abb2e94a6b7d40cd4a935 bridge: try switchdev op first in __vlan_vid_add/del
cc02aa8e41c50f690d0bb22ed5629468483421b7 switchdev: enforce no pvid flag in vlan ranges
87aaf2caed8496404d3809edc30d38d4a4a5d273 switchdev: check if the vlan id is in the proper vlan range
af3793921d49a772ec1079449219bad4baa0bc96 bridge: fix gc_timer mod/del race condition
907b1e6e83ed25d9dece1e55b704581b6c127051 bridge: vlan: use proper rcu for the vlgrp member
e9c953eff7f0ec69a52cfa87b912ab48902a0314 bridge: vlan: use rcu for vlan_list traversal in br_fill_ifinfo
b8d02c3cace37393bf9ff0a9eaa1ee39cda1d259 bridge: vlan: drop unnecessary flush code
f409d0ed87d2721e1099ce36266e98c5aea2d486 bridge: vlan: move back vlan_flush
793f40147e82cdedc80971fa7f5596d6ed1e555e switchdev: introduce switchdev deferred ops infrastructure
f7fadf3047d005d17376da65aa9e5734f45a77d4 switchdev: make struct switchdev_attr parameter const for attr_set calls
0bc05d585d381c30de3fdf955730df31593d2101 switchdev: allow caller to explicitly request attr_set as deferred
850d0cbc9171f63f0418afffb0d89a84db927851 switchdev: remove pointers from switchdev objects
4d429c5ddc5128fccd3048059ae26bb39f0d8284 switchdev: introduce possibility to defer obj_add/del
56607386e80cc7ce923592e115a3492485b47c72 bridge: defer switchdev fdb del call in fdb_del_external_learn
d33eeb645d59ffd14bbc6db977c3783af42dd700 rocker: remove nowait from switchdev callbacks.
771acac2ffa5957b91e881908cd4c9657978a209 switchdev: assert rtnl mutex when going over lower netdevs
573c7ba006edbecff0714db651dd3602b9d0a6a0 net: introduce pre-change upper device notifier
b7af1472afa2228bd9fe8b4cea3b003b4027d72d bridge: set is_local and is_static before fdb entry is added to the fdb hashtable
741af0053b43d8b9a688a12c57ece62338616ae8 switchdev: Add support for flood control
371e59adcebf9953385bf46d5325ac39a53c5520 switchdev: Make flood to CPU optional
3a7bde55a11c4a22a6ccfc487993d621ae8e3688 switchdev: fix: erasing too much of vlan obj when handling multiple vlan specs
e258d919b175e0160a694a20fb309e29fc93d7b1 switchdev: fix: pass correct obj size when deferring obj add
07bc588fc1087929e8e6dfe95ffcee1cb69a240f bridge: vlan: Prevent possible use-after-free
ddd611d3fffb90b967e50f5aa6d45d55eb0e1d3f bridge: vlan: Use correct flag name in comment
eca1e006cf6f6f66a1a90c055a8a6d393475c3f9 bridge: vlan: Use rcu_dereference instead of rtnl_dereference
0c63d80c3fac4e6eb0f01dff756e47bc7cd50092 switchdev: respect SKIP_EOPNOTSUPP flag in case there is no recursion
bbe14f54297467ddb23b7d1db564a2468c6ae151 switchdev: bridge: Check return code is not EOPNOTSUPP
24cb7055a3066634a0f3fa0cd6a4780652905d35 net: switchdev: fix return code of fdb_dump stub
c981e4213e9d2d4ec79501bd607722ec712742a2 net: add netif_is_team_master helper
6dffb0447c25476f499d205dfceb1972e8dae919 net: propagate upper priv via netdev_master_upper_dev_link
29bf24afb29042f568fa67b1b0eee46796725ed2 net: add possibility to pass information about upper device via notifier
8fd728566a354f7bc9cb6e781f185b8c39cf505b team: fill-up LAG changeupper info struct and pass it along
41f0b0496466d6e0e8245f94a79889234cde5e3c bonding: fill-up LAG changeupper info struct and pass it along
04d482660a07039fc4e9a42bb3517db236d98f96 net: introduce change lower state notifier
5d397061ca2081d8a99e4bee5792122faa6aaf86 bonding: allow notifications for bond_set_slave_link_state
f7c7eb7f7af7f87e0fc150994785fd139576e43a bonding: implement lower state change propagation
57beaca8ecd77c85087270ef15ff319767994f6d bonding: set inactive flags on release
9d547833f02fb8b52ab824adae8f850f3c22fd4f switchdev: vlan: Use switchdev_port* in vlan_netdev_ops
6ff64f6f9242d7e50f3e99cb280f69d1927a5fa6 switchdev: Pass original device to port netdev driver
08474cc1e6ea71237cab7e4a651a623c9dea1084 bridge: Propagate vlan add failure to user
81435c33e062cbd4508da6f64655cb0967eeb65f switchdev: add bridge vlan_filtering attribute
6b72a770202a0ad843312436dd50ed4690d7cc65 bridge: add vlan filtering change notification
404cdbf0894a0707dd19179d2e21a3ab37f33f54 bridge: add vlan filtering change for new bridged device
4d41e12593a9a6c4aaf113d44c8c619067b2b0aa switchdev: Adding MDB entry offload
4f5590f8cd736768170818d1b7ea0075972e2701 switchdev: Adding IGMP snooping documentation
366ce60315292a579b8ceae2777102e1954a2024 mlxsw: spectrum: Add FDB lock to prevent session interleaving
4f2c6ae5c64c353fb1b0425e4747e5603feadba1 switchdev: Require RTNL mutex to be held when sending FDB notifications
157ede6784ba2837c7dc43f195418c75927f8488 bridge: mdb: add support for offloaded mdb entries
9d06b6d8a3fcba8eb8e1c62c92942452afea8057 bridge: mdb: Separate br_mdb_entry->state from net_bridge_port_group->state
9e8430f8d60d985c9f292b5eb5790cc13a87200c bridge: mdb: Passing the port-group pointer to br_mdb module
b15edf852a2a92ccc0ad77340b9d032545953c43 rocker: remove unused rocker_port param from alloc funcs and shorten their names
0fe685f6a2831c8868e0a4389c76521d7fd42026 rocker: rename rocker.h to rocker_hw.h
11ce2ba3d05b3ac330022da1f83b589a4f78569c rocker: rename rocker.c to rocker_main.c
de1521923c0f2ee9c6328ad6b3e46e662d88a3cd rocker: push tlv processing into separate files
e1ba3dee77c450fe3cea00a334f30174f5cc0aa1 rocker: implement get settings mode command
0514c4e809a93544253ba5fb797379fa9cc45cce rocker: move rocker and rocker_port structs into header
e420114eef4a3a5025a243b89b0dc343101e3d3c rocker: introduce worlds infrastructure
c1fe922e15ee73b0dd9fe6a9b08bdc204a7d7428 rocker: pass "learning" value as a parameter to rocker_port_set_learning
ca0a5f2a39cbc3bcbbcc651e82758fa135ac1b9b rocker: pre-allocate wait structures during cmd ring init
ae3907ecedb91c10ab8fd8b42ef62431206eee83 rocker: remove trans parameter to rocker_cmd_exec function
53901cc03a361f57127ed1ae967c72ee9e137454 rocker: call rocker_cmd_exec function with "nowait" boolean instead of flags
3fbcdbf3f1cbe86fc11856ec268470d7d7bd459b rocker: move OF-DPA stuff into separate file
fccd84d44912a15bea4a2265f5437f18330e7ce1 rocker: return -EOPNOTSUPP for undefined world ops
7fbac984f33a374a06fa7b1fc41127bdaf7d6c07 bridge: switchdev: Offload VLAN flags to hardware bridge
7c25b16dbbcf37ce8019bacf634ee47d852225d9 net: bridge: log port STP state on change
76cc173d48d9ed2206a1affe13b70d0e8e134010 bridge: mdb: reduce the indentation level in br_mdb_fill_info
2125715635053d4207a756a35aa718f548824e58 bridge: mdb: add support for more attributes and export timer
a30a9ea6e21b495372aff549f3dfd63198bd1f45 rocker: fix rocker_world_port_obj_vlan_add()
f73e0c24bf075cf934e73133f5e89052afac1d32 rocker: fix an error code
88de1cd457e5cb664d6d437e2ea4750d089165f5 rocker: set FDB cleanup timer according to lowest ageing time
4c656c13b254d598e83e586b7b4d36a2043dad85 bridge: allow zero ageing time
3a8befcd7872f572882ad7e14994a17f9b55dd4e rocker: move ageing_time from struct rocker to struct ofdpa
ed49e650371008b0e00c8004cc2ca93055740f78 net: add description for len argument of dev_get_phys_port_name
3e347660488818070bff7533f8561928e09e1d65 switchdev: fix typo in comments/doc
5e263f712691615fb802f06c98d7638c378f5d11 bridge: Allow set bridge ageing time when switchdev disabled
c57c7a95da842807b475b823ed2e5435c42cb3b0 rtnl: fix msg size calculation in if_nlmsg_size()
75f3a1018f0103025558caa60e24132a4cc9ce8f switchdev: Use switch ID in suggested udev rule
7ceb2afbd6aee4643056b47156baad6841db8e78 switchdev: Adding complete operation to deferred switchdev ops
6dd684c0feb207f30180570bad24264b922d9476 bridge: mdb: Common function for mdb entry translation
45ebcce56823d14d196dbdecd26783b3d5f464a6 bridge: mdb: Marking port-group as offloaded
0b148def403153a4d1565f1640356cb78ce5109f bridge: Don't insert unnecessary local fdb entry on changing mac address
da4ed55165d41b1073f9a476f1c18493e9bf8c8e switchdev: pass pointer to fib_info instead of copy
8438884d4ab423161b974854ebb90c08219dd678 net/switchdev: Export the same parent ID service function
8fbb89c6fbfd1cda9ae413cd1e042837a8edbdeb net: switchdev: Drop EXPERIMENTAL from description
599b076d15ee3ead7af20fc907079df00b2d59a0 i40e: fix call of ndo_dflt_bridge_getlink()
1bc74f1ccd457832dc515fc1febe6655985fdcd2 powerpc/powernv: Fix stale PE primary bus
fbce44d0ed42e4653172376f4dfeaa5710f06a27 powerpc/powernv: Call opal_pci_poll() if needed
fd7bacbca47a86a6f418440d8a5d7b7edbb2f8f9 KVM: PPC: Book3S HV: Fix TB corruption in guest exit path on HMI interrupt
bd7f561f76563f0b21701628874d8adc863b0c25 powerpc/smp: Support more IPI messages
79b6c247e9afe35714c1f83cfcecf40a438ca4a4 KVM: PPC: Book3S HV: Host-side RM data structures
6f3bb80944148012cbac1f98da249f591cbcae43 KVM: PPC: Book3S HV: kvmppc_host_rm_ops - handle offlining CPUs
0c2a66062470cd1f6d11ae6db31059f59d3f725f KVM: PPC: Book3S HV: Host side kick VCPU when poked by real-mode KVM
e17769eb8c897101e2c6df62ec397e450b6e53b4 KVM: PPC: Book3S HV: Send IPI to host core to wake VCPU
520fe9c607d3acea96391aad27e17518bd7d39bd KVM: PPC: Book3S HV: Add tunable to control H_IPI redirection
e784930bd645e7df78c66e7872fec282b0620075 PCI: Export pcie_find_root_port
bdecf76e319a29735d828575f4a9269f0e17c547 cxl: Fix coredump generation when cxl_get_fd() is used
885a78d4a5b3ad2d7c41d1819b001d7957f442cd module: Ensure a module's state is set accordingly during module coming cleanup code
235539b48a2357da28f52d66d04bec04f3dcb9dd kvm: add stubs for arch specific debugfs support
4f5758fc67607b915c7513baf0438a35a5fc457c kvm: x86: export TSC information to user-space
ecc83e52b28c707da3e7fb8aa471417d9c0d1ec7 intel-hid: new hid event driver for hotkeys
1c319e781e0ecc48228081558f38044a11c7a76e intel-hid: fix incorrect entries in intel_hid_keymap
e8b69a51b4e72a168e8b3bc5fcac39a7de339864 intel-hid: allocate correct amount of memory for private struct
45aa56cd0ffc2ebc2274f1bacc985b6f032c0120 intel-hid: add a workaround to ignore an event after waking up from S4.
1d6de071cb0c321279373634d81eb8e176d887c4 intel-hid: Remove duplicated acpi_remove_notify_handler
be0aec23bf4624fd55650629fe8df20483487049 x86/mce/AMD, EDAC: Enable error decoding of Scalable MCA errors
8dd1e17a55b0bb1206c71c7a4344c5e3037cdf65 x86/mce/AMD: Fix logic to obtain block address
a9750a31efdee79bea4ad1db93cf98a5db6e07ac x86/mce: Define vendor-specific MSR accessors
d9d73fcc878469d209d7a7030726f20dd10841a7 x86/mce: Detect and use SMCA-specific msr_ops
34102009580a047c02b21f089f7fc7f65e605887 x86/mce/AMD: Log Deferred Errors using SMCA MCA_DE{STAT,ADDR} registers
39c06df4dc10a41de5fe706f4378ee5f09beba73 x86/cpufeature: Cleanup get_cpu_cap()
71faad43060d3d2040583635fbf7d1bdb3d04118 x86/cpu: Add detection of AMD RAS Capabilities
a348ed83d9efe8c11ecc85c15d7329825b97431e EDAC, mce_amd: Detect SMCA using X86_FEATURE_SMCA
db819d60f6720080150a365080ff656cf239f88f x86/mce: Add support for new MCA_SYND register
b300e87300b68120aa5374341b252875a1cb6ea1 EDAC/mce_amd: Print syndrome register value on SMCA systems
cfee4f6f0b2026380c6bc6913dbd27943df17371 x86/mce/AMD: Read MSRs on the CPU allocating the threshold blocks
c019b951e1f9f1de0c5b0726032e3adf34c523a7 EDAC/mce_amd: Add missing SMCA error descriptions
856095b1794be487527771dbd2fe28e34e94b266 EDAC/mce_amd: Use SMCA prefix for error descriptions arrays
5896820e0aa32572ad03b30563c539655b6c6375 x86/mce/AMD, EDAC/mce_amd: Define and use tables for known SMCA IP types
87a6d4091bd795b43d684bfc87253e04a263af1c x86/mce/AMD: Update sysfs bank names for SMCA systems
5828c46f2c07b97d758da6dc6afd5c374768d44d x86/mce/AMD: Save MCA_IPID in MCE struct on SMCA systems
4b711f92c9b21878794597997ecda1428acc334c x86/mce, EDAC/mce_amd: Print MCA_SYND and MCA_IPID during MCE on SMCA systems
4f29b73bae158e3635b8f289f77376b054904ef5 x86/mce/AMD: Extract the error address on SMCA systems
92082a8886f30a1c492a31ac4b5a4966bb64b1a6 ACPI: add AMD ACPI2Platform device support for x86 system
5ef86b74209db33c133b5f18738dd8f3189b63a1 serial: 8250_dw: add support for AMD SOC Carrizo
f5eda99ee6c0c3e85be9d6f20685151514d5102f ACPI / APD: Add device HID for future AMD UART controller
f06e5153f4ae2e2f3b0300f0e260e40cb7fefd45 kernel/panic.c: add "crash_kexec_post_notifiers" option for kdump after panic_notifers
f45d85ff1f3f13d5b67fecb291edc6a771db0c53 kernel/panic: call the 2nd crash_kexec() only if crash_kexec_post_notifiers is enabled
5375b708f2547f70cd2bee2fd8663ab7035f9551 kernel/panic/kexec: fix "crash_kexec_post_notifiers" option issue in oops path
b26e27ddfd2a986dc53e259aba572f3aac182eb8 kexec: use core_param for crash_kexec_post_notifiers boot option
0ee59413c967c35a6dd2dbdab605b4cd42025ee5 x86/panic: replace smp_send_stop() with kdump friendly version in panic path
c194f7ea7f68f2690533832ec22f0d7ed4f2d74d PCI/IOV: Rename and export virtfn_{add, remove}
9312bc5bab5907937db20c9f8c094d0c02dd78db powerpc/powernv: Support EEH reset for VF PE
0dc2830e0a48d520c7db7cc55dbbd0edefac02f5 powerpc/powernv: Support PCI config restore for VFs
67086e32b56481531ab1292b284e074b1a8d764c powerpc/eeh: powerpc/eeh: Support error recovery for VF PE
3fa7bf7229993eac65fd6ade2ffc5f75150b40e1 powerpc/eeh: Don't remove passed VFs
7e75f74a171a8146cc3ee92d5562878b40c25fb5 rtnetlink: fix rtnl_vfinfo_size
f21278108204ab244cd534a0d45c174ecc559267 net: ipv6: mld: document force_mld_version in ip-sysctl.txt
6ce8e9ce5989ae13f493062975304700be86d20e new helper: memcpy_from_msg()
e53743994e21d2458f0129d07b253d66f96f5742 af_iucv: use paged SKBs for big outbound messages
2e4e44107176d552f8bb1bb76053e850e3809841 net: add alloc_skb_with_frags() helper
764d3be6e415b40056834bfd29b994dc3f837606 ipv6: bump genid when the IFA_F_TENTATIVE flag is clear
dcee75b3b7f025cc6765e6c92ba0a4e59a4d25f4 perf/x86/intel/rapl: Support Skylake RAPL domains
c416e5aa40c51b3e8ae75a3e122dd5eabce078cd x86/perf/rapl: Reorder model numbers
31b84310c79421d726621e800434c66a48a6c959 x86/perf/rapl: Add missing Broadwell model
7f2236d0bf9a33bb539551b653ae842430654240 perf/x86/rapl: Use Intel family macros for RAPL
348c5ac6c7dc117e1de095bf07c86c31101d56f3 perf/x86/rapl: Add Skylake server model detection
2668c6195685f4b6f281767d10b4f4f2e32c2305 perf/x86/rapl: Enable Apollo Lake RAPL support
36c4b6c14d20b37fda79cbcd3e8ef7d11f5ef9dc perf/x86/intel/rapl: Add Knights Mill CPUID
86565682e9053e5deb128193ea9e88531bbae9cf atl1c: Work around the DMA RX overflow issue
b0999223f224187318c67f1de653e34fb1f04f6b alx: add ability to allocate and free alx_napi structures
702e84185f472457912c641d8c0cc0cc786310eb alx: switch to per queue data structures
e0eac25460902a4eda07c0e9b3e749d198e074fa alx: prepare interrupt functions for multiple queues
a4076d347f9a27cdd85186bef2f4207b6187c35e alx: prepare resource allocation for multi queue support
2e06826bc659e0ff664b709719d746b7b088827b alx: prepare tx path for multi queue support
f58e0f77471b913c18fc253c90fd7bb8ee6fca3f alx: enable msi-x interrupts by default
d768319cd4277ef1cfa1e04792adb0aeea40cca6 alx: enable multiple tx queues
db0a6fb5d97afe01fd9c47d37c6daa82d4d4001d audit: add tty field to LOGIN event
1b3c47c182aac70c4487105d2e22a17f0193525f nvme: Log the ctrl device name instead of the underlying pci device name
f4f0f63e6f01055dfbdb7bc5e83935e1bdfa1980 nvme: fix drvdata setup for the nvme device
4490733250b8b272a6d3e66352dd7b8025409549 nvme: make SG_IO support optional
576d55d625664a20ee4bae6500952febfb2d7b10 nvme: split pci module out of core module
1cb3cce5eb9de335330c8a147e47e3359a51a8b5 nvme: return the whole CQE through the request passthrough interface
d783e0bd02e700e7a893ef4fa71c69438ac1c276 nvme: avoid cqe corruption when update at the same time as read
58b45602751ddf16e57170656670aa5a8f78eeca nvme: add helper nvme_map_len()
37e58237a16b94fcd2c2d1b7e9c6e1ca661c231b block: add offset in blk_add_request_payload()
8093f7ca73c1633e458c16a74b51bcc3c94564c4 nvme: add helper nvme_setup_cmd()
82b4552b91c40626a90a20291aab1137c638b512 nvme: Use blk-mq helper for IO termination
7e19793096994d43d213f440f4bbea926828a727 NVMe: silence warning about unused 'dev'
b31356dfde571d925768783f1bb63ca8e156d0b3 NVMe: small typo in section BLK_DEV_NVME_SCSI of host/Kconfig
3b24774e1fb90a40836e96e39a851a774679efff NVMe: Fix check_flush_dependency warning
bb8d261e088811ef2b564d745afcd1633428010a nvme: introduce a controller state machine
92911a55d42084cd285250c275d9f238783638c2 nvme: tighten up state check for namespace scanning
5955be2144b3b56182e2175e7e3d2ddf27fb485d nvme: move namespace scanning to core
f866fc4282a81673ef973ad54c68235a3263b42e nvme: move AER handling to common code
d011fb3164e8694d7839f10a497f8ab6c660149a NVMe: Reduce driver log spamming
0ff9d4e1a284a9282a049bf064f123e27f838907 NVMe: Short-cut removal on surprise hot-unplug
32f0c4afb4363e31dad49202f1554ba591d649f2 nvme: Remove RCU namespace protection
c2791b806988100cc1c047e2b0b5c5d0914aa3b6 PCI/MSI: Rename "struct msi_chip" to "struct msi_controller"
3657cebda5eb9dc1c4c6a0ea5b38bfef70aea50a PCI: Add quirk for Intersil/Techwell TW686[4589] AV capture cards
2b4aed1d1f119634d80d8c701873c2be01480aa9 PCI: Shift PCI_CLASS_NOT_DEFINED consistently with other classes
ac10836b681289f7e430e52b106a209bbdcaa75e PCI: pciehp: Simplify pcie_poll_cmd()
a86760664f4cf44c0981ac0c91777eed3a2970e4 PCI/MSI: Export all remapped MSIs to sysfs attributes
7c7a0e945349a3d0d497d7f32db6ed33d4031110 ARM/PCI: Move align_resource function pointer to pci_host_bridge structure
9c7417022ded5700a4b1a11da59951ebf080e4e0 drm/i915/kbl: Remove preliminary_hw_support protection from KBL.
0c6045d8c0eff0f7784f310407ccad44f622aa40 PCI: hv: Use zero-length array in struct pci_packet
617ceb62eaa1a180e8af1be9903d960c3a0b2ebc PCI: hv: Remove the unused 'wrk' in struct hv_pcibus_device
0de8ce3ee8e38cc66683438f715c79a2cc69539e PCI: hv: Allocate physically contiguous hypercall params buffer
1e90a13d0c3dc94512af1ccb2b6563e8297838fa x86/smpboot: Init apic mapping before usage
c95ba92afb238ac565c68968fc72e38ca8d1b6e8 kvm: nVMX: fix nested tsc scaling
dac582417bc449b1f7f572d3f1dd9d23eec15cc9 storvsc: Properly support Fibre Channel devices
59635018f9b7ae8b3e304d7a5da6f628b5a1dcf6 storvsc: Refactor the code in storvsc_channel_init()
03996f2064a5c5b7c1bd942794d622179acf2d61 storvsc: Tighten up the interrupt path
d791a8c60e9cbd1c4fecbc5c86ff59c7ffe137e8 storvsc: Install the storvsc specific timeout handler for FC devices
fbf198030e0b027538c290300cfaf9e2efdce122 genirq: Add default affinity mask command line option
35f040df97fa0e94c7851c054ec71533c88b4b81 zfcp: retain trace level for SCSI and HBA FSF response records
aceeffbb59bb91404a0bda32a542d7ebf878433a zfcp: trace full payload of all SAN records (req,resp,iels)
e7cb08e894a0b876443ef8fdb0706575dc00a5d2 scsi: zfcp: spin_lock_irqsave() is not nestable
1738cd3ed342294360d6a74d4e58800004bff854 net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)
6e22066fd02b675260b980b3e42b7d616a9839c5 net: ena: Fix error return code in ena_device_init()
184b49c89f39f5c5ad262a6456248284e10984c6 net: ena: change the return type of ena_set_push_mode() to be void.
1425052097b53de841e064dc190a9009480c208c gpio: add IRQ chip helpers in gpiolib
03b054e9696c3cbd3d5905ec96da15acd0a2fe8d pinctrl: Pass all configs to driver on pin_config_set()
7981c0015af26323281c937c8983dfeabc3395fe pinctrl: intel: Add Intel Sunrisepoint pin controller and GPIO support
551fa5801ef10298aa1f43e5e95355e2dd5cb3bb pinctrl: intel: sunrisepoint: Add Intel Sunrisepoint-H support
0d9a693cc8619b28f0eeb689a554647d42848fde gpio / ACPI: Add support for _DSD device properties
c884fbd452147e952ae160e750553d00ea4dc4c9 gpio / ACPI: Add support for retrieving GpioInt resources from a device
dab472eb931bc2916fa779e56deccd0ec319cf5b i2c / ACPI: Use 0 to indicate that device does not have interrupt assigned
845c877009cf014b971aab7f54613f9185a824b0 i2c / ACPI: Assign IRQ for devices that have GpioInt automatically
9ee6c5dc816aa8256257f2cd4008a9291ec7e985 ipv4: allow local fragmentation in ip_finish_output_gso()
7edd7e82b96bcbcc2f9437449df29fde0f08295e console: Move userspace I/O out of console_lock to fix lockdep warning
f2fb6bef92514432398a653df1c2f1041d79ac46 perf/core: Optimize side-band event delivery
aab5b71ef2b5c62323b9abe397e2db57b18e1f78 perf/core: Rename the perf_event_aux*() APIs to perf_event_sb*(), to separate them from AUX ring-buffer records
a4f144ebbdf6f7807c477bce8e136047ed27321f perf/core: Fix crash due to account/unaccount_sb_event() inconsistency
4059ffd09d694f704e18a4baf97fc0016c32e9ad perf/core: Fix file name handling for start/stop filters
12b40a2393719a37ff86a0b43bece6d28a75cbfc perf/core: Update filters only on executable mmap
99f5bc9bfa9094e7c264a8e09f9507b391a3d1d1 perf/core: Enable mapping of the stop filters
90525176d71995ffde2d0c532f2758304c666a08 perf evsel: Provide way to extract integer value from format_field
814b3f5127248db90e5d9983668a44eec7b45c02 perf tools: Remove some unused functions
0aab21363ffa66d6e7340bc50cc5bfae865fd1a6 perf record: Add --dry-run option to check cmdline options
7da36e94e7fad768ca8640b61ed1f49b284e1dc5 perf evsel: Fix write_backwards fallback
41840d211c518e6af6e327b03e09323824e563bf perf config: Move config declarations from util/cache.h to util/config.h
e5cadb93d0839d268a7c4199e0fdef0f94722117 perf evlist: Rename for_each() macros to for_each_entry()
98a91837dd1751e730f8265129b376450f41dcfd perf rb_resort: Rename for_each() macros to for_each_entry()
e216708d982a1c262f411fee2fcac2bd9ec93a32 perf script: Add callindent option
f5ce45736b5036e73e7ffa800a1137ad778d186e perf build: Add libbabeltrace to build-test
f8e018704cdf2a741477b8fd8ee0a313caf87f72 perf trace beauty flock: Add missing fcntl.h include
4c7c224ac4a4735288bc9e5377e43844aa2c9393 perf trace beauty flock: Add more conditional defines
78478269d2c9be315164d15c14e6e222a06d2f40 perf llvm: Use realpath to canonicalize paths
175729fc2c5144e9eee06b3483c5c9798f7062a5 perf tools: Remove needless includes from cache.h
d0761e37fe3fed7810ed8d6e130b79359f0c3e13 perf tools: Uninline scnprintf() and vscnprint()
c4b6014e8bb0c8d47fe5c71ebc604f31091e5d3f tools: Add copy of perf_event.h to tools/include/linux/
971e827bffef781dd089a402fe602ff20c1f1819 tools lib bpf: Copy bpf.h and bpf_common.h from the kernel
12f020338a2ca5db99db40b3cf8e4df88744c541 tools: Copy uapi/asm/perf_regs.h from the kernel
4998a1224686d74ab7f7789787f7f7f904c75dfc tools: Copy uapi/linux/hw_breakpoint.h from the kernel
c7007e983682b31d91e9ad7c3e85c49ffcc3651f perf tools: Introduce weak alternative to sched_getcpu()
dd7bd1093622621a910cbb6a77c7addeb20c9984 tools: Copy the header files needed by perf tools
e53e6bb8eba683ec1f18947410f39ab77efb098b perf trace beauty futex_op: Add missing defines for older systems
3c7752f7ab6d591d07f0851321d6ab1ace46e6fb perf tools: Don't add kernel directories to the header search path
7cb5c5acaba9fa0b90ca11275f19131d3eca35c2 perf evlist: Make event2evsel public
e26e63be64a108c1fd12020b93b5b447ffe0532b perf build: Add sdt feature detection
09dd39d2d2682729174e40161df67f45c151f307 perf tools: Do not provide dup sched_getcpu() prototype on Android
32a951b4fd6bbe60ef5d65930b1712321e241b27 perf evlist: Drop redundant evsel->overwrite indicator
078c33862e042b3778dce3bcc8eaef84ab40715c perf evlist: Map backward events to backward_mmap
54cc54decd79b2c92f4db06001b4b245f38181b7 perf evlist: Setup backward mmap state machine
057374645bd42e8bcf22aa4529f99cf7c920a1c6 perf record: Read from overwritable ring buffer
626a6b784e91bc61ca9fe0f9dd5bb60cb91ccb6b perf tools: Enable overwrite settings
4ea648aec01982d5a57816a95c4665d6081e78f9 perf record: Add --tail-synthesize option
7e3f36411342a54f1981fa97b43550b8406a3d69 perf tools: Remove tools/perf/util/include/asm/byteorder.h
e0643c4e9fdb2e77ab83ca596460e2c9c15728aa perf tools: Remove tools/perf/util/include/linux/const.h
ad430729ae00dd63f7dcadbeb638e589bc03b5a3 Remove: kernel unistd*h files from perf's MANIFEST, not used
de1e17b1d0c81be472039798698b517c8a68b516 tools: Copy the bitops files accessed from the kernel and check for drift
3aa0042769313b720142c0ef8514dac389e14ebe perf tools: Remove include/linux/list.h from perf's MANIFEST
ae3c14a028ed10552803b68276b6833295ba18cf tools: Copy linux/{hash,poison}.h and check for drift
accaed2659530b4047678070cb23fd1d9a1c1a59 perf tools: Make is_printable_array global
988dd774dcbd9151c2a643fc7284c5c3c4d0adb7 perf tests: Add is_printable_array test
8149a774d53afeaf5eb337a813f828f8b8ce68da tools lib api: Add str_error_c to libapi
ce92834407a465c25c0be1a4a0339c625e44c4db perf target: str_error_r() always returns the buffer it receives
ff3e33b075fe45c669e2cb27489d570e29d3abeb perf tests: Add test for bitmap_scnprintf function
b6f35ed774aeaf441e66cfa243fd1dff1321d69e perf record: Add --sample-cpu option
71ac899b5ed7edfd8fa2a4e075194380b1de2d7f perf script: Don't disable use_callchain if input is pipe
b7e0bf341f6cfa92ae0a0e3d0c3496729595e1e9 tracing/uprobes: Add @+file_offset fetch method
a4734145a4771ffa0cd5ef283a5cfd03b30bedf3 tracing/uprobes: Pass 'is_return' to traceprobe_parse_probe_arg()
90f023030e26ce8f981b3e688cb79329d8d07cc3 kmod: use system_unbound_wq instead of khelper
9642d18eee2cd169b60c6ac0f20bda745b5a3d1e nohz: Affine unpinned timers to housekeepers
444969223c81c7d0a95136b7b4cfdcfbc96ac5bd sched/nohz: Fix affine unpinned timers mess
2c2c1af4497514da1be2b571066859701dd79231 cpufreq: intel_pstate: Fix code ordering in intel_pstate_set_policy()
e0244903d4a6a27f9f1e8b46b89afa4130aa9164 fm10k: set netdev features in one location
9de6a1a6b8ed889ecd3ae13bb0a2459485d90a24 fm10k: drop 1588 support
86641094678a90af278d1f44c0e47f817c9ba46e fm10k: consistently use Intel(R) for driver names
820c91aa9c39e1923fbe4a6593b3d2dfd7ad593f fm10k: use common reset flow when handling io errors from PCI stack
7756c08b871ac637562bebfbe896a57e804b59bb fm10k: use common flow for suspend and resume
0afd20e5573c4aa976f1b935b6df73592b46ded5 fm10k: implement request_lport_map pointer
bab02a69296682881cae280587618978c357e26e fm10k: use generic ethtool_op_get_ts_info callback
c31ecf6c126dbc7f30234eaf6c4a079649a38de7 xen/blkfront: Fix crash if backend doesn't follow the right states.
efd1535270c1deb0487527bf0c3c827301a69c93 xen-blkfront: don't call talk_to_blkback when already connected to blkback
4027789192d149678262ad606b2d7e2a61bed0f2 s390/time: LPAR offset handling
c88394e7ee5ecf425754f78d38b4968eb60ffba5 qeth: fix handling of IPA return codes
9c23f4dab1a467f41a27c7d7b87a987c5a3cfc2d qeth: OSA version of SETBRIDGEPORT command
1b05cf6285c108c8c2acfec47dd02ed50d973823 qeth: Include error message for "OS Mismatch"
4d7def2a12386dbf56443016114c187df50e3442 qeth: add layer 2 RX/TX checksum offloading
9bdc441102f012b70f51e1ca73b603312fff8b5d qeth: add network device features for VLAN devices
70deb01662b130748f738525120ef4a68b59c398 qeth: omit outbound queue 3 for unicast packets in Priority Queuing on HiperSockets
10f4954ae67b3be6dac3cdfb1e0057c3779542be s390/cpuinfo: show maximum thread id
987b3095c2a76ea1b90438f5ace6f9cee354a47d mm: meminit: initialise more memory for inode/dentry hash tables in early boot
ea08e39230e898844d9de5b60cdbb30067cebfe7 sunrpc: svc_age_temp_xprts_now should not call setsockopt non-tcp transports
04197b341f23b908193308b8d63d17ff23232598 xfs: don't BUG() on mixed direct and mapped I/O
a45f795c65b479b4ba107b6ccde29b896d51ee98 libceph: introduce ceph_crypt() for in-place en/decryption
2b1e1a7cd0a615d57455567a549f9965023321b5 libceph: remove now unused ceph_*{en,de}crypt*() functions
7af3ea189a9a13f090de51c97f676215dabc1205 libceph: stop allocating a new cipher on every crypto request
dff25ddb48086afcb434770caa3d6849a4489b85 nfs: add support for the umask attribute
916d2d844afd09dc8cf144e0e9dc98daa9dfc34a nfsd: clean up supported attribute handling
47057abde515155a4fee53038e7772d6b387e0aa nfsd: add support for the umask attribute
a3f9d1b58a9ffce011ef4f074bfa36ae30eade28 pnfs/blocklayout: fix last_write_offset incorrectly set to page boundary
beba4bb096201ceec0e8cfb7ce3172a53015bdaf tracing: Add __get_dynamic_array_len() macro for trace events
6ea22486ba46bcb665de36514094d74575cd1330 tracing: Add array printing helper
21b7efbc5e910487c86f93ac88194dadbacac6e8 fjes: Enhance ethtool -S for fjes driver
c6e9d6f38894798696f23c8084ca7edbf16ee895 random: introduce getrandom(2) system call
1d9de44e268d880cbe2d0bd3be1ef0661f93fd34 random: Wake up all getrandom(2) callers when pool is ready
76e33fe4e2c4363c2b9f627472bd43dc235c3406 dm mpath: reinstate bio-based support
bf661be1fcf9b1da8abc81a56ff41ce5964ce896 dm mpath: remove bio-based bloat from struct dm_mpath_io
e83068a5faafb8ca65d3b58bd1e1e3959ce1ddce dm mpath: add optional "queue_mode" feature
5d0be84ec0cacfc7a6d6ea548afdd07d481324cd dm crypt: fix free of bad values after tfm allocation failure
2849450ad39d2e699fda2d5c6f41e05d87fd7004 blk-mq: introduce blk_mq_delay_kick_requeue_list()
7e48c768f44056a06bca596577c37f7721b53f0c dm mpath: use dm_mq_kick_requeue_list()
b88efd43f900d608560211a18a38d450f8192948 dm mpath: delay the requeue of blk-mq requests while all paths down
7cd326747f46ffe1c7bff5682e97dfbcb98990ec dm bufio: remove dm_bufio_cond_resched()
8ff232c1a819c2e98d85974a3bff0b7b8e2970ed dm mpath: always return reservation conflict without failing over
12a7cf5ba6c776a2621d8972c7d42e8d3d959d20 dm mirror: use all available legs on multiple failures
1b792f2f92784c00db2e6431496e437855d6f12a blk-mq: add flag for drivers wanting blocking ->queue_rq()
bc27c01b5c46d3bfec42c96537c7a3fae0bb2cc4 blk-mq: Do not invoke .queue_rq() for a stopped queue
5d1b25c1ecabb37f8eb58c8e9dd74f77f703e5d9 blk-mq: Introduce blk_mq_hctx_stopped()
2253efc850c4cf690516bbc07854eeb1077202ba blk-mq: Move more code into blk_mq_direct_issue_request()
52d7f1b5c2f33b5d34dc2b6af5175fb6a44999f6 blk-mq: Avoid that requeueing starts stopped queues
9b7dd572cc439fa92e120290eb74d0295567c5a0 blk-mq: Remove blk_mq_cancel_requeue_work()
6a83e74d214a47a1371cd2e6a783264fcba7d428 blk-mq: Introduce blk_mq_quiesce_queue()
066a4a73cee9a44a906b98825e70c47de5bd8b5c blk-mq: blk_mq_try_issue_directly() should lookup hardware queue
2b053aca76b48e681be57b34ca3a8c2c10b275c5 blk-mq: Add a kick_requeue_list argument to blk_mq_requeue_request()
7b17c2f7292ba1f3f98dae3f7077f9e569653276 dm: Fix a race condition related to stopping and starting queues
2e8ed71102ff8fe3919dd3a2d73ac4da72686efc dm block manager: make block locking optional
f97dc421280e16b8eb0c8f685610ba007ec11b79 dm mpath: add m->hw_handler_name NULL pointer check in parse_hw_handler()
6599c84e4ce6e428180f9958c7c40aa4202d8072 dm mpath: do not modify *__clone if blk_mq_alloc_request() fails
6936c12cf809850180b24947271b8f068fdb15e9 dm table: fix 'all_blk_mq' inconsistency when an empty table is loaded
5b8c01f74cf03b1ec013fcf358b384706233f2f0 dm table: simplify dm_table_determine_type()
2a0fbffb1e50939a969d5efe495667a3aa0f72f7 dm thin: fix a race condition between discarding and provisioning a block
817a5cdb40c8115eafe631b8e1de37cf8fe9fab8 dell-rbtn: Dell Airplane Mode Switch driver
b05ffc95f9ed986534b67538e239e9c4ba254b55 dell-rbtn: Export notifier for other kernel modules
2f9f26bd8614740b3c3b950394d945a99492a28e dell-laptop: extract SMBIOS-related code to a separate module
ee83c475415edd48b0739bee230b75454b82199e dell-smbios: rename get_buffer() to dell_smbios_get_buffer()
b6aa7e1817a35b93550283707dc93c98d41813eb dell-smbios: rename clear_buffer() to dell_smbios_clear_buffer()
cb16176380cca991dba162952941ad04ae760d0e dell-smbios: rename release_buffer() to dell_smbios_release_buffer()
2f262136159fedceb45b42336ae53f20bc0ff714 dell-smbios: rename dell_send_request() to dell_smbios_send_request()
17070f242aa989c33b227e61ea060f768a77f2dc dell-smbios: don't pass an SMBIOS buffer to dell_smbios_send_request()
c42831c8a9db32a5a0e2c6c31042014039f11739 dell-smbios: don't return an SMBIOS buffer from dell_smbios_send_request()
bc2104c27aad0c988d23c6abcd46f3313618bdbb dell-smbios: return the SMBIOS buffer from dell_smbios_get_buffer()
92ebd0d1a80930c52eb091d497d4527c4fe556ca dell-smbios: make the SMBIOS buffer static
96f7ef90cc373f805a38f2a3e96a8b1948706954 dell-smbios: implement new function for finding DMI table 0xDA tokens
63c4029bdfc220ec3a1fa9135f5db3bdcd93b502 dell-laptop: use dell_smbios_find_token() instead of find_token_id()
f951d6e6faedcead91419b785f73a620d8ed191a dell-laptop: use dell_smbios_find_token() instead of find_token_location()
73511ff30c6dc5347ede4c2a2fa5ab22fae3f152 dell-smbios: remove find_token_{id,location}()
b7bca2d7ff1a232466fa5447ec27e62bf02b310f dell-smbios: make da_tokens static
18b6f80f5095036bd2204c54c89a5a0f5a785e3d dell-wmi: Stop storing pointers to DMI tables
b13de7019c1b67f0c1b987fc9fe82fcc371ba1d2 dell-wmi: Clean up hotkey table size check
a464afb9581f6a9eabce8a4aa0c70cb71e6bf4d9 dell-wmi: Support new hotkeys on the XPS 13 9350 (Skylake)
4d340c6b9cc7e6e5f6ad4fc27e837863015cdf5b dell-rbtn: Add a comment about the XPS 13 9350
e8edf53b198f5656d5ae99685bc6c1f616662b3d dell-laptop: move dell_smi_error() to dell-smbios
0db2180fce6ada548f03c4f456ba2113753cdba9 dell-smbios: rename dell_smi_error() to dell_smbios_error()
e09c4d5b15438bd86ff8bfb05d70f17915bb5979 dell-wmi: enable receiving WMI events on Dell Vostro V131
ff8651237f39cea60dc89b2d9f25d9ede3fc82c0 dell-rbtn: Ignore ACPI notifications if device is suspended
aaf3a5e77566ad186a85d28a0afd26b8dd0afd11 dell-wmi: support Dell Inspiron M5110
6a4d260a63999dae65289e790f7af2ab1e26cd97 dell-wmi: Sort WMI event codes and update comments
3237a861049bb3a8f335392c37505d4d3692d79e dell-wmi: Add information about other WMI event codes
e075b3c898e4055ec62a1f0ed7f3b8e62814bfb6 dell-wmi: Generate one sparse keymap for all machines
ab9bb11ccbaa9e84be2534b677fe5350c2cc2014 dell-wmi: Add a WMI event code for display on/off
65a97a67a7d7b7a953492573d5740d32510b9daa dell-wmi: Ignore WMI event 0xe00e
b82b6cca488074da3852e8a54fde1d9f74bf1557 cpuidle: Invert CPUIDLE_FLAG_TIME_VALID logic
db73c5a8c80decbb6ddf208e58f3865b4df5384d x86/intel_idle: Use Intel family macros for intel_idle
4b3b234f434d440fcd749b9636131b76e2ce561e x86/cpu: Rename "WESTMERE2" family to "NEHALEM_G"
6727ad9e206cc08b80d8000a4d67f8417e53539d nmi_backtrace: generate one-line reports for idle cpus
76824852a941375aad640b35025dac75d077113a ipmi: Fix some minor coding style issues
b07b58a3e435a3d18004815e8364ec26c4236721 ipmi: remove trydefaults parameter and default init
54f9c4d0778b3f9ab791b1b7eb1a5d2809f02f50 ipmi: add an Aspeed BT IPMI BMC driver
1a377a79211a08c5c8a05c0b6dee6d5b13ef4107 ipmi: Fix ioremap error handling in bt-bmc
a3e6061bad6292f2d5be3c1c4ccf1fa136517dec ipmi/bt-bmc: add a dependency on ARCH_ASPEED
d94655b405ba08838fb3db301dddb02a435ae16c ipmi/bt-bmc: remove redundant return value check of platform_get_resource()
e1f9d31eb3272b4351239ecb7481f541d9eb76be scsi: be2iscsi: Fix bad WRB index error
3f7f62ee5b10de42b3ff1a33599fde4a2094960a scsi: be2iscsi: Add checks to validate completions
a1ff5726081858a9ad98934eff7af6616c576875 x86/cpufeature: Add AMD AVIC bit
d62caabb41f33d96333f9ef15e09cd26e1c12760 kvm/x86: per-vcpu apicv deactivation support
1e6e2755b635e85ce0b1ce827b7c375b6a0a890c KVM: x86: Misc LAPIC changes to expose helper functions
dfb9595429c65f72656551b9e1ad20126486badb KVM: x86: Rename kvm_apic_get_reg to kvm_lapic_get_reg
03543133cea646406307870823343912c1ef0a3a KVM: x86: Introducing kvm_x86_ops VM init/destroy hooks
3217f7c25bca66eed9b07f0b8bfd1937169b0736 KVM: Add kvm_arch_vcpu_{un}blocking callbacks
d1ed092f77ef562edcc1b45ae331ff1683f50295 KVM: x86: Introducing kvm_x86_ops VCPU blocking/unblocking hooks
dd1a4cc1fbdf516bb38ca31b65c76e720d414d0d KVM: split kvm_vcpu_wake_up from kvm_vcpu_kick
44a95dae1d229a4967bbfcc56fb2116a9b4fe942 KVM: x86: Detect and Initialize AVIC support
340d3bc3664e5d3fb922fe6e3ae2d901d4900d88 svm: Add interrupt injection via AVIC
18f40c53e10f8d1267dc47cce4487664eececd6d svm: Add VMEXIT handlers for AVIC
be8ca170edf342cc45ae4a6431ef192e5cbe211e KVM: x86: Introducing kvm_x86_ops.apicv_post_state_restore
8221c13700561b36fb1bfda583888cbb43b572f0 svm: Manage vcpu load/unload when enable AVIC
7d669f50847481c52faf0656aea7b4be63113210 kvm: svm: Fix implicit declaration for __default_cpu_present_to_apicid()
5b8abf1f33ccd9f1cbc4248ade3cd507d9319c48 kvm: svm: Do not support AVIC if not CONFIG_X86_LOCAL_APIC
d3695aa4f452bc09c834a5010484f65fca37d87c KVM: PPC: Add support for multiple-TCE hcalls
4b3d173d0440d37534906b6d93c02dfb577c68ce KVM: PPC: Always select KVM_VFIO, plus Makefile cleanup
270750dbc18a71b23d660df110e433ff9616a2d4 hung_task: Display every hung task warning
48a6d64edadbd40fa5185a890023e9b331d64a48 hung_task: allow hung_task_panic when hung_task_warnings is 0
4ca5ede07c9871c13ae422c96d6d08dbd0df5eda hung_task: decrement sysctl_hung_task_warnings only if it is positive
920552b213e3dc832a874b4e7ba29ecddbab31bc KVM: disable halt_poll_ns as default for s390x
7b5f8272c792d49da73d98e9ca32f4cbb6d53808 KVM: PPC: Book3S HV: Change vcore element runnable_threads from linked-list to array
0cda69dd7cd64fdd54bdf584b5d6ba53767ba422 KVM: PPC: Book3S HV: Implement halt polling
8a7e75d47b68193339f8727cf4503271d0a0b1d0 KVM: Add provisioning for ulong vm stats and u64 vcpu stats
2a27f514a47d39c50aaa5c07831ab35178955d47 KVM: PPC: Implement existing and add new halt polling vcpu stats
ec76d819d27040e418801d1a57bd3bdfde51019e KVM: Export kvm module parameter variables
307d93e476a340116cbddd1d3d7edf9b3cdd7506 KVM: PPC: Book3S HV: Use generic kvm module parameters
e03f3921e597cbcc6880033e5c52fa1db524f88b KVM: PPC: Book3S HV: Add check for module parameter halt_poll_ns
f4944613ad1ab6760589d5791488be1236c07fcc KVM: PPC: Decrease the powerpc default halt poll max value
908a09359ef4ed9e9ca1147b9d35f829d7e42a74 KVM: PPC: Book3S HV: Comment style and print format fixups
866293ee54227584ffcb4a42f69c1f365974ba7f futex: Add another early deadlock detection check
1d0dcb3ad9d336e6d6ee020a750a7f8d907e28de futex: Implement lockless wakeups
45ab4effc3bee6f8a5cb05652b7bb895ec5b6a7a locking/rtmutex: Implement lockless top-waiter wakeup
0bd3a173d711857fc9f583eb5825386cc08f3948 sched/preempt, locking: Rework local_bh_{dis,en}able()
dc5367bcc556e97555fc94a32cd1aadbebdff47e net/af_iucv: don't use paged skbs for TX on HiperSockets
b3e8652bcbfa04807e44708d4d0c8cdad39c9215 s390/zcrypt: Introduce CEX6 toleration
d49597fd3bc7d9534de55e9256767f073be1b33a x86/cpu: Deal with broken firmware (VMWare/XEN)
9d85eb9119f4eeeb48e87adfcd71f752655700e9 x86/smpboot: Make logical package management more robust
89a2848381b5fcd9c4d9c0cd97680e3b28730e31 mm: memcontrol: do not recurse in direct reclaim
ea861dfd9e0e7e044a6e65fa02a14b9159b568da security: Make inode argument of inode_getsecurity non-const
d6335d77a7622a88380f3f207cc1f727f878dd21 security: Make inode argument of inode_getsecid non-const
83da53c5a34564a0a63b26f84293c6e2a639e1e4 selinux: Add accessor functions for inode->i_security
6f3be9f562e3027c77bc4482ccf2cea8600a7f74 security: Add hook to invalidate inode security labels
5d226df4edfa0eb1e689e7ac2741cf261ff7cbf1 selinux: Revalidate invalid inode security labels
b197367ed1ba81b0d26f7e7f76f61731ac6e5842 selinux: Inode label revalidation performance fix
e817c2f33efb4aa7f02c98dfab9a5f8ff383ea7e selinux: Don't sleep inside inode_getsecid hook
4b57d6bcd94034e2eb168bdec2474e3b2b848e44 selinux: simply inode label states to INVALID and INITIALIZED
2c97165befb487c0dc8b25d39f457d0d91d22a6f selinux: don't revalidate an inode's label when explicitly setting it
20cdef8d57591ec8674f65ccfe555aca5fd10b64 selinux: delay inode label lookup as long as possible
1ac42476263eec99fb2d3c31ee946cb44e80ddd5 selinux: check ss_initialized before revalidating an inode label
420591128cb206201dc444c2d42fb6f299b2ecd0 selinux: Minor cleanups
13457d073c29da92001f6ee809075eaa8757fb96 selinux: Clean up initialization of isec->sclass
9287aed2ad1ff1bde5eb190bcd6dccd5f1cf47d3 selinux: Convert isec->lock into a spinlock
86b2efbe3a390e07dbba725ef700b0d143e9a385 audit: add fields to exclude filter by reusing user filter
7ff89ac608d9e856cae6fa651553fa0709bf9c50 audit: add exclude filter extension to feature bitmap
4440e8548153e9e6d56db9abe6f3bc0e5b9eb74f audit: convert all sessionid declaration to unsigned int
833fc48d18ce3595990b405ae82a160b33028994 audit: skip sessionid sentinel value when auto-incrementing
8fae47705685fcaa75a1fe4c8c3e18300a702979 audit: add support for session ID user filter
9d4df77fab7347a74a9938521ffad8d8fab2671d s390/scm_block: use mempool to manage aidaw requests
de88d0d28fe932637eb5b7ebf9e638256cf07979 s390/scm_block: allocate aidaw pages only when necessary
bbc610a96524fbfa4ed38c4b1fc6348a1169f358 s390/scm_block: handle multiple requests in one HW request
8622384f138b786b9ae639e79ccfb84c7db82cbc s390/scm_block: make the number of reqs per HW req configurable
a13ccb04af4aa6632c11d59ddf6555aa80ffb139 s390/scm_block: fix off by one during cluster reservation
d08de8e2d86744f91d9d5d57c56ca2b6e33bf6ec s390/mm: add support for 2GB hugepages
7fb0f1de49fc75a0dcec22531f2d0a79fc2fb625 perf/x86: Fix compile warnings for intel_uncore
ce5686d4ed12158599d2042a6c8659254ed263ce perf/x86: Fix embarrasing typo
e633c65a1d5859da170a83d537d9762c07d12213 x86/perf/intel/uncore: Make the Intel uncore PMU driver modular
a07301ab3dabd1e31696c1bf1775aba24eb7573d perf/x86/uncore: Use Intel family name macros for uncore
46866b59dfbe9bf99bb1323ce1f3fd2073a81aa3 perf/x86/intel/uncore: Add support for the Intel Skylake client uncore PMU
95f3be798472f63b495ca4712af005ea5ac7aa47 perf/x86/intel/uncore: Add enable_box for client MSR uncore
c9bbdd4830ab06288bb1d8c00ed8c8c6e80e377a perf/core: Don't pass PERF_EF_START to the PMU ->start callback
cd34cd97b7b4336aa2c623c37daffab264c7c6ce perf/x86/intel/uncore: Add Skylake server uncore support
ba2f81575eba8dcf128354169c20ae23f810f652 perf/x86/intel/uncore: Add Knights Mill CPUID
d786810b2f896854506e7b698a137f074942e410 perf/x86/intel/uncore: Add more Intel uncore IMC PCI IDs for SkyLake
e96271f3ed7e702fa36dd0605c0c5b5f065af816 perf/core: Fix address filter parser
e8a923cc1fff6e627f906655ad52ee694ef2f6d7 perf/x86: Fix NMI measurements
4b6e2571bf00019e016255ad62b56feb9f498db7 x86/perf/intel/rapl: Make the Intel RAPL PMU driver modular
bd48c63eb0afc28b29fb342f215cdd77b995c02e tools: Introduce tools/include/linux/time64.h for *SEC_PER_*SEC macros
b55cc4ed202175777690860c482ca2ae5184458e perf symbols: Rename ->ignore to ->idle
608c34de0b3d7bd15340a95ef758b4d8b81ebfc6 perf symbols: Mark if a symbol is idle in the library
b6220212d48a9bfbc694d10b38dbdfbaab81f4a0 perf top: Remove old kernel-only symbol filter
be39db9f2932f0ce4e116c71ba5ae2b542e536a7 perf symbols: Remove symbol_filter_t machinery
9f21b815be863218192f42f9f5bf78b75f8738e0 perf evlist: Only open events on CPUs an evsel permits
f3539c12d8196ce0a1993364d30b3a18908470d1 tools include: Add uapi mman.h for each architecture
0a4a7e435f458e996d0f21a9ebc964e0b0d64eba perf build: Compare mman.h related headers against kernel originals
dd60fba7324572498d91163e96b1cfe5cd5f7f3b perf tools: Add infrastructure for PMU specific configuration
859442bd3fcbe326a9c0174c6105c938eb101438 perf pmu: Push configuration down to PMU driver
e7a06a5353574cac3a34211bd4e514bb8d00d766 perf script: Fix vanished idle symbols
5c01ad60b8a23f8ff59b9a5a756f07ed08f0b6d1 perf record: Fix error paths
1b36c03e356936d62abbe2accaae1573d3b66f14 perf record: Add support for using symbols in address filters
18ef15c675a5d5d97f844ebcf340a2a6c7cf3142 perf tools: Experiment with cppcheck
80eeb67fe577aa76b2d1bb5b029bca097f0f25bc perf jevents: Program to convert JSON file
dc720ffc9863b618a192f5949234c54aad00ed24 perf jevents: Handle header line in mapfile
794ba54a8393456d503958d6217874e455b6a771 perf jevents: Add support for long descriptions
0b1db474314c883d0bfc6720278667a6155e995a perf pmu-events: Fix fixed counters on Intel
b42c7369e3f451e22c2b0be5d193955498d37546 perf pmu-events: Add Skylake frontend MSR support
72c6ff2583fba824dc38c0ce87b838631cdb8294 perf jevents: Fix Intel JSON fixed counter conversions
87095f7ddeff3038a0cf8e6574922f9c11688619 tools build: Add feature detection for g++
0b8f1e2e26bfc6b9abe3f0f3faba2cb0eecb9fb9 perf/core: Fix sideband list-iteration vs. event ordering NULL pointer deference crash
188ad9d6cbbce4a1d322ac208914a1dea34b30b6 vfio/pci: Include sparse mmap capability for MSI-X table regions
28541d41c9e04cb2ddbf93facd1e376dd5613360 vfio/pci: Add infrastructure for additional device specific regions
c4aec3101319f84363a57e09086c2aff6c60a3c3 vfio/pci: return -EFAULT if copy_to_user fails
05f0c03fbac1819e86c9d5db4e208b68fc1b9b5e vfio-pci: Allow to mmap sub-page MMIO BARs if the mmio page is exclusive
46a5d3abedbeb78640376257ee5c3aa690f6ee41 mptcp: fix typos in comments
8da4b8c48e7b43cb16d05e1dbb34ad9f73ab7efd lib/uuid.c: move generate_random_uuid() to uuid.c
2b1b0d66704a8cafe83be7114ec4c15ab3a314ad lib/uuid.c: introduce a few more generic helpers
7b96953bc640b6b25665fe17ffca4b668b371f14 vfio: Mediated device Core driver
fa3da00cb8c0d403030f4805ae615b444f0d2f3c vfio: VFIO based driver for Mediated devices
c086de818dd81c3c2f7cecff23de6585b74340c0 vfio iommu: Add blocking notifier to notify DMA_UNMAP
c535d34569bbc61ebf25a5505ab9eafba057345f vfio_pci: Update vfio_pci to use vfio_info_add_capability()
8e1c5a4048b89d04d8d1ee655ce1f685e6fddde4 docs: Add Documentation for Mediated devices
9d1a546c53b4c1c378b0f34de84ddee2c7d4c90c docs: Sample driver to demonstrate how to use Mediated device framework.
5188287a860b6ec5950d5156d63056156f59ee3b MAINTAINERS: Add entry VFIO based Mediated device drivers
d256459fae4dba66d50850f2d948306503818913 vfio: Fix handling of error returned by 'vfio_group_get_from_dev()'
22195cbd3451a75abaf30651a61cf85c89061327 vfio: vfio_register_notifier: classify iommu notifier
ccd46dbae77dbf0d33f42e04b59536f108c395e8 vfio: support notifier chain in vfio_group
49550787a90b5bfa44d8dc424d11824dbe21473d vfio-mdev: Fix remove race
42930553a7c11f06351bc08b889808d0f6020f08 vfio-mdev: de-polute the namespace, rename parent_device & parent_ops
9372e6feaafb65d88f667ffb5b7b425f8568344f vfio-mdev: Make mdev_parent private
99e3123e3d72616a829dad6d25aa005ef1ef9b13 vfio-mdev: Make mdev_device private and abstract interfaces
c6ef7fd40eddad38a8825cbd6bb2ce8bdbba88f5 vfio-mdev: fix non-standard ioctl return val causing i386 build fail
b179b037e568a27ab3e8f5bedea1f4455aba7378 s390/dasd: enhance CUIR scope detection
af7752106e4f12b4ee47b4eca3e7ba4bcec6e7e5 s390/dasd: fix failing CUIR assignment under LPAR
5a3b7b112884f80ff19b18028fabeb4f9c035518 s390/dasd: add query host access to volume support
f50af850f407df7b548802461bc248c7683c6dd3 s390/dasd: make query host access interruptible
9d49f86daba3ed22cadf01beff1b130ad25fe0bf s390/cio: introduce pathmask_to_pos
c93461515a1a16486f4e483cb34170366fa73ea1 s390/dasd: extend dasd path handling
a521b048bc8c5d3c57a468c2cba70eb60e873616 s390/dasd: channel path aware error recovery
46d1c03c82a717735dddc7a47f321abaccbcec78 s390/dasd: Improve dasd format code
8542885bf5338bfccf779868a5d143620e794ff9 s390/dasd: Simplify code in format logic
570d237c19f8d0f1dfd214767f2d995b8291138a s390/dasd: Refactor dasd format functions
8fd575200db5b53f6ea6818dd017f1b43190db12 s390/dasd: Add new ioctl BIODASDCHECKFMT
22d557abf75ce39f8b2264c86058b4bcc7a8f9f0 s390/ipl: cleanup bin attr usage
18e22a1772260045648e49e2048ecc7193422a80 s390: add support for ipl devices in subchannel sets > 0
b346953ddac0d57d4852ddc2b5cd9e16c84ddd59 s390/pci: use macro for attribute creation
ac4995b9d5705f10a69ea74d440e3943db41f2ca s390/pci: add some new arch specific pci attributes
0b7589ecca2b6f962cf3314a3a5a675deeefb624 s390/pci: query fmb length
f111adfdd7ff7d9fe54b6efa440b80824984749c timekeeping: Use timekeeping_update() instead of memcpy()
56fd16cabac9cd8f15e2902898a9d0cc96e2fa70 timekeeping: Increment clock_was_set_seq in timekeeping_init()
687f32e6d9bd1d63c5e557e877809eb446f1a6e8 Drivers: hv: vmbus: Move some ring buffer functions to hyperv.h
ab028db41ca9174caab7f9e3fc0a2e7f4a418410 Drivers: hv: vmbus: Implement APIs to support "in place" consumption of vmbus packets
99a50bb11cad44cd1d478256d2388e7afce982ac netvsc: Use the new in-place consumption APIs in the rx path
796cc88c32c1bd1f833d596448ac785a8736e57c hv_netvsc: style cleanups
bc304dd3b4444b84082c483534a8dcac7a22cb9d hv_netvsc: refactor completion function
7a2a0a84fda33062200decf5e201b182591bf0ec hv_netvsc: make netvsc_destroy_buf void
17db4bcef3c3c45b95b3b3d8577f725df1b2c0a0 hv_netvsc: use consume_skb
3024f920eb5f6e60453d035f26ec963c7126f517 pinctrl: zynq: Use devm_pinctrl_register() for pinctrl registration
25a853d037a40b7ac2c317adef6442ef92d8407e Fix inconsistent spinlock of AMD GPIO driver which can be recognized by static analysis tool smatch. Declare constant Variables with Sparse's suggestion.
323de9efdf3e75d1dfb48003a52e59d6d9d4c7a5 pinctrl: make pinctrl_register() return proper error code
1e84aa445893a608445af2fda5d8a03c0a86af84 mfd: Use irq_desc_get_xxx() to avoid redundant lookup of irq_desc
424a6c607c169ca0ac8431424f28fc839b45b14c pinctrl: Fix return value check in amd_gpio_probe()
8cf4345575a416e6856a6856ac6eaa31ad883126 pinctrl/amd: Remove the default de-bounce time
499c7196dd182ba513ccb9620ee22aed3f9096fd pinctrl/amd: Configure GPIO register using BIOS settings
e084448b5d26bfebe8a7b9c43bb57e685567563d pinctrl/amd: switch to using a bool for level
42a44402ecb78e87eecf7ccad8099287e660ec36 pinctrl: amd:Add device HID for future AMD GPIO controller
251e22abde21833b3d29577e4d8c7aaccd650eee pinctrl: amd: Use devm_pinctrl_register() for pinctrl registration
6057d40f41a30f234533e5cf28810dd3fd2b6995 gpio: driver for AMD Promontory
ca27379f5d2956e08558fbfc0d35b3ba64abbe0c gpio: amdpt: Add a new ACPI HID
3bfd44306c65d073008b9ca8f062249f35576b61 pinctrl: amd: Add support for additional GPIO
2983f296f2327bc517e3b29344fce82271160197 pinctrl/amd: Set the level based on ACPI tables
5e3b8a8d59b2064f68ab349182f5dc5f5bb4fd30 md: Fix compilation warning
3775dac1bc385e8d7bfdbc68e8478e4b2bae1955 pinctrl/amd: white space cleanups in amd_gpio_dbg_show()
23f919d4ad0eb325595f10f55be4301b2965d6d6 shmem: avoid maybe-uninitialized warning
8dca4a41f1ad65043a78c2338d9725f859c8d2c3 pinctrl/amd: Drop pinctrl_unregister for devm_ registered device
2d244c81481fa5142a2ba6656ab7a8e40c849c27 i2c: designware: fix IO timeout issue for AMD controller
e4e666ba74d4f6eff04d3c567b9f2d50a46837e4 i2c: designware: Add device HID for future AMD I2C controller
cdd9a6b2a7461021a5ee24bc130592c1bdc54cd8 ACPI / APD: Remove CLK_IS_ROOT
b790eb20b8e4a5c913fc62c49562c821165b4fad ACPI / APD: Add APM X-Gene ACPI I2C device support
4881f0bad9eb56bb7257e2386ffb27ef969bb6ce ACPI / APD: Add clock frequency for future AMD I2C controller
f9a67b1182e5abfcfcec24762ea95a77332f035e md/bitmap: clear bitmap if bitmap_create failed
85ad1d13ee9b3db00615ea24b031c15e5ba14fd1 md: set MD_CHANGE_PENDING in a atomic region
f90145f317efad72e6552cecb09ab7a4e5d1e404 md/raid10: add rcu protection to rdev access in raid10_sync_request.
e5872d58f5ad179fc03267f12257bee4159aace6 md/raid1: small cleanup in raid1_end_read/write_request
f5b67ae86ee317db20c0e10d54f16a0bbbd3207d md: be extra careful not to take a reference to a Faulty device.
d787be4092e27728cb4c012bee9762098ef3c662 md: reduce the number of synchronize_rcu() calls when multiple devices fail.
d9dd26b20cff88b45d861ec786d86b1c9bd2ee60 MD: hold mddev lock to change bitmap location
27028626b4b9022dcac23688e09ea43b36e1183c raid10: record correct address of bad block
8e018c21da3febb558586b48c8db0d6d66cb6593 raid5-cache: fix a deadlock in superblock write
e0a491c1296874a1aca51cc68452f12a4d950029 lib/raid6: Add AVX512 optimized gen_syndrome functions
13c520b2993c9faae6770264d33ff1e1ea4c2ceb lib/raid6: Add AVX512 optimized recovery functions
7449f699b2fb23bdee0a0f03aa4efb5f96fd403f raid1: handle read error also in readonly mode
35b785f7691aa82c4b0b262392439cfa6f22816d md: add bad block support for external metadata
dcbcb48650ecd8de747b2e21e0ee9484b462cb74 md: don't fail an array if there are unacknowledged bad blocks
cbb387323610295be9d36c51287b668c1140704f md/bitmap: call bitmap_file_unmap once bitmap_storage_alloc returns -ENOMEM
7f0f0d87fa172c71f74ea916d70765862ee2d53a md: fix some issues with alloc_disk_sb()
9d48739ef19aa8ad6026fd312b3ed81b560c8579 md: change all printk() to pr_err() or pr_warn() etc.
ec0cc226854a79c0cf2969a7a86eddea5f8e8b09 md/bitmap: change all printk() to pr_*()
a2e202afa6aecd0ca0f7863deca4267bf1346e3d md/linear: replace printk() with pr_*()
7279694da4af9e99e7ed85ed8883c740efff348b md/multipath: replace printk() with pr_*()
1d41c216febe43150e99b24fde5eda9e8097dccc md/raid1: change printk() to pr_*()
cc6167b4f3b3caabe973ca12612ac7d60aae0cfc md/raid5: change printk() to pr_*()
3fd880af4174d724d209a890101962b00d5d33d4 raid5-cache: restrict the use area of the log_offset variable
060b0689f5df7e87641c820a605c779149da33ef md: perform async updates for metadata where possible.
f2c771a655046f21bb70d5813aa94979d2bd49c9 md/raid1: fix: IO can block resync indefinitely
354b445b5f84f72e64cef9ffe175548e84c1a874 raid5-cache: fix lockdep warning
937621c36e0ea1af2aceeaea412ba3bd80247199 md/r5cache: move some code to raid5.h
2ded370373a400c20cf0c6e941e724e61582a867 md/r5cache: State machine for raid5-cache write back mode
1e6d690b9334b7e1b31d25fd8d93e980e449a5f9 md/r5cache: caching phase of r5cache
a39f7afde358ca89e9fc09a5525d3f8631a98a3a md/r5cache: write-out phase and reclaim support
2c7da14b90a01e48b17a028de6050a796cfd6d8d md/r5cache: sysfs entry journal_mode
9ed988f5dc673f009d78f7ac55c5da88e1cf58a0 md/r5cache: refactoring journal recovery code
5aabf7c49d9ebe54a318976276b187637177a03e md/r5cache: r5cache recovery: part 2
688834e6ae6b21e3d98b5cf2586aa4a9b515c3a0 md/failfast: add failfast flag for md to be used by some personalities.
46533ff7fefb7e9e3539494f5873b00091caa8eb md: Use REQ_FAILFAST_* on metadata writes where appropriate
2e52d449bcec31cb66d80aa8c798b15f76f1f5e0 md/raid1: add failfast handling for reads.
212e7eb7a3403464a796c05c2fc46cae3b62d803 md/raid1: add failfast handling for writes.
8d3ca83dcf9ca3d58822eddd279918d46f41e9ff md/raid10: add failfast handling for reads.
1919cbb23bf1b3e0fdb7b6edfb7369f920744087 md/raid10: add failfast handling for writes.
d7bd398e97f236a2353689eca5e8950f67cd34d5 md/r5cache: handle alloc_page failure
d3014e21e18bfaf5b22144a45c399c8eb21aaba9 md/r5cache: enable IRQs on error path
9b69173e5c6000b2c6fafc5085dcd7b173f073c8 md/raid5-cache: remove unnecessary function parameters
1a0ec5c30c37d29e4435a45e75c896f91af970bd md/raid5-cache: do not need to set STRIPE_PREREAD_ACTIVE repeatedly
f687a33ef02d3e0f13c4fa9e3b2e90f656bbfb26 md/r5cache: run_no_space_stripes() when R5C_LOG_CRITICAL == 0
43b9674832cc41ad0ad7b7e2ec397e47dcd5f6c3 md/raid5-cache: adjust the write position of the empty block if no data blocks
3d7e7e1d9db048bc6c1503bca9c82193450fc476 md/r5cache: do r5c_update_log_state after log recovery
d30dfeb9be25c67c9cfdfd932db57a571fd347b4 md/raid5-cache: no recovery is required when create super-block
5c88f403a5d2bd75911c6faaacc9bea97ac7d121 md/raid5-cache: fix crc in rewrite_data_only_stripes()
3c6edc66085e1d895a698c572bbfaf4d57fdb771 md/r5cache: after recovery, increase journal seq by 10000
2953079c692da067aeb6345659875b97378f9b0a md: separate flags for superblock changes
32cd7cbbacf700885a2316275f188f2d5739b5f4 md/raid5: Use correct IS_ERR() variation on pointer check
b5c539583988b70bddea73f333c640fc93a62e88 lpfc: Utilize embedded CDB logic to minimize IO latency
7bdedb34a0ac1a4b30224c6945eaaebc6fae779a lpfc: Add MDS Diagnostics Support
93dd1911cf4913321d91aa9c525f5f8149f90fee lpfc: Re-organize source for easier driver attribute management
bd4b3e5c8adf2b9f601b46b917afac555be05688 scsi: lpfc: Mark symbols static where possible
dc58f44c2140748d96e33a533cd9e80692f58518 scsi: lpfc: Correct embedded io wq element size
22466da5b4b7a82d3e5a9c21c752cae91a21dc91 lpfc: Fix possible NULL pointer dereference
2319f847a8910cff1d46c9b66aa1dd7cc3e836a9 scsi: lpfc: fix oops/BUG in lpfc_sli_ringtxcmpl_put()
f2bf460cf5ef989f0a593d05932460326376d5f6 scsi: lpfc: Deprecate lpfc_prot_sg_seg_cnt parameter
eed695d70e7eff55595f222b55b96f105d4a27ca scsi: lpfc: Fix sg_reset on SCSI device causing kernel crash
4b160ae8a34983f11635981168760412ed3c2cfa scsi: lpfc: Fix few small typos in lpfc_scsi.c
f05795d3d771f30a7bdc3a138bf714b06d42aa95 scsi: Add intermediate STARGET_REMOVE state to scsi_target_state
b1ed4c4fa9a5ccf325184fd90edc50978ef6e33a tcp: add an ability to dump and restore window parameters
90c337da1524863838658078ec34241f45d8394d inet: add IP_BIND_ADDRESS_NO_PORT to overcome bind(0) limitations
63b949382c5f263746b1c177f6ff84de2201ae9d net: sctp: implement rfc6458, 5.3.4. SCTP_SNDINFO cmsg support
0d3a421d284812d07970b4ccee74d4fa38737e4d net: sctp: implement rfc6458, 5.3.5. SCTP_RCVINFO cmsg support
2347c80ff127b94ddaa675e2b78ab4cef46dc905 net: sctp: implement rfc6458, 5.3.6. SCTP_NXTINFO cmsg support
6b3fd5f3a2bbc8464a8e0bf134a183b8fa026439 net: sctp: implement rfc6458, 8.1.31. SCTP_DEFAULT_SNDINFO support
dcb17d22e1c2cd72e72190c736349a675362b3bc tcp: warn on bogus MSS and try to amend it
ac6e780070e30e4c35bd395acfe9191e6268bdd3 tcp: take care of truncations done by sk_filter()
7ababb782690e03b78657e27bd051e20163af2d6 igmp: Make igmp group member RFC 3376 compliant
9920e48b830a0f4ec06bcbf0ec3147c88ae72bac ipv4: use l4 hash for locally generated multipath flows
8bbb1cf63f5e345685d42749606d0474cfde6def mpt3sas: Fix warnings exposed by W=1
998f26aedf41bc5cdce3b3c9233ac0e0672fa307 scsi: mpt3sas: Added Device ID's for SAS35 devices and updated MPI header.
81c16f83231a92eca246cb91649c4726899a704d scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.
6c7abffc7ff0125106fb79e0520b501c759aa9ed scsi: mpt3sas: fix some spelling mistakes in message and comments
ffb58456589443ca572221fabbdef3db8483a779 scsi: mpt3sas: fix hang on ata passthrough commands
97dd552eb23c83dbf626a6e84666c7e281375d47 debugobjects: Scale thresholds with # of CPUs
858274b6a13b4db0e6fb451eea7f8817c42426a7 debugobjects: Reduce contention on the global pool_lock
2992ef29ae01af998399d55ed7c692a2505fb8af livepatch/module: make TAINT_LIVEPATCH module-specific
7598d167df99ddadb7f7bd803d1413af740f3617 livepatch/module: print notice of TAINT_LIVEPATCH
7fd8329ba502ef76dd91db561c7aed696b2c7720 taint/module: Clean up global and module taint flags handling
5eb7c0d04f04a667c049fe090a95494a8de2955c taint/module: Fix problems when out-of-kernel driver defines true or false
5b20c944882ce35da0074b9eabe41a172aea030b x86/cpufreq: Use Intel family name macros for the intel_pstate cpufreq driver
a2c1bc645e87346150516b3abf1933ed29d0f48b x86/intel_idle: Add Knights Mill CPUID
ae0f5499511e5b1723792c848e44d661d0d4e22f kvm: x86: don't print warning messages for unimplemented msrs
7e1f85f96def9453ac5322329503e6d43c5ecd01 x86 / ACPI: simplify _acpi_map_lsapic()
3e9e57fad3d8530aa30787f861c710f598ddc4e7 x86/acpi: store ACPI ids from MADT for future usage
88e957d6e47f1232ad15b21e54a44f1147ea8c1b xen: introduce xen_vcpu_id mapping
ad5475f9faf5186b7f59de2c6481ee3e211f1ed7 x86/xen: use xen_vcpu_id mapping for HYPERVISOR_vcpu_op
55467dea2967259f21f4f854fc99d39cc5fea60e xen: change the type of xen_vcpu_id to uint32_t
9c4b2867ed7c8c8784dd417ffd16e705e81eb145 cpuidle: menu: Fix menu_select() for CPUIDLE_DRIVER_STATE_START == 0
bc9dc9d5eec908806f1b15c9ec2253d44dcf7835 lib/uuid.c: use correct offset in uuid parser
fbcc025613590d7b1d15521555dcc6393a148a6b xfs: Introduce writeback context for writepages
ad68972acb82c3e8bba316d542ab204984cb1f1c xfs: xfs_cluster_write is redundant
bfce7d2e2d5ee05e9d465888905c66a70a9c243c xfs: factor mapping out of xfs_do_writepage
e10de3723c53378e7cf441529f563c316fdc0dd3 xfs: don't chain ioends during writepage submission
0df61da8ac5b7acb1db6cee142822ebe4724c739 xfs: ioends require logically contiguous file offsets
5694fe9aadbb26874d2791de1db6ac08aa1b4c14 xfs: Document error handlers behavior
f07b352021483a3a38f081dc284928400a9c1d2c GFS2: Made logd daemon take into account log demand
b63f5e84826b3e1ae81e051a6a7c5a94b657aecb GFS2: Wake up io waiters whenever a flush is done
9862ca056e654633e521b303f74fb123f7f17e98 GFS2: Switch tr_touched to flag in transaction
192738b711d3e41a7326347db5d6923d2136b6d0 GFS2: Inline function meta_lo_add
aacee72061a352d52ef9d3854f8db3b86b93ea16 GFS2: Reduce contention on gfs2_log_lock
d8fdb47fae5febc02e62da121f85625244b98b2e NFS: Don't let readdirplus revalidate an inode that was marked as stale
7dc72d5f7a0ec97a53e126c46e2cbd2560757955 NFS: Fix inode corruption in nfs_prime_dcache()
d719e8f268fa4f9944b24b60814da9017dfb7787 ovl: update atime on upper
20d00ee829428ea6aab77fa3acca048a6f57d3bc Revert "vfs: add lookup_hash() helper"
0956254a2d5b9e2141385514553aeef694dfe3b5 ovl: don't copy up opaqueness
5201dc449e4b6b6d7e92f7f974269b11681f98b5 ovl: use cached acl on underlying layer
0eb45fc3bb7a2cf9c9c93d9e95986a841e5f4625 ovl: Switch to generic_getxattr
f2b20f6ee842313a0d681dbbf7f87b70291a6a3b vfs: move permission checking into notify_change() for utimes(NULL)
598e3c8f72f5b77c84d2cb26cfd936ffb3cfdbaa vfs: update ovl inode before relatime check
c568d68341be7030f5647def68851e469b21ca11 locks: fix file locking on overlayfs
7b1742eb06ead6d02a6cf3c44587088e5392d1aa vfs: make argument of d_real_inode() const
8b326c61de08f5ca4bc454a168f19e7e43c4cc2a ovl: copy_up_xattr(): use strnlen
2b6bc7f48d34a6043915beddbf53b981603737c8 ovl: lookup: do getxattr with mounter's permission
78a3fa4f3249055b472983065b30c02392cf7e2a ovl: use generic_readlink
fd3220d37b1f6f0cab6142d98b0e6c4082e63299 ovl: update S_ISGID when setting posix ACLs
c4fcfc1619ea43a8a89ad2f83ff23905eee088bd ovl: fix d_real() for stacked fs
3b58a8a9049d5e191402665c339690a148504358 SUNRPC rpc_clnt_xprt_switch_put
dd69171769cf4649a7ff3755e91cbd242a833727 SUNRPC rpc_clnt_xprt_switch_add_xprt
39e5d2df959dd4aea81fa33d765d2a5cc67a0512 SUNRPC search xprt switch for sockaddr
bb29dd84333a96f309c6d0f88b285b5b78927058 SUNRPC: Fix suspicious RCU usage
2493c67e518c772a573c3b1ad02e7ced5b53f6ca scsi: megaraid_sas: 128 MSIX Support
d889344e4e59eb962894ab3b64042dc37a2d8b39 scsi: megaraid_sas: Dynamic Raid Map Changes for SAS3.5 Generic Megaraid Controllers
3e5eadb1a881bea2e3fa41f5ae7cdbfa36222d37 scsi: megaraid_sas: Enable or Disable Fast path based on the PCI Threshold Bandwidth
b71b49c209facf8fec3778142ae5e45bb6ca4afc scsi: megaraid_sas: ldio_outstanding variable is not decremented in completion path
ede7c3ce82dc4001bbab33dddebab8c089f309e0 scsi: megaraid_sas: Implement the PD Map support for SAS3.5 Generic Megaraid Controllers
fa9251afc33c81606d70cfe91800a779096442ec SUNRPC: Call the default socket callbacks instead of open coding
4720b0703a0dfcd6da6a308ea71aaacc55beade7 SUNRPC: Micro optimisation for svc_data_ready
637600f3ffbf1af0c2efd5587ac357b900c4c999 SUNRPC: Change TCP socket space reservation
073931017b49d9458aa351605b43a7e34598caef posix_acl: Clear SGID bit when setting file permissions
74862b03b46a852662c1a30c859b985261ff5d5c x86/platform/UV: Add Support for UV4 Hubless systems
abdf1df6bc0416ec19b841e92b497ca55b23454c x86/platform/UV: Add Support for UV4 Hubless NMIs
278c9b099b2fc0cc0a51de95a1dcefcf54ca2183 x86/platform/UV: Add basic CPU NMI health check
f550e4692749a909d3f5453ef11b4c8ab2071070 x86/platform/UV: Verify NMI action is valid, default is standard
56e17ca2c5ed31f5812ed8e0694e7ef880068cfd x86/platform/UV: Initialize PCH GPP_D_0 NMI Pin to be NMI source
1e74016370ec3d552a7f5df18bb2b0f1c80b5a9f x86/platform/UV: Clean up the NMI code to match current coding style
7768fb2ee9e907bfa91d13cb698fa68880ddc80a crypto: qat - Reduced reqsize in qat_algs
9e209fcfb804da262e38e5cd2e680c47a41f0f95 crypto: qat - fix invalid pf2vf_resp_wq logic
6dc5df71ee5c8b44607928bfe27be50314dcf848 crypto: qat - fix adf_ctl_drv.c:undefined reference to adf_init_pf_wq
39befe3a43a5856b36de4e880804b9b110dd2885 amt: fix typo in comment
d0c15bd5067ec75d8738f4d4ba1e5e3ab0ea6f2d crypto: qat - make adf_vf_isr.c dependant on IOV config
773b197972bebcbd9eb3cd4d2688a68619eef85c crypto: qat - Remove deprecated create_workqueue
5a7de97309f5af4458b1a25a2a529a1a893c5269 crypto: rsa - return raw integers for the ASN.1 parser
4e5f2c400765e3a3ce512dc1ae890bac53401798 crypto: kpp - Key-agreement Protocol Primitives API (KPP)
802c7f1c84e4b5a6ac78635878041023fc5831b1 crypto: dh - Add DH software implementation
3c4b23901a0c766879dff680cd6bdab47bcdbbd2 crypto: ecdh - Add ECDH software support
6889621fd2317f52fd2c5ef1178128156f39fa94 crypto: qat - Switch to new rsa_helper functions
8be0b84e58a9b07c314f920792926c5c5a53d3da crypto: rsa - Store rest of the private key components
bd76ad4abfdccd26a9ac11214aa715e83bc8e808 crypto: qat - Stop dropping leading zeros from RSA output
5d92b75c753ae27578ee764df3be650c67fa5877 xfs: Change how listxattr generates synthetic attributes
c19b3b05ae440de50fffe2ac2a9b27392a7448e9 xfs: mode di_mode to vfs inode
b0388bf1088d992b45aa8af14d3151ae57848b17 xfs: remove XBF_DONE flag wrapper macros
1157b32c732cbab75320e429559c0ec9f5d382e4 xfs: remove XBF_ASYNC flag wrapper macros
0cac682ff683bac968c24a4774c69c3a9ff35013 xfs: remove XBF_READ flag wrapper macros
b68c08219a6726fb68dca2d56e024d2e2c1654f5 xfs: remove XBF_WRITE flag wrapper macros
12877da58429affc988403817b88d901fe01f8c1 xfs: remove XFS_BUF_ZEROFLAGS macro
2e74af0e118992e62062a6f0666edcac6d64afdc xfs: convert mount option parsing to tokens
a08ee40a79653d082911cab9fbeff94baa7714cb xfs: sanitize remount options
a798011c8fd4286605b990c1722c16903fc14b7a xfs: reinitialise per-AG structures if geometry changes during recovery
801cc4e17a34c32e1527827292fac9cec5d3393b xfs: debug mode forced buffered write failure
ce5c767db079649db88a9f189798839f9c544981 xfs: add missing break in xfs_parseargs()
2b3d1d41b4d96c3b074096ae57b27cd191969643 xfs: set up inode operation vectors later
2a6fba6d2311151598abaa1e7c9abd5f8d024a43 xfs: only return -errno or success from attr ->put_listent
e5bd12bfea60af455f4cbad494e4ac1082e3abd6 xfs: don't pass value into attr ->put_listent
7af5ad28a603f2d1ef4c579b8ab0a9d4767a348e xfs: remove put_value from attr ->put_listent context
3ab3ffcaca99e0b77480d77bd393fc227b09069f xfs: collapse cases in xfs_attr3_leaf_list_int
bb18782aa47d8cde90fed5cb0af312642e98a4fa xfs: build bios directly in xfs_add_to_ioend
37992c18bba3f578860c6448b7bae18a14e535d3 xfs: don't release bios on completion immediately
0e51a8e191dbd9b9c7b7bb0a1c28d57cd2be8e6a xfs: optimize bio handling in the buffer writeback path
253f4911f297b83745938b7f2c5649b94730b002 xfs: better xfs_trans_alloc interface
710b1e2c2948c1e5d0499def5273ecbc6472342d xfs: remove transaction types
9bdd9bd69b826875531bb1b2efb6aeb8d70e6f72 xfs: buffer ->bi_end_io function requires irq-safe lock
1f2dcfe89edac4e3bf5b76c56f745191f921fd2a xfs: xfs_inode_free() isn't RCU safe
8a17d7ddedb4d9031f046ae0e97c40b46aa69db5 xfs: mark reclaimed inodes invalid earlier
194293631d009254348f43710a7673bbb84a4172 xfs: rename variables in xfs_iflush_cluster for clarity
545c0889d26d47e1139c527002eb131343d13b63 xfs: simplify inode reclaim tagging interfaces
ad438c4038968e5ca5248f851212634e474983e8 xfs: move reclaim tagging functions
690a7871225b7f91f8fe13c465a79e183a61cfe3 xfs: fix warning in xfs_finish_page_writeback for non-debug builds
791cc43b36eb1f88166c8505900cad1b43c7fe1a Make __xfs_xattr_put_listen preperly report errors.
14f31bb39f5d4b69c179d219833d7edb9b36ebd9 bridge: simplify the flush_store by calling store_bridge_parm
4436156b6fbec746108d45431a9f1885de810ec1 bridge: simplify the stp_state_store by calling store_bridge_parm
047831a9b9c3e34410025df84f629c005f437e42 bridge: a netlink notification should be sent when those attributes are changed by br_sysfs_br
bf871ad792e3c9f5dda0ef5bd519e0a2f1564001 bridge: a netlink notification should be sent when those attributes are changed by ioctl
58bf454272d9761312792053c706b72a41f5e835 cpufreq: intel_pstate: Add Knights Mill CPUID
f1db5c101cd48b5555ed9e061dcc49ed329812ea alx: fix wrong condition to free descriptor memory
37187a016c37d7e550544544dba25399ce4589c9 alx: fix fallback to msi or legacy interrupts
185aceefd80f98dc5b9d73eb6cbb70739a5ce4ea alx: work around hardware bug in interrupt fallback path
24b91e360ef521a2808771633d76ebc68bd5604b nohz: Fix collision between tick and other hrtimers
9b94a8fba501f38368aef6ac1b30e7335252a220 ring-buffer: Use long for nr_pages to avoid overflow failures
dcb6b45254e2281b6f99ea7f2d51343954aa3ba8 panic: add cpu/pid to warn_slowpath_common in WARNING printk()s
2553b67a1fbe7bf202e4e8070ab0b00d3d3a06a2 lib/bug.c: use common WARN helper
8ad6b634928a25971dc42dce101808b1491f87ec KVM: Add KVM_EXIT_SYSTEM_EVENT to user space API header
2ce7918990641b07e70e1b25752d666369e2016e kvm/x86: add sending hyper-v crash notification to user space
afc3f83cb4a5bb3c8f18380bdeca6b65a6ff9543 scsi: ipr: Add asynchronous error notification
8a4236a2c7868768943a24dc7b1e2ff495836880 scsi: ipr: Fix async error WARN_ON
869ce69e1e8ae7e6fa4a1a90887e5f94eac653eb tools/power turbostat: use intel-family.h model strings
5bbac26eae35065a9b2a5279118daad14f88eae9 tools/power turbostat: fix Denverton BCLK
7268d407ad4c49fbd521fb2e2f675a447bfef472 tools/power turbostat: Denverton uses a 25 MHz crystal, not 19.2 MHz
85d9aa705184a4504d0330017e3956fcdae8a9d6 Drivers: hv: vmbus: add an API vmbus_hvsock_device_unregister()
9988ce685676cebe0b14dc128f00e1ae9cd1a4fa Drivers: hv: ring_buffer: wrap around mappings for ring buffers
f6b2db084b65b9dc0f910bc48d5f77c0e5166dc6 vmbus: make sysfs names consistent with PCI
fa32ff6576623616c1751562edaed8c164ca5199 Drivers: hv: ring_buffer: count on wrap around mappings in get_next_pkt_raw() (v2)
1f6ee4e7d83586c8b10bd4f2f4346353d04ce884 Drivers: hv: vmbus: On write cleanup the logic to interrupt the host
3372592a140db69fd63837e81f048ab4abf8111e Drivers: hv: vmbus: On the read path cleanup the logic to interrupt the host
433e19cf33d34bb6751c874a9c00980552fe508c Drivers: hv: vmbus: finally fix hv_need_to_signal_on_read()
bb91f8c0176b072aeb6b84cfd7e04084025121e0 x86/mce: Carve out writes to MCx_STATUS and MCx_CTL
fead35c68926682c90c995f22b48f1c8d78865c1 x86/mce: Detect local MCEs properly
14cddfd5308b0880abd6e58b6660f5cc8e8020f9 x86/mce: Update AMD mcheck init to use cpu_has() facilities
79349f529ab1a629b9e43e81b4a5b2c22d1e9a65 x86/RAS: Simplify SMCA bank descriptor struct
1ce9cd7f9f0b71af7c496b816734bc2dc699363a x86/RAS: Simplify SMCA HWID descriptor struct
a9a1c0ee04aa771e5523ae33e458c702261ab547 x86/RAS: Rename smca_bank_names to smca_names
859af13a103fc99a9a62064ef8f05f7d9ee58609 x86/mce/AMD: Fix HWID_MCATYPE calculation by grouping arguments
c7993890e772c450764d39ba872444307bbdd460 x86/amd_nb: Make amd_northbridges internal to amd_nb.c
de6bd0835ac148a0882528fe1fe5bcee709fe911 x86/amd_nb: Make all exports EXPORT_SYMBOL_GPL
b791c6b6a55c402367cc544f54921074253db061 x86/amd_nb: Add Fam17h Data Fabric as "Northbridge"
ddfe43cdc0da3189feac4bb9f0f818bef6d6e56e x86/amd_nb: Add SMN and Indirect Data Fabric access for AMD Fam17h
5c332202f805170436b210938fe3ad7f6b29bdbc EDAC, mce_amd: Rename nb_bus_decoder to dram_ecc_decoder
f5382de9d4b1d67cc858c49fa6077720621576ea x86/mce/AMD: Add system physical address translation for AMD Fam17h
3f37a36b6282621d7c5a99b6911275f989766996 EDAC, amd64_edac: Drop pci_register_driver() use
f1cbbec9fce958d3d71ed815a01c815b35533f1f EDAC, amd64: Add AMD Fam17h family type and ops
936fc3afaa8abc20dfea306c9b6d19a6e7ca5caf EDAC, amd64: Reserve correct PCI devices on AMD Fam17h
b64ce7cd7f540c64e3fbeaeee3ddb59bc9ab1a3b EDAC, amd64: Read MC registers on AMD Fam17h
07ed82ef93d6c70dcd1f31429a8fd12fbdeb21fd EDAC, amd64: Add Fam17h debug output
2d09d8f301f53cb92e7ae7183d58a74fc55f85c0 EDAC, amd64: Determine EDAC MC capabilities on Fam17h
df781d0386a3e29c31f1d8eaf845b3224e65dd7f amd64_edac: Simplify code around decode_bus_error
713ad54675fdfd7358dbcae21ab4788a014c6e23 EDAC, amd64: Define and register UMC error decode function
d7fc9d77acb8651e5fcb77df71dfd11fcf1f08ba EDAC: Add routine to check if MC devices list is empty
4688c9b42dd2040673a1c2208a1008822b07ee4a EDAC, amd64: Don't treat ECC disabled as failure
7071cf7fc435ab84df872613f613a9a055964fc1 uapi: add missing network related headers to kbuild
d0747f10ed5fec3d1f40c4b350dc9673011fc8e2 uapi: fix to export linux/vm_sockets.h
06a8fc78367d070720af960dcecec917d3ae5f3b VSOCK: Introduce virtio_vsock_common.ko
0ea9e1d3a9e3ef7d2a1462d3de6b95131dc7d872 VSOCK: Introduce virtio_transport.ko
433fc58e6bf2c8bd97e57153ed28e64fd78207b8 VSOCK: Introduce vhost_vsock.ko
b226acab2f6aaa45c2af27279b63f622b23a44bd VSOCK: Use kvfree()
3fda5d6e580193fa005014355b3a61498f1b3ae0 vhost/vsock: fix vhost virtio_vsock_pkt use-after-free
21bc54fc0cdc31de72b57d2b3c79cf9c2b83cf39 vhost/vsock: drop space available check for TX vq
b9116823189e85ccf3843c7d3ee3a361af0c3eb6 VSOCK: add loopback to virtio_transport
1440a3a12ba0a00f9fec7e6a62e49b11e079d381 vhost-vsock: remove unused vq variable
c4587631c7bad47c045e081d1553cd73a23be59a vhost-vsock: fix orphan connection reset
6c7efafdd5c1639084dd08ace82567e19a4032be vsock/virtio: add a missing __le annotation
819483d806f4324b42a25f8dd760735ae659141c vsock/virtio: mark an internal function static
f83f12d660d11718d3eed9d979ee03e83aa55544 vsock/virtio: fix src/dst cid format
6c083c2b8a0a110cad936bc0a2c089f0d8115175 vsock: lookup and setup guest_cid inside vhost_vsock_lock
c70ce028e834f8e51306217dbdbd441d851c64d3 net/rtnetlink: add IFLA_GSO_MAX_SEGS and IFLA_GSO_MAX_SIZE attributes
518f213dddb3375e8cf0fcb791dda4c7d1ce4c74 ethtool: Add support for toggling any of the GSO offloads
cbc53e08a793b073e79f42ca33f1f3568703540d GSO: Add GSO type for fixed IPv4 ID
1530545ed64b42e87acb43c0c16401bd1ebae6bf GRO: Add support for TCP with fixed IPv4 ID field, limit tunnel IP ID values
802ab55adc39a06940a1b384e9fd0387fc762d7e GSO: Support partial segmentation offload
a510887824171ad260cc4a2603396c6247fdd091 GSO: Reload iph after pskb_may_pull
d7fb5a80492169cd737d51042f4ee03b09be0ef6 gso: Do not perform partial GSO if number of partial segments is 1 or less
36c983824b6f17b93258153ff5b05c33c34e44ba gso: Only allow GSO_PARTIAL if we can checksum the inner protocol
7f348a60762afd4cd0e4e7fa14cfa66331b7c30e net: Add support for IP ID mangling TSO in cases that require encapsulation
07b26c9454a2a19fff86d6fcf2aba6bc801eb8d8 gso: Support partial splitting at the frag_list pointer
6fa79666e24d32be1b709f5269af41ed9e829e7e net: ip_tunnel: remove 'csum_help' argument to iptunnel_handle_offloads
e8ae7b000e64cf76283c72cae5e3ecd246618ef4 Documentation/networking: add checksum-offloads.txt to explain LCO
c81aa7979432aa10f23656ef6fa113764eab5e5c Documentation/networking: more accurate LCO explanation
aed069df099cd1a27900acb56bb892ec24c66ac4 ip_tunnel_core: iptunnel_handle_offloads returns int and doesn't free skb
1ba64facae5739d91884f8f34f25fef1cb66d930 geneve: testing the wrong variable in geneve6_build_skb()
86a98057256020e75e1be0f88d7617491a06e8f1 vxlan/geneve: Include udp_tunnel.h in vxlan/geneve.h and fixup includes
7c46a640de6fcc4f35d0702710356a024eadf68f net: Merge VXLAN and GENEVE push notifiers into a single notifier
5b01014759991887b1e450c9def01e58c02ab81b geneve: avoid use-after-free of skb->data
3e97fa7059c19f7cc2566dfb30fe9282f6f1e673 gre/ipip: use be16 variants of netlink functions
0d3c703a9d1723c7707e0680019ac8ff5922db42 ipv6: Cleanup IPv6 tunnel receive path
95f5c64c3c13a609e137d35c4b452519e0b954df gre: Move utility functions to common headers
8eb30be0352d09165e94a41fef1c7b994dca0714 ipv6: Create ip6_tnl_xmit
182a352d2d5e0b435f7856c0cc23d467dcec55ef gre: Create common functions for transmit
b05229f442288210f2b1f5b4b2a9d71836e90686 gre6: Cleanup GREv6 transmit path, call common GRE functions
00b2034029840ddad255352c46db0ae21342ce56 gre: remove superfluous pskb_may_pull
f132ae7c46370c981412a68ccec9f2145812a9b6 gre: change gre_parse_header to return the header length
244a797bdcf1b74567fa59d7e72d89ed0ee1ffd9 gre: move iptunnel_pull_header down to ipgre_rcv
125372faa4feb15e86f410c1adabbca9186d9c4a gre: receive also TEB packets for lwtunnels
db2ec95d1ba419b766aae7b1d7c0271f3c9cd9f4 ip6_gre: Fix MTU setting
d27bff9ca294ac76548ee97db5d92f39e4752a01 ip6_gre: Set inner protocol correctly in __gre6_xmit
da73b4e9538b9be96498241ab3f13eab94181e96 gre: Fix wrong tpi->proto in WCCP
1b227e536662eae4b7beee3037edbecdc577495f ip6_gre: Fix MTU setting for ip6gretap
22a59be8b7693eb2d0897a9638f5991f2f8e4ddd net: ipv4: Add ability to have GRE ignore DF bit in IPv4 payloads
e582615ad33dbd39623084a02e95567b116e1eea gre: fix error handler
3d7b33209201cbfa090d614db993571ca3c6b090 gre: set inner_protocol on xmit
02ca0423fd65a0a9c4d70da0dbb8f4b8503f08c7 ip6_tunnel: Account for tunnel header in tunnel MTU
ca4aa976f04d14bc7da60dce0e2afc34c9f0f1d2 ipv6: fix 4in6 tunnel receive path
ab34380162cbc9b5172afdadf5136643c687bb73 ipv6: Don't unset flowi6_proto in ipxip6_tnl_xmit()
80f23935cadb1c654e81951f5a8b7ceae0acc1b4 powerpc: Convert cmp to cmpd in idle enter sequence
ca86cad7380e373fa17bc0ee8aff121380323e69 audit: log module name on init_module
4396e058c52e167729729cf64ea3dfa229637086 timekeeping: Provide fast and NMI safe access to CLOCK_MONOTONIC
affe3e85ae78507cc953f3f700e0644e50844cff timekeeping: Pass readout base to update_fast_timekeeper()
4498e7467e9e441c18ca12f1ca08460356e0508a time: Parametrize all tk_fast_mono users
f09cb9a1808e35ad7502ea39b6bfb443c7fa0f19 time: Introduce tk_fast_raw
34f439278cef7b1177f8ce24f9fc81dfc6221d3b perf: Add per event clockid support
814c8c38e13c7050259c72f89bb01f3fc903f642 perf record: Add clockid parameter
791cceb89f7987c0375ff2e8971928a47f62ccae toops: Sync tools/include/uapi/linux/bpf.h with the kernel
46348456c1791053dcbe5a9e21825b10a3c8a8fb block: Copy a user iovec if it includes gaps
6f2ce1c6af37191640ee3ff6e8fc39ea10352f4c scsi: zfcp: fix rport unblock race with LUN recovery
cdeb6048940fa4bfb429e2f1cba0d28a11e20cd5 x86/asm/irq: Stop relying on magic JMP behavior for early_idt_handlers
e382dffc904d14cb6e2c31e2eefebdca41343943 x86/PCI: VMD: Use x86_vector_domain as parent domain
3b84080b9512bcacad3805f345fb8f092c8d3a7d KVM: VMX: move msr_ia32_feature_control to vcpu_vmx
37e4c997dadf713d5b9cb88a801eb38d61a2aefc KVM: VMX: validate individual bits of guest MSR_IA32_FEATURE_CONTROL
c45dcc71b794b5a346a43ad83bdcfac2138f0a2c KVM: VMX: enable guest access to LMCE related MSRs
74545f63890e38520eb4d1dbedcadaa9c0dbc824 perf/x86: Set pmu->module in Intel PMU modules
8b5b773d6245138c461b3a3e242339fa50fa9c58 perf/x86/intel/rapl: Convert to hotplug state machine
dd86e373e09fb16b83e8adf5c48c421a4ca76468 perf/x86/intel/rapl: Make package handling more robust
63a7b17e3fe8ef6217daa7be35e373c7807275f8 PCI/MSI: Simplify PCI MSI code by initializing msi_desc.nvec_used earlier
f0057310b40efe9f797ff337e9464e6a6fb9d782 tools/power turbostat: Decode MSR_MISC_PWR_MGMT
7f5c258e1ce1e0909d3195694ac79f143051e513 tools/power turbostat: decode HWP registers
61a87ba7893a256d86c7eea6a7ab10d38ccac9b2 tools/power turbostat: CPUID(0x16) leaf shows base, max, and bus frequency
75d2e44e60490ba1fee076a5f4dcfbdc8598e8c4 tools/power turbostat: re-name "%Busy" field to "Busy%"
b7d8c1483bbf6ec9d2dd76d6a1c91a38c3f6ac35 tools/power turbostat: add --out option for saving output in a file
36229897ba966bb0dc9e060222ff17b198252367 tools/power turbostat: make fewer systems calls
562a2d377bb9882c49debc9e1be7127a1717e242 tools/power turbostat: show IRQs per CPU
27d47356b6dfa92042a17a0b474f08910d4c8e8f tools/power turbostat: show GFXMHz
fdf676e51f301d207586d9bac509b8ce055bae8a tools/power turbostat: show GFX%rc6
0102b06747c7d24e334d2b27c4b43eed693676f1 tools/power turbostat: detect and work around syscall jitter
aa8d8cc79af16e16da04efff1c1a72b1ea4a9e7e tools/power turbostat: indicate SMX and SGX support
5aea2f7f645b27635b856311dee5b775d277c686 tools/power turbostat: call __cpuid() instead of __get_cpuid()
685b535b2cdb9cdf354321f8af9ed17dcf19d19f tools/power turbostat: bugfix: TDP MSRs print bits fixing
8ae7225591fd15aac89769cbebb3b5ecc8b12fe5 tools/power turbostat: SGX state should print only if --debug
5a63426e2a18775ed05b20e3bc90c68bacb1f68a tools/power turbostat: print IRTL MSRs
9185e988e9d5bb70b690362e84bb2e4a9d71f2c5 tools/power turbostat: work around RC6 counter wrap
ba3dec99fc99fbe5a08d6c37f06feeb4d4bcb921 tools/power turbostat: Gracefully handle ACPI S3
3d109de23c93e9196c370fd729fbd7ecf7371701 tools/power turbostat: switch to tab delimited output
01a67adfc5d73d24e999d9cf65b5b8a6687187b8 tools/power turbostat: Allocate correct amount of fd and irq entries
0a91e551527a7b931d36f4822b97e70536bd2bb3 tools/power turbostat: fix error case overflow read of slm_freq_table[]
d8ebb442264de62d5d0157adb8f0df96e831b3d3 tools/power turbostat: fix SKX PKG_CSTATE_LIMIT decoding
5cc6323c797687d7193fef6deec589c23f16289a tools/power turbostat: line up headers when -M is used
388e9c8134be6bbc3751ba7072f5fa9bc8ecbe01 tools/power turbostat: Make extensible via the --add parameter
6886fee4d7a3afaf905a8e0bec62dc8fdc39878d tools/power turbostat: remove obsolete -M, -m, -C, -c options
8b513d0cf603c0a9ccf86a92cb22931f05a7bc86 treewide: Fix typo in printk
571e09eeff544e5562bd2a704f1fe91083f7592f IB/mlx4: Use boottime
2c7f37ff1c33087b8a4567730ebb128e8572da5e IB/srpt: Fix srpt_handle_cmd() error paths
aaf45bd83eba804adfa5c4ff5b17ca0c88884c6f IB/srpt: Detect session shutdown reliably
fc3af58d3f8b820e3acabb1e1c4f105eb3f283c1 IB/srpt: Fix srpt_write_pending()
387add460dc2f61567fa127bd76dab8ba6833234 IB/srpt: Fix wait list processing
318d311e8f016dbbf22160d7b1c19a290a95ad9d iser: Accept arbitrary sg lists mapping if the device supports it
d1ca2ed7dcf859dcb7fc642d4d3ed42c1693d20c iser-target: Kill struct isert_rdma_wr
e3416ab2d156ac0f0a3d9e55bcdff69d109ba403 iser-target: Kill the ->isert_cmd back pointer in struct iser_tx_desc
5658600e7f67063e75b8fb8fa6c697183d305dd3 ib_srpt: fix a WARN_ON() message
65e8617fba17732b4c68d3369a621725838b6f28 scsi: rename SCSI_MAX_{SG, SG_CHAIN}_SEGMENTS
33cfaaa8f36ffbee9ad259264334325b5449f5fe net/mlx5e: Split the main flow steering table
1cabe6b0965ec067ac60e8f182f16d479a3b9a5c net/mlx5e: Create aRFS flow tables
18c908e477dcc94ede69323a6b876b5d8cfb40ff net/mlx5e: Add accelerated RFS support
45bf454ae88414e80b80979ebb2c22bd66ea7d1b net/mlx5e: Enabling aRFS mechanism
3c9346b24001523a763c28478b49064589d1c8ab net/mlx4_en: Add support for UDP tunnel segmentation with outer checksum offload
fbc4a69b562e38d6946bc8bd7e97d30fe0acd5d0 net/mlx5e: Fix aRFS compilation dependency
efdc810ba39dae0ccce9cb9c1c84ff9b0157ca43 net/mlx5: Flow steering, Add vport ACL support
f942380c12394002efe0ca0be023e0f6fafbf29b net/mlx5: E-Switch, Vport ingress/egress ACLs rules for spoofchk
01f51f2247250eb69d2fd345c498eedbb078bb56 net/mlx5: E-Switch, Enable/disable ACL tables on demand
a35f71f27a614aff106cc89b86168962bce2725f net/mlx5: E-Switch, Implement promiscuous rx modes vf request handling
1edc57e2b3d3bf8672bb1553dbd541cc94f54937 net/mlx5: E-Switch, Implement trust vf ndo
1de1d449c6cf701e09d2941d042b28328118ad1a mlx5: Fix merge errors.
5835812f13e56483f2c4907664bb43b0a78546b6 target: ensure se_cmd->t_prot_sg is allocated when required
e64aa657c3d0dae84c2ccc166f6fe25b7d1d28c6 target: enhance and export target_alloc_sgl/target_free_sgl
b99f8e4d7bcd3bfbb3cd965918523299370d0cb2 IB/srpt: convert to the generic RDMA READ/WRITE API
38a2d0d429f1d87315c55d9139b8bdf66d51c4f4 IB/isert: convert to the generic RDMA READ/WRITE API
bd5251dbf156b6bc0661a9409d46e47160df61dd net/mlx5_core: Introduce flow steering destination of type counter
43a335e055bb7ebdc8a68ce7362ef26ef5bda92b net/mlx5_core: Flow counters infrastructure
55fdfce101a0afe7bb9da17b4edbee049ae1c18d xprtrdma: Rename rpcrdma_frwr::sg and sg_nents
a3aa8b2b84a59ddd5f624aae9ee0f8b3333793e8 xprtrdma: Save I/O direction in struct rpcrdma_frwr
d7a21c1bed54adcf96e1713019a6ad87e90fbbc3 xprtrdma: Reset MRs in frwr_op_unmap_sync()
660bb497d0ae0c9e6be5beaff7ba17bfa5c9718c xprtrdma: Refactor the FRWR recovery worker
766656b022a629201b6e183c7837160cd0919286 xprtrdma: Move fr_xprt and fr_worker to struct rpcrdma_mw
0b043b9fb5dabcb6f187136cc685b26a7f8bcdb1 xprtrdma: Remove ro_unmap() from all registration modes
38036629cded6b96a9f9689758a88d067c4d4d44 rds: tcp: block BH in TCP callbacks
492a7e67ff83fc59adb768de25ccaecd33d46beb IB/IPoIB: Allow setting the device address
d55215c50e4eaa4b906a42ef45884d8fcbadc777 IB/hfi1: Use bit 0 instead of bit 1
198b12f77084244d310888dd5d643083cb5c2aa1 IB/IPoIB: Fix race between ipoib_remove_one to sysfs functions
9b29953bf8ca23944c5e00dcc15ad7bd9fecdd4e IB/IPoIB: Disable bottom half when dealing with device address
bd02ef8eec0b98abe6d5efe280c87903b2eb9874 net/mlx5: Fix E-Switch flow steering capabilities check
876d634d19e41603aab91455f2c52a78a28372d5 net/mlx5: Fix flow steering NIC capabilities check
3f42ac6648723e906c1c10edc0c523aff29963cc net/mlx5: E-Switch, Use the correct error check on returned pointers
25fff58cb24c8880090d8b8ef7746001a135e876 net/mlx5: E-Switch, Fix vport enable flow
62e3c24ac4f0ee307c41a3652636f88a3f8d165c net/mlx5: E-Switch, always set mc_promisc for allmulti vports
60262b10a96bb186049f1eca4849ccbb2e81f253 RDMA/hns: Fix coding style issues
c0cf4512a31eb3cec70b066bc36ed55f7d05b8c0 IB/srpt: Reduce QP buffer size
3947ca1859999ac00698c0da0d233813a93d288a net/mlx5e: Implement ndo_tx_timeout callback
2c1ccc993707ecb0830ef0aebb7c8061f7704aa3 net/mlx5e: Fix TX Timeout to detect queues stuck on BQL
0cb43965d42a21a7af41f88f1021b478dc102425 RDS: split out connection specific state from rds_connection to rds_conn_path
7e8f4413d7861efcb332ebce8d9b000a17eaa0e5 RDS: add t_mp_capable bit to be set by MP capable transports
1f9ecd7eacfd9ee52a114b87292bfe885aafdb1f RDS: Pass rds_conn_path to rds_send_xmit()
1c5113cf796bb730abc1798a3649b61e9e022be6 RDS: Initialize all RDS_MPATH_WORKERS in __rds_conn_create
d769ef81d5b5932520fbefb02614a4380c132495 RDS: Update rds_conn_shutdown to work with rds_conn_path
a831274a1346913c145797ddee6f39e30e061318 mlx4_en: Replace ndo_add/del_vxlan_port with ndo_add/del_udp_enc_port
974c3f3000d85a3504ce294bcae6472ff9040770 mlx5_en: Replace ndo_add/del_vxlan_port with ndo_add/del_udp_enc_port
5fd251c8b4c52da0d0916470a67fbb77b972125e IB/core: Introduce Work Queue object and its verbs
6d39786bf116e476d75eca91f7cfa22586a32e5f IB/core: Introduce Receive Work Queue indirection table
89ea94a7b6c40eb423c144aef1caceebaff79c8d IB/mlx5: Reset flow support for IB kernel ULPs
af7d5185263133f859dd4f35d45594deef9db854 net/mlx4_en: Add DCB PFC support through CEE netlink commands
1466cc5b23d18e7b6b8f1a45443d595393dbcae7 net/mlx5: Rate limit tables support
507f0c817f7a28bbf4facb3a8dca72a68bc25248 net/mlx5e: Add TXQ set max rate support
cb3c7fd4f8393e0c42cbb13367b60454ae4e05f7 net/mlx5e: Support adaptive RX coalescing
226f7a7d97e37220a442f52eb85ebff2cd6fc0d2 RDS: Rework path specific indirections
02105b2ccdd6344146e0296172a9e0f17ff624ef RDS: TCP: Make rds_tcp_connection track the rds_conn_path
afb4164d91c7486a1d4ab098a1b88e27b5e25772 RDS: TCP: Refactor connection destruction to handle multiple paths
ea3b1ea53930879c9847044f5cb9c97411cae797 RDS: TCP: make ->sk_user_data point to a rds_conn_path
2da43c4a1b517d02e71d9611a2242273e7d399ba RDS: TCP: make receive path use the rds_conn_path
b04e8554f7637999af8f54cca4dcfcf49f2ae7c8 RDS: TCP: Hooks to set up a single connection path
8315011ad67670691545ed394968435f0a0bb29e RDS: TCP: Simplify reconnect to avoid duelling reconnnect attempts
6ab36e35f11244b469cdf3c976c185363f1ce61c net/mlx5: E-Switch, Add operational mode to the SRIOV e-Switch
69697b6e2086b5860bd2d216bc4c6c49d84d73ff net/mlx5: E-Switch, Add support for the sriov offloads mode
3aa335724f0793027c87fae03ecf0a297fc04b29 net/mlx5: E-Switch, Add miss rule for offloads mode
ab22be9ba30a08482b2c2effb36ac3f0ed3df465 net/mlx5: E-Switch, Add API to create send-to-vport rules
c116c6eec6f72aac82ff4228ab1d277f3f9a2460 net/mlx5: E-Switch, Add offloads table
fed9ce22bf8ae8f417b8f047d2d630542d152ccf net/mlx5: E-Switch, Add API to create vport rx rules
c930a3ad7453615b6707509e23afa5969095b5b7 net/mlx5e: Add devlink based SRIOV mode changes
b50d292b4399f4eb11e82d0430aacf62dd5d5365 net/mlx5e: Create NIC global resources only once
724b2aa15126d9e24b36650c5cad9cf468c20785 net/mlx5e: TIRs management refactoring
398f33511e97aad7f259e864a1596fc8ef559dc1 net/mlx5e: Mark enabled RQTs instances explicitly
6bfd390ba5466675f6f02f77a3e957bd4e6075ee net/mlx5e: Add support for multiple profiles
127ea380acc9de16c2cbd57ed99475944c9917ec net/mlx5: Add Representors registration API
cb67b832921cfa20ad79bafdc51f1745339d0557 net/mlx5e: Introduce SRIOV VF representors
fba53f7b571925b8a0d59d460ad6de1fda928a3e net/mlx5: Introduce mlx5_flow_steering structure
0da2d66666d32769fa0aebb5f1d2d0a86be6c5d2 net/mlx5: Properly remove all steering objects
6dc6071cfcde6cf687f8d288c9cef9ee6ee24dc7 net/mlx5e: Add ethtool flow steering support
1174fce8d1410d13b665cb7693250cc789637b9a net/mlx5e: Support l3/l4 flow type specs in ethtool flow steering
f913a72aa008777d4a92f82acafb17cce9aed4dc net/mlx5e: Add support to get ethtool flow rules
564471d2f2f1ddaf02119b8759813666db93abba xprtrdma: Create common scatterlist fields in rpcrdma_mw
d48b1d295079f5e45b5c38683b7be353af1b2bda xprtrdma: Move init and release helpers
88975ebed5a82b7f0a16f22c81253fdd1ba15fce xprtrdma: Rename fields in rpcrdma_fmr
fcdfb968a706b0e80b12832bc30387ee9e0a759e xprtrdma: Use scatterlist for DMA mapping and unmapping under FMR
505bbe64dd04b105c1377703252758ac56f92485 xprtrdma: Refactor MR recovery work queues
42fe28f607634841e870acf16b10469824594463 xprtrdma: Do not leak an MW during a DMA map failure
2dc3a69de0d6e7f4dba7dbf8eadd5c3ac34098c7 xprtrdma: Remove ALLPHYSICAL memory registration mode
b54054ca5590f59469437fc4a78a978edcb01c31 xprtrdma: Clean up device capability detection
7a89f9c626e337ba6528d8a2829b228c933877fb xprtrdma: Honor ->send_request API contract
a54d4059e5f356c522aabfd38563ab6e64773263 xprtrdma: Chunk list encoders must not return zero
e2ac236c0b65129f12fef358390f76cc3cacb865 xprtrdma: Allocate MRs on demand
2ffc871a574daa760ef4f7750e0a36187a45754a xprtrdma: Release orphaned MRs immediately
9d6b0409788287b64d8401ffba2ce11a5a86a879 xprtrdma: Place registered MWs on a per-req list
5ab8142839c714ed5ac9a9de1846ab71f87a3ed7 xprtrdma: Chunk list encoders no longer share one rl_segments array
29cc6679076a00a6ce193004dcf2d14ae7c428a5 net/mlx5: Store counters in rbtree instead of list
a351a1b03bf169f77891060be30036ef71cbe618 net/mlx5: Introduce bulk reading of flow counters
1033665e63b6d98e91c1b938bad2dc624a72c137 net/mlx5: E-Switch, Use two priorities for SRIOV offloads mode
3d80d1a2f59ab350f452e1dbc085ba68e5fd8169 net/mlx5: E-Switch, Add API to configure rules for the offloaded mode
ac3615e7f3cffe2a1a6b25172dfd09e138593d82 RDS: TCP: Reduce code duplication in rds_tcp_reset_callbacks()
5916e2c1554f3e36f770401c989c3c7fadf619ca RDS: TCP: Enable multipath RDS for TCP
53d7852307295b4576777618cbc2684bb191fb46 xprtrdma: fix semicolon.cocci warnings
44fafdaa757cf251aade6c071f772ddb4e8a9885 net/mlx5: Use PTR_ERR_OR_ZERO() to simplify the code
b8b9d81b36a4adada3ef3504c252e2518393884d libcxgb: add library module for Chelsio drivers
cff92d7c7ebd7ceddd4def6b39e0302585b1eb14 net/mlx5e: Query minimum required header copy during xmit
0904f32796d4bb2d8102cd0056d8634f247ce45a IB/hfi1: Remove unnecessary done label in hfi1_write_iter
30c6d8773de06878f920666d8c945f81cb2081b3 IB/srpt: Limit the number of SG elements per work request
10fce586b20ba27013f0a6ac73b3ac87c95cf8b5 IB/srpt: Simplify srpt_queue_response()
4197344ba5c2aab24b96f141cb00af9d0471f60b IB/hfi1: Add global structure for affinity assignments
d63730192f5914c0f6feec3d45116486be1d36e3 IB/hfi1: Reserve and collapse CPU cores for contexts
b094a36f90975373c3a241839869217a65f17d81 IB/hfi1: Refine user process affinity algorithm
5aaba36318e5995e8c95d077a46d9a4d00fcc1cd cpumask: factor out show_cpumap into separate helper function
b14db1f0aa4fccd0e5ebcbe588d1136f3a23dbc6 IB/hfi1: Add sysfs entry to override SDMA interrupt affinity
8700e3e7c4857d28ebaa824509934556da0b3e76 Soft RoCE driver
6c3b4f90861c7ed59d0287b0ff7f2623f9d93d73 net/mlx5: Update last-use statistics for flow rules
dbe413e3bb93e0634f6d8d00b01cda6f141e0acd net/mlx5e: Retrieve the switchdev id from the firmware only once
ef78618b9d29d40c95ca7092493545b8487e226c net/mlx5: E-Switch, Return the correct devlink e-switch mode
1a8ee6f25b10da7e3de0899a184b221d793f2482 net/mlx5: E-Switch, Set the send-to-vport rules in the correct table
f96750f8d6bd64bb6f5a7a1146121b96bc6115f0 net/mlx5: E-Switch, Avoid ACLs in the offloads mode
8303f683b161467b6595c153c8751b80f9df3508 IB/hfi1: Allocate cpu mask on the heap to silence warning
fe4c988bdd1cc60402a4e3ca3976a686ea991b5a net/mlx5e: Limit UMR length to the device's limitation
f2fde18c52a7367a8f6cf6855e2a7174e601c8ee net/mlx5e: Don't wait for RQ completions on close
8484f9ed13b26043be80ff5774506024956eae8f net/mlx5e: Don't post fragmented MPWQE when RQ is disabled
6e8dd6d6f4bd2fd6fefdbf2e73bf251e36db59af net/mlx5e: Don't wait for SQ completions on close
cc8e9ebf952699cb6870f1366a4920d05b036e31 net/mlx5e: Fix ethtool -g/G rx ring parameter report with striding RQ
bf50082c15eb2bc47d1922e70f424c57f36646d5 net/mlx5e: Fix memory leak if refreshing TIRs fails
e5835f2833b12808c53aa621d1d3aa085706b5b3 net/mlx5: Increase number of ethtool steering priorities
74a9e9054456658f047bf71d9108844defde793d net/mlx4_en: Fix the return value of mlx4_en_dcbnl_set_all()
c677071741343381f4f555867c04af7ec4a90869 net/mlx4_en: Fix the return value of mlx4_en_dcbnl_set_state()
564ed9b187082da79726a2f25bb88a58ebeec7e8 net/mlx4_en: Fixes for DCBX
7a61fc86af4a0c957c5b8c5777ab21d5cc286748 net/mlx4_en: Fix panic on xmit while port is down
5e102b3b4fa944815aead89e63eec2a35069a07b IB/rxe: fix GFP_KERNEL in spinlock context
dfdd6158ca2c8838313470c5ab79243d04da70b2 IB/rxe: Fix kernel panic in udp_setup_tunnel
908948877bbbb240f67d7eb27d3a392beb394a07 IB/rxe: Fix duplicate atomic request handling
3050b99850247695cb07a5c15265afcc08bcf400 IB/rxe: Fix race condition between requester and completer
c1cc72cb6ff95cbe02ed747866576dccab4a5911 IB/rxe: Fix kmem_cache leak
babd6134a54d70efe875fa5661a20eaecb63f278 net/mlx5: Fix flow counter bulk command out mailbox allocation
6c419ba8e2580ab17c164db6e918e163d3537ec1 net/mlx5: E-Switch, Handle mode change failures
01cfbad79a5e2b835abf6a8154a341d75a6fc8cd ipv4: Update parameters for csum_tcpudp_magic to their original types
55a93b3ea780908b7d1b3a8cf1976223a9268d78 qdisc: validate skb without holding lock
b22b941b2c253a20e1d000c671594c4f3f0a3858 rtnetlink: fix frame size warning in rtnl_fill_ifinfo
3dcd493fbebfd631913df6e2773cc295d3bf7d22 net: sched: do not requeue a NULL skb
550bce59baf3f3059cd4ae1e268f08f2d2cb1d5c rtnetlink: rtnl_fill_stats: avoid an unnecssary stats copy
18402843bf88c2e9674e1a3a05c73b7d9b09ee05 net: Align IFLA_STATS64 attributes properly on architectures that need it.
35c5845957c7982dac1f525ff3412f8acf0a0385 net: Add helpers for 64-bit aligning netlink attributes.
cca1d81574d266d4a3aa33f3947297564525e127 net: fix HAVE_EFFICIENT_UNALIGNED_ACCESS typos
10c9ead9f3c6bb24bddc9a96681f7d58e6623966 rtnetlink: add new RTM_GETSTATS message to dump link stats
e6f268ef3687862b0e9f01f7b3706b54f75b82ab net: nla_align_64bit() needs to test the right pointer.
089bf1a6a924b97a7e9f920bae6253a8ad581cf3 libnl: add more helpers to align attributes on 64-bit
58414d32a37e4c2f79da91aebc2d2365918a1562 rtnl: use the new API to align IFLA_STATS*
11a99573079e15f11499ae8d21b07e3e3257fff1 libnl: fix help of _64bit functions
b46f6ded906ef0be52a4881ba50a084aeca64d7e libnl: nla_put_be64(): align on a 64-bit area
e9bbe898cbe89b17ad3993c136aa13d0431cd537 libnl: nla_put_net64(): align on a 64-bit area
2175d87cc3561c02e605bc8ac81ee5d875a51b9e libnl: nla_put_msecs(): align on a 64-bit area
73520786b0793c612ef4de3e9addb2ec411bea20 libnl: add nla_put_u64_64bit() helper
de95c4a46a6e608444ccaf541087594553c7df11 xfrm: align nlattr properly when needed
343a6d8e4955f298206d83ae764acf60d146b898 rtnl: use nla_put_u64_64bit()
12a0faa3bd76157b9dc096758d6818ff535e4586 bridge: use nla_put_u64_64bit()
2dad624e6dd65c6048a9bbe0e16559fce182c87c wireless: use nla_put_u64_64bit()
f60d94c009685da0632d93297cae971c5898a04b macsec: use nla_put_u64_64bit()
6ed46d1247a595c58b6c04481fa77cf532f45de0 sock_diag: align nlattr properly when needed
270cb4d05b2923a4a4d712276e61f64c82567138 rtnl: align nlattr properly when needed
d3fff6c443fe8f8a5ef2bdcea45e2ff39db948c7 net: add netdev_lockdep_set_classes() helper
503eebc265dcf5c512454fd5a6b6673ea4f1d7f2 net: add dev arg to ndo_neigh_construct/destroy
18bfb924f0005a728caadd90ba755b2a660bf441 net: introduce default neigh_construct/destroy ndo calls for L2 upper devices
79aab093a0b5370d7fc4e99df75996f4744dc03f net: Update API for VF vlan protocol 802.1ad support
fa34cd94fb01fcb8d79d91e009451b37692e94e5 net: rtnl: avoid uninitialized data in IFLA_VF_VLAN_LIST handling
775f4f05501b3e36550ab63a592de3abd02e7591 net: rtnl: info leak in rtnl_fill_vfinfo()
4775cc1f2d5abca894ac32774eefc22c45347d1c rtnl: stats - add missing netlink message size checks
1d023284c31a4e40a94d5bbcb7dbb7a35ee0bcbc list: fix order of arguments for hlist_add_after(_rcu)
bec3cfdca36bf43cfa3751ad7b56db1a307e0760 net: skb_segment() provides list head and tail
432c856fcf45c468fffe2e5029cb3f95c7dc9475 net: skb_segment() should preserve backpressure
860e9538a9482bb84589f7d0718a7e6d0a944d58 treewide: replace dev->trans_start update with helper
1666d49e1d416fcc2cce708242a52fe3317ea8ba mld: do not remove mld souce list info when set link down
0e54d2179f650bac80d89a9def429dbdbed58c11 netfilter: conntrack: simplify init/uninit of L4 protocol trackers
c51d39010a1bccc9c1294e2d7c00005aefeb2b5c netfilter: conntrack: built-in support for DCCP
a85406afeb3e045b001b2aac5b4f89f4266fede3 netfilter: conntrack: built-in support for SCTP
9b91c96c5d1f9da79438292f8c82f65cbf078645 netfilter: conntrack: built-in support for UDPlite
8f6fd83c6c5ec66a4a70c728535ddcdfef4f3697 rhashtable: accept GFP flags in rhashtable_walk_init
246779dd090bd1b74d2652b3a6ca7759f593b27a rhashtable: Remove GFP flag from rhashtable_walk_init
ca26893f05e86497a86732768ec53cd38c0819ca rhashtable: Add rhlist interface
22f0708a718daea5e79de2d29b4829de016a4ff4 vxlan: fix oops in dev_fill_metadata_dst
f89c56ce710afa65e1b2ead555b52c4807f34ff7 ipv6: Don't use ufo handling on later transformed packets
0f3cd9b3697708c86a825ae3cedabf7be6fd3e72 netfilter: nf_tables: add range expression
ccca6607c545534e5b74ef04e0f2f6ba11344be4 netfilter: nft_range: validate operation netlink attribute
d2e4d593516e877f1f6fb40031eb495f36606e16 netfilter: nf_tables: avoid uninitialized variable warning
4e24877e61e8507c0843e4bddbc6ecccbfd2e87d netfilter: nf_tables: simplify the basic expressions' init routine
49cdc4c74918a5576cb93b679629714d8a9ef399 netfilter: nft_range: add the missing NULL pointer check
4c75431ac3520631f1d9e74aa88407e6374dbbc4 net: prevent of emerging cross-namespace symlinks
7ce64c79c4decdeb1afe0bf2f6ef834b382871d1 net: fix creation adjacent device symlinks
0b5da8db145bfd44266ac964a2636a0cf8d7c286 fuse: add support for SEEK_HOLE and SEEK_DATA in lseek
546125d1614264d26080817d0c8cddb9b25081fa sunrpc: don't call sleeping functions from the notifier block callbacks
29732938a6289a15e907da234d6692a2ead71855 vfs: add copy_file_range syscall and vfs helper
cb4c4e8091e86e08cb2d48e7ae6bf454245c36cb x86: add sys_copy_file_range to syscall tables
696aafd36905a90af87c64d1278f91e39e66ae1e s390: wire up copy_file_range syscall
d7f9ee60a6ebc263861a1d8c06acf100495201b7 powerpc: Wire up copy_file_range() syscall
eac70053a141998c40907747d6cea1d53a9414be vfs: Add vfs_copy_file_range() support for pagecache copies
acc15575e78e534c12549d8057a692f490a50f61 locks: new locks_mandatory_area calling convention
67911c8f18b595040f5c2df0550c69a7c9397891 NFS: Add nfs_commit_file()
2e72448b07dc3ff1b7593e9bfff91db182262857 NFS: Add COPY nfs operation
a76b5b04375f974579c83433b06466758c0c552c fs: try to clone files first in vfs_copy_file_range
204e986d917cfa9364f05c5e7e42394a80788115 serial: 8250dw: Add device HID for future AMD UART controller
f114766088f352a47f57307ff927b815e0239644 crytpo: ccp - CCP device driver build files
d1dd206c2abf678889445e63ecc949e9274f5806 crytpo: ccp - fix coccinelle warnings
81a59f000e1d4a60a03081a1fc64aee46d6f0c3e crypto: ccp - Change data length declarations to u64
c11baa02c5d6ea06362fa61da070af34b7706c83 crypto: ccp - Move HMAC calculation down to ccp ops file
126ae9adc1ec8d9006542f1a5e474b0183845e21 crypto: ccp - Base AXI DMA cache settings on device tree
4839ddcaba266bcf37dfb00757f339ab9de4710e crypto: ccp - Remove "select OF" from Kconfig
c9f21cb6388898bfe69886d001316dae7ecc9a4b crypto: ccp - Check for CCP before registering crypto algs
8db8846754767bc955eaf7e28db8a94787d12ce6 crypto: ccp - Updates for checkpatch warnings/errors
a5bd093af0d11611b765d3cbd354e0a39975caab crypto: ccp - Update CCP build support
be03a3a0961eba0bc695fa91ac87efe5f4b8f40c crypto: ccp - Convert calls to their devm_ counterparts
355eba5dda6984cbe10fa914e5cc8ef45a34cce2 crypto: ccp - Replace BUG_ON with WARN_ON and a return code
21dc9e8f941f8693992230d189a556b220b50f5b crypto: ccp - Change references to accelerator to offload
166db195536f380c4545a8d2fca9789402464bc8 crypto: ccp - Use module name in driver structures
bdd75064d2b2068007f4fc5e26ac726e8617a090 crypto: ccp - Use precalculated hash from headers
c6c59bf2c0d60e67449190a8a95628ecd04b3969 crypto: ccp - use to_pci_dev and to_platform_device
3f19ce2054541a6c663c8a5fcf52e7baa1c6c5f5 crypto: ccp - Remove check for x86 family and model
553d2374db0bb3f48bbd29bef7ba2a4d1a3f325d crypto: ccp - Support for multiple CCPs
c7019c4d739e79d7baaa13c86dcaaedec8113d70 crypto: ccp - CCP versioning support
ea0375afa17281e9e0190034215d0404dbad7449 crypto: ccp - Add abstraction for device-specific calls
03a6f29000fdc13adc2bb2e22efd07a51d334154 crypto: ccp - fix lock acquisition code
7587c407540006e4e8fd5ed33f66ffe6158e830a crypto: ccp - Fix RT breaking #include <linux/rwlock_types.h>
58ea8abf490415c390e0cc671e875510c9b66318 crypto: ccp - Register the CCP as a DMA resource
b3c2fee5d66b0d1e977de1a56243002e532da6a5 crypto: ccp - Ensure all dependencies are specified
bc197b2a9c7e0129fa0ec1961881e2a0b3bef967 crypto: ccp - constify ccp_actions structure
fa242e80c7fb581eddbe636186020786f2e117da crypto: ccp - Fix non-conforming comment style
fba8855cb2403707b0639bdff0d34149699f14a2 crypto: ccp - Abstract PCI info for the CCP
a43eb98507574acfc435c38a6b7fb1fab6605519 crypto: ccp - Shorten the fields of the action structure
956ee21a6df08afd9c1c64e0f394a9a1b65e897d crypto: ccp - Refactoring: symbol cleanup
58a690b701efc32ffd49722dd7b887154eb5a205 crypto: ccp - Refactor the storage block allocation code
8256e683113e659d9bf6bffdd227eeb1881ae9a7 crypto: ccp - Refactor code supporting the CCP's RNG
bb4e89b34d1bf46156b7e880a0f34205fb7ce2a5 crypto: ccp - Refactor code to enable checks for queue space.
4b394a232df78414442778b02ca4a388d947d059 crypto: ccp - Let a v5 CCP provide the same function as v3
084935b208f6507ef5214fd67052a67a700bc6cf crypto: ccp - Add support for the RNG in a version 5 CCP
99d90b2ebd8b327c0c496798db99009b30c70945 crypto: ccp - Enable DMA service on a v5 CCP
e14e7d126765ce0156ab5e3b250b1270998c207d crypto: ccp - Enable use of the additional CCP
ba22a1e2aa8ef7f8467f755cfe44b79784febefe crypto: ccp - add missing release in ccp_dmaengine_register
664f570a9cee51a8c7caef042118abd2b48705b1 crypto: ccp - use kmem_cache_zalloc instead of kmem_cache_alloc/memset
7514e3688811e610640ec2201ca14dfebfe13442 crypto: ccp - Fix return value check in ccp_dmaengine_register()
9ddb9dc6be095ebe393f7eb582df09cc4847c5e9 crypto: ccp - clean up data structure
81422badb39078fde1ffcecda3caac555226fc7b crypto: ccp - Make syslog errors human-readable
3cf799680d2612a21d50ed554848dd37241672c8 crypto: ccp - change type of struct member lsb to signed
5130ccea7cf4646a24c005be1309b7f86f1e91c9 ceph: fix non static symbol warning
fdd2cf9db1e25a46a74c5802d18435171c92e7df crypto: ccp - change bitfield type to unsigned ints
103600ab966a2f02d8986bbfdf87b762b1c6a06d crypto: ccp - Clean up the LSB slot allocation code
e6414b13ea39e3011901a84eb1bdefa65610b0f8 crypto: ccp - Fix handling of RSA exponent on a v5 device
500c0106e638e08c2c661c305ed57d6b67e10908 crypto: ccp - Fix DMA operations when IOMMU is enabled
e5da5c5667381d2772374ee6a2967b3576c9483d crypto: ccp - Fix double add when creating new DMA command
ed911b43adb889c37a37fa57a995f0b460c633b6 pvclock: Get rid of __pvclock_read_cycles in function pvclock_read_flags
3aed64f6d341cdb62bb2d6232589fb13448ce063 pvclock: introduce seqcount-like API
108b249c453dd7132599ab6dc7e435a7036c193f KVM: x86: introduce get_kvmclock_ns
e3fd9a93a12a1020067a676e826877623cee8e2b kvm: kvmclock: let KVM_GET_CLOCK return whether the master clock is in use
8b9534406456313beb7bf9051150b50c63049ab7 KVM: x86: do not go through vcpu in __get_kvmclock_ns
ea26e4ec08d4727e3a9e48a6b74695861effcbd9 KVM: x86: drop TSC offsetting kvm_x86_ops to fix KVM_GET/SET_CLOCK
7ca29de21362de242025fbc1c22436e19e39dddc KVM: nVMX: fix CR3 load if L2 uses PAE paging and EPT
ee146c1c100dbe9ca92252be2e901b957476b253 KVM: nVMX: propagate errors from prepare_vmcs02
9ed38ffad47316dbdc16de0de275868c7771754d KVM: nVMX: introduce nested_vmx_load_cr3 and call it on vmentry
1dc35dacc16b4f13547125c5df2d026d9e46ea01 KVM: nVMX: check host CR3 on vmentry and vmexit
5446a979e0805cedd3b7b4909d7f68f69b201fe3 svm: bitwise vs logical op typo
4e59516a12a6ef6dcb660cb3a3f70c64bd60cfec kvm: vmx: ensure VMCS is current while enabling PML
d048c098218e91ed0e10dfa1f0f80e2567fe4ef7 KVM: nVMX: fix msr bitmaps to prevent L2 from accessing L0 x2APIC
bd768e146624cbec7122ed15dead8daa137d909d KVM: x86: fix wbinvd_dirty_mask use-after-free
355f4fb1405ec29d0fac49b4d41fcd78cbd455d5 kvm: nVMX: VMCLEAR an active shadow VMCS after last use
38f7c5a11e8ec0f770d8850ca8442528a959f9f3 ACPICA: Export acpi_tb_validate_rsdp().
9187a415fd119c1d89a5ad2fd05513cd43699ebf ACPICA: Add new statistics interface.
fab4610583855d544394320d47fccb43305a6398 ACPICA: Cleanup the option of forcing the use of the RSDT.
7f9fc99cde939187c1ee6dac115bdb76655cc798 ACPICA: Tables: Clean up split INSTALLED/VALIDATED table state logics.
86dfc6f339886559d80ee0d4bd20fe5ee90450f0 ACPICA: Tables: Fix table checksums verification before installation.
8a216d7f6aa94c3e252bbfdb2c422e2d0380084e ACPICA: Tables: Cleanup ACPI_TABLE_ORIGIN_xxx flags.
a94e88cdd8057fe8ea84bbb6d9a89a823c7bc49b ACPICA: Tables: Avoid SSDT installation with acpi_gbl_disable_ssdt_table_load.
caf4a15c5f930aae41951b4916289e3e59dda8eb ACPICA: Tables: Add acpi_install_table() API for early table installation.
ed6f1d44dae8a4eec42a74acae95cc177ee2e1ad ACPICA: Table Manager: Misc cleanup and renames, no functional change.
c418ce19030f8cd9304b4e97c8e0dd580a81ace5 ACPICA: Table Manager: Split tbinstal.c into two files.
506f57dd6dfdb1d73cb77106706cd5b8953b453d ACPICA: acpidump: Add support to generate acpidump release.
47d68c7f688c01557cb67dd80eb540e88d7913b6 ACPICA: Tables: Add mechanism to control early table checksum verification.
481c13814a4ecc8305fb7c871067a73cafd09d07 ACPICA: Remove bool usage from ACPICA.
d87a2b75cd00a9e62c2b218e7d586c30961eb311 ACPICA: acpidump: Fix code issue in invoking fread in the loop.
d63f37901e0977857dc19764c0ada1768ce4415d ACPICA: acpidump: Fix truncated RSDP signature validation.
c79322677d95c7cab65e02828677b43d8656eb61 ACPICA: acpidump: Add support to force using RSDT.
0f929fbf0dc6ed21829a9fcd495838858df82291 ACPICA: Tables: Add new mechanism to skip NULL entries in RSDT and XSDT.
2947c1d5f72b77078aeb3df05d4298274234534d ACPICA: acpidump: Fix repetitive table dump in -n mode.
890fbfa051148933ea24cdaee868e2e1c4b93ecd ACPICA: acpidump: Add support for ACPI 1.0 GUID in Linux
afbdc6aece93edb6c8f14722782696ef7c439231 ACPICA: OSL: Update environments to improve portability
e8c038a3c6227892e6c0982804b6f9d03fa4b3c5 ACPICA: Utilities: Cleanup DEFINE_ACPI_GLOBALS by moving acpi_ut_init_global() from utglobal.c to utinit.c
83b80bace4bdfc61abd16ca6ad0a51734a0f57f0 ACPICA: OSL: Clean up acpi_os_printf()/acpi_os_vprintf() stubs
80a648c12e4bda45c4f1bb93d83184fb3010ac12 ACPICA: Utilities: Add formatted printing APIs
d9cf147dbd9cef05fa08bcc1dda9b2d14d9fe567 ACPICA: Application: Enhance ACPI_USAGE_xxx/ACPI_OPTION with acpi_os_printf() to improve portability
3c9349c93712f68dc9fc4caadb2fc1b7c9407316 ACPICA: Common: Enhance cm_get_file_size() to improve portability
a92e95773d8e2cd58124aea147cb833f33f1e196 ACPICA: Common: Enhance acpi_getopt() to improve portability
fbee6b21a3820a55ec36a2aceb138f3973a955ac ACPICA: acpidump: Add memory/string OSL usage to improve portability
135610f792addb71af7be0e00aa7486429bf7a37 ACPICA: acpidump: Remove exit() from generic layer to improve portability
dcaff16df2750a400db1983754542f2cc6bf4e93 ACPICA: acpidump: Replace file IOs with new APIs to improve portability
846d6ef4d7f0fed114aa1284a245bb1aa96417df ACPICA: acpidump: Reduce freopen() invocations to improve portability
2e70da4c51eb18a4d229aa48763c15f5dbc5b43d ACPICA: Utilities: Introduce acpi_log_error() to improve portability
4d2c8223f5220bac2e81dce41fe67e913790ea51 ACPICA: OSL: Update acpidump to reduce source code differences
ff2389fe662460c71e4ee221cc223b175c231246 ACPICA: utprint/oslibcfs: cleanup - no functional change
73bbca04867d2f75443cc7dadcf115258f06b25e ACPICA: acpihelp: Add UUID support, restructure some existing files.
f1b697525d5428856eaba2be2ee6dc1cf3efbbbe ACPICA: acpidump: Add ACPI 1.0 RSDP support.
63c9043b905d04edebfe37b59d5415a46e5008bb ACPICA: acpiexec: Do not put STDIN into raw mode unless it is a terminal.
e0423edff19a99ed12bedfe4f3605e94efa2c669 ACPICA: Unix: Cleanup to use ACPI_TO_INTEGER() to calc page offset.
81ed793d303aec4f4e3755637a3ae5e99db8808e ACPICA: Fix a sscanf format string.
cbc823405a48c93a6e98bb97ccdcb23ae034ab93 ACPICA: Add dragon_fly support to unix file mapping file
428394dfdfc4596110269873cf5a2e7d82b2422e ACPICA: acpidump: Allow customized tables to be dumped without accessing /dev/mem
4fb80c3769b707524b0f2f6843633c6bd2131afc ACPICA: acpidump: Convert the default behavior to dump from /sys/firmware/acpi/tables
4fa4616e279df89baeb36287bbee83ab272edaed ACPICA: De-macroize calls to standard C library functions
391fc234b543991dd7d0361e634cdf5abfbdd0a3 tools/power/acpi: Add descend support in ACPI tools Makefile
4305cd02436dbe0b61b1930f93053a699af40e6a tools/power/acpi: Enable build for EC userspace tool
842e71332eebf847133ea8e749c80849dae623c0 ACPICA: iASL: General cleanup of the file suffix #defines
37645d6590a49d3009eecdf093599795da2b5b41 tools/power/acpi: Add userspace AML interface support
1fad87385e7e82f656fb661aef0f841e42991974 ACPICA: Core: Major update for code formatting, no functional changes
5920380c673367a1f348a75aadd45a65c40933f6 ACPICA: getopt: Comment update, no functional change
53c78d75d8a4615e5c2f1d9fe94f25e049f0e61b ACPICA: Add support for QNX 6.6 platform
3a05be7575a46cf3b16abb77e1072afa13307a1b ACPICA: Utilities: Update for strtoul64 merger
60438d9a1ef4176d79739efadee122afe92904b8 tools/power/acpi: close file only if it is open
f5c1e1c5a652e4b43eb9b571577ef72731f3fa8b ACPICA: Divergence: remove unwanted spaces for typedef
6a0df32c22fdfc414e6613c1bc911f19f39df01b ACPICA: Move all ASCII utilities to a common file
a3bcf2d45d6a9c7950f58ec7dad20f22d422abd2 tools/acpi: use CROSS_COMPILE to define prefix
d8303ace36aaa001e1704acb2bd13dd4f08a0d67 ACPICA: iASL/Disassembler: Add a check for missing filename
722280ecac0e7e8279a32f7c6270ac3a525134f0 ACPICA: OSL: Add correct acpi_gbl_debug_timeout export to allow acpiexec to link
eba4ed2046c605e5b8cafd3d2347617d866c1375 ACPICA: acpidump: Fix a duplicate variable definition
b597664f8f87a19611e2433888f743f31442532c ACPICA: Clib: Fix build issues when ACPI_USE_STANDARD_HEADERS is not defined by converting size_t to acpi_size
4e2fc6a0aa0a18403ccdcd46d7ed9f624845772b ACPICA: Clib/EFI: Fix wrong order of standard integer types/IO handles
da24f31d33dd18c622bb4f21791565ab9b6421db ACPICA: Clib: Fix wrong mini C library usage
e323c02dee59af7da65637852f6fa95551325d80 ACPICA: MSVC9: Fix <sys/stat.h> inclusion order issue
f173a7750eb188fd7d888d5950d58454bcfbd09b ACPICA: Clib: Add -nostdinc support for EFI layer
dd99cbcca4fea59ec5e93cf160cb4b939306f5c9 ACPICA: Clib: Eliminate acpi_os_XXXFile()/acpi_log_error and link clibrary fxxx()/errno/perror() instead
5ebd2eaaefc0d4fe37ab72e716e1b8065ed4206c ACPICA: Cleanup for all string-to-integer conversions
6c9fd7eda78d0a153f9f57c44dc8761adc2cd501 ACPICA: MacOSX: Fix anonymous semaphore implementation
b97acdf1b0cd493a8abff703f0674b471bf105b1 ACPICA: MacOSX: Fix wrong sem_destroy definition
d5a4b1a540b8a9a44888b383472a80b84765aaa0 tools/power/acpi: Remove direct kernel source include reference
cf6645f8ebc69775a857b7c51928f3ad9e37aa66 bnxt_en: Add function for VF driver to query default VLAN.
fa853dda19a1878d2a586de19f02bc9fed052425 bnxt_en: Add BCM58700 PCI device ID for NS2 Nitro.
a54c4d74989b769014b359e5b66f3e571d903d25 bnxt_en: Improve ntuple filters by checking destination MAC address.
adbc830545003c4b7494c903654bea22e5a66bb4 bnxt_en: Simplify PCI device names and add additinal PCI IDs.
7df4ae9fe85567a1710048da8229bd85e0da9df7 bnxt_en: Implement DCBNL to support host-based DCBX.
c77192f2042537b1e0e5f520db91e4d28778195f bnxt_en: Add PFC statistics.
33c2657eb688a063ab9cbe11fd4d18c93c7945e1 bnxt_en: Add bnxt_set_max_func_irqs().
7809592d3e2ec79cd1feab0cc96169d22f6ffee1 bnxt_en: Enable MSIX early in bnxt_init_one().
aa8ed021ab515a93f2a052e9cc80320882889698 bnxt_en: Move function reset to bnxt_init_one().
7b08f661ab80e87dcdba7ab9a460fe2c9d08bf5b bnxt_en: Improve completion ring allocation for VFs.
e4060d306b5196966d74e05dee48e6c3a52aaad4 bnxt_en: Reserve RDMA resources by default.
a588e4580a7ecb715dab8bf09725b97aa0e0e3a0 bnxt_en: Add interface to support RDMA driver.
b356a2e729cec145a648d22ba5686357c009da25 bnxt_en: Remove busy poll logic in the driver.
8fdefd63c203d9b2955d679704f4ed92bf40752c bnxt_en: Add function to get vnic capability.
8079e8f107bf02e1e5ece89239dd2fb475a4735f bnxt_en: Refactor code that determines RFS capability.
ae10ae740ad2befd92b6f5b2ab39220bce6e5da2 bnxt_en: Add new hardware RFS mode.
391be5c2736456f032fe0265031ecfe17aee84a0 bnxt_en: Implement new scheme to reserve tx rings.
bdbd1eb59c565c56a74d21076e2ae8706de00ecd bnxt_en: Handle no aggregation ring gracefully.
b742995445fbac874f5fe19ce2afc76c7a6ac2cf bnxt_en: Fix compiler warnings when CONFIG_RFS_ACCEL is not defined.
2f5938467bd7f34e59a1d6d3809f5970f62e194b bnxt_en: Add the ulp_sriov_cfg hooks for bnxt_re RDMA driver.
5944701df90d9577658e2354cc27c4ceaeca30fe net: remove useless memset's in drivers get_stats64
bac9a7e0f5d6da82478d5e0a2a236158f42d5757 bnxt_en: Update to firmware interface spec 1.7.0.
5246adec59458b5d325b8e1462ea9ef3ead7f6ae powerpc/pseries: Use H_CLEAR_HPT to clear MMU hash table during kexec
04fec21c06e35b169a83e75a84a015ab4606bf5e powerpc/eeh: Null check uses of eeh_pe_bus_get
586be7cb694fdbb3a35cc35c03387ce0fc534572 scsi: cxgb4i: libcxgbi: add active open cmd for T6 adapters
adac0f1e8c08548d82a48c9913ebc9787f946440 s390/topology: add drawer scheduling domain level
a62247e1f5c13b926f535bb64ecbd7f9fdef7b21 topology/sysfs: provide drawer id and siblings attributes
4df05f361937ee86e5a8c9ead8aeb6a19ea9b7d7 x86: Make sure IDT is page aligned
6ffc4b85358f6b7d252420cfa5862312cf5f83d8 hv: change clockevents unbind tactics
523b94087078f7f5ac10b7d9cd04277927031c39 hv: make CPU offlining prevention fine-grained
ebb6cdde1a50c3cd2a0a4668dfb571ecb3213449 fs/proc/task_mmu.c: kill the suboptimal and confusing m->version logic
0c255321f879c36bd74f58f9c7ed235ea6b919cb fs/proc/task_mmu.c: simplify m_start() to make it readable
ad2a00e4b7e20ab03700b0bb13270b6cee45c6e0 fs/proc/task_mmu.c: introduce m_next_vma() helper
b8c20a9b85b057c850f63ee4c63531a356d8596a fs/proc/task_mmu.c: reintroduce m->version logic
557c2d8a73dc078817ba6949697ceb8c0f3f7362 fs/proc/task_mmu.c: update m->version in the main loop in m_start()
2c03376d2db005869b1d4449097d51c96196529e proc/maps: replace proc_maps_private->pid with "struct inode *inode"
58cb65487e92b47448d00a711c9f5922137d5678 proc/maps: make vm_is_stack() logic namespace-friendly
6b6482bbf64ef6f6dbc8b52f7a7cf88a0498bd51 mempolicy: remove the "task" arg of vma_policy_mof() and simplify it
dd6eecb917938c1b7e505a83df307b3476e7c8bd mempolicy: unexport get_vma_policy() and remove its "task" arg
077fcf116c8c2bd7ee9487b645aa3b50368db7e1 mm/thp: allocate transparent hugepages on local node
be97a41b291e495d6cb767b3ee0f84ed05804892 mm/mempolicy.c: merge alloc_hugepage_vma to alloc_pages_vma
5265047ac30191ea24b16503165000c225f54feb mm, thp: really limit transparent hugepage allocation to local node
734537c9cb725fc8005ee7a25c48f1ad10fce5df mm: fix use-after-free if memory allocation failed in vma_adjust()
e86f15ee64d8ee46255d964d55f74f5ba9af8c36 mm: vma_merge: fix vm_page_prot SMP race condition against rmap_walk
8f26e0b176f3484c49d55d88fe6083a9cf9ff443 mm: vma_merge: correct false positive from __vma_unlink->validate_mm_rb
3fa6c507319c897598512da91c010a4ad2ed682c mm: optimize copy_page_to/from_iter_iovec
a3b609ef9f8b1dbfe97034ccad6cd3fe71fbe7ab proc read mm's {arg,env}_{start,end} with mmap semaphore taken.
f7ed0a895ead0f093f59898ff9cf4e20768a5f09 sched: Pass 'struct rq' to rebalance_domains()
43f4d66637bc752e93a77ff2536474a5a3888442 sched: Improve sysbench performance by fixing spurious active migration
d4573c3e1c992668f5dcd57d1c2ced56ae9650b9 sched: Improve load balancing in the presence of idle CPUs
3a14c66d43d018baed96ceb74f9ab548878c09b8 dmaengine: dw: pass platform data via struct dw_dma_chip
079a248b0e4c24432dc4838cad333b2e759813e0 ASoC: Intel: boards: Remove ignore_suspend for WoV streams
c286b3f9600b2ddc573208792d947e1a251c6b15 ASoC: Intel: Skylake: Fix memory leak in nhlt init
ec8ae5703da1b8bd057b4e319567ddbcac295b3a ALSA: convert users to core bus_parse_capabilities
fc94733e56481d1e3d1ed0038f87cf105793effa ASoC: Intel: Skylake: Fix the inverted logic check
3f640970a41429f0a076c01270bbd014c9eae61c ALSA: hda - Fix headset mic detection problem for several Dell laptops
361763127f8734b460e2452cf882272c93c26c56 ALSA: hdac: add missing \\n to end of dev_err messages
a16039cbf1a1ee7e76d7d100f9e613998919ab91 ALSA: line6: Add hwdep interface to access the POD control messages
a4bc746c41b56ab7588b20d84a58906986edce83 ALSA: line6: fix ifnullfree.cocci warnings
3989144f863ac576e6efba298d24b0b02a10d4bb kthread: kthread worker API cleanup
97139d4a6f26445de47b378cddd5192c0278f863 treewide: remove redundant #include <linux/kconfig.h>
fdd8218d7d1bd0ccb9a3f4c58bf77773691a56cc ALSA: line6: fix a crash in line6_hwdep_write()
f771d5bb71d4df9573d12386400540516672208b ALSA: hda - Adding a new group of pin cfg into ALC295 pin quirk table
6aecd8715802d23dc6a0859b50c62d2b0a99de3a ALSA: hda - Fix headset mic detection problem for two Dell laptops
9b6fdef62b37714af9495d09eab1d0c8ba0509bd ASoC: constify snd_soc_ops structures
7a5857c3c282c12a8bd0cfd2dd4a17a9252c2b4d ASoC: Intel: Skylake: Fix to turn off hdmi power on probe failure
b5337cfe067e96b8a98699da90c7dcd2bec21133 ALSA: hda/ca0132 - Add quirk for Alienware 15 R2 2016
786e1c37194e8e822eb72a0aed5fa850e07071a0 ASoC: intel: Replace kthread with work
d9fc40639dc1b87915426d2ef489a591b0fd650b ASoC: core: replace codec_dev_list to component_dev_list on Card
5d81296b5e7849ba3bcc5bf430ffd37bf67ff7dc ALSA: line6: Always setup isochronous transfer properties
1a653aa44725668590b36bbe2d7fe4736a69f055 ASoC: core: replace aux_comp_list to component_dev_list
9178feb4538e055bf22be44c38b90cc31d2baf99 ASoC: add Component level suspend/resume
d2e3a1358c37cd82eef92b5e908b4f0472194481 ASoC: Fix binding and probing of auxiliary components
519302954b726612eea6362047660cd56aa15c2e ASoC: use of_property_read_bool
e411b0b5eb9b65257a050eac333d181d6e00e2c6 ASoC: dapm: Support second register for DAPM control updates
e7aa450fe17890e59db7d3c2d8eff5b6b41fc531 ASoC: dapm: Implement stereo mixer control support
a33fda35e3a7655fb7df756ed67822afb5ed5e8d locking/qspinlock: Introduce a simple generic 4-byte queued spinlock
d73a33973f16ab6703e75ea00edee857afa3406e locking/qspinlock, x86: Enable x86-64 to use queued spinlocks
c1fb159db9f2e50e0f4025bed92a67a6a7bfa7b7 locking/qspinlock: Add pending bit
6403bd7d0ea1878a487296114eccf78658d7dd7a locking/qspinlock: Extract out code snippets for the next patch
69f9cae90907e09af95fb991ed384670cef8dd32 locking/qspinlock: Optimize for smaller NR_CPUS
2c83e8e9492dc823be1d96d4c5ef75d16d3866a0 locking/qspinlock: Use a simple write to grab the lock
2aa79af64263190eec610422b07f60e99a7d230a locking/qspinlock: Revert to test-and-set on hypervisors
a23db284fe0d1879ca2002bf31077b5efa2fe2ca locking/pvqspinlock: Implement simple paravirt support for the qspinlock
f233f7f1581e78fd9b4023f2e7d8c1ed89020cc9 locking/pvqspinlock, x86: Implement the paravirt qspinlock call patching
bf0c7c34adc286bec3a5a38c00c773ba1b2d0396 locking/pvqspinlock, x86: Enable PV qspinlock for KVM
e95e6f176c61dd0e7bd9fdfb4956df1f9bfe99d4 locking/pvqspinlock, x86: Enable PV qspinlock for Xen
52c9d2badd1ae4d11c29de57d4e964e48afd3cb4 locking/pvqspinlock: Replace xchg() by the more descriptive set_mb()
62c7a1e9ae54ef66658df9614bdbc09cbbdaa6f0 locking/pvqspinlock: Rename QUEUED_SPINLOCK to QUEUED_SPINLOCKS
cba77f03f2c7b6cc0b0a44a3c679e0abade7da62 locking/pvqspinlock: Fix kernel panic in locking-selftest
0b792bf519e68108d577fcec815ab50913787012 locking: Clean up pvqspinlock warning
3b3fdf10a8add87ef0050138d51bfee9ab4983df locking/pvqspinlock: Order pv_unhash() after cmpxchg() on unlock slowpath
75d2270280686bff21b9ba66c7f3dd379c887981 locking/pvqspinlock: Only kick CPU at unlock time
43b3f02899f74ae9914a39547cc5492156f0027a locking/qspinlock/x86: Fix performance regression under unaccelerated VMs
93edc8bd7750ff3cae088bfca453ea73dc9004a4 locking/pvqspinlock: Kick the PV CPU unconditionally when _Q_SLOW_VAL
81b5598665a24083dd889fbd8cb08b0d8de4b8ad locking/qspinlock: Prefetch the next node cacheline
aa68744f80bfb6f26fbe7f10e42876066f7dac1b locking/qspinlock: Avoid redundant read of next pointer
d78045306c41bd9334b956e4e7fa77cc72f06a40 locking/pvqspinlock, x86: Optimize the PV unlock code path
45e898b735620f426eddf105fc886d2966593a58 locking/pvqspinlock: Collect slowpath lock statistics
1c4941fd53afb46ab15826628e4819866d008a28 locking/pvqspinlock: Allow limited lock stealing
cd0272fab785077c121aa91ec2401090965bbc37 locking/pvqspinlock: Queue node adaptive spinning
16df4ff8604881db0130f93f4b6ade759fa48e87 x86/locking: Create stack frame in PV unlock
b82e530290a0437522720becaf4abdf8ca4cb7d2 locking/qspinlock: Move __ARCH_SPIN_LOCK_UNLOCKED to qspinlock_types.h
6687659568e2ec5b3ac24b39c5d26ce8b9d90434 locking/pvqspinlock: Fix division by zero in qstat_read()
54cf809b9512be95f53ed4a5e3b631d1ac42f0fa locking,qspinlock: Fix spin_is_locked() and spin_unlock_wait()
08be8f63c40c030b5cf95b4368e314e563a86301 locking/pvstat: Separate wait_again and spurious wakeup stats
2c610022711675ee908b903d242f0b90e1db661f locking/qspinlock: Fix spin_unlock_wait() some more
229ce631574761870a2ac938845fadbd07f35caa locking/pvqspinlock: Fix double hash race
70af2f8a4f48d6cebdf92d533d3aef37853ce6de locking/rwlocks: Introduce 'qrwlocks' - fair, queued rwlocks
c7114b4e6c53111d415485875725b60213ffc675 locking/qrwlock: Rename QUEUE_RWLOCK to QUEUED_RWLOCKS
405963b6a57c60040bc1dad2597f7f4b897954d1 locking/qrwlock: Don't contend with readers when setting _QW_WAITING
f7d71f2052555ae57b47322f2c2f6c29ff2438ae locking/qrwlock: Rename functions to queued_*()
0e06e5be70d392aa842c1455ec2d0baf62aeed48 locking/qrwlock: Better optimization for interrupt context readers
ffffeaf318bd8da036eb8eb784b025a9f829201b locking/qrwlock: Reduce reader/writer to reader lock transfer latency
dd78b97367bd575918204cc89107c1479d3fc1a7 x86, boot: Move CPU flags out of cpucheck
8ab3820fd5b2896d66da7bb2a906bc382e63e7bc x86, kaslr: Return location from decompress_kernel
5bfce5ef55cbe78ee2ee6e97f2e26a8a582008f3 x86, kaslr: Provide randomness functions
82fa9637a2ba285bcc7c5050c73010b2c1b3d803 x86, kaslr: Select random position from e820 maps
6145cfe394a7f138f6b64491c5663f97dba12450 x86, kaslr: Raise the maximum virtual address to -1 GiB on x86_64
6e6a4932b0f569b1a5bb4fcbf5dde1b1a42f01bb x86, boot: Rename get_flags() and check_flags() to *_cpuflags()
a653f3563c51c7bb7de63d607bef09d3baddaeb8 x86, kaslr: Mix entropy sources together as needed
e8236c4d9338d52d0f2fcecc0b792ac0542e4ee9 x86, kaslr: Add a circular multiply for better bit diffusion
327f7d72454aecdc7a4a1c847a291a3f224b730f x86, kaslr: Use char array to gain sizeof sanity
19259943f0954dcd1817f94776376bf51c6a46d5 x86, kaslr: Remove unused including <linux/version.h>
da2b6fb990cf782b18952f534ec7323453bc4fc9 x86, kaslr: Clarify RANDOMIZE_BASE_MAX_OFFSET
e290e8c59dbc2a15088d868170d799f763202fef x86, kaslr: add missed "static" declarations
34644cc2e15a7a91ec36b496e218694d17371589 s390/kaslr: randomize module base load address
9dd721c6dbfc310f94306902611f86dda87a45fa x86, kaslr: fix module lock ordering problem
a6e15a39048ec3229b9a53425f4384f55f6cc1b3 PM / hibernate: introduce "nohibernate" boot parameter
24f2e0273f80ec262a772059e140a0adef35296d x86, kaslr: boot-time selectable with hibernation
0cacbfbeb5077b63d5d3cf6df88b14ac12ad584b x86/kaslr: Avoid the setup_data area when picking location
20cc28882bf4a8c9a2605a9a76a7952e696aaece x86, boot, kaslr: Fix nuisance warning on 32-bit builds
fb7183ef3c016d9067ff83f3ff2455be1818f902 x86, boot: Document intermediates more clearly
e6023367d779060fddc9a52d1f474085b2b36298 x86, kaslr: Prevent .bss from overlaping initrd
97b67ae559947f1e208439a1bf6a734da3087006 x86-64: Use RIP-relative addressing for most per-CPU accesses
70b61e362187b5fccac206506d402f3424e3e749 x86, kaslr: Handle Gold linker for finding bss/brk
e2e68ae688b0a3766cd75aedf4ed4e39be402009 x86: Use $(OBJDUMP) instead of plain objdump
d69911a68c865b152a067feaa45e98e6bb0f655b x86, build: replace Perl script with Shell script
f47233c2d34f243ecdaac179c3408a39ff9216a7 x86/mm/ASLR: Propagate base load address calculation
69797dafe35541bfff1989c0b37c66ed785faf0e Revert "x86/mm/ASLR: Propagate base load address calculation"
78cac48c0434c82e860fade3cd0420a7a4adbb08 x86/mm/KASLR: Propagate KASLR status to kernel proper
4545c89880138b30a868159bc1b209867b8a5f32 x86: introduce kaslr_offset()
535b3ddc285825c058cef3436a9aa207edffa6cd x86: kaslr: fix build due to missing ALIGN definition
79063a7c0239419d5f6bee63228f66256fdc0fc4 x86/boot: Add hex output for debugging
d97b07c54f34e88352ebe676beb798c8f59ac588 initramfs: support initramfs that is bigger than 2GiB
2d3862d26e67a59340ba1cf1748196c76c5787de lib/decompressors: use real out buf size for gunzip with kernel
9a1cb47112eff140659f04c261ca19fb1f002607 x86, boot: Use the usual -y -n mechanism for objects in vmlinux
9e6abd2a98ca599e0efb8c46acc17f17dc1a6fe9 x86, boot: Don't compile aslr.c when !CONFIG_RANDOMIZE_BASE
3afed06a355b5525d9a87bcb76567ef2e2e7b3a2 x86, boot: Don't compile early_serial_console.c when !CONFIG_EARLY_PRINTK
9b238748cb6e9fadab0e761f6d30ba311b4ac470 x86/KASLR: Rename aslr.c to kaslr.c
206f25a8319b312b9983953a308b0e38e1943c1c x86/KASLR: Remove unneeded boot_params argument
6655e0aaf768c39a62eea739c453b9db1e841cfb x86/boot: Rename "real_mode" to "boot_params"
c04028813221c2d39a4f368586795ac4466d311c x86/boot: Clarify purpose of functions in misc.c
7de828dfe607013546ece7ce25aa9839e8f93a66 x86/KASLR: Clarify purpose of kaslr.c
9016875df408fc5db6a94a3c5f5f5503c916cf81 x86/KASLR: Rename "random" to "random_addr"
4252db10559fc3d1efc1e43613254fdd220b014b x86/KASLR: Update description for decompressor worst case size
e8581e3d67788b6b29d055fa42c6cb5b258fee64 x86/KASLR: Drop CONFIG_RANDOMIZE_BASE_MAX_OFFSET
1f208de37d10bb9067f3b061d281363be0cd1805 x86/boot: Clean up things used by decompressors
0f8ede1b8c4cb845c53072d7e49d71ca24a61ced x86/KASLR: Warn when KASLR is disabled
974f221c84b05b1dc2f5ea50dc16d2a9d1e95eda x86/boot: Move compressed kernel to the end of the decompression buffer
d607251ba9acc0b5faeaa08818f60d041dd19472 x86/boot: Calculate decompression size during boot not build
67b6662559f7f77bcbd3ac67d09aaac11785f3c1 x86/boot: Fix "run_size" calculation
4d2d542482205d3df1a0852751f5b004cc6390cc x86/KASLR: Clean up unused code from old 'run_size' and rename it to 'kernel_total_size'
4abf061bf87bbd856c8d60199b2fba8b8f9b9fd6 x86/boot: Correctly bounds-check relocations
dc425a6e140bca99bdb4823e9909c9d9b8ba36b6 x86/boot: Extract error reporting functions
2bc1cd39fa9f659956b25e500422e700a6cd4ec3 x86/boot: Clean up pointer casting
9dc1969c24eff8b7d7a9a565d1047b624921ba06 x86/KASLR: Consolidate mem_avoid[] entries
549f90db68c9f8e21a40ec21c8047441984e7164 x86/boot: Simplify pointer casting in choose_random_location()
ed09acde44e301b5c13755ab84821fa44b188b5e x86/KASLR: Improve comments around the mem_avoid[] logic
3a94707d7a7bb1eb82acae5fbc035247dd1ba8a5 x86/KASLR: Build identity mappings on demand
36a39ac967a548154a0fe44d71cb0063fa05010f x86/boot: Comment what finalize_identity_maps() does
434a6c9f90f7ab5ade619455df01ef5ebea533ee x86/KASLR: Initialize mapping_info every time
cb18ef0da259db611fbf52806592fde5f469ae67 x86/boot: Add missing file header comments
c401cf1524153f9c2ede7ab8ece403513925770a x86/KASLR: Add 'struct slot_area' to manage random_addr slots
06486d6c97cebc2433a40a979f3849cd68184de9 x86/KASLR: Return earliest overlap when avoiding regions
071a74930e60d1fa51207d71f00a35b4f9d4d179 x86/KASLR: Add virtual address choosing function
d2d3462f9f08da364c8fbd41e8e32229d610d49d x86/KASLR: Clarify purpose of each get_random_long()
98f78525371b55ccd1c480207ce10296c72fa340 x86/boot: Refuse to build with data relocations
11fdf97a3cd1a5a27625f820ceb74e1caba4fd26 x86/KASLR: Clarify identity map interface
8391c73c96f28d4e8c40fd401fd0c9c04391b44a x86/KASLR: Randomize virtual address separately
ed9f007ee68478f6a50ec9971ade25a0129a5c0e x86/KASLR: Extend kernel image physical address randomization to addresses larger than 4G
e066cc47776a89bbdaf4184c0e75f7d389f9ab48 x86/KASLR: Allow randomization below the load address
6daa2ec0b3e3808c55329d12de3c157cf38b17b0 x86/KASLR: Fix boot crash with certain memory configurations
d4bd441532b81fe2be1706e7f9dbbe8b5a364bcf x86/kaslr: Fix typo in the KASLR_FLAG documentation
65c0554b73c920023cc8998802e508b798113b46 x86/power/64: Fix kernel text mapping corruption during image restoration
65fe935dd2387a4faf15314c73f5e6d31ef0217e x86/KASLR, x86/power: Remove x86 hibernation restrictions
c226fab474291e3c6ac5fa30a2b0778acc311e61 x86/power/64: Do not refer to __PAGE_OFFSET from assembly code
5d87f493ddb1b86a0569fa3c4037fa9efc0c7183 x86/power/64: Use __pa() for physical address computation
d899a7d146a2ed8a7e6c2f61bcd232908bcbaabc x86/mm: Refactor KASLR entropy functions
f28442497b5caf7bf573ade22a7f8d3559e3ef56 x86/boot: Fix KASLR and memmap= collision
b31800283868746fc59686486a11fb24b103955b platform/x86: thinkpad_acpi: Move tablet detection into separate function
b03f4d49469f3bde9600192af15b8f17f8673679 platform/x86: thinkpad_acpi: Add support for X1 Yoga (2016) Tablet Mode
cb2bf25145e0d2abef20f47dd2ae55bff97fd9cb platform/x86: thinkpad_acpi: Initialize local in_tablet_mode and type
d7f96f97c4031fa4ffdb7801f9aae23e96170a6f firmware: dmi_scan: add SBMIOS entry and DMI tables
2b68f6caeac271620cd2f9362aeaed360e317df0 mm: expose arch_mmap_rnd when available
c6f5b001e65cdac592b65a08c5d2dd179cfba568 s390: redefine randomize_et_dyn for ELF_ET_DYN_BASE
d1fd836dcf00d2028c700c7e44d2c23404062c90 mm: split ET_DYN ASLR from mmap ASLR
204db6ed17743000691d930368a5abd6ea541c58 mm: fold arch_randomize_brk into ARCH_HAS_ELF_RANDOMIZE
a83f4c00dd6a646ac3c7604ee255d732fc5e0e0b perf/x86/amd/uncore: Rename 'L2' to 'LLC'
bc1daef6b5da574bca0a2ec7f9b4d0c5fe0c7d11 perf/x86/amd/uncore: Update the number of uncore counters
da6adaea2b7ef658c61a557c28508668eac29fe1 perf/x86/amd/uncore: Update sysfs attributes for Family17h processors
f4066c2bc4d0de4e5dcbff21dae41e89fe8f38c0 kvmclock: export kvmclock clocksource and data pointers
55dd00a73a518281bc846dc5de1a718349431eb2 KVM: x86: add KVM_HC_CLOCK_PAIRING hypercall
d0d7b10b05945f40fefd4e60f457c61aefa3e9a9 net-next: treewide use is_vlan_dev() helper function.
300ae149468f440a2629fa8b33d0ce1e860d479f netfilter: select LIBCRC32C together with SCTP conntrack
36f3f500efe6a19b7ce1e1205c105a2cbb2124d9 kexec: remove the unused function parameter
edb0ec0725bb9797ded0deaf172a6795e43795c8 kexec, Kconfig: spell "architecture" properly
3b32123d734cb414e366b35a3b2142a995f9d1a0 mm: use macros from compiler.h instead of __attribute__((...))
a43cac0d9dc2073ff2245a171429ddbe1accece7 kexec: split kexec_file syscall code to kexec_file.c
2965faa5e03d1e71e9ff9aa143fff39e0a77543a kexec: split kexec_load syscall from kexec core code
978e30c9b46161c792ecdad0091fd017b21b8ca5 kexec: move some memembers and definitions within the scope of CONFIG_KEXEC_FILE
146c3442f2dd0f50d9431aea5d0d10dfd97c9999 tracing: Use trace_seq_puts()/trace_seq_putc() where possible
19a7fe206232cc875a3083211e0a21c08edd756e tracing: Add trace_seq_has_overflowed() and trace_handle_return()
6d9b3fa5e7f663bbfb9d2d80d46136f75319cb28 tracing: Move tracing_max_latency into trace_array
607e2ea167e56db84387f3ab97e59a862e101cab tracing: Set up infrastructure to allow tracers for instances
ccfe9e42e451232dd17a230d1b4e979c3d15311e tracing: Make tracing_cpumask available for all instances
e7c15cd8a113335cf7154f027c9c8da1a92238ee tracing: Added hardware latency tracer
0330f7aa8ee63d0c435c0cb4e47ea06235ee4b7f tracing: Have hwlat trace migrate across tracing_cpumask CPUs
7b2c86250122de316cbab8754050622ead04af39 tracing: Add NMI tracing in hwlat detector
e428abbbf616cd8fdd1162e4a624ad1d47b47544 tracing: #ifdef out uses of max trace when CONFIG_TRACER_MAX_TRACE is not set
f971cc9aabc287120bbe7f3f1abe70c13e61ee94 tracing: Have max_latency be defined for HWLAT_TRACER as well
79c6f448c8b79c321e4a1f31f98194e4f6b6cae7 tracing: Fix hwlat kthread migration
755a27e7e4c817dd51ade41668b380f26026899c tracing: remove unused ftrace_output_event() prototype
8e2e095cbecad21078332cd83ae7e61ecfe12c59 tracing: Fix return value of ftrace_raw_output_prep()
c072530f391e33bd22ed0638c08f07528f154493 ACPI / PM: Revork the handling of ACPI device wakeup notifications
f35cec255557d1037ff0d772edfd6e7b1e92cdc0 ACPI / PM: Always enable wakeup GPEs when enabling device wakeup
5e3d234456e25f664e0755c23689173588f4ca9b PCI: Shuffle pci-acpi.c functions to group them logically
67598a1d3140a66f57aa6bcb8d22c4c2b7e910f5 ACPI: invoke acpi_device_wakeup() with correct parameters
d963f6512e15fb2c0a9e9770078e2206f55c2f7a PCI: Power on bridges before scanning new devices
437eb7bf7b28472f8b7689e166dc1dd691367121 ACPI / hotplug / PCI: Make device_is_managed_by_native_pciehp() public
1a557afc4dd59b85a5cae2be6d351eaeb31d2664 i40e: Refactor receive routine
06a5f7f167c53d4116c3b13912d082f4116a620f i40e: Move all UDP port notifiers to single function
f6bd09625ba66446821d55c61891bea9e2cdc5b3 i40e: enable VSI broadcast promiscuous mode instead of adding broadcast filter
7ac4b5c6fd351be8f849f687e290ca9724acfd33 i40e: Increase minimum number of allocated VSI
ea6acb7ef78960e4b6f1cd8c4162a5e490e83dcd i40e: Fix configure TCs after initial DCB disable
1bc87e807a6510eb33402258ec1df9bf22b6ff1f i40e: drop is_vf and is_netdev fields in struct i40e_mac_filter
6622f5cdbaf3786314d76969d2aab132b36ba2e8 i40e: make use of __dev_uc_sync and __dev_mc_sync
35ec2ff37c5a4897e75d408828adac737b17d2bf i40e: move i40e_put_mac_in_vlan and i40e_del_mac_all_vlan
5feb3d7b0c0a66c8537ca8a79d8f80f54783e73f i40e: refactor i40e_put_mac_in_vlan to avoid changing f->vlan
57b341d66684e380cae332eadcc210e177a9f289 i40e: When searching all MAC/VLAN filters, ignore removed filters
290d255719af42ae4baaf49165a69b9ad47f2049 i40e: implement __i40e_del_filter and use where applicable
278e7d0b9d6864a9749b9473a273892aa1528621 i40e: store MAC/VLAN filters in a hash with the MAC Address as key
4a2ce27bb5f291c38d8e49ef16899828289e4d3d i40e: properly cleanup on allocation failure in i40e_sync_vsi_filters
84f5ca6cf4ea1d91fa9ee858ff95211127b0166b i40e: fix MAC filters when removing VLANs
cbebb85f306f6023ebaa26ca66380571b4b680bf i40e: avoid looping to check whether we're in VLAN mode
0093631966aad046ddf21e157a43765c295e16a3 i40e: remove duplicate add/delete adminq command code for filters
144ed1763003c6a88a4b788cc5da1d8a1ddf061f i40e: correct check for reading TSYNINDX from the receive descriptor
124905012db8bdeebf5a7d1ddc841eaadda84a75 i40e: replace PTP Rx timestamp hang logic
3aa7b74dbeedfb32406fec70cfd76d797209e8c9 i40e: removed unreachable code
0b7c8b5d5436317a5f4509e2a150c6cec017f348 i40e: fix trivial typo in naming of i40e_sync_filters_subtask
435c084aad9615c7c77464e7c04600da920fc208 i40e: set broadcast promiscuous mode for each active VLAN
7ec9ba11b046b4b7fd768c366870ada60d409295 i40e: Driver prints log message on link speed change
1596b5ddbf25c3dd05aed208ea0bb57eac1c5524 i40e: restore workaround for removing default MAC filter
3c7cbd45bca8ad34c66327c919fc76e0dfee90fe i40e: remove code to handle dev_addr specially
38326218acce336d99cd128a11ecc69f6512f8e4 i40e: recalculate vsi->active_filters from hash contents
ac9e239014413e483abadba7722cfc1672302738 i40e: refactor i40e_update_filter_state to avoid passing aq_err
756970255a58c0f5ff9f9c5bba6fb47c70804077 i40e: delete filter after adding its replacement when converting
490a4ad3a7c5d0943e648f97815e6cb677f1f8eb i40e: factor out addition/deletion of VLAN per each MAC address
9af52f60b2d9918af6a0b7c18b08cfcdd0574a24 i40e: use (add|rm)_vlan_all_mac helper functions when changing PVID
489a32650721b0e1e25283257cacb3a337014794 i40e: move all updates for VLAN mode into i40e_sync_vsi_filters
0266ac4536cdbf37e0bed918b97b6763aa8b84e2 i40e: don't truncate match_method assignment
f94484b7584765eebded5d7bfdeb0b2c7b1caf51 i40e: don't allow i40e_vsi_(add|kill)_vlan to operate when VID<1
7aaf9536c45021772a5bc6cd4b620a11eac750f7 i40e: fold the i40e_is_vsi_in_vlan check into i40e_put_mac_in_vlan
d983001f044cf823490af7dcfcde39cfb42be0db i40e: no need to check is_vsi_in_vlan before calling i40e_del_mac_all_vlan
feffdbe47d6f4c02b5e2764e14490c5f9d250bdb i40e: rename i40e_put_mac_in_vlan and i40e_del_mac_all_vlan
148141bb26cf942e6bc7249c55d9958dd62dd4f2 i40e: avoid O(n^2) loop when deleting all filters
9569a9a4547d5636827c3f6b09be73ed924b1d16 i40e: when adding or removing MAC filters, correctly handle VLANs
3bb83baf9ac9c73f4da051cae17042f264832e61 i40e: Clean up dead code
e6e3fc2bd3ee03117e1ce388c897fc3b2da97d65 i40e: don't warn every time we clear an Rx timestamp register
d88d40b01c5c0dad6a1dca3b18267849eef4a2a9 i40e: allow i40e_update_filter_state to skip broadcast filters
671889e6740ac7ab84d1420525b50d1d47001102 i40e: avoid race condition when sending filters to firmware for addition
a410c821c0cf50bc0b73a91435852cd04b2c7acd i40e: fix disable overflow promiscuous mode
5cb259016b4258d7ac53588a01d17da1ceda84b7 i40e: properly convert le16 value to CPU format
b564d62e67560423965c43d60249a09d8e70a27a scripts/spelling.txt: add "varible" pattern and fix typo instances
4dfce57db6354603641132fac3c887614e3ebe81 xfs: fix up xfs_swap_extent_forks inline extent handling
98efe8af1c9ffac47e842b7a75ded903e2f028da xfs: fix unbalanced inode reclaim flush locking
67245ff332064c01b760afa7a384ccda024bfd24 devpts: clean up interface to pty drivers
0809ab69a2782afac8c4d7f3d35cd123050aab9a fsnotify: unify inode and mount marks handling
3c53e514212455db9923c203694a72007558b48f fsnotify: fix check in inotify fdinfo printing
1e39fc01836d02a11515aaabd97a0a938326bfe2 fsnotify: document mark locking
925d1132a03e33cb8f29a0057300d023b4f1be23 fsnotify: remove mark->free_list
4712e722f91457e60723b9cef6265a74290efba9 fsnotify: get rid of fsnotify_destroy_mark_locked()
6933599697c96c3213c95f5f1fc7cb6abfd08c54 inotify: hide internal kernel bits from fdinfo
0918f1c309b86301605650c836ddd2021d311ae2 fsnotify: turn fsnotify reaper thread into a workqueue job
35e481761cdc688dbee0ef552a13f49af8eba6cc fsnotify: avoid spurious EMFILE errors from inotify_init()
c21dbe20f606219fe54faf555b7bc5565487c58f fsnotify: convert notification_mutex to a spinlock
073f65522aeb23e46fc8a809d69513132d3acc81 fanotify: use notification_lock instead of access_lock
ed2726406c6a71f5da63719c0ba7d9e21dd9581c fsnotify: clean up spinlock assertions
3cd5eca8d7a2fe43098df4c33a1272fe6945cac9 fsnotify: constify 'data' passed to ->handle_event()
5716863e0f8251d3360d4cbfc0e44e08007075df fsnotify: Fix possible use-after-free in inode iteration on umount
e3ba730702af370563f66cb610b71aa0ca67955e fsnotify: Remove fsnotify_duplicate_mark()
29935aebc7a8f2d3f9cc1743f24f0db8b4610ece phylib: remove unused adjust_state() callback
fbfcec635dba38345a446f44b22352cd96ad9463 phylib: make phy_scan_fixups() static
898dd0bda366edd0b077db4389a26c00509c73c9 phylib: introduce PHY_INTERFACE_MODE_XGMII for 10G PHY
6d48f44b7b2af67b33c1ae5994b8f642685c8bc8 mdio_bus: implement devm_mdiobus_alloc/devm_mdiobus_free
93dccc59165ad1b4db94528dfdf88bff92c09cef mdio_bus: fix devm_mdiobus_alloc_size export
f018ae7a8c576345d56a0cd40d86c0574a2eb360 of_mdio: fix MDIO phy device refcounting
6d62b4d5fac620ee0ca65dc6d99b0306d96bc541 net: ethtool: export conversion function between u32 and link mode
fd2ef0ba3071c92ac6272ab22ea3f2b16d88a4eb net: phy: adjust fixed_phy_register() return value
a5597008dbc230876db2d344561d634f4d52ea4a phy: fixed_phy: Add gpio to determine link up/down.
bd1a05ee98b06c9a20138c45f96ccfddf3163f93 fixed_phy: pass 'irq' to fixed_phy_add()
d5c3d84657db57bd23ecd58b97f1c99dd42a7b80 net: phy: Avoid polling PHY with PHY_IGNORE_INTERRUPTS
5bcbe0f35fb13e31fdd0b2dc9695f19ab0208207 phy: fixed: Fix removal of phys.
69fc58a57e56bf5e39b48809aefffdaa1b04c945 net: phy: Manage fixed PHY address space using IDA
13c9d934a5a1d04f055c20c2253090e9afd9a5d1 net: phy: fixed_phy: fix of_node leak in fixed_phy_unregister
ec988ad78ed6d184a7f4ca6b8e962b0e8f1de461 phy: Don't increment MDIO bus refcount unless it's a different owner
762a3d89ebf5873f71b3839449ac6562049ef1ce bridge: fix rcu check warning in multicast port group
31a5b837c2e0d282f36d06a2b96f16d97464fd68 bridge: add space before '(/{', after ',', etc.
3678a9d86324e457d0ff9d898747ee7e787f4bb8 netlink: cleanup rntl_af_register
e5a727f6632654098fa4e87d8551a5873e8f658a bridge: Use ether_addr_copy and ETH_ALEN
f06c7f9f92295faf701a9628b383156c4efb6119 vlan: rename __vlan_find_dev_deep() to __vlan_find_dev_deep_rcu()
dc4eb53a996a78bfb8ea07b47423ff5a3aadc362 bridge: adhere to querier election mechanism specified by RFCs
2cd4143192e8c60f66cb32c3a30c76d0470a372d bridge: memorize and export selected IGMP/MLD querier port
3993c4e159eba0e10c0628737736d6fcf97ab9ef bridge: fix compile error when compiling without IPv6 support
6c03ee8bdaa10401f60dee25a719753d2fbbcc36 bridge: fix smatch warning / potential null pointer dereference
f941a6d9a9e0612eb807af822b0d1ac004da8175 bridge: adding stubs for multicast exports
c34963e21685659eb513e1c4d847f81d8a8f13f3 bridge: export knowledge about the presence of IGMP/MLD queriers
0932997e34bad52353c25756c55ccf97c522ae7c br_multicast: Replace rcu_assign_pointer() with RCU_INIT_POINTER()
3e8a72d1dae374cf6fc1dba97cec663585845ff9 net: dsa: reduce number of protocol hooks
958501163ddd6ea22a98f94fa0e7ce6d4734e5c4 bridge: Add support for IEEE 802.11 Proxy ARP
d92cfdbbeaefb467de4fac98679fa6c33461d250 bridge: only provide proxy ARP when CONFIG_INET is enabled
207895fd388c7c4c48bc33055cd726d9e750298c net: mark some potential candidates __read_mostly
842a9ae08a25671db3d4f689eed68b4d64be15b5 bridge: Extend Proxy ARP design to allow optional rules for Wi-Fi
9afd85c9e4552b276e2f4cfefd622bdeeffbbf26 net: Export IGMP/MLD message validation code
fcba67c94abe83e0e69a65737000ccbb16a4fa03 net: fix two sparse warnings introduced by IGMP/MLD parsing exports
71d9f6149cac8fc6646adfb2a6f3b0de6ddd23f6 bridge: fix br_multicast_query_expired() bug
949f1e39a6177503349ef8adeedd13fa1c89e5dd bridge: mdb: notify on router port add and del
a516993f0ac1694673412eb2d16a091eafa77d2a net: fix wrong skb_get() usage / crash in IGMP/MLD parsing code
04eb44890e5bb3cc855e5c0f18a05eb7311364b7 bridge: Add br_netif_receive_skb remove netif_receive_skb_sk
b1974ed05ea90264d534a200e8a13932ad55f8b8 netlink: Rightsize IFLA_AF_SPEC size calculation
9b368814b336b0a1a479135eb2815edbc00efd3c net: fix bridge multicast packet checksum validation
7f0aec7a668419bdbff12de6e8016544f874e708 bridge: mcast: use names for the different multicast_router types
a55d8246abcc910346771175b521ee2bce5a69b3 bridge: mcast: add support for temporary port router
8626c56c8279b88b91b8df55345cdf89542d5e90 bridge: fix potential use-after-free when hook returns QUEUE or STOLEN verdict
e8872a25a05efcf0a133ca7ed6511fe9f908dc41 net: rtnetlink: allow rtnl_fill_statsinfo to save private state counter
97a47facf3468fb6ebd697324fc2a7245755c417 net: rtnetlink: add linkxstats callbacks and attribute
6dada9b10a0818ba72c249526a742c8c41274a73 bridge: vlan: learn to count
a60c090361ea211625c27052dbbc11c5222e20e4 bridge: netlink: export per-vlan stats
856ce5d083e14571d051301fe3c65b32b8cbe321 bridge: fix igmp / mld query parsing
56fae404fb2c306db0a35dad0d16fa24c65678f3 bridge: Fix incorrect re-injection of STP packets
565ce8f32ac4a233b474f401e1d3e7e1de0a31fd net: bridge: fix vlan stats continue counter
80e73cc563c4359be809a03bcb8e7e28141a813a net: rtnetlink: add support for the IFLA_STATS_LINK_XSTATS_SLAVE attribute
1080ab95e3c7bdd77870e209aff83c763fdcf439 net: bridge: add support for IGMP/MLD stats and export them via netlink
a65056ecf4b48be0d0284a7b6a57b6dace10b843 net: bridge: extend MLD/IGMP query stats
46c0772d85306f2edec03c8fa40a6efa6af915bc net: bridge: minor style adjustments in br_handle_frame_finish
e151aab9b5b3fae96b0fcd6cbe3a7f952d6cb8f8 net: bridge: rearrange flood vs unicast receive paths
b35c5f632b630183396a2ea2e2247ff8bbf2c94f net: bridge: drop skb2/skb0 variables and use a local_rcv boolean
37b090e6be2dc98ccb55bb663931546282abf2e8 net: bridge: remove _deliver functions and consolidate forward code
eabfdda93477f6ee5e153f560560e9cb1c617fd7 net: switchdev: change ageing_time type to clock_t
9e0b27fe5ada7752577f3e1260eec44e79476142 net: bridge: br_set_ageing_time takes a clock_t
7bb90c3715a496c650b2e879225030f9dd9cfafb bridge: Fix problems around fdb entries pointing to the bridge device
2eb03e6c4e305b71bdd2d0ce4250b9c9099d9128 switchdev: Put export declaration in the right place
d5ff8c41b5f7289aee44df817023328295bc8463 net: bridge: consolidate bridge and port linkxstats calls
61ba1a2da9693b88bf5f2bb8e7a99a29cd139122 net: bridge: export vlan flags with the stats
72f4af4e4706a07727765bc6b7bdace4b1543543 net: bridge: export also pvid flag in the xstats flags
5c326ab49e5ee014ba5314c076fe9b93fd8b0406 switchdev: Support parent ID comparison for stacked devices
6bc506b4fb065eac3d89ca1ce37082e174493d9e bridge: switchdev: Add forward mark support for stacked devices
85a3d4a9356b595d5440c3f1bf07ee7cecca1567 net: bridge: don't increment tx_dropped in br_do_proxy_arp
8addd5e7d3a5c118a214a7794ae299787198aa25 net: bridge: change unicast boolean to exact pkt_type
b6cb5ac8331b6bcfe9ce38c7f7f58db6e1d6270a net: bridge: add per-port multicast flood flag
4eb6753c3324873752f56543e149956e39dd32b6 net: bridge: add the multicast_flood flag attribute to brport_attrs
b3a49557d53108eea959347e5a67b695729c2779 ixgbe: Replace ndo_add/del_vxlan_port with ndo_add/del_udp_enc_port
e5de25dce9243a3d29b5ebc131cc9d59008f39f7 drivers/net: fixup comments after "Future-proof tunnel offload handlers"
aac9e053f1044bf21ac068eeb0e8518d080f4a66 ixgbe: cleanup crosstalk fix
a21d0822ff693655b4bf412405ecd649636f3d3b ixgbe: add support for geneve Rx offload
9f3c7504fa005e2aab5ba9e1f2d8b4f4fcc6c077 ixgbe: ixgbe_atr() compute l4_proto only if non-paged data has network/transport headers
b3eb4e1860f3595431f74064870c36da295a9fbe ixgbe: Implement support for firmware-controlled PHYs
adc2c83e2b317de39220e0004b6556b5ea2bf412 ixgbevf: Bump version number
26403b7fde65ecfc74f5571e3cfa602dc9b3d6cb ixgbevf: restore hw_addr on resume or error
41e544cdad0bd669600825d8de73c8f420640bf9 ixgbevf: Add support for VF promiscuous mode
1ebe98dcd89c624d08a3712a8a9f1706bf213172 amd-xgbe: Configuration and build support
801c62d945c6121c0262924732e430f0553bfb37 amd-xgbe: Add support for VLAN filtering
b85e4d8960f10e4b28613a3e7b76f8889a2089e3 amd-xgbe: Change destination address filtering support
23e4eef7cf56b5e36e76af9078f0012826c86b2f amd-xgbe: Add hardware timestamp support
853eb16b8b6a347315443f2ef010e5b97d8c1577 amd-xgbe: Base queue fifo size and enablement on ring count
fca2d99428473884e67ef8ea1586e58151ed6ac3 amd-xgbe: Add traffic class support
88131a812b16b45cf999e577ad8d89b41ad606e3 amd-xgbe: Perform phy connect/disconnect at dev open/stop
a9a4a2d9d622e3bde41356aa4e2694cee052d002 amd-xgbe: Check for Tx hardware queue flushing support
9fc69affda1b576c0b4c2aed8acb9cf3de3349ba amd-xgbe: Use the Tx queue count for Tx flow control support
a2ea14d7724e5fc1e5ba187fb47f24dfb8c0f381 amd-xgbe: Checkpatch driver fixes
386f1c9650b7fe4849d2942bd42f41f0ca3aedfb amd-xgbe: Properly handle feature changes via ethtool
55ca6bcd733b739d5667d48d7591899f376dcfb8 amd-xgbe: Fix napi Rx budget accounting
4780b7cae60cf10af4ae75bc5d6643f41d4c2969 amd-xgbe: Move ring allocation to device open
a9d41981e95651143125352f0233138efc17378a amd-xgbe: Rename pre_xmit function to dev_xmit
08dcc47c06c79de31b9b2c0b4637f6119e5701fa amd-xgbe: Use page allocations for Rx buffers
174fd2597b0bd8c19fce6a97e8b0f753ef4ce7cb amd-xgbe: Implement split header receive support
9227dc5e579b6b2ef58ad0d3d0d23ddac77846ef amd-xgbe: Add support for per DMA channel interrupts
5b9dfe299e55604af47cdca9d03d2e9d4fe2ad53 amd-xgbe: Provide support for receive side scaling
f6ac862845bbe9daac9a02c7690efa01bfb62fa5 amd-xgbe: Add receive side scaling ethtool support
474809b9e1daf429047195d2394c51a6b4b09f36 amd-xgbe: Let AMD_XGBE depend on HAS_IOMEM
e98c72c94205c59745f9ed0ac2837d5b83084a46 amd-xgbe: Free channel/ring structures later
f5eecbbef0b7d28b171b3b873e1e4a69aabd7b58 amd-xgbe: Check for complete packet on skb allocation error
b6267d3e803b9adf73893f932f7c7f3a2167c908 amd-xgbe: fix ->rss_hash_type
b23063034f1116a64b864e2cab1b238125096776 amd-xgbe: use netdev_rss_key_fill() helper
16edd34e9ebb4c0b63c69ada3abe106a309cb431 amd-xgbe: Tx engine must not be active before stopping it
c9f140ebb00891c5bfd6b5cdd0552493bcbeac20 amd-xgbe: Separate Tx/Rx ring data fields into new structs
5fb4b86a66363e275add87b441bf80b24144a0c9 amd-xgbe: Add BQL support
16978eb7bc2f6ecba71916a673a7840d17943b71 amd-xgbe: Remove unused variable
eb79e640fab1fc163e6f04e0cc007c76b6a46f28 amd-xgbe: Perform Tx coalescing on a packet basis
16958a2b05def4ed214ae681b7ee4ce8537b00fb amd-xgbe: Add support for the skb->xmit_more flag
54ceb9ec6fe8e64067b164e6b161dd63905c059f amd-xgbe: IRQ names require allocated memory
f9c5c62db1c9bc20f396c3527b5074c4e7f1c275 amd-xgbe: Use disable_irq_nosync when in IRQ context
5cdec679671741bcca1f8280699a64b42c9fa2b4 amd-xgbe-phy: Let AMD_XGBE_PHY depend on HAS_IOMEM
8b976e97772cfb7e0e4eb8682d5017861dbd8796 net: xgbe: convert to timecounter adjtime.
1d67d7f6e925af985345e2a93ddc6aeaec3bc354 amd-xgbe: Checkpatch fixes
270894e7dc7afad8fb79592fe02aa05e604ddfc8 amd-xgbe: Simplify the Rx desciptor ring tracking
a83ef427b7d97314df30d6e25abc7aa3a80ffcfd amd-xgbe: Remove need for Tx path spinlock
82a19035d000c8b4fd7d6f61b614f63dec75d389 amd-xgbe: Add ACPI support
e2a2729a9279eba7366e6a98a1e41ad6baef3caa amd-xgbe: Use proper Rx flow control register
211fcf6d2100e625ec1d4a50e8adf67370a37bad amd-xgbe: Adjust for zero-based traffic class count
cf180b8acf2627fdc9ab472ed0dc565803cd388a amd-xgbe: Set RSS enablement based on hardware features
fd972b736bfec7e0297dac9501211abb91b436fd amd-xgbe: Check per channel DMA interrupt use in main ISR
c30e76a728beb5bbfff0ddeb573e28927853d4b8 amd-xgbe: Request IRQs only after driver is fully setup
9ae5eecdba7297725b280e81e905f48f85f9ffe7 amd-xgbe-phy: Provide support for auto-negotiation timeout
600c8811d3f608d28a6a79bfbcca08bb7962f301 amd-xgbe: Clarify output message about queues
ceb8f6be7e5a254cb5b894be7a032170ec34607b amd-xgbe: Use the new DMA memory barriers where appropriate
386d325dbdf16919f3416a1b6f26fcfd1c9549ff amd-xgbe: Set DMA mask based on hardware register value
c635eaacbf77bd6dae917925ef1e76d044b0da07 amd-xgbe: Remove Tx coalescing
385565a1f0d365793e1f90746237d508bfeef9af amd-xgbe: Use napi_alloc_skb when allocating skb in softirq
15dd95ffe424e336b2a2bc7a01603c0e1314901c ptp: xgbe: convert to the 64 bit get/set time methods.
8dee19e619bb6d4aefdf0ce5260099fec08601a3 amd-xgbe: Allow rx-frames coalescing to be changed anytime
b876382bac0fe2ed1129247c47029799bb4d763a amd-xgbe: Move Rx mode configuration into init
a8373f1a60d0716e25f5c4cd4d6e3909bfdb41bd amd-xgbe: Add support for the netdev Tx watchdog
61e77d297dd1fc739828027a2790ee5365de50d2 ethernet: amd: AMD_XGBE should depend on HAS_DMA
74a78b15e6e3dd909a39e0d99dfa0268c126e2c6 net: amd-xgbe: Add hardware dependency
5452b2dfe685ba6774ceca19ec1df1fa499702fb amd-xgbe: Add additional stats to be reported via ethtool
34bf65dfa34369d283582cfff2ec916f62043043 amd-xgbe: Add netif_* message support to the driver
7d9ca345b50881097eeac9d88a2899dd5e150927 amd-xgbe: Rework the Rx path SKB allocation
7c12aa08779cfa8e0a64943bd6d823c5c110766b amd-xgbe: Move the PHY support into amd-xgbe
34bfff404ca2eb2f0e60f82f301ad6abcdd22150 amd-xgbe: Support defining PHY resources in ETH device node
c1ce2f77366bb7cde153596e9406fc7727d5726c amd-xgbe: Fix flow control setting logic
fc7aabf0072fb9540f275f07afaf0724fbf6a176 amd-xgbe: Remove manual check and set of dma_mask pointer
73c259165e2648638e959844434d899f58108567 amd-xgbe: Add setting of a missing hardware feature
471e14b232d13463ae24212bec63d0a455eff16b amd-xgbe: Fix initial mode when auto-negotiation is disabled
d5c78399b0e1e2a457375a0d7d2ac61bd41e9be4 amd-xgbe: Add more netif_dbg output to the driver
078b29d7e92e4254b6de16097d0369dde17efe21 amd-xgbe: Use disable_irq_nosync from within timer function
c9a49642aef95d5adb6b7a4bd6a6f5df852cdb98 amd-xgbe: Unify coherency checking logic with device_dma_is_coherent()
472cfe7127760d68b819cf35a26e5a1b44b30f4e amd-xgbe: Add the __GFP_NOWARN flag to Rx buffer allocation
cfbfd86bfde15020bccde377e11586ee5c8b701d amd-xgbe: Fix DMA API debug warning
e1c05067c323fb92d27418fb3586171bd7ce2e12 treewide: fix typos in comment blocks
47f2e6c27553d9a164bb0067f4c1f9bbba388c2e amd-xgbe: Use proper DT / ACPI precedence checking
e5dd8b81107881f8928378a38f6e47aa2da62c37 amd-xgbe: Add ethtool error and debug messages
9c439e4b730f0d519821527afd697e6af99a67ab amd-xgbe: Simplify calculation and setting of queue fifos
72c9ac4e1f4faf1f4e7252319ab8af2517891ae5 amd-xgbe: Add receive buffer unavailable statistic
afb43e8a0af18fa959e9ef09abfa969c3c83f4ef amd-xgbe: Use device workqueue instead of system workqueue
50789845cfc37d5331b56e1a566ddc95aeac0a7d amd-xgbe: Remove the XGBE_LINK state bit
96aec911482246a319bf457f39fa848ce436c8fd amd-xgbe: Use system workqueue for device restart
20a41fba679d665cdae2808e2b9cae97c073351f amd-xgbe: Use wmb before updating current descriptor count
20986ed826cbb36bb8f2d77f872e3c52d8d30647 amd-xgbe: Fix race between access of desc and desc index
1831eff876bd0bb8d64e9965a7ff47486c9a3ecd device property: ACPI: Make use of the new DMA Attribute APIs
b4eee84fcd8ecae88a7d6ab437f88284f9693d9c amd-xgbe: Disable VLAN filtering when in promiscuous mode
491aefb38a31bb163e1e4393ba42abf68ce4c6eb amd-xgbe: Change from napi_complete to napi_complete_done
793494228fdf15acb252063f9f6dcccd3d1d497e amd-xgbe: Use __napi_schedule_irqoff
8dba2a2a88397dec6bdcae8bf7ceeefd62fd39fc amd-xgbe: Enable/disable PFC per traffic class
6a49ee4e1b9eb8747ff79c5438a42c0726aaa03b amd-xgbe: Fix the mapping of priorities to traffic classes
b3b715974bfe69f626d6a633b8c96590de1b7338 amd-xgbe: Do traffic class setup when called through dcbnl
c3727d61ea73a1df60bacd0b416e01282a94240b amd-xgbe: Check Rx queue fifos before stopping Rx DMA
ced3fcae693b563b20ee8d2dba966760e6b771d4 amd-xgbe: Mask auto-negotiation interrupts in ISR
fb160ebd512c505e8d3a18b4f877c7edd24acb49 net: amd-xgbe: use correct format specifier
a039b638592c8b967797d96f50bebfaa64964c3f amd-xgbe: Reset running devices after resume from hibernate
ce0b15d1103102b78ad95739fa71e62fb16774bd xgbe: constify get_netdev_ops and get_ethtool_ops
d9682c90cf5468bd7277d85ae7d80911f25c5edf amd-xgbe: Fix formatting of PCS register dump
586e3cfb260a0c6026321417bb5af331cc717f40 amd-xgbe: Prepare for priority-based FIFO allocation
43e0dcf7084014258ed555690fd6653f689ec368 amd-xgbe: Perform priority-based hardware FIFO allocation
e57f7a3feaef0e9e196801f1625bca1337405421 amd-xgbe: Prepare for working with more than one type of phy
a64def4161d4b8fffea43807f582ffc3e4e5d128 amd-xgbe: Prepare for introduction of clause 37 autoneg
1bf40ada62901e14395902d0934a4e51e04afe46 amd-xgbe: Add support for clause 37 auto-negotiation
b03a4a6fb309a000a0fba5f2af06ffc5767b0e45 amd-xgbe: Prepare for a new PCS register access method
e5a20b9072eb38fad9b8cff4e6824c6cdbee5a00 amd-xgbe: Support for 64-bit management counter registers
4b8acdf5fe97d01962f3a62eaff3f010f8de5869 amd-xgbe: Update how to determine DMA channel status
bd8255d8ba35ae03f0a6d4d7d55b46660f2fc198 amd-xgbe: Prepare for supporting PCI devices
f22913d0b5560ae621e8a7391e9547d5a6fd8893 ixgb: use new API ethtool_{get|set}_link_ksettings
aba9777ae3ddea356874d46431183efaff0b3b1a amd-xgbe: Add a workaround for Tx timestamp issue
47f164deab22a02a2999f56ca51fdabab4565167 amd-xgbe: Add PCI device support
8d6b2e92bdadc925c9ea4d8d0c4554918357ee35 amd-xgbe: Allow for a greater number of Rx queues
4c70dd8ac9ef88a1902b4d63dda987746a34ebc4 amd-xgbe: Add support for new DMA interrupt mode
e78332b2285d9fe631a093fc8ca2b604c48c33e6 amd-xgbe: Add ECC status support for the device memory
5ab1dcd58597c04f6d50980c3d5f3c2518301b31 amd-xgbe: Add I2C support for sideband communication
abf0a1c2b26ad964d19b143ce46735e1b0667f29 amd-xgbe: Add support for SFP+ modules
732f2ab7afb975755dcfbdcbe6eafe42e8cdc1d4 amd-xgbe: Add support for MDIO attached PHYs
d7445d1f0506fe26a877fac8dcdff7f4eff1328e amd-xgbe: Add support for a KR redriver
e6fbd47add0d13189bacb1881fe006db5027536e amd-xgbe: Fix mask appliciation for Clause 37 register
8c5385cbb0361dd6538b5b422996c3f1e1c6989d amd-xgbe: Fix up some coccinelle identified warnings
1c1f619e451bdbf29c3be9ed11c77d488b56dfd9 amd-xgbe: Fix maximum GPIO value check
5a4e4c8f0236bc4cbb88aef5a706116e60e7ccc7 amd-xgbe: Update connection validation for backplane mode
896b4db685cf06bd7d50ed22c53ebd069e0b90e9 amd-xgbe: Fix IRQ processing when running in single IRQ mode
4eccbfc36186926b570310bfbd44f4216cd05c63 amd-xgbe: Add a hardware quirk for register definitions
738f7f647371ff4cfc9646c99dba5b58ad142db3 amd-xgbe: Check xgbe_init() return code
368f2f137f5401f37d2acb42c4ca4e5867570495 be2net: Update the driver version to 11.1.0.0
d8d8ccf277419b6feb281a2d08d9f881b2b724be sfc: update EF10 register definitions
4fdda95893de776a8efdf661bbf0e338f2f13dcb sfc: don't report RX hash keys to ethtool when RSS wasn't enabled
f74d1995192cd0834eea13a8287a3e26a7317b6d sfc: support setting RSS hash key through ethtool API
a707d18851a3bab517e21a6449806e468703bc3d sfc: read back RX hash config from the NIC when querying it with ethtool -x
ab507c9a54ce3580e6a3829c9f4c24a13c32cbac e1000e: e1000e_cyclecounter_read(): do overflow check only if needed
18dd23920703891c39c7965873f8ae369bd3a237 e1000e: use BIT() macro for bit defines
736c4c1da76bc78d3013e791581725c11cd20ead bnx2x: Add support for segmentation of tunnels with outer checksums
4ec656bdf43a13a655a8259b79dd63bc1f0b1e41 EDAC, skx_edac: Add EDAC driver for Skylake
6eecbc9b8a030cf9c0ed52dd19b5d122503b8c4c ACPICA: Tables: Remove wrong table event macros
bdbe5df025b712220ba8d807662d4449b2092e54 ACPICA: Tables: Add new table events indicating table installation/uninstallation
bba54de5bdd107d3841b560f1a9cb0ed06e79533 ipvs: provide iph to schedulers
eba3b5a78799d21dea05118b294524958f0ab592 ipvs: SH fallback and L4 hashing
3bc3b96f3b455bd14a8ccd83ffffc85625aba641 net: add common accessor for setting dropcount on packets
f8c3bf00d440df2bc2c3f669d460868d9ba67226 net/socket: factor out helpers for memory and queue manipulation
f970bd9e3a06f06df8d8ecf1f8ad2c8615cc17eb udp: implement memory accounting helpers
850cbaddb52dfd4e0c7cabe2c168dd34b44ae0b9 udp: use it's own memory accounting schema
ad959036a70890bea121403c6a4e373dff5b7311 net/sock: add an explicit sk argument for ip_cmsg_recv_offset()
7c13f97ffde63cc792c49ec1513f3974f2f05229 udp: do fwd memory scheduling on dequeue
c915fe13cbaae5c7aa7b44f367d05addd60c9008 udplite: fix NULL pointer dereference
363dc73acacbbcdae98acf5612303e9770e04b1d udp: be less conservative with sock rmem accounting
69629464e0b587f3711739b3aa2bcdaf2e075276 udp: properly cope with csum errors
72fb96e7bdbbdd4421b0726992496531060f3636 l2tp: do not use udp_ioctl()
6dc178760553605c58d78bd403dfcb4e042c5b72 x86: Consolidate irq entering inlines
b0f48706a176b71a6e54f399d7404bbeeaa7cfab x86/apic: Order irq_enter/exit() calls correctly vs. ack_APIC_irq()
e57cbaf0eb006eaa207395f3bfd7ce52c1b5539c tracing: Do not have 'comm' filter override event 'comm' field
1217d34b531c76362217057ca70a8ce8950574e0 powerpc: Ensure global functions include their prototype
183deeea5871a6f750ec64ab1cff85fb089d38df powerpc/pseries: Consolidate CPU hotplug code to hotplug-cpu.c
9054619ef54a3a832863ae25d15ac410ae3df146 powerpc/pseries: Add pseries hotplug workqueue
90ce35145cb622b3cd0007d50e1f6a5a97321235 powerpc/pseries: fix memory leak in queue_hotplug_event() error path
25b587fba9a4198e7ea2e2319d62e219d1a4ca2c powerpc/pseries: Correct possible read beyond dlpar sysfs buffer
588453c69dace39351129a038dd2796608f74bb3 of: Introduce device tree node flag helpers.
ec999072442ad531cccbecbd6d5a569b0af6c8e3 powerpc/pseries: Auto-online hotplugged memory
fdb4f6e99ffacfa643ab2d2da99171b3084d4446 powerpc/pseries: Remove call to memblock_add()
c21f515c743687c6c2b3d38227e6ad8e6b733409 powerpc/pseries: Make the acquire/release of the drc for memory a seperate step
943db62c316c578f8e2cc6fb81a5f641096b29bf powerpc/pseries: Revert 'Auto-online hotplugged memory'
333f7b76865bec24c66710cf352f892d69e3ba0a powerpc/pseries: Implement indexed-count hotplug memory add
753843471cbbaeca25a5cab51981ee721ad272f7 powerpc/pseries: Implement indexed-count hotplug memory remove
3dbbaf200f532e01e56168b8339f2981f2cb1d67 powerpc/pseries: Advertise Hot Plug Event support to firmware
8d460f6156cd55d981d109f01b82cbea8cf80e57 powerpc/process: Add the function flush_tmregs_to_thread
c7a318ba868c61fc9be710a4970172d8c2eeb8b9 powerpc/ptrace: Fix coredump since ptrace TM changes
64b40ffbc83029f035571cad9727e34e69dbf6d0 powerpc/pseries: Add hypercall wrappers for hash page table resizing
dbcf929c0062b758fbb6312ccaf30716c0c0a608 powerpc/pseries: Add support for hash table resizing
438cc81a41e8c2905d0f4f300d4690445b2ab240 powerpc/pseries: Automatically resize HPT for memory hot add/remove
6593ccd8002ca00a35e71aceb067aebeef165718 MAINTAINERS: Updating maintainers list for Cisco FNI and SNIC drivers
18bbcabdc6cc6be8c7f6d80c85d314535d76188d Revert "scsi: megaraid_sas: Enable or Disable Fast path based on the PCI Threshold Bandwidth"
f6c0d55c5b91c0d626d65aebee1a0d6b0a61851d scsi: megaraid_sas: cpu select rework.
8bf7c65d379a6d923dfebb50eb04c2407e4762ed scsi: megaraid_sas: raid 1 fast path code optimize
15dd03811d99dcf828f4eeb2c2b6a02ddc1201c7 scsi: megaraid_sas: NVME Interface detection and prop settings
96188a89cc6d5ad3a0a5b7a6c4abc9f4a6de7678 scsi: megaraid_sas: NVME interface target prop added
33203bc4d61b33f1f7bb736eac0c6fdd20b92397 scsi: megaraid_sas: NVME fast path io support
a48ba0eca0456d45e920169930569caa3fc57124 scsi: megaraid_sas: raid 1 write performance for large io
5fc499b612c5401a7ae0674086befcdf8b148516 scsi: megaraid_sas: reduce size of fusion_context and use vmalloc if kmalloc fails
d2d0358bcd09139a8e71afbca35bcd6b219dd1bf scsi: megaraid_sas: MR_TargetIdToLdGet u8 to u16 and avoid invalid raid-map access
a174118b7a97c52c3c3a4f1b8eee594502a55381 scsi: megaraid_sas: big endian support changes
318aaef88353c09a73d26d3b87a74fab67ff9282 scsi: megaraid_sas: avoid unaligned access in ioctl path
b41c0a4aa7c0fc1f98648c020358598498d48f06 scsi: megaraid_sas: set pd_after_lb from MR_BuildRaidContext and initialize pDevHandle to MR_DEVHANDLE_INVALID
25fb13dd2d6e9897c391315254d1b2f7c74e0482 scsi: megaraid_sas: Remove unused pd_index from megasas_build_ld_nonrw_fusion
e00731bc5abb8f00f64e74fc8deb3feca580f22d scsi: megaraid_sas: Cleanup VD_EXT_DEBUG and SPAN_DEBUG related debug prints
41064f1bf8886bc43afbd9aa23a698f97bc65664 scsi: megaraid_sas: Indentation and smatch warning fixes
d1da522fb8a70b8c527d4ad15f9e62218cc00f2c scsi: megaraid_sas: handle dma_addr_t right on 32-bit
9122e991cebb90a7225109ed7627950f485c5f58 scsi: be2iscsi: Fix checks for HBA in error state
50a4b824be9e4a01f3b87790865e26b1546fcbb8 scsi: be2iscsi: Fix to make boot discovery non-blocking
10bcd47dff496206de68223aeb1a581bccad03d3 scsi: be2iscsi: Fix to add timer for UE detection
6694095b5a28c54d9fd114997e483cdc47a2e792 scsi: be2iscsi: Add IOCTL to check UER supported
480195c267a4c9f9fcb490897278a41940759b4f scsi: be2iscsi: Move functions to right files
4d2ee1e688a26ee580b9f3e824afa278bbb178a5 scsi: be2iscsi: Fix POST check and reset sequence
f79929deb56e1b8053c36adf7ee8d34b39e673a8 scsi: be2iscsi: Add V1 of EPFW cleanup IOCTL
d1d5ca887c0ee60ec6c6e42db0c1073155a09d32 scsi: be2iscsi: Add TPE recovery feature
10e1a44ab2bfc850f5ccca5624c68f7c7f8c460c scsi: be2iscsi: Fail the sessions immediately after TPE
4ee1ec42b33036c785d92744446630e6e242327e scsi: be2iscsi: Add FUNCTION_RESET during driver unload
938f372c7d3d2a9a732a1ed7c9a0131ab1ab2e5b scsi: be2iscsi: Fix async PDU handling path
1b7a7ddceee5559a15c4c93020d7dcd9862babed scsi: be2iscsi: Fix queue and connection parameters
deeea8edc746c68d7aa2282322b14be701ec11ee scsi: be2iscsi: Fix error return code
bf9b7554f46c4736d72e61f076a2d91a4303d2ea scsi: be2iscsi: Remove redundant iscsi_wrb desc memset
658f18d1b82b9f9d89f7c74cd2bcbc9b33a74870 scsi: be2iscsi: Add missing unlock for mbox_lock
7d2c0d643244311d0ce04fde373cd371ad1f1cad scsi: be2iscsi: Replace _bh with _irqsave/irqrestore
23b98e4b5fc5efd1d5d5f018bc7f954cd119f538 scsi: be2iscsi: allocate enough memory in beiscsi_boot_get_sinfo()
29b33252751b430e400a987667a826ffcd2741f4 scsi: be2iscsi: set errno on error path
f3505013779646704f81b41c011ab089b26c3f3e scsi: be2iscsi: Fix use of invalidate command table req
987132167f4bfb132cd56601f77d2bd5ba9cff4a scsi: be2iscsi: Fix for crash in beiscsi_eh_device_reset
faa0a22d54230ae9658c419e495fc1a469e191f3 scsi: be2iscsi: Take iscsi_task ref in abort handler
392b7d2f122210da594671606321223167a5a85c scsi: be2iscsi: Set WRB invalid bit for SkyHawk
d7401055480d80599b6813fdf556d519ced4d71e scsi: be2iscsi: Fix iSCSI cmd cleanup IOCTL
fa1261c4b683828f1b012267aff5b9322fd9ab71 scsi: be2iscsi: Remove unused struct members
29e80b7ce36ffcc3efd6062d87ddaf6c6f43a542 scsi: be2iscsi: Remove wq_name from beiscsi_hba
f253473699b2e308e48a6e2eacb4391e045410c9 scsi: be2iscsi: Use GFP_ATOMIC under spin lock
dd940972f36779577701f20965847e9b56b79a0e scsi: be2iscsi: Reinit SGL handle, CID tables after TPE
ef8d1d51aa5ebe4b17b5e837d520df1e398b7adb qla2xxx: setup data needed in ISR before setting up the ISR
f1d7ce65c9003a8e027a8745adc74b550da3ab16 qla2xxx: Remove sysfs node fw_dump_template.
a7ddd02b108ecada1cf5a5ccb9362179d5671db4 qla2xxx: Make debug buffer log easier to view.
783e0dc4f66ade6bbd8833b6bae778158d54c1a6 qla2xxx: Check for device state before unloading the driver.
ec89146215d124c429bff84b498dccdc4919ffa7 qla2xxx: Add bsg interface to support D_Port Diagnostics.
8437dda036da5dc839455b5281bd7eac5751765b qla2xxx: Add bsg interface to support statistics counter reset.
40f3862ba91ec1a76ecd848e483db9fc20d279b8 qla2xxx: Let DPORT be enabled purely by nvram.
ef55e5133c3120ec07434b16d09a7c7f026d8c80 qla2xxx: Correction to function qla26xx_dport_diagnostics().
75d560e09524660a2c67a49f01ca688bd6b623c2 qla2xxx: Fix duplicate message id.
1d48390117c7df9839cf4d43ec33346e7868a53c qla2xxx: small cleanup in qla2x00_wait_for_hba_ready()
b639f197210d37905a6018ae4297659eb3f48f8f qed: Add missing port-mode
525ef5c07f187bf0918fdf3bbc76ad18ce1d1cf9 qed*: Add and modify some prints
2591c280c375c547022eb619895c1aebbbc38219 qed: Remove OOM messages
cee9fbd8e2e9e713cd8bf227c6492fd8854de74b qede: Add qedr framework
68203a67a7024c5d0b8e545d3d370b1fec971551 qed: Fix static checker warning
0189efb8f4f830b9ac7a7c56c0c6e260859e950d qed*: Fix Kconfig dependencies with INFINIBAND_QEDR
256958538ae2616e4aa14efab8c0d11df1e188db qede: Prevent GSO on long Geneve headers
0fefbfbaad298162737d5418eb85065879f99b3e qed*: Management firmware - notifications and defaults
14d39648cbfc6289e3f873d30f282b9517ebe860 qed*: Add support for WoL
6927e82680699f7999d68c648d50574a5e4a8f37 qed: Learn of RDMA capabilities per-device
2edbff8dcb5da324fd4c4fe953629e4f6ca73c99 qed: Learn resources from management firmware
b0fca3122f6220e9a5bd975cdc5c4a87f575b740 qed: Correct VF mac number
bb48024284327768debd03a197d7c4179ec6ca05 qed: Prevent stack corruption on MFW interaction
5c5f26090840951b4102d9a1e6db9aac41101e5a qed: Correct rdma params configuration
f4fad34c0e45b3e30d2b5312d545e2d416778c7b qede: Refactor data-path Rx flow
567b3c127a79277bac31a9609734b355d30e7905 qede: Revise state locking scheme
3da7a37ae6886cfba9ef35428eb976fc2ef561fa qed*: Handle-based L2-queues.
8a4725306522c875fca4bff4bd14a46e97690f48 qede: Don't check netdevice for rx-hash
9eb22357d568aee18f7ce4d0797d96fe7fcd2f71 qede: Better utilize the qede_[rt]x_queue
fc831825f99eb3a2f1bf3fe7307b392513b642a5 qed: Add support for hardware offloaded iSCSI.
1d6cff4fca4366d0529dbce170e0f33cfe213790 qed: Add iSCSI out of order packet handling.
22b1ae6169e3cb9e33ba549a0c07a0cc469143d7 qede: fix general protection fault may occur on probe
e8f1cb507d01205e03f69809af4347ed8ec9db5b qed*: Update to dual-license
cdda926d4098690de0d74ad6e7bb51bf4d7a4104 qede: Break datapath logic into its own file
aed284c7f0d9d33ce34fadade605b33e8683b7ed qede: Split filtering logic to its own file
e1d32acbcbd35af5264acc70ff03bf8da9e447a8 qed*: Change maximal number of queues
e3eef7ee0201dbe5f4fc011b58d26228b57736ce qede: Postpone reallocation until NAPI end
7ca547bdb00e3b162e8ed2889161b93eba9def0b qede - mark SKB as encapsulated
04e0fd006a9a670f557815b29ea89ffdac667c4d qede: Remove unnecessary datapath dereference
f29ffdb65ff0eaf95d2a2b80f0dee3fbd5a64772 qed*: RSS indirection based on queue-handles
1fe582ecade714e90e71c67c32edb7b5b809d651 qed: Conserve RDMA resources when !QEDR
ec22eb53106be1472ba6573dc900943f52f8fd1e {net,IB}/mlx5: MKey/PSV commands via mlx5 ifc
09a7d9eca1a6cf5eb4f9abfdf8914db9dbd96f08 {net,IB}/mlx5: QP/XRCD commands via mlx5 ifc
1a412fb1caa2c1b77719ccb5ed8b0c3c2bc65da7 {net,IB}/mlx5: Modify QP commands via mlx5 ifc
c4f287c4a6ac489c18afc4acc4353141a8c53070 net/mlx5: Unify and improve command interface
2974ab6e8bd8ad06d30ed471b91f8ff7aa6debd8 net/mlx5: Improve driver log messages
9def7121bed3be8a9d126c900ca7067647bc4789 net/mlx5: Enable setting minimum inline header mode for VFs
575ddf5888eaf8f271cb3df7b0806cb2db2c333a net/mlx5: Introduce alloc_encap and dealloc_encap commands
7907f23adc186700efbe56c032527e47485c86ab net/mlx5: Implement RoCE LAG feature
6a32047a441b870dd2570fe0831dada5e9ce40f6 net/mlx5: Get RoCE netdev
db60b80273c5e0e61c2ad59d2903c9988b9d184c net/mlx5e: Avoid port remapping of mlx5e netdev TISes
edb31b1686751f605eb02a6dcf5ef29c5d485a8e net/mlx5: LAG and SRIOV cannot be used together
aaff1bea16bb7f259a263c3ae4633d092e2da799 net/mlx5: LAG demux flow table support
3e75d4ebaae7aac5ba82fc7a6e0e6fb56dac1916 net/mlx5: Add LAG flow steering namespace
3bc34f3bcb087764796d9a6eaa476e270114eb8f net/mlx5: Vport LAG creation support
917b41aab7b3afb2221ac0895f302ee32431fa6e net/mlx5: Configure IB devices according to LAG state
cea824d416522ce63d83b45fc0dc53c0f5b68cee net/mlx5: Introduce sniffer steering hardware capabilities
87d22483ce68e609818d61e3a65361f5634c6cd6 net/mlx5: Add sniffer namespaces
94cdb8bb993a2303d6172b28cbd2b48245b9b8a3 cxgb4: Add support for dynamic allocation of resources for ULD
b72a32dacdfa29b21da8c720ab9ceee40399b2ac cxgb4: add support for tx traffic scheduling classes
6cede1f17f51333ecf9cd4c9fca5565842f1bf55 cxgb4: add support for per queue tx scheduling
10a2604ea2eac8af2bf7fa5eb11e4fcb6bc336d5 cxgb4: add support for tx max rate limiting
a26c76798e602fda301a997ec1ded3815b2e0e77 cxgb4: Remove unused including <linux/version.h>
661dbeb9d6e6e698d469c334527eae8177810b1f cxgb4: Add support for ndo_get_vf_config
6b6adee3dad25bbe568ee24fc843372d02fb425f net/mlx5: SRIOV core code refactoring
737a234bb6384800a5b632be85c6b0ad6221d137 net/mlx5: Introduce attach/detach to interface API
59211bd3b6329c3e5f4a90ac3d7f87ffa7867073 net/mlx5: Split the load/unload flow into hardware and software flows
acab721b5d8d9431cc80acc827973eeeda4dec24 net/mlx5: Implement SRIOV attach/detach flows
c2d6e31a0008f8188f935f8dd81c81c44697b256 net/mlx5: Align sriov/eswitch modules with the new load/unload flow.
1ab2068a4c663cbb2e0e0cfea934bc4e163abed0 net/mlx5: Implement vports admin state backup/restore
26e59d8077a31972dc81fe5ff75aa4fd5b260b71 net/mlx5e: Implement mlx5e interface attach/detach callbacks
9df30601c843aeb9877c966d9d75d4947117c923 net/mlx5e: Restore vlan filter after seamless reset
f1ee87fe55c86d4c5adc804db15b3ed06169fba5 net/mlx5: Organize device list API in one place
85e42b044e8dda0acb60c645d089f4a19e0136d3 libcxgb,iw_cxgb4,cxgbit: add cxgb_get_4tuple()
804c2f3e36ef60e6f50e6101ae06b02fbaa14b9a libcxgb,iw_cxgb4,cxgbit: add cxgb_find_route()
95554761d1db54f7c058cc0ed389282ce7361999 libcxgb,iw_cxgb4,cxgbit: add cxgb_find_route6()
b65eef0a5b1a635f9b056cf74d3ef778f3794a75 libcxgb,iw_cxgb4,cxgbit: add cxgb_is_neg_adv()
44c6d06992ac663e5163bdbe00844cb845ed5703 libcxgb,iw_cxgb4,cxgbit: add cxgb_best_mtu()
cc516700c7edab4197d08998ac023c3043369391 libcxgb,iw_cxgb4,cxgbit: add cxgb_compute_wscale()
a1a234542b7817c28770ad4e80be1bf69e6a4f86 libcxgb,iw_cxgb4,cxgbit: add cxgb_mk_tid_release()
29fb6f42e7282322672eff8b4ad85918b9dcbae3 libcxgb, iw_cxgb4, cxgbit: add cxgb_mk_close_con_req()
a7e1a97f88058ed9b6aa054b38167fbe62f59f50 libcxgb,iw_cxgb4,cxgbit: add cxgb_mk_abort_req()
052f4731ed1fd6b132a14c56f49435377a246834 libcxgb,iw_cxgb4,cxgbit: add cxgb_mk_abort_rpl()
6e3b6fc201fe16d3944e2b293e7f47a72f4a56c1 libcxgb,iw_cxgb4,cxgbit: add cxgb_mk_rx_data_ack()
7e426671704d2266757dff9c4254b788561aa11e net/mlx5e: Single flow order-0 pages for Striding RQ
a5a0c590166e39fa399940775e7bfd8e1a9356da net/mlx5e: Introduce API for RX mapped pages
4415a0319f92ea0d624fe11c917faf9114f89187 net/mlx5e: Implement RX mapped page cache for page recycle
02038fd6645a08df1d3b37c12a065940b15ed4fe crypto: Added Chelsio Menu to the Kconfig file
0fbc81b3ad513fecaaf62b48f42b89fcd57f7682 chcr/cxgb4i/cxgbit/RDMA/cxgb4: Allocate resources dynamically for all cxgb4 ULD's
106323b905a6bcd21ff83dd4e19566282fd5eb52 cxgb4: Fix return value check in cfg_queues_uld()
5fe6eaa1f9a00b9a5927e3b791ecad2f3eaab130 SUNRPC: Generalize the RPC buffer allocation API
3435c74aed2d7b743ccbf34616c523ebee7be943 SUNRPC: Generalize the RPC buffer release API
68778945e46f143ed7974b427a8065f69a4ce944 SUNRPC: Separate buffer pointers for RPC Call and Reply messages
5a6d1db4556940533f1a5b6521e522f3e46508ed SUNRPC: Add a transport-specific private field in rpc_rqst
9c40c49f145f8999ecbf81683aeb31d92b61b966 xprtrdma: Initialize separate RPC call and reply buffers
08cf2efd5423121985af5962d66e6db14dff4130 xprtrdma: Use smaller buffers for RPC-over-RDMA headers
99ef4db329f1ee2413dad49346e72a6c902474d1 xprtrdma: Replace DMA_BIDIRECTIONAL
54cbd6b0c6b9410782da3efe7377d43bb636faaf xprtrdma: Delay DMA mapping Send and Receive buffers
13650c23f10603154d989cff70b5c8a889e69fc2 xprtrdma: Eliminate "ia" argument in rpcrdma_{alloc, free}_regbuf
90aab6029606152d3d7ea91b41064580f77d7d19 xprtrdma: Move send_wr to struct rpcrdma_req
6ea8e71150ecdc235fab31f76ed9953d82313923 xprtrdma: Move recv_wr to struct rpcrdma_rep
c8b920bb49939a5c6cf1d2d819300f318ea050d2 xprtrdma: Basic support for Remote Invalidation
655fec6987be05964e70c2e2efcbb253710e282f xprtrdma: Use gathered Send for large inline messages
eeb30613e1ef82236a058b02d645cad812b309ae xprtrmda: Report address of frmr, not mw
496b77a5c5ce8cd36b5fb78b8811f015643a6541 xprtrdma: Eliminate rpcrdma_receive_worker()
766a0e978fc2ba98d4865b466f8b572402317189 net/mlx5: clean function declarations in eswitch.c up
d576acf0a22890cf3f8f7a9b035f1558077f6770 net/mlx4_en: add page recycle to prepare rx ring for tx support
de3d6fa81e684af5817dc379ffc394235a9666cc net/mlx4_en: Add branch prediction hints in RX data-path
d57fd6cafbad29d0648ed769f6df07b02f10d613 cxgb4: move common filter code to separate file
578b46b9383c3619cc0a6002ff867e732b08b67a cxgb4: add common api support for configuring filters
1bfecfca565c0505d04dbf5fdd3d2fbb951827c0 net/mlx5e: Build RX SKB on demand
21c59685dd176dd6b2c4fc5e18dc65730cfd546a net/mlx5e: Union RQ RX info per RQ type
2fc4bfb7250d79ee4e58c1d5bca257687e9f5e53 net/mlx5e: Dynamic RQ type infrastructure
f10b7cc7707f7d598e3ddacd848080b18ba4cbff net/mlx5e: Have a clear separation between different SQ types
bac9b6aa1df7d584d72558cdd12df186e91245b3 net/mlx5: E-Switch, Set vport representor fields explicitly on registration
e33dfe316cf3b408e63bf0c21be0842412eb7981 net/mlx5: E-Switch, Allow fine tuning of eswitch vport push/pop vlan
8515c581dfa574420559d8cef24c2ba24e8eb8dd net/mlx5e: Refactor retrival of skb from rx completion element (cqe)
f5f82476090fd2c6fc4fde03ba61aef984900009 net/mlx5: E-Switch, Support VLAN actions in the offloads mode
e12934d9806e61d2727069cd56757987f3da76aa cxgb4: fix signed wrap around when decrementing index idx
8e61212d05963a3beecb8bf124b88a0b13a9600d IB/iser: use IB_PD_UNSAFE_GLOBAL_RKEY
5f071777f9cbd71faa00eb854d15f42ae74e0471 IB/srp: use IB_PD_UNSAFE_GLOBAL_RKEY
5ef990f06bd7e3cf521b5705d898d8e43d04ea90 IB/core: remove ib_get_dma_mr
b42959dc35a533a531dd698b581193a65a5da831 net/mlx4: Add VF vlan protocol 802.1ad support
1cb1860d9133ff795cac640b9af4569a2668b45e cxgb4: fix -ve error check on a signed iq
50935857f878c014d92be49cbf651bcfbfdacdc0 cxgb4: mark symbols static where possible
803783849fed11e38a30f31932c02c815520da70 mlx5: Add ndo_poll_controller() implementation
584d9577ffecdb411f1fd0d160e76a1e141554c8 IB/hfi1: Fix locking scheme for affinity settings
84b3adc2430eafd2eb703570075c3c141ea0ff13 IB/qib: Remove qpt_mask global
2d01c37d7501decfdcee2ff7ef32a017b7276a34 IB/hfi1: Add irq affinity notification handler
d9703650f4aba7555fde92636d8d9a689029e8f8 IB/{rxe,core,rdmavt}: Fix kernel crash for reg MR
b6bbee0d2438a2c9c7525f5bd7047a8b2ce4f38f IB/rxe: Properly honor max IRD value for rd/atomic.
b9fe856e545491fd57fc7ca195d0123df0124e7c rdma_rxe: Ensure rdma_rxe init occurs at correct time
e404f945a6101a6f0f2a29aade6dc32015471daa IB/rxe: improved debug prints & code cleanup
0680efa21478f7b3e775bf4253c615538cef2ebf IB/mlx5: Refactor raw packet QP modify function
eb49ab0c5f3d8e5efb696f100978bf966ecf6be3 IB/mlx5: Add port counter support for raw packet QP
dd063d0e6c78b53090a7b3593b0fe40e449b404a IB/mlx5: Fix coverity warning
466fa6d2e36408f697f9ff766f82003ef424bad1 IB/mlx5: Add support of more IPv6 fields to flow steering
5ec8c83e3ad3ea4ea78798edcd4ad61e0041a174 IB/mlx5: Port events in RoCE now rely on netdev events
9ef9c640f4c5376189d8ca70f51a50a3d0b16914 IB/mlx5: Merge vports flow steering during LAG
88621dfe90677a6a07ae1aff9feb1773226bc8b0 IB/mlx5: Port status track LAG master, when LAG is active
13eab21f92de21f324fd6afe1aeca310446b8731 IB/mlx5: LAG QP load balancing
3085e29e2f832cbf77ddeeffe715809a31254b5f IB/mlx5: Move and decouple user vendor structures
a85fb3383340b417132e5731f9694840660887cb IB/cxgb3: Move user vendor structures
e44ee2fd9845a86b0c7e8742672ae5ba6d7d34ee IB/cxgb4: Move user vendor structures
9ce28a20eec551cfc032c87cd31a05c14d11155d IB/mlx4: Move user vendor structures
a7fe7380f6b234f207a599c9ffbaae6c1a574634 IB/ocrdma: Move user vendor structures
c546b2a3b6612a9fa09940a13844ef384683db6e IB/nes: Move user vendor structures
486f60954c71c5ce42341ed02cf804dda1c1bcc5 IB/mthca: Move user vendor structures
fd10ed8e6f4246ac5e18b921ba50562959502117 IB/mlx4: Fix possible vl/sl field mismatch in LRH header in QP1 packets
2e0cbc4dd077aea4f1693583fd68eaed4d60464b qedr: Add RoCE driver framework
ec72fce401c6dc6fc89c49f30dc2c67920c4d5bf qedr: Add support for RoCE HW init
ac1b36e55a5137e2f146e60be36d0cc81069feb6 qedr: Add support for user context verbs
a7efd7773e31b60f695816c27393fc717a9df127 qedr: Add support for PD,PKEY and CQ verbs
cecbcddf6461a11ce229e80bb3981415220c9763 qedr: Add support for QP verbs
e0290cce6ac02f8e5ec501f25f6f6900f384550c qedr: Add support for memory registeration verbs
afa0e13be754307a9ed7ad31fe42b5ec97948c49 qedr: Add support for data path
1d1424c8f834e4e3b8792d310a94b0e2e8f59b4c qedr: Add LL2 RoCE interface
048867793046e6bd665869816f4702fc49cc9a18 qedr: Add GSI support
993d1b52615e1a549e55875c3b74308391672d9f qedr: Add events support and register IB device
67b11e2ea704f99953f18585609df17b6e189e53 cxgb4: fix memory leak of qe on error exit path
a56177e18f2e44499a8bf5bc03dbe896dbec657d cxgb4: Fix number of queue sets corssing the limit
18e601d6adae5042f82d105ccd3d4498050f2ebf sunrpc: fix some missing rq_rbuffer assignments
bba1574c2f11d674bf343f3cf307b33d19f73d9d net/mlx5: Always Query HCA caps after setting them
e83d6955fe422f120b0e98e4f02496af89845eef net/mlx5: Correctly initialize last use of flow counters
2b029556667a7fc1aea731c5828e501656f87653 net/mlx5e: Choose best nearest LRO timeout
5e1e93c7047381b81236f82f60c15d49c510d1a7 net/mlx5e: Unregister netdev before detaching it
247f139cdae73b4f47bd348d05dff1afd40b84b6 net/mlx5: Change the acl enable prototype to return status
05ac2c0b7438ea08c5d54b48797acf9b22cb2f6f net/mlx5: Fix race between PCI error handlers and health work
04c0c1ab38e95105d950db5b84e727637e149ce7 net/mlx5: PCI error recovery health care simulation
166e6045cacccb3046883a1a4c977f173fec5ccd cxgb4: Fix error handling in alloc_uld_rxqs().
42fb18fd5852dba9c43ac008558e4bc8062bda57 net/mlx5: Simplify a test
8d42629be0cb6c58a5c77cd02e47974c0e724e63 svcrdma: backchannel cannot share a page for send and rcv buffers
abd3277287c7743d3999b801c6769e8ad1b381dd net/mlx5e: Disallow changing name-space for VF representors
ee39fbc4447d5c42640963b559bf68490cb45308 net/mlx5: E-Switch, Set the actions for offloaded rules properly
62bdf94a2049822ef8c6d4b0e83cd9c3a1663ab4 xprtrdma: Fix DMAR failure in frwr_op_map() after reconnect
39eb2795f19233330bc14a8450b4042d784b15a7 IB/hfi1: Remove redundant sysfs irq affinity entry
dbaaff2a2caa03d472b5cc53a3fbfd415c97dc26 IB/mlx5: Fix fatal error dispatching
1454ca3a97e147bb91e98b087446c39cf6692a48 IB/rxe: Fix kernel panic in UDP tunnel with GRO and RX checksum
002e062e13db10973adb8302f231e48b477c7ccf IB/rxe: Fix handling of erroneous WR
aa75b07b478a774b1432e2df1be5cd8ae834de0f IB/rxe: Clear queue buffer when modifying QP to reset
6d931308f55faaef3f30bd0346c47f99528b229d IB/rxe: Update qp state for user query
f663ad98623926b8d7bdef4b4648d10c0229aebe net/mlx5: Verify module parameters
f9c14e46748be9a2adafdb7d216f6cdeb435aadc net/mlx5: Fix query ISSI flow
b8335d91b472289939e26428dfa88c54aee3b739 net/mlx5e: Don't notify HW when filling the edge of ICO SQ
3c8591d593a3da9ae8e8342acb1f6ab9ab478e92 net/mlx5e: Don't flush SQ on error
c0f1147d14e4b09018a495c5095094e5707a4f44 net/mlx5e: Change the SQ/RQ operational state to positive logic
d2a007ab191646d41553ffb6624cef1957e899ae cxgb4/cxgb4vf: Assign netdev->dev_port with port ID
24abdf1be15c478e2821d6fc903a4a4440beff02 xprtrdma: Fix Read chunk padding
b5f0afbea4f2ea52c613ac2b06cb6de2ea18cb6d xprtrdma: Per-connection pad optimization
c95a3c6b88658bcb8f77f85f31a0b9d9036e8016 xprtrdma: Disable pad optimization by default
16f906d66cd76fb9895cbc628f447532a7ac1faa xprtrdma: Reduce required number of send SGEs
c6f5b47f9fdeef12c0896e5af4bb3416c97d91c4 xprtrdma: Shrink send SGEs array
865cea40b69741c3da2574176876463233b2b67c RDMA/qedr: Return success when not changing QP state
bec60fc42b285344b027c87444c7fd6caade0ceb i40e/i40evf: Remove unused hardware receive descriptor code
858296c8784bf98450765cbc6b1bc2e44175cc01 i40e/i40evf: Fix i40e_rx_checksum
c57c99597376c2a223b1ff472f614211ade44e76 i40e/i40evf: Fix indentation
99dad8b34c687cb8c4975fbabced76db35f88c14 i40e: Drop redundant Rx descriptor processing code
7987dcd7b95111a5acbf5abdbf155eedacd3546b i40e/i40evf: Limit DMA sync of RX buffers to actual packet size
e72e56597ba15ce70f4fc1eb2ceeaa8da0d4ab5e i40e/i40evf: Moves skb from i40e_rx_buffer to i40e_ring
9b37c937313bf6769d0b018ca35180b379d40862 i40e/i40evf: eliminate i40e_pull_tail()
b9c015d421946fe3675fcb9cbacd0a37f1d3263c i40e: mark the value passed to csum_replace_by_diff as __wsum
4f675eb2a736dfb65d68a00ff38e9342252eeabc enic: add support for set/get rss hash key
54846f5838d871ad69ebe6eb1999cae3867dabc7 fec: move to new ethtool api {get|set}_link_ksettings
c4550c63b363914071d63a36e5bedcfe22057940 IB: Query ports via the core instead of direct into the driver
fdd9b8655933c3eb3154fe1ed351c17b654258bd mei: wd: drop the watchdog code from the core mei driver
893913822e829f7a37824f6041ff964076374191 mei: bus: complete variable rename of type struct mei_cl_device
222818c3d84c1f3190767f5f09f2b9b9a0e0ca7f watchdog: mei_wdt: implement MEI iAMT watchdog driver
7a23f80eaae9c6b5175cd7a96634a91ed9928aff watchdog: mei_wdt: register wd device only if required
ad1cd720b18330599a9cabaf970095b74c9c3355 watchdog: mei_wdt: add activation debugfs entry
3a20a5c339cce042e53557be067e121e4e984adf watchdog: mei_wdt: re-register device on event
06ee536bcb15ca12868289467762130fa0a426f3 mei: fill file pointer in read cb for fixed address client
f4e06246183f187d1327fdba18a797eb091a7d03 mei: fixed address clients for the new platforms
7851e008703e2f7073802e560293213e93dcdde6 mei: drop reserved host client ids
27f476ea98ed495839662db4e3a76357bbeb1bb3 mei: hbm: send immediate reply flag in enum request
025fb792bac33632c19fe12265ba1f6108921300 mei: split amthif client init from end of clients enumeration
c0ff9019ee64101fda8f19338da799fda8217e14 mei: drop wr_msg from the mei_dev structure
a808c80cdaa83939b220176fcdffca8385d88ba6 mei: add read callback on demand for fixed_address clients
dfe5f753d06a4eaf362872a7f30aabe5f5fc968c mei: drop redundant krealloc and checks in irq read
4034b81ba38967ad0056781572a9d9a95d39f02e mei: use consistent naming for TX control flow credits
ff1586a7ea57a4758a3f10ad7c9cdb26edcbd7f3 mei: enqueue consecutive reads
e728ae271f4cf71218ec06a6daf61b79466cb466 mei: amthif: fix deadlock in initialization during a reset
582ab27a063a506ccb55fc48afcc325342a2deba mei: bus: fix received data size check in NFC fixup
5be149bdd36c8765c9e785f70b888d028ada40af mei: bus: add module_mei_cl_driver helper macro
b2a2f70863d2af5445b9a46b099c79cca981d002 watchdog: mei_wdt: use module_mei_cl_driver macro
7ee7f45a763bd68c3a606595a8c1bb08c3e6146b mei: bus: enable OS version only for SPT and newer
369ba56787d7469c0afda70bb9ff76ad5faaead5 net_sched: init struct tcf_hashinfo at register time
89819dc01f4c5920783f561597a48d9d75220e9e net_sched: convert tcf_hashinfo to hlist and use spinlock
568a153a22d8f338a5ebda70e6bd139f6d8bb2c3 net_sched: fix a regression in tc actions
cc91210cd2f6832db1a174269627d97b7d4f2c80 net: sched: RCU cls_route
d355ab09594118b8dfb3d78dbda72fff634a934b net: sched: rcu'ify cls_bpf
80dcbd12fb30932bb001b913ffe36843e2a1fe3a net_sched: fix suspicious RCU usage in cls_bpf_classify()
e1f93eb06c3a13b29b1980f27dada960503cd49e net: sched: cls_fw: add missing tcf_exts_init call in fw_change()
69204cf7eb9c5a72067ce6922d4699378251d053 net: fix suspicious rcu_dereference_check in net/sched/sch_fq_codel.c
f6bfc46da6292b630ba389592123f0dd02066172 sched: cls_bpf: fix panic on filter replace
6bd00b850635abb0044e06101761533c8beba79c act_mirred: fix a race condition on mirred_list
13990f8156862fe945a1a226850a6550c8988a33 net: sched: cls_cgroup tear down exts and ematch from rcu callback
82cc1a49b6358394938e759dc4c22b2be773bbad tpm: Add TPM 2.0 support to the Nuvoton i2c driver (NPCT6xx family)
6804f6bba09997393904a112f2043963a8e08abf tpm: Only call pm_runtime_get_sync if device has a parent
4055ae5e6d00e09ff4206843638323d1d5dfd85d cxgb4: Synchronize access to mailbox
96fe11f27b70f6b64f62a2d13ed209aa02e02a48 cxgb4: Implement ndo_get_phys_port_id for mgmt dev
71f7a00bd13d5b0a21a77c438007210bf0a06c91 cxgb4i,libcxgbi: add iSCSI DDP support
9d5c44b7c4f4345341bf96b16fdeb6debc437172 libcxgb: export ppm release and tagmask set api
a9a8cdb368d99bb655b5cdabea560446db0527cc libcxgb: fix error check for ip6_route_output()
3589b8b8af6bdc3aafe520d76a73b77d965006b6 ACPICA: Utilities: Fix local printf issue.
301f0595c0e788edacc3521c4caa90b4e56ffee1 random: printk notifications for urandom pool initialization
6c1d9410f007a26d13173cf17204cfd965f49b83 sched: Move p->nr_cpus_allowed check to select_task_rq()
63c32ed4afc2afd6b5551a8fcdea5b546dcaca4f dm raid: add raid4/5/6 journaling support
e2568465bd55b3ee619d9ebd02cc330feffaae04 dm raid: use read_disk_sb() throughout
2664f3c94abc7181171b7c05b2aaa76ea7d9d613 dm raid: bump the target version
d67a5f4b5947aba4bfe9a80a2b86079c215ca755 dm: flush queued bios when process blocks to avoid deadlock
b29d4986d0da1a27cd35917cdb433672f5c95d7f dm cache: significant rework to leverage dm-bio-prison-v2
ff53604b40b439cbb235f89bda99839ca81d3b9d KVM: x86: move MTRR related code to a separate file
eb839917a75207b89799e3500211163cb6de0dea KVM: MTRR: handle MSR_MTRRcap in kvm_mtrr_get_msr
70109e7d9d4ac7182786ddf7cd53bc651a157896 KVM: MTRR: remove mtrr_state.have_fixed
10fac2dc2b3b549d371d67f57193362b6bcc6dfd KVM: MTRR: clean up mtrr default type
86fd52701cfae760711fb02a03c1ab8c80ea72f3 KVM: MTRR: do not split 64 bits MSR content
3f3f78b61462fdc62469334c259b1e5555ebd1ed KVM: MTRR: improve kvm_mtrr_get_guest_memory_type
de9aef5e1ad6e504d6992df17dfa193e8ba5cc34 KVM: MTRR: introduce fixed_mtrr_segment table
a13842dc668b40daef4327294a6d3bdc8bd30276 KVM: MTRR: introduce var_mtrr_range
19efffa244071ccd0385b240d03adb38feaab04e KVM: MTRR: sort variable MTRRs
f7bfb57b3e89ff89c0da9f93dedab89f68d6ca27 KVM: MTRR: introduce fixed_mtrr_addr_* functions
f571c0973e4b8c888e049b6842e4b4f93b5c609c KVM: MTRR: introduce mtrr_for_each_mem_type
6a39bbc5da27c3b2520876b71e4f7b50f5313503 KVM: MTRR: do not map huge page for non-consistent range
10dc331ff5e7e4668c0f0c95b1a873aba9b70826 KVM: MTRR: fix memory type handling if MTRR is completely disabled
fa61213746a706dd975661151c35795ca4dd82c2 KVM: MTRR: simplify kvm_mtrr_get_guest_memory_type
fc1a8126bf8095b10f5a79893f2d2b19227f88f2 KVM: MTRR: Use default type for non-MTRR-covered gfn before WARN_ON
cd1872f028556dc0e8424e58413c0268c159383b KVM: x86: MMU: Make force_pt_level bool
5ed5c5c8fdbab889837c9223fc6f4bdaa830879c KVM: x86: MMU: Simplify force_pt_level calculation code in FNAME(page_fault)()
fd136902187838bcae3a572f41cb703553dd63b8 KVM: x86: MMU: Move mapping_level_dirty_bitmap() call in mapping_level()
d8aacf5df86a961923a2c9c547d341d64a9d9f5d KVM: x86: MMU: Remove mapping_level_dirty_bitmap()
018aabb56d6109c8f12397c24e59f67c58870ac1 KVM: x86: MMU: Encapsulate the type of rmap-chain head in a new struct
a7f2d7865720ff13d5b0f2a3bb1fd80dc3d7a73f KVM: MTRR: fix fixed MTRR segment look up
fa7c4ebd5ae0c22f9908436303106a9ffcf0cf42 KVM: MTRR: observe maxphyaddr from guest CPUID, not host
e24dea2afc6a0852983dc741072d8e96155e13f5 KVM: MTRR: treat memory as writeback if MTRR is disabled in guest CPUID
aeecee2ea6e2b020de8bb562f4e79ab34eda3e22 KVM: MMU: introduce kvm_mmu_slot_gfn_write_protect
21ebbedaddf25a35a70fedc001ba7e5f5b9129bc KVM: page track: add the framework of guest page tracking
f29d4d7810d7fd61442371cd68957e1d37ed79bb KVM: page track: introduce kvm_slot_page_track_{add,remove}_page
3d0c27ad6ee465f174b09ee99fcaf189c57d567a KVM: MMU: let page fault handler be aware tracked page
e5691a81e830c12d396b3f219ab999be87a1208f KVM: MMU: clear write-flooding on the fast path of tracked page
0eb05bf290cfe8610d9680b49abef37febd1c38a KVM: page track: add notifier support
5c520e90af3ad546bf328d2c9306c72bf3da6afe KVM: MMU: simplify mmu_need_write_protect
13d268ca2c4c29d6da2ba79419f9a655e602afed KVM: MMU: apply page track notifier
a6adb106225f9e2f177d3d883596e011df321965 KVM: page_track: fix access to NULL slot
9842df62004f366b9fed2423e24df10542ee0dc5 KVM: MTRR: remove MSR 0x2f8
30b072ce0356e8b141f4ca6da7220486fa3641d9 KVM: MTRR: fix kvm_mtrr_check_gfn_range_consistency page fault
b5f5fdca65dbccbafe08a481957629d67003db34 KVM: x86: add track_flush_slot page track notifier
d126363d8fe946c9bb2538839de9b09f5b3b8ba3 kvm/page_track: call notifiers with kvm_page_track_notifier_node
871b7ef2a1850d0b435c8b324bf4a5d391adde3f kvm/page_track: export symbols for external usage
edd14cfebc4404698544d407ecf8eda6e19aa19e genirq: Add untracked irq handler
30ce0350381351646ef86b64e6d3840b3869833b x86/PCI/VMD: Use untracked irq handler
97e92306357583c1741f0a111c7befe8673b91ee x86/PCI: VMD: Initialize list item in IRQ disable
21c80c9fefc3db10b530a96eb0478c29eb28bf77 x86/PCI: VMD: Fix infinite loop executing irq's
ee6ee49fd09fa17c92aadf07961d0ff406fceab8 x86/PCI: VMD: Synchronize with RCU freeing MSI IRQ descs
6e50043912d9c9c119e3c9c5378869d019df70a9 KVM: x86: replace kvm_apic_id with kvm_{x,x2}apic_id
b4535b58ae0df8b7cf0fe92a0c23aa3cf862e3cc KVM: x86: make interrupt delivery fast and slow path behave the same
5bd5db385b3e13c702365574c0b7350c6ea45e84 KVM: x86: allow hotplug of VCPU with APIC ID over 0xff
f790eb57e6ec8d77489755cc25a51c4409e2f590 vfio/mdev: Use a module softdep for vfio_mdev
0df5bef739601f18bffc0d256ae451f239a826bd scsi: cxlflash: Cancel scheduled workers before stopping AFU
fc76936d3ea5720a6e0948a08381b803a68deb28 vmbus: add support for dynamic device id's
95096f2fbd10186d3e78a328b327afc71428f65f uio-hv-generic: new userspace i/o driver for VMBus
190cc65e912de7e8f7ebddcecfbf55a610281a8c uio-hv-generic: store physical addresses instead of virtual
be29d20f3f5db1f0b4e49a4f6eeedf840e2bf9b1 audit: Fix sleep in atomic
06bd3c36a733ac27962fea7d6f47168841376824 ext4: fix data exposure after a crash
4e800c0359d9a53e6bf0ab216954971b2515247f ext4: bugfix for mmaped pages in mpage_release_unused_pages()
e81d44778d1d57bbaef9e24c4eac7c8a7a401d40 ext4: release bh in make_indexed_dir
5aee0f8a3f42c94c5012f1673420aee96315925a ext4: fix in-superblock mount options processing
97abd7d4b5d9c48ec15c425485f054e1c15e591b ext4: preserve the needs_recovery flag when the journal is aborted
4753d8a24d4588657bc0a4cd66d4e282dff15c8c ext4: return EROFS if device is r/o and journal replay is needed
29b4739134c73a2873adec93346f09bb76d6a794 Input: wacom - switch from an USB driver to a HID driver
0b335cad73c800717856f8f5a5509d367c38b61d Input: wacom - support up to 2048 pressure levels with ISDv4
ac8d10101b0e3a0a1478f8bb51bbbb0a56fe0956 Input: wacom - enhance Wireless Receiver battery reporting
d70420b914c98a3758674c6e9858810e0ab4ea30 Input: wacom - use a uniq name for the battery device
7dbd229e10603b3759f366007df2068dc2acfe46 Input: wacom - register an ac power supply for wireless devices
aeaf50d4e7d29d9a5f6da45fdcd9fb118f70fb93 Input: wacom - add support for 0x12C ISDv4 sensor
f81a1295cd9b6d3d3d7d7126e522d80917134b41 Input: wacom - prepare the driver to include BT devices
387142bb8fcb263771e1fa6b1a96e6a7ca36e820 Input: wacom - handle Graphire BT tablets in wacom.ko
81af7e61a774e687ed4a7f37992ef75da57c5ddf Input: wacom - handle Intuos 4 BT in wacom.ko
7403a6a448c3ed96221bb46c9da75254fd87b520 Input: HID - remove hid-wacom Bluetooth driver
849e2f06781a0c73573024bdaea0babc0c4e31af Input: wacom - check for bluetooth protocol while setting OLEDs
296b737874b8a671a8f9ee5a64602f15c06ae937 Input: wacom - remove passing id for wacom_set_report
f2e0a7d4a0b94b4274e3b7e15bf650d45a866f3c Input: wacom - only register once the MODULE_* macros
41a7458147a435e082ceccd3a7d46f3390ea90f3 Input: wacom - fix compiler warning if !CONFIG_PM
d7da3a3ccdeb64ceedb51b0a3377ba56cc2999fa Input: wacom - cleanup multitouch code when touch_max is 2
89f2ab55ea0292bbdf07e5e0b3266ebf0018a224 HID: wacom: Add support for the Cintiq Companion
e0984bc376d84190d631d0a4f81215e48fa3a902 HID: wacom - Add default permission defines for sysfs attributes
37449adc582441f5ff1bbd95e6a8357073fae86b HID: wacom - Clean up of sysfs
c64d883476812783e0400d37028756151d103e5c HID: wacom - remove report_id from wacom_get_report interface
912ca216b548e0fe399f300b4511b0277fb874e4 HID: wacom - enable LED support for Wireless Intuos5/Pro
12969e3bdce5f63fbce2b6d616fdbc8eeb539f01 HID: wacom: make the WL connection friendly for the desktop
8ffffd5212846b72f116f7a9572e83d580e25802 HID: wacom: fix timeout on probe for some wacoms
7fefeec5176861c2747b8dcd9656acf42c288ded HID: wacom: rename failN with some meaningful information
2546dacd3e0e48c40bbb99caf01455f1ade9bb24 HID: wacom: split out input allocation and registration
494078b0bb578c4cf1e00275dd3224d793013488 HID: wacom: move allocation of inputs earlier
7704ac937345d4b502062952657027234aa86a37 HID: wacom: implement generic HID handling for pen generic devices
5ae6e89f7409cb5d218bb728326eba9c650d9700 HID: wacom: implement the finger part of the HID generic handling
00d6f227a5905be47006abcc1f417d069ecc3711 HID: wacom: re-add accidentally dropped Lenovo PID
dff674168878fe7b6d8b9ad60d62295ec517de79 HID: wacom: fix freeze on open when autosuspend is on
44b9683853c7b47d039366d7d2fd0d5380aba276 HID: wacom - make sure touch_input is valid before using it
fefb391f8c15900477432a29d9c3527dd66a8415 HID: wacom: Add support for Intuos Pen Medium
b3c8e93f99a7f9453be54549ae362b603c42188c HID: wacom - return ENODEV for failed wacom_setup_pad_input_capabilities
97edcad81324ede21e421b79eaeab26f0b1ad2fc HID: wacom - Cleanup input_capabilities for Graphire 4 and Bamboo Fun
30ebc1aea8ce02da5b3789eba775dd2d79837813 HID: wacom - Bamboo pen-only tablet does not support PAD
26fe41245f43c86f65cae272a2851dd792e443f7 HID: wacom: Add angular resolution data to some ABS axes
954df6ad00ea2ba732e2e7ae6a68b3111eee4e09 HID: wacom: PAD is independent with pen/touch
c376e7167e0ff390e07d60b4320398c3baae72a6 HID: wacom: Consult the application usage when determining field type
fff00bf8cc8d98aa3b84d9c7daea0af418b6aa69 HID: wacom: Add support for DTU-1031X
ecd618dc25582923add5d7abfbb3b9aeaf51e2ac HID: wacom: Update maximum X/Y accounding to outbound offset
b58ba1ba1af9cfbad6f3af4c4fc3575d9aeae542 HID: wacom: Initialize MT slots for generic devices at post_parse_hid
601a22f3791473baa2923e4a3125e840279f8bba HID: wacom: Report input events for each finger on generic devices
d97a552210320d3bec8ee22b8ccdb1d6d189482a HID: wacom: use WACOM_*_FIELD macros in wacom_usage_mapping()
61e9e7e40a93cfb4a70180beefbbb5bd0c860aeb HID: wacom: add support of the Pen of the Bamboo Pad
b3bd7ef397a6031f5398c76a9a0b0695a38f6587 HID: wacom: peport In Range event according to the spec
33e5df0e0e32027866e9fb00451952998fc957f2 HID: wacom: Report ABS_MISC event for Cintiq Companion Hybrid
9b61aa864ab6c2e12e463559eb83cf83cbd06889 HID: wacom: make sure touch arbitration is applied consistently
a2f71c6c878e664cce4591fc1de36dce2bf44d8d HID: wacom: consolidate input capability settings for pen and touch
eef23a8441432960c89ee5bd034ad822ccd6658e HID: wacom: Add support for I2C connected devices
a97ac10401fe86fa30ef73315241e31d8594a651 HID: wacom: store the hid_device pointers of the sibling devices
8c97a765467c5d58682e85f103899ec2355fc393 HID: wacom: add full support of the Wacom Bamboo PAD
486b908d4412510d66ee348ba765de8d93441345 HID: wacom: do not send pen events before touch is up/forced out
e0d41fd435ad71b86380f27195aa117400439f37 HID: wacom: rely on actual touch down count to decide touch_down
4ca4ec71c84e4ede2b34d2dcf49e7935c735ad6c HID: wacom: Move handling of Intuos status packets to seperate function
953f2c5f716305a5c2ebea935f410ee7aa439159 HID: wacom: Centralize updating of wacom_wac battery status
fce9957d8f618346b76c63066e146fc76ed975ce HID: wacom: Allow dynamic battery creation/destruction
8f93b0b2b0a336746adc8730921b219f0ba40c29 HID: wacom: Provide battery charge state to system over USB if available
b0882cb79dbd2bbdfac1416f8474aa6b0adb9334 HID: wacom: Status packet provides 'charging', not 'powered' bit
8fac1722140019d6a53f7b280f8b785707a16f66 HID: wacom: drop WACOM_PKGLEN_STATUS
71fa641ebbfd2402bdb76d3c6ba7e4a2d1eb2dfc HID: wacom: Add battery presence indicator to wireless tablets
5fcad167315f224eaf6750b0fb85ee6c92f087cd HID: wacom: ask for a in-prox report when it was missed
e2c7d8877e5caa2356b5bc8207535e83b126f653 HID: wacom: check for wacom->shared before following the pointer
f3586d2f819af6dbe5b08d2a6f1d22b1a97e2b64 HID: wacom: remove hardcoded WACOM_QUIRK_MULTI_INPUT
7d059ed01ca18d20e0a94ef785ee81a45c19d78c HID: wacom: use wacom_wac_finger_count_touches to set touch_down
b4bf2120d40b96552326a6606d5fb90e2ab04841 HID: wacom: Add support for Cintiq 13HD Touch
42f4f272746f9e4e3fecb4440dc2429822b6950b HID: wacom: move all quirks to wacom_setup_device_quirks
3d64f54dd0de57bdbcde4b91495fb8e02c620762 HID: wacom: move unit and unitExpo initialization to wacom_calculate_res
e48151a3a456b38b1029a8a7380246b53c768400 HID: wacom: remove unused packet lengths
71b5c4766c1ca4c646a90f64552b140b1368f2f1 HID: wacom: Simplify check for presence of single-finger touch
007760cf082392b65a05c40eb615c5f8294b441a HID: wacom: Add support for DTU-1141
c24eab4e0e449845ba98e649b0605ab0450193db HID: wacom: retrieve name from HID descriptor for generic devices
8d80f790ecbcd0c3d55be51d867cbe4db1debd89 HID: wacom: Do not add suffix to name of devices with an unknown type
042628abd59c9a034797bd3083f806fa17cda62d HID: wacom: Discover device_type from HID descriptor for all devices
8e116d3169cc2b93b7eb2f44dc021a93cd3d5308 HID: wacom: Fail probe if HID_GENERIC device has unknown device_type
26ba61f871b4aa9958bcebffcbeb558094d75928 HID: wacom: fix an Oops caused by wacom_wac_finger_count_touches
aef3156d7294ac878c10ca8f02539b49adee9624 HID: wacom: Have wacom_{get,set}_report retry on -EAGAIN, not -EPIPE
05e8fd9202247ac6cdc26f6bafb5453120065490 HID: wacom: Handle failing HID_DG_CONTACTMAX requests
44b5250b97a0e5c3a257430ea28b10cf73899bd4 HID: wacom: Simplify 'wacom_update_name'
aa86b18cc9cd147b40412a2d57b383a5e16fe3b5 HID: wacom: Treat features->device_type values as flags
862cf5535c0cf4b39ce71a3b7e9a1c22ae4f70ae HID: wacom: Introduce a new WACOM_DEVICETYPE_PAD device_type
2636a3f2d1421e3e629dfc96489c23727bab17d7 HID: wacom: Split apart 'wacom_setup_pentouch_input_capabilites'
2a6cdbdd4cc0da0b0190b9a43648dff7b44adc0a HID: wacom: Introduce new 'touch_input' device
0fd72ff92d6bea32bba612744abbe6a0abd25e43 HID: wacom: NULL dereferences on error in probe()
9633920e5ef65f81d30f2acd642d6d1c25cf7bc7 HID: wacom: Enable pad device for older Bamboo Touch tablets
67e123ff0e9a71fcf19f83827d59f73076f5bd1a HID: wacom: Delete unnecessary checks before the function call "input_free_device"
70caee0a3721956a98cb4bfbfa0eaa38c9182e44 HID: wacom: remove the extra Pen interface for Wacom Bamboo PAD
d9f2d203ab42f099b32ec4580e43eb08b3e4c412 HID: wacom: Properly free inputs if 'wacom_allocate_inputs' fails
2bdd163cfd262914e8f6152e37aebea2034f801e HID: wacom: Set default device name to value from wacom->features
06324e0cb28e06cd7cf609d7c3099b12841a5dd6 HID: wacom: Perform all event processing as part of report processing
1b5d514a3d24996ddbe7c75685af9dfdeff125b5 HID: wacom: Ignore contacts in excess of declared contact count
488abb5c70c19fd37264101d2b6ebee507e1f265 HID: wacom: Report touch width/height/orientation for GENERIC devices
8dc8641e619228153ab0bc609f9f534126e87c08 HID: wacom: Use calculated pkglen for wireless touch interface
ccad85cc1ee34509840e5af80a436ceaf0b71edb HID: wacom: Replace WACOM_QUIRK_MONITOR with WACOM_DEVICETYPE_WL_MONITOR
3f14a63a544374225c17221a5058748360428dc3 HID: wacom: Remove WACOM_QUIRK_NO_INPUT
64d0ed94f5dfde5efac15941128f60edf7f15c17 HID: wacom: Do not repeatedly attempt to set device mode on error
0be017120b80f0fe3da9a8239f989a27e54828f2 HID: wacom: Report correct device resolution when using the wireless adapater
76703be827a7867c28b904562bc78ed1314698bc HID: wacom: Use tablet-provided touch height/width values for INTUOSHT
70ee06c5f447b9d50747b29d3e8d48ae7ef1cabe HID: wacom: Set button bits based on a new numbered_buttons
72b236d60218fe211a8e1210be31c31e81684b86 HID: wacom: Add support for Express Key Remote.
5397df15fd993acd23d9590dbb29d39219d80e3d HID: wacom: wacom_setup_numbered_buttons is local to wacom_wac
3b164a00a9fc0e8df88291a671bb3de37aa3340f HID: wacom: Cleanup unsupported device_type for BAMBOO_PT
eda01dab53b1126a20da98b5d691f3e55d79f21d HID: wacom: Add four new Intuos devices
f7acb55cf1b414f8f515697f2a7bb324ba009062 HID: wacom: Add support for Cintiq Companion 2
8d515fda8946cbfb359dca9d6bd416478f1b45cc HID: wacom: Report full pressure range for Intuos, Cintiq 13HD Touch
499522c8c015de995aabce3d0f0bf4b9b17f44c3 HID: wacom: Tie cached HID_DG_CONTACTCOUNT indices to report ID
df7079380554e6e8e13a0812c7e6c72f669aba5c HID: wacom: Expect 'touch_max' touches if HID_DG_CONTACTCOUNT not present
7adb91bd78a5e00209c56068dc0ad53d4cf4348f HID: wacom: fix Intuos wireless report id issue
6212aae0d4de273e8dbc9f889d0c7ef8317284df HID: wacom: Remove useless conditions from 'wacom_query_tablet_data'
8253d42be8ae8c81cabcf678448c09a69d4f3b8c HID: wacom: Fix ABS_MISC reporting for Cintiq Companion 2
86e88f0e7068e37d9774eb9d93515c44ffa74006 HID: wacom: Call 'wacom_query_tablet_data' only after 'hid_hw_start'
ff38e82931aeaa339d6bf4a9980e011cbfd14927 HID: wacom: Add outbounding area for DTU1141
a3088abc68f79ac30e6e8ccb07a15c8093e39684 HID: wacom: fixup quirks setup for WACOM_DEVICETYPE_PAD
27ba1d56e1e150294802f0dca8368abc51a664fb HID: wacom: Delete an unnecessary check before kobject_put()
fb013a01d48d71a68cd14ea30181754f93acae21 HID: wacom: Move Intuos pad handling code into dedicated function
c7f0522a1ad1c2a1a23872c96955d60890f453e4 HID: wacom: Slim down wacom_intuos_pad processing
16e0a6a0d27f01c47e3685a2a5e6dd2a5b0a525f HID: wacom: Centralize Intuos pen packet decoding
a8a09c8597bd301437c30ce0a4b2f511349a90aa HID: wacom: Replace magic masks and comparisons with switch cases
571f572f9acf7e03fd0e8eb1449e75447295d457 HID: wacom: Further clean up wacom_intuos_general packet decoder
5f33f430efe3ce2dfe4e9c5eeabb89ea5df145b6 HID: wacom: Clean up value reading
061099936a724cdd8dd0d69deea5b064b4f7122b HID: wacom: Rename wacom ID report ID macros
8f9cfdd359478ea70da0144b0cb407a4734f14cd HID: wacom: bitwise vs logical ORs
f73d08d073a4bcb8bb1bd88444f07f39c84400da HID: wacom: Limit touchstrip data to 13 bits
03a0dc546be3fa6091214bd2c05d678d3e8d67df HID: wacom: Report 'strip2' values in ABS_RY
aaae03e4f7f0c641a258dde855ab677c9b58b155 HID: wacom: Fix touchring value reporting
0402b6b77a35205072087d7f774e4c2b2797f8c3 HID: wacom: Fix pad button range for CINTIQ_COMPANION_2
0bbfe28ad0fdc11dddae5fe6f6e4e91b7be06395 HID: wacom: Use correct report to query pen ID from INTUOSHT2 devices
599b082095432f083da89ff53d95b4a878e1fca1 HID: wacom - request tool info only when we get general events
4750f5fe293ae34d334189a77da844f8754862ef HID: wacom - make sure wacom_intuos_inout only process in/out events
c1b03f5511d6aeab3c141c133b492ea492207e64 HID: wacom - Cleanup touch arbitration logic
526d6e7b57062c494346149fb2d6aff0be78ed89 HID: wacom - Add quirks for INTUOSHT2 in range events
7e129783b02081a866a7264473bc784cdfe69265 HID: wacom: break out wacom_intuos_get_tool_type
c58ac3a88d1e8a44fed152e80bf525a66a5647e2 HID: wacom: break out parsing of device and registering of input
a2f091af75c6ba91062bef784982be43ffac2a17 HID: wacom: move down wireless_work()
fd5f92b6d35f8978d98190f2ee61d1b210bb953e HID: wacom: reuse wacom_parse_and_register() in wireless_work
17f28470f4c705811ad6870162f30275143da235 HID: wacom: cleanup input devices
f6205161782fa325152340c8fe47c1b90105cfbc HID: wacom: close the wireless receiver on remove()
580549ef6b3e3fb3b958de490ca99f43a089a2cf HID: wacom: fix Bamboo ONE oops
326ea2a90500fe4add86c5fb95d914d46910e780 HID: wacom: Support switching from vendor-defined device mode on G9 and G11
e1123fe975852cc0970b4e53ea65ca917e54c923 HID: wacom: Add support for DTK-1651
bef7e200065086e2ceef091f6853f3b053ad2ba9 HID: wacom: Add fuzz factor to distance and tilt axes
eff6ca97998386447b795362cc20213114af2870 HID: wacom: add missed stylus_in_proximity line back
d453b87612a0aba6ca6ec85447eeefa220cadec5 HID: wacom: actually report the battery level for wireless connected
97f9afa4f9cc5e88e092e47ebd17ebf3f764a582 HID: wacom: store the type in wacom->shared for INTUOSHT and INTUOSHT2
b62f6465ce1fcbfe4459eb9fd67566ced2a27994 HID: wacom: remove cleanup of wacom->remote_dir from wacom_clean_inputs()
85d2c77b78acf6c30d6d4f7263fb5d30fec1f5c3 HID: wacom: untie leds from inputs
d17d1f171158cc0663b072d91265cc8a6b477c77 HID: wacom: use one work queue per task
b189da901536cf7e9c95c17dd159cfbaddcc0384 HID: wacom: switch battery to devres
3dad188e6a1c6a6213a21dee8b609ceab45d6258 HID: wacom: switch inputs to devres
84dfbd7f2a58c8c79ba7947159fc5f2c521348f6 HID: wacom: put the managed resources in a group
2df68a8864883ff006b76f50dfc32fd230247ef9 HID: wacom: convert LEDs to devres
c1f5409b74c14ac021ef847e034356c904bc7882 HID: wacom: use devm_kasprintf for allocating the name of the remote
19b643300181ccf2bd83cd751283508b9ae179f5 HID: wacom: use devres to allocate driver data
1c817c83e8ccea5f710d3c0d38edcfd362654ba2 HID: wacom: devres manage the shared data too
a50aac7193f18a5a997588556f1212b0d1ba029b HID: wacom: leds: dynamically allocate LED groups
e6f2813a6d3fd924a399f8b19bcd8b11487155bc HID: wacom: EKR: add a worker to add/remove resources on addition/removal
83e6b40e2de6f8416ce6c8c3ca6c4bc8acfa8b32 HID: wacom: EKR: have the wacom resources dynamically allocated
3888b0d53dfbbc9ebc678a67b2ccebb053ba4aac HID: wacom: rework fail path in probe() and parse_and_register()
04bfa27b429fc45197fbb1a3dfe01585b931824b HID: wacom: EKR: have proper allocator and destructor
f9036bd43602562f549ace170391c932f28446cd HID: wacom: EKR: use devres groups to manage resources
e7749f6e5f9d33da189f7bc7d757349ad4716f00 HID: wacom: EKR: have one array of struct remotes instead of many arrays
7c35dc3cd4d114019ed4b26cab313e253396d7c9 HID: wacom: EKR: allocate one input node per remote
59d69bc8215478af6b89d4ae9ab0baf6d91eb870 HID: wacom: EKR: have one power_supply per remote
9f1015d45f62d3b1c6719a1ccffaded89b157e10 HID: wacom: EKR: attach the power_supply on first connection
96983296281507f049425b84f0d244c40d506eba HID: wacom: power_supply: mark the type as USB
136ae5e9bacebbd8f2a94e8dea69f0dc22fbc8c7 HID: wacom: power_supply: remove ac information
9956953ec082e9353ee0828538ff37b149cc91c9 HID: wacom: power_supply: provide the actual model_name
e5bc8eb1b02244be4e97e9654d394275e615923a HID: wacom: Add WACOM_DEVICETYPE_DIRECT for Cintiqs and similar
41372d5d40e73ef4d8574e53a39c7faabff20260 HID: wacom: Augment 'oVid' and 'oPid' with heuristics for HID_GENERIC
1924e05e6014917b23b7648302be39cfee03d047 HID: wacom - add touch_arbitration parameter to wacom module
003f50ab673c241a5596c05c88fd25ba71db086d HID: wacom: Update last_slot_field during pre_report phase
3d1bec99320d4e96897805440f8cf4f68eff226b ipv6: introduce secret_stable to ipv6_devconf
622c81d57b392cc9be836670eb464a4dfaa9adfe ipv6: generation of stable privacy addresses for link-local and autoconf
64236f3f3d742469e4027b83a9515e84e9ab21b4 ipv6: introduce IFA_F_STABLE_PRIVACY flag
1855b7c3e8537c2a4f5a53c797624713bb3becb4 ipv6: introduce idgen_delay and idgen_retries knobs
ff40217e73fd137daae0113ed71b218128913037 ipv6: fix sparse warnings in privacy stable addresses generation
cc9da6cc4f56e05cc9e591459fe0192727ff58b3 ipv6: addrconf: use stable address generator for ARPHRD_NONE
5449a5ca9bc27dd51a462de7ca0b1cd861cd2bd0 addrconf: always initialize sysctl table data
9f0761c154eaf2bf796f7e0e3431631de8d362ae ipv6: add documentation for stable_secret, idgen_delay and idgen_retries knobs
e1b2cb655060e081e73b384b1fc8b2e978f73467 fou: Fix typo in returning flags in netlink
21b995a9cb093fff33ec91d7cb3822b882a90a1e ip6_tunnel: must reload ipv6h in ip6ip6_tnl_xmit()
fbfa743a9d2a0ffa24251764f10afc13eb21e739 ipv6: fix ip6_tnl_parse_tlv_enc_lim()
63117f09c768be05a0bf465911297dc76394f686 ipv6: pointer math error in ip6_tnl_parse_tlv_enc_lim()
f4180439109aa720774baafdd798b3234ab1a0d2 ipv4: Set skb->protocol properly for local output
b4e479a96fc398ccf83bb1cffb4ffef8631beaf1 ipv6: Set skb->protocol properly for local output
7d84e37e114215be0a0c80095891c8268a99352b virtio_net: Update the feature bit to comply with spec
93a205ee98a4881e8bf608e65562c19d45930a93 virtio-net: Update the mtu code to match virtio spec
75698b17ac3b681f4345a9be48b147381d17266d Clean up indentation in net/ipv6/transp_v6.h
f145b67f24e6855a026fbe9c9f1df97412044d1d transp_v6.h: style neatening
4b261c75a99f29c93a0b6babfc180cdf566bd654 ipv6: make IPV6_RECVPKTINFO work for ipv4 datagrams
f24b9be5957b38bb420b838115040dc2031b7d0c net-timestamp: extend SCM_TIMESTAMPING ancillary data struct
b9f40e21ef4298650ab33e35740fa85bd57706d5 net-timestamp: move timestamp flags out of sk_flags
c199105d154e029cd8c94cccd35bd073e64acc45 net-timestamp: only report sw timestamp if reporting bit is set
829ae9d611651467fe6cd7be834bd33ca6b28dfe net-timestamp: allow reading recv cmsg on errqueue with origin tstamp
af7cf057933f01dc7f33ddfb5e436ad598ed17ad NFS: Allow multiple commit requests in flight per file
b20135d0b2431900a3a5395970ffb7e4f3767c8b NFSv4.1/pNFS: Don't queue up a new commit if the layout segment is invalid
5c97f5de2c7cd9e2a5f71bc7c53125d9a2833ca9 NFSv4.1/pNFS: pnfs_mark_matching_lsegs_return() should set the iomode
10335556c9e6ed2e1949fb595b7775f475299832 NFSv4.1/pNFS: pnfs_error_mark_layout_for_return() must always return layout
506c0d68269e90d354b3cbfc7523611b026c88d0 NFSv4.1/pNFS: Cleanup constify struct pnfs_layout_range arguments
2370abdab530718b61afc222c51901bdc2884ee2 NFS: Cleanup - rename NFS_LAYOUT_RETURN_BEFORE_CLOSE
2f21596882f4a0edc387051910d56f8732970080 pNFS: Fix pnfs_mark_matching_lsegs_return()
e0fa0d0189f6be61343dbff1f71bef20125576e7 pNFS: Always set NFS_LAYOUT_RETURN_REQUESTED with lo->plh_return_iomode
fe238e601d2519f259103ab65caea3b077ed7b39 NFS: Save struct inode * inside nfs_commit_info to clarify usage of i_lock
3982a6a2d0e64441c938f4e7f93985aff37d8fb3 pnfs: keep track of the return sequence number in pnfs_layout_hdr
6d597e1750126a2c6fd99e4b2cc176955bb9972e pnfs: only tear down lsegs that precede seqid in LAYOUTRETURN args
094069f1d96f691637b5c335f5eb79566d2457ff flexfiles: remove pointless setting of NFS_LAYOUT_RETURN_REQUESTED
83026d80a16ea6a4e4f06a994fc7831b1d8d6375 pnfs: lift retry logic from send_layoutget to pnfs_update_layout
183d9e7b112aaed0d19c16ffcf0f8c3a86dc71e0 pnfs: rework LAYOUTGET retry handling
c7d73af2d249f0323f5cdb171a59497ce80011fb pnfs: pnfs_update_layout needs to consider if strict iomode checking is on
bc23676caf54c9b6e2521ef065dfddf6c50211de NFSv4.1/pnfs: Ensure we handle delegation errors in nfs4_proc_layoutget()
67a3b721462c9b3bdc36ad6a583f41706402b3ea NFSv4.1/pnfs: Layout stateids start out as being invalid
dd1beb3d16f6a10683b84b89a4644065c43910f3 NFS/pnfs: handle bad delegation stateids in nfs4_layoutget_handle_exception
e85d7ee42003314652ab3ae2c60e3b8cd793b65f pNFS: Separate handling of NFS4ERR_LAYOUTTRYLATER and RECALLCONFLICT
66b53f325876703b7ab815c482cd104609f8772c pNFS: Handle NFS4ERR_RECALLCONFLICT correctly in LAYOUTGET
f7db0b283868411dc6bc8a223fd032b211d2d91f pNFS: Fix LAYOUTGET handling of NFS4ERR_BAD_STATEID and NFS4ERR_EXPIRED
56b38a1f7c781519eef09c1668a3c97ea911f86b pNFS: Fix post-layoutget error handling in pnfs_update_layout()
b2f21f7d85758309f94eafd502fe555e8e5a7f06 SUNRPC: accept() may return sockets that are still in SYN_RECV
8e0acf9046b868a02e9afdddd25c8a132d50e99c pNFS: Clear the layout return tracking on layout reinitialisation
e5fd1904b8422615a2a286777e2b7c881ad53e73 pNFS: Ensure layoutreturn acts as a completion for layout callbacks
2d6cf5ab0b5d13d06c4b7920d6a12dbedf003190 pNFS: Do not set plh_return_seq for non-callback related layoutreturns
e036f46453f252539cb62bf91d82c3d08e37e73c NFS: pnfs_mark_matching_lsegs_return() should match the layout sequence id
5f46be049b0dfdd36188058f044c165e1d4b8f56 pNFS: Cleanup - don't open code pnfs_mark_layout_stateid_invalid()
d9b61708fe6dcab7b50abfb87cb47690d00269a1 pNFS: Clear the layout metadata if the server changed the layout stateid
f71dfe8fc947e04a9e3d10723d4ec4c5c44ce0f5 pNFS: Remove redundant pnfs_mark_layout_returned_if_empty()
28c1acffead59a461e552708cc9daa9c1cb5a085 pNFS: Remove redundant stateid invalidation
42d42a5b0cd263757f8e519debbc744fdaefdaf7 SUNRPC: Small optimisation of client receive
5157b956961d78effd78399e1574b08b9b618422 SUNRPC: Consolidate xs_tcp_data_ready and xs_data_ready
40a5f1b19bacb2de7a051be952dee85e38c9e5f5 SUNRPC: RPC transport queue must be low latency
02910177aede34d6f49e2dc14b1c5c6cd468d94f SUNRPC: Fix reconnection timeouts
3851f1cdb2b8d507b10395fc110d4c37d6121285 SUNRPC: Limit the reconnect backoff timer to the max RPC message timeout
3dc147359e3dcdf0648f1e2c11f62cfae3160df0 pNFS/flexfiles: Fix an Oopsable condition when connection to the DS fails
2a59a0411671ef9daf17ba21da57809c696f4119 pNFS: Fix pnfs_set_layout_stateid() to clear NFS_LAYOUT_INVALID_STID
52ec7be2e27392201adf77892ba883f68df88c99 pNFS: Clear out all layout segments if the server unsets lrp->res.lrs_present
2e80dbe7ac51a911e8a828407b1a48c5ba938cd2 NFSv4.1: Close callback races for OPEN, LAYOUTGET and LAYOUTRETURN
26f474432a7b4be336ed40d94f5a8245781cfc67 NFSv4.1: nfs4_layoutget_handle_exception handle revoked state
51f3d02b980a338cd291d2bc7629cdfb2568424b net: Add and use skb_copy_datagram_msg() helper.
80ba92fa1a92dea128283f69f55b02242e213650 codel: add ce_threshold attribute
2ccccf5fb43ff62b2b96cc58d95fc0b3596516e4 net_sched: update hierarchical backlog too
a3b18ddb9cc1056eea24e3edc1828cfb3fd0726f net: Only do flow_dissector hash computation once per packet
50fb799289501c2eab9f43fc9af513027e1e994f net: Add skb_get_hash_perturb
79bdc4c862af7cf11a135a6fdf8093622043c862 codel: generalize the implementation
d068ca2ae2e614b9a418fb3b5f1fd4cf996ff032 codel: split into multiple files
1e53d5bb8878dcbdbffde334ab89b1f57778b48c net: Pass VLAN ID to rtnl_fdb_notify.
d297653dd6f07afbe7e6c702a4bcd7615680002e rtnetlink: fdb dump: optimize by saving last interface markers
1a3f060c1a47dba4e12ac21ce62b57666b9c4e95 net: Introduce new api for walking upper and lower devices
46b5ab1a7cfef72cc15e9de135650851619bc406 net: dev: Fix non-RCU based lower dev walker
9d18562a227874289fda8ca5d117d8f503f1dcca fq_codel: add batch ability to fq_codel_drop()
95b58430abe74f5e50970c57d27380bd5b8be324 fq_codel: add memory limitation per queue
80e509db54c81247b32fcb75bb1730fc789b893d fq_codel: fix NET_XMIT_CN behavior
21de12ee5568fd1aec47890c72967abf791ac80a netem: fix a use after free
dd19bde36739702bbd9a832b5d4995bc0fa8d6d7 switchdev: Fix return value of switchdev_port_fdb_dump().
054f6180d8b5602b431b5924976c956e760488b1 KEYS: Simplify KEYRING_SEARCH_{NO,DO}_STATE_CHECK flags
0b0a84154eff56913e91df29de5c3a03a0029e38 KEYS: request_key() should reget expired keys rather than give EKEYEXPIRED
b94f51183b0617e7b9b4fb4137d4cf1cab7547c2 kernel/watchdog: prevent false hardlockup on overloaded system
c19153008ba0f7b86234820e8a87d58806707a15 igb: use new API ethtool_{get|set}_link_ksettings
9060dd2c5036b12132f9b97e3486ca6422d5bdfc ext4: fix mmp use after free during unmount
3e42979e65dace1f9268dd5440e5ab096b8dee59 procfs: expose umask in /proc/<PID>/status
97d79299223baab330b194437e676d301f12d5f6 posix acls: Remove duplicate xattr name definitions
5955102c9984fa081b2d570cfac75c97eecf8f3b wrappers for ->i_mutex access
85f40482bc175f14f63d78fe482ef1826cf3913d cifs_get_root(): use lookup_one_len_unlocked()
1404297ebf76fd91a41de215fc8c94c2619e5fdb lib: update single-char callers of strtobool()
09cbfeaf1a5a67bfb3201e0c83c810cecb2efa5a mm, fs: get rid of PAGE_CACHE_* and page_cache_{get,release} macros
ea1754a084760e68886f5b725c8eaada9cc57155 mm, fs: remove remaining PAGE_CACHE_* and page_cache_{get,release} usage
fc64005c93090c052637f63578d810b037abb1a1 don't bother with ->d_inode->i_sb - it's always equal to ->d_sb
5fdccfef483d088fcc533b282bf6953579d6d6f4 cifs: kill more bogus checks in ->...xattr() methods
d9a15489210f3c25de39dee85861352d5e79e9c5 cifs: Fix xattr name checks
48a77aa7e20557319205f9bd4cc02d4b67b5f761 CIFS: Remove some obsolete comments
3d22462ae915743f3be5bf1ab3d4a6b72c2bb6c9 cifs: stuff the fl_owner into "pid" field in the lock request
3baf1a7b921500596b77487d5a34a27d656fc032 SMB2: Separate Kerberos authentication from SMB2_sess_setup
166cea4dc3a4f66f020cfb9286225ecd228ab61d SMB2: Separate RawNTLMSSP authentication from SMB2_sess_setup
53e0e11efe9289535b060a51d4cf37c25e0d0f2b CIFS: Fix a possible memory corruption during reconnect
96a988ffeb90dba33a71c3826086fe67c897a183 CIFS: Fix a possible double locking of mutex during reconnect
e8cc37b8fc3a94d17a2689cd77a7744d70477c14 mmc: dw_mmc: remove DW_MCI_QUIRK_BROKEN_CARD_DETECTION quirk
1dceb0415aa0c6bc11dacdab47c9ef83a3604166 mmc: sdhci: Fix regression setting power on Trats2 board
287980e49ffc0f6d911601e7e352a812ed27768e remove lots of IS_ERR_VALUE abuses
f741494363c6c90e6744117d2771bbdf0fb3c455 mmc: fix mmc mode selection for HS-DDR and higher
8b7be8f2e7fe6c037fc7c89029a4a568ad2c60b1 mmc: core: Only change mode if mmc_select_bus_width() is successful
c390f2110adf1c8579b7693eb241b47add4976e6 mmc: sdhci-of-arasan: Add ability to export card clock
860951c5f0f5caf595799d98b93a8304bf70f08d mmc: host: use the defined function to check whether card is removable
16a34574c6ca12bb8fd73ae034acd5b536d3cdaa mmc: dw_mmc: remove the quirks flags
fa243f645af7116dbc157e48e9b2c0a305e2598e mmc: sdhci-pltfm: Drop define for SDHCI_PLTFM_PMOPS
d6786fefe816ba60c794f8a41a73b0dd3a4df097 mmc: dw_mmc: add reset support to dwmmc host controller
29eb7bd01e80df316ab9d1da1a4ee580fae89188 mmc: card: do away with indirection pointer
3794c542641f1a7a329f31c87927e2c5f5417670 mmc: sdhci-of-arasan: Set controller to test mode when no CD bit
606d313124094d87050896a10894200cdd2b0514 mmc: sdhci: Rename sdhci_set_power() to sdhci_set_power_noreg()
b0921d5c9ed6ffa8a4d6afc5ee5f136b87445f14 mmc: sdhci-of-esdhc: fixup PRESENT_STATE read
7db3028e00f0d19d4ab10d3d5f38afb1d7814861 mmc: block: rename data to blkdata
fec796739740f98737595b0ed72c6fd9d5f718e3 mmc: sdhci: Factor out sdhci_enable_clk
d3c6aac3bdfe97b8b44db6a8aba59786cb9531dc mmc: delete is_first_req parameter from pre-request callback
03d640ae1f9b24b1d2a11f747143a1ecc0745019 mmc: block: delete packed command support
151ede40fd6999b0bdf5fd508e6035cf02b5dc8b mmc: sdhci-of-esdhc: fix host version for T4240-R1.0-R2.0
5dd784d2e4eb765ae86b3366484d01429bb7adca mmc: block: Restore line inadvertently removed with packed commands
e0097cf5f2f1b7b8a594beaa32a604776d3ca6ce mmc: queue: Fix queue thread wake-up
8508cb9868015cad4f10d818f32f4030c75e88e0 mmc: queue: remove BUG_ON for bounce_sg
f397c8d80a5e413984bd9ccdf4161c7156b365ce mmc: block: Move files to core
15520111500c33a012aeec28ece8c5f2dcbf6b5e mmc: core: Further fix thread wake-up
e85baa8868b016513c0f5738362402495b1a66a5 mmc: sd: Meet alignment requirements for raw_ssr DMA
3d4ef329757cfd5e0b23cce97cdeca7e2df89c99 mmc: core: fix multi-bit bus width without high-speed mode
b5227c075b5c11d5cf653bac5c01b9f7f03f2a8f btrfs: make end_extent_writepage return void
bd1fa4f0b0ddbed05ef98c28048d00db727c4b0e btrfs: make extent_range_clear_dirty_for_io return void
f6311572762a9ccaa533e60bf7929d63be914bde btrfs: make extent_range_redirty_for_io return void
73fa48b674e819098c3bafc47618d0e2868191e5 Btrfs: refactor caching_thread()
7c55ee0c4afba4434d973117234577ae6ff77a1c Btrfs: add free space tree sanity tests
1e144fb8f4a4d6d6d88c58f87e4366e3cd02ab72 Btrfs: wire up the free space tree to the extent tree
70f6d82ec73c3ae2d3adc6853c5bebcd73610097 Btrfs: add free space tree mount option
b4570aa994b8fdb3a9c04ed80a6cac69072d4d42 btrfs: fix compiling with CONFIG_BTRFS_DEBUG enabled.
511711af91f21d80b27f18b569352d6896562828 btrfs: don't run delayed references while we are creating the free space tree
7928d672ffb06085d06fe3c27a93549d37e53ab3 btrfs: cleanup, remove stray return statements
e4058b54d1e442b6b3eca949f0d63d49ba2b020d btrfs: cleanup, use enum values for btrfs_path reada
a6111d11b8b5364d02ea2e881c81ce39d004eb32 btrfs: raid56: Use raid_write_end_io for scrub
14e46e04958df740c6c6a94849f176159a333f13 btrfs: synchronize incompat feature bits with sysfs files
8cce83ba5062a301a09e0920df813bbbdd3e9dbf btrfs: tests: switch to GFP_KERNEL
e410e34fad913dd568ec28d2a9949694324c14db Revert "btrfs: synchronize incompat feature bits with sysfs files"
58c4e173847af8e63537e11be6c1c3fd4b6153fe btrfs: scrub: use GFP_KERNEL on the submission path
8dcddfa048de637c8bbfa20ffd22757aeab7c604 btrfs: Introduce new mount option usebackuproot to replace recovery
96da09192cda57a356467bd7c91a3641a2e78490 btrfs: Introduce new mount option to disable tree log replay
fed8f166ebf3afb8b91a1fd73d706788e07a91ef btrfs: Introduce new mount option alias for nologreplay
ac1407ba24d69015f88da18bfac978c493380b81 btrfs: remove redundant error check
04b285f35e2086b69682c7ed054aa35eebea9f72 btrfs: Replace CURRENT_TIME by current_fs_time()
4da2e26a2a32b174878744bd0f07db180c875f26 btrfs: Continue write in case of can_not_nocow
aa66b0bb08869d93492bd817d2eae694ca743a3d btrfs: fix memory leak of fs_info in block group cache
daac7ba61a0d338c66b70c47d205ba7465718155 Btrfs: fix listxattrs not listing all xattrs packed in the same item
2a162ce93232eb78124601996744f8eafec845ab Btrfs: Improve FL_KEEP_SIZE handling in fallocate
a91326679f2a0a4c239cd643674fdcda28ee86be Btrfs: make mapping->writeback_index point to the last written page
894b36e35ae01186b77b083f3f67569a349062a6 Btrfs: cleanup error handling in extent_write_cached_pages
6cf86a006be9f2a77434d5a06ea289719815ad7c btrfs: create a helper function to read the disk super
ceeb0ae7bf42a3deaaaee981d2da02e5d3ad2b0f btrfs: sink gfp parameter to set_extent_bits
91166212e0ffbb4db50aa8a238548e967008b33d btrfs: sink gfp parameter to clear_extent_bits
7cd8c7527cb3ad3b397fecfa1bdc8eec9fa33dd8 btrfs: sink gfp parameter to set_extent_delalloc
059f791c6bbaba72dc3c1bd6e2657aacc8552849 btrfs: make state preallocation more speculative in __set_extent_bit
210aa27768bec4297a9d6ad0e5cab45935c775e9 btrfs: sink gfp parameter to convert_extent_bit
05135f597adcb94dc34fa87b82e68eb55e00f0eb btrfs: switch to common message helpers in open_ctree, adjust messages
578def7c50f236432ba140d35bb7ca4ef0a1b20b Btrfs: don't wait for unrelated IO to finish before relocation
9cfa3e34e20e6798a671236000d9e97c8aa5d318 Btrfs: don't do unnecessary delalloc flushes when relocating
f78c436c3931e7df713688028f2b4faf72bf9f2a Btrfs: fix race between block group relocation and nocow writes
5f9a8a51d8b95505d8de8b7191ae2ed8c504d4af Btrfs: add semaphore to synchronize direct IO writes with fsync
f0e9b7d6401959816599191d1d9db90b6fd750db Btrfs: fix race setting block group readonly during device replace
0ef6447a3d2f014e49069c4da33f905ed803aa2a Btrfs: Fix integer overflow when calculating bytes_per_bitmap
b9ef22dedde08ab1b4ccd5f53344984c4dcb89f4 Btrfs: self-tests: Support non-4k page size
ed9e4afdb0551e3ef4ee8433fe664433a20ef73a Btrfs: self-tests: Execute page straddling test only when nodesize < PAGE_SIZE
d94f43b4c6b88b9393422868d8dfde14c5923858 Btrfs: self-tests: Support testing all possible sectorsizes and nodesizes
ef9f2db365c31433e52b0c5863793273bb632666 Btrfs: self-tests: Use macros instead of constants and add missing newline
36b3dc05b4650e81eca7d60d548a92b014595eb1 Btrfs: self-tests: Fix test_bitmaps fail on 64k sectorsize
c6887cd11149d7325328749f06719071e6c725c6 Btrfs: don't do nocow check unless we have to
957780eb2788d8c218d539e19a85653f51a96dc1 Btrfs: introduce ticketed enospc infrastructure
f376df2b7da3a40f62f861a65efdd8c29fa1b877 Btrfs: add tracepoints for flush events
87241c2e68451c4d50b60af84f9a3ab119001b4c Btrfs: use root when checking need_async_flush
8ca17f0f59529df9e2132ca594ff00c52a9bc556 Btrfs: use FLUSH_LIMIT for relocation in reserve_metadata_bytes
05653ef38659edc46a886c9bda105e64edba6896 btrfs: hide test-only member under ifdef
cb001095ca705dcd95f57fe98867e38a4889916d btrfs: plumb fs_info into btrfs_work
3cdde2240d4533ff71fbb8dc9c32d5d57d3cdeed btrfs: btrfs_test_opt and friends should take a btrfs_fs_info
8632daae40c1a5b8fcc1d66d788c143353fd70b7 btrfs: tests, move initialization into tests/
7c0260ee098db7a05fd68812b2e21ce2e19dfcf0 btrfs: tests, require fs_info for root
f5ee5c9ac56cd328fcc915582f81226affebd81c btrfs: tests, use BTRFS_FS_STATE_DUMMY_FS_INFO instead of dummy root
0596a9048bf2aca2a74b312493f39e4d5ac3b653 Btrfs: add missing check for writeback errors on fsync
67710892ec983aa79ad1e2a2642fe8e3a4a194ea Btrfs: be more precise on errors when getting an inode from disk
cb93b52cc005ba0e470845b519c662e661d5113c btrfs: qgroup: Refactor btrfs_qgroup_insert_dirty_extent()
18513091af9483ba84328d42092bd4d42a3c958f btrfs: update btrfs_space_info's bytes_may_use timely
9e7cc91a6d18a4973c6d2cc104871439c9e94f3d btrfs: fix fsfreeze hang caused by delayed iputs deal
e0af24849efb0eea572cf22d22bb65d164cb8a6f btrfs: fix one bug that process may endlessly wait for ticket in wait_reserve_ticket()
ed7a6948394305b810d0c6203268648715e5006f btrfs: do not decrease bytes_may_use when replaying extents
ce129655c9d9aaa7b3bcc46529db1b36693575ed btrfs: introduce tickets_id to determine whether asynchronous metadata reclaim work makes progress
f0312210010bf063c29efe112b0d9accbc9191b3 btrfs: use filemap_check_errors()
897a41b1167955bd543bb252fd3f06f5844f2177 btrfs: add dynamic debug support
ba8b04c1d4adbc66f3653e3de5bd6c74a9a003bf btrfs: extend btrfs_set_extent_delalloc and its friends to support in-band dedupe and subpage size patchset
afcdd129e05a9210a5d19d4aa6e0afa475fc49e2 Btrfs: add a flags field to btrfs_fs_info
8436ea91a1c4fd8ed57ff0c0ca482ee3dbe744c7 Btrfs: kill the start argument to read_extent_buffer_pages
5d163e0e68ce743e1e919ddd3264c96ac02e9026 btrfs: unsplit printed strings
851cd173f06045816528176001cf82948282029c Btrfs: memset to avoid stale content in btree leaf
2fe1d55134fce05c17ea118a2e37a4af771887bc Btrfs: fix free space tree bitmaps on big-endian systems
f8d468a15c22b954b379aa0c74914d5068448fb1 Btrfs: fix mount -o clear_cache,space_cache=v2
6675df311db87aa2107a04ef97e19420953cbace Btrfs: catch invalid free space trees
9426ce754fab0f02a45b61402119c57de446ffa3 Btrfs: fix extent buffer bitmap tests on big-endian systems
781e3bcf0e7632736d7562b52451a2d4fdfa231c Btrfs: expand free space tree sanity tests to catch endianness bug
d2d9ac6aae1b743d729b2e4027d5666b2bc93003 btrfs: tests: constify free space extent specs
0e6757859efea6ed919fc37e4ee468634220b2d2 btrfs: tests: uninline member definitions in free_space_extent
0b34c261e235a5c74dcf78bd305845bd15fe2b42 btrfs: qgroup: Prevent qgroup->reserved from going subzero
9c894696f56f5d84fb5766af81bcda4a7cb9a842 Btrfs: remove some no-op casts
2939e1a86f758b55cdba73e29397dd3d94df13bc btrfs: limit async_work allocation and worker func duration
aa7c8da35d1905d80e840d075f07d26ec90144b5 btrfs: fix error handling when run_delayed_extent_op fails
47b5d64691350e116093c9b47b55ca6b9433bc50 btrfs: fix false enospc error when truncating heavily reflinked file
97dcdea076ecef41ea4aaa23d4397c2f622e4265 Btrfs: Fix deadlock between direct IO and fast fsync
04b38d601239b4d9be641b412cf4b7456a041c67 vfs: pull btrfs clone API to vfs layer
3176c3e0ef32963aa5f6f9754142e420a4ba5d64 xfs: kill ioflags
cf810712cc82cbfab8f08a46ca6c0289d386a303 xfs: remove s_maxbytes enforcement in xfs_file_read_iter
bbc5a740c4f27a9732a3a3decf3186b4bce21108 xfs: split xfs_file_read_iter into buffered and direct I/O helpers
f1285ff0acf9040a39921355d07bd83a3308c402 xfs: stop using generic_file_read_iter for direct I/O
0cefb29e6a63727bc7606c47fc538467594ef112 xfs: using generic_file_direct_write() is unnecessary
c19b104a67b3bb1ac48275a8a1c9df666e676c25 xfs: fold xfs_vm_do_dio into xfs_vm_direct_IO
fa8d972d055c723cc427e14d4d7919640f418730 xfs: direct calls in the direct I/O path
16d4d43595b4780daac8fcea6d042689124cb094 xfs: split direct I/O and DAX path
78a9be0a0a3367b94af242632c525d22b26f1a87 dax: move RADIX_DAX_ definitions to dax.c
02fbd139759feb1f331cebd858523b5d774082e6 dax: Remove complete_unwritten argument
2b10945c532c165a824f541df76a15ed0be04d78 dax: Remove dead zeroing code from fault handlers
069c77bc9eaee70fa9ecbd942372b1693b8cdeb0 dax: Remove zeroing from dax_io()
c3d98e39d5b37320b15f227686575d58f676e6ef dax: Remove pointless writeback from dax_do_io()
7795bec89ebf927ea3ad9ed5f396c227e5c73271 dax: Remove redundant inode size checks
3dc29161070ab14d065554c0ad58988ab77a7bfd dax: use sb_issue_zerout instead of calling dax_clear_sectors
679c8bd3b29428e736eabb7fc66a978f312f0c86 dax: export a low-level __dax_zero_page_range helper
4b0228fa1d753f77fe0e6cf4c41398ec77dfbd2a dax: for truncate/hole-punch, do zeroing through the driver if possible
40543f62cbdce42633e3fe10923099feee272e1f dax: fix a comment in dax_zero_page_range and dax_truncate_page
348e967ab07c96a9e7a6a194812254a8df2045c0 dax: Make huge page handling depend of CONFIG_BROKEN
e804315dd0f574b56155c5a2406ab5e0318104f7 dax: Define DAX lock bit for radix tree exceptional entry
ac401cc782429cc8560ce4840b1405d603740917 dax: New fault locking
bc2466e4257369d0ebee2b6265070d323343fa72 dax: Use radix tree entry lock to protect cow faults
4d9a2c8746671efbb0c27d3ae28c7474597a7aad dax: Remove i_mmap_lock protection
6b524995a71d49ae032dba308d117dbf2a18d175 dax: remote unused fault wrappers
8b2180b3bf0338625cab07da6543acb436df9c40 xfs: don't invalidate whole file on DAX read/write
11bd969fdefea3ac0cb9791224f1e09784e21e58 mm: silently skip readahead for DAX inodes
1aaba0958ed371bd121751d74d98f2a76395edad dax: don't pass buffer_head to dax_insert_mapping
b0d5e82fcf8249b5aca52d235c1cfabd68b253e8 dax: don't pass buffer_head to copy_user_dax
17879e8f865f4ed8b6f9041a2687ad40f13ae460 xfs: fix locking for DAX writes
fa0d3fce7ceff0aae62f3e19678713bc5a7f3377 dax: remove buffer_size_valid()
ce95ab0fa669698805ff8841a756733a7702b5c9 dax: make 'wait_table' global variable static
aada54f9800497cc8249c99ffcb1431c6d8e98e7 dax: remove the last BUG_ON() from fs/dax.c
e3ad61c64abceeb5cc122f0bde3700e6e17ca60a dax: consistent variable naming for DAX entries
63e95b5c4f16e156b98adcf2f7d820ba941c82a3 dax: coordinate locking for offsets in PMD range
b9fde0462e34a05b25c3d68d344971865659abae dax: remove dax_pmd_fault()
fa28f7296a7ce38ed15dc06bd2149e04c8db9d4b dax: move RADIX_DAX_* defines to dax.h
422476c4641ec65906406f3d266b69a91dd3170c dax: move put_(un)locked_mapping_entry() in dax.c
a3caa24b703794507bf2e0a68bdc800b90f5e70b ext4: only set S_DAX if DAX is really supported
96f8ba3dd632aff684cc7c67d9f4af435be0341c ext4: avoid split extents for DAX writes
965d004af54088d138f806d04d803fb60d441986 dax: fix deadlock with DAX 4k holes
9559f68915024ece8be3781003f25aef3677e574 fold dup_mnt_ns() into its only surviving caller
719ea2fbb553ab3f61a174a4b5861289dcc46cb1 new helpers: lock_mount_hash/unlock_mount_hash
e2fec7c35582e7bb41cccc1761faa2af4dc17627 make freeing super_block rcu-delayed
48a066e72d970a3e225a9c18690d570c736fc455 RCU'd vfsmounts
8b61e74ffc6310e1d35a9b51c8463093851f8bcf get rid of {lock,unlock}_rcu_walk()
d870b4a191a389c661cd40aacb06981c26b5e504 fix bogus path_put() of nd->root after some unlazy_walk() failures
f5be3e29127aec8c87f883aadadff337f8c2cfd7 fix bogus read_seqretry() checks introduced in b37199e
0818bf27c05b2de56c5b2bd08cfae2a939bd5f52 resizable namespace.c hashes
1d6a32acd70ab18499829c0a9a5dbe2bace72a13 keep shadowed vfsmounts together
38129a13e6e71f666e0468e99fdd932a687b4d7e switch mnt_hash to hlist
8ffcb32e05239f0e53abfb0a1bc4eee4855b7fd2 VFS: Make delayed_free() call free_vfsmnt()
ed44724b79d8e03a40665436019cf22baba80d30 acct: switch to __kernel_write()
cdd37e23092c3c6fbbb2e611f8c3d18e676bf28f separate namespace-independent parts of filling acct_t
9df7fa16ee956bf0cdf4a711eac827be92d584bc acct: serialize acct_on()
54a4d58a6459a93fc6ee898354b3d2ffb80dd03a acct: simplify check_free_space()
215752fce31c80f3b3a1530bc7cddb3ba6a69b3a acct: get rid of acct_list
2798d4ce61601808b965253d60624bbf201b51b0 acct: get rid of acct_lock for acct->count
0aec09d049d7e994eba54bad4376dd8f58eab797 drop ->s_umount around acct_auto_close()
17c0a5aaffa63da6b5c73a31e36616bdcd12d143 make acct_kill() wait for file closing.
215748e67d893169de9e62c3416e9e035e9e9c5f acct: move mnt_pin() upwards.
1629d0eb3ead0e0c49e4402049ec7b5b31b81cd7 start carving bsd_acct_struct up
efb170c22867cdc6f770de441bdefecec6712199 take fs_pin stuff to fs/*
8fa1f1c2bd86007beb4a4845e6087ac4a704dc80 make fs/{namespace,super}.c forget about acct.h
3064c3563ba4c23e2c7a47254ec056ed9ba0098a death to mnt_pinned
12a5b5294cb1896e9a3c9fca8ff5a7e3def4e8c6 fix copy_tree() regression
88b368f27a094277143d8ecd5a056116f6a41520 get rid of propagate_umount() mistakenly treating slaves as busy.
81b6b06197606b4bef4e427a197aeb808e8d89e1 fix EBUSY on umount() from MNT_SHRINKABLE
9ea459e110df32e60a762f311f7939eaa879601d delayed mntput
0a5eb7c8189922e86a840972cd0b57e41de6f031 vfs: Keep a list of mounts on a mount point
80b5dce8c59b0de1ed6e403b8298e02dcb4db64b vfs: Add a function to lazily unmount all mounts from any dentry.
8ed936b5671bfb33d89bc60bdcc7cf0470ba52fe vfs: Lazily remove mounts on unlinked files and directories.
9b053f3207e8887fed88162a339fdd4001abcdb2 vfs: Remove unnecessary calls of check_submounts_and_drop
1ffe46d11cc88479797b262f60d92e5fb461b411 vfs: Merge check_submounts_and_drop and d_invalidate
5542aa2fa7f6cddb03c4ac3135e390adffda98ca vfs: Make d_invalidate return void
c297abfdf15b4480704d6b566ca5ca9438b12456 mnt: Fix a memory stomp in umount
64ad6c488975d7516230cf7849190a991fd615ae Btrfs: don't invalidate root dentry when subvolume deletion fails
9e251d02041432487d89cb340e72490c4bbc198a kill pin_put()
32426f6653cbfde1ca16aff27a530ee36332f796 pull bumping refcount into ->kill()
34cece2e8a1d2b66f00e153a19b80b4d4cec4eb8 take count and rcu_head out of fs_pin
3b994d98a815d934ab6a77a380882865982c14f9 get rid of the second argument of acct_kill()
fdab684d7202774bfd8762d4a656a553b787c8ec allow attaching fs_pin to a group not associated with some superblock
59eda0e07f43c950d31756213b607af673e551f0 new fs_pin killing logics
87b95ce0964c016ede92763be9c164e49f1019e9 switch the IO-triggering parts of umount to fs_pin
a3b3c5627c8301ac850962b04f645dfab81e6a60 mnt: Use hlist_move_list in namespace_unlock
e819f152104c9f7c9fe50e1aecce6f5d4bf06d65 mnt: Improve the umount_tree flags
8318e667f176f7ea34451a1a530634e293f216ac mnt: Don't propagate umounts in __detach_mounts
c003b26ff98ca04a180ff34c38c007a3998d62f9 mnt: In umount_tree reuse mnt_list instead of mnt_hash
590ce4bcbfb4e0462a720a4ad901e84416080bba mnt: Add MNT_UMOUNT flag
411a938b5abc9cb126c41cccf5975ae464fe0f3e mnt: Delay removal from the mount hash.
5d88457eb5b86b475422dc882f089203faaeedb5 mnt: On an unmount propagate clearing of MNT_LOCKED
0c56fe31420ca599c90240315f7959bf1b4eb6ce mnt: Don't propagate unmounts to locked mounts
7bdb11de8ee4f4ae195e2fa19efd304e0b36c63b mnt: Factor out unhash_mnt from detach_mnt and umount_tree
6a46c5735c29175da55b2fa9d53775182422cdd7 mnt: Factor umount_mnt from umount_tree
820f9f147dcce2602eefd9b575bbbd9ea14f0953 fs_pin: Allow for the possibility that m_list or s_list go unused.
ce07d891a0891d3c0d0c2d73d577490486b809e1 mnt: Honor MNT_LOCKED when detaching mounts
f53e57975151f54ad8caa1b0ac8a78091cd5700a mnt: Fix the error check in __detach_mounts
e0c9c0afd2fc958ffa34b697972721d81df8a56f mnt: Update detach_mounts to leave mounts connected
f2d0a123bcf16d1a9cf7942ddc98e0ef77862c2b mnt: Clarify and correct the disconnect logic in umount_tree
fe78fcc85a2046c51f1535710996860557eeec20 mnt: In detach_mounts detach the appropriate unmounted mount
e06b933e6ded42384164d28a2060b7f89243b895 namespace: update event counter when umounting a deleted dentry
4fed655c410cc56add64c7b1f7c85c7c56066ac2 mnt: Clear mnt_expire during pivot_root
3895dbf8985f656675b5bde610723a29cbce3fa7 mnt: Protect the mountpoint hashtable with mount_lock
4ec6c2aeab8a909418ac60b782a963cb7257207f fix unpaired rcu lock in prepend_path()
76bf3f6b1d6ac4c770bb121b0461c460aa068e64 autofs4: Wrong format for printing dentry
e36cb0b89ce20b4f8786a57e8a6bc8476f577650 VFS: (Scripted) Convert S_ISLNK/DIR/REG(dentry->d_inode) to d_is_*(dentry)
e9a7c2f1a548f34bcaa7640094201e8b29247940 autofs4: coding style fixes
0266725ad4ee0f8fcf2ee73be8e68c4adbf2ac79 autofs4: fix some white space errors
90967c87e3383c6b8400803ed8e28f2903e279ec autofs4: change log print macros to not insert newline
8a78d59304102d36a0cd9b4d81e8e48087ffafd2 autofs4: use pr_xxx() macros directly for logging
ea01a18494b3d7a91b2f1f2a6a5aaef4741bc294 autofs races
5a9294e5c535deab69831076af15cd35e1c95f8b autofs: don't get stuck in a loop if vfs_write() returns an error
8ac790f312c47bb378fb129d3832d401945a0ca3 qstr: constify instances in autofs4
7cbdb4a286a60c5d519cb9223fe2134d26870d39 autofs: use dentry flags to block walks during expire
749800ef537848b9569da9bb1463f1de4b96c0a4 autofs: test autofs versions first on sb initialization
1973a122697168c0585ffce9d4bd46745ddaa6f6 autofs: fix autofs4_fill_super() error exit handling
41a4497a4f786a83292ac40a0a39f75c6c4de722 autofs: don't fail to free_dev_ioctl(param)
bf72eda5f9c593495127a34d3444b2ec5939e837 autofs: update struct autofs_dev_ioctl in Documentation
b6e3795a06c2fe837e7d0319a923e8978276ec4c autofs: fix pr_debug() message
390855547c3d20cda0646dc7ac83110208303dd6 autofs: fix print format for ioctl warning message
9b88ee0f3bb4c5b1e721bdcee93601b501d72f0a autofs4: move linux/auto_dev-ioctl.h to uapi/linux
962ca7cfbdc4d072350c94b2d52894b39f41be4a autofs: remove possibly misleading /* #define DEBUG */
8723890d1d5d9216634ed662e55ee5bdacbe1ac7 autofs: remove wrong comment
88488080946c2da0d998a3ac0a0a5aebf8dc62c8 autofs: update ioctl documentation regarding struct autofs_dev_ioctl
0fae77feca339699dbd6c079ded37bbd72432eb3 autofs: add command enum/macros for root-dir ioctls
3bb2fbdaba16386f520b5750d649a30643a4ab9e autofs: remove duplicated AUTOFS_DEV_IOCTL_SIZE definition
092a53452bb7a6ca436b2d3859e7b1f1ec45479f autofs: take more care to not update last_used on path walk
93409033ae653f1c9a949202fb537ab095b2092f net: Add netdev all_adj_list refcnt propagation to fix panic
7fda702f9315e6f4a74fee155c540750788a2d66 sctp: use new rhlist interface on sctp transport rhashtable
cd2b708750582e327789d8fb07c6eb5f79f7759f sctp: check duplicate node before inserting a new transport
5179b26694c92373275e4933f5d0ff32d585c675 sctp: call rcu_read_lock before checking for duplicate transport nodes
a4d69a4c3ca6be699ed8cdc4683381ce44b85c90 sctp: sctp_transport_dst_check should check if transport pmtu is dst mtu
4ca60d08cbe65f501baad64af50fceba79c19fbb netfilter: bridge: honor frag_max_size when refragmenting
79e49503efe53a8c51d8b695bedc8a346c5e4a87 ipv6: avoid write to a possibly cloned skb
a13b2082ece95247779b9995c4e91b4246bed023 bridge: drop netfilter fake rtable unconditionally
5bc329503e8191c91c4c40836f062ef771d8ba83 x86/mce: Handle broadcasted MCE gracefully with kexec
8b375f64dcf45ba5cfb36398b69b877dc35410fa x86/mm/numa: Drop dead code and rename setup_node_data() to setup_alloc_data()
85b35feaecd4d2284505b22708795bc1f03fc897 mm/sparsemem: use PAGES_PER_SECTION to remove redundant nr_pages parameter
dee863b571b0a76e9c549ee99e8782bb4bc6502b hv: export current Hyper-V clocksource
3716a49a81ba19dda7202633a68b28564ba95eb5 hv_utils: implement Hyper-V PTP source
cdb898c52d1dfad4b4800b83a58b3fe5d352edde qla2xxx: Add irq affinity notification
262e2bfd7d1e1f1ee48b870e5dfabb87c06b975e qla2xxx: Fix NULL pointer deref in QLA interrupt
d74595278f4ab192af66d9e60a9087464638beee scsi: qla2xxx: Add multiple queue pair functionality.
5601236b6f7948cd1783298f6d4cacce02e22fde scsi: qla2xxx: Add Block Multi Queue functionality.
093df73771bac8a37d607c0e705d157a8cef4c5c scsi: qla2xxx: Fix Target mode handling with Multiqueue changes.
c3c4239465e11b2cc25fcf375c7909a342bcf4dc scsi: qla2xxx: Fix apparent cut-n-paste error.
7c0f6ba682b9c7632072ffbedf8d328c8f3c42ba Replace <asm/uaccess.h> with <linux/uaccess.h> globally
d3e19175004583c65361e96da424175b99c3e715 scsi: aacraid: Remove duplicate irq management code
3ffd6c5a74d916a10afada8b679df8c964c1479b scsi: aacraid: Added support for response path
a052865fe2871a3888dbb4ecf8c5dcab77a19ae8 scsi: aacraid: Added support to set QD of attached drives
423400e64d377c0d8a2459795420681177e51e74 scsi: aacraid: Include HBA direct interface
954b2b5ac76d6bde80974c0779d36f054e036aa5 scsi: aacraid: Added support to abort cmd and reset lun
3136432956501f071891c3d4b6194feb2df924a5 scsi: aacraid: Added new IWBR reset
09867a0e34d20864c3b4b1e49f688470c3f8bdc2 scsi: aacraid: Added ioctl to trigger IOP/IWBR reset
c799d519bf088c0c5deb481b0190990417ace1bc scsi: aacraid: Retrieve HBA host information ioctl
80a94bb357813901e61f2dc80deae2015c50fdcd scsi: aacraid: avoid open-coded upper_32_bits
1c68856e6ea8abd714415e52ef88943c022e24f0 scsi: aacraid: Fix camel case
f3ef4a74dc3712ef0ce60d652aa87b1ba70cb2a4 scsi: aacraid: Use correct channel number for raw srb
16ae9dd35d374182ce955063100fce66a9974e74 scsi: aacraid: Fix for excessive prints on EEH
1bff5abca65d4b9761fcc992ab6288243220003d scsi: aacraid: Fix memory leak in fib init path
a7e2c642844cfefd570cb54a8d9fe7b85605311b scsi: aacraid: Fix sync fibs time out on controller reset
146aa1786d4978795cab5347d810e00236dea1c3 scsi: aacraid: Skip IOP reset on controller panic(SMART Family)
09624645e1e85df8d68b04de6e0607d696268333 scsi: aacraid: Save adapter fib log before an IOP reset
f21508211d2b16e65821abd171378fa6ece126fe block: add REQ_OP definitions and helpers
e1958e6534a2d4ebb2dfcd0b3f16ff8e277a5b0c nvme: update and rename nvme_cancel_io to nvme_cancel_request
c55a2fd4bb16bcdd8c42e3d64fccd326416b7492 nvme: move nvme_cancel_request() to common code
6f3b0e8bcf3cbb87a7459b3ed018d31d918df3f8 blk-mq: add a flags parameter to blk_mq_alloc_request
7a5abb4b48570c3552e33ff4c72ae1e8dac3ba15 nvme: factor out a add nvme_is_write helper
f5fa90dc0a5b0bcfa3fa851dbee9e3ab6381076b nvme: move the workaround for I/O queue-less controllers from PCIe to core
1f5bd336b9150560458b03460cbcfcfbcf8995b1 blk-mq: add blk_mq_alloc_request_hctx
7d2e80080d186c1267f3033b6de91f0ff2f2863d nvme: allow transitioning from NEW to LIVE state
eb71f435579ff61f342114ffaa662af163676753 nvme: Modify and export sync command submission for fabrics
1a353d85b02d010e9daa7bd189d203ba1f2614a1 nvme: add fabrics sysfs attributes
eb793e2c9286cca415423edff4942e4ba28e3cd4 nvme.h: add NVMe over Fabrics definitions
07bfcd09a288551b4377836a11c6250e1fd01e6d nvme-fabrics: add a generic NVMe over Fabrics library
038bd4cb6766c69b5b9c77507f389cc718a36842 nvme: add keep-alive support
1ae1602de028acaa42a0f6ff18d19756f8e825c6 configfs: switch ->default groups to a linked list
a07b4970f464f13640e28e16dad6cfa33647cc99 nvmet: add a generic NVMe target
91dbc08d64fba7c1426a32be4c57ebb63c4be124 scsi: replace "scsi_data_buffer" with "sg_table" in SG functions
22cc3d4c6f4c529f4bf17445c60893b13e7611fb scsi: replace "mq" with "first_chunk" in SG functions
001d63be61c3b5a0413a46bacafbfc60c353951a scsi: rename SG related struct and functions
9b1d6c8950021ab007608d455fc9c398ecd25476 lib: scatterlist: move SG pool code from SCSI driver to lib/sg_pool.c
3a85a5de29ea779634ddfd768059e06196687aba nvme-loop: add a NVMe loopback host driver
1fb470408497382a0cf5311d9fa362202b537ebf nvme-loop: add configfs dependency
f98d9ca17fbddd82980bc20abfabd5b405ecade4 nvmet: fix an error code
486cf9899e311838b6ab95d19ff87c4da44d6508 blk-mq: Introduce blk_mq_reinit_tagset
def61eca9632af0559931f047c49d2762401857c nvme: add new reconnecting controller state
8f000cac6e7a6edca7ab93bafc7ed28b27c1545b nvmet-rdma: add a NVMe over Fabrics RDMA target driver
7110230719602852481c2793d054f866b2bf4a2b nvme-rdma: add a NVMe over Fabrics RDMA host driver
ed082d36a7b2c27d1cda55fdfb28af18040c4a89 IB/core: add support to create a unsafe global rkey to ib_create_pd
11975e0149002b88aa8003bfa6172f49e3351768 nvme-rdma: use IB_PD_UNSAFE_GLOBAL_RKEY
458a9632ad7428e16e1feafb61aca33a11ac2f46 nvme-rdma: fix the return value of nvme_rdma_reinit_request()
2ac17c283a3f7b80e5b53f54ae9b048e6f0a2929 nvme-rdma: Don't use tl_retry_count
6a92967ccbfc20f94055c9a94bf951230cbd0452 nvme-fabrics: Remove tl_retry_count
e76debd996c6c0296fbdcba275b4f875e07a0eff nvme-fabrics: add-remove ctrl repeat fix
69555af2ce32a31d11666e5fe20628b35fdf7ef3 nvmet: fix return value check in nvmet_subsys_alloc()
6eae8c45206733ba3a56b4f9e278774ad397b092 nvme-loop: fix nvme-loop Kconfig dependencies
f80ec966c19b78af4360e26e32e1ab775253105f nvme: Limit command retries
b09dcf585df959cf26270e65941ea1f79a1345aa NVMe: don't allocate unused nvme_major
13880f5b57adf34d050cf7e229a6326da45a7347 nvme/pci: Provide SR-IOV support
f6b6a28e2dbc401416ff12f775d75281c9b41918 nvme: Prevent controller state invalid transition
9b47f77a680447e0132b2cf7fb82374e014bec1c nvme: Fix nvme_get/set_features() with a NULL result pointer
aa71987472a974f4f6dc4be377720564079ef42e nvme: fabrics drivers don't need the nvme-pci driver
bd0b841fee49de421f615cc173ccff063303672f nvme: make NVME_RDMA depend on BLOCK
0b857b44b5e445dc850cd91c45ce6edeb7797480 nvme-rdma: Don't leak uninitialized memory in connect request private data
5f372eb3e76317b4fe4ba53ad1547f39fc883350 nvme-rdma: Queue ns scanning after a sucessful reconnection
57de5a0a40db97bb390d3ac1f4c2e74b9f3515c3 nvme-rdma: Fix device removal handling
2461a8dd38bea3cb5b1c1f0323794483292fb03f nvme-rdma: Remove duplicate call to nvme_remove_namespaces
a34ca17a9717fe607cd58285a1704cb6526cf561 nvme-rdma: Free the I/O tags when we delete the controller
a159c64d936eb0d1da29d8ad384183d8984899c9 nvme-loop: Remove duplicate call to nvme_remove_namespaces
45862ebcc4883b1b6bc0701cd15cb2b68b140c5d nvme-rdma: Make sure to shutdown the controller if we can
d8f7750a08968b105056328652d2c332bdfa062d nvmet-rdma: Correctly handle RDMA device hot removal
40e64e07213201710a51e270595d6e6c028f9502 nvmet-rdma: Don't use the inline buffer in order to avoid allocation for small reads
28b89118539da03f4b188763e1b2fd1aec0f580a nvmet: Fix controller serial number inconsistency
3ef1b4b298d98ccb3cc895baf1b18f7f9d073bee nvme-rdma: start async event handler after reconnecting to a controller
39bbee4e549fbc358b2ef9137c4bf459abd164fb nvme-rdma: initialize ret to zero to avoid returning garbage
3256aaef5e9a851f6be47656868020726e102187 nvmet-rdma: Fix use after free
b825b44c4ef4dabfdaf4e82db2263d377ac45d67 nvmet-rdma: +1 to *queue_size from hsqsize/hrqsize
f994d9dc28bc27353acde2caaf718222d92a3e24 fabrics: define admin sqsize min default, per spec
c5af8654c422cfdd8480be3a244748e18cace6c5 nvme-rdma: fix sqsize/hsqsize per spec
eadb7cf44105ae8250f0d638dc880c3ed511c4e2 nvme-loop: set sqsize to 0-based value, per spec
7a665d2f60b457c0d77b3e4f01e21c55ffc57069 nvme-fabrics: change NQN UUID to big-endian format
98096d8a787f05b1afe3869aa01e84981915c81d nvme-fabrics: get a reference when reusing a nvme_host structure
f5b7b559e14881b27d76f9c97817ec82bfc48827 nvme-rdma: Get rid of duplicate variable
4d8c6a7946d53648d9ed0e3852a1c81ce07d40db nvme-rdma: Get rid of redundant defines
cdbecc8d24b642b67ae79a0acc2ff18d3d0e677e nvme_rdma: keep a ref on the ctrl during delete/flush
f361e5a01ed35c0f9a00816d76a910d8a5cb4547 nvme-rdma: destroy nvme queue rdma resources on connect failure
e89ca58f9c901c8c4cfb09f96d879b186bb01492 nvme-rdma: add DELETING queue flag
e87a911fed07e368c6f97e75152e6297a7dfba48 nvme-rdma: use ib_client API to detect device removal
1bda18de8f15a611a61d1a935b679db2e153338a nvme-rdma: fix null pointer dereference on req->mr
3b4ac78610690bd83fb33762ef97e8b8a89285ae nvme-rdma: only clear queue flags after successful connect
c8712c6a674e3382fe4d26d108251ccfa55d08e0 blk-mq: skip unmapped queues in blk_mq_alloc_request_hctx
da695ba236b993f07a540d35c17f271ef08c89f3 blk-mq: allow the driver to pass in a queue mapping
0fe51ff269da745078e0ab2b90dfdf2a58d6f3e7 nvme-fabrics: rework nvmf_get_address() for variable options
4a9f05c57f98e794763650056731a0023ebfab5f nvme-fabrics: revise host transport option descriptions
9b349b080ca9777f6dab3da06d7fa4577f7d4c29 nvmet: Use direct IO for writes
2e5d0baa04845dc3a3d7dfa33d7663de270bb146 nvmet: Make dsm number of ranges zero based
1a6fe74dfd1bb10afb41cbbbdc14890604be42a6 nvme: Pass pointers, not dma addresses, to nvme_get/set_features()
202021c1a63c6ed69b3260e0fe10530c51f1e53e nvme : Add sysfs entry for NVMe CMBs when appropriate
8ef2074d28373014d05e92b5f13364ef51075b6e nvme: Add tertiary number to NVME_VS
a446c0840e244f34c22cc13b3a62d50aa51fb4c6 nvme.h: resync with nvme-cli
fa60682677c594d81e9b68b8a4046cde75a7374b nvme: use symbolic constants for CNS values
e9c9346e20c1b18a3ec30defd5ff7134bcc0da6d nvmet: use symbolic constants for CNS values
fa14a0acea1ffe67913ba384a2897130a36dfe03 nvmet-rdma: Fix possible NULL deref when handling rdma cm events
553cd9ef82edd811948782a8f73ae73c4bfeedd3 nvme-rdma: reject non-connect commands before the queue is live
8242ddac1bfcf6eb8873b4d0a4e7a172c2b5b625 nvmet: Don't queue fatal error work if csts.cfs is set
766dbb179d41d6337fed2b3ca00caa5845d298ce nvmet-rdma: don't forget to delete a queue from the list of connection failed
c8dbc37cd81d4705fce51123f5d81ea3267a5b88 nvme-rdma: stop and free io queues on connect failure
14c862dbb0a0e0a9baec20480d441e32cb54b2b9 nvmet-rdma: drain the queue-pair just before freeing it
6e85eaf3078bcc8552ca32a0938dbf7d2b495af0 blk-mq: blk_account_io_start() takes a bool
70d4281c4b7049794e6d66baac7a18ad943cf726 nvmet-rdma: Fix REJ status code
76c08bf46a2891c80e854813c636bdce1f7d1ca4 nvme-rdma: force queue size to respect controller capability
8eadfcb1b63d7d9cd21dc7a2fd1d92efc5730ddd nvme-fabrics: Fix memory leaks in nvmf_parse_options()
f3116d8f1e110a5eeaac94f5d1c490e9e466a223 nvme-fabrics: Fix a memory leak in an nvmf_create_ctrl() error path
e4fcf07cca6a3b6c4be00df16f08be894325eaa3 nvmet: Fix possible infinite loop triggered on hot namespace removal
6eb728305414bb9ef3c971a7a2932cc037b7df54 nvme-fabrics: Adjust source code indentation
d4a5340edd6405972795a1d006e8e2b6f7664ca1 nvme-rdma: remove redundant define
675796be47d683d9b5cd3d7587e09a1cc4fe9e54 nvmet-rdma: align to generic ib_event logging helper
27a4beef0b0508621c34aa61725eec2aa39904e0 nvme-rdma: align to generic ib_event logging helper
721b3917c4ae222085c6de70c24b73b0e7950b35 nvme-fabrics: set sqe.command_id in core not transports
885aa4015f70efffff86d81a5e236562dc8dcffe nvme-fabrics: patch target code in prep for FC transport support
b1ad1475b447a7668ac8bfad77277c4405941883 nvme-fabrics: Add FC transport FC-NVME definitions
d6d20012e116904065d192be6146040c99c03c3c nvme-fabrics: Add FC transport LLDD api definitions
d49187e97e94e2eb613cb6fed810356972077cc3 nvme: introduce struct nvme_request
7bf58533a0bc257edff883619befe7e5a1e8caca nvme: don't pass the full CQE to nvme_complete_async_event
bac0000af5f8476a64ca7529a4243e23c016fc89 nvme: untangle 0 and BLK_MQ_RQ_QUEUE_OK
478bcb9388f2c3eedba34ed5811793400047f95d nvme-fabrics: Add host_traddr options field to host infrastructure
2d79c7dc8fe5cf1158250a5fd25c02d781324cd3 admin-cmd: Added smart-log command support.
e399441de9115cd472b8ace6c517708273ca7997 nvme-fabrics: Add host support for FC transport
c53432030d86429dc9fe5adc3d68cb9d1343b0b2 nvme-fabrics: Add target support for FC transport
475d0fe795516a9b9f286a851c3972fd8831c643 nvme-fabrics: Add FC LLDD loopback driver to test FC-NVME
c965809c669da004b660e5923b8add8fac5a7dc8 nvme : Use correct scnprintf in cmb show
e6282aef7b89a11d26e731060c4409b7aac278bf nvme: simplify stripe quirk
ff13b39ecf726715a96fcd3c23e50eb792ef6516 nvme/pci: Delete misleading queue-wrap comment
2c473a9d02fbe881506d5d43bc7edb776f2f46f5 nvme/scsi: Remove START STOP emulation
c703489885218900579279cec4b4ab8e7fce383b nvme/fc: correct some printk information
17a1ec08ce7074f05795e5c32a3e5bc9a797bbf8 nvme/fc: simplify error handling of nvme_fc_create_hw_io_queues
6c73f949300f17851f53fa80c9d1611ccd6909d3 nvmet: fix KATO offset in Set Features
7c3a23b85cac5f3caa531f369c1e3a5f1a8b555f nvmet/fcloop: remove some logically dead code performing redundant ret checks
1392370ee7de8aa3f69936f55bea6bfcc9879c59 nvme-rdma: fix nvme_rdma_queue_is_ready
c81e55e057b6458aac6d96a6429ef021b7f6f62c nvmet_fc: correct logic in disconnect queue LS handling
344770b07b7ae70639ebf110010eb6156a6e55e9 nvmet: delete controllers deletion upon subsystem release
06406d81a2d7cfb8abcc4fa6cdfeb8e5897007c5 nvmet: cancel fatal error and flush async work before free controller
23a8ed4a624324dc696c328f09bd502c4a3816f0 nvmet: Call fatal_error from keep-alive timout expiration
748ff8408f8e208f279ba221e5c12612fbb4dddb nvmet-rdma: Fix missing dma sync to nvme data structures
805c1f4aedaba1bc8d839e7c27b128083dd5c2f0 net_sched: act: action flushing missaccounting
ddafd34f419546f1eb7c343178685f059c3cf127 net_sched: act: move idx_gen into struct tcf_hashinfo
fb1d598d482d9fd448ea68895751bdfb8f29ee8e net_sched: act: use tcf_hash_release() in net/sched/act_police.c
c779f7af99f73abb7270dcaa4c29178ab5ef7472 net_sched: act: fetch hinfo from a->ops->hinfo
6e6a50c254220acb19bd338ce433b1770e4a7a3c net_sched: act: export tcf_hash_search() instead of tcf_hash_lookup()
86062033feb8a1692f7a3d570c652f1b4a4b4b52 net_sched: act: hide struct tcf_common from API
a5b5c958ffd1610545d6b4b8290aa9c5266d10fa net_sched: act: refactor cleanup ops
671314a5abb7abb8346cd3f16f75c1e55ed7667b net_sched: act: remove capab from struct tc_action_ops
4f1e9d8949b438c7791993515fc164312e9080e2 net_sched: act: move tcf_hashinfo_init() into tcf_register_action()
55334a5db5cd32b207ac697cec3ec8e078f345d4 net_sched: act: refuse to remove bound action outside
22e0f8b9322cb1a48b1357e8f4ae6f5a9eca8cfa net: sched: make bstats per cpu and estimator RCU safe
6401585366326fc0ecbc372ec60d1a15cd8be2f5 net: sched: restrict use of qstats qlen
b0ab6f92752b9f9d8da980506e9df3bd9dcd7ed3 net: sched: enable per cpu qstats
82a470f1119eb7d2e4941b915bf9cd6fd8d54494 net: sched: remove tcf_proto from ematch calls
18cdb37ebf4c986d9502405cbd16b0ac29770c25 net: sched: do not use tcf_proto 'tp' argument from call_rcu
02c0fc1b8f41e6e895d6573615ba8ff549b685d2 net_sched: fix unused variables in __gnet_stats_copy_basic_cpu()
7c1c97d54f9bfc810908d3903cb8bcacf734df18 net: sched: initialize bstats syncp
e4386456ae4eca2104e67f70a8ff7b7c949fb248 net_sched: cls_basic: remove unnecessary iteration and use passed arg
472f58370128d5e18f9d5429313a87d0f30af45e net_sched: cls_bpf: remove unnecessary iteration and use passed arg
4577139b2dabf58973d59d157aae4ddd3bde863a net: use jump label patching for ingress qdisc in __netif_receive_skb_core
087c1a601ad7f851a2d31f5fa0e5e9dfc766df55 net: sched: run ingress qdisc without locks
c9e99fd078ef7fdcd9ee4f5a4cfdbece319587af net: sched: consolidate handle_ing and ing_filter
d2788d34885d4ce5ba17a8996fd95d28942e574e net: sched: further simplify handle_ing
4cda01e86f68dacc758b2daf6e8809f2ce915b85 net: sched: fix typo in net_device ifdef
f0b5e8a42f37a880b8467e59dc814f4f21581d3d net: kill useless net_*_ingress_queue() definitions when NET_CLS_ACT is unset
24ea591d2201c3257d666466e8fac50a6cf3c52f net: sched: extend percpu stats helpers
519c818e8fb646eef1e8bfedd18519bec47bc9a9 net: sched: add percpu stats to actions
cef5ecf96b28dc91c4e9f398a336c578fb9e1a0c net_sched: act_gact: make tcfg_pval non zero
cc6510a9504fd3c03d76bd68d99653148342eecc net_sched: act_gact: use a separate packet counters for gact_determ()
56e5d1ca183d8616fab377d7d466c244b4dbb3b9 net_sched: act_gact: remove spinlock in fast path
2ee22a90c7afac265bb6f7abea610b938195e2b8 net_sched: act_mirred: remove spinlock in fast path
28e6b67f0b292f557468c139085303b15f1a678f net: sched: fix refcount imbalance in actions
5175f7106cc55a1bcf97bf7d5ba0900017ebcef8 act_pedit: check binding before calling tcf_hash_release()
73c20a8b7245273125cfe92c4b46e6fdb568a801 net: sched: fix missing free per cpu on qstats
dc327f8931cb9d66191f489eb9a852fc04530546 net_sched: close another race condition in tcf_mirred_release()
aafddbf0cffeb790f919436285328c762279b5d4 fq_codel: return non zero qlen in class dumps
1e052be69d045c8d0f82ff1116fd3e5a79661745 net_sched: destroy proto tp when all filters are gone
d744318574090c3b796915d9d710bdb17db191a1 net_sched: fix a use-after-free in tc_ctl_tfilter()
a6c1aea044e490da3e59124ec55991fe316818d5 cls_u32: complete the check for non-forced case in u32_destroy()
2688fcb79498246d45a0fa5900e415bc97661b6f xen-netfront: Factor queue-specific data into queue struct.
50ee60611bf0c7328e5cae438ea5c26590f3f747 xen-netfront: Add support for multiple queues
8b715010aaf912423b20daf79cf52ade39348157 xen-netfront: initialise queue name in xennet_init_queue
765418694bc99d91e71ede6d2889a6328da137fe xen-netfront: fix oops when disconnected from backend
ce58725fec6e609eee162e6af848bd57107b97af xen-netfront: recreate queues correctly when reconnecting
f50b407653f64e76d1c9abda61d0d85cde3ca9ca xen-netfront: don't nest queue locks in xennet_connect()
f9feb1e6a25f9e197f9e6e6cb04bf04d2cccff93 xen-netfront: call netif_carrier_off() only once when disconnecting
db8c8ab61a28d7e3eb86d247b342a853263262c3 xen-netfront: fix locking in connect error path
a5b5dc3ce4df4f05f4d81c7d3c56a7604b242093 xen-netfront: release per-queue Tx and Rx resource when disconnecting
69cb85242f4ff1cbbac5a45c05223600084760e8 xen-netfront: print correct number of queues
1f3c2eba1e2d866ef99bb9b10ade4096e3d7607c xen-netfront: always keep the Rx ring full of requests
900e183301b54f8ca17a86d9835e9569090d182a xen-netfront: use different locks for Rx and Tx stats
a55e8bb8fb89c90b33791861e59859a39e57ba30 xen-netfront: refactor making Tx requests
ad0681185770716523c81b156c44b9804d7b8ed2 xen-netfront: properly destroy queues when removing device
9a873c71e91cabf4c10fd9bbd8358c22deaf6c9e net/xen-netfront: only clean up queues if present
905726c1c5a3ca620ba7d73c78eddfb91de5ce28 xen-netfront: Remove the meaningless code
32a844056fd43dda647e1c3c6b9983bdfa04d17d xen-netfront: respect user provided max_queues
812494d9a0cacf77e0a538be18183c7b471812aa xen-netfront: always set num queues if possible
ca88ea1247dfee094e2467a3578eaec9bdf0833a xen-netfront: update num_queues to real created
7d0105b5334b9722b7d33acad613096dfcf3330e xen-netfront: request Tx response events more often
493be55ac3d81f9c32832237288eb397a9993d5d xen-netfront: Use setup_timer
274b045509175db0405c784be85e8cce116e6f7d net/xen-netfront: only napi_synchronize() if running
87557efc27f6a50140fb20df06a917f368ce3c66 xen-netfront: do not cast grant table reference to signed short
269ebce4531b8edc4224259a02143181a1c1d77c xen-netfront: cast grant table reference first to type int
90c311b0eeead647b708a723dbdde1eda3dcad05 xen-netfront: Fix Rx stall during network stress and OOM
034702a64a6692a8d5d0d9630064a014fc633728 xen/netfront: set default upper limit of tx/rx queues to 8
538d92912d3190a1dd809233a0d57277459f37b2 xen-netfront: Rework the fix for Rx stall during OOM and network stress
e2e004acc7cbe3c531e752a270a74e95cde3ea48 xen-netfront: Improve error handling during initialization
74470954857c264168d2b5a113904cf0cfd27d18 xen-netfront: Delete rx_refill_timer in xennet_disconnect_backend()
416db5c1e448805866a6f23ebf7c78443f3d3bd5 nfp: remove support for nfp3200
bf187ea01b07739167420088adb385f9385a7c7f nfp: centralize the buffer size calculation
e9949aebe04a1d917a15f4dc71e77deaefe9de94 nfp: add buffer drop/recycle helper for RX
c0f031bc88660e8b96060b76aa72fbe8859bdcc8 nfp: use alloc_frag() and build_skb()
b64b7bb6d492ef1bbe9aa9ed7eeb18f7148ece3d nfp: add separate buffer allocation function for napi
1a1d74d378b13ad3f93e8975a0ade0980a49d28b nfp: use AND instead of modulo to get ring indexes
a4b562bb8ebd418dcfeba2840a7ece25a74d8385 nfp: use unsigned int for vector/ring counts
4b27a1eb7b83da956c3939869ed22f5ca0e1f1e1 nfp: remove nfp_net_irqs_wanted()
b33ae997a362d64a1178be17804c2c3899770a4b nfp: replace num_irqs with max_r_vecs
68453c7a8973399441080bcb20512d38033e64f7 nfp: centralize runtime reconfiguration logic
0ae42dfcf249a6b6535d37e119e06efb31eef979 nfp: rename ring allocation helpers
e31230f9260f7bcf069e3962111f7e4656a1bfd4 nfp: add helper to reassign rings to IRQ vectors
1e9e10d0c1365092972552d8c8f9d97517bcf581 nfp: move RSS indirection table init into a separate function
164d1e9e5d5235c44851e606d01dd699d8bb15d3 nfp: add support for ethtool .set_channels
13df4c666c551bba97618d7e3908c2ecd03ceefb nfp: reorganize nfp_net_rx() to get packet offsets early
08348995c47ec0e6ad3712c08eb88fb4df2e8180 netronome: don't access real_num_rx_queues directly
1697599ee301a52cded6499a09bd609f7f63fd06 bitfield.h: add FIELD_FIT() helper
2633beb99b81f4dd005f99aabd98c8afa056c528 nfp: rename the driver and add new main file
4cb584e0ee7df70fd0376aee60cf701855ea8c81 nfp: add CPP access core
f01a2161577d31b14581e0db3bbbdfa963f145b6 nfp: add support for resources
59a8474888e9b06252ebe8979630b371c926a00c nfp: add hwinfo support
a0d8e02c35ff6068925d8c5ff4202b561aa90de6 nfp: add support for reading nffw info
ab78c1d286df46ddc7aeaef2c22e27b7ec061ecc nfp: add MIP reading support
5f30fe4d460c975ca3debe90ec71cbd0a46e35e2 nfp: add rtsym support
1a64821c6af7a85aa69835236f49aa3aa4c22ed1 nfp: add support for service processor access
6f1cd5ca359276508a2c55e638a4a2cc28f8e4ae nfp: add port layer to debugfs directories
fdace6c224e9fc0e81337b6fee3cfd136824c983 nfp: allocate irqs in lower driver
63461a028f761f8e45d22d06fb7e7468def024b7 nfp: add the PF driver
a9c83f7bc7c121c99457553f8d1c3e231a9ba6df nfp: refactor NSP initialization and add error message
64db09ed1fc2c4491cca4219850fab4d0460c952 nfp: report manufacturing info on load
368b1d1c49f651ba513090623f2891a695fe9fbb nfp: store NSP ABI version in state structure
bd5ca062ba7d24bcc28f637aa90056f642a35dfa nfp: report NSP ABI version in ethtool FW version
af623682ac2eba96769f9ba2270438c1f9438d7c nfp: add very basic access to NSP logs
372d504575cbefb34be6a934cc3d3ceb62e0892c nfp: return nfp_rtsym_read_le() errors correctly
0bc3827f8c9f74b5335667d70309cefa12ec14ae nfp: allow application firmware to limit number of SR-IOV VFs
7e94632fc530d990de3110e6c53425d6e28dd238 ACPICA: Add support to allow host OS to redefine individual OSL prototypes.
8b9c1152a018883f6f0b841e12e17671f2c64c32 ACPICA: OSL: Add configurability for generic external functions.
d13bd5a602982cd7f697e39b13ac736c2c553af1 ACPICA: Linux headers: Add <acpi/platform/aclinuxex.h>
07d8391433380fc72f999d99c554b1cfedea9778 ACPICA: Linux headers: Add <asm/acenv.h> to remove mis-ordered inclusion of <asm/acpi.h>
d334c823b27401721591e0f1220050a41af08165 ACPICA: Linux: Add support to exclude <asm/acenv.h> inclusion.
badf6d47f8a93098c6e05fdeb735b44b61877451 usb: common: rework CONFIG_USB_COMMON logic
7cb3026411cf2b64797eb6b1caacfba6ca4258d9 PCI: Remove unnecessary space before function pointer arguments
c7a091c7627c9a76d7a5c706820cb510f6992cdf PCI: tegra: Add Tegra210 support
97ef38b8210d7459d4cb51668cdf3983772ac6b7 tty: Replace TTY_THROTTLED bit tests with tty_throttled()
b071c5d7998a79919e83565ddfb98fdf6fa804bc USB: ohci-jz4740: Remove obsolete driver
5a8d651a2bde01e00caf78496390d6ae46df80af usb: gadget: move gadget API functions to udc-core
52ad1f38b4f6e2f2133668247036ad64ef7ae18a tty: vt, remove consw->con_bmove
6ca8dfd78187d8238abc5b2996848a0c8f07948d tty: vt, convert more macros to functions
a3aef37930713447b45b1f0f9f8841be44f7db45 xhci: get rid of platform data
2609af19362d03332b55fc7836e7023bcd6d90bf r8152: fix runtime function for RTL8152
a26a142275c690d122edfba79120412cd7dbe38e usb: remove redundant dependency on USB_SUPPORT
d6b76c4ddb124dd22c6e910ca9332e472e7b3273 USB: bcma: support old USB 2.0 controller on Northstar devices
e6f74849784ccf275226d5d3ddfb96c71fa90383 usb: ulpi: rename operations {read|write}_dev to simply {read|write}
042b0f31b2a87799a9c832f71474c5be3517e139 usb: ulpi: remove "dev" field from struct ulpi_ops
ad764c49f65ac171e493e6baf39bc8ba296ef376 usb: Kconfig: move ulpi bus support out of host
6406c3d226374c28d452b11db3b5ac241ce26191 usb: Kconfig: let USB_ULPI_BUS depends on USB_COMMON
af0287ec10c62c84cc5cd1bad4fd37644a1ac41d r8152: remove r8153_enable_eee
d768c61bc353a0e0de3f839e1de99eee7d4eca10 r8152: disable ALDPS and EEE before setting PHY
0f247626cbbfa2010d2b86fdee652605e084e248 usb: core: Introduce a USB port LED trigger
cb9c1cfc86926d0e86d19c8e34f6c23458cd3478 usb: Kconfig: using select for USB_COMMON dependency
63c8d90ca967c7e87006dbd363a8724ba31f1b57 USB: host: ehci-sead3: Remove SEAD-3 EHCI code
6110c425d98b7ed036bba3670e635a9363dd072e usb: ohci-da8xx: Remove code that references mach
6c21caa333f98e9adb93be5f01f5a4041c0d9256 USB: OHCI: make ohci-da8xx a separate driver
9d4b82706357f2eb23f45309227fc94d11eea255 fsl/usb: Workarourd for USB erratum-A005697
89778ba335e302a450932ce5b703c1ee6216e949 usb: core: usbport: Use proper LED API to fix potential crash
8fb280616878b81c0790a0c33acbeec59c5711f4 r8152: split rtl8152_suspend function
75dc692eda114cb234a46cb11893a9c3ea520934 r8152: fix rx issue for runtime suspend
6a0b76c04ec157c88ca943debf78a8ee58469f2d r8152: don't execute runtime suspend if the tx is not empty
26afec39306926654e9cd320f19bbf3685bb0997 r8152: avoid start_xmit to call napi_schedule during autosuspend
7489bdadb7d17d3c81e39b85688500f700beb790 r8152: check rx after napi is enabled
005c82d64d1aa49290a39573019f73b5088beeff tools/power turbostat: Support Knights Mill (KNM)
2b6ab0d3aae6bf1e08118060b0c5565778cd6b21 net: cls_u32: move TC offload feature bit into cls_u32 offload logic
9e8ce79cd711d4dfe09d8bba6822cd9bb7db96bd net: sched: cls_u32 add bit to specify software only rules
00175aec941e9c306d8a5ce930b2d91f7c04468c net/sched: Macro instead of CONFIG_NET_CLS_ACT ifdef
760edee8b59ebf05bb268d0a6b568f76bb1bb599 net: sched: Move TCA_CLS_FLAGS_SKIP_HW to uapi header file.
d34e3e181395192d6d1f50dd97bd7854e04e33a4 net: cls_u32: Add support for skip-sw flag to tc u32 classifier.
3804070235264ea883c3fdccd9ed16fef20b5ccb net/sched: Enable netdev drivers to update statistics of offloaded actions
0c23c3e705691cfb99c94f2760df2b456fe45194 net_sched: fix a typo in tc_for_each_action()
d47a0f387fe907bdb0430a398850c1cb80eb7def net: cls_u32: be more strict about skip-sw flag
e696028acc458aa3d43ad899371a963eb28336d8 net/sched: Reflect HW offload status
40e4e713ebb279eb569584836d7cc6b799ed7f7f net: Reduce queue allocation to one in kdump kernel
b6677449dff674cf5b81429b11d5c7f358852ef9 bridge: netlink: call br_changelink() during br_dev_newlink()
046a619d8e9746fa4c0e29e8c6b78e16efc008a8 locking/spinlocks/mcs: Rename optimistic_spin_queue() to optimistic_spin_node()
90631822c5d307b5410500806e8ac3e63928aa3e locking/spinlocks/mcs: Convert osq lock to atomic_t to reduce overhead
4d9d951e6b5df85ccfca2c5bd8b4f5c71d256b65 locking/spinlocks/mcs: Introduce and use init macro and function for osq locks
33ecd2083a9560fbc1ef1b1279ef3ecb4c012a4f locking/spinlocks/mcs: Micro-optimize osq_unlock()
ce069fc920e5734558b3d9cbef1ab06cf01ee793 locking/rwsem: Reduce the size of struct rw_semaphore
5db6c6fefb1ca0e81e3bd6dd8998bf51c453d823 locking/rwsem: Add CONFIG_RWSEM_SPIN_ON_OWNER
d84b6728c54dcf73bcef3e3f7cf6767e2d224e39 locking/mcs: Better differentiate between MCS variants
7a215f89a0335582292ec6f3edaa3abd570da75a locking/rwsem: Set lock ownership ASAP
4d3199e4ca8e6670b54dc5ee070ffd54385988e9 locking: Remove ACCESS_ONCE() usage
59aabfc7e959f5f213e4e5cc7567ab4934da2adf locking/rwsem: Reduce spinlock contention in wakeup after up_read()/up_write()
133e89ef5ef338e1358b16246521ba17d935c396 locking/rwsem: Enable lockless waiter wakeup(s)
e38513905eeaae59056eac2c9ac55a43b1fc41b2 locking/rwsem: Rework zeroing reader waiter->task
c0fcb6c2d332041256dc55d8a1ec3c0a2d0befb8 locking/rwsem: Optimize write lock by reducing operations in slowpath
8ee62b1870be8e630158701632a533d0378e15b8 locking/rwsem: Convert sem->count to 'atomic_long_t'
d157bd860f1c828593730dca594d0ce51956833b locking/rwsem: Remove rwsem_atomic_add() and rwsem_atomic_update()
19c5d690e41697fcdd19379ab9d10d8d37818414 locking/rwsem: Add reader-owned state to the owner field
fb6a44f33be542fd81575ff93a4e8118d6a58592 locking/rwsem: Protect all writes to owner by WRITE_ONCE()
bf7b4c472db44413251bcef79ca1f6bf1ec81475 locking/rwsem: Improve reader wakeup code
ddd0fa73c2b71c35de4fe7ae60a5f1a6cddc2cf0 locking/rwsem: Streamline the rwsem_optimistic_spin() code
84b23f9b58687a11ced66cc4be9b0219e8ecab84 locking/rwsem: Return void in __rwsem_mark_wake()
70800c3c0cc525baa38fd0fe4660f2c27f1bfeeb locking/rwsem: Scan the wait_list for readers only once
f031dd274ccb7069012ede73f537cc81c42fc80b mm, hugetlb: remove resv_map_put
4e35f483850ba46b838adfd312b3052416e15204 mm, hugetlb: use vma_resv_map() map types
8f34af6f93aee88291cec53ae8dff4989e58fbbd mm, hugetlb: move the error handle logic out of normal code path
753162cd849c45580fb5aaa7f3597c81e74e391c mm: hugetlb: fix type of hugetlb_treat_as_movable variable
1c5ecae3a93fa1ab51a784d77e9c9ed54e67c65f hugetlbfs: add minimum size accounting to subpools
641844f5616d7c6597309f560838f996466d7aac mm/hugetlb: introduce minimum hugepage order
cf3ad20bfeadda693e408d85684790714fc29b08 mm/hugetlb: compute/return the number of regions added by region_add()
5e9113731a3ce616e8b5aa128ffc1aeaa4942571 mm/hugetlb: add cache of descriptors to resv_map for region_add
feba16e25a578080af5aad5eb9e469b4e6c23eef mm/hugetlb: add region_del() to delete a specific range of entries
c672c7f29f2fdb73e1f72911bf499675c81fcdbb mm/hugetlb: expose hugetlb fault mutex for use by fallocate
1bfad99ab42569807d0ca1698449cae5e8c0334a hugetlbfs: hugetlb_vmtruncate_list() needs to take a range to delete
b5cec28d36f5ee6b4e6f68a0a40aa1e4045d6d99 hugetlbfs: truncate_hugepages() takes a range of pages
d85f69b0b533ec6d7ac8c21db958c44c6d957c90 mm/hugetlb: alloc_huge_page handle areas hole punched by fallocate
1817889e3b2cc1db8abb595712095129ff9156c1 mm/hugetlbfs: fix bugs in fallocate hole punch of areas with holes
dbe409e4f5e5075bd9ff7f8dd5c627abf3ee38c1 mm/hugetlb.c: fix resv map memory leak for placeholder entries
88f306b68cbb36e500da4b9601b2e3d13dd683c4 mm: fix locking order in mm_take_all_locks()
9aacdd354d197ad64685941b36d28ea20ab88757 fs/hugetlbfs/inode.c: fix bugs in hugetlb_vmtruncate_list()
4aae8d1c051ea00b456da6811bc36d1f69de5445 mm/hugetlbfs: unmap pages if page fault raced with hole punch
09a95e29cb30a3930db22d340ddd072a82b6b0db mm/hugetlb: optimize minimum size (min_size) accounting
9fee021d15ddd884d40d1540913474e8112313fe mm/hugetlb: introduce hugetlb_bad_size()
67961f9db8c477026ea20ce05761bde6f8bf85b0 mm/hugetlb: fix huge page reserve accounting for private mappings
31d49da5ad01728e48a1bb2b43795598b23de68a mm/hugetlb: simplify hugetlb unmap
2247bb335ab9c40058484cac36ea74ee652f3b7b mm/hugetlb: fix memory offline with hugepage size > memory block size
082d5b6b60e9f25e1511557fcfcb21eedd267446 mm/hugetlb: check for reserved hugepages during memory offline
eb03aa008561004257900983193d024e57abdd96 mm/hugetlb: improve locking in dissolve_free_huge_pages()
72e2936c04f7d2a4bf87d7f72d3bf11cf91ebb47 mm: remove unnecessary condition in remove_inode_hugepages
96b96a96ddee4ba08ce4aeb8a558a3271fd4a7a7 mm/hugetlb: fix huge page reservation leak in private mapping error paths
8bea805207500068b70778b707299a9b5920ca72 mm/hugetlb.c: use huge_pte_lock instead of opencoding the lock
b5330628546616af14ff23075fbf8d4ad91f6e25 mm: introduce vma_is_anonymous(vma) helper
893e26e61d04eac974ded0c11e1647b335c8cb7b userfaultfd: non-cooperative: Add fork() event
d3aadc8ed4cb447981ecf34f9af71cddc6cf907d userfaultfd: non-cooperative: dup_userfaultfd: use mm_count instead of mm_users
72f87654c69690ff4721bd9b4a39983f971de9a5 userfaultfd: non-cooperative: add mremap() event
90794bf19dc19691a16b71bcd75c04094d9e392d userfaultfd: non-cooperative: optimize mremap_userfaultfd_complete()
05ce77249d5068b057082d24ec22d3824f4816ac userfaultfd: non-cooperative: add madvise() event for MADV_DONTNEED request
0594f58dbd954f7747553c041d7cbbf9b6ef1947 userfaultfd: non-cooperative: avoid MADV_DONTNEED race condition
369cd2121be440543280b91056de187f625d0dbb userfaultfd: hugetlbfs: userfaultfd_huge_must_wait for hugepmd ranges
87ffc118b54dcd4cc642723603d944673248152f userfaultfd: hugetlbfs: gup: support VM_FAULT_RETRY
163e11bc4f6ebbfcfdf751c108bd212a26e492ee userfaultfd: hugetlbfs: UFFD_FEATURE_MISSING_HUGETLBFS
4c27fe4c4c84f3afd504ecff2420cc1ad420d38e userfaultfd: shmem: add shmem_mcopy_atomic_pte for userfaultfd support
b0506e488da5cf2f07f3a4f6d7acaa8f459ad714 userfaultfd: shmem: introduce vma_is_shmem
cfda05267f7bd02b5ae5ac6a37fbbdf3b9c41b57 userfaultfd: shmem: add userfaultfd hook for shared memory faults
cac673292b9b39493bb0ff526b96c83ace6fdcd0 userfaultfd: shmem: allow registration of shared memory ranges
9cc90c664a65f9b6b9f3ce1c719f1308539427bd userfaultfd: shmem: lock the page before adding it to pagecache
cb658a453b9327ce96ce5222c24d162b5b65b564 userfaultfd: shmem: avoid leaking blocks and used blocks in UFFDIO_COPY
a425d3584e7e69587aa441e91c7ffce7f47004d7 userfaultfd: shmem: avoid a lockup resulting from corrupted page->flags
47dd924508f5fb10480afc69de04539fa3d14034 userfaultfd: hugetlbfs: UFFD_FEATURE_MISSING_SHMEM
175ad4f1e7a29c8f914254e2e6316c50671e027a mm: mprotect: use pmd_trans_unstable instead of taking the pmd_lock
d811914d87576c562e849c00d9f9beff45038801 userfaultfd: non-cooperative: rename *EVENT_MADVDONTNEED to *EVENT_REMOVE
897ab3e0c49e24b62e2d54d165c7afec6bbca65b userfaultfd: non-cooperative: add event for memory unmaps
ca49ca7114553587736fe78319e22f073b631380 userfaultfd: non-cooperative: add event for exit() notification
9332ef9dbd172d4ab0a0141df7cb21c696a5ce96 scripts/spelling.txt: add "an user" pattern and fix typo instances
dd0db88d8094a6d9d4d1fc5fcd56ab619f54ccf8 userfaultfd: non-cooperative: rollback userfaultfd_exit
8c9e7bb7a41f2bbd54b2caefb274fb3de239819f userfaultfd: non-cooperative: release all ctx in dup_userfaultfd_complete
70ccb92fdd90b35bb6f9200093d4ffd6cb38156b userfaultfd: non-cooperative: userfaultfd_remove revalidate vma in MADV_DONTNEED
e37b94ebffdd93d121e5308eb93e2e55a0893fbb crypto: memneq - fix for archs without efficient unaligned access
28856a9e52c7cac712af6c143de04766617535dc crypto: xts - consolidate sanity check for keys
10faa8c0d6c3b22466f97713a9533824a2ea1c57 crypto: FIPS - allow tests to be disabled in FIPS mode
331bf739c4f9992a73547d20bd8f2378b97d386a crypto: sha1-mb - async implementation for sha1-mb
f876f440df3973ab7f1d20e3d34d000fc9422a78 crypto: sha256-mb - SHA256 multibuffer job manager and glue code
087bcd225c5656a0beac02739471085d000c9680 crypto: tcrypt - Add speed tests for SHA multibuffer algorithms
8c603ff28659e65fdae960cd3f952ec168fc773a crypto: sha512-mb - SHA512 multibuffer job manager and glue code
14009c4bde13d191206d58d0513a9179568a0125 crypto: tcrypt - Add new mode for sha512_mb
651be3cb085341a21847e47c694c249c3e1e4e5b hw_breakpoint: Allow watchpoint of length 3,5,6 and 7
224e2c977b647d1ae72bf1d8e3424cd3e5e83f0c perf script: Support insn and insnlen
ac12f6764c5097e791cd44f10b8943b40f44bfe7 perf tools: Implement branch_type event parameter
ecf1e2253ea79c6204f4d6a5e756e8fb4aed5a7e perf trace: Use the syscall raw_syscalls:sys_enter timestamp
99620a5d0cc8e2dd9aedb629a6e81825f0db020e perf tools: Introduce timestamp__scnprintf_usec()
0fb75c8ce15be60e768c06adabf00ff79e5c2501 tools: Update asm-generic/mman-common.h copy from the kernel
46cb25b1a0ee74bf4a79cfb3081ae3567b2f7135 perf tools: Add missing object file to the python binding linkage list
285932a25879602407f207e862bc5b8416711f42 tools build: Add jvmti feature detection support
d4dfdf00d43e017dc57372566ceba0e5e1595eba perf jvmti: Plug compilation into perf build
410024dbbcb1df5b8140a812b4f1a4dbd62ef924 perf report: Add branch flag to callchain cursor node
7b4b82bced0755aecc026d8c14c2608aa0f9e89b perf tools: Show event fd in debug output
a8763445f6c78628bd96d51649745065c0bb2c92 perf symbols: Print symbol offsets conditionally
69b7e48070ca2ecee7498166259b5826b22e8b2e perf evsel: Support printing callchains with arrows
2d9bbf6eb3825739efa9e91c256ce7ead60d8367 perf callchain: Add option to skip ignore symbol when printing callchains
cdeb01bf7863718bbbbdac2a2c3a12b62366757a perf sched timehist: Mark schedule function in callchains
a074865e60edd762b99ec5dacec69b406f702e66 perf tools: Introduce perf hooks
030910c085467c7f08f49735c19c66c1baa53f76 perf test: Remove "test" and similar strings from test descriptions
64eff7d9c4469b7e24fb7e5416a67ee5959c3f76 perf script: Add option to stop printing callchain
fdf9dc4b34f5f40919370c4601eccfd0db726aa5 perf tools: Add time-based utility functions
c284d669a20d408b70ce0dc9b2d995971f5fe0c7 perf tools: Move parse_nsec_time to time-utils.c
a91f4c473fa1655a2a5f1ceba46f76a95eef35bb perf script: Add option to specify time window of interest
8ad85e9e6fdaf996bf3ff60303ea00e696bcdd36 perf tools: Pass context to perf hook functions
cb40d55b595cd117ef7c1880247605875b2115e8 tools build: Add feature detection for LLVM
c7fb4f62e2a97bd25d555263ef501fe053edcbb6 tools build: Add feature detection for clang
d58ac0bf8d1e6ffbfcb0a77e459cf4737b131b75 perf build: Add clang and llvm compile and linking support
2fedf79b69cf05b7e8e82a42d749c621155dd812 tools build: Move tabs to spaces where suitable
a940cad331e79cc03d9ae74f56a2c7cb810bdce9 perf build: Check LLVM version in feature check
abb26210a39522a6645bce3f438ed9a26bedb11b perf tools: Force fixdep compilation at the start of the build
8ac1eb7bab7c8d9d6f00b3e2a408611c45d9dff0 perf tools: Move perf build related variables under non fixdep leg
e19b7cee020441dd690613d223aed7abb0bcda81 make use of make variable CURDIR instead of calling pwd
aeafd623f866c429307e3a4a39998f5f06b4f00e perf tools: Move headers check into bash script
96039c7c52e03b7d6dd773664e74b79e3ae9856a perf sched timehist: Split is_idle_sample()
699b5b920db04a6ff5c03a519e4c182aeb350952 perf sched timehist: Save callchain when entering idle
83c2e4f3968d6871eed295f2f5675d3d70b01afa perf evsel: Use variable instead of repeating lengthy FD macro
38af91f01de0e160c17ae380acb5bab5d51066f4 perf thread_map: Add thread_map__remove function
a359c17a7e1a9c99384499cf7b43d80867080789 perf evsel: Allow to ignore missing pid
60437ac02f398e0ee0927748d4798dd5534ac90d perf record: Fix --switch-output documentation and comment
cd7f355ac4067177e0a45e7331d11472bd7fd7ca perf jvmti: Create libdir directory before installing libperf-jvmti.so
017037ff3d0b11842012878a546fe2df47822259 perf trace: Allow specifying list of syscalls and events in -e/--expr/--event
9808143ba2e54818a3cf445d9b69b3f5f15451ee perf tools: Add unit_number__scnprintf function
1b43b70484a9617de5fe2c12e64bea006010ac1c perf record: Add struct switch_output
cb4e1ebb6a398ff5b0067034b0d16566af4d78e8 perf record: Change switch-output option to take optional argument
dc0c6127c231d4d264570497a916fa19740c915b perf record: Add switch-output size option argument
0c5824498e8bd5b7d30dc03448cd89efaee4bead perf record: Add switch-output size warning
bfacbe3bf2443c805aec4c04ecb558d03d0d3ebc perf record: Add switch-output time option argument
ecc4c5614b24ee8ebaa35b834b5768dc9302ee3e perf tools: Propagate perf_config() errors
eb419229be58dc6d4a3a814116a265908e088c39 scsi: be2iscsi: Check tag in beiscsi_mccq_compl_wait
49fc5152f5904aeab75aaef631ea61dff7ee76d8 scsi: be2iscsi: Fix closing of connection
bf3994d2ed310813da28362d87bfe9f0e1c3e37f net/sched: introduce Match-all classifier
b87f7936a93246804cf70e7e2e0568799c948bb1 net/sched: Add match-all classifier hw offloading.
2c9d85d4d82d9e0a62aad08bf50650804e68ed30 netdevice: Add offload statistics ndo
69ae6ad2ff37911903a90256e216d7e7ae460002 net: core: Add offload stats to if_stats_msg
b90eb754949931b2e4481b1df9a03f84d4be66ba fib: introduce FIB notification infrastructure
c98501879b1b1af90c7325574f2672e9efca592c fib: introduce FIB info offload flag helpers
d936377414fadbafb4d17148d222fe45ca5442d4 net, sched: respect rcu grace period on cls destruction
d3f706f68e2fd93f1172fe7fd6f16ba70cc52b31 ipv4: fib: Convert FIB notification chain to be atomic
cacaad11f43aefbbe5fca00af3b9c16e6aee1ba4 ipv4: fib: Allow for consistent FIB dumping
fd62d9f5c575f0792f150109f1fd24a0d4b3f854 net/sched: matchall: Fix configuration race
ec2507d2a3060a970fa314556891828cfd60093e net/sched: cls_matchall: Fix error path
c26bf4a51308c85a6f97628253b99767a84ff90a pktgen: Add UDPCSUM flag to support UDP checksums
7744b5f3693cc06695cb9d6667671c790282730f pktgen: fix UDP checksum computation
97c242902c209e7d46e365335db5202634484dcb switchdev: Execute bridge ndos only for bridge ports
e4961b0768852d9eb7383e1a5df178eacb714656 net: core: Correctly iterate over lower adjacency list
3df5b3c67546fb05266766b6abaf71563f82efe4 net: Add net-device param to the get offloaded stats ndo
73d94e9481a20817abe2f1b41ee441bb4f6461f7 pktgen: add needed include file
063af59597492d31c44e549d6c773b6485f7dc53 IB/rxe: Avoid scheduling tasklet for userspace QP
ffae955d49e6cff28589d6e7388bb9275f9ce2d1 IB/rxe: Fix sending out loopback packet on netdev interface.
813f854053c26204e2723c498def4c7870dcc7f4 net/mlx5: Introduce TSAR manipulation firmware commands
1bd27b11c1df33a1dc3277e2a0abbf6bd33cc817 net/mlx5: Introduce E-switch QoS management
bd77bf1cb595477528f06f5c52f913f70acd73bb net/mlx5: Add SRIOV VF max rate configuration support
0501fc477c2bed1cce02acbc22d79418bfa2c8c3 net/mlx5: Use fte status to decide on firmware command
ae05831424ed99f1432492d6df7e8bfe139d2449 net/mlx5: Add option to add fwd rule with counter
9ecc2d86171adf23796133c89610987a14624875 net/mlx4_en: add xdp forwarding and data write support
67f8b1dcb9ee7f1e165da4eb2ec53483a6b141ea net/mlx4_en: Refactor the XDP forwarding rings scheme
117d15bbfde643b5bd0a173fddaa0e6c65f14d47 RDS: TCP: start multipath acceptor loop at 0
ae9f83ac24569e4bfc7c174be362d1835233c28f net/mlx5: Move alloc/dealloc encap commands declarations to common header file
43f93839e359c8044200ec3f6fa455b47ba3aa2c net/mlx5: Check max encap header size capability
4a25730eb202893cd79b885df8f6fa1e8174742f net/mlx5e: Add ndo_udp_tunnel_add to VF representors
905dd4184e0732de41d6ee3c7b06e0cfdd9f0aad RDS: TCP: Track peer's connection generation number
1a0e100fb2c9667cea2a7d755faaa83569942f05 RDS: TCP: Force every connection to be initiated by numerically smaller IP address
d4eb4cd78b0774c7061db56844ed2ea7790cc77c net/mlx5: Add handling for port module event
ab677ff4ad15bc26c359490ee201557f3a6d20df cxgb4: Allocate Tx queues dynamically
dad42c3038a59d27fced28ee4ec1d4a891b28155 mlx4: avoid unnecessary dirtying of critical fields
20a1ea6747836e841feb1941892b9baa1dbcd0fb net/mlx5e: Support VF vport link state control for SRIOV switchdev mode
34e4e99078667d30f71a50c1e5181e4270e9d8bb net/mlx5: Enable to query min inline for a specific vport
bffaa916588ebb065cfa0287195d9ad35612eecf net/mlx5: E-Switch, Add control for inline mode
e3f42f8453902d1520dcdc9909731f274c6d52c1 mlx4: reorganize struct mlx4_en_tx_ring
619228d86b0e32e00758dcf07ca5d06903d9a9d7 cxgb4: fix memory leak on txq_info
eafa6abd99eadb8971c01a4c591295ac4d8d0a9b net/mlx5: remove a duplicate condition
3a6a931dfb8e49a7377825b465d84e110fe89f68 net/mlx5e: Support DCBX CEE API
820c2c5e773d283ab102f1b64618e2ddfbb975ef net/mlx5e: Read ETS settings directly from firmware
e207b7e991768b724f6d216de49c9b800e203eed net/mlx5e: ConnectX-4 firmware support for DCBX
0eca995f3ede3a4fc77e0ea29a7a6c0a4c4fde0f net/mlx5e: Add DCBX control interface
d605d6686dc7e7c767cd2dbf89a4ebd195891212 net/mlx5e: Add support for ethtool self diagnostics test
0952da791c97477da52fbdb2242477d781b9f37e net/mlx5e: Add support for loopback selftest
59ece1c9693914f969eb896906889591c4d2f172 net/mlx5e: Moves pflags to priv->params
9bcc86064bb5006257e3367fc4439f4072d82442 net/mlx5e: Add CQE compression user control
40931b85113dad7881d49e8759e5ad41d30a5e6c mlx4: give precise rx/tx bytes/packets counters
62aee0e3028614588a14e19979cd3f7b97948505 xprtrdma: Cap size of callback buffer resources
8d38de65644d900199f035277aa5f3da4aa9fc17 xprtrdma: Make FRWR send queue entry accounting more accurate
5e9fc6a06bba9e6821ce964067fcf4401496bc29 xprtrdma: Support for SG_GAP devices
48016dce46ad504a378849490bfb99c98be5cfaa xprtrdma: Avoid calls to ro_unmap_safe()
a100fda1a2e1fa6c52373b9c7985a0bd3459bf4c xprtrdma: Refactor FRMR invalidation
289400af2b8783b3b01aee7ec9dba5b476bb3450 xprtrdma: Update documenting comment
3a72dc771cc38e4d6e441a86256a3d7788a84c01 xprtrdma: Relocate connection helper functions
e7922729bef4474c5817fa2184154a1698757d48 crypto: chcr - Use SHASH_DESC_ON_STACK
9a16a34d2146e1bcfad6c6ae6d214d645b424265 svcrdma: Remove unused variables in xprt_rdma_bc_allocate()
3608ae77c098dfe134103a9dec4c78687896708e net/mlx5e: Move function mlx5e_create_umr_mkey
ec8b9981ad3f3eeb5dcc4f237266e897c363f896 net/mlx5e: Create UMR MKey per RQ
d709b2a186761bc038c99c2f744c7218f2d249bd net/mlx5e: skip loopback selftest with !CONFIG_INET
726293f1f851242c1c308e71ef9dfd0c2251f94a net/mlx5e: Save the represntor netdevice as part of the representor
7f7bf1606fa8fa0e3aecdeac0ba8005f2a0fbdef mlx4: fix use-after-free in mlx4_en_fold_software_stats()
a0b3455fcb2d1b3e486349a4a51803c3cb3847b5 IB/core: Remove debug prints after allocation failure
15d4626e498c09b66c0f74a107a83bd95abb175c IB/mlx4: Remove debug prints after allocation failure
907610bfdf1a7f3d173a9593fde70f67d63476d1 IB/rxe: Remove and fix debug prints after allocation failure
6e40b59cfa99710fcbf849439783e8fc98d183bf IB/hfi1: Remove definition of unused hfi1_affinity struct
9d8145a604937780898c0e4bdb124a57988fc2ed IB/hfi1: Avoid credit return allocation for cpu-less NUMA nodes
a0fa72683e78979ef1123d679b1c40ae28bd9096 IB/rxe: avoid putting a large struct rxe_qp on stack
4ac4707102d9ea1ffc9b5735891f6c5ee3d236e5 IB/rxe: Use DEFINE_SPINLOCK() for spinlock
95db9d05b717b1ec242799103c09acda8d728974 IB/rxe: Remove unneeded cast in rxe_srq_from_attr()
6e9bb530ff8b07b3bbce79c937fc9dcb32da4eb9 IB/rxe: Remove buffer used for printing IP address
dd753d87436ce7ef2a958d684b38d5acc99c9f5c IB/rxe: Advance the consumer pointer before posting the CQE
2a7a85487e5432424eef7a394ed26ef1d8f0d192 IB/rxe: Don't update the response PSN unless it's going forwards
d38eb801aa145aedf4b97e8e0bb2e65763aa6149 IB/rxe: Unblock loopback by moving skb_out increment
d4fb59256ac03d84f68e36c430b58d6fc76dd651 IB/rxe: Add support for zero-byte operations
accacb8f51c299965939ac56926d1c718e2691a1 IB/rxe: Add support for IB_CQ_REPORT_MISSED_EVENTS
5b9ea16c5488e577b26cc198ac63550b746ce3b9 IB/rxe: Fix ref leak in rxe_create_qp()
5407f530122aa63cf304eb0874c938b3bdb8d3fb IB/rxe: Fix ref leak in duplicate_request()
07bf9627d5f1c0334fc543a5435a31a3b5907944 IB/rxe: Wait for tasklets to finish before tearing down QP
37f69f43fb5aba4288d38ea32bbe0dfdb412c763 IB/rxe: Hold refs when running tasklets
d680ebed91e0b45c43ae03a880a0b43211096161 IB/rxe: Increase max number of completions to 32k
c226dc22ec4904340e3e14a536983cda3dbe7914 net/mlx5: Report multi packet WQE capabilities
2d1e697e9b716b8a692bc9c197e5f4ffd10d7307 IB/mlx5: Add support to match inner packet fields
477864c8fcd953e5a988073ca5be18bb7fd93410 IB/core: Let create_ah return extended response to user
d012f5d6f8597f936f44c79e46345fda86dcff4d IB/mlx5: Refactor registration to netdev notifier
45f95acd63222dd1dc752fa904536327b10f1082 IB/mlx5: Rename RoCE related helpers to reflect being Eth ones
ca5b91d63192ceaa41a6145f8c923debb64c71fa IB/mlx5: Support RAW Ethernet when RoCE is disabled
7d29f349a4b9dcf5bc9dcc05630d6a7f6b6b3ccd IB/mlx5: Properly adjust rate limit on QP state transitions
ea7ef2accdeaf825165cccd60b848765677bf1f2 qedr: return -EINVAL if pd is null and avoid null ptr dereference
181d80151f9c6ff3c765c1bd2e4e200ada23c2f3 qedr: Fix possible memory leak in qedr_create_qp()
aafec388a1b7fc533a81c03b4a81c6e5f3e5688f qedr: Use list_move_tail instead of list_del/list_add_tail
aecb66b2b01a87b4b723267b9193c8f00d661c1f qedr: remove pointless NULL check in qedr_post_send()
6efaf10f163d9a60d1d4b2a049b194a53537ba1b IB/rdmavt: Avoid queuing work into a destroyed cq kthread worker
d3ea547853852481dc5eba6d4cb13adab1564d0b rdma: fix buggy code that the compiler warns about
626bc02d4d33510b6ecb6f37c577f844cc6cfc57 mlx5: Use { } instead of { 0 } to init struct
b7b44fd23e6d2a896c6efbe85b39862f14aae11a net: chelsio: cxgb3: use new api ethtool_{get|set}_link_ksettings
e259934d4df7f99f2a5c2c4f074f6a55bd4b1722 IB/rxe: Fix a memory leak in rxe_qp_cleanup()
f7fb138389aac97fe165c9b8fe4dcfeb97a78d06 net/mlx5: use rb_entry()
c7eb3bced78fe83119b90d730ab58a572eb80e29 qedr: configure the number of CQEs on CQ creation
a121135973ca816821f4ff07aed523df82a91b8e qedr: return error if destroy CQ failed
d6ebbf29c3015bdccef388a860ac4ef6772531f8 qedr: return correct value on modify qp
b4c2cc48aa0be767281669bff9f230e81ef27c56 qedr: modify QP state to error when destroying it
8b0cabc650a95a4f44de99aae6e8c128d70a40cd qedr: ignore inline flag in read verbs
922d9a40d3baeb30bfecb59b2c083ccec4b349d7 qedr: post_send/recv according to QP state
27035a1b37fc284b59a2bca4cf2f910ebf03717f qedr: clear the vendor error field in the work completion
74c3875c3d9aad356ae27fc4f4176d4dc89c457b qedr: Always notify the verb consumer of flushed CQEs
37b36193946e4fe7af2c3965e394eb311ab6601d IB/rxe: Use BTH_PSN_MASK when ACKing duplicate sends
cbf1f9a46c9c5903e34b0b110ca40b1e7d4b2ab1 IB/rxe: Drop future atomic/read packets rather than retrying
5cc8fabc5e4c588c75a5ec21423e7c3425f69f48 IB/rxe: Don't check for null ptr in send()
eb9def61be7197669cab51f43789b53aa7a69509 net/mlx4_en: Fix user prio field in XDP forward
9da34cd34e85aacc55af8774b81b1f23e86014f9 net/mlx5: Disable RoCE on the e-switch management port under switchdev mode
689a248df83b6032edc57e86267b4e5cc8d7174e net/mlx5: Cancel recovery work in remove flow
077b1e8069b9b74477b01d28f6b83774dc19a142 net/mlx5: Mask destination mac value in ethtool steering rules
9b8c514291a83e53c073b473bdca6267f17a02c2 net/mlx5: Release FTE lock in error flow
465db5dab86d6688fa5132edd1237102f4a20e84 Revert "net/mlx5e: Expose PCIe statistics to ethtool"
4525a45bfad55a00ef218c5fbe5d98a3d8170bf5 net/mlx5e: Check ets capability before initializing ets settings
610e89e05c3f28a7394935aa6b91f99548c4fd3c net/mlx5e: Don't sync netdev state when not registered
37f304d10030bb425c19099e7b955d9c3ec4cba3 net/mlx5e: Disable netdev after close
c12a67fec8d99bb554e8d4e99120d418f1a39c87 iw_cxgb4: free EQ queue memory on last deref
3deef8cea3efcaeeae240bb00541de66abb9bfa0 net/mlx5e: Un-register uplink representor on nic_disable
0bbcc0a8fc394d01988fe0263ccf7fddb77a12c3 net/mlx5e: Remove WARN_ONCE from adaptive moderation code
5e44fca5047054f1762813751626b5245e0da022 net/mlx5: Only cancel recovery work when cleaning up device
0629a330cf55454962168dd3ee46fad53a39323e qed: avoid possible stack overflow in qed_ll2_acquire_connection
e048fc50d7bde23136e098e04a324d7e3404408d net/mlx5e: Do not recycle pages from emergency reserve
b1a27eac7fefff33ccf6acc919fc0725bf9815fb IB/cxgb3: fix misspelling in header guard
097b615965fb1af714fbc2311f68839b1086ebcb RDMA/qedr: Fix MTU returned from QP query
20f5e10ef8bcf29a915642245b66e5a132e38fc4 RDMA/qedr: Add uapi header qedr-abi.h
59e8970b3798e4cbe575ed9cf4d53098760a2a86 RDMA/qedr: Return max inline data in QP query result
91bff997db2ec04f9ba761a55c21642f9803b06c RDMA/qedr: Remove CQ spinlock from CM completion handlers
c78c31496111f497b4a03f955c100091185da8b6 RDMA/qedr: Don't spam dmesg if QP is in error state
933e6dcaa0f65eb2f624ad760274020874a1f35e RDMA/qedr: Don't reset QP when queues aren't flushed
27a4b1a6d6fcf09314359bacefa1e106927ae21b RDMA/qedr: Mark three functions as static
1a59075197976611bacaa383a6673f9e57e9e98b RDMA/qedr: Fix formatting
af2b14b8b8ae21b0047a52c767ac8b44f435a280 RDMA/qedr: Fix RDMA CM loopback
9c1e0228ab35e52d30abf4b5629c28350833fbcb RDMA/qedr: Fix and simplify memory leak in PD alloc
f449c7a2d822c2d81b5bcb2c50eec80796766726 RDMA/qedr: Dispatch port active event from qedr_add
f39f775218a7520e3700de2003c84a042c3b5972 IB/rxe: Fix rxe dev insertion to rxe_dev_list
2d4b21e0a2913612274a69a3ba1bfee4cffc6e77 IB/rxe: Prevent from completer to operate on non valid QP
9eb7892351a3a3b403d879b41c4e6efb2c96516f net/mlx5: Change ENOTSUPP to EOPNOTSUPP
eff596da48784316ccb83bef82bc1213b512d5e0 net/mlx5: Return EOPNOTSUPP when failing to get steering name-space
5403dc703ff277f8a2a12a83ac820750485f13b3 net/mlx5: E-Switch, Err when retrieving steering name-space fails
5bae8c031053c69b4aa74b7f1ba15d4ec8426208 net/mlx5: E-Switch, Re-enable RoCE on mode change only after FDB destroy
a100ff3eef193d2d79daf98dcd97a54776ffeb78 net/mlx5e: Fix update of hash function/key via ethtool
d15118af268324ecfc968dd90396e966f4f9b3ff net/mlx5e: Check ets capability before ets query FW command
f32b20e89e82c9ff1825fc5c5d69753ff5558ccd mlx4: Fix memory leak after mlx4_en_update_priv()
628f07d33c1f2e7bf31e0a4a988bb07914bd5e73 IB/rxe: Fix resid update
647bf3d8a8e5777319da92af672289b2a6c4dc66 IB/rxe: Fix mem_check_range integer overflow
49524b3c6e12375627ddd870613fcc6b24909898 scsi: megaraid_sas: add correct return type check for ldio hint logic for raid1
874d025da667d19b728141437ccbefe9dbaf9e7b scsi: megaraid_sas: raid6 also require cpuSel check same as raid5
19469a873bafd4e65daef3597db2bd724c1b03c9 flow_dissector: Use IPv6 flow label in flow_dissector
5af7fb6e3e92c2797ee30d66138cf6aa6b29240d flow-dissector: Fix alignment issue in __skb_flow_get_ports
d8b9605d2697c48fb822c821c5751afbb4567003 net: sched: fix skb->protocol use in case of accelerated vlan path
63c0ad4d4135d3bdb81a1ee42436f3a403632a3e sched: Call skb_get_hash_perturb in sch_sfb
ada1dba04c273dbabefff6a9a9f8c2bdcb61a858 sched: Call skb_get_hash_perturb in sch_sfq
1bd758eb1cab2fa5b71a23f9e5d3c8076f4ed650 net: change name of flow_dissector header to match the .c file name
b0a31431b4d81fb1ccc36ce64ce3fe6a0aca4031 flow_dissector: remove unused function flow_get_hlen declaration
10b89ee43e849544eddfe34e535341fc077464ec net: move *skb_get_poff declarations into correct header
d4fd32757176d1b03533770ef75aa2b781fa5667 flow_dissector: fix doc for __skb_get_hash and remove couple of empty lines
9c684b5083bc191c4b7b189c73d75587e167a474 net: move __skb_get_hash function declaration to flow_dissector.h
5605c76240aadc823e3d46ac9afde2f26fbcf019 net: move __skb_tx_hash to dev.c
06635a35d13d42b95422bba6633f175245cc644e flow_dissect: use programable dissector in skb_flow_dissect and friends
b924933cbbfbdcaa2831a39780c116ec6e48c397 flow_dissector: introduce support for ipv6 addressses
67a900cc0436d74e7ff89042371760def087680d flow_dissector: introduce support for Ethernet addresses
59346afe7a5548ab3e9730aeff33993faa76abbe flow_dissector: change port array into src, dst tuple
c9b8af1330198ae241cd545e1f040019010d44d9 flow_dissect: call init_default_flow_dissectors() earlier
74b80e841b4da2f83d8f548f32cfe421fde85aca flow_dissector: remove bogus return in tipc section
12c227ec89a70c14e3efcf102c5babece381e172 flow_dissector: do not break if ports are not needed in flowlabel
c967a0873a7836c7a77bf611f1c7d3f47c554c45 mpls: Move reserved label definitions
78f5b899195019f71f7593c604d75ca61658eae3 mpls: Change reserved label names to be consistent with netbsd
611d23c559a328ca3f84ac120c02d5a9f88c08f5 flow_dissector: Fix MPLS entropy label handling in flow dissector
8e690ffdbcc7b548aae3c644c3efcc6e0394fe37 flow_dissector: Pre-initialize ip_proto in __skb_flow_dissect()
e5276937ae6e654a811345f0716266f12e77bede flow_dissector: Move skb related functions to skbuff.h
877d1f6291f8e391237e324be58479a3e3a7407c net: Set sk_txhash from a random number
f70ea018da0631e10c26a02f5a82d626ffef5bd7 net: Add functions to get skb->hash based on flow structures
bcc83839ffdb063dd2b0370cd85c4f825761fc59 skbuff: Make __skb_set_sw_hash a general function
c6cc1ca7f4d70cbb3ea3a5ca163c5dabaf155cdb flowi: Abstract out functions to get flow hash based on flowi
a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0 flow_dissector: Jump to exit code in __skb_flow_dissect
cd79a2382aa5dcefa6e21a7c59bb1bb19e53b74d flow_dissector: Add flags argument to skb_flow_dissector functions
807e165dc44fd93f9d378f861f0540a158d7343a flow_dissector: Add control/reporting of fragmentation
8306b688f1a6621b9efe3b0d827e26750528b12a flow_dissector: Add flag to stop parsing at L3
872b1abb1ed47a691f465fb3d285f6cf6bcd8663 flow_dissector: Add flag to stop parsing when an IPv6 flow label is seen
823b96939578eae67b9d6c0e33a39d6a7b6401e7 flow_dissector: Add control/reporting of encapsulation
6db61d79c1e1b2346e2142d6c950a8d2e8380b82 flow_dissector: Ignore flow dissector return value from ___skb_get_hash
4b36993d3df0834eff3b4172962de0343a4d9123 flow_dissector: Don't use bit fields.
a17ace95b0f08ccbcf24946db5673c4b5ee8fcae flow: Move __get_hash_from_flowi{4,6} into flow_dissector.c
de4c1f8ba302ccf4f2b3b17dc614b0a0b14d351a flow_dissector: Fix function argument ordering dependency
20a17bf6c04e3eca8824c930ecc55ab832558e3b flow_dissector: Use 'const' where possible.
461547f3158978c180d74484d58e82be9b8e7357 flow_dissector: Fix unaligned access in __skb_flow_dissector when used by eth_get_headlen
78565208d73ca9b654fb9a6b142214d52eeedfd1 net: Copy inner L3 and L4 headers as unaligned on GRE TEB
918c023f29ab2dd8c63cfcc6a1239ee15933871a flow_dissector: Check for IP fragmentation even if not using IPv4 address
43d2ccb3c122a47524019d1831a54f07f7fcb978 flow_dissector: Fix fragment handling for header length computation
224516b3a798a0563346748744f8cd19feaf09be flow_dissector: Correctly handle parsing FCoE
b3c3106ce3f4646a008cd238b16f899ae14fd2a7 flow_dissector: Use same pointer for IPv4 and IPv6 addresses
d975ddd69698d068a8ebd294c382f1c791b380da eth: Pull header from first fragment via eth_get_headlen
8de2d793daf784f8f109565bcc023a6d198bad85 net/flow_dissector: Make dissector_uses_key() and skb_flow_dissector_target() public
eb70db8756717b90c01ccc765fdefc4dd969fc74 packet: Use symmetric hash for PACKET_FANOUT_HASH.
ab10dccb11608b96b43b557c12a5ad867723e503 rps: Inspect PPTP encapsulated by GRE to get flow hash
d5709f7ab77679d407a7687fc5ad7cc7442cc651 flow_dissector: For stripped vlan, get vlan info from skb->vlan_tci
f6a66927692e30bdc1792e7a1fc2107d4dfcf42d flow_dissector: Get vlan priority in addition to vlan id
66fdd05e7a85564f86d9b220de946aa98e8bc048 rps: flow_dissector: Add the const for the parameter of flow_keys_have_l4
635c223cfa05af9523146b2f37e119d945f449ae rps: flow_dissector: Fix uninitialized flow_keys used in __skb_get_hash possibly
3805a938a6c24284863732fd45cec5a04609a224 flow_dissector: Check skb for VLAN only if skb specified.
bc72f3dd89e087e33afe8c490fbe132e3dcd9afe flow_dissector: fix vlan tag handling
b917783c7b350518f8c5d88bb5848aa8064408a6 flow_dissector: __skb_get_hash_symmetric arg can be const
9ba6a9a9f7a42673e9fc08ff3594f64caae64d3c flow_dissector: Add enums for encapsulation keys
34fad54c2537f7c99d07375e50cb30aa3c23bd83 net: __skb_flow_dissect() must cap its return value
972d3876faa8a9195122b2d2bcd3155f904fff37 flow dissector: ICMP support
d0af683407a26a4437d8fa6e283ea201f2ae8146 flow_dissector: Update pptp handling to avoid null pointer deref.
2e4d60cbcfc2d16a2a2efaae3fe08f2e457d59a1 6lowpan: change naming for lowpan private data
353c224e28eb73e65720e5b2be224052569c0764 6lowpan: move lowpan_802154_dev to 6lowpan
7115a968b75e9f81f6f8f45b2f97b1b43e024703 6lowpan: iphc: rename add lowpan prefix
a5862f2aba4ba53d461450685a67ae252935ab94 6lowpan: move eui64 uncompress function
8626a0c83b0d471d859bcd908d016874df951fc3 6lowpan: add private neighbour data
2ad3ed59198c5404c34515cfcfd9a2b3c54d964f 6lowpan: add 802.15.4 short addr slaac
4f672235cb11c49d4be7ac7d505c65e3bd367322 addrconf: put prefix address add in an own function
cc84b3c6b48ae81748c5e25d3558872385196162 ipv6: export several functions
f997c55c1dc8841b3ee4df0493d0ac7966d42165 ipv6: introduce neighbour discovery ops
bbe5f5cefe2818eda0392c178de141ffc5734d90 6lowpan: introduce 6lowpan-nd
eab560e58208730ec47e1e0461b8db1049d5d176 6lowpan: add support for 802.15.4 short addr handling
929946a471c1d5c6c595b4094f4c56bdfceee9c7 6lowpan: ndisc: fix double read unlock
966be9e7909d616b03e644acd8a83f09bf023c5c 6lowpan: ndisc: add missing 802.15.4 only check
66e5c2672cd11b9310008099faf6a4ffb9dfb6d0 ieee802154: add netns support
9e262f5037b95a9ccc508debec2715e70559cc81 6lowpan: ndisc: set invalid unicast short addr to unspec
0a9df786a6ae2f898114bdd242b64920dedf53bd lib/kasprintf.c: introduce kvasprintf_const
ca75d601b5942e8cf5eed68f308be0526d0dac5d miscdevice: Add helper macro for misc device boilerplate
d6a38c0ba778abd6683858bfd7c768f7edab2ebb miscdevice: Use module_misc_device() macro
53f863a66904542b03204f2b115d050b04c11ba5 Bluetooth: Put led_trigger field behind CONFIG_BT_LEDS
5ddedce3b7331959a6da217ed3189d020090873c 6lowpan: ndisc: no overreact if no short address is available
d41c15cf95bd91b9c333f6f749670e22c8a47ad9 Bluetooth: Fix reason code used for rejecting SCO connections
37332ddc1470b820bd9d1eb36a2ca6ce1efb209b Bluetooth: BCSP fails to ACK re-transmitted frames from the peer
6e5ffd0f4509f7331ecebf12463f4eb5a213cf4a Bluetooth: hci_bcsp: Use setup_timer Kernel API instead of init_timer
f8244ab55200dbe074380c3388804adff03a8a19 net: aquantia: atlantic: use new api ethtool_{get|set}_link_ksettings
ff1176f6164f3d151ee64c05d3f7b6662a81b982 ethernet: aquantia: fix dma_mapping_error test
eb36bedf28be6d986bdbcfa375bab08ffa45efd8 net: aquantia: remove function aq_ring_tx_deinit
89b643889b1f56d8b53728f6153a4237c849784b net: ethernet: aquantia: Fixed memory allocation if AQ_CFG_RX_FRAME_MAX > 1 page.
1adbddef118ae8bf6409c13208645d28c29731c1 net:ethernet:aquantia: Remove adapter re-opening when MTU changed.
ea0504f554c8f989eab58549300d15582d36f039 net:ethernet:aquantia: Fix packet type detection (TCP/UDP) for IPv6.
163d4baaebe39c0e56d9c08597eab7b3ae0bf334 block: add QUEUE_FLAG_DAX for devices to advertise their DAX support
ab68f26221366f92611650e8470e6a926801c7d4 /dev/dax, pmem: direct access to persistent memory
dee410792419aaa8bc3e3b35d2ccb6515835916d /dev/dax, core: file operations and dax-mmap
bdf97013ced5f263da0dc9d559f5c09e922d8423 nfit: move to nfit/ sub-directory
6839a6d96f4ea0254266d60208c1fbbd53ade546 nfit: do an ARS scrub on hitting a latent media error
2e21807d4b131dfd4a8e5c82116a85b62f28aeec nfit, mce: Fix SPA matching logic in MCE handler
9ffd6350a103cb9e73e3abb4573c900cfead2f9b nfit: don't start a full scrub by default for an MCE
fc0c2028135c7f75fce36b90e44efb8003a9173b x86, pmem: use memcpy_mcsafe() for memcpy_from_pmem()
bd697a80c329072b991475fa6608bb0e665b3d90 pmem: reduce kmap_atomic sections to the memcpys only
3115bb02b5c23d960df5f1bf551ec394a9bb10ec pmem: report error on clear poison failure
867dfe342118b1ea0256a85f7c0d9ceb0ead032a nvdimm: make CONFIG_NVDIMM_DAX 'bool'
befa45fb5bdd514a40a19e659491193f7fd022f2 PCI: Use devm_add_action_or_reset()
ccdb07f62986968ecd687a71550ed187c8cf875c dax: cleanup needlessly global symbol warnings
043a9255021bad498e31365d104d33915b6a6e33 dax: reorder dax_fops function definitions
af69f51e506f5ad3625c817ba2449a439bbe68ef dax: rename fops from dax_dev_ to dax_
ebd84d724c85f22037a5c9cb04b9e6631309cb78 dax: embed a struct device in dax_dev
ba09c01d2fa866f22e42ac2af405fe386f491879 dax: convert to the cdev api
3bc52c45bac26bf7ed1dc8d287ad1aeaed1250b6 dax: define a unified inode/address_space for device-dax mappings
9dc1e4927bfabaf654738c9ecca3a4926a0aaeb5 dax: unmap/truncate on device shutdown
9d2d01a031a945075d4609b1c4d3c73f10ba61e7 dax: check resource alignment at dax region/device create
d0e5845561c238619de9f5b77e0d763f4c331ca5 dax: fix device-dax region base
4c3cb6e9a9d94d1553807854a565cd27ff4c22aa dax: fix mapping size check
d76911ee933a64c9dfc453e580e7ad612b394e83 dax: convert devm_create_dax_dev to PTR_ERR
bc0a0fe94f33dd15edf2ed555bfc4d6dbb5e1995 dax: use correct dev_t value
52e73eb2872c9af6f382b2b22954ca8214397a4e device-dax: fix percpu_ref_exit ordering
6a84fb4b4e439a8ef0ce19ec7e7661ad76f655c9 device-dax: check devm_nsio_enable() return value
4cb19355ea19995941ccaad115dbfac6b75215ca device-dax: fail all private mapping attempts
325896ffdf90f7cbd59fb873b7ba20d60d1ddf3c device-dax: fix private mapping restriction, permit read-only
d7fe1a67f658b50ec98ee1afb86df7b35c2b2593 dax: add region 'id', 'size', and 'align' attributes
450c6633e874c4d38112b39647831f67b41a8067 libnvdimm: use consistent naming for request_mem_region()
d37806dc37b42b05515849b0444f09f493cb4cba libnvdimm: remove else after return in nsio_rw_bytes()
868f036fee4b1f934117197fb93461d2c968ffec libnvdimm: fix mishandled nvdimm_clear_poison() return value
d47d1d27fd6206c18806440f6ebddf51a806be4f pmem: return EIO on read_pmem() failure
bfb34527a32a1a576d9bfb7026d3ab0369a6cd60 libnvdimm, pfn: fix memmap reservation size versus 4K alignment
0134ed4fb9e78672ee9f7b18007114404c81e63f device-dax: fix pmd/pte fault fallback handling
0a70bd43053331d99881211e1d09f32de531432f dax: enable dax in the presence of known media errors (badblocks)
545ed20e6df68a4d2584a29a2a28ee8b2f7e9547 dm: add infrastructure for DAX support
beec25b4573bc310f5a12cf33207b20ecc30945c dm stripe: add DAX support
f8df1fdf18839cb4ef2035310bb9b6ec02025598 dm error: add DAX support
13bcc6a2853435bb5dad368bcbaa9d2a5b9c0ac4 sysctl: Stop implicitly passing current into sysctl_table_root.lookup
b032132c3c218f4a09e9499b3674299a752581c6 userns: Free user namespaces in process context
dbec28460a89aa7c02c3301e9e108d98272549d2 userns: Add per user namespace sysctls.
b376c3e1b6770ddcb4f0782be16358095fcea0b6 userns: Add a limit on the number of user namespaces
f6b2db1a3e8d141dd144df58900fb0444d5d7c53 userns: Make the count of user namespaces per user
25f9c0817c535a728c1088542230fa327c577c9e userns: Generalize the user namespace count into ucount
f333c700c6100b53050980986be922bb21466e29 pidns: Add a limit on the number of pid namespaces
f7af3d1c03136275b876f58644599b120cf4ffdd utsns: Add a limit on the number of uts namespaces
b236017acffa73d52eac9427f42d8993067d20fb ipc: Initialize ipc_namespace->user_ns early.
aba356616386e6e573a34c6d64ed12443686e5c8 ipcns: Add a  limit on the number of ipc namespaces
703286608a220d53584cca5986aad5305eec75ed netns: Add a limit on the number of net namespaces
537f7ccb396804c6d0057b93ba8eb104ba44f851 mntns: Add a limit on the number of mount namespaces.
df75e7748bae1c7098bfa358485389b897f71305 userns: When the per user per user namespace limit is reached return ENOSPC
880a38547ff08715ce4f1daf9a4bb30c87676e68 userns: Make ucounts lock irq-safe
040757f738e13caaa9c5078bca79aa97e11dde88 ucount: Remove the atomicity from ucount->count
321027c1fe77f892f4ea07846aeae08cefbbb290 perf/core: Fix concurrent sys_perf_event_open() vs. 'move_group' race
4ff6a8debf48a7bf48e93c01da720785070d3a25 perf/core: Generalize event->group_flags
d6a2f9035bfc27d0e9d78b13635dda9fb017ac01 perf/core: Introduce PMU_EV_CAP_READ_ACTIVE_PKG
3f1c82502c299da08b7b7f08b435212e51166ed9 audit: Audit proc/<pid>/cmdline aka proctitle
92c82e8a322b32a6cabe7d8800dc10401157a623 audit: add feature audit_lost reset
18f649ef344127ef6de23a5a4272dbe2fdb73dde sched/autogroup: Fix autogroup_move_group() to never skip sched_move_task()
8e5bfa8c1f8471aa4a2d30be631ef2b50e10abaf sched/autogroup: Do not use autogroup->tg in zombie threads
f7b8a47da17c9ee4998f2ca2018fcc424e953c0e sched: Remove lockdep check in sched_move_task()
0483e1fa6e09d4948272680f691dccb1edb9677f x86/mm: Implement ASLR for kernel memory regions
021182e52fe01c1f7b126f97fd6ba048dc4234fd x86/mm: Enable KASLR for physical mapping memory regions
a95ae27c2ee1cba5f4f6b9dea43ffe88252e79b1 x86/mm: Enable KASLR for vmalloc memory regions
90397a41779645d3abba5599f6bb538fdcab9339 x86/mm: Add memory hotplug support for KASLR memory randomization
c7d2361f7524f365c1ae42f47880e3fa9efb2c2a x86/mm/KASLR: Fix physical memory calculation on KASLR memory randomization
8266e31ed0fedb7ee16ebc86e80468f7cc1bbb4e x86, ptdump: Add section for EFI runtime services
25dfe4785332723f09311dcb7fd91015a60c022f x86/mm/64: Enable KASLR for vmemmap memory region
0549a3c02efb350776bc869685a361045efd3a29 kdump, vmcoreinfo: report memory sections virtual addresses
69f58384791ac6da4165ce8e6defd6f408f4afdf Revert "kdump, vmcoreinfo: report memory sections virtual addresses"
1303a27c9c32020a3b6ac89be270d2ab1f28be24 kexec: export KERNEL_IMAGE_SIZE to vmcoreinfo
401721ecd1dcb0a428aa5d6832ee05ffbdbffbbe kexec: export the value of phys_base instead of symbol address
5773ebfee729acf93b330664eab4c8d77edc2193 x86/kconfig: Remove misleading note regarding hibernation and KASLR
11dfbf588ae697bc5362c24294c2605f09c2d3d4 powerpc: mark xer clobbered in csum_add()
5a8847c83ce6072d6fdf0d15d9aa060c0b83537f powerpc: simplify csum_add(a, b) in case a or b is constant 0
f9d4286b9516b02e795214412d36885f572b57ad arch/powerpc: Update parameters for csum_tcpudp_magic & csum_tcpudp_nofold
b492f7e4e07a28e706db26cf4943bb0911435426 powerpc/64: Fix checksum folding in csum_tcpudp_nofold and ip_fast_csum_nofold
d4fde568a34a93897dfb9ae64cfe9dda9d5c908c powerpc/64: Use optimized checksum routines on little-endian
6ad966d7303b70165228dba1ee8da1a05c10eefe powerpc/64: Fix checksum folding in csum_add()
6e978b22efa1db9f6e71b24440b5f1d93e968ee3 cpufreq: intel_pstate: Disable energy efficiency optimization
9a3fcf912ef7f5c6e18f9af6875dd13f7311f7aa iwlwifi: mvm: cleanup pending frames in DQA mode
7c468447f40645fbf2a033dfdaa92b1957130d50 crypto: ccp - Assign DMA commands to the channel's CCP
13b1f4a571cc1ffe9c7d5bb894318cabdd81fcc2 tpm_crb: map locality registers
38eb24ebb01f875f812aa869c4cd62959510111c tpm_crb: encapsulate crb_wait_for_reg_32
877c57d0d0cac2c8fc661f708d8ee3fa7aa8d28b tpm_crb: request and relinquish locality 0
9ff2007bea1f1bfc53ac0bc7ccf8200bb275fd52 mei: me: add lewisburg device ids
c6240cacdb2c3cb56a21fb3ea0c105154ab87a2a mei: don't wait for os version message reply
1e128c81290a419ab9ec8b09fe989f1c6c15a0f4 qed: Add support for hardware offloaded FCoE.
1c7de2b4ff886a45fbd2f4c3d4627e0f37a9dd77 PCI: Enable access to non-standard VPD for Chelsio devices (cxgb3)
dd3aa3b5fbf61adb0ef5d44a6753646b767b9c77 cls_flower: Fix compile error
ff3532f2655b79058fec035ca54fced69a483084 sched: cls_flower: fix panic on filter replace
66530bdf85eb1d72a0c399665e09a2c2298501c6 sched,cls_flower: set key address type when present
10cbc6843446165ee250e1ee80dc19ee325f1e6d net/sched: cls_flower: Hardware offloaded filters statistics support
e69985c67c33f1d981a87986237366e83a8f0e13 net/sched: cls_flower: Introduce support in SKIP SW flag
92c075dbdeed02bdf293cb0f513bad70aa714b8d net: sched: fix tc_should_offload for specific clsact classes
e8eb36cd8ca93f52f738c6087073202c44ac7746 net/sched: flower: Return error when hw can't offload and skip_sw is set
339ba878cfb01b68de3d281ba33fd5e4c9f76546 net_sched: flower: Avoid dissection of unmasked keys
9399ae9a6cb28ebac78216f715ace3b42f1c2132 net_sched: flower: Add vlan support
0b498a52778368ff501557d68c7b50878ab1701e net_sched: fix use of uninitialized ethertype variable in cls_flower
d817f432c2ab7639a4f69de73eafdc55e57c45ad net/ip_tunnels: Introduce tunnel_id_to_key32() and key32_to_tunnel_id()
bc3103f1ed405de587fa43d8b0671e615505a700 net/sched: cls_flower: Classify packet in ip tunnels
aa72d708373dacfa690960b336543b867784b350 net/sched: cls_flower: Support masking for matching on tcp/udp ports
a53d850a79c39b97a2d954d0db5c481c44e8dc7c net/sched: cls_flower: Remove an unused field from the filter key structure
37a6c1512314d2439ef7136d773d5a470e0996b9 net/sched: cls_flower: Specify vlan attributes format in the UAPI header
5a7a5555a362f60350668cd124df9a396f546c61 net sched: stylistic cleanups
eb523f42d77a43f80bb9c57a34fbdc8406c7b075 net/sched: cls_flower: Use a proper mask value for enc key id parameter
a1a8f7fe92a23af30d5e766316452b5312061fa2 net/sched: cls_flower: add missing unbind call when destroying flows
13fa876ebd03e90cd528c387410a9eb0b9c8de3f net/sched: cls_flower: merge filter delete/destroy common code
5976c5f45c40588b90dda173ded9010917f8f45e net/sched: cls_flower: Support matching on SCTP ports
519d10521cd3049f9500a1f4709ec1719a18540f net/sched: cls_flower: Allow setting encapsulation fields as used key
f4d997fd613001e612543339e0275c037f94ffe9 net/sched: cls_flower: Add UDP port to tunnel parameters
725cbb62e7ade1bb29aa21a902d74e72b42a0f3d sched: cls_flower: remove from hashtable only in case skip sw flag is not set
55330f05969437c5d22fcc2ae2e54810b5236b7b net/sched: Add separate check for skip_hw flag
796852197c7a1a3a69ee5184d68bf16885bef65b net/sched: cls_flower: Try to offload only if skip_hw flag isn't set
3036dab670bae38f2ece608e69232f5b20aa6015 net/sched: cls_flower: Provide a filter to replace/destroy hardware filter functions
255cb30425c0ced57d6d85f3e7cddb99b9576046 net/sched: act_mirred: Add new tc_action_ops get_dev()
2734437ef3c2943090d0914bf91caa6b30451615 net_sched: move tc offload macros to pkt_cls.h
7091d8c7055d7310339435ae3af2fb490a92524d net/sched: cls_flower: Add offload support using egress Hardware device
a6e169312971219a34927e8fdece60046fafb8ba net/sched: cls_flower: Set the filter Hardware device for all use-cases
faa3ffce78298b2b782297765cffd05f52fed9d4 net/sched: cls_flower: Add support for matching on flags
7b684884fbfab33251115fa5054fb821c34b93be net/sched: cls_flower: Support matching on ICMP type and code
970bfcd09791282de7de6589bfe440eb11e2efd2 net/sched: cls_flower: Use mask for addr_type
f93bd17b916959fc20fbb7dc578e1f2657a8c343 net/sched: cls_flower: Use masked key when calling HW offloads
d9724772e69cb8076231202292665ca74eec13e1 net/sched: cls_flower: Mandate mask when matching on flags
0df0f207aab4f42e5c96a807adf9a6845b69e984 net/sched: cls_flower: Fix missing addr_type in classify
55733350e5e8b70c5e54a30dbf98148c695f21f5 flow disector: ARP support
99d31326cbe6951872af5c8a6bc2679388a4d9ef net/sched: cls_flower: Support matching on ARP
a3308d8fd1f58c67aaae52d9468791c2082ab2c7 net/sched: cls_flower: Disallow duplicate internal elements
39b7b6a6247568f99df059e8a4c9bd674f6b99ac net/sched: cls_flower: reduce fl_change stack size
040587af31228d82c52267f717c9fcdb65f36335 net/sched: cls_flower: Correct matching on ICMPv6 code
69ca05ce9dec2cc95070df7f1f10ea6c9c12d237 sched: cls_flower: expose priority to offloading netdevice
749e6720d2ee10d5221d5d7b8cee8ac5d1cd690e net/sched: cls_flower: Properly handle classifier flags dumping
55593960d0d88c6d80b7b3a615dbe09de85f2541 net/sched: cls_flower: Reflect HW offload status
548ed722465b763841252bf74b7eda52cfc9131c act_mirred: fix a typo in get_dev
57b68ec2a7be9a7e9f8999850f8ee5baa49023e4 flow dissector: check if arp_eth is null rather than arp
e04a01837729663572baf7164100e28265de7ed8 net/mlx5: Consolidate flow rules regardless their flow tag
2ac693f9953a2787f942abcbea5d1dc22a310932 IB/mlx5: Add flow tag support
f9a1ef720e9e32bc6a4a382c15ac77d62749c79e net/mlx5: Add MTPPS and MTPPSE registers infrastructure
cfdcbceaeffc669b70d904d80a2df9c86c232566 net/mlx5: Expose PCAM, MCAM registers infrastructure
c835ad64683bd3e2d1b31ed2cb1ff4366932edb1 net/mlx5: Implement PCAM, MCAM access register commands
71862561f3a62015a11de16d1c306481e8415c08 net/mlx5: Query and cache PCAM, MCAM registers on initialization
9c7262399ba12825f3ca4b00a76d8d5e77c720f5 net/mlx5e: Expose PCIe statistics to ethtool
701052c578195e6e02a22647fa6fd1c90c31dafd net/mlx5: Move cached hca caps to designated caps struct
3dd69e3dd21969a34406862ae299538e2e6387e7 net/mlx5e: Reorder update stats
4e00338a61998de3502d0428c4f71ffc69772316 bnxt_en: Reject driver probe against all bridge devices
17086399c113d933e1202697f85b8f0f82fcb8ce bnxt_en: fix pci cleanup in bnxt_init_one() failure path
3c2217a675bac22afb149166e0de71809189850d bnxt_en: Perform function reset earlier during probe.
bc39f885a9c3bdbff0a96ecaf07b162a78eff6e4 bnxt_en: Check if firmware LLDP agent is running.
f646f325a829d73abc708088d2b67cd11b775fdf scsi: ipr: Error path locking fixes
ad4830051aac0b967add82ac168f49edf11f01a0 x86/platform/uv: Fix calculation of Global Physical Address
2d16e0fd3265b42648d267b7adb837db9798edaf mm/slab.h: fix argument order in cache_from_obj's error message
d38a8c622a1b382336c3e152c6caf4e11d1f1b2a dmaengine: prepare for generic 'unmap' data
f067025bc676ba8d18fba5f959598339e39b86db dmaengine: add support to provide error result from a DMA transation
45c463ae924c62af4aa64ded1ca831f334a1db65 dmaengine: reference counted unmap data
8971646294bda65f8666b60cb2cb3d5e172c99bf async_memcpy: convert to dmaengine_unmap_data
c529aa30337b928bd6bc34293608cb3d4505856e NTB: Xeon Doorbell errata workaround
9fec60c41416c9c40ec520bb79064345d2396632 NTB: Fix NTB-RP Link Up
58b889206ea4ba75a57986e223da647f91ba1a19 NTB: Document HW errata
78958433db077b339f3a039890148561086574e4 NTB: Enable Snoop on Primary Side
c8eee3795d68d4b7448ce9e6752de379d9fe2c23 NTB: Fix typo in setting one translation register
53ca4fea0bbe966b3123509125898b286a136f47 NTB: Code Style Clean-up
6465d02ee15f7a45339b7e7859d0a0f22100ca87 NTB: debugfs device entry
b775e85bdb0395077a23bc072c4a62986883e276 ntb: move platform detection to separate function
1db97f258966878317ece10868eaca99201d5884 ntb: conslidate reading of PPD to move platform detection earlier
069684e888da73f175da0f10fe26da4f450d8c18 ntb: use errata flag set via DID to implement workaround
ab760a0c5667519b375ea9c5ab3a23501c4817ef ntb: Adding split BAR support for Haswell platforms
ebaad1322d8080a1a8367ec631b345405d9879e2 ntb: initialize max_mw for Atom before using it
ec110bc7cc48d7806c9b65094e6afb19452d458f NTB: Move files in preparation for NTB abstraction
a1bd3baeb2f18b2b3d0f98ce5fdaa725149b950b NTB: Add NTB hardware abstraction layer
e26a5843f7f5014ae4460030ca4de029a3ac35d3 NTB: Split ntb_hw_intel and ntb_transport drivers
0f69a7dff94d3e82ee51685f6a8fea7860b023b8 NTB: Read peer info from local SPAD in transport
5ae0beb6bcb781ba0439618a4883fdb243916f46 NTB: Enable link for Intel root port mode in probe
dd5d4d8edb6b40f75e5c8f0db65a4562bffc2e00 NTB: Check the device ID to set errata flags
e22e0b9dcf78ee7a72561a6770c9ea554eb65096 NTB: Differentiate transport link down messages
c0900b33d1c8c24246eaedb9553f078024c332fc NTB: Do not advance transport RX on link down
2849b5d70641db76f9b674d00c6d204892c51515 NTB: Reset transport QP link stats on down
42fefc86a680f975e2816cd86c4ba50069766ef6 NTB: Add parameters for Intel SNB B2B addresses
963de4739fb4f8fa8d5cd87969109a7d3282ed13 NTB: Add ping pong test client
578b881ba9c4b253482903bf8fae438318f5629b NTB: Add tool test client
2876228941ac5dcab12854aa5a3462b3f2274b09 NTB: Rate limit ntb_qp_link_work
1199aa61264a74717bc747e7031673242bad5119 NTB: Use NUMA memory and DMA chan in transport
0e041fb5369975c183d22ffeb156ea0dae760088 NTB: Use NUMA memory in Intel driver
06917f753547e6bba8a5d17f79971d1c071a70dd NTB: Improve performance with write combining
a41ef053f700618f5f55a1dd658908a71163400b NTB: Default to CPU memcpy for performance
2f887b9a44015a8146d52e40bef9e2b7bc6cd275 NTB: Rename Intel code names to platform names
7eb387813db6730a5793cd53077b4039d948d17f NTB: Print driver name and version in module init
fd839bf88485878ec602dbb3146fd44769eb3784 NTB: Change WARN_ON_ONCE to pr_warn_once on unsafe
bf44fe4671f97ee17d178e08c2d3b346188d062b NTB: Add split BAR output for debugfs stats
da2e5ae56164b86823c1bff5b4d28430ca4a7108 NTB: Fix ntb_transport out-of-order RX update
c8650fd03d320e9c39f44435a583933cacea5259 NTB: Fix transport stats for multiple devices
8b5a22d8f18496f5921ccb92554a7051cbfd9b0c NTB: Schedule to receive on QP link up
8c9edf63e75f036b42afb4502deb20bbfb5004b4 NTB: Fix zero size or integer overflow in ntb_set_mw
30a4bb1e5a9d7e283af6e29da09362104b67d7aa NTB: Fix dereference before check
e74bfeedad08180b968d8613dcde141ffb0720c3 NTB: Add flow control to the ntb_netdev
0a5d19d9f046d770776508fdde959d2a42bce9f7 NTB: Add PCI Device IDs for Broadwell Xeon
315100004fd6d9189b033f3bf9c5eba9eb906705 NTB: Make the transport list in order of discovery
d98ef99e378b0d5c42be928d6f2abe08a5f9ce53 NTB: Clean up QP stats info
905921e74864e80228e7f8cfe75315cd0a8cada8 NTB: Remove dma_sync_wait from ntb_async_rx
569410ca756cd3ebb15609cb6828a8393fb6384d NTB: Use unique DMA channels for TX and RX
2aa2a77a489deda473c99a4c15074d092718912c NTB: Improve index handling in B2B MW workaround
9a07826f99034202dad589285a47132685d9538b NTB: Fix range check on memory window index
04afde45e096201f8fd74c1db848a5d85d1aa57d NTB: Fix issue where we may be accessing NULL ptr
d4adee09fd1cf65189cb8901eb7506aea3e869ac NTB: fix access of free-ed pointer
c92ba3c5d97de59c016d1a23ebab17293a792621 NTB: invalid buf pointer in multi-MW setups
8b782fab4da771c97a198f6cb496d124dace36fd NTB: unify translation addresses
fdcb4b2e78220bde95ce4ba3213088e3a1f1cec6 NTB: fix 32-bit compiler warning
703872c2c53b57ac14563e64c2df086ef57690f9 NTB: Clear property bits in BAR value
8c874cc140d667f84ae4642bb5b5e0d6396d2ca4 NTB: Address out of DMA descriptor issue with NTB
a1b3695820aa490e58915d720a1438069813008b NTB: Add support for AMD PCI-Express Non-Transparent Bridge
03beaec80d57e7a540b1990188f8a97a076da6de NTB: Fix macro parameter conflict with field name
1985a88107b5330b2a911ad4d279e1bd7e4deb24 ntb: perf test: fix address space confusion
e902133162afd6437e372d74f2d305b0b4cc16d6 ntb: stop tasklet from spinning forever during shutdown.
84f766855f61ed2e5d07f0ec737b15ee687afb92 ntb: stop link work when we do not have memory
ee5f750f1c9d675028ecedc5439b7171f6647cb8 ntb: add missing setup of translation window
2572c7fb4e4b941af9a0206ac8093d362ae6d371 ntb: fix possible NULL dereference
ddc8f6feec76b5deea8090db015920a283006044 NTB: Fix incorrect return check in ntb_perf
838850ee0bb97fc60ca8f1de3bf12ed0854f6173 NTB: Fix incorrect clean up routine in ntb_perf
4f1b50c3e3082b31c94cee2b897bd9f5d0f3e7c8 NTB: Remove _addr functions from ntb_hw_amd
c792eba12cd200e67d08e20a22763ff1970a685b ntb_tool: Fix infinite loop bug when writing spad/peer_spad file
625f0802e84e47760959a5015fdc704d809fd6c8 ntb_tool: BUG: Ensure the buffer size is large enough to return all spads
a754a8fcaf383be3c5fcc6c3c08e36d9f3005988 NTB: allocate number transport entries depending on size of ring size
4aae977721f0367809cdc94584b6945073d9fe10 ntb_perf: Allow limiting the size of the memory windows
8b71d285061181f91194114cc7dabce73185eed1 ntb_tool: Add memory window debug support
19645a077120c6417e9dc5ad469c45194cf78a82 ntb_transport: Check the number of spads the hardware supports
fd2ecd885bab8e456298d0b702806ea736456c62 ntb_perf: Schedule based on time not on performance
da573eaa3a13f60efafcbe25e4f4465cf1a1b40b ntb_perf: Improve thread handling to increase robustness
58fd0f3b1539a5bad451a823c9d039ea23387b23 ntb_perf: Return results by reading the run file
26dc638ae6e32bddfb8d3da0fc93946955c28c78 ntb_perf: Wait for link before running test
717146a2a8cbf6dbcb8fdf4ae7cddd2d6074161c ntb_tool: Postpone memory window initialization for the user
bfcaa39652bf64294261415e5fa18ef0445a4d74 ntb_tool: Add link status and files to debugfs
20572ee1c577609f38b56b81c760dcb4151f1dbf ntb_pingpong: Add a debugfs file to get the ping count
35539b54ac339e2b2dee8c74bc9f0b06f11b11cf ntb_perf: clear link_is_up flag when the link goes down.
4089527388808ca380af908fdbdd3d723cc9e751 NTB: ntb_hw_intel: show BAR size in debugfs info
95f1464f695055c72de6044d7c8a2a7a1e0c7ea2 NTB: ntb_hw_intel: use local variable pdev
9cabc2691e9d21b840b145a944f09299f895a7e0 ntb: add DMA error handling for TX DMA
72203572afd7aef243c182f19925e5a77a1dc6a1 ntb: add DMA error handling for RX DMA
cedecbc5e0f39d2987b8e1004908e90459a82e78 ntb_pingpong: Fix db_init parameter description
49b89de41f8d97eb13a60c1865ed61fbebed0d15 NTB: ntb_hw_intel: Fix typo in module parameter descriptions
c0a88032ef8e6814d4dd84551e5f333c1de639b3 ntb_transport: make DMA_OUT_RESOURCE_TO HZ independent
cdc08982a5f334cecc15d802464588115512cc36 ntb: make DMA_OUT_RESOURCE_TO HZ independent
25ea9f2bf5f76082da919f2a91ea8d920932c1da ntb: ntb_hw_intel: init peer_addr in struct intel_ntb_dev
819baf885953b588b63bef28e5598daf9ed4ddf9 ntb_perf: potential info leak in debugfs
783dfa6cc41b710b8b0c1979c6100417d0d6c3b2 ntb: Adding Skylake Xeon NTB support
e5b0d2d1ba92a8e424e7395537a96e8a373d0267 NTB: add support for hotplug feature
872deb21038e90903a40ab6a29b9d0652a6ebc8d NTB: Register and offset values fix for memory window
b17faba03fc72091f4d040b879def004316952ec ntb_transport: Limit memory windows based on available, scratchpads
09e71a6f13445974fe9b70b6d4b68ac362cd68b6 ntb: fix SKX NTB config space size register offsets
28734e8f69395de4c2aea50fcb74d87720e8537b NTB: Fix 'request_irq()' and 'free_irq()' inconsistancy
dfb7d24c5ad5c986f2417f52784738b67cfedd4d ntb_transport: Remove unnecessary call to ntb_peer_spad_read
86663c91866ae85c219f1a80ef2c9460b7ca5cd8 NTB: Fix documentation for ntb_peer_db_clear.
afc54992296a5e7f7d2e41456ed90789b01a4e7b NTB: Make _addr functions optional in the API
74dcba3589fc184c7118905eda22b3a4aaef95ff NTB: correct ntb_spad_count comment typo
5c43c52d5fb6163120ae5d9a281c3b757ca6119c NTB: correct ntb_peer_spad_read for case when callback is not supplied.
879f40d193bb3c6c13930e88e3e9d5d7baf84d19 sysfs, kernfs: introduce kernfs_remove[_by_name[_ns]]()
5d0e26bb59a680a5d97db5b6629941603e8de229 sysfs, kernfs: introduce kernfs_create_link()
890ece160c6465b49c42975d529c3481d89da8f5 sysfs, kernfs: introduce kernfs_rename[_ns]()
5d60418e54751c856f5aecc308620fde9572e481 sysfs, kernfs: introduce kernfs_setattr()
93b2b8e4aa4317e3fe6414d117deb5f3c362e8bb sysfs, kernfs: introduce kernfs_create_dir[_ns]()
dd8a5b036b6e8d50854e130555f90f062c5eacec sysfs, kernfs: move sysfs_open_file to include/linux/kernfs.h
f6acf8bb6a40ba3bfcf542e4c4c9e8968c8cb57a sysfs, kernfs: introduce kernfs_ops
496f73944a4a974f89d48920bf368aec8841b195 sysfs, kernfs: introduce kernfs_create_file[_ns]()
d19b9846df64d8845be682b6318bd1aee246cf60 sysfs, kernfs: add kernfs_ops->seq_{start|next|stop}()
024f647117d697165aaadf3f1af1343b7000149a sysfs, kernfs: introduce kernfs_notify()
517e64f57883bd63c5a4ab8b3d0d3ed68c55d0cf sysfs, kernfs: revamp sysfs_dirent active_ref lockdep annotation
ccf73cf336dc55bc52748205dee998d2fd4a8808 sysfs, kernfs: introduce kernfs[_find_and]_get() and kernfs_put()
ae6621b0716852146e4655fef7f74a181faa6c81 sysfs, kernfs: move internal decls to fs/kernfs/kernfs-internal.h
ffed24e22845a3da0ae01095ae3f11c8d16e889d sysfs, kernfs: move inode code to fs/kernfs/inode.c
fd7b9f7b9776b11df629e9dd3865320bf57ce588 sysfs, kernfs: move dir core code to fs/kernfs/dir.c
414985ae23c031efbd6d16d484dea8b5de28b8f7 sysfs, kernfs: move file core code to fs/kernfs/file.c
2072f1afddfe9fa00c1c0c79f8986707324ec65b sysfs, kernfs: move symlink core code to fs/kernfs/symlink.c
ba7443bc656e5236c316b2acacc8b551f872910f sysfs, kernfs: implement kernfs_create/destroy_root()
bc755553df9ab33f389c1a0a8bd0b4f4646e80ef sysfs, kernfs: make inode number ida per kernfs_root
4b93dc9b1c684d0587fe44d36bbfdf45bd3bea9d sysfs, kernfs: prepare mount path for kernfs
fa736a951e456b996a76826ba78ff974414c3b55 sysfs, kernfs: move mount core code to fs/kernfs/mount.c
cf9e5a73aaff0204801dd19cb4bd91d32f32026a sysfs, kernfs: make sysfs_dirent definition public
ac9bba031001704a2339713cc12148857eccc5e5 sysfs, kernfs: implement kernfs_ns_enabled()
bfc5c17337145955b31c22b96a6e07def048471b sysfs, kernfs: remove cross inclusions of internal headers
9a8049affd55a2c857a89faece27b878416fbf91 kernfs: update sysfs_init_inode_attrs()
2322392b020badfe49730f1529b9c1a15248c387 kernfs: implement "trusted.*" xattr support
9b2db6e1894577d48f4e290381bac6e573593838 sysfs: bail early from kernfs_file_mmap() to avoid spurious lockdep warning
324a56e16e44baecac3ca799fd216154145c14bf kernfs: s/sysfs_dirent/kernfs_node/ and rename its friends accordingly
adc5e8b58f4886d45f79f4ff41a09001a76a6b12 kernfs: drop s_ prefix from kernfs_node members
c525aaddc366df23eb095d58a2bdf11cce62a98b kernfs: s/sysfs/kernfs/ in various data structures
df23fc39bce03bb26e63bea57fc5f5bf6882d74b kernfs: s/sysfs/kernfs/ in constants
a797bfc30532388e8a11ca726df60cdd77aa8675 kernfs: s/sysfs/kernfs/ in global variables
c637b8acbe079edb477d887041755b489036f146 kernfs: s/sysfs/kernfs/ in internal functions and whatever is left
bb8b9d095c5c56cce99576cfef0cf9b989f7120d kernfs: add @mode to kernfs_create_dir[_ns]()
d0ae3d4347ee025cf23b850d484fe8593f7dd0f2 kernfs: add REMOVED check to create and rename paths
2063d608f5110d120db60e896ec2c70c95bb7978 kernfs: mark static names with KERNFS_STATIC_NAME
47a52e91f485dfd935042dbd2f66df1ac3fdfbb9 kernfs: update kernfs_rename_ns() to consider KERNFS_STATIC_NAME
19bbb926203dbcf3a03915e934c36d7681bf6e13 kernfs: allow negative dentries
80b9bbefc345079bddc4959de016ba4074b0c8d6 kernfs: add kernfs_dir_ops
d92d2e6bd72b653f9811e0c9c46307c743b3fc58 kernfs: fix get_active failure handling in kernfs_seq_*()
917f56caaabc215f9658006dad28a9665ec0ce19 kernfs: add struct dentry declaration in kernfs.h
db4aad209bc9aefd91f0a9aeb9e37364088b39ad kernfs: associate a new kernfs_node with its parent on creation
da9846ae15186d491d6e21ebbb5051e1d3c7f652 kernfs: make kernfs_deactivate() honor KERNFS_LOCKDEP flag
ea1c472dfeada211a0100daa7976e8e8e779b858 kernfs: replace kernfs_node->u.completion with kernfs_root->deactivate_waitq
45a140e587f3d32d8d424ed940dffb61e1739047 kernfs: restructure removal path to fix possible premature return
ccf02aaf8167bb8bfb3c17c01c843d309b872671 kernfs: invoke kernfs_unmap_bin_file() directly from kernfs_deactivate()
99177a34110889a8f2c36420c34e3bcc9bfd8a70 kernfs: remove kernfs_addrm_cxt
a69d001cfc712b96ec9d7ba44d6285702a38dabf kernfs: remove KERNFS_ACTIVE_REF and add kernfs_lockdep()
ae34372eb8408b3d07e870f1939f99007a730d28 kernfs: remove KERNFS_REMOVED
1ae06819c77cff1ea2833c94f8c093fe8a5c79db kernfs, sysfs, driver-core: implement kernfs_remove_self() and its wrappers
07c7530dd46728e25e938d0eb291f8085435c365 kernfs: invoke dir_ops while holding active ref of the target node
90c07c895c87d38db100b6afcb686ab3ef0d6a64 kernfs: rename kernfs_dir_ops to kernfs_syscall_ops
6a7fed4eefddad48224f1c9d534b4e262f0897f6 kernfs: implement kernfs_syscall_ops->remount_fs() and ->show_options()
b9c9dad0c457d32cf8c7d2e413463c8414c7a7a7 kernfs: add missing kernfs_active() checks in directory operations
d35258ef702cca0c4e66d799f8e38b78c02ce8a5 kernfs: allow nodes to be created in the deactivated state
4d3773c4bb41ed5228f1ab7a4a52b79e17b10515 kernfs: implement kernfs_ops->atomic_write_len
2536390da0d300b2734c721235c082498879841d kernfs: add kernfs_open_file->priv
0c23b2259a4850494e2c53e864ea840597c6cdd3 kernfs: implement kernfs_node_from_dentry(), kernfs_root_from_sb() and kernfs_rename()
3eef34ad7dc369b7183ec383908aff3da2f6e5ec kernfs: implement kernfs_get_parent(), kernfs_name/path() and friends
ba341d55a420ab4fdd1a53fd395fd59bd65de880 kernfs: add CONFIG_KERNFS
9561a8961c708ff6ba3e71a817af0f16bdc1d885 kernfs: fix hash calculation in kernfs_rename_ns()
f41c593454943b80a2017c8a2a3d6b1d0b0a6f89 kernfs: fix kernfs_node_from_dentry()
88391d49abb7d8dee91d405f96bd9e003cb6798d kernfs: fix off by one error.
b7ce40cff0b9f6597f8318fd761accd92727f61f kernfs: cache atomic_write_len in kernfs_open_file
4afddd60a770560d370d6f85c5aef57c16bf7502 kernfs: protect lazy kernfs_iattrs allocation with mutex
c1befb885939cdaaf420c10bbe9ff57aa00446ea kernfs: fix a subdir count leak
b44b2140265ddfde03acbe809336111d31adb0d1 kernfs: add back missing error check in kernfs_fop_mmap()
555724a831b4a146e7bdf16ecc989cda032b076d kernfs, sysfs, cgroup: restrict extra perm check on open to sysfs
fed95bab8d29b928fcf6225be72d37ded452e8a2 sysfs: fix namespace refcnt leak
26fc9cd200ec839e0b3095e05ae018f27314e7aa kernfs: move the last knowledge of sysfs out from kernfs
0067d4b020ea07a58540acb2c5fcd3364bf326e0 blk-mq: Fix tagset reinit in the presence of cpu hot-unplug
be4947bf46cb0e7a7d089e03c61bab35f1e695ce sctp: change to check peer prsctp_capable when using prsctp polices
8ae808eb853e3789b81b8a502cdf22bb01b76880 sctp: remove the old ttl expires policy
08abb79542c9e8c367d1d8e44fe1026868d3f0a7 sctp: sctp_transport_lookup_process should rcu_read_unlock when transport is null
4cdf507d54525842dfd9f6313fdafba039084046 icmp: add a global rate limitation
c0303efeab7391ec51c337e0ac5740860ad01fe7 net: reduce cycles spend on ICMP replies that gets rate limited
7ba91ecb16824f74ba4fcbc4e88cd4d24a839b25 net: for rate-limited ICMP replies save one atomic operation
a2bb6d7d6f4249691b6a554cde59969d55b0d9c3 ipv4: include NLM_F_APPEND flag in append route notifications
b93e1fa7106582e3a81cc818b719e0341585ff1b ipv4: fix value of ->nlmsg_flags reported in RTM_NEWROUTE events
44091d29f2075972aede47ef17e1e70db3d51190 lib: Introduce priority array area manager
982acb97560c8118c2109504a22b0d78a580547d ipv4: fib: Notify about nexthop status changes
42d5aa76ec8fc9602922cc590a437ecd6693523b ipv4: fib: Send deletion notification with actual FIB alias type
5b7d616dbccc2fd6ae959045e1a9ca17de5dfc2a ipv4: fib: Send notification before deleting FIB alias
7a335adad8b06778c0876aa5a5eb8954cd835bf5 net/sched: cls_matchall: Dump the classifier flags
c7d2b2f5eebe6e76efc11cfd7a600c0748234f3a net/sched: cls_matchall: Reflect HW offloading status
50ab3af16c48bc14a6787ab2f506c403d9d1bfad lib: Remove string from parman config selection
43a6684519ab0a6c52024b5e25322476cabad893 ping: implement proper locking
82f2341c94d270421f383641b7cd670e474db56b tty: n_hdlc: get rid of racy n_hdlc.tbuf
e9a2ea5a1ba09c35258f3663842fb8d8cf2e00c2 cacheinfo: Introduce cache id
d57e3ab7e34c51a8badeea1b500bfb738d0af66e x86/intel_cacheinfo: Enable cache id in cache info
2ccd71f1b278d450a6f8c8c737c7fe237ca06dc6 x86/cpufeature: Move some of the scattered feature bits to x86_capability
4ab1586488cb56ed8728e54c4157cc38646874d9 x86/cpufeature: Add RDT CPUID feature bits
4f341a5e48443fcc2e2d935ca990e462c02bb1a6 x86/intel_rdt: Add scheduler hook
8ff42c02193150720815608ed03de8d45aeaf8a8 x86/intel_rdt: Add a missing #include
74fcdae1a7fdf30de5413ccc1eca271415d01124 x86/intel_rdt: Call intel_rdt_sched_in() with preemption disabled
86cb13e4ec5060d94069a8418fd4f3ccb38edee2 mlxsw: spectrum: Fix compilation error when CLS_ACT isn't set
1803e0fb7ef9534154e6a1abf77bc2ca352f72e1 mlxsw: spectrum: Limit number of FDB records per learning session
936bd486564aa3edb52313aa7c2e7381e0bcaba3 rocker: use FIB notifications instead of switchdev calls
347e3b28c1ba24c1ae2f30290d8247480ab9ce14 switchdev: remove FIB offload infrastructure
fd41b0eaa06a8a0516f9e0b0a5889035bf423784 doc: update switchdev L3 section
c1bb279cfa9d079bdee35402f5d13210f25f5c80 rocker: Create an ordered workqueue for FIB offload
db7019557cb48508f3ff9d6b40c2e967702897a6 rocker: Implement FIB offload in deferred work
17f8be7dafce4e4b92fbe7bfec605944df290546 rocker: Register FIB notifier before creating ports
c3852ef7f2f8f75a9f85a864bec1f6f5a3068eea ipv4: fib: Replay events when registering FIB notifier
8971e1c79d3f6c9a5e6f7a65c50c41f434a4dae6 powerpc/pseries: Don't give a warning when HPT resizing isn't available
c54b2bf1b5e99760d53ea0376e96a046f93df6ae powerpc: Add ppc64 hard lockup detector support
745d8ae4622c6808b22e33a944c7decb30074be4 net/mlx4: Spoofcheck and zero MAC can't coexist
b2d0fe35471d1a71471f99147ffb5986bd60e744 net/mlx4: && vs & typo
a748d60df32ec5da31626a140be1795eefa04282 IB/mlx4: Take source GID by index from HW GID table
ebaaee253ad3a3c573ab7d3d77e849056bdfa9ea IB/core: Expose vlan offloads capabilities
10bac72be10542a29169582e6f74f88bcdfdf19f IB/core: Enable WQ creation and modification with cvlan offload
27b0df1175d543c46f63de6dccba98d0e5cf2276 IB/core: Add scatter FCS flag to use in WQ creation
b1f74a8437a38d1c0139175f2ad469d2517a7882 IB/mlx5: Enable WQ creation and modification with cvlan offload
4be6da1e5b8dde8b163c540fca5745644a6a9e00 IB/mlx5: Support creation of a WQ with scatter FCS offload
972c7f167974fa41ea8a2eed4b857cc59f59c42c tcmu: add helper to check if dev was configured
7d7a743543905a8297dce53b36e793e5307da5d7 tcmu: Convert cmd_time_out into backend device attribute
530c6891b1220cba780b6c18f4691d85a3435080 target: allow ALUA setup for some passthrough backends
d7175373f2745ed4abe5b388d5aabd06304f801e target: fix ALUA transition timeout handling
1ca4d4fa3bfcbe8964f81e5818a9b90436466eb0 target: allow userspace to set state to transitioning
760bf578edf8122f2503a3a6a3f4b0de3b6ce0bb target: fix race during implicit transition work flushes
740372b76e7966604e0f4dd0de13135513024f0d tcmu: Allow cmd_time_out to be set to zero (disabled)
f3cfabce7a2e92564d380de3aad4b43901fb7ae6 Drivers: add blist flags
f1c635b439a5c01776fe3a25b1e2dc546ea82e6f scsi: storvsc: Workaround for virtual DVD SCSI version
a465537ad1a4423e542f9427e4f684334b4b40a5 qla2xxx: Disable the adapter and skip error recovery in case of register disconnect.
bf6061b17a8d47ef0d9344d3ef576a4ff0edf793 scsi: qla2xxx: Add fix to read correct register value for ISP82xx.
094f71c70b5c25176709081cedda23228a0d82ab qla2xxx: Update driver version to 8.07.00.38-k
df2729c3238ed89fb8ccf850d38c732858a5bade sctp: check for dst and pathmtu update in sctp_packet_config
3ebfdf082184d04f6e73b30cd9446613dc7f8c02 sctp: get sock from transport in sctp_transport_update_pmtu
65acb5d0827c8a05022e77eced63cdc8616ba43a mlxsw: spectrum: Make the add_matchall_tc_entry symmetric
2f3a5272e5c16c3c10fbba06928a513f9b1e2fcd ipv4: fib: Add events for FIB replace and append
7aa0f5aa9030aa97e9d83d834fc977664cf1b066 mlxsw: spectrum: Implement TC flower offload
dc371700d43e45ed9bf380746e293f063113c2b1 spectrum: flower: Treat ETH_P_ALL as a special case and translate for HW
713c43b315fc160dc4ff3da0020ebe09b8a65587 mlxsw: spectrum_flower: Remove bogus warns in mlxsw_sp_flower_destroy
d8dab00de9b767eaa11496a0eedf4798fc225803 io-mapping: Specify mapping size for io_mapping_map_wc()
cafaf14a5d8f152ed3c984ecd48dee6e824446bc io-mapping: Always create a struct to hold metadata about the io-mapping
ac96b5566926af83463ddcf4655856033c092f26 io-mapping.h: s/PAGE_KERNEL_IO/PAGE_KERNEL/
80c33624e4723c4e22d9917cd676067ebf652dc2 io-mapping: Fixup for different names of writecombine
3ed605bc8a0a688d8750a1e2eff39c854418c5cf kernel.h: add u64_to_user_ptr()
2291059c852706c6f5ffb400366042b7625066cd locking,arch: Use ACCESS_ONCE() instead of cast to volatile in atomic_read()
658aa51459c2f5284183d35b6dd0beca0e0bfe2f sh: Provide atomic_{or,xor,and}
c0dd3460b28626430b83b9bf80af4c5a2bd4a53b drm/i915: Canonicalize stolen memory calculations
ee0629cfd3c16c716801c84e939ff5db5e23f54d drm/i915: Function per early graphics quirk
01e5d3b42e2047dd6bc80e722d9f84b654c7dcfb x86: Silence 32bit compiler warning in intel_graphics_stolen()
d721b02fd00bf133580f431b82ef37f3b746dfb2 drm/i915: Account for TSEG size when determining 865G stolen base
8d9c20e1d1e3833b5c4dab33d59cb92ea162da6a drm/i915: Remove .is_mobile field from platform struct
f931894194b9395313d1c34f95ceb8d91f49790d drm/i915/dp: DP audio API changes for MST
a8bcccaba162632c3963259b8a442c6b490f4c68 locking/atomic, arch/x86: Implement atomic{,64}_fetch_{add,sub,and,or,xor}()
1d4a9c17d4d204a159139361e8d4db7f9f267879 PM / sleep: add configurable delay for pm_test
55aa42f2e690157e254a6a6989f5f4ac928b35c8 efifb: prevent null-deref when iterating dmi_list
31788ca803a0c89078f9e604e64286fbd9077926 drm/vmwgfx: Work around drm removal of control nodes
71f677a91046599ece96ebab21df956ce909c456 drm/ast: Handle configuration without P2A bridge
2ea259eead133026ac6a3fbfa040cc58a96cae44 scsi: lpfc: minor code cleanups
895427bd012ce5814fc9888c7c0ee9de44761833 scsi: lpfc: NVME Initiator: Base modifications
01649561a8b4b77247bd234f240d737367bb8a52 scsi: lpfc: NVME Initiator: bind to nvme_fc api
bd2cdd5e400f5914bc30d5cfb0a0185cf51e4424 scsi: lpfc: NVME Initiator: Add debugfs support
f358dd0ca26c152a5e0922e269996268dcb98a9d scsi: lpfc: NVME Target: Base modifications
2d7dbc4c2775eb30df97be00090adbfcc7fc5086 scsi: lpfc: NVME Target: Receive buffer updates
8c258641e01cfcc5620c4fb191300bea224bcc99 scsi: lpfc: NVME Target: Merge into FC discovery
d613b6a7aa922690e341c9ff0faba66ae299b5ad scsi: lpfc: NVME Target: bind to nvmet_fc api
2b65e18202fd0f109b739dd6717286edca7a2b0d scsi: lpfc: NVME Target: Add debugfs support
d080abe0a8693c58a4b35b74bab3526d8b554ca3 scsi: lpfc: Update copyrights
70e5afd57d6d97d69bf5fd0187c2bb5a79990504 scsi: lpfc: remove redundant assignment of sgel
332ba3b5d6d27a60d445704ed7c88c7e9f958a30 scsi: lpfc: don't dereference dma_buf->iocbq before null check
a5068b46958870633ea340692f301507ef78d00b scsi: lpfc: Fix IO submission if WQ is full
318083ad9230ff13cdac34ae4c4135e0c4e2d9ad scsi: lpfc: add NVME exchange aborts
da6b044a28fe603fe2c3fd908cda8150aa0abe74 scsi: lpfc: correct double print
ba3bd6e2a9a2753439a1fd1fe39e8d5162fb3aa9 scsi: lpfc: remove dead sli3 nvme code
96418b5e2c8867da3279d877f5d1ffabfe460c3d scsi: lpfc: Fix eh_deadline setting for sli3 adapters.
33cc559a81397bc813c392617d40ddfdfa3cffbd scsi: lpfc: replace init_timer by setup_timer
75d943f3e4222fdd4f907b71bd9d1730412e7ce9 scsi: lpfc: add missing Kconfig NVME dependencies
166d721120c1cf768af11706c3e0411324bf138f scsi: lpfc: Rework lpfc Kconfig for NVME options
7d7080335f8d93a51e8238b6e85be8af4ba452b6 scsi: lpfc: Finalize Kconfig options for nvme
f77fc87c3716f59be0248bf430fbf9d7888902b1 nvme_fc: correct LS validation
c913a8b0d4c564e62c2a767d089378a3d2ffa00c nvme_fc: Move LS's to rport
458f280d716d3205214c8bb5d4271bd54e939a61 nvme_fc: fix command id check
2ade92ae6d6572858acb2bde6d3664af3ad592e2 scsi: lpfc: code cleanups in NVME initiator base
26f77e53cfee2b1b066071353be03988897e23c3 i40e: fix RSS queues only operating on PF0
6bae363ee3057a14eec93440826813603559273a blk-mq: Export blk_mq_freeze_queue_wait
f91328c40a559362b6e7b7bfee01ca17fda87592 blk-mq: Provide freeze queue timeout
302ad8cc09339ea261eef58a8d5f4a116a8ffda5 nvme: Complete all stuck requests
427d77a32365d5f942d335248305a5c237baf63a x86/smpboot: Prevent false positive out of bounds cpumask access warning
8214899342981dbd49ae24aadbbd19e9e7830684 x86/cpufeature: Add AVX512_4VNNIW and AVX512_4FMAPS features
47f10a36003eaf493125a5e6687dd1ff775bfd8c x86/cpuid: Cleanup cpuid_regs definitions
47bdf3378d62a627cfb8a54e1180c08d67078b61 x86/cpuid: Provide get_scattered_cpuid_leaf()
4504b5c9414c55da37f26b1faf49c09a2acbf255 kvm: x86: Add AVX512_4VNNIW and AVX512_4FMAPS support
ea0213e0c7cc1c1b52badf27bd7db4f50a67baaa md: superblock changes for PPL
ff875738edd44e3bc892d378deacc50bccc9d70c raid5: separate header for log functions
3418d036c81dcb604b7c7c71b209d5890a8418aa raid5-ppl: Partial Parity Log write logging implementation
664aed04446c7f653d8acbe2cdf7989f28238524 md: add sysfs entries for PPL
4536bf9ba2d03404655586b07f8830b6f2106242 raid5-ppl: load and recover the log
6358c239d88c751a9f14152a8d4ad2b69f5be48f raid5-ppl: support disk hot add/remove with PPL
ba903a3ea465bd2f2bb9316054b295e79a7a518e raid5-ppl: runtime PPL enabling or disabling
ff6f2d29bd31cdfa1ac494a8b26d2af8ba887d59 sched/idle: Add missing checks to the exit condition of cpu_idle_poll()
f307668bfcb7e83b6f62bda6a703e09613a00bd0 bonding: split bond_set_slave_link_state into two parts
de77ecd4ef02ca783f7762e04e92b3d0964be66b bonding: improve link-status update in mii-monitoring
b5bf0f5b16b9c316c34df9f31d4be8729eb86845 bonding: correctly update link status during mii-commit phase
3f3c278c94dd994fe0d9f21679ae19b9c0a55292 bonding: fix active-backup transition
faeeb317a5615076dff1ff44b51e862e6064dbd0 bonding: attempt to better support longer hw addresses
ff3ce480e8b59fbc0f459476fe1b5451464592a5 PCI: Fix all whitespace issues
2173c519d5e912a6e2934bb04255fcd36c1591c8 audit: normalize NETFILTER_PKT
0b9aefea860063bb39e36bd7fe6c7087fed0ba87 tcp: minimize false-positives on TCP/GRO check
59e6ae53248a72d83cec77dd704b6990b2394479 ptr_ring: support resizing multiple queues
e71695307114335be1ed912f4a347396c2ed0e69 ptr_ring: fix race conditions when resizing
08294a26e15d7baf1e14ee569e9f2bc82a7ae768 net: introduce NETDEV_CHANGE_TX_QUEUE_LEN
1576d98605998fb59d121a39581129e134217182 tun: switch to use skb array for tx
f48cc6b2661ccb6e9d85a5cdd78c0150929a2821 tun: fix build warnings
86dfb4acb378cb3a4eede3db919604c583beaa7c tun: Don't assume type tun in tun_device_event
362899b8725b35e32802882c67f99cbf42bce2af macvtap: switch to use skb array
0d7eacbe637952fc737a968bc16db1f2ccbbe71c macvtap: correctly free skb during socket destruction
104a493390940e85fb7c840a9fd5214aba5cb3bd macvtap: fix use after free for skb_array during release
cb984d101b30eb7478d32df56a0023e4603cba7f compiler-gcc: integrate the various compiler-gcc[345].h files
06ce521af9558814b8606c0476c54497cf83a653 kvm: fix page struct leak in handle_vmon
0b1b1dfd52a67f4f09a18cb82337199bc90ad7fb kvm: introduce KVM_MAX_VCPU_ID
af1bae5497b98cb99d6b0492e6981f060420a00c KVM: x86: bump KVM_MAX_VCPU_ID to 1023
757883de41eca292765578ef87c4f49453529bb2 KVM: x86: bump KVM_SOFT_MAX_VCPUS to 240
1d12d0ef0194ccc4dcebed3d96bb2301b26fc3ee x86/cpufeature: Add RING3MWAIT to CPU features
e16fd002afe2b16d828bbf738b8a81a185fe9272 x86/cpufeature: Enable RING3MWAIT for Knights Landing
4d8bb00604b182b62e7786bae0e58e0befeeff85 x86/cpufeature: Enable RING3MWAIT for Knights Mill
17822b207f3b66c3aa09d749d583ae63b3637f01 pNFS: consolidate the different range intersection tests
79f687a3de9e3ba2518b4ea33f38ca6cbe9133eb NFS: Fix a performance regression in readdir
63519fbc67d0d9912c13185b7c1e8c2fcb218cc0 NFS: Be more targeted about readdirplus use when doing lookup/revalidation
1bcf4c5c597d1b1862cf54e65198f1c9e3cad29c NFS: Allow getattr to also report readdirplus cache hits
d4d7fc12b642a16732adeacefdaebe684bcb2218 gfs2: Re-enable fallocate for the rindex
4464e36e06470e3d68dc26a874f0dbdffa09a6e8 dm raid: fix table line argument order in status
fb5f51c7425ebc808d91329257cbc963e2421368 vfs: change d_manage() to take a struct path
c6609c0a1c34fc097152b28b496236625673924f vfs: add path_is_mountpoint() helper
01619491a5f0766014fe863c5ae480665436e7a2 vfs: add path_has_submounts()
dd36a882e7ade2c642f8711426ad8e4b7009aaae autofs: change autofs4_wait() to take struct path
cfaf86ab6ccdf0acf47ebe474a4a844114bc0e10 autofs: use path_is_mountpoint() to fix unreliable d_mountpoint() checks
60359741473438f66fef7297d1fa2435640dbe79 autofs: use path_has_submounts() to fix unreliable have_submount() checks
455e8f1030de82b68ee4e82f71516f3692f5e626 autofs - constify misc struct path instances
1c4344a50d702307185cb98fb67bff938cd66aa0 autofs - dont hold spin lock over direct mount expire
59d43914ed7b96255271ad6b7b735344beffa3c0 vfs: make guard_bh_eod() more generic
4db96b71e3caea5bb39053d57683129e0682c66f vfs: guard end of device for mpage interface
32ddd944a056c786f6acdd95ed29e994adc613a2 nfsd: opt in to labeled nfs per export
d4ea7e3c5c0e341c15b073016dbf3ab6c65f12f3 NFS: Fix old dentry rehash after move
2876a34466ce382a76b9ffb34757bb48928ac743 sunrpc: don't pass on-stack memory to sg_set_buf
e12937279c8b07798651de7f5c8c52974c699931 NFS: Move the flock open mode check into nfs_flock()
50f2112cf7a3e62a8d33838eb205d5fef306457a locks: Set FL_CLOSE when removing flock locks on close()
210c7c1750fdf769647d1d526c9ea34c412c9eee NFS: Use wait_on_atomic_t() for unlock after readahead
7d6ddf88c4db372689c8aa65ea652d0514d66c06 NFS: Add an iocounter wait function for async RPC tasks
b1ece737f44f91dca8f4829cf0b442e752e406db lockd: Introduce nlmclnt_operations
a33e4b036d4612f62220f37a9fa29d273b6fd0ca pNFS: return status from nfs4_pnfs_ds_connect
7a5589b240b405d55b2b395554082ec284f414bb virtio_pci: Use the DMA API if enabled
1a937693993ff10d7e80cca6ddd55f3000aa6376 virtio: new feature to detect IOMMU device quirk
bfe2bc512884d0b1c5297a15350f940ca80e439b vhost: introduce vhost memory accessors
a9709d6874d55130663567577a9b05c35138cc6b vhost: convert pre sorted vhost memory array to interval tree
6b1e6cc7855b09a0a9bfa1d9f30172ba366f161c vhost: new device IOTLB API
ec33d031a14b3c5dd516627139c9550350dbba3e vhost: detect 32 bit integer wrap around
2f952c0105d14bd46bb6d6a3cc03ad789a381228 vhost: make interval tree static inline
d3cf40ed7fa1b56bd53d3b52eddf44d0e3c3ec20 drm: Add missing __user annotation
f889491380582b4ba2981cf0b0d7d6a40fb30ab7 vhost: introduce O(1) vq metadata cache
db31d330e8b0ad8926725eb2af6f6422c07ca7ab qed: Correct out-of-bound access in OOO history
6b116b1d6a521a1907b3c18cb7a8592a655f660c qed: Enable iSCSI Out-of-Order
45bded2c216da6010184ac5ebe88c27f73439009 IB/mlx5: Verify that Q counters are supported
3d2a3774c1b046f548ebea0391a602fd5685a307 virtio-balloon: do not call blocking ops when !TASK_RUNNING
fad7b7b27b6a168ca8ebc84482043886f837b89d virtio_balloon: Use a workqueue instead of "vballoon" kthread
fd0e21c31e1e6383af978239d07ced6e4e5d82c3 virtio_balloon: Allow to resize and update the balloon stats in parallel
8424af5336b34043a705d66bdf2c1428048ef085 virtio: update balloon size in balloon "probe"
9646b26e85896ef0256e66649f7937f774dc18a6 virtio-balloon: use actual number of stats for stats queue buffers
be086e7c53f1fac51eed14523b28f2214b548dd2 qed*: Utilize Firmware 8.15.3.0
6f359f99b8c2ff3b09329611da00fe39a7c10e7e qedf: fix wrong le16 conversion
9c79ddaa0f962d1f26537a670b0652ff509a6fe0 qed*: Add support for QL41xxx adapters
2f78227874754b1e10cd348fd6e7693b0dabb3f6 qed: Correct MSI-x for storage
7587a5ae7eef0439f7be31f1b5959af062bbc5ec blk-mq: Introduce blk_mq_delay_run_hw_queue()
36e3cf273977da34a760d513e1bef8431a9abaa0 scsi: Avoid that SCSI queues get stuck
175a20c16fdb7700fcac63f1eeb2caa7e1dddd2d x86/perf/intel/rapl: Fix module name collision with powercap intel-rapl
c74fd80f2f41d05f350bb478151021f88551afe8 xen: do not re-use pirq number cached in pci device msi msg data
a36b926180cda375ac2ec89e1748b47137cfc51c xfs: pull up iolock from xfs_free_eofblocks()
c3155097ad89a956579bc305856a1f2878494e52 xfs: sync eofblocks scans under iolock are livelock prone
e4229d6b0bc9280f29624faf170cf76a9f1ca60e xfs: fix eofblocks race with file extending async dio writes
3b4683c294095b5f777c03307ef8c60f47320e12 xfs: drop iolock from reclaim context to appease lockdep
161b28aae1651aa7ad63ec14753aa8a751154340 iommu/vt-d: Make sure IOMMUs are off when intel_iommu=off
8875125efe8402c4d84b08291e68f1281baba8e2 sched: Transform resched_task() into resched_curr()
5130213721d01b6632c255d4295a8102cbb58379 tick/broadcast-hrtimer: Set name of the ce_broadcast_hrtimer
61bff8ef0088459e32bc0a7cc8c23144d324df90 nvme_fc: add controller reset support
78a7ac260e38d511d3f62a9e574cf34aac48d7d3 nvme_fc: add aen abort to teardown
8d64daf7dcd851b249717ac88e2d4989f9ad2467 nvme_fc: Add ls aborts on remote port teardown
568ad51e5d32c7f0a8e3138bc9df2badfcce0304 nvmet_fc: add missing reference in add_port
a97ec51b37efacb84f286979876675a8143035b0 nvmet_fc: Rework target side abort handling
ce79bfc2c7b415f0f296adc59a54c9c781d63617 nvme_fcloop: split job struct from transport for req_release
19b58d9473e8e3d38e7f3602a07c8febfbd07bc1 nvmet_fc: add req_release to lldd api
39498faef7c02f9f6de4060ccdc7e8975a6e690b nvmet_fc: add target feature flags for upcall isr contexts
62eeacb0e04f2aff7099a7765f386bb7ba53d5e2 nvme_fc: Clean up host fcpio done status handling
c820ad4cdacbb272ec993738d1c7eb96f09ddcd5 nvmet_fc: Clear SG list to avoid double frees
4083aa986f0447d562c494e75d525c1b1df71a2a nvmet_fc: Sync NVME LS reject reasons with spec
726a1080e537f7c0b4435ef29e17b056e09fc4f4 nvme_fc: Add check of status_code in ERSP_IU
0f222ccce359d21f927d07df2069e7029497b790 nvme_fc: Sync FC-NVME header with standard
faef3af69dd7976315d37316698a436b81d05363 nvme-fc: don't bother to validate ioccsz and iorcsz
f64935abbfcedf47a23ad0345f625b1903d965d2 nvmet_fc: cleanup of abort flag processing in fcp_op_done
b5ccc7d61c76006f839b41c6f15876342b46cb02 scsi: lpfc: code cleanups in NVME initiator discovery
43140ca68d1a071ddbe92f10a3256e01701ae390 scsi: lpfc: Rename LPFC_MAX_EQ_DELAY to LPFC_MAX_EQ_DELAY_EQID_CNT
3ebd9b4701ef77358030a0ef9cb6586db2149712 scsi: lpfc: Fix nvme allocation bug on failed nvme_fc_register_localport
b06a622ffe8dddcc09dad23dc768f7d1540fb4d6 scsi: lpfc: Fix NVME CMD IU byte swapped word 1 problem
8b3616392d32d2b04ce649caf6684da1b7050d8c scsi: lpfc: Fix RCTL value on NVME LS request and response
d11f54b7d1d40463024be3b40ab7be2c8a84fa43 scsi: lpfc: fix missing spin_unlock on sql_list_lock
7aabe84b8a1bb7c3f75fb6a23dc96f8999bdcc8f scsi: lpfc: sanity check hrq is null before dereferencing it
a0f2d3ef374fd8d2f51b8cc1ea723014b1aa2c9b scsi: lpfc: NVME Initiator: Merge into FC discovery
c10c8f7c27103bd7ac02d041d9d6e97296d48fc1 drm/amdgpu/pm: check for headless before calling compute_clocks
f8d9422ef80c5126112284493e69c88753c56ad1 drm/amdgpu: update tile table for oland/hainan
239ac65fa5ffab71adf66e642750f940e7241d99 drm/ttm: Make sure BOs being swapped out are cacheable
f21b9a92ca7c29382909eaab9facc2cf46f2cc0b drm: Cancel drm_fb_helper_dirty_work on unload
24f76b2c87ed68f79f9f0705b11ccbefaaa0d390 drm: Cancel drm_fb_helper_resume_work on unload
bb96dcf5830e5d81a1da2e2a14e6c0f7dfc64348 drm/i915: Recreate internal objects with single page segments if dmar fails
969bb72cbfd906d347cf76dc9b8c8dbaf83ba27a drm/i915: Check for timeout completion when waiting for the rq to submitted
d892e9398ecf6defc7972a62227b77dad6be20bd drm/i915: Pass timeout==0 on to i915_gem_object_wait_fence()
d8e9b2b9097c117880dc22933239d05199c60b96 drm/i915/gvt: Fix superfluous newline in GVT_DISPLAY_READY env var
908764f6d0bd1ba496cb8da33b9b98297ed27351 drm/i915/lspcon: Enable AUX interrupts for resume time initialization
7fff8126d9cc902b2636d05d5d34894a75174993 drm/i915/gen9+: Enable hotplug detection early
390b4e00241ce14ca3967c4698c8f6a158c5a674 drm/i915/lspcon: Fix resume time initialization due to unasserted HPD
18a8de1bc37e97dff1c96ee6cf49adbd02a0f775 drm/amdgpu/si: add dpm quirk for Oland
e11ddff68a7c455e63c4b46154a3e75c699a7b55 drm/amdgpu: reinstate oland workaround for sclk
cf8c73afb3abf0f8905efbaddd4ce11a0deec9da drm/amd/amdgpu: add POLARIS12 PCI ID
24835e442f289813aa568d142a755672a740503c drm: reference count event->completion
93a15b58cfb8a24e666ffca432f19fe65c1cd7d1 drm/i915/kvmgt: Hold struct kvm reference
a18dbba8f01ffae229d00517994f84e7bfad4c49 drm/i915: Move the release of PT page to the upper caller
04da811b3d821567e7a9a8a0baf48a6c1718b582 drm/i915: Let execlist_update_context() cover !FULL_PPGTT mode.
e81ecb5e31db6c2a259d694738cf620d9fa70861 drm/i915: A hotfix for making aliasing PPGTT work for GVT-g
2c88313650f3fb9f04221101901a943bb92059b2 drm/i915/gvt: add more resolutions in virtual edid
26f837e8e1ec9748b55be3af6d7f54b9ad5a43b1 drm/i915: make intel_gvt_init() later instead of too early
d2896e34eb6f10b4f76b42df34b7e075b203c5ff drm/i915/gvt: move intel iommu detection to intel_gvt_init()
3de49a7314c9e17d71e97af4ed4b0564609e9ba7 drm/i915/gvt: remove detect_host() MPT hook
144730256f7a3a8b4cae0150852d0ac3be1a676b drm/i915/gvt: use normal mmio read function for firmware exposure
2d6ceb8e654a0ce998762b13f0ba2c275220a244 drm/i915/gvt: fix vgpu type size init
5bf63fb40eacb7ed1f1de70ae30a597313fa9960 drm/i915/gvt/kvmgt: remove some dead code
6e3745cea7521499e573aa193c52d801a9cb0c10 drm/i915/gvt: remove a noisy unimportant log in sched_policy
3ce3274bff89c6ea5bed3f8f47abdbf672e216b2 drm/i915/gvt: remove a redundant end of line in debug log
b15b2a612dfb8bac9d803f561dd1078fd5c025b9 drm/i915/gvt: reduce the line of interrupt logs and log friendly
5de6bd4c23babc6a00fcd7dc7c90705c9d0ec69e drm/i915/gvt: Map shadow page before using it in shadow page table
b86dc6ed20f1543121757da1a77c0f52121d8bf1 drm/i915/gvt: map pfn for PTE entry in kvm
811a4cf273afc6f651e0ef3d5400084bf0aeb75e drm/i915/gvt: enable IOMMU for gvt
7e5f3d30860ad10a03eece2a0f34633b3f16d2e3 drm/i915/gvt: fix crash at function release_shadow_wa_ctx
03806edc3582392727a6dc617662ac57e6b24b01 drm/i915/gvt: Fix shadow context descriptor
6294b61ba769ba2cc4a182c32410aa4a75808fea drm/i915/gvt: add missing display part reset for vGPU reset
6e27d51457df3f9c7ac406a2a447e89c42e440dd drm/i915/gvt: add sprite plane flip done support.
bc6a1c85795256cd7b44bc1dd264fe3144b8b6f8 drm/i915/gvt: optimize the inhibit context mmio load
4a0b3444da3ce1090d0f894f4e343756a94ab8c3 drm/i915/gvt: return error code if dma map iova failed
f655e67ac8d797425abb0404d0878758f3f71c1a drm/i915/gvt: Fix check error on opregion.c
fd64be636708d808852c4c8c1efce0a0a51c24c5 drm/i915/gvt: introduced failsafe mode into vgpu
d1be371d4f4c12d11023c9fc795e5d460d960680 drm/i915/gvt: handle fence reg access during GPU reset
a33fc7a0482a40068c022aefcefd50f9f0f44f87 drm/i915/gvt: enter failsafe mode when guest requires more resources
9272f73f79bd780502134f227fa52fd280ecda17 drm/i915/gvt: add a NULL pointer check to avoid kernel panic
593e59b4b941910e4f7ba87d3c02d63e38e960d0 drm/i915/gvt: fix unhandled mmio warnings
4c4b22abb3d405c5c194b02255eecc1a9eff42cf drm/i915/gvt: add more registers to context save/restore list
e6cedfea6b8dcb205f75ea632570f52d2ffd1251 drm/i915/gvt: force-nopriv register handling
187447a106fc9caca45f10413845678d3666556c drm/i915/gvt: add cmd_access to GEN7_HALF_SLICE_CHICKEN1
ec162aa84c9057e196f3a844c0a8d569f5095e6c drm/i915/gvt: set default value to 0 for unhandled mmio regs
bab059304314e127cf4a5330c6bd5a71fd27c022 drm/i915/gvt: decrease priority of output msg for untracked mmio
da9cc8de22aa6bd6ed51c406432d599ab520a6e3 drm/i915/gvt: clear the vGPU reset logic
d8a355be0b2b5613f7b34aee1394369d45d50586 drm/i915/gvt: refine pcode write emulation
7c28135c77414327523b89bfc3f13096e095f5ac drm/i915/gvt: remove unnecessary error msg from gtt write
191020b670f84f5e2edfaa906c3801df20485610 drm/i915/gvt: adjust to fixed vGPU types
bca5609fcc401b0055a3c01ecc33c5f6fb67af7b drm/i915/gvt: Add more edid definition support
d1a513be1f0a25f094e1577d059b9aebaa279bb2 drm/i915/gvt: add resolution definition for vGPU type
8bcd7c188bc479bea866d286a7dc0af9734c3c64 drm/i915/gvt: fix pcode mailbox write emulation of BDW
41bfab35b3d0e0a85ed0c12d7bafd7484e96ca78 drm/i915/gvt: add some new MMIOs to cmd_access white list
0aa5277c3a6dbe9d5991c490ef23fe900254d931 drm/i915/gvt: have more registers with F_CMD_ACCESS flags set
9112caafdf01439a6e43f4d8c09ceed7dc613d4a drm/i915/gvt: add more registers into handlers list
1f58af304cce9e4a25b62b3619e69c586203c8ca drm/i915/gvt: fix an error for one register
858b0f571d30916bd69c45922045f24f26d6bfc9 drm/i915/gvt: set SFUSE_STRAP properly for vitual monitor detection
b6b6fbc8310e1b12b05717da9df6953b138f812b drm/i915/gvt: use pfn_valid for better checking
4ec3dd89052a437304e1451733c989b8cec681af drm/i915/gvt: fix an error for F_RO flag
8f1117abb408808af9cc4c948925c726bec4755a drm/i915/gvt: handle workload lifecycle properly
c2e04fdab33181b53b5a2f9662b7b607b720f79f drm/i915/gvt: protect RO and Rsvd bits of virtual vgpu configuration space
627c845c0907894a1e5cd2d90ff4fc86c9e4458e drm/i915/gvt: change some gvt_err to gvt_dbg_cmd
718e884a0183b09a2af8c06818df5d60f94243ce drm/i915/gvt: set ring buffer size to default for guc submission
4938ca90166d6d3061793789e2eef42cd934fa97 drm/i915/gvt: handle force-nonpriv registers, cmd parser part
695fbc08d80f93ecca18a1abd8f52c2ab77fdc8d drm/i915/gvt: replace the gvt_err with gvt_vgpu_err
3f765a341798ebd4e0ece7cce34399a8fd4a7f9f drm/i915/gvt: correct the ggtt valid bit check in pipe control command
3dce2aca02929f180ab66171b333fa48fe485a03 drm/i915/gvt: Remove bogus retry around i915_wait_request
5180edc2421117766fcb9c2d2dc6bfaeefdeb709 drm/i915/kvmgt: fix suspicious rcu dereference usage
17f1b1a6d4e5f41df161eb2a90af22c003a243fc drm/i915/gvt: scan shadow indirect context image when valid
2958b9013fcbabeeba221161d0712f5259f1e15d drm/i915/gvt: Fix gvt scheduler interval time
975629c3f76ce3d86e1f943db9847e0312a98daf drm/i915/gvt: add write handler for mmio mbctl
4a53148868493bd5e0b18a9814aaa20bf74e3b26 drm/i915/gvt: fix wrong offset when loading RCS mocs
14f5ba26aa7060b4cad9c4c288b9a785bd0cd1a8 drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
359b69310014511901bd61cc5f7680cb5de1faef drm/i915/gvt: set shadow entry to scratch page while p2m failed
3fc03069bc6e6c316f19bb526e3c8ce784677477 drm/i915: make context status notifier head be per engine
bc2d4b62db67f817b09c782219996630e9c2f5e2 drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
b79c52aef3cdee903017c1e9834b53996d70010e drm/i915/gvt: Activate/de-activate vGPU in mdev ops.
f85726905745fb4f6e15c68e2ade9da5390f8d89 drm/i915/gvt: exclude cfg space from failsafe mode
bf39ec335eb8cc51b4e1c9303ef92b380d204bb1 drm/i915/gvt: adjust mem size for low resolution type
865f03d42ed0c90c9faf3301775176834ba13eba drm/i915/gvt: remove the redundant info NULL check
aa4ce4493c88dc324911152d1ccd25469366dba3 drm/i915/gvt: Fix firmware loading interface for GVT-g golden HW state
d639fbcc102745187f747a21bdcffcf628e174c8 drm/nouveau/kms/nv50: fix setting of HeadSetRasterVertBlankDmi method
bb8f0f5abdd7845175962a3fb99a5681290f9566 drm/i915: Split intel_engine allocation and initialisation
7fbd995ce4241e98d30859405504c3fb279c4ccb drm/i915: fix INTEL_BDW_IDS definition
0784bc624ae9be4269f8129572ee164ca680ca7c drm/i915: more .is_mobile cleanups for BDW
98b2f01c8dfc8922a2af1fe82a1c40cac4911634 drm/i915: actually drive the BDW reserved IDs
b8473050805f35add97f3ff57570d55a01808df5 drm/i915: Fix forcewake active domain tracking
567f0792a6ad11c0c2620944b8eeb777359fb85a drm/i915: Move updating color management to before vblank evasion
754a76591b12c88f57ad8b4ca533a5c9566a1922 drm/i915/fbdev: Stop repeating tile configuration on stagnation
c1d2061b28c2aa25ec39b60d9c248e6beebd7315 drm/i915: Squelch any ktime/jiffie rounding errors for wait-ioctl
0129936ddda26afd5d9d207c4e86b2425952579f drm/i915/gen9: Increase PCODE request timeout to 50ms
4e5462ee843c883790e9609cf560d88960ea4227 drm/i915: Store a permanent error in obj->mm.pages
c3f8ad57a01a31397e5a0349a226a32f35ddc19c drm/i915: Nuke debug messages from the pipe update critical section
c750bdd3e7e204cc88b32806c3864487a03cd84b drm/i915: Reject HDMI 12bpc if the sink doesn't indicate support
262fd485ac6b476479f41f00bb104f6a1766ae66 drm/i915: Only enable hotplug interrupts if the display interrupts are enabled
ef0f411f51475f4eebf9fc1b19a85be698af19ff drm/i915: Drop support for I915_EXEC_CONSTANTS_* execbuf parameters.
e0e8c7cb6eb68e9256de2d8cbeb481d3701c05ac drm/i915: Stop using RP_DOWN_EI on Baytrail
bd784b7cc41af7a19cfb705fa6d800e511c4ab02 drm/i915: Avoid rcu_barrier() from reclaim paths (shrinker)
5be6e33400992d3450e1c8234a5af353e1560580 drm/i915: Do .init_clock_gating() earlier to avoid it clobbering watermarks
2907e8670b6ef253bffb33bf47fd2182969cf2a0 drm/nouveau/kms/nv50: fix double dma_fence_put() when destroying plane state
da2ba564a6dcf46df4f828624ff55531ff11d5b0 drm/nouveau: initial support (display-only) for GP107
12ffed96d4369f086261ba2ee734fa8c932d7f55 drm/fb-helper: Allow var->x/yres(_virtual) < fb->width/height again
a34f83639490a5cc11a9d5c1b3773d4b6eb69a9e drm/i915/gvt: set the correct default value of CTX STATUS PTR
20f4d69243785167449e6e765ce9f2a7b097ac45 EDAC, {sb,skx}_edac: Use Intel model macros instead of open-coding them
9a9260ca926c6e7b6bcfd3c93a1820d86565ff4f EDAC, sb_edac: Add Knights Mill support
414428c5da1c71986727c2fa5cdf1ed071e398d7 PCI: hv: Lock PCI bus on device eject
433fcf6b7b31f1f233dd50aeb9d066a0f6ed4b9d PCI: hv: Specify CPU_AFFINITY_ALL for MSI affinity when >= 32 CPUs
59c58ceeea9cdc6144d7b0303753e6bd26d87455 PCI: hv: Allocate interrupt descriptors with GFP_ATOMIC
feba40362b11341bee6d8ed58d54b896abbd9f84 powerpc/tm: Abort syscalls in active transactions
beff82374b259d726e2625ec6c518a5f2613f0ae powerpc: Update cpu_user_features2 in scan_features()
4705e02498d6d5a7ab98dfee9595cd5e91db2017 powerpc: Update TM user feature bits in scan_features()
b6fe0440c63716e09cfc0d1484e3898a0f29d1d1 bridge: implement missing ndo_uninit()
5b8d5429daa05bebef6ffd3297df3b502cc6f184 bridge: netlink: register netdevice before executing changelink
b1b9d366028ff580e6dd80b48a69c473361456f1 bridge: move bridge multicast cleanup to ndo_uninit
4d6fa57b4dab0d77f4d8e9d9c73d1e63f6fe8fee macsec: avoid heap overflow in skb_to_sgvec
5294b83086cc1c35b4efeca03644cf9d12282e5b macsec: dynamically allocate space for sglist
5900eca1ac3bcb03cd0da1c9a5504f1fbfe9b5bc aquantia: Fix driver name reported by ethtool
79bd99596b7305ab08109a8bf44a6a4511dbf1cd blk: improve order of bio handling in generic_make_request()
f5fe1b51905df7cfe4fdfd85c5fb7bc5b71a094f blk: Ensure users for current->bio_list can see the full list.
2859323e35ab5fc42f351fbda23ab544eaa85945 block: fix blk_integrity_register to use template's interval_exp if not 0
948f581a53b704b984aa20df009f0a2b4cf7f907 dm thin: fix a memory leak when passing discard bio down
06eb061f48594aa369f6e852b352410298b317a8 dm mpath: requeue after a small delay if blk_get_request() fails
c82feeec9a014b72c4ffea36648cfb6f81cc1b73 dm crypt: rewrite (wipe) key in crypto layer using random data
449b668ce0b9069fcaafa6344c7f10fa2ba9632e dm cache: set/clear the cache core's dirty_bitset when loading mappings
cc7e394024770d4bfd8463fab1a9e2e262a7d7c1 dm cache policy smq: make the cleaner policy write-back more aggressively
ce1d64e84dbea98d41deaf5db0fe91fd729ad2cd dm cache policy smq: allow demotions to happen even during continuous IO
97dfb20309e0ad4fa22deb5bc5ed85604d5014ef dm cache policy smq: cleanup free_target_met() and clean_target_met()
28b783e47ad702b8e0f4861ef94cdfce6abd7c80 xfs: bufferhead chains are invalid after end_page_writeback
03d12ddf845a4eb874ffa558d65a548aee9b715b locks: __break_lease cleanup in preparation of allowing direct removal of leases
ed17545d01e4a40086f1622c88ce64cc0241cfc2 GFS2: Allow glocks to be unlocked after withdraw
c4a9b538ab2a109c5f9798bea1f8f4bf93aadfb9 qla2xxx: Allow vref count to timeout on vport delete.
4492b739c9ccfaf828bd7c02dc779ec2a5e55ff4 scsi: lpfc: Fix panic on BFS configuration
4f6563677ae833baad8003e14353241bc25da4fc Move locks API users to locks_lock_inode_wait()
75575ddf29cbbf8e3c96fb02ae80a33f22054aad nfs: eliminate pointless and confusing do_vfs_lock wrappers
a1d617d8f134679741b0b35e8e1436b015ac5538 nfs: allow blocking locks to be awoken by lock callbacks
fbe77c30e9abcb3429380dec622439991a718e31 NFS: move rw_mode to nfs_pageio_header
1442f6f7c1b77de1c508318164a527e240c24a4d ipvs: explicitly forbid ipv6 service/dest creation if ipv6 mod is disabled
9854518ea04db33738602d45ebc96a200e6f5198 sched: align nlattr properly when needed
3d3ed18151172c845a11b7c184f2120220ae19fc net sched actions: policer missing timestamp processing
9c4a4e488bc8f55dfc8782c7d7757fb058e9088e net sched: actions use tcf_lastuse_update for consistency
53eb440f4ada034ea43b295891feec3df0fa7a29 net sched actions: introduce timestamp for firsttime use
48d8ee1694dd1ab25614b58f968123a4598f887e net sched actions: aggregate dumping of actions timeinfo
d074bf9600443403aa24fbc12c1f18eadc90f5aa vxlan: correctly handle ipv6.disable module parameter
d0f6dd8a914f42c6f1a3a8c08caa16559d3d9a1b net/sched: Introduce act_tunnel_key
07c0f09e23b47815251ed9e5ce245a58c6391974 net/sched: act_tunnel_key: Remove rcu_read_lock protection
9ce183b4c4d24559467d7712e313f2b3f9277437 net/sched: act_tunnel_key: add helper inlines to access tcf_tunnel_key
24ba898d43e87f9ac87353c7a13eef4ee726cab7 net/dst: Add dst port to dst_metadata utility functions
75bfbca01e48d2d62e8321609ae32aaf6c6fab0e net/sched: act_tunnel_key: Add UDP dst port option
dc594ecd4185831031d3fef2853ee76908428107 net/sched: act_tunnel_key: Fix setting UDP dst port in metadata under IPv6
b15ca182ed136087f6a2cb9ffe880c923f36a56e netlink: Add nla_memdup() to wrap kmemdup() use on nlattr
1045ba77a5962a22bce7777678ef46714107ea63 net sched actions: Add support for user cookies
37f1c63e3e29181ad412485eec2200cffc1dc70f net sched actions: do not overwrite status of action creation.
e0535ce58b92d7baf0b33284a6c4f8f0338f943e net sched actions: allocate act cookie early
3013c4983eb15f4ce8958e81922cdfd80f771d3e aquantia: Fix "ethtool -S" crash when adapter down.
505a9249c23988768983aaa0766ce54e0dbe037d net/mlx4_en: Change the error print to debug print
b8a7a990ed24af7711455fb5347b914cd07ae169 s390: wire up seccomp and getrandom syscalls
7d59deb50aafbdc01b52aed209d202d827261cb0 powerpc: Wire up sys_seccomp(), sys_getrandom() and sys_memfd_create()
d07e22597d1d355829b7b18ac19afa912cf758d1 mm: mmap: add new /proc tunable for mmap_base ASLR
9e08f57d684ac2f40685f55f659564bfd91a971e x86: mm: support ARCH_MMAP_RND_BITS
5ef11c35ce86b94bfb878b684de4cdaf96f54b2f mm: ASLR: use get_random_long()
9fea59bd7ca541e5d0851f0b6dbca83c60ea90cd powerpc/mm: Add support for runtime configuration of ASLR limits
b61a76f8850d2979550abc42d7e09154ebb8d785 x86/efi: Map RAM into the identity page table for mixed mode
ab72a27da4c6c19b0e3d6d7556fdd4afb581c8ac x86/efi: Consolidate region mapping logic
fc5f9d5f151c9fff21d3d1d2907b888a5aec3ff7 x86/mm: Fix boot crash caused by incorrect loop count calculation in sync_global_pgds()
ccd53fa2261c2676258fe523d9201099f4d5ebc1 s390/dasd: check if query host access feature is supported
ab24fbd35a6ee77a58c24bd50582c51610a194f0 s390/dasd: suppress command reject error for query host access command
defc2a9b9899511445cfbaa2c3a6509964b71207 s390/dasd: allow 0 for path_threshold attribute
e71eeb2a6bcc6282b95215eb353a3ac9ce3e0de3 ACPI / button: Do not propagate wakeup-from-suspend events
a8cd1eba6135e086109e2b94bf96deb17456ede8 dm cache policy smq: only demote entries in bottom half of the clean multiqueue
78c45607b909fb384c47c134d89b39285a6a8b45 dm cache policy smq: be more aggressive about triggering a writeback
4d44ec5ab751be63c5d348f13294304d87baa8c3 dm cache policy smq: put newly promoted entries at the top of the multiqueue
6cf4cc8f8b3b7bc9e3c04a7eab44b985d50029fc dm cache policy smq: stop preemptively demoting blocks
701e03e4e180f0cd97d4139a32e2b2d879d12da2 dm cache: track all IO to the cache rather than just the origin device's IO
49b7f768900f4084a65c3689d955b2fceac39e53 dm cache: simplify the IDLE vs BUSY state calculation
2e63309507c818e8b631a03f02c363031c007fb7 dm cache policy smq: don't do any writebacks unless IDLE
7e1b9521f5a8356553f5e58b07952bf346632ea4 dm cache: handle kmalloc failure allocating background_tracker struct
0a6fdbdeb1c25e31763c1fb333fa2723a7d2aba6 IB/srp: Fix race conditions related to task management
d86b5672b1adb98b4cdd6fbf0224bbfb03db6e2e xen-netfront: avoid crashing on resume after a failure in talk_to_netback()
e497ec680c4cd51e76bfcdd49363d9ab8d32a757 net/mlx5: Avoid dereferencing uninitialized pointer
18bcf742fbb0ddaf68d58ebf50b248748c983cea net/mlx5e: s390 system compilation fix
6f08a22c5fb2b9aefb8ecd8496758e7a677c1fde net/mlx5e: Register/unregister vport representors on interface attach/detach
4078e637c12f1e0a74293f1ec9563f42bff14a03 net/mlx5e: Do not reduce LRO WQE size when not using build_skb
b0d4660b4cc52e6477ca3a43435351d565dfcedc net/mlx5e: Fix broken CQE compression initialization
6dc4b54e77282caf17f0ff72aa32dd296037fbc0 net/mlx5e: Update MPWQE stride size when modifying CQE compress state
5d47f6c89d568ab61712d8c40676fbb020b68752 net/mlx5: Don't save PCI state when PCI error is detected
33e21c59526e9147d7c68913995298f10c35cd6f net/mlx5e: remove IEEE/CEE mode check when setting DCBX mode
ea29bd304d7b522f6162a36f394e690c579b5a63 net/mlx5e: Fix loopback selftest
275bf960ac69744430a6725a4ed7f50d36cf1441 vhost: better detection of available buffers
5503fcecd49f599e52d10f82057fe0c9d53c8f03 tun: rx batching
25d1d50e23275e141e3a3fe06c25a99f4c4bf4e0 scsi: virtio_scsi: Always try to read VPD pages
ab007cc94ff9d82f5a8db8363b3becbd946e58cf KVM: nVMX: do not leak PML full vmexit to L1
b401ee0b85a53e89739ff68a5b1a0667d664afc9 KVM: x86: lower default for halt_poll_ns
d519cb76181efc78ba67e87b38286fa04d46dfa3 drm: virtio: add virtio_gpu_translate_format
99748ab64fcc857837acfd754b530487a490edb5 drm: virtio: fix virtio_gpu_cursor_formats
837bb1d752d92ea4d870877ffbd6ec5cf76624b3 NFSv4.2: Fix writeback races in nfs4_copy_file_range
9d8cacbf5636657d2cd0dda17438a56d806d3224 NFSv4: Fix reboot recovery in copy offload
e092693443b995c8e3a565a73b5fdb05f1260f9b NFS append COMMIT after synchronous COPY
83289f909a72596d4902be3b3e1dffe48e6074af powerpc/powernv: Rename idle_power7.S to idle_book3s.S
8daaafc88b46fb3af952e92d7c2816a8950e1363 KVM: PPC: Book3S HV: Introduce kvmppc_passthru_irqmap
4ee11c1a9f7cc20026bb66ac624533310a605312 powerpc/powernv: Provide facilities for EOI, usable from real mode
9576730d0e6e301343c5aead5418ad53fcecfd14 KVM: PPC: select IRQ_BYPASS_MANAGER
c57875f5f9be2cea1f1cc83f815a3aadabedcdd3 KVM: PPC: Book3S HV: Enable IRQ bypass
37f55d30df2eef89b97d627e5830beb6983c4101 KVM: PPC: Book3S HV: Convert kvmppc_read_intr to a C function
e3c13e56a4717ee334837a20c596e527eb6355e1 KVM: PPC: Book3S HV: Handle passthrough interrupts in guest
366274f59c4de018f72ab44bb41ccaf3d657eb52 KVM: PPC: Book3S HV: Update irq stats for IRQs handled in real mode
69c592ed40d32b4b680fd46c1b059cfe8abeb755 powerpc/opal: Add real mode call wrappers
5d375199ea963fa2a972eae9c7d83db36ed37082 KVM: PPC: Book3S HV: Set server for passed-through interrupts
65e7026a6c90484fbaa076d2c51e61baf7241960 KVM: PPC: Book3S HV: Counters for passthrough IRQ stats
17d48610ae0fa218aa386b16a538c792991a3652 KVM: PPC: Book 3S: XICS: Implement ICS P/Q states
21acd0e4df04f02176e773468658c3cebff096bb KVM: PPC: Book 3S: XICS: Don't lock twice when checking for resend
6be3b6cce1e225f189b68b4e84fc711d19b4277b ath10k: fix incorrect wlan_mac_base in qca6174_regs
ea90e0dc8cecba6359b481e24d9c37160f6f524f nl80211: fix dumpit error path RTNL deadlocks
a95600294157ca7527ee7c70249fb53e09d8c566 iwlwifi: mvm: fix accessing fw_id_to_mac_id
4d339989acd730f17bc814b5ddb9c54e405766b6 iwlwifi: mvm: support ibss in dqa mode
9e478066eae41211c92a8f63cc69aafc391bd6ab mac80211: fix MU-MIMO follow-MAC mode
cd46cdedb3238f1f878c42650ec05c6344c7083d scsi: lpfc: correct rdp diag portnames
ae374a308cbfeab3cf72ef7c57695d2145defeab lpfc: Fix scsi task management error message.
d727a776d72b26033161bc19441266749455115b scsi: smartpqi: enhance kdump
feae908744d7f78b9dd06afda9de47f997f2d81a net/mlx5: Add devlink interface
e8f887ac6a45ecb7f881f278a3fed1fbf002ef0b net/mlx5e: Introduce tc offload support
e3a2b7ed018e885721a1b664ed7bf0f3fe29c81c net/mlx5e: Support offload cls_flower with drop action
12185a9fafa9cf39b73588c92aa49300ff3bf191 net/mlx5e: Support offload cls_flower with skbedit mark action
d63cd28608bb563d52e62990fa01c016e8dbdb75 net/mlx5: Add user chosen levels when allocating flow tables
acff797cd187402d73cf9f290531a41250613294 net/mlx5e: Refactor mlx5e flow steering structs
aad7e08d39bda94aedc594a82576980941306fc9 net/mlx5e: Hardware offloaded flower filter statistics support
c5bb17302e734967822be559cf661704b707b4ed net/mlx5: Refactor mlx5_add_flow_rule
55130287875c96b1e4669ee9713621e7d7f055b2 net/mlx5e: Offload TC flow counters only when supported
5c40348c69f33c4c14c051181088e8c71e38be7d net/mlx5e: Adjustments in the TC offload code towards reuse for SRIOV
03a9d11e6eeb30363971a9e372b4d61b6e817882 net/mlx5e: Add TC drop and mirred/redirect action parsing for SRIOV offloads
adb4c123f88dfa7a9c3a320731c765f07a125503 net/mlx5e: Add TC HW support for FDB (SRIOV e-switch) offloads
d957b4e38388a7ff6911db70930436ce8a2e0b2c net/mlx5e: Add TC offload support for the VF representors netdevice
1dbd0d373ac338903d27fab5204b13122cc5accd net/mlx5e: Use correct flow dissector key on flower offloading
9deb2241f19f26800e3b4c6bf49c4db992192bf0 net/mlx5: E-Switch, Set the vport when registering the uplink rep
776b12b674db53012a7ce8c379a0bbdec0a5ffa5 net/mlx5: Put elements related to offloaded TC rule in one struct
8b32580df1cb4dc9cccb2d369d20317f7f74d9ce net/mlx5e: Add TC vlan action for SRIOV offloads
095b6cfd69cedc8050b69535af8bf718ce0e9aad net/mlx5e: Add TC vlan match parsing
d0debb76df18f05ecc65579d37203703ffdec44d net/mlx5e: shut up maybe-uninitialized warning
5724b8b5694794829a071c6da7dd0bc146df0756 net/sched: tc_mirred: Rename public predicates 'is_tcf_mirred_redirect' and 'is_tcf_mirred_mirror'
74491de937125d0c98c9b9c9208b4105717a3caa net/mlx5: Add multi dest support
e37a79e5d4cac3831fac3d4afbf2461f56b4b7bd net/mlx5e: Add tc support for FWD rule with counter
358d79a47e5a8db83925241629252cfe64f225f7 net/mlx5e: Handle matching on vlan priority for offloaded TC rules
c9f1b073d0d750ccf8b30b272d1d76479f4cccbc net/mlx5: Add creation flags when adding new flow table
66958ed906b87816314c0517f05fe0b5766ec7fe net/mlx5: Support encap id when setting new steering entry
bbd00f7e2349e53345d0a151c04c8cb7e10bf2e7 net/mlx5e: Add TC tunnel release action for SRIOV offloads
a54e20b4fcae8730f51b1920ff190e2a6f1fcb04 net/mlx5e: Add basic TC tunnel set action for SRIOV offloads
370bad0f9a5261da0ef0bc76705f5b0b8af148ab net/mlx5e: Support HW (offloaded) and SW counters for SRIOV switchdev mode
de0af0bf64fc11fab253f63424bd3aba12e5f614 net/mlx5e: Enforce min inline mode when offloading flows
86a33ae1ca06a58629c4d0d80ac6d099ff932ae0 net/mlx5e: Correct cleanup order when deleting offloaded TC rules
53636068d8d6a08ca99949e2094b2b04ececa2d8 net/mlx5e: Remove redundant hashtable lookup in configure flower
961e8979ec3578ef4c441b69a5b7b9febc89fd18 net/mlx5e: Refactor tc del flow to accept mlx5e_tc_flow instance
5067b6020770ef7c8102f47079c9e577d175ef2c net/mlx5e: Remove flow encap entry in the correct place
3f7d0eb42d593a3326617dac0a247d981b3356d9 net/mlx5e: Offload TC matching on packets being IP fragments
cd3776638003b3362d9d7d1f27bcb80c276e2c28 net/mlx5e: Properly handle offloading of source udp port for IP tunnels
2fcd82e9be133e4ec777f66fd67a8fb8e7748b1b net/mlx5e: Warn when rejecting offload attempts of IP tunnels
a42485eb0ee458da3a0df82b0e42ab58ce76be05 net/mlx5e: TC ipv4 tunnel encap offload error flow fixes
2e72eb438ce5ea9fa118edfd9a5f628c2a69111a net/mlx5e: Properly get address type of encapsulation IP headers
0827444d052ba5347900376dbdbf5d9065d091d4 net/mlx5e: Set inline mode requirements for matching on IP fragments
a757d108dc1a053722215ee89116f8af9bba1525 net/mlx5e: Fix kbuild warnings for uninitialized parameters
5e86397abe10aa4c884478a45e9a35b6a37d8d5d net/mlx5e: Properly handle FW errors while adding TC rules
abeffce90c7f6ce74de9794ad0977a168edf8ef6 net/mlx5e: Fix a -Wmaybe-uninitialized warning
3e621b19b0bb1f5bea34f1fbc5fb5629191eda2b net/mlx5e: Support TC encapsulation offloads with upper devices
fed06ee89b78d3af32e235e0e89ad0d946fcb95d net/mlx5e: Disable preemption when doing TC statistics upcall
ebe06875ff1f3d5257c4da7bc74a87ee9e0ce491 net/mlx5e: Support adding ingress tc rule when egress device flag is set
65ba8fb7d5c6803ec236bb8d6650465fed7f9769 net/mlx5e: Avoid wrong identification of rules on deletion
264d7bf3c1cfd3a128d621b367f57b81d038ba10 net/mlx5: E-Switch, Enlarge the FDB size for the switchdev mode
d85cdccbb3fe9a632ec9d0f4e4526c8c84fc3523 net/mlx5e: Change the TC offload rule add/del code path to be per NIC or E-Switch
375f51e2b5b7b9a42b3139aea519cbb1bfc5d6ef net/mlx5: E-Switch, Don't allow changing inline mode when flows are configured
68a946bb81e07ed0e59a99e0c068d091ed42cc1b bnxt_en: Cap the msix vector with the max completion rings.
8eb992e876a88de7539b1b9e132dd171d865cd2f bnxt_en: Update firmware interface spec to 1.7.6.2.
7d63818a35851cf00867248d5ab50a8fe8df5943 bnxt_en: Check the FW_LLDP_AGENT flag before allowing DCBX host agent.
f667724b99ad1afc91f16064d8fb293d2805bd57 bnxt_en: Check status of firmware DCBX agent before setting DCB_CAP_DCBX_HOST.
87fe603274aa9889c05cca3c3e45675e1997cb13 bnxt_en: Call bnxt_dcb_init() after getting firmware DCBX configuration.
7480316c265c9fcdbf73b1b8dec061b893b7e987 ALSA: hda - Allow to enable/disable vmaster build explicitly
3f307834e695f59dac4337a40316bdecfb9d0508 ALSA: hda - Adding a group of pin definition to fix headset problem
2f726aec19a9d2c63bec9a8a53a3910ffdcd09f8 ALSA: hda - fix a problem for lineout on a Dell AIO machine
92a63459c396386664b30415d1751593ee91a2cc [media] uvcvideo: Correct speed testing
14f91dd524c42cdf137bda01c44e5e2f69a4c25e usb: ip: remove unnecessary & operation
fcb371a1d5fc7def715227f74dfcb9be73a597e8 drm/nouveau/fb/gf100-: modify constructors to allow more customisation
ba4c063d47562d28aed3d440959fb6b13802e921 drm/nouveau/fb/gm200: split ram implementation from gm107
97e5268d57bb2ec9c82cf8758fa97a2f04ea9d1b drm/nouveau/fb/gf100-: rework ram detection
271393ba6e2ac384a14e581d34d5d72c5953e3c6 drm/nouveau/fb/gf100-: Fix 32 bit wraparound in new ram detection
36601c2b36e27435d9be33cfa092120ff69914eb drm/nouveau/kms/nv50: fix source-rect-only plane updates
e6db95799b1b870aae15682a6d0898df9e9dfb38 drm/nouveau/kms/nv50: skip core channel cursor update on position-only changes
678a3bd1b3de6d2ebf604e7d708bc8150bb667e9 tools/power turbostat: fix bugs in --add option
812db3f77b9a3f6ed59baf7a0d5c3fd8ec8ef86a tools/power turbostat: Add --show and --hide parameters
0f47c08d8ccf8252a5c007502919bdc2126ffb1f tools/power turbostat: bug fixes to --add, --show/--hide features
7170a374377d7c70d63a2d3eb38f8fe32e6ffadd tools/power turbostat: Denverton: use HW CC1 counter, skip C3, C7
5a8d75a1b8c99bdc926ba69b7b7dbe4fae81a5af block: fix bio_will_gap() for first bvec with offset
b25634e2a051bef4b2524b11adddfbfa6448f6cd nvmet-rdma: Fix a possible uninitialized variable dereference
7777bdedf31d674c4fd5ebbfbd27a6a6ae0a17e0 nvme-rdma: get rid of local reconnect_delay
42a45274c225829637b585e1c994a68f59507108 nvme-fabrics: Allow ctrl loss timeout configuration
fd8563ced8f50c5029fdf8e57735138e2e630423 nvme-rdma: Support ctrl_loss_tmo
013c074f8642d8e815ad670601f8e27155a74b57 PM / sleep: prohibit devices probing during suspend/hibernation
3b046a97cbd35a73e1eef968dbfb1a0aac745a77 md/raid1: Refactor raid1_make_request
fd76863e37fef26fe05547fddfa6e3d05e1682e6 RAID1: a new I/O barrier implementation to remove resync window
824e47daddbfc6ebe1006b8659f080620472a136 RAID1: avoid unnecessary spin locks in I/O barrier code
af5f42a7e426a87bfa69adc9b9d8930385a1ddf6 md/raid1: fix a use-after-free bug
aff8da09f2381f0869faaf6637b0d892a3ee99ed md/raid1: handle flush request correctly
43ac9b84a399bc10210a2d9f4e0778b7c6059c07 md/raid1: Use a new variable to count flighting sync requests
ee22184b53c823f6956314c2815d4068e3820737 Btrfs: use linux/sizes.h to represent constants
0fcbf996d848d03573113d83f4e3fb3bcfa5ab5e fs: return -EOPNOTSUPP if clone is not supported
b19775e4785996503b106e59d9d3a8839e677afd scsi: qedi: Fix endpoint NULL panic during recovery.
d6e022f1d207a161cd88e08ef0371554680ffc46 workqueue: handle NUMA_NO_NODE for unbound pool_workqueue lookup
358d6a2c3ecae2b22c7d7e61f9d5672557446dfb toshiba_acpi: Do not register vendor backlight when acpi_video bl is available
a4866aa812518ed1a37d8ea0c881dc946409de94 mm: Tighten x86 /dev/mem with zeroing reads
bfc8c90139ebd049b9801a951db3b9a4a00bed9c mem-hotplug: implement get/put_online_mems
30467e0b3be83c286d60039f8267dd421128ca74 mm, hotplug: fix concurrent memory hot-add deadlock
f931ab479dd24cf7a2c6e2df19778406892591fb mm: fix devm_memremap_pages crash, use mem_hotplug_{begin, done}
b5d24fda9c3dce51fcb4eee459550a458eaaf1e2 mm, devm_memremap_pages: hold device_hotplug lock over mem_hotplug_{begin, done}
3fc21924100b13f73c734d0ce8dfcfe913fcf7a8 mm: validate device_hotplug is held for memory hotplug
55adc1d05dca9e949cdf46c747cb1e91c0e9143d mm: add private lock to serialize memory hotplug operations
ff8c0c53c47530ffea82c22a0a6df6332b56c957 mm/hugetlb.c: don't call region_abort if region_chg fails
4742a35d9de745e867405b4311e1aac412f0ace1 hugetlbfs: initialize shared policy as part of inode allocation
133ff0eac95b7dc6edf89dc51bd139a0630bbae7 mm/hmm: heterogeneous memory management (HMM for short)
da4c3c735ea4dcc2a0b0ff0bd4803c336361b6f5 mm/hmm/mirror: helper to snapshot CPU page table
74eee180b935fcb9b83a56dd7648fb75caf38f0e mm/hmm/mirror: device page fault handler
3072e413e305e353cd4654f8a57d953b66e85bf3 mm/memory_hotplug: introduce add_pages
4ef589dc9b10cdcae75a2b2b0e9b2c5e8a92c378 mm/hmm/devmem: device memory hotplug using ZONE_DEVICE
858b54dabf4363daa3a97b9a722130a8e7cea8c9 mm/hmm/devmem: dummy HMM device for ZONE_DEVICE memory
2916ecc0f9d435d849c98f4da50e453124c87531 mm/migrate: new migrate mode MIGRATE_SYNC_NO_COPY
a5430dda8a3a1cdd532e37270e6f36436241b6e7 mm/migrate: support un-addressable ZONE_DEVICE page in migration
8315ada7f095bfa2cae0cd1e915b95bf6226897d mm/migrate: allow migrate_vma() to alloc new page on empty entry
50a0cb565246f20d59cdb161778531e4b19d35ac x86/efi-bgrt: Fix kernel panic when mapping BGRT data
da63b6b20077469bd6bd96e07991ce145fc4fbc4 x86/KASLR: Fix kexec kernel boot crash when KASLR randomization fails
d52e7d5a952c5e35783f96e8c5b7fcffbb0d7c60 x86/KASLR: Parse all 'memmap=' boot option entries
4cdba14f84c9102c4434384731cd61018b970d59 x86/KASLR: Handle the memory limit specified by the 'memmap=' and 'mem=' boot options
8fcc9bc3eaa2ef8345e2b4b22e3a88804ac46337 Documentation/kernel-parameters.txt: Update 'memmap=' boot option description
5b8b9cf76add98e19ff8ceb4247c2920687591a0 x86/KASLR: Use the right memcpy() implementation
a8d9df5a509a232a959e4ef2e281f7ecd77810d6 x86/cpufeatures: Enable new AVX512 cpu features
83781d180b219bd079ae72b341ee3f21fb236e97 KVM: x86: Expose Intel AVX512IFMA/AVX512VBMI/SHA features to guest.
06b35d93af0a5904aa832f58733be84ddbfe2e04 x86/cpufeature: Add AVX512_VPOPCNTDQ feature
a17f32270af1e1054bbc8858b0f27226a2c859ba kvm: x86: Expose Intel VPOPCNTDQ feature to guest
347abad981c1ef815ea5ba861adba6a8c6aa1580 sched, time: Fix build error with 64 bit cputime_t on 32 bit systems
9d7fb04276481c59610983362d8e023d262b58ca sched/cputime: Guarantee stime + utime == rtime
173be9a14f7b2e901cf77c18b1aafd4d672e9d9e sched/cputime: Fix NO_HZ_FULL getrusage() monotonicity regression
692f66f26a4c19d73249736aa973c13a1521b387 crash: move crashkernel parsing and vmcore related code under CONFIG_CRASH_CORE
51dbd92520d4344fef78481b1bcbc3a7de32b69b ia64: reuse append_elf_note() and final_note() functions
22bd0177bd08677a8888f4d1d8361b0326f9119b powerpc/fadump: remove dependency with CONFIG_KEXEC
81d9eca502fcc360950ef476124626d97856e139 powerpc/fadump: Add a warning when 'fadump_reserve_mem=' is used
0b0f43fe2e7291aa97b1febeaa5a0de453d007ca net sched: indentation and other OCD stylistic fixes
956af37102b515512331a03c35c958b2a1d8dd87 net_sched: act_vlan: Add priority option
03645a11a570d52e70631838cb786eb4253eb463 ipv6: lock socket in ip6_datagram_connect()
d5e3a190937a1e386671266202c62565741f0f1a l2tp: fix racy socket lookup in l2tp_ip and l2tp_ip6 bind()
df90e6886146dd744eb3929782e6df9749cd4a69 l2tp: fix lookup for sockets not bound to a device in l2tp_ip
31e2f21fb35bfaa5bdbe1a4860dc99e6b10d8dcd l2tp: fix address test in __l2tp_ip6_bind_lookup()
94d7ee0baa8b764cf64ad91ed69464c1a6a0066b l2tp: hold tunnel socket when handling control frames in l2tp_ip and l2tp_ip6
b72b5bf6a8fc9065f270ae135bbd47abb9d96790 net: introduce skb_crc32c_csum_help
dba003067a43a9699bef0c4bdbe320ece5a109b8 net: use skb->csum_not_inet to identify packets needing crc32c
43c26a1a45938624fb9301e8bf7dfabbed293619 net: more accurate checksumming in validate_xmit_skb()
7e06297768886337707f5833942b3bd524a6d3d5 sctp: set new_asoc temp when processing dupcookie
9798e6fe4f9b6a2847a40e24b75e68afdc7a01b3 net: act_mirred: allow statistic updates from offloaded actions
5712bf9c5c30ade3204016147d7b04bece6952d9 net/sched: act_mirred: Use passed lastuse argument
2836b4f224d4fd7d1a2b23c3eecaf0f0ae199a74 virtio-net: enable TSO/checksum offloads for Q-in-Q vlans
8b485ce69876c65db12ed390e7f9c0d2a64eff2c tcp: do not inherit fastopen_req from parent
657831ffc38e30092a2d5f03d385d710eb88b09a dccp/tcp: do not inherit mc_list from parent
83eaddab4378db256d00d295bda6ca997cd13a52 ipv6/dccp: do not inherit ipv6_mc_list from parent
70957eaecc2e43308e403c80293bec3d59632412 macvlan: Fix performance issues with vlan tagged packets
9b8805a325591cf5b6b9df71200de25a2bd721fd sock: add sk_dst_pending_confirm flag
4ff0620354f2b39b9fe2a91c22c4de9d1fba0c8e net: add dst_pending_confirm flag to skbuff
c86a773c78025f5b825bacd7b846f4fa60dc0317 sctp: add dst_pending_confirm flag
c3a2e8370534f810cac6050169db0ed3e0f94f0b tcp: replace dst_confirm with sk_dst_confirm
63fca65d08632fbec9d9b655f671cf08aa1aeeb8 net: add confirm_neigh method to dst_ops
0dec879f636f11b0ffda1cb5fd96a1754c59ead3 net: use dst_confirm_neigh for UDP, RAW, ICMP, L2TP
aab0830a3811fc242b8cdd82655e98ed5387cc6a be2net: Update the driver version to 11.4.0.0
1671d522cdd9933dee7dddfcf9f62c561283824a block: rename blk_mq_freeze_queue_start()
806f026f9b901eaf1a6baeb48b5da18d6a4f818e nvme: use blk_mq_start_hw_queues() in nvme_kill_queues()
986f75c876dbafed98eba7cb516c5118f155db23 nvme: avoid to use blk_mq_abort_requeue_list()
7254a50a5db40ca6739ddf37e0a45e6912532b2c blk-mq: remove blk_mq_abort_requeue_list()
bf17aa36c0f199f5b254262e77eaefda7da0f50b nvme: Correct NVMF enum values to match NVMe-oF rev 1.0
2345ab1df8a9aa3cdca942142b48eb141faeb1c3 drm/i915/gvt: not to restore in-context mmio
4f9bac039a64f6306b613a0d90e6b7e75d7ab0c4 hv_utils: drop .getcrosststamp() support from PTP driver
1d10602d306cb7f70545b5e1166efc9409e7d384 hv_utils: fix TimeSync work on pre-TimeSync-v4 hosts
08cb5b0f058a325fcb5305e33f572ff6d6dfa289 pnfs: Fix the check for requests in range of layout segment
dcd208697707b12adeaa45643bab239c5e90ef9b nfsd: fix supported attributes for acl & labels
555a65f66c3c4d9dd46a565418b0b655d861a723 iser-target: Fix queue-full response handling
fa7e25cf13a6d0b82b5ed1008246f44d42e8422c target: Fix unknown fabric callback queue-full errors
0b4d3452b8b4a5309b4445b900e3cec022cca95a security/selinux: allow security_sb_clone_mnt_opts to enable/disable native labeling behavior
d8931847488d250e27d8f18ca6b7373e9f981d7a cxgb4: add support for offloading u32 filters
b20ff726fa8360a0508d2d79ecdee5a45d854e99 cxgb4: add support for drop and redirect actions
0d4b729dac35bb265533c79b554578a5ec6df384 cxgb4: Fix uld_send() for ctrl pkts
45da1ca2e20fb5b13c1abc8e65185dda08c88030 cxgb4: Increase max number of tc u32 links
3be0679b4a91930ca8d0c8a66b39058a698e70fe cxgb4: Shutdown adapter if firmware times out or errors out
c415f704c8276bc686abcb0497bf2606038ca73c net/mlx5: E-Switch, Correctly deal with inline mode on ConnectX-5
598762cf91532e6e86dd21199b5e7f803df73f49 perf test: Disable breakpoint signal tests for powerpc
7e700d2c59e5853c9126642976b4f5768f64c9b3 acpi/nfit: Fix memory corruption/Unregister mce decoder on failure
321f5c5f2c494f3c94cec2289c8add678657ba2d drm/nouveau: replace multiple open-coded runpm support checks with function
8fa4338acca96cbc231e4125229632e879476464 drm/nouveau: enable autosuspend only when it'll actually be used
e3f948cd3283e4fbe5907f1f3967c839912f480e RAID1: ignore discard error
0af32fb468b4a4434dd759d68611763658650b59 xfs: fix bogus space reservation in xfs_iomap_write_allocate
997198ba1ed691c09457120576c27dbd953d0557 fs/block_dev.c: return the right error in thaw_bdev()
08fdc8a0138afaf324296a342f32ad26ec465e43 buffer.c: call thaw_super during emergency thaw
dd504589577d8e8e70f51f997ad487a4cb6c026f crypto: algif_skcipher - Require setkey before accept(2)
37766586c965d63758ad542325a96d5384f4a8c9 crypto: af_alg - Add nokey compatibility path
a0fa2d037129a9849918a92d91b79ed6c7bd2818 crypto: algif_skcipher - Add nokey compatibility path
a5596d6332787fd383b3b5427b41f94254430827 crypto: hash - Add crypto_ahash_has_setkey
6de62f15b581f920ade22d758f4c338311c2f0d4 crypto: algif_hash - Require setkey before accept(2)
6e8d8ecf438792ecf7a3207488fb4eebc4edb040 crypto: algif_skcipher - Add key check exception for cipher_null
308453aa9156a3b8ee382c0949befb507a32b0c1 vlan: Propagate MAC address to VLANs
7dd7eb9513bd02184d45f000ab69d78cb1fa1531 ipv6: Check ip6_find_1stfragopt() return value properly.
e3e86b5119f81e5e2499bea7ea1ebe8ac6aab789 ipv6: Fix leak in ipv6_gso_segment().
6265e169cd313d6f3aad3c33d0a5b0d9624f69f5 random: push extra entropy to the output pools
f80bbd8b92987f55f26691cd53785c4a54622eb0 random: convert DEBUG_ENT to tracepoints
12ff3a517ab92b5496c731a3c354caa1f16c569f random: simplify loop in random_read
a58aa4edc6d2e779894b1fa95a2f4de157ff3b3b random: forget lock in lockless accounting
0fb7a01af5b0cbe5bf365891fc4d186f2caa23f7 random: simplify accounting code
7d1b08c40c4f02c119476b29eca9bbc8d98d2a83 random: entropy_bytes is actually bits
2132a96f66b6b4d865113e7d4cb56d5f7c6e3cdf random: clarify bits/bytes in wakeup thresholds
d20f78d252778e0fae8f8256e602bd682eb2185c x86, random: Enable the RDSEED instruction
331c6490c7f10dcf263712e313b7c0bc7fb6d77a random: If we have arch_get_random_seed*(), try it before blocking
7b878d4b48c4e04b936918bb83836a107ba453b3 random: Add arch_has_random[_seed]()
f9c6d4987b23e0a514464bae6771933a48e4cd01 random: fix BUG_ON caused by accounting simplification
e33ba5fa7afce1a9f159704121d4e4d110df8185 random: fix nasty entropy accounting bug
85608f8e16c28f818f6bb9918958d231afa8bec2 random: remove unneeded hash of a portion of the entropy pool
cff850312cc7c0e0b9fe8b573687812dea232031 random: only update the last_pulled time if we actually transferred entropy
79a8468747c5f95ed3d5ce8376a3e82e0c5857fc random: check for increase of entropy_count because of signed conversion
48d6be955a7167b0d0e025ae6c39e795e3544499 random: limit the contribution of the hw rng to at most half
205a525c334295e3cd4cc7755fd2c0398e3a787f random: Add callback API for random pool readiness
3371f3da08cff4b75c1f2dce742d460539d6566d random: initialize the non-blocking pool via add_hwgenerator_randomness()
9b4d008787f864f17d008c9c15bbe8a0f7e2fc24 random: print a warning for the first ten uninitialized random users
e192be9d9a30555aae2ca1dc3aad37cba484cd4a random: replace non-blocking pool with a Chacha20-based CRNG
1e7f583af67be4ff091d0aeb863c649efd7a9112 random: make /dev/urandom scalable for silly userspace programs
c92e040d575a7389d72e7e6f25e2033bfb867f8b random: add backtracking protection to the CRNG
59b8d4f1f5d26e4ca92172ff6dcd1492cdb39613 random: use for_each_online_node() to iterate over NUMA nodes
dd0f0cf58af70dc9267409f113bea772d57f675c random: Fix crashes with sparse node ids
dcc3b5ffe1b32771c9a22e2c916fb94c4fcf5b79 sched/deadline: Add missing update_rq_clock() in dl_task_timer()
54d6d3039e2d84b6fbfbe59ec57d856371edf0a2 sched/deadline: Fix dl_bw comment
3effcb4247e74a51f5d8b775a1ee4abf87cc089a sched/deadline: Use the revised wakeup rule for suspending constrained dl tasks
45cc6586b7a73e84a8806881122b6ec306cdc9e7 drm/amdgpu: Program ring for vce instance 1 at its register space
cd15fb64ee56192760ad5c1e2ad97a65e735b18b Revert "dm mirror: use all available legs on multiple failures"
e09287dfef280dbe9f9aa1faa7a125957e9b7fbb crypto: rsa - allow keys >= 2048 bits in FIPS mode
d89a67134fcc7e863530624fe5a88dde0159cfb8 crypto: drbg - do not call drbg_instantiate in healt test
fb16abc2e9deedf075cfe2a01584b092ab5440e0 crypto: testmgr - mark authenticated ctr(aes) also as FIPS able
b3614763059b82c26bdd02ffcb1c016c1132aad0 crypto: drbg - remove FIPS 140-2 continuous test
bca4feb0d4fe2d5da1a0f31ef89f63709aba4906 crypto: testmgr - add aead null encryption test vectors
5208ed2ca16526cdbec25abe594a3cc3aea210f4 crypto: testmgr - add aead cbc des, des3_ede tests
284a0f6e87b0721e1be8bca419893902d9cf577a crypto: testmgr - Disable fips-allowed for authenc() and des() ciphers
8a45ac12ec5b6ee67f8559c78ae11d9af8b821ee crypto: testmgr - don't use interruptible wait in tests
f5f7bebc91ab378dea5aad5277c4d283e46472d9 crypto: chcr - Check device is allocated before use
ee3bd84f55d670961f36df332be299f3386b7690 crypto: chcr - fix itnull.cocci warnings
feec084a7cf49adb4a87bea9867fb2ba99821f48 tun: use symmetric hash
64c2b20301f62c697352c8028c569b1b2bdd8e82 userfaultfd: shmem: handle coredumping in handle_userfault()
b3fd82207e2723247aac478e8756451fe85b1ac2 cxgb4: fix to bring link down after adapter crash
d9f2950006f110f54444a10442752372ee568289 Revert "NFS: nfs_rename() handle -ERESTARTSYS dentry left behind"
16e72e9b30986ee15f17fbb68189ca842c32af58 powerpc: do not make the entire heap executable
558e8e27e73f53f8a512485be538b07115fe5f3c Revert "nohz: Fix collision between tick and other hrtimers"
ce6cf9a15d62fd7ee92f4f9bb754883bacf85a3e nohz: Add hrtimer sanity check
411fe24e6b7c283c3a1911450cdba6dd3aaea56e nohz: Fix collision between tick and other hrtimers, again
f99973e18b65ca1fff8c81532e3132b8f622aea8 nohz: Fix buggy tick delay on IRQ storms
d4af6d933ccffd24286528f04d5c39e702c8580f nohz: Fix spurious warning when hrtimer and clockevent get out of sync
feb7695fe9fb83084aa29de0094774f4c9d4c9fc dm io: fix duplicate bio completion due to missing ref count
0bb549052d33f8992544764a6cf1299d06ba7e2f efi: Add esrt support
f2f6b587c5533c43f3c26f1babd96e32b2c12a9b efi/esrt: Fix some compiler warnings
18aefbc5cc075617b00ffefba70029541e18fd1a drivers/firmware: Make efi/esrt.c driver explicitly non-modular
7f83773ced2f9f41dec5e6eb3eb4a7ef23ca1d75 efi/esrt: Don't preformat name
3846c15820a1841225d0245afda4875af23dfbbe efi: Work around ia64 build problem with ESRT driver
f58a37b2e01f91c23af457a7662f6b5a1e9f41e0 efi/esrt: Use memremap not ioremap to access ESRT table in memory
e66880808960322d8126f878d7fe315a3f1ada74 efi/esrt: Fix typo in pr_err() message
822f5845f710e57d7e2df1fd1ee00d6e19d334fe efi/esrt: Cleanup bad memory map log messages
17ed7c38427ff84ef77eac15724b6faf35e5492e powerpc: Add HAVE_PERF_USER_STACK_DUMP support
8953de2f02ad7b15e4964c82f9afd60f128e4e98 net: bridge: allow IPv6 when multicast flood is disabled
926347061ef1f4d3873829fd1960c6e4b965aa9f target: break up free_device callback
ed1afac9145c4517a2c84f93e04a35046ea206e3 crypto: testmgr - mark more algorithms as FIPS compliant
bcf741cb779283081db47853264cc94854e7ad83 crypto: testmgr - Reenable sha1/aes in FIPS mode
1be7107fbe18eed3e319a6c3e83c78254b693acb mm: larger stack guard gap, between vmas
e4781421e883340b796da5a724bda7226817990b netfilter: merge udp and udplite conntrack helpers
9700ba805b4f58d26c4621ad6ba6b0e632e7a04b netfilter: nat: merge udp and udplite helpers
deaa0a976b829af8a7886d8e2528a675cbe4dac8 netfilter: nf_ct_dccp/sctp: fix memory leak after netns cleanup
f65fd1aa4f9881d5540192d11f7b8ed2fec936db PCI: Avoid FLR for Intel 82579 NICs
a53cb29b0af346af44e4abf13d7e59f807fba690 vxlan: fix use-after-free on deletion
69e766612c4bcb79e19cebed9eed61d4222c1d47 vxlan: fix hlist corruption
4b4c21fad6ae6bd58ff1566f23b0f4f70fdc9a30 geneve: fix hlist corruption
b82ce24426a4071da9529d726057e4e642948667 crypto: sha1-ssse3 - Disable avx2

__CHANGES NOT IN UPSTREAM________________
Apply debranding changes'
bonding: Restore old symlink names in sysfs to preserve ABI
spec: Update dracut dependency to enable more algorithms as FIPS compliant
Revert "enlarge stack guard gap"
tcmu: perfom device add and del synchronously
tcmu: prep for sync add/rm device support
perf: libdw support for powerpc
mntns: Remove incorrect put_mnt_ns
boot/kaslr: Skip kernel text relocation if no kaslr action is done
wacom: fix Wacom Cintiq 27QHD max pressure
pci: moving check and allocation of device_rh ahead
keys: Protect request_key() against a type with no match function
enlarge stack guard gap
hid_wacom: temporaly disable power_supply usage from driver
submit nvme_admin_activate_fw to admin queue
i40e: set VFs to untrusted mode by default
qat: copy back iv on completion
chcr - Fix txq ids
chcr - Change flow IDs
af_alg - zeroize key data
hmm: RHEL specific, properly handle pte_file() case within HMM
hmm: remove extra sanity check to avoid crash
dm-raid: up target version to show MD deadlock fixes are present
fix suspend/write deadlock
fix single core deadlock
complete introduction of feature word 16
amdgpu: change wptr to 64 bits
tcmu: increase ring buffer size
mnt: Move unprivileged use of the mntns to tech preview
document that no more GSO bits can be added
fix GSO_PARTIAL support
udp: remove remote checksum offload
vxlan: remove remote checksum offload for egress
crash: Fix KEXEC_NOTE_BYTES definition
boot/kaslr: Change the 'KASLR disabled' message from warning to debug printing
sfc-falcon: register proper netdevice_notifier
pci: Add Intel XXV710 to broken INTx masking quirk
ib/rxe: Fix kernel panic in send
kabi workaround for scsi_internal_device_block
vfs: fix locks_lock_file_wait() on overlayfs
dmaengine: ioatdma: add BDX-EP PCI dev IDs
i915: Do not drop pagetables when empty
fadump: update about offset where fadump is reserved
userns: Preserve bug compatibility on failure for chrome
efi: Correct ident mapping of efi old_map when kalsr enabled
mark AMD Naples SP3 processors supported
set x86_model_id in early_identify_cpu for unsupported check
hmm: workaround kABI breakage because of new migrate mode enum
hmm/devmem: support device memory in CPU snapshot helpers
private-memory: new type of ZONE_DEVICE for unaddressable memory v2
put_page: move ZONE_DEVICE page reference decrement v2
hmm: remove old code to prepare for lastest patchset backport
boot/kaslr: Disable KASLR by default
microcode/intel: access the initrd at the relocated address
i915: don't rcu-sync from shrinker
Add target_core_user.h to included headers
mlx5e: revert commented out flow dissector changes
smartpqi: bump driver version for RHEL-7.4
perf annotate s390: Fix perf annotate error -95
nfp: add missing .ndo_size to net_device_ops structure
enic: Add missing ndo_size param to net_device_ops struct
cxgb4: Add missing ndo_size param to net_device_ops struct
ipv6: implement ipv6_mod_enabled
xen: don't crash under Xen hypervisors which present bogus topology
macvtap: read skb from skb array
Change TECH Preview message to match driver name
ib/mlx5: Add missing hw counters
mlx5e: Initialize ndo_size
config: enable GVT
makefile: update DRM version
revert "lpfc: Revert: Fix eh_deadline setting for sli3 adapters"
revert "lpfc: Correct WQ creation for pagesize"
revert "lpfc: minor code cleanups"
revert "lpfc: refactor debugfs queue prints"
revert "lpfc: refactor debugfs queue dump routines"
revert "lpfc: NVME Initiator: Base modifications"
revert "lpfc: NVME Initiator: bind to nvme_fc api"
revert "lpfc: NVME Initiator: Add debugfs support"
revert "lpfc: NVME Target: Base modifications"
revert "lpfc: NVME Target: Receive buffer updates"
revert "lpfc: NVME Target: Merge into FC discovery"
revert "lpfc: NVME Target: bind to nvmet_fc api"
revert "lpfc: NVME Target: Add debugfs support"
revert "lpfc: Update copyrights"
revert "Update lpfc version to 11.2.0.8 with NVME support"
revert "lpfc: remove redundant assignment of sgel"
revert "lpfc: don\'t dereference dma_buf-&gt; iocbq before null check"
revert "lpfc: Fix IO submission if WQ is full"
revert "lpfc: add NVME exchange aborts"
revert "lpfc: correct double print"
revert "lpfc: remove dead sli3 nvme code"
revert "lpfc: correct rdp diag portnames"
revert "lpfc: Fix eh_deadline setting for sli3 adapters"
revert "lpfc: replace init_timer by setup_timer"
revert "lpfc: add missing Kconfig NVME dependencies"
revert "lpfc: Rework lpfc Kconfig for NVME options"
revert "lpfc: Finalize Kconfig options for nvme"
revert "lpfc version bump for nvme to 11.2.0.11"
revert "nvme_fc: correct LS validation"
revert "nvme_fc: Move LS\'s to rport"
revert "nvme_fc: fix command id check"
revert "nvme-fc: add .map_queue entry to blk_mq_ops"
revert "nvme_fc: avoid double kfree(), don\'t call nvme_cleanup_cmd() in nvme_fc_unmap_data()"
revert "lpfc: Mark NVMe and NVMe Target support as tech preview"
revert "lpfc: code cleanups in NVME initiator base"
qla2xxx: Update message for module parameter
Mark AMD Naples/Ryzen as unsupported
mpx: saving FPU in do_bounds()
revert "mm: Simplify get_user_pages() PTE bit handling"
revert "mm: fix gup_pte_range() vs DAX mappings"
sfc: fix "an one" typo instances
config: enable dlm for ppc64le
configs: enable gfs2 for ppc64le
intel_rdt: Fix the notifier priority crash
Avoid output of ioapic probe error
tun: remove unnecessary sk_receive_queue
storvsc: Support manual scan of FC hosts on Hyper-V
uapi: Fix exposed undefined u32 and u64 types to userland through /usr/include/linux/md_p.h
Mark Intel Knights Mill processor as supported
hid-wacom: support 27QHDT using the new driver
qla2xxx: Turn ql2xmqsupport off by default
lpfc: Mark NVMe and NVMe Target support as tech preview
nvme_fc: avoid double kfree(), don't call nvme_cleanup_cmd() in nvme_fc_unmap_data()
nvme-fc: add .map_queue entry to blk_mq_ops
lpfc version bump for nvme to 11.2.0.11
Update lpfc version to 11.2.0.8 with NVME support
lpfc: Revert: Fix eh_deadline setting for sli3 adapters
rhel: remove drm from DocBook build
upstream sync to v4.10
acpi / video: Fix lockdep issue
include/linux/rwsem.h: add '<linux/err.h>' include
qla2xxx: Defer marking device lost when receiving an RSCN
lpfc: Make default for lpfc_use_blk_mq to off
hpsa: cleanup PCI IDs in hpsa driver
replace ALUA transition wait/flush with mutex
export protocol identifier
intel: Add get_cpu_cache_id function
ceph: remove bogus warnings from ceph_releasepage
ceph: get caps when handling splice()
kernfs: Enable kernfs build by default in RHEL7
kernfs: Fix kernfs interface differences
ntb perf tool
Update Version
Comment Fix
NTB-RP support
Update Device IDs
BWD Link Recovery
userns: Avoid panics by reserving space in user_table for future ucounts
sched: cls_tcindex: fix another crash in cls_tcindex
sched: cls_flower: mark tech preview
sched: cls_flower: respect rcu grace period on cls destruction
sched: cls_flower: Fix pointer cast
sched: cls_flower: Introduce hardware offload support
sched: cls_flower: flower fix typo
sched: cls_flower: Add full IPv6 addresses to flow_keys
sched: cls_flower: Get skb hash over flow_keys structure
sched: cls_flower: introduce Flower classifier
efi: Do not handle BGRT image in kdump kernel
inline ip_fast_csum()
add support for csum_add()
put csum_tcpudp_magic inline
mm/kaslr: EFI region is mistakenly included into KASLR VA space for randomization
uaccess.h: Include linux/sched.h
revert "Use pte_none() to test for empty PTE"
powerpc: Fix copy_file_range syscall
s390: set NR_syscalls to 376
userns: Remove user namespaces from tech preview status
userns: By default allow 0 user namespaces in RHEL7
rhel: device-dax: only support page-sized faults
fix debug output typo
fix PHYS_PFN/PFN_PHYS mixup
mark the aquantia ethernet driver as tech-preview
aquantia: Reset is_gso flag when EOP reached
aquantia: Fix for LSO with IPv6
aquantia: Missing spinlock initialization
aquantia: Fix for RX checksum offload
aquantia: Copying tx buffers is not needed
aquantia: Fixed incorrect buff->len calculation
aquantia: Call netdev_register after all initialized
aquantia: Null pointer check for aq_nic_ndev_alloc
aquantia: Using NETDEV_TX_OK instead 0
aquantia: Fixed missing rtnl_unlock
aquantia: Superfluous initialization of "err"
aquantia: Using module_pci_driver
aquantia: Removed busy_count field
aquantia: Removed extra assignment for skb->dev
aquantia: Add 2500/5000 mbit link modes support
generalize napi_complete_done()
aquantia: return -ETIME in macro AQ_HW_WAIT_FOR
aquantia: remove another redundant err check
aquantia: remove redundant err check
aquantia: Integrate AQtion 2.5/5 GB NIC driver
aquantia: Receive side scaling
aquantia: Ethtool support
aquantia: Hardware interface and utility functions
aquantia: Atlantic hardware abstraction layer
aquantia: PCI operations
aquantia: Vector operations
aquantia: Atlantic A0 and B0 specific functions
aquantia: Support for NIC-specific code
aquantia: Low-level hardware interfaces
aquantia: Add ring support code
aquantia: Common functions and definitions
aquantia: Make and configuration files
btmrvl: drop duplicate header slab.h
btwilink: Fix probe return value
Tidy-up coding style in hci_bcsp.c
Add a new 04ca:3011 QCA_ROME device
hci_uart: Add Marvell support
hci_bcm: Change protocol name
btrtl: Add RTL8822BE Bluetooth device
add WCNSS dependency for HCI driver
btusb: Add support for 0cf3:e009
Add support of 13d3:3490 AR3012 device
Add USB ID 13D3:3487 to ath3k
hci_bcsp: fix code style
hci_bcm: Add BCM2E71 ACPI ID
flow_dissector: skb_flow_get_be16() can be static
ipv6: introduce ipv6_authlen and IP6_OFFSET
break flow vs skbuff header dependency
flow_dissector: Add MPLS entropy label in flow_keys
flow_dissector: Add GRE keyid in flow_keys
flow_dissector: Add IPv6 flow label to flow_keys
flow_dissector: Add VLAN ID to flow_keys
flow_dissector: Get rid of IPv6 hash addresses flow keys
flow_dissector: Add keys for TIPC address
flow_dissector: Add full IPv6 addresses to flow_keys
flow_dissector: Get skb hash over flow_keys structure
flow_dissector: Remove superfluous setting of key_basic
flow_dissector: Simplify GRE case in flow_dissector
flow_dissector: Add flow_keys digest
hpsa: update version to 3.4.18-0-RH1
hpsa: update driver to 3.4.16-0-RH1
remove WARN that is not kernel bug
chcr - Cosmetic change
Fix compilation error when CLS_ACT isn't set
Add couple of lower device helper functions
be2iscsi: do not lock the session->lock spinlock twice
sha1-mb - stylistic cleanup
sha-mb - Fix load failure
mcryptd - Fix load failure
xts - fix compile errors
more robust crypto_memneq
testmgr - Fix GCM test vector IV overrun
qat - Fix DMA on stack memory
userfaultfd: shmem: use __SetPageSwapBacked in shmem_mcopy_atomic_pte()
userfaultfd: hugetlbfs: backport build fixes
userfaultfd: shmem: backport build fixes
hugetlbfs: unmap pages if page fault raced with hole punch update locking
hugetlbfs: add hugetlbfs_fallocate() update locking
locking/rwsem: Fix rwsem kABI issues
lockless enqueuing
simplify work flushing
rapl: Add Knights Mill CPUID
Update rt2x00 driver to work with cfg80211 from linux-4.11-rc1
Update mwifiex driver to compile with cfg80211 from linux-4.11-rc1
Update brcmfmac driver to compile with cfg80211 from linux-4.11-rc1
Update iwlegacy driver to compile with cfg80211 from linux-4.11-rc1
Backport iwlwifi driver from linux-4.11-rc1
Backport wil6210 driver from linux-4.11-rc1
Backport ath10k driver from linux-4.11-rc1
Backport ath9k driver from linux-4.11-rc1
Backport net/mac80211 from linux-4.11-rc1
Backport net/wireless from linux-4.11-rc1
usbip: remove staged driver
nfp: consolidate two PCI device tables/structures into one
nfp: backport definitions of nn_{read,write}*
add page_to_mfn()
xen-netfront: remove residual dead code
xen-netfront: fix array initialization bug
set qdisc pkt len before tc_classify
redhat: mark NVMe over FC as tech preview
util: don't forget to init host_ts.lock
revert "mce: Do not panic when single core has reached a timeout"
Add may_detach_mounts sysctl to hide new behavior
Use RH_KABI_EXTEND to wrap nameidata.m_seq
Readd include of linux/lglock.h in fs/internal.h to preserve the kabi
btrfs: Fix warning "variable \'gen\' set but not used"
btrfs: Fix warning "variable \'blocksize\' set but not used"
sd: Export SD Status via "ssr" device attribute
Add helper kstrtobool_from_user
cifs: Add decryption and encryption key generation
rtnetlink: wrap .ndo_fdb_dump calls
sock: backport __sock_queue_rcv_skb()
Remove "tech preview" label for flexfile driver
tcp/dccp: avoid starving bh on connect
hid-wacom: rename driver and dont use it on already supported devices
use kobj_to_dev()
ext4: Define EFSCORRUPTED error value
uio-hv-generic: mark as Tech Preview
pci: Retrofit Intel Volume Management Device (VMD) driver
rh_kabi: Provide better error messages for size and align checks
relax check on sg gap
ixgbe: Update driver version for RHEL 7.4
sched: cls_u32: fix unsued cpu variable
sched: fw use RCU
sched: rcu-ify tcf_proto
mei_wdt: add status debugfs entry
mei: fixup function prototypes in mei_cl_bus.h
generalize napi_complete_done()
shut up a maybe-uninitialized warning
qed/qede: update driver version to 8.7.1.43
Remove the celleb support
Remove ppc_md.remove_memory
udp: fix errorneous sk_filter removal
enable skx_edac
bnx2x: Fix printk() message errors
bnx2x: cleanup ETH_* defines
sfc: generalize napi_complete_done()
generalize napi_complete_done()
Rename CONFIG_PM to CONFIG_PM_SLEEP in XGBE driver
bridge: un-comment br_multicast_list_adjacent()
Miscellaneous conversions to ETH_ALEN
i40e: keep VFs trusted by default
i40e: fixup of commit 4e312a9e3b
i40e: fixup of commit f77ccd1220
i40e: fixup of commit e306fbc5e1
i40e: remove RHEL-only FCOE message
i40iw: remove tech-preview
x86/xen/kdump: Replace CONFIG_KEXEC with CONFIG_KEXEC_CORE
revert "x86/panic: Replace CONFIG_KEXEC_CORE with CONFIG_KEXEC"
mpt2sas: fix a print at driver exit and change version string
vmx - Fix ABI detection
64: Disable the mm track code during boot stage
tasklist_lock: Change from rwlock_t to qrwlock_t
qrwlock: Build wrapper headers and functions on top of qrwlock
locking/pvqspinlock: Block kernel module loading on old kernel
locking/qspinlock: Handle ticket unlock code in old kernel modules
locking/qspinlock: Maintain same kABI signature as ticket locks
alsa: remove unused dmaengine bits
alsa: asoc: Replace MBI_REG_READ with constant 0x10
hugetlb: don't use reserved during VM_SHARED mapping cow
don't crash when selinux is disabled
tools/power/acpi: Update Intel copyright
tools/power/acpi: fix typo in printk in ec help message
Export acpi_os_get*() functions
ccp: Do not support CCP crypto API in RHEL7
ccp - remove unneeded code
ccp - CCP Kconfig fixes
revert "acpi / apd: Remove CLK_IS_ROOT"
red hat kabi: Added flag signifying the use of file_operations_extend structure
red hat kabi: Remove the file operations that cause the kABI breakage
red hat kabi: Add new system call to nfs in a kABI compatible way
red hat kabi: introduce new calls to file_operations_extend
red hat kabi: Use #ifndef __GENKSYMS__ to maintain kAPI
rhashtable-test: Get rid of previous workaround
introduce net_device_extended
deprecate dev->trans_start
introduce csum_replace_by_diff() helper
ulp/ipoib: remove pkey_mutex
tools/power turbostat: RHEL Add additional RAPL features to Intel processors
nfp: add to redhat build configuration
rsa - add .gitignore for crypto/*.-asn1.files
geneve: make access to tunnel options similar to vxlan
vss: Improve log messages
utils: reduce HV_UTIL_NEGO_TIMEOUT timeout
get rid of id in struct vmbus_channel
make VMBus bus ids persistent
vmbus: Make mmio resource local
cleanup vmbus_open() for wrap around mappings
get rid of timeout in vmbus_open()
vmbus: add a per-channel rescind callback
ethtool: page allocation failure
qat - fix aes-xts key sizes
qat - Add DH support
qat - Add RSA CRT mode
qat - Pack cfg ctl structs
virtio-scsi: Fix endianess bug in virtscsi_queuecommand
rapl: reduce message loglevel
flowi: introduce get_hash_from_flowi4
add sk_filter_trim_cap
lpfc: driver update for rhel7.4 rev 11.2.0.6
lpfc: Adding the lpfc_use_blk_mq module parameter
Remove clk.h include
Remove .owner field
Turn AMD support to tristate
add AMD GPIO driver support
kernel/ap_bus: Fix hang condition on crypto card config-off
x86/panic: Replace CONFIG_KEXEC_CORE with CONFIG_KEXEC
Set dev->device_rh to NULL after free
objtool: Resync vcvtph2ps definition
Make vmalloc_to_phys() public
dm raid: define data_offset status field
i40e: Fix corruption when transferring large files
mem_detect: Revert "add DAT sanity check"
tick-sched: add housekeeping_mask cpumask
Introduce str_error_r()
hyperv: manually clear IO-APIC IRR bit for migrating IRQs
revert "perf/uncore: Disable uncore on kdump kernel"
Change memory hotplug normal message to use pr_debug
fix cntlid type
split dev_list_lock
ipv6: Fix wrong direct fetch of hw_enc_features in ipv6_gso_segment()
tcp: fix race during timewait sk creation
eeh: Create PE for VFs
eeh: EEH device for VF
pci: Remove VFs prior to PF
Mark Intel Purley supported
Mark Kaby Lake with Kaby Lake PCH as supported
revert "vt-d: Disable passthrough mode on Kexec kernel"
mlxsw: add DEVLINK dependencies
mlxsw: Use 'zx' to print size_t format
Add protodown support
rocker: Add basic netdev counters
rocker: Add dependency to CONFIG_BRIDGE in Kconfig
net: ABI/testing: Spelling s/calss/class/
revert "bridge: Program port vlan filters only if filtering is enabled in bridge"
printk: avoid livelock if another CPU printks continuously
revert "smp: Fix __max_logical_packages value setup"
efi: Fix usage of illegal alignment on efi_low_alloc
hpwdt: add support for iLO5
Ref the policy object sooner
Add support for missing Kabylake Sunrise Point PCH
fix call location of smp_quirk_init_udelay()
hpet: Re-enable HPET on Purley 4S
