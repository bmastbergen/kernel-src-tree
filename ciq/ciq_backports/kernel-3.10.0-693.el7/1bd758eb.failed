net: change name of flow_dissector header to match the .c file name

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] change name of flow_dissector header to match the .c file name (Jonathan Toppins) [1428557]
Rebuild_FUZZ: 96.12%
commit-author Jiri Pirko <jiri@resnulli.us>
commit 1bd758eb1cab2fa5b71a23f9e5d3c8076f4ed650
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/1bd758eb.failed

add couple of empty lines on the way.

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1bd758eb1cab2fa5b71a23f9e5d3c8076f4ed650)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
#	include/linux/skbuff.h
diff --cc drivers/net/bonding/bond_main.c
index 0fd8f39dab0c,fe7c38721775..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -76,7 -76,8 +76,12 @@@
  #include <net/netns/generic.h>
  #include <net/pkt_sched.h>
  #include <linux/rculist.h>
++<<<<<<< HEAD
 +#include <net/flow_keys.h>
++=======
+ #include <net/flow_dissector.h>
+ #include <net/switchdev.h>
++>>>>>>> 1bd758eb1cab (net: change name of flow_dissector header to match the .c file name)
  #include <net/bonding.h>
  #include <net/bond_3ad.h>
  #include <net/bond_alb.h>
diff --cc include/linux/skbuff.h
index 449d0a455cd2,e35c2b13d434..000000000000
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@@ -33,10 -34,7 +33,14 @@@
  #include <linux/dma-mapping.h>
  #include <linux/netdev_features.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
 +#include <net/flow_keys.h>
 +#include <linux/in6.h>
 +
 +#include <linux/rh_kabi.h>
++=======
+ #include <net/flow_dissector.h>
++>>>>>>> 1bd758eb1cab (net: change name of flow_dissector header to match the .c file name)
  
  /* A. Checksumming of received packets by device.
   *
* Unmerged path drivers/net/bonding/bond_main.c
diff --git a/drivers/net/ethernet/cisco/enic/enic_clsf.c b/drivers/net/ethernet/cisco/enic/enic_clsf.c
index e2fbefe5772f..2dd8644171af 100644
--- a/drivers/net/ethernet/cisco/enic/enic_clsf.c
+++ b/drivers/net/ethernet/cisco/enic/enic_clsf.c
@@ -5,7 +5,7 @@
 #include <linux/in.h>
 #include <linux/types.h>
 #include <linux/skbuff.h>
-#include <net/flow_keys.h>
+#include <net/flow_dissector.h>
 #include "enic_res.h"
 #include "enic_clsf.h"
 
* Unmerged path include/linux/skbuff.h
diff --git a/include/net/flow_keys.h b/include/net/flow_dissector.h
similarity index 87%
rename from include/net/flow_keys.h
rename to include/net/flow_dissector.h
index 7ee2df083542..783058f9524a 100644
--- a/include/net/flow_keys.h
+++ b/include/net/flow_dissector.h
@@ -1,5 +1,5 @@
-#ifndef _NET_FLOW_KEYS_H
-#define _NET_FLOW_KEYS_H
+#ifndef _NET_FLOW_DISSECTOR_H
+#define _NET_FLOW_DISSECTOR_H
 
 /* struct flow_keys:
  *	@src: source ip address in case of IPv4
@@ -29,17 +29,24 @@ struct flow_keys {
 
 bool __skb_flow_dissect(const struct sk_buff *skb, struct flow_keys *flow,
 			void *data, __be16 proto, int nhoff, int hlen);
-static inline bool skb_flow_dissect(const struct sk_buff *skb, struct flow_keys *flow)
+
+static inline bool skb_flow_dissect(const struct sk_buff *skb,
+				    struct flow_keys *flow)
 {
 	return __skb_flow_dissect(skb, flow, NULL, 0, 0, 0);
 }
+
 __be32 __skb_flow_get_ports(const struct sk_buff *skb, int thoff, u8 ip_proto,
 			    void *data, int hlen_proto);
-static inline __be32 skb_flow_get_ports(const struct sk_buff *skb, int thoff, u8 ip_proto)
+
+static inline __be32 skb_flow_get_ports(const struct sk_buff *skb,
+					int thoff, u8 ip_proto)
 {
 	return __skb_flow_get_ports(skb, thoff, ip_proto, NULL, 0);
 }
+
 u32 flow_hash_from_keys(struct flow_keys *keys);
+
 unsigned int flow_get_hlen(const unsigned char *data, unsigned int max_len,
 			   __be16 protocol);
 #endif
diff --git a/include/net/ip.h b/include/net/ip.h
index 5506ed81f7f4..c088f647d01e 100644
--- a/include/net/ip.h
+++ b/include/net/ip.h
@@ -31,7 +31,7 @@
 #include <net/route.h>
 #include <net/snmp.h>
 #include <net/flow.h>
-#include <net/flow_keys.h>
+#include <net/flow_dissector.h>
 
 struct sock;
 
diff --git a/include/net/ipv6.h b/include/net/ipv6.h
index 9b1513b769fd..df9cc65dc388 100644
--- a/include/net/ipv6.h
+++ b/include/net/ipv6.h
@@ -19,7 +19,7 @@
 #include <net/if_inet6.h>
 #include <net/ndisc.h>
 #include <net/flow.h>
-#include <net/flow_keys.h>
+#include <net/flow_dissector.h>
 #include <net/snmp.h>
 
 #define SIN6_LEN_RFC2133	24
diff --git a/net/core/flow_dissector.c b/net/core/flow_dissector.c
index 4e48f508edbd..039aced667d6 100644
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@ -12,7 +12,7 @@
 #include <linux/if_tunnel.h>
 #include <linux/if_pppox.h>
 #include <linux/ppp_defs.h>
-#include <net/flow_keys.h>
+#include <net/flow_dissector.h>
 #include <scsi/fc/fc_fcoe.h>
 
 /* copy saddr & daddr, possibly using 64bit load/store
diff --git a/net/sched/cls_flow.c b/net/sched/cls_flow.c
index c999e8f9936b..26d5eb06af8b 100644
--- a/net/sched/cls_flow.c
+++ b/net/sched/cls_flow.c
@@ -26,7 +26,7 @@
 #include <net/pkt_cls.h>
 #include <net/ip.h>
 #include <net/route.h>
-#include <net/flow_keys.h>
+#include <net/flow_dissector.h>
 
 #if defined(CONFIG_NF_CONNTRACK) || defined(CONFIG_NF_CONNTRACK_MODULE)
 #include <net/netfilter/nf_conntrack.h>
diff --git a/net/sched/sch_choke.c b/net/sched/sch_choke.c
index ecb70f411ff4..4735fc8d63ad 100644
--- a/net/sched/sch_choke.c
+++ b/net/sched/sch_choke.c
@@ -18,7 +18,7 @@
 #include <net/pkt_sched.h>
 #include <net/inet_ecn.h>
 #include <net/red.h>
-#include <net/flow_keys.h>
+#include <net/flow_dissector.h>
 
 /*
    CHOKe stateless AQM for fair bandwidth allocation
