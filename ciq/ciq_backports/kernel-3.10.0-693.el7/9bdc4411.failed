qeth: add network device features for VLAN devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Hans Wippel <hwippel@linux.vnet.ibm.com>
commit 9bdc441102f012b70f51e1ca73b603312fff8b5d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9bdc4411.failed

Network device features indicate the capabilities of network devices (e.g.,
TX checksum offloading and TSO) and their configuration state. Additional
network device features (vlan_features) indicate for each network device,
which capabilities can be used on VLAN devices, that are configured on the
respective base network device.

In the current qeth implementation, network device features are only set
for the base network devices and not for the VLAN devices. Thus, features
like TX checksum offloading cannot be used on VLAN devices.

This patch adds network device features to vlan_features, so they can be
used by VLAN devices.

	Signed-off-by: Hans Wippel <hwippel@linux.vnet.ibm.com>
	Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9bdc441102f012b70f51e1ca73b603312fff8b5d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_l2_main.c
#	drivers/s390/net/qeth_l3_main.c
diff --cc drivers/s390/net/qeth_l2_main.c
index 87b4499b880d,9fd48de38a4c..000000000000
--- a/drivers/s390/net/qeth_l2_main.c
+++ b/drivers/s390/net/qeth_l2_main.c
@@@ -999,13 -1107,30 +999,31 @@@ static int qeth_l2_setup_netdev(struct 
  	card->dev->watchdog_timeo = QETH_TX_TIMEOUT;
  	card->dev->mtu = card->info.initial_mtu;
  	card->dev->netdev_ops = &qeth_l2_netdev_ops;
 -	card->dev->ethtool_ops =
 -		(card->info.type != QETH_CARD_TYPE_OSN) ?
 -		&qeth_l2_ethtool_ops : &qeth_l2_osn_ops;
 +	if (card->info.type != QETH_CARD_TYPE_OSN)
 +		SET_ETHTOOL_OPS(card->dev, &qeth_l2_ethtool_ops);
 +	else
 +		SET_ETHTOOL_OPS(card->dev, &qeth_l2_osn_ops);
  	card->dev->features |= NETIF_F_HW_VLAN_CTAG_FILTER;
++<<<<<<< HEAD
++=======
+ 	if (card->info.type == QETH_CARD_TYPE_OSD && !card->info.guestlan) {
+ 		card->dev->hw_features = NETIF_F_SG;
+ 		card->dev->vlan_features = NETIF_F_SG;
+ 		/* OSA 3S and earlier has no RX/TX support */
+ 		if (qeth_is_supported(card, IPA_OUTBOUND_CHECKSUM)) {
+ 			card->dev->hw_features |= NETIF_F_IP_CSUM;
+ 			card->dev->vlan_features |= NETIF_F_IP_CSUM;
+ 		}
+ 		if (qeth_is_supported(card, IPA_INBOUND_CHECKSUM)) {
+ 			card->dev->hw_features |= NETIF_F_RXCSUM;
+ 			card->dev->vlan_features |= NETIF_F_RXCSUM;
+ 		}
+ 		/* Turn on SG per default */
+ 		card->dev->features |= NETIF_F_SG;
+ 	}
++>>>>>>> 9bdc441102f0 (qeth: add network device features for VLAN devices)
  	card->info.broadcast_capable = 1;
  	qeth_l2_request_initial_mac(card);
 -	card->dev->gso_max_size = (QETH_MAX_BUFFER_ELEMENTS(card) - 1) *
 -				  PAGE_SIZE;
 -	card->dev->gso_max_segs = (QETH_MAX_BUFFER_ELEMENTS(card) - 1);
  	SET_NETDEV_DEV(card->dev, &card->gdev->dev);
  	netif_napi_add(card->dev, &card->napi, qeth_l2_poll, QETH_NAPI_WEIGHT);
  	netif_carrier_off(card->dev);
diff --cc drivers/s390/net/qeth_l3_main.c
index 460eb41bbb92,05f764c6b23c..000000000000
--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@@ -3275,7 -3106,10 +3275,14 @@@ static int qeth_l3_setup_netdev(struct 
  				card->dev->hw_features = NETIF_F_SG |
  					NETIF_F_RXCSUM | NETIF_F_IP_CSUM |
  					NETIF_F_TSO;
++<<<<<<< HEAD
 +				card->dev->features = NETIF_F_RXCSUM;
++=======
+ 				card->dev->vlan_features = NETIF_F_SG |
+ 					NETIF_F_RXCSUM | NETIF_F_IP_CSUM |
+ 					NETIF_F_TSO;
+ 				card->dev->features = NETIF_F_SG;
++>>>>>>> 9bdc441102f0 (qeth: add network device features for VLAN devices)
  			}
  		}
  	} else if (card->info.type == QETH_CARD_TYPE_IQD) {
* Unmerged path drivers/s390/net/qeth_l2_main.c
* Unmerged path drivers/s390/net/qeth_l3_main.c
