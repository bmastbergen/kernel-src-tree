tools/power turbostat: line up headers when -M is used

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [tools] power turbostat: line up headers when -M is used (Prarit Bhargava) [1422076]
Rebuild_FUZZ: 94.12%
commit-author Len Brown <len.brown@intel.com>
commit 5cc6323c797687d7193fef6deec589c23f16289a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5cc6323c.failed

The -M option adds an 18-column item, and the header
needs to be wide enough to keep the header aligned
with the columns.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 5cc6323c797687d7193fef6deec589c23f16289a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 92e6f5e6c99d,cfdb574ea302..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -297,50 -327,61 +297,54 @@@ int get_msr(int cpu, off_t offset, unsi
  void print_header(void)
  {
  	if (show_pkg)
 -		outp += sprintf(outp, "\tPackage");
 +		outp += sprintf(outp, " Package");
  	if (show_core)
 -		outp += sprintf(outp, "\tCore");
 +		outp += sprintf(outp, "    Core");
  	if (show_cpu)
 -		outp += sprintf(outp, "\tCPU");
 +		outp += sprintf(outp, "     CPU");
  	if (has_aperf)
 -		outp += sprintf(outp, "\tAvg_MHz");
 +		outp += sprintf(outp, " Avg_MHz");
  	if (has_aperf)
 -		outp += sprintf(outp, "\tBusy%%");
 +		outp += sprintf(outp, "   %%Busy");
  	if (has_aperf)
 -		outp += sprintf(outp, "\tBzy_MHz");
 -	outp += sprintf(outp, "\tTSC_MHz");
 +		outp += sprintf(outp, " Bzy_MHz");
 +	outp += sprintf(outp, " TSC_MHz");
  
  	if (extra_delta_offset32)
 -		outp += sprintf(outp, "\tcount 0x%03X", extra_delta_offset32);
 +		outp += sprintf(outp, "  count 0x%03X", extra_delta_offset32);
  	if (extra_delta_offset64)
 -		outp += sprintf(outp, "\tCOUNT 0x%03X", extra_delta_offset64);
 +		outp += sprintf(outp, "  COUNT 0x%03X", extra_delta_offset64);
  	if (extra_msr_offset32)
++<<<<<<< HEAD
 +		outp += sprintf(outp, "   MSR 0x%03X", extra_msr_offset32);
++=======
+ 		outp += sprintf(outp, "\t         MSR 0x%03X", extra_msr_offset32);
++>>>>>>> 5cc6323c7976 (tools/power turbostat: line up headers when -M is used)
  	if (extra_msr_offset64)
 -		outp += sprintf(outp, "\tMSR 0x%03X", extra_msr_offset64);
 +		outp += sprintf(outp, "           MSR 0x%03X", extra_msr_offset64);
  
 -	if (!debug)
 -		goto done;
 -
 -	if (do_irq)
 -		outp += sprintf(outp, "\tIRQ");
  	if (do_smi)
 -		outp += sprintf(outp, "\tSMI");
 +		outp += sprintf(outp, "     SMI");
  
  	if (do_nhm_cstates)
 -		outp += sprintf(outp, "\tCPU%%c1");
 +		outp += sprintf(outp, "  CPU%%c1");
  	if (do_nhm_cstates && !do_slm_cstates && !do_knl_cstates)
 -		outp += sprintf(outp, "\tCPU%%c3");
 +		outp += sprintf(outp, "  CPU%%c3");
  	if (do_nhm_cstates)
 -		outp += sprintf(outp, "\tCPU%%c6");
 +		outp += sprintf(outp, "  CPU%%c6");
  	if (do_snb_cstates)
 -		outp += sprintf(outp, "\tCPU%%c7");
 +		outp += sprintf(outp, "  CPU%%c7");
  
  	if (do_dts)
 -		outp += sprintf(outp, "\tCoreTmp");
 +		outp += sprintf(outp, " CoreTmp");
  	if (do_ptm)
 -		outp += sprintf(outp, "\tPkgTmp");
 -
 -	if (do_gfx_rc6_ms)
 -		outp += sprintf(outp, "\tGFX%%rc6");
 -
 -	if (do_gfx_mhz)
 -		outp += sprintf(outp, "\tGFXMHz");
 +		outp += sprintf(outp, "  PkgTmp");
  
  	if (do_skl_residency) {
 -		outp += sprintf(outp, "\tTotl%%C0");
 -		outp += sprintf(outp, "\tAny%%C0");
 -		outp += sprintf(outp, "\tGFX%%C0");
 -		outp += sprintf(outp, "\tCPUGFX%%");
 +		outp += sprintf(outp, " Totl%%C0");
 +		outp += sprintf(outp, "  Any%%C0");
 +		outp += sprintf(outp, "  GFX%%C0");
 +		outp += sprintf(outp, " CPUGFX%%");
  	}
  
  	if (do_pc2)
* Unmerged path tools/power/x86/turbostat/turbostat.c
