mac80211: fix MU-MIMO follow-MAC mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Johannes Berg <johannes.berg@intel.com>
commit 9e478066eae41211c92a8f63cc69aafc391bd6ab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9e478066.failed

There are two bugs in the follow-MAC code:
 * it treats the radiotap header as the 802.11 header
   (therefore it can't possibly work)
 * it doesn't verify that the skb data it accesses is actually
   present in the header, which is mitigated by the first point

Fix this by moving all of this out into a separate function.
This function copies the data it needs using skb_copy_bits()
to make sure it can be accessed if it's paged, and offsets
that by the possibly present vendor radiotap header.

This also makes all those conditions more readable.

	Cc: stable@vger.kernel.org
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 9e478066eae41211c92a8f63cc69aafc391bd6ab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/rx.c
diff --cc net/mac80211/rx.c
index 5e65e838992a,4b12c70c85f0..000000000000
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@@ -485,6 -560,8 +530,11 @@@ ieee80211_rx_monitor(struct ieee80211_l
  	struct net_device *prev_dev = NULL;
  	int present_fcs_len = 0;
  	unsigned int rtap_vendor_space = 0;
++<<<<<<< HEAD
++=======
+ 	struct ieee80211_sub_if_data *monitor_sdata =
+ 		rcu_dereference(local->monitor_sdata);
++>>>>>>> 9e478066eae4 (mac80211: fix MU-MIMO follow-MAC mode)
  
  	if (unlikely(status->flag & RX_FLAG_RADIOTAP_VENDOR_DATA)) {
  		struct ieee80211_vendor_radiotap *rtap = (void *)origskb->data;
* Unmerged path net/mac80211/rx.c
