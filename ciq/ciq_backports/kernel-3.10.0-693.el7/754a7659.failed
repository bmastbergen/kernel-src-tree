drm/i915/fbdev: Stop repeating tile configuration on stagnation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [drm] i915/fbdev: Stop repeating tile configuration on stagnation (Rob Clark) [1422186]
Rebuild_FUZZ: 96.72%
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit 754a76591b12c88f57ad8b4ca533a5c9566a1922
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/754a7659.failed

If we cease making progress in finding matching outputs for a tiled
configuration, stop looping over the remaining unconfigured outputs.

v2: Use conn_seq (instead of pass) to only apply tile configuration on
first pass.

Fixes: b0ee9e7fa5b4 ("drm/fb: add support for tiled monitor configurations. (v2)")
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Tomasz Lis <tomasz.lis@intel.com>
	Cc: Dave Airlie <airlied@redhat.com>
	Cc: Daniel Vetter <daniel.vetter@intel.com>
	Cc: Jani Nikula <jani.nikula@linux.intel.com>
	Cc: Sean Paul <seanpaul@chromium.org>
	Cc: <stable@vger.kernel.org> # v3.19+
	Reviewed-by: Tomasz Lis <tomasz.lis@intel.com>
Link: http://patchwork.freedesktop.org/patch/msgid/20170224114306.4400-1-chris@chris-wilson.co.uk
(cherry picked from commit 754a76591b12c88f57ad8b4ca533a5c9566a1922)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_fbdev.c
diff --cc drivers/gpu/drm/i915/intel_fbdev.c
index c607217c13ea,82993a87654c..000000000000
--- a/drivers/gpu/drm/i915/intel_fbdev.c
+++ b/drivers/gpu/drm/i915/intel_fbdev.c
@@@ -357,24 -349,25 +357,38 @@@ static bool intel_fb_initial_config(str
  				    struct drm_fb_offset *offsets,
  				    bool *enabled, int width, int height)
  {
++<<<<<<< HEAD
 +	struct drm_device *dev = fb_helper->dev;
++=======
+ 	struct drm_i915_private *dev_priv = to_i915(fb_helper->dev);
+ 	unsigned long conn_configured, conn_seq, mask;
+ 	unsigned int count = min(fb_helper->connector_count, BITS_PER_LONG);
++>>>>>>> 754a76591b12 (drm/i915/fbdev: Stop repeating tile configuration on stagnation)
  	int i, j;
  	bool *save_enabled;
  	bool fallback = true;
  	int num_connectors_enabled = 0;
  	int num_connectors_detected = 0;
 -
 -	save_enabled = kcalloc(count, sizeof(bool), GFP_KERNEL);
++<<<<<<< HEAD
 +	uint64_t conn_configured = 0, mask;
 +	int pass = 0;
++=======
++>>>>>>> 754a76591b12 (drm/i915/fbdev: Stop repeating tile configuration on stagnation)
 +
 +	save_enabled = kcalloc(fb_helper->connector_count, sizeof(bool),
 +			       GFP_KERNEL);
  	if (!save_enabled)
  		return false;
  
 -	memcpy(save_enabled, enabled, count);
 -	mask = GENMASK(count - 1, 0);
 -	conn_configured = 0;
 +	memcpy(save_enabled, enabled, fb_helper->connector_count);
 +	mask = (1 << fb_helper->connector_count) - 1;
  retry:
++<<<<<<< HEAD
 +	for (i = 0; i < fb_helper->connector_count; i++) {
++=======
+ 	conn_seq = conn_configured;
+ 	for (i = 0; i < count; i++) {
++>>>>>>> 754a76591b12 (drm/i915/fbdev: Stop repeating tile configuration on stagnation)
  		struct drm_fb_helper_connector *fb_conn;
  		struct drm_connector *connector;
  		struct drm_encoder *encoder;
@@@ -383,10 -377,10 +397,10 @@@
  		fb_conn = fb_helper->connector_info[i];
  		connector = fb_conn->connector;
  
 -		if (conn_configured & BIT(i))
 +		if (conn_configured & (1 << i))
  			continue;
  
- 		if (pass == 0 && !connector->has_tile)
+ 		if (conn_seq == 0 && !connector->has_tile)
  			continue;
  
  		if (connector->status == connector_status_connected)
@@@ -486,13 -488,11 +500,11 @@@
  			      modes[i]->flags & DRM_MODE_FLAG_INTERLACE ? "i" :"");
  
  		fallback = false;
 -		conn_configured |= BIT(i);
 +		conn_configured |= (1 << i);
  	}
  
- 	if ((conn_configured & mask) != mask) {
- 		pass++;
+ 	if ((conn_configured & mask) != mask && conn_configured != conn_seq)
  		goto retry;
- 	}
  
  	/*
  	 * If the BIOS didn't enable everything it could, fall back to have the
* Unmerged path drivers/gpu/drm/i915/intel_fbdev.c
