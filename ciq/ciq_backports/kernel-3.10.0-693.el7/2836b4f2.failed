virtio-net: enable TSO/checksum offloads for Q-in-Q vlans

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] virtio_net: enable TSO/checksum offloads for Q-in-Q vlans (Eric Garver) [1423935]
Rebuild_FUZZ: 98.25%
commit-author Vlad Yasevich <vyasevich@gmail.com>
commit 2836b4f224d4fd7d1a2b23c3eecaf0f0ae199a74
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2836b4f2.failed

Since virtio does not provide it's own ndo_features_check handler,
TSO, and now checksum offload, are disabled for stacked vlans.
Re-enable the support and let the host take care of it.  This
restores/improves Guest-to-Guest performance over Q-in-Q vlans.

	Acked-by: Jason Wang <jasowang@redhat.com>
	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2836b4f224d4fd7d1a2b23c3eecaf0f0ae199a74)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/virtio_net.c
diff --cc drivers/net/virtio_net.c
index c956abc0afff,3e9246cc49c3..000000000000
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@@ -1305,6 -1988,8 +1305,11 @@@ static const struct net_device_ops virt
  #ifdef CONFIG_NET_POLL_CONTROLLER
  	.ndo_poll_controller = virtnet_netpoll,
  #endif
++<<<<<<< HEAD
++=======
+ 	.ndo_xdp		= virtnet_xdp,
+ 	.ndo_features_check	= passthru_features_check,
++>>>>>>> 2836b4f224d4 (virtio-net: enable TSO/checksum offloads for Q-in-Q vlans)
  };
  
  static void virtnet_config_changed_work(struct work_struct *work)
* Unmerged path drivers/net/virtio_net.c
