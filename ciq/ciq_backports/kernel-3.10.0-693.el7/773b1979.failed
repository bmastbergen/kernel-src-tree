crypto: qat - Remove deprecated create_workqueue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [crypto] qat - Remove deprecated create_workqueue (Neil Horman) [1382849]
Rebuild_FUZZ: 90.91%
commit-author Bhaktipriya Shridhar <bhaktipriya96@gmail.com>
commit 773b197972bebcbd9eb3cd4d2688a68619eef85c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/773b1979.failed

alloc_workqueue replaces deprecated create_workqueue().

The workqueue device_reset_wq has workitem &reset_data->reset_work per
adf_reset_dev_data. The workqueue  pf2vf_resp_wq is a workqueue for
PF2VF responses has workitem &pf2vf_resp->pf2vf_resp_work per pf2vf_resp.
The workqueue adf_vf_stop_wq is used to call adf_dev_stop()
asynchronously.

Dedicated workqueues have been used in all cases since the workitems
on the workqueues are involved in operation of crypto which can be used in
the IO path which is depended upon during memory reclaim. Hence,
WQ_MEM_RECLAIM has been set to gurantee forward progress under memory
pressure.
Since there are only a fixed number of work items, explicit concurrency
limit is unnecessary.

	Signed-off-by: Bhaktipriya Shridhar <bhaktipriya96@gmail.com>
	Acked-by: Tejun Heo <tj@kernel.org>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 773b197972bebcbd9eb3cd4d2688a68619eef85c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_common/adf_sriov.c
diff --cc drivers/crypto/qat/qat_common/adf_sriov.c
index 4479b0b63296,9320ae1d005b..000000000000
--- a/drivers/crypto/qat/qat_common/adf_sriov.c
+++ b/drivers/crypto/qat/qat_common/adf_sriov.c
@@@ -298,3 -288,19 +298,22 @@@ int adf_sriov_configure(struct pci_dev 
  	return numvfs;
  }
  EXPORT_SYMBOL_GPL(adf_sriov_configure);
++<<<<<<< HEAD
++=======
+ 
+ int __init adf_init_pf_wq(void)
+ {
+ 	/* Workqueue for PF2VF responses */
+ 	pf2vf_resp_wq = alloc_workqueue("qat_pf2vf_resp_wq", WQ_MEM_RECLAIM, 0);
+ 
+ 	return !pf2vf_resp_wq ? -ENOMEM : 0;
+ }
+ 
+ void adf_exit_pf_wq(void)
+ {
+ 	if (pf2vf_resp_wq) {
+ 		destroy_workqueue(pf2vf_resp_wq);
+ 		pf2vf_resp_wq = NULL;
+ 	}
+ }
++>>>>>>> 773b197972be (crypto: qat - Remove deprecated create_workqueue)
diff --git a/drivers/crypto/qat/qat_common/adf_aer.c b/drivers/crypto/qat/qat_common/adf_aer.c
index b40d9c8dad96..7bfb57f1bcb5 100644
--- a/drivers/crypto/qat/qat_common/adf_aer.c
+++ b/drivers/crypto/qat/qat_common/adf_aer.c
@@ -243,7 +243,8 @@ EXPORT_SYMBOL_GPL(adf_disable_aer);
 
 int adf_init_aer(void)
 {
-	device_reset_wq = create_workqueue("qat_device_reset_wq");
+	device_reset_wq = alloc_workqueue("qat_device_reset_wq",
+					  WQ_MEM_RECLAIM, 0);
 	return !device_reset_wq ? -EFAULT : 0;
 }
 
* Unmerged path drivers/crypto/qat/qat_common/adf_sriov.c
diff --git a/drivers/crypto/qat/qat_common/adf_vf_isr.c b/drivers/crypto/qat/qat_common/adf_vf_isr.c
index aa689cabedb4..bf99e11a3403 100644
--- a/drivers/crypto/qat/qat_common/adf_vf_isr.c
+++ b/drivers/crypto/qat/qat_common/adf_vf_isr.c
@@ -321,7 +321,7 @@ EXPORT_SYMBOL_GPL(adf_vf_isr_resource_alloc);
 
 int __init adf_init_vf_wq(void)
 {
-	adf_vf_stop_wq = create_workqueue("adf_vf_stop_wq");
+	adf_vf_stop_wq = alloc_workqueue("adf_vf_stop_wq", WQ_MEM_RECLAIM, 0);
 
 	return !adf_vf_stop_wq ? -EFAULT : 0;
 }
