virtio: update balloon size in balloon "probe"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [virtio] update balloon size in balloon "probe" (David Hildenbrand) [1439570]
Rebuild_FUZZ: 90.48%
commit-author Konstantin Neumoin <kneumoin@virtuozzo.com>
commit 8424af5336b34043a705d66bdf2c1428048ef085
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8424af53.failed

The following commit 'fad7b7b27b6a (virtio_balloon: Use a workqueue
instead of "vballoon" kthread)' has added a regression. Original code with
kthread starts the thread inside probe and checks the necessity to update
balloon inside the thread immediately.

Nowadays the code behaves differently. Work is queued only on the first
command from the host after the negotiation. Thus there is a window
especially at the guest startup or the module reloading when the balloon
size is not updated until the notification from the host.

This patch adds balloon size check at the end of the probe to match
original behaviour.

	Signed-off-by: Konstantin Neumoin <kneumoin@virtuozzo.com>
	Signed-off-by: Denis V. Lunev <den@openvz.org>
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
(cherry picked from commit 8424af5336b34043a705d66bdf2c1428048ef085)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/virtio/virtio_balloon.c
diff --cc drivers/virtio/virtio_balloon.c
index a9ca908865d3,181793f07852..000000000000
--- a/drivers/virtio/virtio_balloon.c
+++ b/drivers/virtio/virtio_balloon.c
@@@ -522,16 -553,32 +522,21 @@@ static int virtballoon_probe(struct vir
  	vb->nb.priority = VIRTBALLOON_OOM_NOTIFY_PRIORITY;
  	err = register_oom_notifier(&vb->nb);
  	if (err < 0)
 -		goto out_del_vqs;
 +		goto out_oom_notify;
  
 -#ifdef CONFIG_BALLOON_COMPACTION
 -	balloon_mnt = kern_mount(&balloon_fs);
 -	if (IS_ERR(balloon_mnt)) {
 -		err = PTR_ERR(balloon_mnt);
 -		unregister_oom_notifier(&vb->nb);
 -		goto out_del_vqs;
 -	}
 +	virtio_device_ready(vdev);
  
 -	vb->vb_dev_info.migratepage = virtballoon_migratepage;
 -	vb->vb_dev_info.inode = alloc_anon_inode(balloon_mnt->mnt_sb);
 -	if (IS_ERR(vb->vb_dev_info.inode)) {
 -		err = PTR_ERR(vb->vb_dev_info.inode);
 -		kern_unmount(balloon_mnt);
 -		unregister_oom_notifier(&vb->nb);
 -		vb->vb_dev_info.inode = NULL;
++<<<<<<< HEAD
 +	vb->thread = kthread_run(balloon, vb, "vballoon");
 +	if (IS_ERR(vb->thread)) {
 +		err = PTR_ERR(vb->thread);
  		goto out_del_vqs;
  	}
 -	vb->vb_dev_info.inode->i_mapping->a_ops = &balloon_aops;
 -#endif
 -
 -	virtio_device_ready(vdev);
  
++=======
+ 	if (towards_target(vb))
+ 		virtballoon_changed(vdev);
++>>>>>>> 8424af5336b3 (virtio: update balloon size in balloon "probe")
  	return 0;
  
  out_del_vqs:
* Unmerged path drivers/virtio/virtio_balloon.c
