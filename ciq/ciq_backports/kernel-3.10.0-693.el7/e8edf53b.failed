dell-laptop: move dell_smi_error() to dell-smbios

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Michał Kępień <kernel@kempniu.pl>
commit e8edf53b198f5656d5ae99685bc6c1f616662b3d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e8edf53b.failed

The dell_smi_error() method could be used by modules other than
dell-laptop for convenient translation of SMBIOS request errors into
errno values.  Thus, move it to dell-smbios.

	Signed-off-by: Michał Kępień <kernel@kempniu.pl>
	Reviewed-by: Pali Rohár <pali.rohar@gmail.com>
	Signed-off-by: Darren Hart <dvhart@linux.intel.com>
(cherry picked from commit e8edf53b198f5656d5ae99685bc6c1f616662b3d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/dell-laptop.c
#	drivers/platform/x86/dell-smbios.c
#	drivers/platform/x86/dell-smbios.h
diff --cc drivers/platform/x86/dell-laptop.c
index 87688ae0318c,cbafb95f694c..000000000000
--- a/drivers/platform/x86/dell-laptop.c
+++ b/drivers/platform/x86/dell-laptop.c
@@@ -306,126 -273,6 +306,129 @@@ static const struct dmi_system_id dell_
  	{ }
  };
  
++<<<<<<< HEAD
 +static struct calling_interface_buffer *buffer;
 +static DEFINE_MUTEX(buffer_mutex);
 +
 +static void clear_buffer(void)
 +{
 +	memset(buffer, 0, sizeof(struct calling_interface_buffer));
 +}
 +
 +static void get_buffer(void)
 +{
 +	mutex_lock(&buffer_mutex);
 +	clear_buffer();
 +}
 +
 +static void release_buffer(void)
 +{
 +	mutex_unlock(&buffer_mutex);
 +}
 +
 +static void __init parse_da_table(const struct dmi_header *dm)
 +{
 +	/* Final token is a terminator, so we don't want to copy it */
 +	int tokens = (dm->length-11)/sizeof(struct calling_interface_token)-1;
 +	struct calling_interface_token *new_da_tokens;
 +	struct calling_interface_structure *table =
 +		container_of(dm, struct calling_interface_structure, header);
 +
 +	/* 4 bytes of table header, plus 7 bytes of Dell header, plus at least
 +	   6 bytes of entry */
 +
 +	if (dm->length < 17)
 +		return;
 +
 +	da_command_address = table->cmdIOAddress;
 +	da_command_code = table->cmdIOCode;
 +
 +	new_da_tokens = krealloc(da_tokens, (da_num_tokens + tokens) *
 +				 sizeof(struct calling_interface_token),
 +				 GFP_KERNEL);
 +
 +	if (!new_da_tokens)
 +		return;
 +	da_tokens = new_da_tokens;
 +
 +	memcpy(da_tokens+da_num_tokens, table->tokens,
 +	       sizeof(struct calling_interface_token) * tokens);
 +
 +	da_num_tokens += tokens;
 +}
 +
 +static void __init find_tokens(const struct dmi_header *dm, void *dummy)
 +{
 +	switch (dm->type) {
 +	case 0xd4: /* Indexed IO */
 +	case 0xd5: /* Protected Area Type 1 */
 +	case 0xd6: /* Protected Area Type 2 */
 +		break;
 +	case 0xda: /* Calling interface */
 +		parse_da_table(dm);
 +		break;
 +	}
 +}
 +
 +static int find_token_id(int tokenid)
 +{
 +	int i;
 +
 +	for (i = 0; i < da_num_tokens; i++) {
 +		if (da_tokens[i].tokenID == tokenid)
 +			return i;
 +	}
 +
 +	return -1;
 +}
 +
 +static int find_token_location(int tokenid)
 +{
 +	int id;
 +
 +	id = find_token_id(tokenid);
 +	if (id == -1)
 +		return -1;
 +
 +	return da_tokens[id].location;
 +}
 +
 +static struct calling_interface_buffer *
 +dell_send_request(struct calling_interface_buffer *buffer, int class,
 +		  int select)
 +{
 +	struct smi_cmd command;
 +
 +	command.magic = SMI_CMD_MAGIC;
 +	command.command_address = da_command_address;
 +	command.command_code = da_command_code;
 +	command.ebx = virt_to_phys(buffer);
 +	command.ecx = 0x42534931;
 +
 +	buffer->class = class;
 +	buffer->select = select;
 +
 +	dcdbas_smi_request(&command);
 +
 +	return buffer;
 +}
 +
 +static inline int dell_smi_error(int value)
 +{
 +	switch (value) {
 +	case 0: /* Completed successfully */
 +		return 0;
 +	case -1: /* Completed with error */
 +		return -EIO;
 +	case -2: /* Function not supported */
 +		return -ENXIO;
 +	default: /* Unknown error */
 +		return -EINVAL;
 +	}
 +}
 +
++=======
++>>>>>>> e8edf53b198f (dell-laptop: move dell_smi_error() to dell-smbios)
  /*
   * Derived from information in smbios-wireless-ctl:
   *
* Unmerged path drivers/platform/x86/dell-smbios.c
* Unmerged path drivers/platform/x86/dell-smbios.h
* Unmerged path drivers/platform/x86/dell-laptop.c
* Unmerged path drivers/platform/x86/dell-smbios.c
* Unmerged path drivers/platform/x86/dell-smbios.h
