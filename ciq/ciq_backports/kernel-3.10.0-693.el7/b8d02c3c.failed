bridge: vlan: drop unnecessary flush code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
commit b8d02c3cace37393bf9ff0a9eaa1ee39cda1d259
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b8d02c3c.failed

As Ido Schimmel pointed out the vlan_vid_del() code in nbp_vlan_flush is
unnecessary (and is actually a remnant of the old vlan code) so we can
remove it.

	Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b8d02c3cace37393bf9ff0a9eaa1ee39cda1d259)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_vlan.c
diff --cc net/bridge/br_vlan.c
index 1122c9d717ea,85e67568092e..000000000000
--- a/net/bridge/br_vlan.c
+++ b/net/bridge/br_vlan.c
@@@ -661,47 -959,7 +661,53 @@@ int nbp_vlan_delete(struct net_bridge_p
  
  void nbp_vlan_flush(struct net_bridge_port *port)
  {
++<<<<<<< HEAD
 +	struct net_port_vlans *pv;
 +	u16 vid;
 +
 +	ASSERT_RTNL();
 +
 +	pv = rtnl_dereference(port->vlan_info);
 +	if (!pv)
 +		return;
 +
 +	if (port->br->vlan_enabled) {
 +		for_each_set_bit(vid, pv->vlan_bitmap, VLAN_N_VID)
 +			vlan_vid_del(port->dev, port->br->vlan_proto, vid);
 +	}
 +
 +	__vlan_flush(pv);
 +}
 +
 +bool nbp_vlan_find(struct net_bridge_port *port, u16 vid)
 +{
 +	struct net_port_vlans *pv;
 +	bool found = false;
 +
 +	rcu_read_lock();
 +	pv = rcu_dereference(port->vlan_info);
 +
 +	if (!pv)
 +		goto out;
 +
 +	if (test_bit(vid, pv->vlan_bitmap))
 +		found = true;
 +
 +out:
 +	rcu_read_unlock();
 +	return found;
 +}
 +
 +int nbp_vlan_init(struct net_bridge_port *p)
 +{
 +	return p->br->default_pvid ?
 +			nbp_vlan_add(p, p->br->default_pvid,
 +				     BRIDGE_VLAN_INFO_PVID |
 +				     BRIDGE_VLAN_INFO_UNTAGGED) :
 +			0;
++=======
+ 	ASSERT_RTNL();
+ 
+ 	__vlan_flush(nbp_vlan_group(port));
++>>>>>>> b8d02c3cace3 (bridge: vlan: drop unnecessary flush code)
  }
* Unmerged path net/bridge/br_vlan.c
