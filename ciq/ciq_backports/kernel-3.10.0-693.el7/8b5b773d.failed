perf/x86/intel/rapl: Convert to hotplug state machine

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Richard Cochran <rcochran@linutronix.de>
commit 8b5b773d6245138c461b3a3e242339fa50fa9c58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8b5b773d.failed

Install the callbacks via the state machine and let the core invoke
the callbacks on the already online CPUs.

	Signed-off-by: Richard Cochran <rcochran@linutronix.de>
	Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
	Reviewed-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Huang Rui <ray.huang@amd.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
	Cc: rt@linutronix.de
Link: http://lkml.kernel.org/r/20160713153334.008808086@linutronix.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 8b5b773d6245138c461b3a3e242339fa50fa9c58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/intel/rapl.c
#	include/linux/cpuhotplug.h
diff --cc arch/x86/events/intel/rapl.c
index a14d9d5f94a3,6255ede56174..000000000000
--- a/arch/x86/events/intel/rapl.c
+++ b/arch/x86/events/intel/rapl.c
@@@ -580,28 -616,6 +582,31 @@@ static int rapl_cpu_prepare(unsigned in
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int rapl_cpu_notifier(struct notifier_block *self,
 +			     unsigned long action, void *hcpu)
 +{
 +	unsigned int cpu = (long)hcpu;
 +
 +	switch (action & ~CPU_TASKS_FROZEN) {
 +	case CPU_UP_PREPARE:
 +		rapl_cpu_prepare(cpu);
 +		break;
 +
 +	case CPU_DOWN_FAILED:
 +	case CPU_ONLINE:
 +		rapl_cpu_init(cpu);
 +		break;
 +
 +	case CPU_DOWN_PREPARE:
 +		rapl_cpu_exit(cpu);
 +		break;
 +	}
 +	return NOTIFY_OK;
 +}
 +
++=======
++>>>>>>> 8b5b773d6245 (perf/x86/intel/rapl: Convert to hotplug state machine)
  static int rapl_check_hw_unit(bool apply_quirk)
  {
  	u64 msr_rapl_power_unit_bits;
@@@ -652,25 -666,7 +657,29 @@@ static void __init rapl_advertise(void
  	}
  }
  
++<<<<<<< HEAD
 +static int __init rapl_prepare_cpus(void)
 +{
 +	unsigned int cpu, pkg;
 +	int ret;
 +
 +	for_each_online_cpu(cpu) {
 +		pkg = topology_logical_package_id(cpu);
 +		if (rapl_pmus->pmus[pkg])
 +			continue;
 +
 +		ret = rapl_cpu_prepare(cpu);
 +		if (ret)
 +			return ret;
 +		rapl_cpu_init(cpu);
 +	}
 +	return 0;
 +}
 +
 +static void __init cleanup_rapl_pmus(void)
++=======
+ static void cleanup_rapl_pmus(void)
++>>>>>>> 8b5b773d6245 (perf/x86/intel/rapl: Convert to hotplug state machine)
  {
  	int i;
  
@@@ -762,12 -801,16 +774,21 @@@ static int __init rapl_pmu_init(void
  	if (ret)
  		goto out;
  
+ 	ret = cpuhp_setup_state(CPUHP_AP_PERF_X86_RAPL_ONLINE,
+ 				"AP_PERF_X86_RAPL_ONLINE",
+ 				rapl_cpu_online, rapl_cpu_offline);
+ 	if (ret)
+ 		goto out1;
+ 
  	ret = perf_pmu_register(&rapl_pmus->pmu, "power", -1);
  	if (ret)
- 		goto out;
+ 		goto out2;
  
++<<<<<<< HEAD
 +	__perf_cpu_notifier(rapl_cpu_notifier);
 +	cpu_notifier_register_done();
++=======
++>>>>>>> 8b5b773d6245 (perf/x86/intel/rapl: Convert to hotplug state machine)
  	rapl_advertise();
  	return 0;
  
@@@ -774,7 -821,15 +799,19 @@@ out1
  out:
  	pr_warn("Initialization failed (%d), disabled\n", ret);
  	cleanup_rapl_pmus();
- 	cpu_notifier_register_done();
  	return ret;
  }
++<<<<<<< HEAD
 +device_initcall(rapl_pmu_init);
++=======
+ module_init(rapl_pmu_init);
+ 
+ static void __exit intel_rapl_exit(void)
+ {
+ 	cpuhp_remove_state_nocalls(CPUHP_AP_PERF_X86_RAPL_ONLINE);
+ 	cpuhp_remove_state_nocalls(CPUHP_PERF_X86_RAPL_PREP);
+ 	perf_pmu_unregister(&rapl_pmus->pmu);
+ 	cleanup_rapl_pmus();
+ }
+ module_exit(intel_rapl_exit);
++>>>>>>> 8b5b773d6245 (perf/x86/intel/rapl: Convert to hotplug state machine)
* Unmerged path include/linux/cpuhotplug.h
* Unmerged path arch/x86/events/intel/rapl.c
* Unmerged path include/linux/cpuhotplug.h
