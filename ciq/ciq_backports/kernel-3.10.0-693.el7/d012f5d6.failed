IB/mlx5: Refactor registration to netdev notifier

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit d012f5d6f8597f936f44c79e46345fda86dcff4d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d012f5d6.failed

Refactor the netdev notifier registration into a small helper function.

This is a pre-step towards having mlx5 IB device over an Ethernet port
which doesn't support RoCE. Also, renamed the de-registration helper
and the new helper as netdev notifier and not roce, to make it clear
this is not only used with roce.

This patch doesn't change any functionality.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Reviewed-by: Matan Barak <matanb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit d012f5d6f8597f936f44c79e46345fda86dcff4d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index 37c188b28ba8,0ee1e4ab02fa..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -2641,12 -2802,74 +2641,82 @@@ static void get_dev_fw_str(struct ib_de
  		       fw_rev_min(dev->mdev), fw_rev_sub(dev->mdev));
  }
  
++<<<<<<< HEAD
++=======
+ static int mlx5_roce_lag_init(struct mlx5_ib_dev *dev)
+ {
+ 	struct mlx5_core_dev *mdev = dev->mdev;
+ 	struct mlx5_flow_namespace *ns = mlx5_get_flow_namespace(mdev,
+ 								 MLX5_FLOW_NAMESPACE_LAG);
+ 	struct mlx5_flow_table *ft;
+ 	int err;
+ 
+ 	if (!ns || !mlx5_lag_is_active(mdev))
+ 		return 0;
+ 
+ 	err = mlx5_cmd_create_vport_lag(mdev);
+ 	if (err)
+ 		return err;
+ 
+ 	ft = mlx5_create_lag_demux_flow_table(ns, 0, 0);
+ 	if (IS_ERR(ft)) {
+ 		err = PTR_ERR(ft);
+ 		goto err_destroy_vport_lag;
+ 	}
+ 
+ 	dev->flow_db.lag_demux_ft = ft;
+ 	return 0;
+ 
+ err_destroy_vport_lag:
+ 	mlx5_cmd_destroy_vport_lag(mdev);
+ 	return err;
+ }
+ 
+ static void mlx5_roce_lag_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	struct mlx5_core_dev *mdev = dev->mdev;
+ 
+ 	if (dev->flow_db.lag_demux_ft) {
+ 		mlx5_destroy_flow_table(dev->flow_db.lag_demux_ft);
+ 		dev->flow_db.lag_demux_ft = NULL;
+ 
+ 		mlx5_cmd_destroy_vport_lag(mdev);
+ 	}
+ }
+ 
+ static int mlx5_add_netdev_notifier(struct mlx5_ib_dev *dev)
+ {
+ 	int err;
+ 
+ 	dev->roce.nb.notifier_call = mlx5_netdev_event;
+ 	err = register_netdevice_notifier(&dev->roce.nb);
+ 	if (err) {
+ 		dev->roce.nb.notifier_call = NULL;
+ 		return err;
+ 	}
+ 
+ 	return 0;
+ }
+ 
+ static void mlx5_remove_netdev_notifier(struct mlx5_ib_dev *dev)
+ {
+ 	if (dev->roce.nb.notifier_call) {
+ 		unregister_netdevice_notifier(&dev->roce.nb);
+ 		dev->roce.nb.notifier_call = NULL;
+ 	}
+ }
+ 
++>>>>>>> d012f5d6f859 (IB/mlx5: Refactor registration to netdev notifier)
  static int mlx5_enable_roce(struct mlx5_ib_dev *dev)
  {
  	int err;
  
++<<<<<<< HEAD
 +	dev->roce.nb.notifier_call = mlx5_netdev_event;
 +	err = register_netdevice_notifier_rh(&dev->roce.nb);
++=======
+ 	err = mlx5_add_netdev_notifier(dev);
++>>>>>>> d012f5d6f859 (IB/mlx5: Refactor registration to netdev notifier)
  	if (err)
  		return err;
  
@@@ -2654,10 -2877,17 +2724,14 @@@
  	if (err)
  		goto err_unregister_netdevice_notifier;
  
 -	err = mlx5_roce_lag_init(dev);
 -	if (err)
 -		goto err_disable_roce;
 -
  	return 0;
  
 -err_disable_roce:
 -	mlx5_nic_vport_disable_roce(dev->mdev);
 -
  err_unregister_netdevice_notifier:
++<<<<<<< HEAD
 +	unregister_netdevice_notifier_rh(&dev->roce.nb);
++=======
+ 	mlx5_remove_netdev_notifier(dev);
++>>>>>>> d012f5d6f859 (IB/mlx5: Refactor registration to netdev notifier)
  	return err;
  }
  
@@@ -3008,8 -3251,10 +3082,13 @@@ err_rsrc
  	destroy_dev_resources(&dev->devr);
  
  err_disable_roce:
 -	if (ll == IB_LINK_LAYER_ETHERNET) {
 +	if (ll == IB_LINK_LAYER_ETHERNET)
  		mlx5_disable_roce(dev);
++<<<<<<< HEAD
++=======
+ 		mlx5_remove_netdev_notifier(dev);
+ 	}
++>>>>>>> d012f5d6f859 (IB/mlx5: Refactor registration to netdev notifier)
  
  err_free_port:
  	kfree(dev->port);
@@@ -3025,6 -3270,7 +3104,10 @@@ static void mlx5_ib_remove(struct mlx5_
  	struct mlx5_ib_dev *dev = context;
  	enum rdma_link_layer ll = mlx5_ib_port_link_layer(&dev->ib_dev, 1);
  
++<<<<<<< HEAD
++=======
+ 	mlx5_remove_netdev_notifier(dev);
++>>>>>>> d012f5d6f859 (IB/mlx5: Refactor registration to netdev notifier)
  	ib_unregister_device(&dev->ib_dev);
  	mlx5_ib_dealloc_q_counters(dev);
  	destroy_umrc_res(dev);
* Unmerged path drivers/infiniband/hw/mlx5/main.c
