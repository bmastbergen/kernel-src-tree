userfaultfd: hugetlbfs: UFFD_FEATURE_MISSING_HUGETLBFS

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Andrea Arcangeli <aarcange@redhat.com>
commit 163e11bc4f6ebbfcfdf751c108bd212a26e492ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/163e11bc.failed

Userland developers asked to be notified immediately by the UFFDIO_API
ioctl if hugetlbfs missing mode is supported by userfaultfd in the
running kernel.  This avoids the need to run UFFDIO_REGISTER on a
hugetlbfs virtual memory range to find out.

Link: http://lkml.kernel.org/r/20161216144821.5183-27-aarcange@redhat.com
	Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
	Cc: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
	Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
	Cc: Michael Rapoport <RAPOPORT@il.ibm.com>
	Cc: Mike Kravetz <mike.kravetz@oracle.com>
	Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
	Cc: Pavel Emelyanov <xemul@parallels.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 163e11bc4f6ebbfcfdf751c108bd212a26e492ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/userfaultfd.h
diff --cc include/uapi/linux/userfaultfd.h
index abfce32281cc,7293321abdfb..000000000000
--- a/include/uapi/linux/userfaultfd.h
+++ b/include/uapi/linux/userfaultfd.h
@@@ -18,12 -18,10 +18,19 @@@
   * means the userland is reading).
   */
  #define UFFD_API ((__u64)0xAA)
++<<<<<<< HEAD
 +/*
 + * After implementing the respective features it will become:
 + * #define UFFD_API_FEATURES (UFFD_FEATURE_PAGEFAULT_FLAG_WP | \
 + *			      UFFD_FEATURE_EVENT_FORK)
 + */
 +#define UFFD_API_FEATURES (0)
++=======
+ #define UFFD_API_FEATURES (UFFD_FEATURE_EVENT_FORK |		\
+ 			   UFFD_FEATURE_EVENT_REMAP |		\
+ 			   UFFD_FEATURE_EVENT_MADVDONTNEED |	\
+ 			   UFFD_FEATURE_MISSING_HUGETLBFS)
++>>>>>>> 163e11bc4f6e (userfaultfd: hugetlbfs: UFFD_FEATURE_MISSING_HUGETLBFS)
  #define UFFD_API_IOCTLS				\
  	((__u64)1 << _UFFDIO_REGISTER |		\
  	 (__u64)1 << _UFFDIO_UNREGISTER |	\
@@@ -113,11 -126,32 +120,37 @@@ struct uffdio_api 
  	 * Note: UFFD_EVENT_PAGEFAULT and UFFD_PAGEFAULT_FLAG_WRITE
  	 * are to be considered implicitly always enabled in all kernels as
  	 * long as the uffdio_api.api requested matches UFFD_API.
+ 	 *
+ 	 * UFFD_FEATURE_MISSING_HUGETLBFS means an UFFDIO_REGISTER
+ 	 * with UFFDIO_REGISTER_MODE_MISSING mode will succeed on
+ 	 * hugetlbfs virtual memory ranges. Adding or not adding
+ 	 * UFFD_FEATURE_MISSING_HUGETLBFS to uffdio_api.features has
+ 	 * no real functional effect after UFFDIO_API returns, but
+ 	 * it's only useful for an initial feature set probe at
+ 	 * UFFDIO_API time. There are two ways to use it:
+ 	 *
+ 	 * 1) by adding UFFD_FEATURE_MISSING_HUGETLBFS to the
+ 	 *    uffdio_api.features before calling UFFDIO_API, an error
+ 	 *    will be returned by UFFDIO_API on a kernel without
+ 	 *    hugetlbfs missing support
+ 	 *
+ 	 * 2) the UFFD_FEATURE_MISSING_HUGETLBFS can not be added in
+ 	 *    uffdio_api.features and instead it will be set by the
+ 	 *    kernel in the uffdio_api.features if the kernel supports
+ 	 *    it, so userland can later check if the feature flag is
+ 	 *    present in uffdio_api.features after UFFDIO_API
+ 	 *    succeeded.
  	 */
 +#if 0 /* not available yet */
  #define UFFD_FEATURE_PAGEFAULT_FLAG_WP		(1<<0)
  #define UFFD_FEATURE_EVENT_FORK			(1<<1)
++<<<<<<< HEAD
 +#endif
++=======
+ #define UFFD_FEATURE_EVENT_REMAP		(1<<2)
+ #define UFFD_FEATURE_EVENT_MADVDONTNEED		(1<<3)
+ #define UFFD_FEATURE_MISSING_HUGETLBFS		(1<<4)
++>>>>>>> 163e11bc4f6e (userfaultfd: hugetlbfs: UFFD_FEATURE_MISSING_HUGETLBFS)
  	__u64 features;
  
  	__u64 ioctls;
* Unmerged path include/uapi/linux/userfaultfd.h
