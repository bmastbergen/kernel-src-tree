userfaultfd: non-cooperative: avoid MADV_DONTNEED race condition

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Andrea Arcangeli <aarcange@redhat.com>
commit 0594f58dbd954f7747553c041d7cbbf9b6ef1947
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0594f58d.failed

MADV_DONTNEED must be notified to userland before the pages are zapped.

This allows userland to immediately stop adding pages to the userfaultfd
ranges before the pages are actually zapped or there could be
non-zeropage leftovers as result of concurrent UFFDIO_COPY run in
between zap_page_range and madvise_userfault_dontneed (both
MADV_DONTNEED and UFFDIO_COPY runs under the mmap_sem for reading, so
they can run concurrently).

Link: http://lkml.kernel.org/r/20161216144821.5183-15-aarcange@redhat.com
	Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
	Cc: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
	Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
	Cc: Michael Rapoport <RAPOPORT@il.ibm.com>
	Cc: Mike Kravetz <mike.kravetz@oracle.com>
	Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
	Cc: Pavel Emelyanov <xemul@parallels.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0594f58dbd954f7747553c041d7cbbf9b6ef1947)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/madvise.c
diff --cc mm/madvise.c
index 73378fb832b8,ca75b8a01ba0..000000000000
--- a/mm/madvise.c
+++ b/mm/madvise.c
@@@ -279,14 -477,8 +279,19 @@@ static long madvise_dontneed(struct vm_
  	if (vma->vm_flags & (VM_LOCKED|VM_HUGETLB|VM_PFNMAP))
  		return -EINVAL;
  
++<<<<<<< HEAD
 +	if (unlikely(vma->vm_flags & VM_NONLINEAR)) {
 +		struct zap_details details = {
 +			.nonlinear_vma = vma,
 +			.last_index = ULONG_MAX,
 +		};
 +		zap_page_range(vma, start, end - start, &details);
 +	} else
 +		zap_page_range(vma, start, end - start, NULL);
++=======
+ 	madvise_userfault_dontneed(vma, prev, start, end);
+ 	zap_page_range(vma, start, end - start, NULL);
++>>>>>>> 0594f58dbd95 (userfaultfd: non-cooperative: avoid MADV_DONTNEED race condition)
  	return 0;
  }
  
* Unmerged path mm/madvise.c
