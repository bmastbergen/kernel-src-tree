net_sched: act_vlan: Add priority option

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: act_vlan: Add priority option (Ivan Vecera) [1450145]
Rebuild_FUZZ: 94.74%
commit-author Hadar Hen Zion <hadarh@mellanox.com>
commit 956af37102b515512331a03c35c958b2a1d8dd87
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/956af371.failed

The current vlan push action supports only vid and protocol options.
Add priority option.

Example script that adds vlan push action with vid and
priority:

tc filter add dev veth0 protocol ip parent ffff: \
	   flower \
	   	indev veth0 \
	   action vlan push id 100 priority 5

	Signed-off-by: Hadar Hen Zion <hadarh@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 956af37102b515512331a03c35c958b2a1d8dd87)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/tc_act/tc_vlan.h
#	net/sched/act_vlan.c
diff --cc include/uapi/linux/tc_act/tc_vlan.h
index f7b8d448b960,be72b6e3843b..000000000000
--- a/include/uapi/linux/tc_act/tc_vlan.h
+++ b/include/uapi/linux/tc_act/tc_vlan.h
@@@ -28,6 -28,8 +28,11 @@@ enum 
  	TCA_VLAN_PARMS,
  	TCA_VLAN_PUSH_VLAN_ID,
  	TCA_VLAN_PUSH_VLAN_PROTOCOL,
++<<<<<<< HEAD
++=======
+ 	TCA_VLAN_PAD,
+ 	TCA_VLAN_PUSH_VLAN_PRIORITY,
++>>>>>>> 956af37102b5 (net_sched: act_vlan: Add priority option)
  	__TCA_VLAN_MAX,
  };
  #define TCA_VLAN_MAX (__TCA_VLAN_MAX - 1)
diff --cc net/sched/act_vlan.c
index d735ecf0b1a7,59a8d3150ae2..000000000000
--- a/net/sched/act_vlan.c
+++ b/net/sched/act_vlan.c
@@@ -74,8 -80,9 +76,14 @@@ static int tcf_vlan_init(struct net *ne
  	int action;
  	__be16 push_vid = 0;
  	__be16 push_proto = 0;
++<<<<<<< HEAD
 +	int ret = 0;
 +	int err;
++=======
+ 	u8 push_prio = 0;
+ 	bool exists = false;
+ 	int ret = 0, err;
++>>>>>>> 956af37102b5 (net_sched: act_vlan: Add priority option)
  
  	if (!nla)
  		return -EINVAL;
@@@ -109,8 -126,13 +117,11 @@@
  		} else {
  			push_proto = htons(ETH_P_8021Q);
  		}
+ 
+ 		if (tb[TCA_VLAN_PUSH_VLAN_PRIORITY])
+ 			push_prio = nla_get_u8(tb[TCA_VLAN_PUSH_VLAN_PRIORITY]);
  		break;
  	default:
 -		if (exists)
 -			tcf_hash_release(*a, bind);
  		return -EINVAL;
  	}
  	action = parm->v_action;
@@@ -165,13 -187,14 +177,20 @@@ static int tcf_vlan_dump(struct sk_buf
  
  	if (v->tcfv_action == TCA_VLAN_ACT_PUSH &&
  	    (nla_put_u16(skb, TCA_VLAN_PUSH_VLAN_ID, v->tcfv_push_vid) ||
++<<<<<<< HEAD
 +	     nla_put_be16(skb, TCA_VLAN_PUSH_VLAN_PROTOCOL, v->tcfv_push_proto)))
++=======
+ 	     nla_put_be16(skb, TCA_VLAN_PUSH_VLAN_PROTOCOL,
+ 			  v->tcfv_push_proto) ||
+ 	     (nla_put_u8(skb, TCA_VLAN_PUSH_VLAN_PRIORITY,
+ 					      v->tcfv_push_prio))))
++>>>>>>> 956af37102b5 (net_sched: act_vlan: Add priority option)
  		goto nla_put_failure;
  
 -	tcf_tm_dump(&t, &v->tcf_tm);
 -	if (nla_put_64bit(skb, TCA_VLAN_TM, sizeof(t), &t, TCA_VLAN_PAD))
 +	t.install = jiffies_to_clock_t(jiffies - v->tcf_tm.install);
 +	t.lastuse = jiffies_to_clock_t(jiffies - v->tcf_tm.lastuse);
 +	t.expires = jiffies_to_clock_t(v->tcf_tm.expires);
 +	if (nla_put(skb, TCA_VLAN_TM, sizeof(t), &t))
  		goto nla_put_failure;
  	return skb->len;
  
diff --git a/include/net/tc_act/tc_vlan.h b/include/net/tc_act/tc_vlan.h
index 72dead79074d..daed22bd4926 100644
--- a/include/net/tc_act/tc_vlan.h
+++ b/include/net/tc_act/tc_vlan.h
@@ -21,6 +21,7 @@ struct tcf_vlan {
 	int			tcfv_action;
 	u16			tcfv_push_vid;
 	__be16			tcfv_push_proto;
+	u8			tcfv_push_prio;
 };
 #define to_vlan(a) \
 	container_of(a->priv, struct tcf_vlan, common)
* Unmerged path include/uapi/linux/tc_act/tc_vlan.h
* Unmerged path net/sched/act_vlan.c
