KVM: MTRR: do not split 64 bits MSR content

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Xiao Guangrong <guangrong.xiao@linux.intel.com>
commit 86fd52701cfae760711fb02a03c1ab8c80ea72f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/86fd5270.failed

Variable MTRR MSRs are 64 bits which are directly accessed with full length,
no reason to split them to two 32 bits

	Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 86fd52701cfae760711fb02a03c1ab8c80ea72f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/kvm_host.h
#	arch/x86/kvm/mtrr.c
diff --cc arch/x86/include/asm/kvm_host.h
index 38430109c621,f73554874845..000000000000
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@@ -357,9 -342,15 +357,21 @@@ enum 
  	KVM_DEBUGREG_RELOAD = 4,
  };
  
++<<<<<<< HEAD
 +/* Hyper-V per vcpu emulation context */
 +struct kvm_vcpu_hv {
 +	u64 hv_vapic;
++=======
+ struct kvm_mtrr_range {
+ 	u64 base;
+ 	u64 mask;
+ };
+ 
+ struct kvm_mtrr {
+ 	struct kvm_mtrr_range var_ranges[KVM_NR_VAR_MTRR];
+ 	mtrr_type fixed_ranges[KVM_NR_FIXED_MTRR_REGION];
+ 	u64 deftype;
++>>>>>>> 86fd52701cfa (KVM: MTRR: do not split 64 bits MSR content)
  };
  
  struct kvm_vcpu_arch {
* Unmerged path arch/x86/kvm/mtrr.c
* Unmerged path arch/x86/include/asm/kvm_host.h
* Unmerged path arch/x86/kvm/mtrr.c
