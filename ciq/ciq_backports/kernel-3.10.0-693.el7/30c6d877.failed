IB/srpt: Limit the number of SG elements per work request

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Bart Van Assche <bart.vanassche@sandisk.com>
commit 30c6d8773de06878f920666d8c945f81cb2081b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/30c6d877.failed

Limit the number of SG elements per work request to what the HCA
and the queue pair support.

Fixes: 34693573fde0 ("IB/srpt: Reduce QP buffer size")
	Reported-by: Parav Pandit <pandit.parav@gmail.com>
	Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Sagi Grimberg <sagi@grimberg.me>
	Cc: Steve Wise <swise@opengridcomputing.com>
	Cc: Parav Pandit <pandit.parav@gmail.com>
	Cc: Nicholas Bellinger <nab@linux-iscsi.org>
	Cc: Laurence Oberman <loberman@redhat.com>
	Cc: <stable@vger.kernel.org> #v4.7+
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 30c6d8773de06878f920666d8c945f81cb2081b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srpt/ib_srpt.c
diff --cc drivers/infiniband/ulp/srpt/ib_srpt.c
index 316f3bbb1b05,9a3b954e862d..000000000000
--- a/drivers/infiniband/ulp/srpt/ib_srpt.c
+++ b/drivers/infiniband/ulp/srpt/ib_srpt.c
@@@ -1786,8 -1630,17 +1787,22 @@@ retry
  	qp_init->srq = sdev->srq;
  	qp_init->sq_sig_type = IB_SIGNAL_REQ_WR;
  	qp_init->qp_type = IB_QPT_RC;
++<<<<<<< HEAD
 +	qp_init->cap.max_send_wr = srp_sq_size;
 +	qp_init->cap.max_send_sge = SRPT_DEF_SG_PER_WQE;
++=======
+ 	/*
+ 	 * We divide up our send queue size into half SEND WRs to send the
+ 	 * completions, and half R/W contexts to actually do the RDMA
+ 	 * READ/WRITE transfers.  Note that we need to allocate CQ slots for
+ 	 * both both, as RDMA contexts will also post completions for the
+ 	 * RDMA READ case.
+ 	 */
+ 	qp_init->cap.max_send_wr = srp_sq_size / 2;
+ 	qp_init->cap.max_rdma_ctxs = srp_sq_size / 2;
+ 	qp_init->cap.max_send_sge = min(attrs->max_sge, SRPT_MAX_SG_PER_WQE);
+ 	qp_init->port_num = ch->sport->port;
++>>>>>>> 30c6d8773de0 (IB/srpt: Limit the number of SG elements per work request)
  
  	ch->qp = ib_create_qp(sdev->pd, qp_init);
  	if (IS_ERR(ch->qp)) {
* Unmerged path drivers/infiniband/ulp/srpt/ib_srpt.c
diff --git a/drivers/infiniband/ulp/srpt/ib_srpt.h b/drivers/infiniband/ulp/srpt/ib_srpt.h
index 886950568e7c..6264d5bcb03d 100644
--- a/drivers/infiniband/ulp/srpt/ib_srpt.h
+++ b/drivers/infiniband/ulp/srpt/ib_srpt.h
@@ -105,7 +105,11 @@ enum {
 	SRP_LOGIN_RSP_MULTICHAN_MAINTAINED = 0x2,
 
 	SRPT_DEF_SG_TABLESIZE = 128,
-	SRPT_DEF_SG_PER_WQE = 16,
+	/*
+	 * An experimentally determined value that avoids that QP creation
+	 * fails due to "swiotlb buffer is full" on systems using the swiotlb.
+	 */
+	SRPT_MAX_SG_PER_WQE = 16,
 
 	MIN_SRPT_SQ_SIZE = 16,
 	DEF_SRPT_SQ_SIZE = 4096,
