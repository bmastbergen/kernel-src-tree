Input: wacom - cleanup multitouch code when touch_max is 2

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Ping Cheng <pinglinux@gmail.com>
commit d7da3a3ccdeb64ceedb51b0a3377ba56cc2999fa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d7da3a3c.failed

Historically we dealt with touch_max equals to 2 differently from
other MT devices. Now we use input_mt_*() to process all MT events,
as long as touch_max is greater than 1. So, there is no need to
take (touch_max == 2) as a special case any more.

	Signed-off-by: Ping Cheng <pingc@wacom.com>
	Reviewed-by: Jason Gerecke <killertofu@gmail.com>
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit d7da3a3ccdeb64ceedb51b0a3377ba56cc2999fa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_wac.c
diff --cc drivers/hid/wacom_wac.c
index 01ec753fea53,e73cf2c71f35..000000000000
--- a/drivers/hid/wacom_wac.c
+++ b/drivers/hid/wacom_wac.c
@@@ -1759,15 -1813,10 +1759,9 @@@ int wacom_setup_input_capabilities(stru
  
  	case MTSCREEN:
  	case MTTPC:
 -	case MTTPC_B:
  	case TABLETPC2FG:
- 		if (features->device_type == BTN_TOOL_FINGER) {
- 			unsigned int flags = INPUT_MT_DIRECT;
- 
- 			if (wacom_wac->features.type == TABLETPC2FG)
- 				flags = 0;
- 
- 			input_mt_init_slots(input_dev, features->touch_max, flags);
- 		}
+ 		if (features->device_type == BTN_TOOL_FINGER && features->touch_max > 1)
+ 			input_mt_init_slots(input_dev, features->touch_max, INPUT_MT_DIRECT);
  		/* fall through */
  
  	case TABLETPC:
@@@ -1816,20 -1876,24 +1810,31 @@@
  			__set_bit(BTN_BACK, input_dev->keybit);
  			__set_bit(BTN_RIGHT, input_dev->keybit);
  
++<<<<<<< HEAD:drivers/hid/wacom_wac.c
 +			if (features->pktlen == WACOM_PKGLEN_BBTOUCH3) {
 +				input_set_abs_params(input_dev,
++=======
+ 			if (features->touch_max) {
+ 				if (features->pktlen == WACOM_PKGLEN_BBTOUCH3) {
+ 					input_set_abs_params(input_dev,
++>>>>>>> d7da3a3ccdeb (Input: wacom - cleanup multitouch code when touch_max is 2):drivers/input/tablet/wacom_wac.c
  						     ABS_MT_TOUCH_MAJOR,
  						     0, features->x_max, 0, 0);
 -					input_set_abs_params(input_dev,
 +				input_set_abs_params(input_dev,
  						     ABS_MT_TOUCH_MINOR,
  						     0, features->y_max, 0, 0);
++<<<<<<< HEAD:drivers/hid/wacom_wac.c
++=======
+ 				}
+ 				input_mt_init_slots(input_dev, features->touch_max, INPUT_MT_POINTER);
++>>>>>>> d7da3a3ccdeb (Input: wacom - cleanup multitouch code when touch_max is 2):drivers/input/tablet/wacom_wac.c
  			} else {
 -				/* buttons/keys only interface */
 -				__clear_bit(ABS_X, input_dev->absbit);
 -				__clear_bit(ABS_Y, input_dev->absbit);
 -				__clear_bit(BTN_TOUCH, input_dev->keybit);
 +				__set_bit(BTN_TOOL_FINGER, input_dev->keybit);
 +				__set_bit(BTN_TOOL_DOUBLETAP, input_dev->keybit);
 +				flags = 0;
  			}
 +			input_mt_init_slots(input_dev, features->touch_max, flags);
  		} else if (features->device_type == BTN_TOOL_PEN) {
 -			__set_bit(INPUT_PROP_POINTER, input_dev->propbit);
  			__set_bit(BTN_TOOL_RUBBER, input_dev->keybit);
  			__set_bit(BTN_TOOL_PEN, input_dev->keybit);
  			__set_bit(BTN_STYLUS, input_dev->keybit);
* Unmerged path drivers/hid/wacom_wac.c
