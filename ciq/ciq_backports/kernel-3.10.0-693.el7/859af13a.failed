x86/mce/AMD: Fix HWID_MCATYPE calculation by grouping arguments

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] mce/amd: Fix HWID_MCATYPE calculation by grouping arguments (Suravee Suthikulpanit) [1303712]
Rebuild_FUZZ: 96.72%
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 859af13a103fc99a9a62064ef8f05f7d9ee58609
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/859af13a.failed

The calculation of the hwid_mcatype value in get_smca_bank_info()
became incorrect after applying the following commit:

  1ce9cd7f9f0b ("x86/RAS: Simplify SMCA HWID descriptor struct")

This causes the function to not match a bank to its type.

Disassembly of hwid_mcatype calculation after change:

      db:       8b 45 e0                mov    -0x20(%rbp),%eax
      de:       41 89 c4                mov    %eax,%r12d
      e1:       25 00 00 ff 0f          and    $0xfff0000,%eax
      e6:       41 c1 ec 10             shr    $0x10,%r12d
      ea:       41 09 c4                or     %eax,%r12d

Disassembly of hwid_mcatype calculation in original code:

     286:       8b 45 d0                mov    -0x30(%rbp),%eax
     289:       41 89 c5                mov    %eax,%r13d
     28c:       c1 e8 10                shr    $0x10,%eax
     28f:       41 81 e5 ff 0f 00 00    and    $0xfff,%r13d
     296:       41 c1 e5 10             shl    $0x10,%r13d
     29a:       41 09 c5                or     %eax,%r13d

Grouping the arguments to the HWID_MCATYPE() macro fixes the issue.

( Boris suggested adding parentheses in the macro. )

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Cc: Aravind Gopalakrishnan <aravindksg.lkml@gmail.com>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: linux-edac@vger.kernel.org
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 859af13a103fc99a9a62064ef8f05f7d9ee58609)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/mce.h
diff --cc arch/x86/include/asm/mce.h
index cb08d9d92582,ecda6a93179f..000000000000
--- a/arch/x86/include/asm/mce.h
+++ b/arch/x86/include/asm/mce.h
@@@ -295,4 -332,47 +295,50 @@@ struct cper_sec_mem_err
  extern void apei_mce_report_mem_error(int corrected,
  				      struct cper_sec_mem_err *mem_err);
  
++<<<<<<< HEAD
++=======
+ /*
+  * Enumerate new IP types and HWID values in AMD processors which support
+  * Scalable MCA.
+  */
+ #ifdef CONFIG_X86_MCE_AMD
+ 
+ /* These may be used by multiple smca_hwid_mcatypes */
+ enum smca_bank_types {
+ 	SMCA_LS = 0,	/* Load Store */
+ 	SMCA_IF,	/* Instruction Fetch */
+ 	SMCA_L2_CACHE,	/* L2 Cache */
+ 	SMCA_DE,	/* Decoder Unit */
+ 	SMCA_EX,	/* Execution Unit */
+ 	SMCA_FP,	/* Floating Point */
+ 	SMCA_L3_CACHE,	/* L3 Cache */
+ 	SMCA_CS,	/* Coherent Slave */
+ 	SMCA_PIE,	/* Power, Interrupts, etc. */
+ 	SMCA_UMC,	/* Unified Memory Controller */
+ 	SMCA_PB,	/* Parameter Block */
+ 	SMCA_PSP,	/* Platform Security Processor */
+ 	SMCA_SMU,	/* System Management Unit */
+ 	N_SMCA_BANK_TYPES
+ };
+ 
+ #define HWID_MCATYPE(hwid, mcatype) (((hwid) << 16) | (mcatype))
+ 
+ struct smca_hwid {
+ 	unsigned int bank_type;	/* Use with smca_bank_types for easy indexing. */
+ 	u32 hwid_mcatype;	/* (hwid,mcatype) tuple */
+ 	u32 xec_bitmap;		/* Bitmap of valid ExtErrorCodes; current max is 21. */
+ };
+ 
+ struct smca_bank {
+ 	struct smca_hwid *hwid;
+ 	/* Instance ID */
+ 	u32 id;
+ };
+ 
+ extern struct smca_bank smca_banks[MAX_NR_BANKS];
+ 
+ extern const char *smca_get_long_name(enum smca_bank_types t);
+ #endif
+ 
++>>>>>>> 859af13a103f (x86/mce/AMD: Fix HWID_MCATYPE calculation by grouping arguments)
  #endif /* _ASM_X86_MCE_H */
* Unmerged path arch/x86/include/asm/mce.h
