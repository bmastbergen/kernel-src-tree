cifs: Fix xattr name checks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit d9a15489210f3c25de39dee85861352d5e79e9c5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d9a15489.failed

Use strcmp(str, name) instead of strncmp(str, name, strlen(name)) for
checking if str and name are the same (as opposed to name being a prefix
of str) in the gexattr and setxattr inode operations.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit d9a15489210f3c25de39dee85861352d5e79e9c5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/xattr.c
diff --cc fs/cifs/xattr.c
index ff9e1f8b16a4,6e73ba96a97f..000000000000
--- a/fs/cifs/xattr.c
+++ b/fs/cifs/xattr.c
@@@ -189,10 -169,7 +188,14 @@@ int cifs_setxattr(struct dentry *dirent
  		cifs_dbg(FYI, "Set CIFS ACL not supported yet\n");
  #endif /* CONFIG_CIFS_ACL */
  	} else {
++<<<<<<< HEAD
 +		int temp;
 +		temp = strncmp(ea_name, POSIX_ACL_XATTR_ACCESS,
 +			strlen(POSIX_ACL_XATTR_ACCESS));
 +		if (temp == 0) {
++=======
+ 		if (strcmp(ea_name, XATTR_NAME_POSIX_ACL_ACCESS) == 0) {
++>>>>>>> d9a15489210f (cifs: Fix xattr name checks)
  #ifdef CONFIG_CIFS_POSIX
  			if (sb->s_flags & MS_POSIXACL)
  				rc = CIFSSMBSetPosixACL(xid, pTcon, full_path,
@@@ -203,8 -180,7 +206,12 @@@
  #else
  			cifs_dbg(FYI, "set POSIX ACL not supported\n");
  #endif
++<<<<<<< HEAD
 +		} else if (strncmp(ea_name, POSIX_ACL_XATTR_DEFAULT,
 +				   strlen(POSIX_ACL_XATTR_DEFAULT)) == 0) {
++=======
+ 		} else if (strcmp(ea_name, XATTR_NAME_POSIX_ACL_DEFAULT) == 0) {
++>>>>>>> d9a15489210f (cifs: Fix xattr name checks)
  #ifdef CONFIG_CIFS_POSIX
  			if (sb->s_flags & MS_POSIXACL)
  				rc = CIFSSMBSetPosixACL(xid, pTcon, full_path,
@@@ -292,8 -259,7 +299,12 @@@ ssize_t cifs_getxattr(struct dentry *di
  			rc = pTcon->ses->server->ops->query_all_EAs(xid, pTcon,
  				full_path, ea_name, ea_value, buf_size,
  				cifs_sb->local_nls, cifs_remap(cifs_sb));
++<<<<<<< HEAD
 +	} else if (strncmp(ea_name, POSIX_ACL_XATTR_ACCESS,
 +			  strlen(POSIX_ACL_XATTR_ACCESS)) == 0) {
++=======
+ 	} else if (strcmp(ea_name, XATTR_NAME_POSIX_ACL_ACCESS) == 0) {
++>>>>>>> d9a15489210f (cifs: Fix xattr name checks)
  #ifdef CONFIG_CIFS_POSIX
  		if (sb->s_flags & MS_POSIXACL)
  			rc = CIFSSMBGetPosixACL(xid, pTcon, full_path,
@@@ -303,8 -269,7 +314,12 @@@
  #else
  		cifs_dbg(FYI, "Query POSIX ACL not supported yet\n");
  #endif /* CONFIG_CIFS_POSIX */
++<<<<<<< HEAD
 +	} else if (strncmp(ea_name, POSIX_ACL_XATTR_DEFAULT,
 +			  strlen(POSIX_ACL_XATTR_DEFAULT)) == 0) {
++=======
+ 	} else if (strcmp(ea_name, XATTR_NAME_POSIX_ACL_DEFAULT) == 0) {
++>>>>>>> d9a15489210f (cifs: Fix xattr name checks)
  #ifdef CONFIG_CIFS_POSIX
  		if (sb->s_flags & MS_POSIXACL)
  			rc = CIFSSMBGetPosixACL(xid, pTcon, full_path,
* Unmerged path fs/cifs/xattr.c
