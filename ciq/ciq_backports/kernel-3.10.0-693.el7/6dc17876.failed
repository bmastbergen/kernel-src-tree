x86: Consolidate irq entering inlines

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] Consolidate irq entering inlines (George Beshers) [1404816]
Rebuild_FUZZ: 92.75%
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 6dc178760553605c58d78bd403dfcb4e042c5b72
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/6dc17876.failed

smp.c and irq_work.c implement the same inline helper. Move it to
apic.h and use it everywhere.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Peter Zijlstra <peterz@infradead.org>
(cherry picked from commit 6dc178760553605c58d78bd403dfcb4e042c5b72)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/smp.c
diff --cc arch/x86/kernel/smp.c
index c13dd515a1b4,15aaa69bbb5e..000000000000
--- a/arch/x86/kernel/smp.c
+++ b/arch/x86/kernel/smp.c
@@@ -169,10 -168,9 +169,9 @@@ static int smp_stop_nmi_callback(unsign
   * this function calls the 'stop' function on all other CPUs in the system.
   */
  
 -asmlinkage __visible void smp_reboot_interrupt(void)
 +asmlinkage void smp_reboot_interrupt(void)
  {
- 	ack_APIC_irq();
- 	irq_enter();
+ 	ipi_entering_ack_irq();
  	stop_this_cpu(NULL);
  	irq_exit();
  }
@@@ -267,13 -264,7 +266,17 @@@ void smp_reschedule_interrupt(struct pt
  	 */
  }
  
++<<<<<<< HEAD
 +static inline void smp_entering_irq(void)
 +{
 +	ack_APIC_irq();
 +	irq_enter();
 +}
 +
 +void smp_trace_reschedule_interrupt(struct pt_regs *regs)
++=======
+ __visible void smp_trace_reschedule_interrupt(struct pt_regs *regs)
++>>>>>>> 6dc178760553 (x86: Consolidate irq entering inlines)
  {
  	/*
  	 * Need to call irq_enter() before calling the trace point.
@@@ -297,16 -288,16 +300,16 @@@ static inline void __smp_call_function_
  	inc_irq_stat(irq_call_count);
  }
  
 -__visible void smp_call_function_interrupt(struct pt_regs *regs)
 +void smp_call_function_interrupt(struct pt_regs *regs)
  {
- 	smp_entering_irq();
+ 	ipi_entering_ack_irq();
  	__smp_call_function_interrupt();
  	exiting_irq();
  }
  
 -__visible void smp_trace_call_function_interrupt(struct pt_regs *regs)
 +void smp_trace_call_function_interrupt(struct pt_regs *regs)
  {
- 	smp_entering_irq();
+ 	ipi_entering_ack_irq();
  	trace_call_function_entry(CALL_FUNCTION_VECTOR);
  	__smp_call_function_interrupt();
  	trace_call_function_exit(CALL_FUNCTION_VECTOR);
@@@ -319,16 -310,16 +322,16 @@@ static inline void __smp_call_function_
  	inc_irq_stat(irq_call_count);
  }
  
 -__visible void smp_call_function_single_interrupt(struct pt_regs *regs)
 +void smp_call_function_single_interrupt(struct pt_regs *regs)
  {
- 	smp_entering_irq();
+ 	ipi_entering_ack_irq();
  	__smp_call_function_single_interrupt();
  	exiting_irq();
  }
  
 -__visible void smp_trace_call_function_single_interrupt(struct pt_regs *regs)
 +void smp_trace_call_function_single_interrupt(struct pt_regs *regs)
  {
- 	smp_entering_irq();
+ 	ipi_entering_ack_irq();
  	trace_call_function_single_entry(CALL_FUNCTION_SINGLE_VECTOR);
  	__smp_call_function_single_interrupt();
  	trace_call_function_single_exit(CALL_FUNCTION_SINGLE_VECTOR);
diff --git a/arch/x86/include/asm/apic.h b/arch/x86/include/asm/apic.h
index 2cad31391e70..53e39d367882 100644
--- a/arch/x86/include/asm/apic.h
+++ b/arch/x86/include/asm/apic.h
@@ -708,6 +708,12 @@ static inline void entering_ack_irq(void)
 	entering_irq();
 }
 
+static inline void ipi_entering_ack_irq(void)
+{
+	ack_APIC_irq();
+	irq_enter();
+}
+
 static inline void exiting_irq(void)
 {
 	irq_exit();
diff --git a/arch/x86/kernel/irq_work.c b/arch/x86/kernel/irq_work.c
index 15f2e8cca98e..d50c0f9e2329 100644
--- a/arch/x86/kernel/irq_work.c
+++ b/arch/x86/kernel/irq_work.c
@@ -10,12 +10,6 @@
 #include <asm/apic.h>
 #include <asm/trace/irq_vectors.h>
 
-static inline void irq_work_entering_irq(void)
-{
-	irq_enter();
-	ack_APIC_irq();
-}
-
 static inline void __smp_irq_work_interrupt(void)
 {
 	inc_irq_stat(apic_irq_work_irqs);
@@ -24,14 +18,14 @@ static inline void __smp_irq_work_interrupt(void)
 
 void smp_irq_work_interrupt(struct pt_regs *regs)
 {
-	irq_work_entering_irq();
+	ipi_entering_ack_irq();
 	__smp_irq_work_interrupt();
 	exiting_irq();
 }
 
 void smp_trace_irq_work_interrupt(struct pt_regs *regs)
 {
-	irq_work_entering_irq();
+	ipi_entering_ack_irq();
 	trace_irq_work_entry(IRQ_WORK_VECTOR);
 	__smp_irq_work_interrupt();
 	trace_irq_work_exit(IRQ_WORK_VECTOR);
* Unmerged path arch/x86/kernel/smp.c
