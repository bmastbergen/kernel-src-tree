EDAC, amd64: Determine EDAC MC capabilities on Fam17h

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [edac] amd64: Determine EDAC MC capabilities on Fam17h (Suravee Suthikulpanit) [1303712]
Rebuild_FUZZ: 94.00%
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 2d09d8f301f53cb92e7ae7183d58a74fc55f85c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2d09d8f3.failed

The UMCs on Fam17h are independent memory controllers so we need to
read the capabilities from all UMCs and make sure they agree. Once
we determine what capabilities are available we should save them for
convenience.

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Cc: Aravind Gopalakrishnan <aravindksg.lkml@gmail.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
	Cc: x86-ml <x86@kernel.org>
Link: http://lkml.kernel.org/r/1480431116-94683-1-git-send-email-Yazen.Ghannam@amd.com
[ Simplify f17h_determine_edac_ctl_cap(), preinit edac_mode in init_csrows(). ]
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 2d09d8f301f53cb92e7ae7183d58a74fc55f85c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/amd64_edac.c
diff --cc drivers/edac/amd64_edac.c
index ee19b0d392b7,9f9d2bc1868c..000000000000
--- a/drivers/edac/amd64_edac.c
+++ b/drivers/edac/amd64_edac.c
@@@ -2732,32 -2998,25 +2738,54 @@@ static bool ecc_enabled(struct pci_dev 
  	return true;
  }
  
++<<<<<<< HEAD
 +static int set_mc_sysfs_attrs(struct mem_ctl_info *mci)
 +{
 +	struct amd64_pvt *pvt = mci->pvt_info;
 +	int rc;
 +
 +	rc = amd64_create_sysfs_dbg_files(mci);
 +	if (rc < 0)
 +		return rc;
 +
 +	if (pvt->fam >= 0x10) {
 +		rc = amd64_create_sysfs_inject_files(mci);
 +		if (rc < 0)
 +			return rc;
 +	}
 +
 +	return 0;
 +}
 +
 +static void del_mc_sysfs_attrs(struct mem_ctl_info *mci)
 +{
 +	struct amd64_pvt *pvt = mci->pvt_info;
 +
 +	amd64_remove_sysfs_dbg_files(mci);
 +
 +	if (pvt->fam >= 0x10)
 +		amd64_remove_sysfs_inject_files(mci);
++=======
+ static inline void
+ f17h_determine_edac_ctl_cap(struct mem_ctl_info *mci, struct amd64_pvt *pvt)
+ {
+ 	u8 i, ecc_en = 1, cpk_en = 1;
+ 
+ 	for (i = 0; i < NUM_UMCS; i++) {
+ 		if (pvt->umc[i].sdp_ctrl & UMC_SDP_INIT) {
+ 			ecc_en &= !!(pvt->umc[i].umc_cap_hi & UMC_ECC_ENABLED);
+ 			cpk_en &= !!(pvt->umc[i].umc_cap_hi & UMC_ECC_CHIPKILL_CAP);
+ 		}
+ 	}
+ 
+ 	/* Set chipkill only if ECC is enabled: */
+ 	if (ecc_en) {
+ 		mci->edac_ctl_cap |= EDAC_FLAG_SECDED;
+ 
+ 		if (cpk_en)
+ 			mci->edac_ctl_cap |= EDAC_FLAG_S4ECD4ED;
+ 	}
++>>>>>>> 2d09d8f301f5 (EDAC, amd64: Determine EDAC MC capabilities on Fam17h)
  }
  
  static void setup_mci_misc_attrs(struct mem_ctl_info *mci,
* Unmerged path drivers/edac/amd64_edac.c
