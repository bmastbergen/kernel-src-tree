NTB: Make the transport list in order of discovery

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [ntb] Make the transport list in order of discovery (Suravee Suthikulpanit) [1303727]
Rebuild_FUZZ: 94.74%
commit-author Dave Jiang <dave.jiang@intel.com>
commit 315100004fd6d9189b033f3bf9c5eba9eb906705
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/31510000.failed

The list should be added from the bottom and not the top in order to
ensure the transport is provided in the same order to clients as ntb
devices are discovered.

	Signed-off-by: Dave Jiang <dave.jiang@intel.com>
	Signed-off-by: Jon Mason <jdmason@kudzu.us>
(cherry picked from commit 315100004fd6d9189b033f3bf9c5eba9eb906705)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ntb/ntb_transport.c
diff --cc drivers/ntb/ntb_transport.c
index 0d5e96e60628,29553fb7fb8e..000000000000
--- a/drivers/ntb/ntb_transport.c
+++ b/drivers/ntb/ntb_transport.c
@@@ -248,16 -295,9 +248,20 @@@ static struct bus_type ntb_bus_type = 
  
  static LIST_HEAD(ntb_transport_list);
  
 -static int ntb_bus_init(struct ntb_transport_ctx *nt)
 +static int ntb_bus_init(struct ntb_transport *nt)
  {
++<<<<<<< HEAD
 +	if (list_empty(&ntb_transport_list)) {
 +		int rc = bus_register(&ntb_bus_type);
 +		if (rc)
 +			return rc;
 +	}
 +
 +	list_add(&nt->entry, &ntb_transport_list);
 +
++=======
+ 	list_add_tail(&nt->entry, &ntb_transport_list);
++>>>>>>> 315100004fd6 (NTB: Make the transport list in order of discovery)
  	return 0;
  }
  
* Unmerged path drivers/ntb/ntb_transport.c
