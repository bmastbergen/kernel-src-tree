vfs: Remove unnecessary calls of check_submounts_and_drop

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 9b053f3207e8887fed88162a339fdd4001abcdb2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9b053f32.failed

Now that check_submounts_and_drop can not fail and is called from
d_invalidate there is no longer a need to call check_submounts_and_drom
from filesystem d_revalidate methods so remove it.

	Reviewed-by: Miklos Szeredi <miklos@szeredi.hu>
	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 9b053f3207e8887fed88162a339fdd4001abcdb2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/afs/dir.c
#	fs/fuse/dir.c
#	fs/kernfs/dir.c
diff --cc fs/afs/dir.c
index 7a465ed04444,a1645b88fe8a..000000000000
--- a/fs/afs/dir.c
+++ b/fs/afs/dir.c
@@@ -710,16 -681,8 +709,19 @@@ not_found
  	spin_unlock(&dentry->d_lock);
  
  out_bad:
++<<<<<<< HEAD
 +	if (dentry->d_inode) {
 +		/* don't unhash if we have submounts */
 +		if (have_submounts(dentry))
 +			goto out_skip;
 +	}
 +
++=======
++>>>>>>> 9b053f3207e8 (vfs: Remove unnecessary calls of check_submounts_and_drop)
  	_debug("dropping dentry %s/%s",
  	       parent->d_name.name, dentry->d_name.name);
 +	shrink_dcache_parent(dentry);
 +	d_drop(dentry);
  	dput(parent);
  	key_put(key);
  
diff --cc fs/fuse/dir.c
index 07254ac422e9,820efd74ca9f..000000000000
--- a/fs/fuse/dir.c
+++ b/fs/fuse/dir.c
@@@ -260,8 -274,6 +260,11 @@@ out
  
  invalid:
  	ret = 0;
++<<<<<<< HEAD
 +	if (check_submounts_and_drop(entry) != 0)
 +		ret = 1;
++=======
++>>>>>>> 9b053f3207e8 (vfs: Remove unnecessary calls of check_submounts_and_drop)
  	goto out;
  }
  
* Unmerged path fs/kernfs/dir.c
* Unmerged path fs/afs/dir.c
* Unmerged path fs/fuse/dir.c
diff --git a/fs/gfs2/dentry.c b/fs/gfs2/dentry.c
index fec50620f33d..146376b1987c 100644
--- a/fs/gfs2/dentry.c
+++ b/fs/gfs2/dentry.c
@@ -93,9 +93,6 @@ invalid_gunlock:
 	if (!had_lock)
 		gfs2_glock_dq_uninit(&d_gh);
 invalid:
-	if (check_submounts_and_drop(dentry) != 0)
-		goto valid;
-
 	dput(parent);
 	return 0;
 
* Unmerged path fs/kernfs/dir.c
diff --git a/fs/nfs/dir.c b/fs/nfs/dir.c
index 770fe7b74079..0685fc65e968 100644
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@ -1224,10 +1224,6 @@ out_zap_parent:
 		if (IS_ROOT(dentry))
 			goto out_valid;
 	}
-	/* If we have submounts, don't unhash ! */
-	if (check_submounts_and_drop(dentry) != 0)
-		goto out_valid;
-
 	dput(parent);
 	dfprintk(LOOKUPCACHE, "NFS: %s(%pd2) is invalid\n",
 			__func__, dentry);
