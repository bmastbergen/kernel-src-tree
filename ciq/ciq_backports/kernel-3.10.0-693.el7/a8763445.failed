perf symbols: Print symbol offsets conditionally

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit a8763445f6c78628bd96d51649745065c0bb2c92
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a8763445.failed

The __symbol__fprintf_symname_offs() always shows symbol offsets.  So
there's no difference between 'perf script -F ip,sym' and 'perf script
-F ip,sym,symoff'.  I don't think it's a desired behavior..

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Acked-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/r/20161116060634.28477-2-namhyung@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit a8763445f6c78628bd96d51649745065c0bb2c92)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel_fprintf.c
#	tools/perf/util/symbol.h
#	tools/perf/util/symbol_fprintf.c
diff --cc tools/perf/util/symbol.h
index 21722284fd20,dec7e2d44885..000000000000
--- a/tools/perf/util/symbol.h
+++ b/tools/perf/util/symbol.h
@@@ -278,8 -280,15 +278,15 @@@ void symbol__elf_init(void)
  int symbol__annotation_init(void);
  
  struct symbol *symbol__new(u64 start, u64 len, u8 binding, const char *name);
++<<<<<<< HEAD
++=======
+ size_t __symbol__fprintf_symname_offs(const struct symbol *sym,
+ 				      const struct addr_location *al,
+ 				      bool unknown_as_addr,
+ 				      bool print_offsets, FILE *fp);
++>>>>>>> a8763445f6c7 (perf symbols: Print symbol offsets conditionally)
  size_t symbol__fprintf_symname_offs(const struct symbol *sym,
  				    const struct addr_location *al, FILE *fp);
 -size_t __symbol__fprintf_symname(const struct symbol *sym,
 -				 const struct addr_location *al,
 -				 bool unknown_as_addr, FILE *fp);
  size_t symbol__fprintf_symname(const struct symbol *sym, FILE *fp);
  size_t symbol__fprintf(struct symbol *sym, FILE *fp);
  bool symbol_type__is_a(char symbol_type, enum map_type map_type);
* Unmerged path tools/perf/util/evsel_fprintf.c
* Unmerged path tools/perf/util/symbol_fprintf.c
* Unmerged path tools/perf/util/evsel_fprintf.c
* Unmerged path tools/perf/util/symbol.h
* Unmerged path tools/perf/util/symbol_fprintf.c
