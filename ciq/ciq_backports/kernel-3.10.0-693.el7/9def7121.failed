net/mlx5: Enable setting minimum inline header mode for VFs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [kernel] mlx5: Enable setting minimum inline header mode for VFs (Don Dutile) [1385330 1417285]
Rebuild_FUZZ: 96.49%
commit-author Hadar Hen Zion <hadarh@mellanox.com>
commit 9def7121bed3be8a9d126c900ca7067647bc4789
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9def7121.failed

Implement the low-level part of the PF side in setting minimum
inline header mode for VFs.

	Signed-off-by: Hadar Hen Zion <hadarh@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
(cherry picked from commit 9def7121bed3be8a9d126c900ca7067647bc4789)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/vport.c
#	include/linux/mlx5/vport.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/vport.c
index 4908639947c4,525f17af108e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/vport.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/vport.c
@@@ -130,11 -110,41 +130,46 @@@ static int mlx5_modify_nic_vport_contex
  
  	MLX5_SET(modify_nic_vport_context_in, in, opcode,
  		 MLX5_CMD_OP_MODIFY_NIC_VPORT_CONTEXT);
 -	return mlx5_cmd_exec(mdev, in, inlen, out, sizeof(out));
 +
 +	memset(out, 0, sizeof(out));
 +	return mlx5_cmd_exec_check_status(mdev, in, inlen, out, sizeof(out));
  }
  
++<<<<<<< HEAD
++=======
+ void mlx5_query_nic_vport_min_inline(struct mlx5_core_dev *mdev,
+ 				     u8 *min_inline_mode)
+ {
+ 	u32 out[MLX5_ST_SZ_DW(query_nic_vport_context_out)] = {0};
+ 
+ 	mlx5_query_nic_vport_context(mdev, 0, out, sizeof(out));
+ 
+ 	*min_inline_mode = MLX5_GET(query_nic_vport_context_out, out,
+ 				    nic_vport_context.min_wqe_inline_mode);
+ }
+ EXPORT_SYMBOL_GPL(mlx5_query_nic_vport_min_inline);
+ 
+ int mlx5_modify_nic_vport_min_inline(struct mlx5_core_dev *mdev,
+ 				     u16 vport, u8 min_inline)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(modify_nic_vport_context_in)] = {0};
+ 	int inlen = MLX5_ST_SZ_BYTES(modify_nic_vport_context_in);
+ 	void *nic_vport_ctx;
+ 
+ 	MLX5_SET(modify_nic_vport_context_in, in,
+ 		 field_select.min_inline, 1);
+ 	MLX5_SET(modify_nic_vport_context_in, in, vport_number, vport);
+ 	MLX5_SET(modify_nic_vport_context_in, in, other_vport, 1);
+ 
+ 	nic_vport_ctx = MLX5_ADDR_OF(modify_nic_vport_context_in,
+ 				     in, nic_vport_context);
+ 	MLX5_SET(nic_vport_context, nic_vport_ctx,
+ 		 min_wqe_inline_mode, min_inline);
+ 
+ 	return mlx5_modify_nic_vport_context(mdev, in, inlen);
+ }
+ 
++>>>>>>> 9def7121bed3 (net/mlx5: Enable setting minimum inline header mode for VFs)
  int mlx5_query_nic_vport_mac_address(struct mlx5_core_dev *mdev,
  				     u16 vport, u8 *addr)
  {
diff --cc include/linux/mlx5/vport.h
index 6c16c198f680,451b0bde9083..000000000000
--- a/include/linux/mlx5/vport.h
+++ b/include/linux/mlx5/vport.h
@@@ -43,6 -43,10 +43,13 @@@ int mlx5_modify_vport_admin_state(struc
  				  u16 vport, u8 state);
  int mlx5_query_nic_vport_mac_address(struct mlx5_core_dev *mdev,
  				     u16 vport, u8 *addr);
++<<<<<<< HEAD
++=======
+ void mlx5_query_nic_vport_min_inline(struct mlx5_core_dev *mdev,
+ 				     u8 *min_inline);
+ int mlx5_modify_nic_vport_min_inline(struct mlx5_core_dev *mdev,
+ 				     u16 vport, u8 min_inline);
++>>>>>>> 9def7121bed3 (net/mlx5: Enable setting minimum inline header mode for VFs)
  int mlx5_modify_nic_vport_mac_address(struct mlx5_core_dev *dev,
  				      u16 vport, u8 *addr);
  int mlx5_query_nic_vport_mtu(struct mlx5_core_dev *mdev, u16 *mtu);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/vport.c
diff --git a/include/linux/mlx5/mlx5_ifc.h b/include/linux/mlx5/mlx5_ifc.h
index 416f7710082e..1e554eabc2d6 100644
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@ -4711,7 +4711,7 @@ struct mlx5_ifc_modify_nic_vport_field_select_bits {
 	u8         reserved_at_0[0x16];
 	u8         node_guid[0x1];
 	u8         port_guid[0x1];
-	u8         reserved_at_18[0x1];
+	u8         min_inline[0x1];
 	u8         mtu[0x1];
 	u8         change_event[0x1];
 	u8         promisc[0x1];
* Unmerged path include/linux/mlx5/vport.h
