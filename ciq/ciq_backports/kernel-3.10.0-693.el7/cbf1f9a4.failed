IB/rxe: Drop future atomic/read packets rather than retrying

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Andrew Boyer <andrew.boyer@dell.com>
commit cbf1f9a46c9c5903e34b0b110ca40b1e7d4b2ab1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/cbf1f9a4.failed

If the completer is in the middle of a large read operation, one
lost packet can cause havoc. Going to COMPST_ERROR_RETRY will
cause the requester to resend the request. After that, any packet
from the first attempt still in the receive queue will be
interpreted as an error, restarting the error/retry sequence.
The transfer will quickly exhaust its retries.

This behavior is very noticeable when doing 512KB reads on a
QEMU system configured with 1500B MTU.

Also, a resent request here will prompt the responder on the
other side to immediately start resending, but the resent
packets will get stuck in the already-loaded receive queue and
will never be processed.

Rather than erroring out every time an unexpected future packet
arrives, just drop it. Eventually the retry timer will send a
duplicate request; the completer will be able to make progress since
the queue will start relatively empty.

	Signed-off-by: Andrew Boyer <andrew.boyer@dell.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit cbf1f9a46c9c5903e34b0b110ca40b1e7d4b2ab1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rxe/rxe_comp.c
* Unmerged path drivers/infiniband/sw/rxe/rxe_comp.c
* Unmerged path drivers/infiniband/sw/rxe/rxe_comp.c
