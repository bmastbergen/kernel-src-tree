KVM: x86: Introducing kvm_x86_ops VCPU blocking/unblocking hooks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Suravee Suthikulpanit <Suravee.Suthikulpanit@amd.com>
commit d1ed092f77ef562edcc1b45ae331ff1683f50295
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d1ed092f.failed

Adding new function pointer in struct kvm_x86_ops, and calling them
from the kvm_arch_vcpu[blocking/unblocking].

	Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
	Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit d1ed092f77ef562edcc1b45ae331ff1683f50295)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/kvm_host.h
diff --cc arch/x86/include/asm/kvm_host.h
index e9b71b8ce24b,2df5db6fb58b..000000000000
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@@ -1237,6 -1345,21 +1241,24 @@@ bool kvm_vcpu_is_bsp(struct kvm_vcpu *v
  bool kvm_intr_is_single_vcpu(struct kvm *kvm, struct kvm_lapic_irq *irq,
  			     struct kvm_vcpu **dest_vcpu);
  
 -void kvm_set_msi_irq(struct kvm_kernel_irq_routing_entry *e,
 +void kvm_set_msi_irq(struct kvm *kvm, struct kvm_kernel_irq_routing_entry *e,
  		     struct kvm_lapic_irq *irq);
++<<<<<<< HEAD
++=======
+ 
+ static inline void kvm_arch_vcpu_blocking(struct kvm_vcpu *vcpu)
+ {
+ 	if (kvm_x86_ops->vcpu_blocking)
+ 		kvm_x86_ops->vcpu_blocking(vcpu);
+ }
+ 
+ static inline void kvm_arch_vcpu_unblocking(struct kvm_vcpu *vcpu)
+ {
+ 	if (kvm_x86_ops->vcpu_unblocking)
+ 		kvm_x86_ops->vcpu_unblocking(vcpu);
+ }
+ 
+ static inline void kvm_arch_vcpu_block_finish(struct kvm_vcpu *vcpu) {}
+ 
++>>>>>>> d1ed092f77ef (KVM: x86: Introducing kvm_x86_ops VCPU blocking/unblocking hooks)
  #endif /* _ASM_X86_KVM_HOST_H */
* Unmerged path arch/x86/include/asm/kvm_host.h
