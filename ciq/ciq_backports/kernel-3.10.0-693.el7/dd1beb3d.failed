NFS/pnfs: handle bad delegation stateids in nfs4_layoutget_handle_exception

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit dd1beb3d16f6a10683b84b89a4644065c43910f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/dd1beb3d.failed

We must call nfs4_handle_exception() on BAD_STATEID errors. The only
exception is if the stateid argument turns out to be a layout stateid
that is declared invalid.

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
	Reviewed-by: Jeff Layton <jlayton@poochiereds.net>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit dd1beb3d16f6a10683b84b89a4644065c43910f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4proc.c
diff --cc fs/nfs/nfs4proc.c
index 761fc7d53e27,406dd3eb68e2..000000000000
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@@ -8076,25 -7933,21 +8076,30 @@@ static void nfs4_layoutget_done(struct 
  			 * with the current stateid.
  			 */
  			set_bit(NFS_LAYOUT_INVALID_STID, &lo->plh_flags);
 -			pnfs_mark_matching_lsegs_invalid(lo, &head, NULL, 0);
 +			pnfs_mark_matching_lsegs_invalid(lo, &head, NULL);
  			spin_unlock(&inode->i_lock);
  			pnfs_free_lseg_list(&head);
+ 			status = -EAGAIN;
+ 			goto out;
  		} else
  			spin_unlock(&inode->i_lock);
++<<<<<<< HEAD
 +		goto out_restart;
++=======
++>>>>>>> dd1beb3d16f6 (NFS/pnfs: handle bad delegation stateids in nfs4_layoutget_handle_exception)
  	}
 -
 -	status = nfs4_handle_exception(server, status, exception);
 -	if (exception->retry)
 -		status = -EAGAIN;
 +	if (nfs4_async_handle_error(task, server, state, &lgp->timeout) == -EAGAIN)
 +		goto out_restart;
  out:
  	dprintk("<-- %s\n", __func__);
 -	return status;
 +	return;
 +out_restart:
 +	task->tk_status = 0;
 +	rpc_restart_call_prepare(task);
 +	return;
 +out_overflow:
 +	task->tk_status = -EOVERFLOW;
 +	goto out;
  }
  
  static size_t max_response_pages(struct nfs_server *server)
* Unmerged path fs/nfs/nfs4proc.c
