perf evsel: Provide way to extract integer value from format_field

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 90525176d71995ffde2d0c532f2758304c666a08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/90525176.failed

Out of perf_evsel__intval(), that requires passing the variable name,
that will then be searched in the list of tracepoint variables for the
given evsel.

In cases such as syscall file descriptor ("fd") tracking, this is
wasteful, we need just to use perf_evsel__field() and cache the
format_field.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Milian Wolff <milian.wolff@kdab.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-r6f89jx9j5nkx037d0naviqy@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 90525176d71995ffde2d0c532f2758304c666a08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel.c
diff --cc tools/perf/util/evsel.c
index a2fb1faf209f,f4f01b2e9dcc..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -2209,93 -2290,15 +2203,105 @@@ u64 format_field__intval(struct format_
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int comma_fprintf(FILE *fp, bool *first, const char *fmt, ...)
 +{
 +	va_list args;
 +	int ret = 0;
 +
 +	if (!*first) {
 +		ret += fprintf(fp, ",");
 +	} else {
 +		ret += fprintf(fp, ":");
 +		*first = false;
 +	}
 +
 +	va_start(args, fmt);
 +	ret += vfprintf(fp, fmt, args);
 +	va_end(args);
 +	return ret;
 +}
 +
 +static int __print_attr__fprintf(FILE *fp, const char *name, const char *val, void *priv)
 +{
 +	return comma_fprintf(fp, (bool *)priv, " %s: %s", name, val);
 +}
 +
 +int perf_evsel__fprintf(struct perf_evsel *evsel,
 +			struct perf_attr_details *details, FILE *fp)
 +{
 +	bool first = true;
 +	int printed = 0;
 +
 +	if (details->event_group) {
 +		struct perf_evsel *pos;
 +
 +		if (!perf_evsel__is_group_leader(evsel))
 +			return 0;
 +
 +		if (evsel->nr_members > 1)
 +			printed += fprintf(fp, "%s{", evsel->group_name ?: "");
 +
 +		printed += fprintf(fp, "%s", perf_evsel__name(evsel));
 +		for_each_group_member(pos, evsel)
 +			printed += fprintf(fp, ",%s", perf_evsel__name(pos));
 +
 +		if (evsel->nr_members > 1)
 +			printed += fprintf(fp, "}");
 +		goto out;
 +	}
 +
 +	printed += fprintf(fp, "%s", perf_evsel__name(evsel));
 +
 +	if (details->verbose) {
 +		printed += perf_event_attr__fprintf(fp, &evsel->attr,
 +						    __print_attr__fprintf, &first);
 +	} else if (details->freq) {
 +		const char *term = "sample_freq";
 +
 +		if (!evsel->attr.freq)
 +			term = "sample_period";
 +
 +		printed += comma_fprintf(fp, &first, " %s=%" PRIu64,
 +					 term, (u64)evsel->attr.sample_freq);
 +	}
 +
 +	if (details->trace_fields) {
 +		struct format_field *field;
 +
 +		if (evsel->attr.type != PERF_TYPE_TRACEPOINT) {
 +			printed += comma_fprintf(fp, &first, " (not a tracepoint)");
 +			goto out;
 +		}
 +
 +		field = evsel->tp_format->format.fields;
 +		if (field == NULL) {
 +			printed += comma_fprintf(fp, &first, " (no trace field)");
 +			goto out;
 +		}
 +
 +		printed += comma_fprintf(fp, &first, " trace_fields: %s", field->name);
 +
 +		field = field->next;
 +		while (field) {
 +			printed += comma_fprintf(fp, &first, "%s", field->name);
 +			field = field->next;
 +		}
 +	}
 +out:
 +	fputc('\n', fp);
 +	return ++printed;
++=======
+ u64 perf_evsel__intval(struct perf_evsel *evsel, struct perf_sample *sample,
+ 		       const char *name)
+ {
+ 	struct format_field *field = perf_evsel__field(evsel, name);
+ 
+ 	if (!field)
+ 		return 0;
+ 
+ 	return field ? format_field__intval(field, sample, evsel->needs_swap) : 0;
++>>>>>>> 90525176d719 (perf evsel: Provide way to extract integer value from format_field)
  }
  
  bool perf_evsel__fallback(struct perf_evsel *evsel, int err,
* Unmerged path tools/perf/util/evsel.c
diff --git a/tools/perf/util/evsel.h b/tools/perf/util/evsel.h
index 8b108cb05d6f..6a7ff4b7d165 100644
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@ -251,6 +251,8 @@ static inline char *perf_evsel__strval(struct perf_evsel *evsel,
 
 struct format_field;
 
+u64 format_field__intval(struct format_field *field, struct perf_sample *sample, bool needs_swap);
+
 struct format_field *perf_evsel__field(struct perf_evsel *evsel, const char *name);
 
 #define perf_evsel__match(evsel, t, c)		\
