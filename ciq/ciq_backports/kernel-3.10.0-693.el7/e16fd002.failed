x86/cpufeature: Enable RING3MWAIT for Knights Landing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] cpufeature: Enable RING3MWAIT for Knights Landing (Xiaolong Wang) [1387697]
Rebuild_FUZZ: 96.08%
commit-author Grzegorz Andrejczuk <grzegorz.andrejczuk@intel.com>
commit e16fd002afe2b16d828bbf738b8a81a185fe9272
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e16fd002.failed

Enable ring 3 MONITOR/MWAIT for Intel Xeon Phi x200 codenamed Knights
Landing.

Presence of this feature cannot be detected automatically (by reading any
other MSR) therefore it is required to explicitly check for the family and
model of the CPU before attempting to enable it.

	Signed-off-by: Grzegorz Andrejczuk <grzegorz.andrejczuk@intel.com>
	Cc: Piotr.Luc@intel.com
	Cc: dave.hansen@linux.intel.com
Link: http://lkml.kernel.org/r/1484918557-15481-5-git-send-email-grzegorz.andrejczuk@intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit e16fd002afe2b16d828bbf738b8a81a185fe9272)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/kernel-parameters.txt
#	arch/x86/kernel/cpu/intel.c
diff --cc Documentation/kernel-parameters.txt
index a90d5dc17718,cfbb3fc938f7..000000000000
--- a/Documentation/kernel-parameters.txt
+++ b/Documentation/kernel-parameters.txt
@@@ -2913,8 -3551,21 +2913,14 @@@ bytes respectively. Such letter suffixe
  	rhash_entries=	[KNL,NET]
  			Set number of hash buckets for route cache
  
++<<<<<<< HEAD:Documentation/kernel-parameters.txt
 +	riscom8=	[HW,SERIAL]
 +			Format: <io_board1>[,<io_board2>[,...<io_boardN>]]
++=======
+ 	ring3mwait=disable
+ 			[KNL] Disable ring 3 MONITOR/MWAIT feature on supported
+ 			CPUs.
++>>>>>>> e16fd002afe2 (x86/cpufeature: Enable RING3MWAIT for Knights Landing):Documentation/admin-guide/kernel-parameters.txt
  
  	ro		[KNL] Mount root device read-only on boot
  
diff --cc arch/x86/kernel/cpu/intel.c
index ec726d83f843,da2401a4b0f4..000000000000
--- a/arch/x86/kernel/cpu/intel.c
+++ b/arch/x86/kernel/cpu/intel.c
@@@ -13,6 -13,10 +13,13 @@@
  #include <asm/msr.h>
  #include <asm/bugs.h>
  #include <asm/cpu.h>
++<<<<<<< HEAD
++=======
+ #include <asm/intel-family.h>
+ #include <asm/microcode_intel.h>
+ #include <asm/hwcap2.h>
+ #include <asm/elf.h>
++>>>>>>> e16fd002afe2 (x86/cpufeature: Enable RING3MWAIT for Knights Landing)
  
  #ifdef CONFIG_X86_64
  #include <linux/topology.h>
@@@ -502,21 -594,9 +542,27 @@@ static void init_intel(struct cpuinfo_x
  	if (cpu_has(c, X86_FEATURE_VMX))
  		detect_vmx_virtcap(c);
  
++<<<<<<< HEAD
 +	/*
 +	 * Initialize MSR_IA32_ENERGY_PERF_BIAS if BIOS did not.
 +	 * x86_energy_perf_policy(8) is available to change it at run-time
 +	 */
 +	if (cpu_has(c, X86_FEATURE_EPB)) {
 +		u64 epb;
 +
 +		rdmsrl(MSR_IA32_ENERGY_PERF_BIAS, epb);
 +		if ((epb & 0xF) == ENERGY_PERF_BIAS_PERFORMANCE) {
 +			pr_warn_once("ENERGY_PERF_BIAS: Set to 'normal', was 'performance'\n");
 +			pr_warn_once("ENERGY_PERF_BIAS: View and update with x86_energy_perf_policy(8)\n");
 +			epb = (epb & ~0xF) | ENERGY_PERF_BIAS_NORMAL;
 +			wrmsrl(MSR_IA32_ENERGY_PERF_BIAS, epb);
 +		}
 +	}
++=======
+ 	init_intel_energy_perf(c);
+ 
+ 	probe_xeon_phi_r3mwait(c);
++>>>>>>> e16fd002afe2 (x86/cpufeature: Enable RING3MWAIT for Knights Landing)
  }
  
  #ifdef CONFIG_X86_32
* Unmerged path Documentation/kernel-parameters.txt
* Unmerged path arch/x86/kernel/cpu/intel.c
