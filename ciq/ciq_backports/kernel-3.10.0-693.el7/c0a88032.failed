ntb_transport: make DMA_OUT_RESOURCE_TO HZ independent

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Nicholas Mc Guire <hofrat@osadl.org>
commit c0a88032ef8e6814d4dd84551e5f333c1de639b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c0a88032.failed

schedule_timeout_* takes a timeout in jiffies but the code currently is
passing in a constant which makes this timeout HZ dependent, so pass it
through msecs_to_jiffies() to fix this up.

	Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
	Signed-off-by: Jon Mason <jdmason@kudzu.us>
(cherry picked from commit c0a88032ef8e6814d4dd84551e5f333c1de639b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ntb/ntb_transport.c
diff --cc drivers/ntb/ntb_transport.c
index cc39efa77597,4eb8adb34508..000000000000
--- a/drivers/ntb/ntb_transport.c
+++ b/drivers/ntb/ntb_transport.c
@@@ -200,11 -247,30 +200,16 @@@ enum 
  	MAX_SPAD,
  };
  
 -#define dev_client_dev(__dev) \
 -	container_of((__dev), struct ntb_transport_client_dev, dev)
 -
 -#define drv_client(__drv) \
 -	container_of((__drv), struct ntb_transport_client, driver)
 -
 -#define QP_TO_MW(nt, qp)	((qp) % nt->mw_count)
 +#define QP_TO_MW(ndev, qp)	((qp) % ntb_max_mw(ndev))
  #define NTB_QP_DEF_NUM_ENTRIES	100
  #define NTB_LINK_DOWN_TIMEOUT	10
++<<<<<<< HEAD
++=======
+ #define DMA_RETRIES		20
+ #define DMA_OUT_RESOURCE_TO	msecs_to_jiffies(50)
++>>>>>>> c0a88032ef8e (ntb_transport: make DMA_OUT_RESOURCE_TO HZ independent)
  
 -static void ntb_transport_rxc_db(unsigned long data);
 -static const struct ntb_ctx_ops ntb_transport_ops;
 -static struct ntb_client ntb_transport_client;
 -static int ntb_async_tx_submit(struct ntb_transport_qp *qp,
 -			       struct ntb_queue_entry *entry);
 -static void ntb_memcpy_tx(struct ntb_queue_entry *entry, void __iomem *offset);
 -static int ntb_async_rx_submit(struct ntb_queue_entry *entry, void *offset);
 -static void ntb_memcpy_rx(struct ntb_queue_entry *entry, void *offset);
 -
 -
 -static int ntb_transport_bus_match(struct device *dev,
 -				   struct device_driver *drv)
 +static int ntb_match_bus(struct device *dev, struct device_driver *drv)
  {
  	return !strncmp(dev_name(dev), drv->name, strlen(drv->name));
  }
* Unmerged path drivers/ntb/ntb_transport.c
