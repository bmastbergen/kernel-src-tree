net/mlx5e: Avoid port remapping of mlx5e netdev TISes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Avoid port remapping of mlx5e netdev TISes (Don Dutile) [1385219 1385330 1417285]
Rebuild_FUZZ: 96.08%
commit-author Aviv Heller <avivh@mellanox.com>
commit db60b80273c5e0e61c2ad59d2903c9988b9d184c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/db60b802.failed

TISes belonging to the mlx5e NIC should not be
subject to port remap.

	Signed-off-by: Aviv Heller <avivh@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
(cherry picked from commit db60b80273c5e0e61c2ad59d2903c9988b9d184c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 8d737e76ff7e,fa404142320d..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -1910,13 -2020,14 +1910,20 @@@ static void mlx5e_close_drop_rq(struct 
  static int mlx5e_create_tis(struct mlx5e_priv *priv, int tc)
  {
  	struct mlx5_core_dev *mdev = priv->mdev;
 -	u32 in[MLX5_ST_SZ_DW(create_tis_in)] = {0};
 +	u32 in[MLX5_ST_SZ_DW(create_tis_in)];
  	void *tisc = MLX5_ADDR_OF(create_tis_in, in, ctx);
  
 +	memset(in, 0, sizeof(in));
 +
  	MLX5_SET(tisc, tisc, prio, tc << 1);
++<<<<<<< HEAD
 +	MLX5_SET(tisc, tisc, transport_domain, priv->tdn);
++=======
+ 	MLX5_SET(tisc, tisc, transport_domain, mdev->mlx5e_res.td.tdn);
+ 
+ 	if (mlx5_lag_is_lacp_owner(mdev))
+ 		MLX5_SET(tisc, tisc, strict_lag_tx_port_affinity, 1);
++>>>>>>> db60b80273c5 (net/mlx5e: Avoid port remapping of mlx5e netdev TISes)
  
  	return mlx5_core_create_tis(mdev, in, sizeof(in), &priv->tisn[tc]);
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h b/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
index f0d87046af8e..f5472a38ca69 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
@@ -106,4 +106,16 @@ void mlx5_cq_tasklet_cb(unsigned long data);
 void mlx5e_init(void);
 void mlx5e_cleanup(void);
 
+static inline int mlx5_lag_is_lacp_owner(struct mlx5_core_dev *dev)
+{
+	/* LACP owner conditions:
+	 * 1) Function is physical.
+	 * 2) LAG is supported by FW.
+	 * 3) LAG is managed by driver (currently the only option).
+	 */
+	return  MLX5_CAP_GEN(dev, vport_group_manager) &&
+		   (MLX5_CAP_GEN(dev, num_lag_ports) > 1) &&
+		    MLX5_CAP_GEN(dev, lag_master);
+}
+
 #endif /* __MLX5_CORE_H__ */
