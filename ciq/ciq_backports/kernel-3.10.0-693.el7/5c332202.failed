EDAC, mce_amd: Rename nb_bus_decoder to dram_ecc_decoder

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [edac] mce_amd: Rename nb_bus_decoder to dram_ecc_decoder (Suravee Suthikulpanit) [1303712]
Rebuild_FUZZ: 94.34%
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 5c332202f805170436b210938fe3ad7f6b29bdbc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5c332202.failed

nb_bus_decoder() is only used for DRAM ECC errors so rename it so that
the name is more generic and descriptive.

Also, call it for DRAM ECC errors on SMCA systems.

[ Boris: rename it to real function name with a verb in it. ]

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Cc: Aravind Gopalakrishnan <aravindksg.lkml@gmail.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
Link: http://lkml.kernel.org/r/1479423463-8536-4-git-send-email-Yazen.Ghannam@amd.com
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 5c332202f805170436b210938fe3ad7f6b29bdbc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/mce_amd.c
diff --cc drivers/edac/mce_amd.c
index 896ecd88aae5,ac11bccba809..000000000000
--- a/drivers/edac/mce_amd.c
+++ b/drivers/edac/mce_amd.c
@@@ -710,6 -848,44 +710,47 @@@ static void decode_mc6_mce(struct mce *
  	pr_emerg(HW_ERR "Corrupted MC6 MCE info?\n");
  }
  
++<<<<<<< HEAD
++=======
+ /* Decode errors according to Scalable MCA specification */
+ static void decode_smca_errors(struct mce *m)
+ {
+ 	struct smca_hwid_mcatype *type;
+ 	unsigned int bank_type;
+ 	const char *ip_name;
+ 	u8 xec = XEC(m->status, xec_mask);
+ 
+ 	if (m->bank >= ARRAY_SIZE(smca_banks))
+ 		return;
+ 
+ 	if (boot_cpu_data.x86 >= 0x17 && m->bank == 4)
+ 		pr_emerg(HW_ERR "Bank 4 is reserved on Fam17h.\n");
+ 
+ 	type = smca_banks[m->bank].type;
+ 	if (!type)
+ 		return;
+ 
+ 	bank_type = type->bank_type;
+ 	ip_name = smca_bank_names[bank_type].long_name;
+ 
+ 	pr_emerg(HW_ERR "%s Extended Error Code: %d\n", ip_name, xec);
+ 
+ 	/* Only print the decode of valid error codes */
+ 	if (xec < smca_mce_descs[bank_type].num_descs &&
+ 			(type->xec_bitmap & BIT_ULL(xec))) {
+ 		pr_emerg(HW_ERR "%s Error: ", ip_name);
+ 		pr_cont("%s.\n", smca_mce_descs[bank_type].descs[xec]);
+ 	}
+ 
+ 	/*
+ 	 * amd_get_nb_id() returns the last level cache id.
+ 	 * The last level cache on Fam17h is 1 level below the node.
+ 	 */
+ 	if (bank_type == SMCA_UMC && xec == 0 && decode_dram_ecc)
+ 		decode_dram_ecc(amd_get_nb_id(m->extcpu) >> 1, m);
+ }
+ 
++>>>>>>> 5c332202f805 (EDAC, mce_amd: Rename nb_bus_decoder to dram_ecc_decoder)
  static inline void amd_decode_err_code(u16 ec)
  {
  	if (INT_ERROR(ec)) {
* Unmerged path drivers/edac/mce_amd.c
