powerpc: mark xer clobbered in csum_add()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [powerpc] mark xer clobbered in csum_add() (Gustavo Duarte) [1430834]
Rebuild_FUZZ: 87.67%
commit-author Christophe Leroy <christophe.leroy@c-s.fr>
commit 11dfbf588ae697bc5362c24294c2605f09c2d3d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/11dfbf58.failed

addc uses carry so xer is clobbered in csum_add()

	Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
	Signed-off-by: Scott Wood <oss@buserror.net>
(cherry picked from commit 11dfbf588ae697bc5362c24294c2605f09c2d3d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/checksum.h
diff --cc arch/powerpc/include/asm/checksum.h
index 8251a3ba870f,d2ca07bb8837..000000000000
--- a/arch/powerpc/include/asm/checksum.h
+++ b/arch/powerpc/include/asm/checksum.h
@@@ -127,6 -118,34 +127,37 @@@ static inline __wsum csum_tcpudp_nofold
  #endif
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * computes the checksum of the TCP/UDP pseudo-header
+  * returns a 16-bit checksum, already complemented
+  */
+ static inline __sum16 csum_tcpudp_magic(__be32 saddr, __be32 daddr,
+ 					unsigned short len,
+ 					unsigned short proto,
+ 					__wsum sum)
+ {
+ 	return csum_fold(csum_tcpudp_nofold(saddr, daddr, len, proto, sum));
+ }
+ 
+ #define HAVE_ARCH_CSUM_ADD
+ static inline __wsum csum_add(__wsum csum, __wsum addend)
+ {
+ #ifdef __powerpc64__
+ 	u64 res = (__force u64)csum;
+ 
+ 	res += (__force u64)addend;
+ 	return (__force __wsum)((u32)res + (res >> 32));
+ #else
+ 	asm("addc %0,%0,%1;"
+ 	    "addze %0,%0;"
+ 	    : "+r" (csum) : "r" (addend) : "xer");
+ 	return csum;
+ #endif
+ }
+ 
++>>>>>>> 11dfbf588ae6 (powerpc: mark xer clobbered in csum_add())
  #endif
  #endif /* __KERNEL__ */
  #endif
* Unmerged path arch/powerpc/include/asm/checksum.h
