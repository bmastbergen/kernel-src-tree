tools build: Add feature detection for g++

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit 87095f7ddeff3038a0cf8e6574922f9c11688619
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/87095f7d.failed

Check if g++ is available. The result will be used by builtin clang and
LLVM support. Since LLVM requires C++11, this feature detector checks
std::move().

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Cc: Alexei Starovoitov <ast@fb.com>
	Cc: He Kuang <hekuang@huawei.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/1474874832-134786-3-git-send-email-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 87095f7ddeff3038a0cf8e6574922f9c11688619)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/build/feature/Makefile
diff --cc tools/build/feature/Makefile
index 017397a4639a,ac9c477a2a48..000000000000
--- a/tools/build/feature/Makefile
+++ b/tools/build/feature/Makefile
@@@ -44,7 -44,10 +44,14 @@@ FILES=					
  	test-compile-x32.bin		\
  	test-zlib.bin			\
  	test-lzma.bin			\
++<<<<<<< HEAD
 +	test-get_cpuid.bin
++=======
+ 	test-bpf.bin			\
+ 	test-get_cpuid.bin		\
+ 	test-sdt.bin			\
+ 	test-cxx.bin
++>>>>>>> 87095f7ddeff (tools build: Add feature detection for g++)
  
  FILES := $(addprefix $(OUTPUT),$(FILES))
  
@@@ -209,6 -216,15 +220,18 @@@ $(OUTPUT)test-lzma.bin
  $(OUTPUT)test-get_cpuid.bin:
  	$(BUILD)
  
++<<<<<<< HEAD
++=======
+ $(OUTPUT)test-bpf.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-sdt.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-cxx.bin:
+ 	$(BUILDXX) -std=gnu++11
+ 
++>>>>>>> 87095f7ddeff (tools build: Add feature detection for g++)
  -include $(OUTPUT)*.d
  
  ###############################
diff --git a/tools/build/Makefile.feature b/tools/build/Makefile.feature
index ceee323e4d27..3c73cfcd4892 100644
--- a/tools/build/Makefile.feature
+++ b/tools/build/Makefile.feature
@@ -7,7 +7,7 @@ endif
 
 feature_check = $(eval $(feature_check_code))
 define feature_check_code
-  feature-$(1) := $(shell $(MAKE) OUTPUT=$(OUTPUT_FEATURES) CFLAGS="$(EXTRA_CFLAGS) $(FEATURE_CHECK_CFLAGS-$(1))" LDFLAGS="$(LDFLAGS) $(FEATURE_CHECK_LDFLAGS-$(1))" -C $(feature_dir) $(OUTPUT_FEATURES)test-$1.bin >/dev/null 2>/dev/null && echo 1 || echo 0)
+  feature-$(1) := $(shell $(MAKE) OUTPUT=$(OUTPUT_FEATURES) CFLAGS="$(EXTRA_CFLAGS) $(FEATURE_CHECK_CFLAGS-$(1))" CXXFLAGS="$(EXTRA_CXXFLAGS) $(FEATURE_CHECK_CXXFLAGS-$(1))" LDFLAGS="$(LDFLAGS) $(FEATURE_CHECK_LDFLAGS-$(1))" -C $(feature_dir) $(OUTPUT_FEATURES)test-$1.bin >/dev/null 2>/dev/null && echo 1 || echo 0)
 endef
 
 feature_set = $(eval $(feature_set_code))
* Unmerged path tools/build/feature/Makefile
diff --git a/tools/build/feature/test-cxx.cpp b/tools/build/feature/test-cxx.cpp
new file mode 100644
index 000000000000..b1dee9a31d6c
--- /dev/null
+++ b/tools/build/feature/test-cxx.cpp
@@ -0,0 +1,15 @@
+#include <iostream>
+#include <memory>
+
+static void print_str(std::string s)
+{
+	std::cout << s << std::endl;
+}
+
+int main()
+{
+	std::string s("Hello World!");
+	print_str(std::move(s));
+	std::cout << "|" << s << "|" << std::endl;
+	return 0;
+}
