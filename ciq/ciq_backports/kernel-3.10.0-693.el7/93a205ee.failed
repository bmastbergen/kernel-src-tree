virtio-net: Update the mtu code to match virtio spec

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Aaron Conole <aconole@redhat.com>
commit 93a205ee98a4881e8bf608e65562c19d45930a93
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/93a205ee.failed

The virtio committee recently ratified a change, VIRTIO-152, which
defines the mtu field to be 'max' MTU, not simply desired MTU.

This commit brings the virtio-net device in compliance with VIRTIO-152.

Additionally, drop the max_mtu branch - it cannot be taken since the u16
returned by virtio_cread16 will never exceed the initial value of
max_mtu.

	Signed-off-by: Aaron Conole <aconole@redhat.com>
	Acked-by: "Michael S. Tsirkin" <mst@redhat.com>
	Acked-by: Jarod Wilson <jarod@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 93a205ee98a4881e8bf608e65562c19d45930a93)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/virtio_net.c
diff --cc drivers/net/virtio_net.c
index c956abc0afff,2cafd12a1075..000000000000
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@@ -1648,8 -1870,12 +1648,17 @@@ static int virtnet_probe(struct virtio_
  		mtu = virtio_cread16(vdev,
  				     offsetof(struct virtio_net_config,
  					      mtu));
++<<<<<<< HEAD
 +		if (virtnet_change_mtu(dev, mtu))
 +			__virtio_clear_bit(vdev, VIRTIO_NET_F_MTU);
++=======
+ 		if (mtu < dev->min_mtu) {
+ 			__virtio_clear_bit(vdev, VIRTIO_NET_F_MTU);
+ 		} else {
+ 			dev->mtu = mtu;
+ 			dev->max_mtu = mtu;
+ 		}
++>>>>>>> 93a205ee98a4 (virtio-net: Update the mtu code to match virtio spec)
  	}
  
  	if (vi->any_header_sg)
* Unmerged path drivers/net/virtio_net.c
