sfc: don't report RX hash keys to ethtool when RSS wasn't enabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Edward Cree <ecree@solarflare.com>
commit 4fdda95893de776a8efdf661bbf0e338f2f13dcb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4fdda958.failed

If we failed to set up RSS on EF10 (e.g. because firmware declared
 RX_RSS_LIMITED), ethtool --show-nfc $dev rx-flow-hash ... should report
 no fields, rather than confusingly reporting what fields we _would_ be
 hashing on if RSS was working.

Fixes: dcb4123cbec0 ("sfc: disable RSS when unsupported")
	Signed-off-by: Edward Cree <ecree@solarflare.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4fdda95893de776a8efdf661bbf0e338f2f13dcb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/sfc/net_driver.h
diff --cc drivers/net/ethernet/sfc/net_driver.h
index dc9b3e8ba4d9,1c62c1a00fca..000000000000
--- a/drivers/net/ethernet/sfc/net_driver.h
+++ b/drivers/net/ethernet/sfc/net_driver.h
@@@ -862,6 -860,8 +862,11 @@@ struct vfdi_status
   * @rx_hash_key: Toeplitz hash key for RSS
   * @rx_indir_table: Indirection table for RSS
   * @rx_scatter: Scatter mode enabled for receives
++<<<<<<< HEAD
++=======
+  * @rss_active: RSS enabled on hardware
+  * @rx_hash_udp_4tuple: UDP 4-tuple hashing enabled
++>>>>>>> 4fdda95893de (sfc: don't report RX hash keys to ethtool when RSS wasn't enabled)
   * @int_error_count: Number of internal errors seen recently
   * @int_error_expire: Time at which error count will be expired
   * @irq_soft_enabled: Are IRQs soft-enabled? If not, IRQ handler will
@@@ -999,6 -999,8 +1004,11 @@@ struct efx_nic 
  	u8 rx_hash_key[40];
  	u32 rx_indir_table[128];
  	bool rx_scatter;
++<<<<<<< HEAD
++=======
+ 	bool rss_active;
+ 	bool rx_hash_udp_4tuple;
++>>>>>>> 4fdda95893de (sfc: don't report RX hash keys to ethtool when RSS wasn't enabled)
  
  	unsigned int_error_count;
  	unsigned long int_error_expire;
diff --git a/drivers/net/ethernet/sfc/ef10.c b/drivers/net/ethernet/sfc/ef10.c
index 84e64993e96f..dd279fc9a13e 100644
--- a/drivers/net/ethernet/sfc/ef10.c
+++ b/drivers/net/ethernet/sfc/ef10.c
@@ -1323,7 +1323,8 @@ static int efx_ef10_init_nic(struct efx_nic *efx)
 	}
 
 	/* don't fail init if RSS setup doesn't work */
-	efx->type->rx_push_rss_config(efx, false, efx->rx_indir_table);
+	rc = efx->type->rx_push_rss_config(efx, false, efx->rx_indir_table);
+	efx->rss_active = (rc == 0);
 
 	return 0;
 }
diff --git a/drivers/net/ethernet/sfc/ethtool.c b/drivers/net/ethernet/sfc/ethtool.c
index 637775aea5b4..2a171673d288 100644
--- a/drivers/net/ethernet/sfc/ethtool.c
+++ b/drivers/net/ethernet/sfc/ethtool.c
@@ -966,6 +966,8 @@ efx_ethtool_get_rxnfc(struct net_device *net_dev,
 
 	case ETHTOOL_GRXFH: {
 		info->data = 0;
+		if (!efx->rss_active) /* No RSS */
+			return 0;
 		switch (info->flow_type) {
 		case TCP_V4_FLOW:
 			info->data |= RXH_L4_B_0_1 | RXH_L4_B_2_3;
* Unmerged path drivers/net/ethernet/sfc/net_driver.h
diff --git a/drivers/net/ethernet/sfc/siena.c b/drivers/net/ethernet/sfc/siena.c
index a3901bc96586..4e54e5dc9fcb 100644
--- a/drivers/net/ethernet/sfc/siena.c
+++ b/drivers/net/ethernet/sfc/siena.c
@@ -403,6 +403,7 @@ static int siena_init_nic(struct efx_nic *efx)
 	efx_writeo(efx, &temp, FR_AZ_RX_CFG);
 
 	siena_rx_push_rss_config(efx, false, efx->rx_indir_table);
+	efx->rss_active = true;
 
 	/* Enable event logging */
 	rc = efx_mcdi_log_ctrl(efx, true, false, 0);
