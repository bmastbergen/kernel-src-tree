scsi: be2iscsi: set errno on error path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] be2iscsi: set errno on error path (Maurizio Lombardi) [1382263]
Rebuild_FUZZ: 91.67%
commit-author Pan Bian <bianpan2016@163.com>
commit 29b33252751b430e400a987667a826ffcd2741f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/29b33252.failed

Variable ret is reset in the loop, and its value will be 0 during the
second and after repeat of the loop. If pci_alloc_consistent() returns a
NULL pointer then, it will leaves with return value 0. 0 means no error,
which is contrary to the fact. This patches fixes the bug, explicitly
assigning "-ENOMEM" to return variable ret on the path that the call to
pci_alloc_consistent() fails.

Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=188941

	Signed-off-by: Pan Bian <bianpan2016@163.com>
	Reviewed-by: Jitendra Bhivare <Jitendra.bhivare@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 29b33252751b430e400a987667a826ffcd2741f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/be2iscsi/be_main.c
diff --cc drivers/scsi/be2iscsi/be_main.c
index ff265d59e294,b6c5791060e5..000000000000
--- a/drivers/scsi/be2iscsi/be_main.c
+++ b/drivers/scsi/be2iscsi/be_main.c
@@@ -3293,10 -3111,13 +3293,20 @@@ static int beiscsi_create_cqs(struct be
  		pbe_eq->phba = phba;
  		mem = &cq->dma_mem;
  		cq_vaddress = pci_alloc_consistent(phba->pcidev,
++<<<<<<< HEAD
 +						     num_cq_pages * PAGE_SIZE,
 +						     &paddr);
 +		if (!cq_vaddress)
 +			goto create_cq_error;
++=======
+ 						   num_cq_pages * PAGE_SIZE,
+ 						   &paddr);
+ 		if (!cq_vaddress) {
+ 			ret = -ENOMEM;
+ 			goto create_cq_error;
+ 		}
+ 
++>>>>>>> 29b33252751b (scsi: be2iscsi: set errno on error path)
  		ret = be_fill_queue(cq, phba->params.num_cq_entries,
  				    sizeof(struct sol_cqe), cq_vaddress);
  		if (ret) {
* Unmerged path drivers/scsi/be2iscsi/be_main.c
