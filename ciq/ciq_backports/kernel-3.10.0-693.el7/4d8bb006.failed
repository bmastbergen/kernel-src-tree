x86/cpufeature: Enable RING3MWAIT for Knights Mill

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] cpufeature: Enable RING3MWAIT for Knights Mill (Xiaolong Wang) [1387697]
Rebuild_FUZZ: 95.83%
commit-author Piotr Luc <piotr.luc@intel.com>
commit 4d8bb00604b182b62e7786bae0e58e0befeeff85
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4d8bb006.failed

Enable ring 3 MONITOR/MWAIT for Intel Xeon Phi codenamed Knights Mill. We
can't guarantee that this (KNM) will be the last CPU model that needs this
hack.  But, we do recognize that this is far from optimal, and there is an
effort to ensure we don't keep doing extending this hack forever.

	Signed-off-by: Piotr Luc <piotr.luc@intel.com>
	Cc: Piotr.Luc@intel.com
	Cc: dave.hansen@linux.intel.com
Link: http://lkml.kernel.org/r/1484918557-15481-6-git-send-email-grzegorz.andrejczuk@intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit 4d8bb00604b182b62e7786bae0e58e0befeeff85)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/intel.c
diff --cc arch/x86/kernel/cpu/intel.c
index ec726d83f843,a4c4ff9b27e4..000000000000
--- a/arch/x86/kernel/cpu/intel.c
+++ b/arch/x86/kernel/cpu/intel.c
@@@ -60,6 -64,46 +60,49 @@@ void check_mpx_erratum(struct cpuinfo_x
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static bool ring3mwait_disabled __read_mostly;
+ 
+ static int __init ring3mwait_disable(char *__unused)
+ {
+ 	ring3mwait_disabled = true;
+ 	return 0;
+ }
+ __setup("ring3mwait=disable", ring3mwait_disable);
+ 
+ static void probe_xeon_phi_r3mwait(struct cpuinfo_x86 *c)
+ {
+ 	/*
+ 	 * Ring 3 MONITOR/MWAIT feature cannot be detected without
+ 	 * cpu model and family comparison.
+ 	 */
+ 	if (c->x86 != 6)
+ 		return;
+ 	switch (c->x86_model) {
+ 	case INTEL_FAM6_XEON_PHI_KNL:
+ 	case INTEL_FAM6_XEON_PHI_KNM:
+ 		break;
+ 	default:
+ 		return;
+ 	}
+ 
+ 	if (ring3mwait_disabled) {
+ 		msr_clear_bit(MSR_MISC_FEATURE_ENABLES,
+ 			      MSR_MISC_FEATURE_ENABLES_RING3MWAIT_BIT);
+ 		return;
+ 	}
+ 
+ 	msr_set_bit(MSR_MISC_FEATURE_ENABLES,
+ 		    MSR_MISC_FEATURE_ENABLES_RING3MWAIT_BIT);
+ 
+ 	set_cpu_cap(c, X86_FEATURE_RING3MWAIT);
+ 
+ 	if (c == &boot_cpu_data)
+ 		ELF_HWCAP2 |= HWCAP2_RING3MWAIT;
+ }
+ 
++>>>>>>> 4d8bb00604b1 (x86/cpufeature: Enable RING3MWAIT for Knights Mill)
  static void early_init_intel(struct cpuinfo_x86 *c)
  {
  	u64 misc_enable;
* Unmerged path arch/x86/kernel/cpu/intel.c
