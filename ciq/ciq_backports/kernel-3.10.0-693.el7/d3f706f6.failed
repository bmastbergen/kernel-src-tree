ipv4: fib: Convert FIB notification chain to be atomic

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit d3f706f68e2fd93f1172fe7fd6f16ba70cc52b31
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d3f706f6.failed

In order not to hold RTNL for long periods of time we're going to dump
the FIB tables using RCU.

Convert the FIB notification chain to be atomic, as we can't block in
RCU critical sections.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d3f706f68e2fd93f1172fe7fd6f16ba70cc52b31)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_trie.c
diff --cc net/ipv4/fib_trie.c
index a731822edc22,9bfce0df20dc..000000000000
--- a/net/ipv4/fib_trie.c
+++ b/net/ipv4/fib_trie.c
@@@ -79,8 -81,47 +79,49 @@@
  #include <net/tcp.h>
  #include <net/sock.h>
  #include <net/ip_fib.h>
 -#include <trace/events/fib.h>
  #include "fib_lookup.h"
  
++<<<<<<< HEAD
++=======
+ static ATOMIC_NOTIFIER_HEAD(fib_chain);
+ 
+ int register_fib_notifier(struct notifier_block *nb)
+ {
+ 	return atomic_notifier_chain_register(&fib_chain, nb);
+ }
+ EXPORT_SYMBOL(register_fib_notifier);
+ 
+ int unregister_fib_notifier(struct notifier_block *nb)
+ {
+ 	return atomic_notifier_chain_unregister(&fib_chain, nb);
+ }
+ EXPORT_SYMBOL(unregister_fib_notifier);
+ 
+ int call_fib_notifiers(struct net *net, enum fib_event_type event_type,
+ 		       struct fib_notifier_info *info)
+ {
+ 	info->net = net;
+ 	return atomic_notifier_call_chain(&fib_chain, event_type, info);
+ }
+ 
+ static int call_fib_entry_notifiers(struct net *net,
+ 				    enum fib_event_type event_type, u32 dst,
+ 				    int dst_len, struct fib_info *fi,
+ 				    u8 tos, u8 type, u32 tb_id, u32 nlflags)
+ {
+ 	struct fib_entry_notifier_info info = {
+ 		.dst = dst,
+ 		.dst_len = dst_len,
+ 		.fi = fi,
+ 		.tos = tos,
+ 		.type = type,
+ 		.tb_id = tb_id,
+ 		.nlflags = nlflags,
+ 	};
+ 	return call_fib_notifiers(net, event_type, &info.info);
+ }
+ 
++>>>>>>> d3f706f68e2f (ipv4: fib: Convert FIB notification chain to be atomic)
  #define MAX_STAT_DEPTH 32
  
  #define KEYLENGTH	(8*sizeof(t_key))
* Unmerged path net/ipv4/fib_trie.c
