amd-xgbe: Use disable_irq_nosync when in IRQ context

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Lendacky, Thomas <Thomas.Lendacky@amd.com>
commit f9c5c62db1c9bc20f396c3527b5074c4e7f1c275
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f9c5c62d.failed

The disable_irq_nosync function, not the disable_irq function, must be
used to disable the DMA channel interrupt from within the interrupt
service routine. Change the disable_irq call to disable_irq_nosync.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f9c5c62db1c9bc20f396c3527b5074c4e7f1c275)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-drv.c
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-drv.c
index 8bd8b6363c16,bf6bf1118b0f..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
@@@ -264,6 -387,24 +264,27 @@@ isr_done
  	return IRQ_HANDLED;
  }
  
++<<<<<<< HEAD
++=======
+ static irqreturn_t xgbe_dma_isr(int irq, void *data)
+ {
+ 	struct xgbe_channel *channel = data;
+ 
+ 	/* Per channel DMA interrupts are enabled, so we use the per
+ 	 * channel napi structure and not the private data napi structure
+ 	 */
+ 	if (napi_schedule_prep(&channel->napi)) {
+ 		/* Disable Tx and Rx interrupts */
+ 		disable_irq_nosync(channel->dma_irq);
+ 
+ 		/* Turn on polling */
+ 		__napi_schedule(&channel->napi);
+ 	}
+ 
+ 	return IRQ_HANDLED;
+ }
+ 
++>>>>>>> f9c5c62db1c9 (amd-xgbe: Use disable_irq_nosync when in IRQ context)
  static enum hrtimer_restart xgbe_tx_timer(struct hrtimer *timer)
  {
  	struct xgbe_channel *channel = container_of(timer,
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-drv.c
