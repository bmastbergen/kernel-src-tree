locking/qrwlock: Rename QUEUE_RWLOCK to QUEUED_RWLOCKS

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Waiman Long <Waiman.Long@hp.com>
commit c7114b4e6c53111d415485875725b60213ffc675
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c7114b4e.failed

To be consistent with the queued spinlocks which use
CONFIG_QUEUED_SPINLOCKS config parameter, the one for the queued
rwlocks is now renamed to CONFIG_QUEUED_RWLOCKS.

	Signed-off-by: Waiman Long <Waiman.Long@hp.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Douglas Hatch <doug.hatch@hp.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Scott J Norton <scott.norton@hp.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/1431367031-36697-1-git-send-email-Waiman.Long@hp.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit c7114b4e6c53111d415485875725b60213ffc675)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/Kconfig
#	kernel/Kconfig.locks
#	kernel/locking/Makefile
#	kernel/locking/qrwlock.c
diff --cc arch/x86/Kconfig
index 5a47c416be87,4e986e809861..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -124,7 -127,8 +124,12 @@@ config X8
  	select MODULES_USE_ELF_RELA if X86_64
  	select CLONE_BACKWARDS if X86_32
  	select ARCH_USE_BUILTIN_BSWAP
++<<<<<<< HEAD
 +	select ARCH_USE_QUEUE_RWLOCK
++=======
+ 	select ARCH_USE_QUEUED_SPINLOCKS
+ 	select ARCH_USE_QUEUED_RWLOCKS
++>>>>>>> c7114b4e6c53 (locking/qrwlock: Rename QUEUE_RWLOCK to QUEUED_RWLOCKS)
  	select OLD_SIGSUSPEND3 if X86_32 || IA32_EMULATION
  	select OLD_SIGACTION if X86_32
  	select COMPAT_OLD_SIGACTION if IA32_EMULATION
diff --cc kernel/Kconfig.locks
index 44511d100eaa,ebdb0043203a..000000000000
--- a/kernel/Kconfig.locks
+++ b/kernel/Kconfig.locks
@@@ -220,6 -220,31 +220,32 @@@ config INLINE_WRITE_UNLOCK_IRQRESTOR
  
  endif
  
 -config ARCH_SUPPORTS_ATOMIC_RMW
 -	bool
 -
  config MUTEX_SPIN_ON_OWNER
  	def_bool y
++<<<<<<< HEAD
 +	depends on SMP && !DEBUG_MUTEXES
++=======
+ 	depends on SMP && !DEBUG_MUTEXES && ARCH_SUPPORTS_ATOMIC_RMW
+ 
+ config RWSEM_SPIN_ON_OWNER
+        def_bool y
+        depends on SMP && RWSEM_XCHGADD_ALGORITHM && ARCH_SUPPORTS_ATOMIC_RMW
+ 
+ config LOCK_SPIN_ON_OWNER
+        def_bool y
+        depends on MUTEX_SPIN_ON_OWNER || RWSEM_SPIN_ON_OWNER
+ 
+ config ARCH_USE_QUEUED_SPINLOCKS
+ 	bool
+ 
+ config QUEUED_SPINLOCKS
+ 	def_bool y if ARCH_USE_QUEUED_SPINLOCKS
+ 	depends on SMP
+ 
+ config ARCH_USE_QUEUED_RWLOCKS
+ 	bool
+ 
+ config QUEUED_RWLOCKS
+ 	def_bool y if ARCH_USE_QUEUED_RWLOCKS
+ 	depends on SMP
++>>>>>>> c7114b4e6c53 (locking/qrwlock: Rename QUEUE_RWLOCK to QUEUED_RWLOCKS)
* Unmerged path kernel/locking/Makefile
* Unmerged path kernel/locking/qrwlock.c
* Unmerged path arch/x86/Kconfig
* Unmerged path kernel/Kconfig.locks
* Unmerged path kernel/locking/Makefile
* Unmerged path kernel/locking/qrwlock.c
