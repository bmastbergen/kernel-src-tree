ACPICA: Add new statistics interface.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [acpi] acpica: Add new statistics interface (Prarit Bhargava) [1425180]
Rebuild_FUZZ: 98.63%
commit-author Lv Zheng <lv.zheng@intel.com>
commit 9187a415fd119c1d89a5ad2fd05513cd43699ebf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9187a415.failed

This patch ports new counters and statistics interface, already
implemented in ACPICA upstream, to Linux.  That helps to reduce
source code differences between Linux and ACPICA upstream.

[rjw: Changelog]
	Signed-off-by: Lv Zheng <lv.zheng@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 9187a415fd119c1d89a5ad2fd05513cd43699ebf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpica/evsci.c
#	drivers/acpi/acpica/utglobal.c
diff --cc drivers/acpi/acpica/evsci.c
index b905acf7aacd,9e9e3454d893..000000000000
--- a/drivers/acpi/acpica/evsci.c
+++ b/drivers/acpi/acpica/evsci.c
@@@ -89,6 -133,11 +89,14 @@@ static u32 ACPI_SYSTEM_XFACE acpi_ev_sc
  	 */
  	interrupt_handled |= acpi_ev_gpe_detect(gpe_xrupt_list);
  
++<<<<<<< HEAD
++=======
+ 	/* Invoke all host-installed SCI handlers */
+ 
+ 	interrupt_handled |= acpi_ev_sci_dispatch();
+ 
+ 	acpi_sci_count++;
++>>>>>>> 9187a415fd11 (ACPICA: Add new statistics interface.)
  	return_UINT32(interrupt_handled);
  }
  
diff --cc drivers/acpi/acpica/utglobal.c
index 9719819c487b,81f9a9584451..000000000000
--- a/drivers/acpi/acpica/utglobal.c
+++ b/drivers/acpi/acpica/utglobal.c
@@@ -289,9 -289,19 +289,19 @@@ acpi_status acpi_ut_init_globals(void
  
  	acpi_gbl_owner_id_mask[ACPI_NUM_OWNERID_MASKS - 1] = 0x80000000;
  
+ 	/* Event counters */
+ 
+ 	acpi_method_count = 0;
+ 	acpi_sci_count = 0;
+ 	acpi_gpe_count = 0;
+ 
+ 	for (i = 0; i < ACPI_NUM_FIXED_EVENTS; i++) {
+ 		acpi_fixed_event_count[i] = 0;
+ 	}
+ 
  #if (!ACPI_REDUCED_HARDWARE)
  
 -	/* GPE/SCI support */
 +	/* GPE support */
  
  	acpi_gbl_all_gpes_initialized = FALSE;
  	acpi_gbl_gpe_xrupt_list_head = NULL;
@@@ -378,6 -388,11 +388,12 @@@
  /* Public globals */
  
  ACPI_EXPORT_SYMBOL(acpi_gbl_FADT)
 -
  ACPI_EXPORT_SYMBOL(acpi_dbg_level)
 -
  ACPI_EXPORT_SYMBOL(acpi_dbg_layer)
++<<<<<<< HEAD
++=======
+ 
+ ACPI_EXPORT_SYMBOL(acpi_gpe_count)
+ 
++>>>>>>> 9187a415fd11 (ACPICA: Add new statistics interface.)
  ACPI_EXPORT_SYMBOL(acpi_current_gpe_count)
diff --git a/drivers/acpi/acpica/acglobal.h b/drivers/acpi/acpica/acglobal.h
index b8d38117a20c..703a10c759db 100644
--- a/drivers/acpi/acpica/acglobal.h
+++ b/drivers/acpi/acpica/acglobal.h
@@ -400,7 +400,9 @@ extern u32 acpi_gbl_nesting_level;
 
 /* Event counters */
 
+ACPI_EXTERN u32 acpi_method_count;
 ACPI_EXTERN u32 acpi_gpe_count;
+ACPI_EXTERN u32 acpi_sci_count;
 ACPI_EXTERN u32 acpi_fixed_event_count[ACPI_NUM_FIXED_EVENTS];
 
 /* Support for dynamic control method tracing mechanism */
diff --git a/drivers/acpi/acpica/dsmethod.c b/drivers/acpi/acpica/dsmethod.c
index 2184259c386b..bf97180a3608 100644
--- a/drivers/acpi/acpica/dsmethod.c
+++ b/drivers/acpi/acpica/dsmethod.c
@@ -295,6 +295,7 @@ acpi_ds_begin_method_execution(struct acpi_namespace_node *method_node,
 	 * reentered one more time (even if it is the same thread)
 	 */
 	obj_desc->method.thread_count++;
+	acpi_method_count++;
 	return_ACPI_STATUS(status);
 
       cleanup:
* Unmerged path drivers/acpi/acpica/evsci.c
* Unmerged path drivers/acpi/acpica/utglobal.c
diff --git a/drivers/acpi/acpica/utxface.c b/drivers/acpi/acpica/utxface.c
index 71911d7853df..e2ad9806210e 100644
--- a/drivers/acpi/acpica/utxface.c
+++ b/drivers/acpi/acpica/utxface.c
@@ -208,6 +208,44 @@ acpi_status acpi_get_system_info(struct acpi_buffer * out_buffer)
 
 ACPI_EXPORT_SYMBOL(acpi_get_system_info)
 
+/*******************************************************************************
+ *
+ * FUNCTION:    acpi_get_statistics
+ *
+ * PARAMETERS:  stats           - Where the statistics are returned
+ *
+ * RETURN:      status          - the status of the call
+ *
+ * DESCRIPTION: Get the contents of the various system counters
+ *
+ ******************************************************************************/
+acpi_status acpi_get_statistics(struct acpi_statistics *stats)
+{
+	ACPI_FUNCTION_TRACE(acpi_get_statistics);
+
+	/* Parameter validation */
+
+	if (!stats) {
+		return_ACPI_STATUS(AE_BAD_PARAMETER);
+	}
+
+	/* Various interrupt-based event counters */
+
+	stats->sci_count = acpi_sci_count;
+	stats->gpe_count = acpi_gpe_count;
+
+	ACPI_MEMCPY(stats->fixed_event_count, acpi_fixed_event_count,
+		    sizeof(acpi_fixed_event_count));
+
+	/* Other counters */
+
+	stats->method_count = acpi_method_count;
+
+	return_ACPI_STATUS(AE_OK);
+}
+
+ACPI_EXPORT_SYMBOL(acpi_get_statistics)
+
 /*****************************************************************************
  *
  * FUNCTION:    acpi_install_initialization_handler
diff --git a/include/acpi/acpixf.h b/include/acpi/acpixf.h
index 708939f6291d..433bda20c39c 100644
--- a/include/acpi/acpixf.h
+++ b/include/acpi/acpixf.h
@@ -139,6 +139,8 @@ acpi_status acpi_subsystem_status(void);
 acpi_status acpi_get_system_info(struct acpi_buffer *ret_buffer);
 #endif
 
+acpi_status acpi_get_statistics(struct acpi_statistics *stats);
+
 const char *acpi_format_exception(acpi_status exception);
 
 acpi_status acpi_purge_cached_objects(void);
diff --git a/include/acpi/actypes.h b/include/acpi/actypes.h
index f89f5b885510..cb911df3fc53 100644
--- a/include/acpi/actypes.h
+++ b/include/acpi/actypes.h
@@ -961,6 +961,16 @@ struct acpi_system_info {
 	u32 debug_layer;
 };
 
+/*
+ * System statistics returned by acpi_get_statistics()
+ */
+struct acpi_statistics {
+	u32 sci_count;
+	u32 gpe_count;
+	u32 fixed_event_count[ACPI_NUM_FIXED_EVENTS];
+	u32 method_count;
+};
+
 /* Table Event Types */
 
 #define ACPI_TABLE_EVENT_LOAD           0x0
