btrfs: make extent_range_redirty_for_io return void

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author David Sterba <dsterba@suse.com>
commit f6311572762a9ccaa533e60bf7929d63be914bde
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f6311572.failed

Does not return any errors, nor anything from the callgraph. There's a
BUG_ON but it's a sanity check and not an error condition we could
recover from.

	Signed-off-by: David Sterba <dsterba@suse.com>
(cherry picked from commit f6311572762a9ccaa533e60bf7929d63be914bde)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/extent_io.h
diff --cc fs/btrfs/extent_io.h
index 7f79e9b25809,fbc6448e70e4..000000000000
--- a/fs/btrfs/extent_io.h
+++ b/fs/btrfs/extent_io.h
@@@ -406,8 -338,8 +406,13 @@@ int map_private_extent_buffer(struct ex
  		      unsigned long min_len, char **map,
  		      unsigned long *map_start,
  		      unsigned long *map_len);
++<<<<<<< HEAD
 +int extent_range_clear_dirty_for_io(struct inode *inode, u64 start, u64 end);
 +int extent_range_redirty_for_io(struct inode *inode, u64 start, u64 end);
++=======
+ void extent_range_clear_dirty_for_io(struct inode *inode, u64 start, u64 end);
+ void extent_range_redirty_for_io(struct inode *inode, u64 start, u64 end);
++>>>>>>> f6311572762a (btrfs: make extent_range_redirty_for_io return void)
  void extent_clear_unlock_delalloc(struct inode *inode, u64 start, u64 end,
  				 struct page *locked_page,
  				 unsigned bits_to_clear,
diff --git a/fs/btrfs/extent_io.c b/fs/btrfs/extent_io.c
index 71e58a8468eb..acef45d1b563 100644
--- a/fs/btrfs/extent_io.c
+++ b/fs/btrfs/extent_io.c
@@ -1379,7 +1379,7 @@ int extent_range_clear_dirty_for_io(struct inode *inode, u64 start, u64 end)
 	return 0;
 }
 
-int extent_range_redirty_for_io(struct inode *inode, u64 start, u64 end)
+void extent_range_redirty_for_io(struct inode *inode, u64 start, u64 end)
 {
 	unsigned long index = start >> PAGE_CACHE_SHIFT;
 	unsigned long end_index = end >> PAGE_CACHE_SHIFT;
@@ -1393,7 +1393,6 @@ int extent_range_redirty_for_io(struct inode *inode, u64 start, u64 end)
 		page_cache_release(page);
 		index++;
 	}
-	return 0;
 }
 
 /*
* Unmerged path fs/btrfs/extent_io.h
