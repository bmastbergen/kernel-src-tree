xen/netfront: set default upper limit of tx/rx queues to 8

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Juergen Gross <jgross@suse.com>
commit 034702a64a6692a8d5d0d9630064a014fc633728
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/034702a6.failed

The default for the number of tx/rx queues of one interface is the
number of vcpus of the system today. As each queue pair reserves 512
grant pages this default consumes a ridiculous number of grants for
large guests.

Limit the queue number to 8 as default. This value can be modified
via a module parameter if required.

	Signed-off-by: Juergen Gross <jgross@suse.com>
	Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
(cherry picked from commit 034702a64a6692a8d5d0d9630064a014fc633728)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/xen-netfront.c
diff --cc drivers/net/xen-netfront.c
index 8896052a2ee0,7ce5d2f96b51..000000000000
--- a/drivers/net/xen-netfront.c
+++ b/drivers/net/xen-netfront.c
@@@ -57,6 -56,13 +57,16 @@@
  #include <xen/interface/memory.h>
  #include <xen/interface/grant_table.h>
  
++<<<<<<< HEAD
++=======
+ /* Module parameters */
+ #define MAX_QUEUES_DEFAULT 8
+ static unsigned int xennet_max_queues;
+ module_param_named(max_queues, xennet_max_queues, uint, 0644);
+ MODULE_PARM_DESC(max_queues,
+ 		 "Maximum number of queues per virtual interface");
+ 
++>>>>>>> 034702a64a66 (xen/netfront: set default upper limit of tx/rx queues to 8)
  static const struct ethtool_ops xennet_ethtool_ops;
  
  struct netfront_cb {
@@@ -2076,6 -2165,13 +2086,16 @@@ static int __init netif_init(void
  
  	pr_info("Initialising Xen virtual ethernet driver\n");
  
++<<<<<<< HEAD
++=======
+ 	/* Allow as many queues as there are CPUs inut max. 8 if user has not
+ 	 * specified a value.
+ 	 */
+ 	if (xennet_max_queues == 0)
+ 		xennet_max_queues = min_t(unsigned int, MAX_QUEUES_DEFAULT,
+ 					  num_online_cpus());
+ 
++>>>>>>> 034702a64a66 (xen/netfront: set default upper limit of tx/rx queues to 8)
  	return xenbus_register_frontend(&netfront_driver);
  }
  module_init(netif_init);
* Unmerged path drivers/net/xen-netfront.c
