perf/x86/amd/uncore: Update sysfs attributes for Family17h processors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Janakarajan Natarajan <Janakarajan.Natarajan@amd.com>
commit da6adaea2b7ef658c61a557c28508668eac29fe1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/da6adaea.failed

This patch updates the sysfs attributes for AMD Family17h processors. In
Family17h, the event bit position is changed for both the NorthBridge
and Last level cache counters.

The sysfs attributes are assigned based on the family and the type of
the counter.

	Signed-off-by: Janakarajan Natarajan <Janakarajan.Natarajan@amd.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
Link: http://lkml.kernel.org/r/617570ed3634e804991f95db62c3cf3856a9d2a7.1484598705.git.Janakarajan.Natarajan@amd.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit da6adaea2b7ef658c61a557c28508668eac29fe1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/amd/uncore.c
diff --cc arch/x86/events/amd/uncore.c
index 7ed45bf690a2,4d1f7f2d9aff..000000000000
--- a/arch/x86/events/amd/uncore.c
+++ b/arch/x86/events/amd/uncore.c
@@@ -280,10 -297,8 +297,8 @@@ static struct pmu amd_nb_pmu = 
  	.read		= amd_uncore_read,
  };
  
 -static struct pmu amd_llc_pmu = {
 +static struct pmu amd_l2_pmu = {
  	.task_ctx_nr	= perf_invalid_context,
- 	.attr_groups	= amd_uncore_attr_groups,
- 	.name		= "amd_l2",
  	.event_init	= amd_uncore_event_init,
  	.add		= amd_uncore_add,
  	.del		= amd_uncore_del,
@@@ -543,10 -511,51 +558,55 @@@ static int __init amd_uncore_init(void
  	if (boot_cpu_data.x86_vendor != X86_VENDOR_AMD)
  		goto fail_nodev;
  
++<<<<<<< HEAD
 +	if (!cpu_has_topoext)
++=======
+ 	switch(boot_cpu_data.x86) {
+ 		case 23:
+ 			/* Family 17h: */
+ 			num_counters_nb = NUM_COUNTERS_NB;
+ 			num_counters_llc = NUM_COUNTERS_L3;
+ 			/*
+ 			 * For Family17h, the NorthBridge counters are
+ 			 * re-purposed as Data Fabric counters. Also, support is
+ 			 * added for L3 counters. The pmus are exported based on
+ 			 * family as either L2 or L3 and NB or DF.
+ 			 */
+ 			amd_nb_pmu.name = "amd_df";
+ 			amd_llc_pmu.name = "amd_l3";
+ 			format_attr_event_df.show = &event_show_df;
+ 			format_attr_event_l3.show = &event_show_l3;
+ 			break;
+ 		case 22:
+ 			/* Family 16h - may change: */
+ 			num_counters_nb = NUM_COUNTERS_NB;
+ 			num_counters_llc = NUM_COUNTERS_L2;
+ 			amd_nb_pmu.name = "amd_nb";
+ 			amd_llc_pmu.name = "amd_l2";
+ 			format_attr_event_df = format_attr_event;
+ 			format_attr_event_l3 = format_attr_event;
+ 			break;
+ 		default:
+ 			/*
+ 			 * All prior families have the same number of
+ 			 * NorthBridge and Last Level Cache counters
+ 			 */
+ 			num_counters_nb = NUM_COUNTERS_NB;
+ 			num_counters_llc = NUM_COUNTERS_L2;
+ 			amd_nb_pmu.name = "amd_nb";
+ 			amd_llc_pmu.name = "amd_l2";
+ 			format_attr_event_df = format_attr_event;
+ 			format_attr_event_l3 = format_attr_event;
+ 			break;
+ 	}
+ 	amd_nb_pmu.attr_groups = amd_uncore_attr_groups_df;
+ 	amd_llc_pmu.attr_groups = amd_uncore_attr_groups_l3;
+ 
+ 	if (!boot_cpu_has(X86_FEATURE_TOPOEXT))
++>>>>>>> da6adaea2b7e (perf/x86/amd/uncore: Update sysfs attributes for Family17h processors)
  		goto fail_nodev;
  
 -	if (boot_cpu_has(X86_FEATURE_PERFCTR_NB)) {
 +	if (cpu_has_perfctr_nb) {
  		amd_uncore_nb = alloc_percpu(struct amd_uncore *);
  		if (!amd_uncore_nb) {
  			ret = -ENOMEM;
* Unmerged path arch/x86/events/amd/uncore.c
