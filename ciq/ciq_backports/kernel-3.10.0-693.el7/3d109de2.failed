tools/power turbostat: switch to tab delimited output

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [tools] power turbostat: switch to tab delimited output (Prarit Bhargava) [1422076]
Rebuild_FUZZ: 94.00%
commit-author Len Brown <len.brown@intel.com>
commit 3d109de23c93e9196c370fd729fbd7ecf7371701
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3d109de2.failed

Switch to tab-delimited output from fixed-width columns
to make it simpler to import into spreadsheets.

As the fixed width columnns were 8-spaces wide,
the output on the screen should not change.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 3d109de23c93e9196c370fd729fbd7ecf7371701)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 92e6f5e6c99d,be50892f27aa..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -297,50 -323,61 +297,71 @@@ int get_msr(int cpu, off_t offset, unsi
  void print_header(void)
  {
  	if (show_pkg)
- 		outp += sprintf(outp, " Package");
+ 		outp += sprintf(outp, "\tPackage");
  	if (show_core)
- 		outp += sprintf(outp, "    Core");
+ 		outp += sprintf(outp, "\tCore");
  	if (show_cpu)
- 		outp += sprintf(outp, "     CPU");
+ 		outp += sprintf(outp, "\tCPU");
  	if (has_aperf)
- 		outp += sprintf(outp, " Avg_MHz");
+ 		outp += sprintf(outp, "\tAvg_MHz");
  	if (has_aperf)
++<<<<<<< HEAD
 +		outp += sprintf(outp, "   %%Busy");
++=======
+ 		outp += sprintf(outp, "\tBusy%%");
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  	if (has_aperf)
- 		outp += sprintf(outp, " Bzy_MHz");
- 	outp += sprintf(outp, " TSC_MHz");
+ 		outp += sprintf(outp, "\tBzy_MHz");
+ 	outp += sprintf(outp, "\tTSC_MHz");
  
  	if (extra_delta_offset32)
- 		outp += sprintf(outp, "  count 0x%03X", extra_delta_offset32);
+ 		outp += sprintf(outp, "\tcount 0x%03X", extra_delta_offset32);
  	if (extra_delta_offset64)
- 		outp += sprintf(outp, "  COUNT 0x%03X", extra_delta_offset64);
+ 		outp += sprintf(outp, "\tCOUNT 0x%03X", extra_delta_offset64);
  	if (extra_msr_offset32)
- 		outp += sprintf(outp, "   MSR 0x%03X", extra_msr_offset32);
+ 		outp += sprintf(outp, "\tMSR 0x%03X", extra_msr_offset32);
  	if (extra_msr_offset64)
- 		outp += sprintf(outp, "           MSR 0x%03X", extra_msr_offset64);
+ 		outp += sprintf(outp, "\tMSR 0x%03X", extra_msr_offset64);
  
++<<<<<<< HEAD
++=======
+ 	if (!debug)
+ 		goto done;
+ 
+ 	if (do_irq)
+ 		outp += sprintf(outp, "\tIRQ");
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  	if (do_smi)
- 		outp += sprintf(outp, "     SMI");
+ 		outp += sprintf(outp, "\tSMI");
  
  	if (do_nhm_cstates)
- 		outp += sprintf(outp, "  CPU%%c1");
+ 		outp += sprintf(outp, "\tCPU%%c1");
  	if (do_nhm_cstates && !do_slm_cstates && !do_knl_cstates)
- 		outp += sprintf(outp, "  CPU%%c3");
+ 		outp += sprintf(outp, "\tCPU%%c3");
  	if (do_nhm_cstates)
- 		outp += sprintf(outp, "  CPU%%c6");
+ 		outp += sprintf(outp, "\tCPU%%c6");
  	if (do_snb_cstates)
- 		outp += sprintf(outp, "  CPU%%c7");
+ 		outp += sprintf(outp, "\tCPU%%c7");
  
  	if (do_dts)
- 		outp += sprintf(outp, " CoreTmp");
+ 		outp += sprintf(outp, "\tCoreTmp");
  	if (do_ptm)
- 		outp += sprintf(outp, "  PkgTmp");
+ 		outp += sprintf(outp, "\tPkgTmp");
+ 
++<<<<<<< HEAD
++=======
+ 	if (do_gfx_rc6_ms)
+ 		outp += sprintf(outp, "\tGFX%%rc6");
+ 
+ 	if (do_gfx_mhz)
+ 		outp += sprintf(outp, "\tGFXMHz");
  
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  	if (do_skl_residency) {
- 		outp += sprintf(outp, " Totl%%C0");
- 		outp += sprintf(outp, "  Any%%C0");
- 		outp += sprintf(outp, "  GFX%%C0");
- 		outp += sprintf(outp, " CPUGFX%%");
+ 		outp += sprintf(outp, "\tTotl%%C0");
+ 		outp += sprintf(outp, "\tAny%%C0");
+ 		outp += sprintf(outp, "\tGFX%%C0");
+ 		outp += sprintf(outp, "\tCPUGFX%%");
  	}
  
  	if (do_pc2)
@@@ -359,31 -396,32 +380,43 @@@
  
  	if (do_rapl && !rapl_joules) {
  		if (do_rapl & RAPL_PKG)
++<<<<<<< HEAD
 +			outp += sprintf(outp, " PkgWatt");
 +		if (do_rapl & RAPL_CORES_ENERGY_STATUS)
 +			outp += sprintf(outp, " CorWatt");
++=======
+ 			outp += sprintf(outp, "\tPkgWatt");
+ 		if (do_rapl & RAPL_CORES)
+ 			outp += sprintf(outp, "\tCorWatt");
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  		if (do_rapl & RAPL_GFX)
- 			outp += sprintf(outp, " GFXWatt");
+ 			outp += sprintf(outp, "\tGFXWatt");
  		if (do_rapl & RAPL_DRAM)
- 			outp += sprintf(outp, " RAMWatt");
+ 			outp += sprintf(outp, "\tRAMWatt");
  		if (do_rapl & RAPL_PKG_PERF_STATUS)
- 			outp += sprintf(outp, "   PKG_%%");
+ 			outp += sprintf(outp, "\tPKG_%%");
  		if (do_rapl & RAPL_DRAM_PERF_STATUS)
- 			outp += sprintf(outp, "   RAM_%%");
+ 			outp += sprintf(outp, "\tRAM_%%");
  	} else if (do_rapl && rapl_joules) {
  		if (do_rapl & RAPL_PKG)
++<<<<<<< HEAD
 +			outp += sprintf(outp, "   Pkg_J");
 +		if (do_rapl & RAPL_CORES_ENERGY_STATUS)
 +			outp += sprintf(outp, "   Cor_J");
++=======
+ 			outp += sprintf(outp, "\tPkg_J");
+ 		if (do_rapl & RAPL_CORES)
+ 			outp += sprintf(outp, "\tCor_J");
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  		if (do_rapl & RAPL_GFX)
- 			outp += sprintf(outp, "   GFX_J");
+ 			outp += sprintf(outp, "\tGFX_J");
  		if (do_rapl & RAPL_DRAM)
- 			outp += sprintf(outp, "   RAM_J");
+ 			outp += sprintf(outp, "\tRAM_J");
  		if (do_rapl & RAPL_PKG_PERF_STATUS)
- 			outp += sprintf(outp, "   PKG_%%");
+ 			outp += sprintf(outp, "\tPKG_%%");
  		if (do_rapl & RAPL_DRAM_PERF_STATUS)
- 			outp += sprintf(outp, "   RAM_%%");
+ 			outp += sprintf(outp, "\tRAM_%%");
  	}
 -    done:
  	outp += sprintf(outp, "\n");
  }
  
@@@ -499,16 -539,12 +532,22 @@@ int format_counters(struct thread_data 
  
  	/* Avg_MHz */
  	if (has_aperf)
- 		outp += sprintf(outp, "%8.0f",
+ 		outp += sprintf(outp, "\t%.0f",
  			1.0 / units * t->aperf / interval_float);
  
++<<<<<<< HEAD
 +	/* %Busy */
 +	if (has_aperf) {
 +		if (!skip_c0)
 +			outp += sprintf(outp, "%8.2f", 100.0 * t->mperf/t->tsc/tsc_tweak);
 +		else
 +			outp += sprintf(outp, "********");
 +	}
++=======
+ 	/* Busy% */
+ 	if (has_aperf)
+ 		outp += sprintf(outp, "\t%.2f", 100.0 * t->mperf/t->tsc/tsc_tweak);
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  
  	/* Bzy_MHz */
  	if (has_aperf) {
@@@ -535,18 -571,21 +574,33 @@@
  
  	/* MSR */
  	if (extra_msr_offset64)
- 		outp += sprintf(outp, "  0x%016llx", t->extra_msr64);
+ 		outp += sprintf(outp, "\t0x%016llx", t->extra_msr64);
  
++<<<<<<< HEAD
++=======
+ 	if (!debug)
+ 		goto done;
+ 
+ 	/* IRQ */
+ 	if (do_irq)
+ 		outp += sprintf(outp, "\t%d", t->irq_count);
+ 
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  	/* SMI */
  	if (do_smi)
- 		outp += sprintf(outp, "%8d", t->smi_count);
+ 		outp += sprintf(outp, "\t%d", t->smi_count);
  
++<<<<<<< HEAD
 +	if (do_nhm_cstates) {
 +		if (!skip_c1)
 +			outp += sprintf(outp, "%8.2f", 100.0 * t->c1/t->tsc);
 +		else
 +			outp += sprintf(outp, "********");
 +	}
++=======
+ 	if (do_nhm_cstates)
+ 		outp += sprintf(outp, "\t%.2f", 100.0 * t->c1/t->tsc);
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  
  	/* print per-core data only for 1st thread in core */
  	if (!(t->flags & CPU_IS_FIRST_THREAD_IN_CORE))
@@@ -568,14 -607,28 +622,31 @@@
  
  	/* PkgTmp */
  	if (do_ptm)
- 		outp += sprintf(outp, "%8d", p->pkg_temp_c);
+ 		outp += sprintf(outp, "\t%d", p->pkg_temp_c);
+ 
++<<<<<<< HEAD
++=======
+ 	/* GFXrc6 */
+ 	if (do_gfx_rc6_ms) {
+ 		if (p->gfx_rc6_ms == -1) {	/* detect GFX counter reset */
+ 			outp += sprintf(outp, "\t**.**");
+ 		} else {
+ 			outp += sprintf(outp, "\t%.2f",
+ 				p->gfx_rc6_ms / 10.0 / interval_float);
+ 		}
+ 	}
+ 
+ 	/* GFXMHz */
+ 	if (do_gfx_mhz)
+ 		outp += sprintf(outp, "\t%d", p->gfx_mhz);
  
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  	/* Totl%C0, Any%C0 GFX%C0 CPUGFX% */
  	if (do_skl_residency) {
- 		outp += sprintf(outp, "%8.2f", 100.0 * p->pkg_wtd_core_c0/t->tsc);
- 		outp += sprintf(outp, "%8.2f", 100.0 * p->pkg_any_core_c0/t->tsc);
- 		outp += sprintf(outp, "%8.2f", 100.0 * p->pkg_any_gfxe_c0/t->tsc);
- 		outp += sprintf(outp, "%8.2f", 100.0 * p->pkg_both_core_gfxe_c0/t->tsc);
+ 		outp += sprintf(outp, "\t%.2f", 100.0 * p->pkg_wtd_core_c0/t->tsc);
+ 		outp += sprintf(outp, "\t%.2f", 100.0 * p->pkg_any_core_c0/t->tsc);
+ 		outp += sprintf(outp, "\t%.2f", 100.0 * p->pkg_any_gfxe_c0/t->tsc);
+ 		outp += sprintf(outp, "\t%.2f", 100.0 * p->pkg_both_core_gfxe_c0/t->tsc);
  	}
  
  	if (do_pc2)
@@@ -3180,7 -3715,7 +3251,11 @@@ int get_and_dump_counters(void
  }
  
  void print_version() {
++<<<<<<< HEAD
 +	fprintf(stderr, "turbostat version 4.12 5 Apr 2016"
++=======
+ 	fprintf(outf, "turbostat version 4.14 22 Apr 2016"
++>>>>>>> 3d109de23c93 (tools/power turbostat: switch to tab delimited output)
  		" - Len Brown <lenb@kernel.org>\n");
  }
  
* Unmerged path tools/power/x86/turbostat/turbostat.c
