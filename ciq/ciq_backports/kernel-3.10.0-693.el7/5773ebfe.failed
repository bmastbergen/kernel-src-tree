x86/kconfig: Remove misleading note regarding hibernation and KASLR

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] kconfig: Remove misleading note regarding hibernation and KASLR (Baoquan He) [1424943]
Rebuild_FUZZ: 96.92%
commit-author Niklas Cassel <niklas.cassel@axis.com>
commit 5773ebfee729acf93b330664eab4c8d77edc2193
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5773ebfe.failed

There used to be a restriction with KASLR and hibernation, but this is no
longer true, and since commit:

  65fe935dd238 ("x86/KASLR, x86/power: Remove x86 hibernation restrictions")

the parameter "kaslr" does no longer exist.

	Signed-off-by: Niklas Cassel <niklas.cassel@axis.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Niklas Cassel <niklass@axis.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/1486399429-23078-1-git-send-email-niklass@axis.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 5773ebfee729acf93b330664eab4c8d77edc2193)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/Kconfig
diff --cc arch/x86/Kconfig
index 5162fc083bed,4e6dbca03aed..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -1789,12 -1959,47 +1789,51 @@@ config RELOCATABL
  
  	  Note: If CONFIG_RELOCATABLE=y, then the kernel runs from the address
  	  it has been loaded at and the compile time physical address
 -	  (CONFIG_PHYSICAL_START) is used as the minimum location.
 +	  (CONFIG_PHYSICAL_START) is ignored.
  
++<<<<<<< HEAD
 +# Relocation on x86-32 needs some additional build support
++=======
+ config RANDOMIZE_BASE
+ 	bool "Randomize the address of the kernel image (KASLR)"
+ 	depends on RELOCATABLE
+ 	default n
+ 	---help---
+ 	  In support of Kernel Address Space Layout Randomization (KASLR),
+ 	  this randomizes the physical address at which the kernel image
+ 	  is decompressed and the virtual address where the kernel
+ 	  image is mapped, as a security feature that deters exploit
+ 	  attempts relying on knowledge of the location of kernel
+ 	  code internals.
+ 
+ 	  On 64-bit, the kernel physical and virtual addresses are
+ 	  randomized separately. The physical address will be anywhere
+ 	  between 16MB and the top of physical memory (up to 64TB). The
+ 	  virtual address will be randomized from 16MB up to 1GB (9 bits
+ 	  of entropy). Note that this also reduces the memory space
+ 	  available to kernel modules from 1.5GB to 1GB.
+ 
+ 	  On 32-bit, the kernel physical and virtual addresses are
+ 	  randomized together. They will be randomized from 16MB up to
+ 	  512MB (8 bits of entropy).
+ 
+ 	  Entropy is generated using the RDRAND instruction if it is
+ 	  supported. If RDTSC is supported, its value is mixed into
+ 	  the entropy pool as well. If neither RDRAND nor RDTSC are
+ 	  supported, then entropy is read from the i8254 timer. The
+ 	  usable entropy is limited by the kernel being built using
+ 	  2GB addressing, and that PHYSICAL_ALIGN must be at a
+ 	  minimum of 2MB. As a result, only 10 bits of entropy are
+ 	  theoretically possible, but the implementations are further
+ 	  limited due to memory layouts.
+ 
+ 	  If unsure, say N.
+ 
+ # Relocation on x86 needs some additional build support
++>>>>>>> 5773ebfee729 (x86/kconfig: Remove misleading note regarding hibernation and KASLR)
  config X86_NEED_RELOCS
  	def_bool y
 -	depends on RANDOMIZE_BASE || (X86_32 && RELOCATABLE)
 +	depends on X86_32 && RELOCATABLE
  
  config PHYSICAL_ALIGN
  	hex "Alignment value to which kernel should be aligned"
* Unmerged path arch/x86/Kconfig
