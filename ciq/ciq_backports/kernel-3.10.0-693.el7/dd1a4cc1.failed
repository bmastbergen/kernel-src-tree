KVM: split kvm_vcpu_wake_up from kvm_vcpu_kick

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Radim Krčmář <rkrcmar@redhat.com>
commit dd1a4cc1fbdf516bb38ca31b65c76e720d414d0d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/dd1a4cc1.failed

AVIC has a use for kvm_vcpu_wake_up.

	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
	Tested-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
	Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit dd1a4cc1fbdf516bb38ca31b65c76e720d414d0d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/kvm_host.h
#	virt/kvm/kvm_main.c
diff --cc include/linux/kvm_host.h
index b42a4bf67232,b1fa8f11c95b..000000000000
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@@ -642,6 -655,9 +642,12 @@@ int kvm_vcpu_write_guest(struct kvm_vcp
  void kvm_vcpu_mark_page_dirty(struct kvm_vcpu *vcpu, gfn_t gfn);
  
  void kvm_vcpu_block(struct kvm_vcpu *vcpu);
++<<<<<<< HEAD
++=======
+ void kvm_arch_vcpu_blocking(struct kvm_vcpu *vcpu);
+ void kvm_arch_vcpu_unblocking(struct kvm_vcpu *vcpu);
+ void kvm_vcpu_wake_up(struct kvm_vcpu *vcpu);
++>>>>>>> dd1a4cc1fbdf (KVM: split kvm_vcpu_wake_up from kvm_vcpu_kick)
  void kvm_vcpu_kick(struct kvm_vcpu *vcpu);
  int kvm_vcpu_yield_to(struct kvm_vcpu *target);
  void kvm_vcpu_on_spin(struct kvm_vcpu *vcpu);
diff --cc virt/kvm/kvm_main.c
index 72de0bcb7df9,dd4ac9d9e8f5..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -2084,18 -2076,13 +2084,19 @@@ out
  EXPORT_SYMBOL_GPL(kvm_vcpu_block);
  
  #ifndef CONFIG_S390
- /*
-  * Kick a sleeping VCPU, or a guest VCPU in guest mode, into host kernel mode.
-  */
- void kvm_vcpu_kick(struct kvm_vcpu *vcpu)
+ void kvm_vcpu_wake_up(struct kvm_vcpu *vcpu)
  {
++<<<<<<< HEAD
 +	int me;
 +	int cpu = vcpu->cpu;
 +	wait_queue_head_t *wqp;
++=======
+ 	struct swait_queue_head *wqp;
++>>>>>>> dd1a4cc1fbdf (KVM: split kvm_vcpu_wake_up from kvm_vcpu_kick)
  
  	wqp = kvm_arch_vcpu_wq(vcpu);
 -	if (swait_active(wqp)) {
 -		swake_up(wqp);
 +	if (waitqueue_active(wqp)) {
 +		wake_up_interruptible(wqp);
  		++vcpu->stat.halt_wakeup;
  	}
  
* Unmerged path include/linux/kvm_host.h
* Unmerged path virt/kvm/kvm_main.c
