tools/power turbostat: show GFXMHz

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [tools] power turbostat: show GFXMHz (Prarit Bhargava) [1422076]
Rebuild_FUZZ: 90.32%
commit-author Len Brown <len.brown@intel.com>
commit 27d47356b6dfa92042a17a0b474f08910d4c8e8f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/27d47356.failed

Under the column "GFXMHz", show a snapshot of this attribute:
/sys/class/graphics/fb0/device/drm/card0/gt_cur_freq_mhz

This is an instantaneous snapshot of what sysfs presents
at the end of the measurement interval.  turbostat does
not average or otherwise perform any math on this value.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 27d47356b6dfa92042a17a0b474f08910d4c8e8f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index b938c3391c64,d599f9131844..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -290,8 -314,8 +293,13 @@@ int get_msr(int cpu, off_t offset, unsi
  /*
   * Example Format w/ field column widths:
   *
++<<<<<<< HEAD
 + *  Package    Core     CPU Avg_MHz Bzy_MHz TSC_MHz     SMI   %Busy CPU_%c1 CPU_%c3 CPU_%c6 CPU_%c7 CoreTmp  PkgTmp Pkg%pc2 Pkg%pc3 Pkg%pc6 Pkg%pc7 PkgWatt CorWatt GFXWatt
 + * 123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678
++=======
+  *  Package    Core     CPU Avg_MHz Bzy_MHz TSC_MHz     IRQ   SMI   Busy% CPU_%c1 CPU_%c3 CPU_%c6 CPU_%c7 CoreTmp  PkgTmp  GFXMHz Pkg%pc2 Pkg%pc3 Pkg%pc6 Pkg%pc7 PkgWatt CorWatt GFXWatt
+  * 12345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678
++>>>>>>> 27d47356b6df (tools/power turbostat: show GFXMHz)
   */
  
  void print_header(void)
@@@ -1692,6 -1781,110 +1716,113 @@@ int mark_cpu_present(int cpu
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * snapshot_proc_interrupts()
+  *
+  * read and record summary of /proc/interrupts
+  *
+  * return 1 if config change requires a restart, else return 0
+  */
+ int snapshot_proc_interrupts(void)
+ {
+ 	static FILE *fp;
+ 	int column, retval;
+ 
+ 	if (fp == NULL)
+ 		fp = fopen_or_die("/proc/interrupts", "r");
+ 	else
+ 		rewind(fp);
+ 
+ 	/* read 1st line of /proc/interrupts to get cpu* name for each column */
+ 	for (column = 0; column < topo.num_cpus; ++column) {
+ 		int cpu_number;
+ 
+ 		retval = fscanf(fp, " CPU%d", &cpu_number);
+ 		if (retval != 1)
+ 			break;
+ 
+ 		if (cpu_number > topo.max_cpu_num) {
+ 			warn("/proc/interrupts: cpu%d: > %d", cpu_number, topo.max_cpu_num);
+ 			return 1;
+ 		}
+ 
+ 		irq_column_2_cpu[column] = cpu_number;
+ 		irqs_per_cpu[cpu_number] = 0;
+ 	}
+ 
+ 	/* read /proc/interrupt count lines and sum up irqs per cpu */
+ 	while (1) {
+ 		int column;
+ 		char buf[64];
+ 
+ 		retval = fscanf(fp, " %s:", buf);	/* flush irq# "N:" */
+ 		if (retval != 1)
+ 			break;
+ 
+ 		/* read the count per cpu */
+ 		for (column = 0; column < topo.num_cpus; ++column) {
+ 
+ 			int cpu_number, irq_count;
+ 
+ 			retval = fscanf(fp, " %d", &irq_count);
+ 			if (retval != 1)
+ 				break;
+ 
+ 			cpu_number = irq_column_2_cpu[column];
+ 			irqs_per_cpu[cpu_number] += irq_count;
+ 
+ 		}
+ 
+ 		while (getc(fp) != '\n')
+ 			;	/* flush interrupt description */
+ 
+ 	}
+ 	return 0;
+ }
+ /*
+  * snapshot_gfx_mhz()
+  *
+  * record snapshot of
+  * /sys/class/graphics/fb0/device/drm/card0/gt_cur_freq_mhz
+  *
+  * return 1 if config change requires a restart, else return 0
+  */
+ int snapshot_gfx_mhz(void)
+ {
+ 	static FILE *fp;
+ 	int retval;
+ 
+ 	if (fp == NULL)
+ 		fp = fopen_or_die("/sys/class/graphics/fb0/device/drm/card0/gt_cur_freq_mhz", "r");
+ 	else
+ 		rewind(fp);
+ 
+ 	retval = fscanf(fp, "%d", &gfx_cur_mhz);
+ 	if (retval != 1)
+ 		err(1, "GFX MHz");
+ 
+ 	return 0;
+ }
+ 
+ /*
+  * snapshot /proc and /sys files
+  *
+  * return 1 if configuration restart needed, else return 0
+  */
+ int snapshot_proc_sysfs_files(void)
+ {
+ 	if (snapshot_proc_interrupts())
+ 		return 1;
+ 
+ 	if (do_gfx_mhz)
+ 		snapshot_gfx_mhz();
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 27d47356b6df (tools/power turbostat: show GFXMHz)
  void turbostat_loop()
  {
  	int retval;
* Unmerged path tools/power/x86/turbostat/turbostat.c
