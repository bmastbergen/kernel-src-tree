perf/x86/intel/pt: Move transaction start/stop to PMU start/stop callbacks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Alexander Shishkin <alexander.shishkin@linux.intel.com>
commit 66d219014a4ee47ad4ca2b9db5fe6547353e2a56
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/66d21901.failed

As per AUX buffer management requirement, AUX output has to happen between
pmu::start and pmu::stop calls so that perf_event_stop() actually stops it
and therefore perf can free the AUX data after it has called pmu::stop.

This patch moves perf_aux_output_{begin,end} from pt_event_{add,del} to
pt_event_{start,stop}. As a bonus, we get rid of pt_buffer_is_full(),
which is already taken care of by perf_aux_output_begin() anyway.

	Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
	Cc: vince@deater.net
Link: http://lkml.kernel.org/r/1457098969-21595-5-git-send-email-alexander.shishkin@linux.intel.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 66d219014a4ee47ad4ca2b9db5fe6547353e2a56)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/intel/pt.c
diff --cc arch/x86/events/intel/pt.c
index 7377814de30b,127f58c17976..000000000000
--- a/arch/x86/events/intel/pt.c
+++ b/arch/x86/events/intel/pt.c
@@@ -1040,15 -969,18 +1020,27 @@@ EXPORT_SYMBOL_GPL(intel_pt_handle_vmx)
  
  static void pt_event_start(struct perf_event *event, int mode)
  {
+ 	struct hw_perf_event *hwc = &event->hw;
  	struct pt *pt = this_cpu_ptr(&pt_ctx);
- 	struct pt_buffer *buf = perf_get_aux(&pt->handle);
+ 	struct pt_buffer *buf;
  
++<<<<<<< HEAD
 +	if (READ_ONCE(pt->vmx_on))
 +		return;
 +
 +	if (!buf || pt_buffer_is_full(buf, pt)) {
 +		event->hw.state = PERF_HES_STOPPED;
 +		return;
++=======
+ 	buf = perf_aux_output_begin(&pt->handle, event);
+ 	if (!buf)
+ 		goto fail_stop;
+ 
+ 	pt_buffer_reset_offsets(buf, pt->handle.head);
+ 	if (!buf->snapshot) {
+ 		if (pt_buffer_reset_markers(buf, &pt->handle))
+ 			goto fail_end_stop;
++>>>>>>> 66d219014a4e (perf/x86/intel/pt: Move transaction start/stop to PMU start/stop callbacks)
  	}
  
  	ACCESS_ONCE(pt->handle_nmi) = 1;
* Unmerged path arch/x86/events/intel/pt.c
