nfp: report NSP ABI version in ethtool FW version

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit bd5ca062ba7d24bcc28f637aa90056f642a35dfa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/bd5ca062.failed

ethtool_drvinfo->fw_version can cantain multiple FW strings.
We already report NFD ABI version there, add NSP ABI version
if available (i.e. on PF) with 'sp:' prefix.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bd5ca062ba7d24bcc28f637aa90056f642a35dfa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net.h
#	drivers/net/ethernet/netronome/nfp/nfp_net_main.c
#	drivers/net/ethernet/netronome/nfp/nfpcore/nfp.h
#	drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net.h
index aecadca0b473,5a0fc09dd6ea..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net.h
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net.h
@@@ -102,7 -106,12 +102,8 @@@
  /* Offload definitions */
  #define NFP_NET_N_VXLAN_PORTS	(NFP_NET_CFG_VXLAN_SZ / sizeof(__be16))
  
 -#define NFP_NET_RX_BUF_HEADROOM	(NET_SKB_PAD + NET_IP_ALIGN)
 -#define NFP_NET_RX_BUF_NON_DATA	(NFP_NET_RX_BUF_HEADROOM +		\
 -				 SKB_DATA_ALIGN(sizeof(struct skb_shared_info)))
 -
  /* Forward declarations */
+ struct nfp_cpp;
  struct nfp_net;
  struct nfp_net_r_vector;
  
@@@ -467,6 -492,8 +468,11 @@@ static inline bool nfp_net_fw_ver_eq(st
   * @tx_bar:             Pointer to mapped TX queues
   * @rx_bar:             Pointer to mapped FL/RX queues
   * @debugfs_dir:	Device directory in debugfs
++<<<<<<< HEAD
++=======
+  * @port_list:		Entry on device port list
+  * @cpp:		CPP device handle if available
++>>>>>>> bd5ca062ba7d (nfp: report NSP ABI version in ethtool FW version)
   */
  struct nfp_net {
  	struct pci_dev *pdev;
@@@ -558,6 -579,17 +564,20 @@@
  	u8 __iomem *rx_bar;
  
  	struct dentry *debugfs_dir;
++<<<<<<< HEAD
++=======
+ 
+ 	struct list_head port_list;
+ 
+ 	struct nfp_cpp *cpp;
+ };
+ 
+ struct nfp_net_ring_set {
+ 	unsigned int n_rings;
+ 	unsigned int mtu;
+ 	unsigned int dcnt;
+ 	void *rings;
++>>>>>>> bd5ca062ba7d (nfp: report NSP ABI version in ethtool FW version)
  };
  
  /* Functions to read/write from/to a BAR
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_main.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfpcore/nfp.h
* Unmerged path drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net.h
diff --git a/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c b/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
index 2ec44232cd0b..7507e51339b0 100644
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
@@ -47,6 +47,7 @@
 #include <linux/pci.h>
 #include <linux/ethtool.h>
 
+#include "nfpcore/nfp.h"
 #include "nfp_net_ctrl.h"
 #include "nfp_net.h"
 
@@ -115,19 +116,39 @@ static const struct _nfp_net_et_stats nfp_net_et_stats[] = {
 #define NN_ET_STATS_LEN (NN_ET_GLOBAL_STATS_LEN + NN_ET_RVEC_GATHER_STATS + \
 			 NN_ET_RVEC_STATS_LEN + NN_ET_QUEUE_STATS_LEN)
 
+static void nfp_net_get_nspinfo(struct nfp_net *nn, char *version)
+{
+	struct nfp_nsp *nsp;
+
+	if (!nn->cpp)
+		return;
+
+	nsp = nfp_nsp_open(nn->cpp);
+	if (IS_ERR(nsp))
+		return;
+
+	snprintf(version, ETHTOOL_FWVERS_LEN, "sp:%hu.%hu",
+		 nfp_nsp_get_abi_ver_major(nsp),
+		 nfp_nsp_get_abi_ver_minor(nsp));
+
+	nfp_nsp_close(nsp);
+}
+
 static void nfp_net_get_drvinfo(struct net_device *netdev,
 				struct ethtool_drvinfo *drvinfo)
 {
+	char nsp_version[ETHTOOL_FWVERS_LEN] = {};
 	struct nfp_net *nn = netdev_priv(netdev);
 
 	strlcpy(drvinfo->driver, nfp_net_driver_name, sizeof(drvinfo->driver));
 	strlcpy(drvinfo->version, nfp_net_driver_version,
 		sizeof(drvinfo->version));
 
+	nfp_net_get_nspinfo(nn, nsp_version);
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
-		 "%d.%d.%d.%d",
+		 "%d.%d.%d.%d %s",
 		 nn->fw_ver.resv, nn->fw_ver.class,
-		 nn->fw_ver.major, nn->fw_ver.minor);
+		 nn->fw_ver.major, nn->fw_ver.minor, nsp_version);
 	strlcpy(drvinfo->bus_info, pci_name(nn->pdev),
 		sizeof(drvinfo->bus_info));
 
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_main.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfpcore/nfp.h
* Unmerged path drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp.c
