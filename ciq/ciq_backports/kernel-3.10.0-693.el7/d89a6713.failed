crypto: drbg - do not call drbg_instantiate in healt test

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [crypto] drbg - do not call drbg_instantiate in healt test (Herbert Xu) [1459191]
Rebuild_FUZZ: 92.45%
commit-author Stephan Mueller <smueller@chronox.de>
commit d89a67134fcc7e863530624fe5a88dde0159cfb8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d89a6713.failed

When calling the DRBG health test in FIPS mode, the Jitter RNG is not
yet present in the kernel crypto API which will cause the instantiation
to fail and thus the health test to fail.

As the health tests cover the enforcement of various thresholds, invoke
the functions that are supposed to enforce the thresholds directly.

This patch also saves precious seed.

	Reported-by: Tapas Sarangi <TSarangi@trustwave.com>
	Signed-off-by: Stephan Mueller <smueller@chronox.de>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit d89a67134fcc7e863530624fe5a88dde0159cfb8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	crypto/drbg.c
diff --cc crypto/drbg.c
index a5113bed0737,edf3ce04e87f..000000000000
--- a/crypto/drbg.c
+++ b/crypto/drbg.c
@@@ -1859,6 -1916,10 +1859,13 @@@ static inline int __init drbg_healthche
  	if (!drbg)
  		return -ENOMEM;
  
++<<<<<<< HEAD
++=======
+ 	mutex_init(&drbg->drbg_mutex);
+ 	drbg->core = &drbg_cores[coreref];
+ 	drbg->reseed_threshold = drbg_max_requests(drbg);
+ 
++>>>>>>> d89a67134fcc (crypto: drbg - do not call drbg_instantiate in healt test)
  	/*
  	 * if the following tests fail, it is likely that there is a buffer
  	 * overflow as buf is much smaller than the requested or provided
@@@ -1882,30 -1937,21 +1883,27 @@@
  	/* overflow max_bits */
  	len = drbg_generate(drbg, buf, (max_request_bytes + 1), NULL);
  	BUG_ON(0 < len);
- 	drbg_uninstantiate(drbg);
  
  	/* overflow max addtllen with personalization string */
- 	ret = drbg_instantiate(drbg, &addtl, coreref, pr);
+ 	ret = drbg_seed(drbg, &addtl, false);
  	BUG_ON(0 == ret);
 +	/* test uninstantated DRBG */
 +	len = drbg_generate(drbg, buf, (max_request_bytes + 1), NULL);
 +	BUG_ON(0 < len);
  	/* all tests passed */
  	rc = 0;
  
  	pr_devel("DRBG: Sanity tests for failure code paths successfully "
  		 "completed\n");
  
- 	drbg_uninstantiate(drbg);
- outbuf:
- 	kzfree(drbg);
+ 	kfree(drbg);
  	return rc;
 +#else /* CONFIG_CRYPTO_FIPS */
 +	return 0;
 +#endif /* CONFIG_CRYPTO_FIPS */
  }
  
 -static struct rng_alg drbg_algs[22];
 +static struct crypto_alg drbg_algs[22];
  
  /*
   * Fill the array drbg_algs used to register the different DRBGs
* Unmerged path crypto/drbg.c
