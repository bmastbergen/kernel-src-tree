sched: cls_bpf: fix panic on filter replace

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit f6bfc46da6292b630ba389592123f0dd02066172
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f6bfc46d.failed

The following test case causes a NULL pointer dereference in cls_bpf:

  FOO="1,6 0 0 4294967295,"
  tc filter add dev foo parent 1: bpf bytecode "$FOO" flowid 1:1 action ok
  tc filter replace dev foo parent 1: pref 49152 handle 0x1 \
            bpf bytecode "$FOO" flowid 1:1 action drop

The problem is that commit 1f947bf151e9 ("net: sched: rcu'ify cls_bpf")
accidentally swapped the arguments of list_replace_rcu(), the old
element needs to be the first argument and the new element the second.

Fixes: 1f947bf151e9 ("net: sched: rcu'ify cls_bpf")
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: John Fastabend <john.r.fastabend@intel.com>
	Acked-by: Alexei Starovoitov <ast@plumgrid.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f6bfc46da6292b630ba389592123f0dd02066172)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_bpf.c
diff --cc net/sched/cls_bpf.c
index 05dcfa2963bb,e5168f8b9640..000000000000
--- a/net/sched/cls_bpf.c
+++ b/net/sched/cls_bpf.c
@@@ -281,16 -377,18 +281,26 @@@ static int cls_bpf_change(struct net *n
  	if (ret < 0)
  		goto errout;
  
++<<<<<<< HEAD
 +	tcf_tree_lock(tp);
 +	list_add(&prog->link, &head->plist);
 +	tcf_tree_unlock(tp);
++=======
+ 	if (oldprog) {
+ 		list_replace_rcu(&oldprog->link, &prog->link);
+ 		tcf_unbind_filter(tp, &oldprog->res);
+ 		call_rcu(&oldprog->rcu, __cls_bpf_delete_prog);
+ 	} else {
+ 		list_add_rcu(&prog->link, &head->plist);
+ 	}
++>>>>>>> f6bfc46da629 (sched: cls_bpf: fix panic on filter replace)
  
  	*arg = (unsigned long) prog;
 +
  	return 0;
  errout:
 -	kfree(prog);
 +	if (*arg == 0UL && prog)
 +		kfree(prog);
  
  	return ret;
  }
* Unmerged path net/sched/cls_bpf.c
