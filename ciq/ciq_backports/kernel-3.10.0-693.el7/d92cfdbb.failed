bridge: only provide proxy ARP when CONFIG_INET is enabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Arnd Bergmann <arnd@arndb.de>
commit d92cfdbbeaefb467de4fac98679fa6c33461d250
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d92cfdbb.failed

When IPV4 support is disabled, we cannot call arp_send from
the bridge code, which would result in a kernel link error:

net/built-in.o: In function `br_handle_frame_finish':
:(.text+0x59914): undefined reference to `arp_send'
:(.text+0x59a50): undefined reference to `arp_tbl'

This makes the newly added proxy ARP support in the bridge
code depend on the CONFIG_INET symbol and lets the compiler
optimize the code out to avoid the link error.

	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
Fixes: 958501163ddd ("bridge: Add support for IEEE 802.11 Proxy ARP")
	Cc: Kyeyoon Park <kyeyoonp@codeaurora.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d92cfdbbeaefb467de4fac98679fa6c33461d250)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_input.c
diff --cc net/bridge/br_input.c
index ddc6cbe6269c,e2aa7be3a847..000000000000
--- a/net/bridge/br_input.c
+++ b/net/bridge/br_input.c
@@@ -99,6 -154,11 +99,14 @@@ int br_handle_frame_finish(struct sock 
  	dst = NULL;
  
  	if (is_broadcast_ether_addr(dest)) {
++<<<<<<< HEAD
++=======
+ 		if (IS_ENABLED(CONFIG_INET) &&
+ 		    p->flags & BR_PROXYARP &&
+ 		    skb->protocol == htons(ETH_P_ARP))
+ 			br_do_proxy_arp(skb, br, vid);
+ 
++>>>>>>> d92cfdbbeaef (bridge: only provide proxy ARP when CONFIG_INET is enabled)
  		skb2 = skb;
  		unicast = false;
  	} else if (is_multicast_ether_addr(dest)) {
* Unmerged path net/bridge/br_input.c
