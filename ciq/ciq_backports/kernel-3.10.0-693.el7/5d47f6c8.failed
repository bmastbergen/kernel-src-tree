net/mlx5: Don't save PCI state when PCI error is detected

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5: Don't save PCI state when PCI error is detected (Jonathan Toppins) [1448565]
Rebuild_FUZZ: 96.36%
commit-author Daniel Jurgens <danielj@mellanox.com>
commit 5d47f6c89d568ab61712d8c40676fbb020b68752
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5d47f6c8.failed

When a PCI error is detected the PCI state could be corrupt, don't save
it in that flow. Save the state after initialization. After restoring the
PCI state during slot reset save it again, restoring the state destroys
the previously saved state info.

Fixes: 05ac2c0b7438 ('net/mlx5: Fix race between PCI error handlers and
health work')
	Signed-off-by: Daniel Jurgens <danielj@mellanox.com>

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5d47f6c89d568ab61712d8c40676fbb020b68752)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/main.c
index 016601cbba64,e2bd600d19de..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@@ -1397,9 -1346,19 +1397,19 @@@ static int init_one(struct pci_dev *pde
  		goto clean_health;
  	}
  
++<<<<<<< HEAD
++=======
+ 	request_module_nowait(MLX5_IB_MOD);
+ 
+ 	err = devlink_register(devlink, &pdev->dev);
+ 	if (err)
+ 		goto clean_load;
+ 
+ 	pci_save_state(pdev);
++>>>>>>> 5d47f6c89d56 (net/mlx5: Don't save PCI state when PCI error is detected)
  	return 0;
  
 -clean_load:
 -	mlx5_unload_one(dev, priv, true);
  clean_health:
 -	mlx5_pagealloc_cleanup(dev);
  	mlx5_health_cleanup(dev);
  close_pci:
  	mlx5_pci_close(dev, priv);
@@@ -1433,10 -1405,15 +1443,20 @@@ static pci_ers_result_t mlx5_pci_err_de
  	struct mlx5_priv *priv = &dev->priv;
  
  	dev_info(&pdev->dev, "%s was called\n", __func__);
 -
  	mlx5_enter_error_state(dev);
++<<<<<<< HEAD
 +	mlx5_unload_one(dev, priv);
 +	pci_save_state(pdev);
 +	mlx5_pci_disable_device(dev);
++=======
+ 	mlx5_unload_one(dev, priv, false);
+ 	/* In case of kernel call drain the health wq */
+ 	if (state) {
+ 		mlx5_drain_health_wq(dev);
+ 		mlx5_pci_disable_device(dev);
+ 	}
+ 
++>>>>>>> 5d47f6c89d56 (net/mlx5: Don't save PCI state when PCI error is detected)
  	return state == pci_channel_io_perm_failure ?
  		PCI_ERS_RESULT_DISCONNECT : PCI_ERS_RESULT_NEED_RESET;
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/main.c
