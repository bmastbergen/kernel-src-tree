qed: Correct MSI-x for storage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Mintz, Yuval <Yuval.Mintz@cavium.com>
commit 2f78227874754b1e10cd348fd6e7693b0dabb3f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2f782278.failed

When qedr is enabled, qed would try dividing the msi-x vectors between
L2 and RoCE, starting with L2 and providing it with sufficient vectors
for its queues.

Problem is qed would also do that for storage partitions, and as those
don't need queues it would lead qed to award those partitions with 0
msi-x vectors, causing them to believe theye're using INTa and
preventing them from operating.

Fixes: 51ff17251c9c ("qed: Add support for RoCE hw init")
	Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2f78227874754b1e10cd348fd6e7693b0dabb3f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qed/qed_main.c
diff --cc drivers/net/ethernet/qlogic/qed/qed_main.c
index 82cda70ecd7a,aab89ded3aa4..000000000000
--- a/drivers/net/ethernet/qlogic/qed/qed_main.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_main.c
@@@ -706,8 -745,10 +706,15 @@@ static int qed_slowpath_setup_int(struc
  	cdev->int_params.fp_msix_cnt = cdev->int_params.out.num_vectors -
  				       cdev->num_hwfns;
  
++<<<<<<< HEAD
 +#if IS_ENABLED(CONFIG_INFINIBAND_QEDR)
 +	num_l2_queues = 0;
++=======
+ 	if (!IS_ENABLED(CONFIG_QED_RDMA) ||
+ 	    QED_LEADING_HWFN(cdev)->hw_info.personality != QED_PCI_ETH_ROCE)
+ 		return 0;
+ 
++>>>>>>> 2f7822787475 (qed: Correct MSI-x for storage)
  	for_each_hwfn(cdev, i)
  		num_l2_queues += FEAT_NUM(&cdev->hwfns[i], QED_PF_L2_QUE);
  
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_main.c
