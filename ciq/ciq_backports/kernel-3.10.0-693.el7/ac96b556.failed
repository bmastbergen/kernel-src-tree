io-mapping.h: s/PAGE_KERNEL_IO/PAGE_KERNEL/

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit ac96b5566926af83463ddcf4655856033c092f26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/ac96b556.failed

PAGE_KERNEL_IO is an x86-ism. Though it is used to define the pgprot_t
used for the iomapped region, it itself is just PAGE_KERNEL. On all
other arches, PAGE_KERNEL_IO is undefined so in a general header we must
refrain from using it.

v2: include pgtable for pgprot_combine()

	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
Fixes: cafaf14a5d8f ("io-mapping: Always create a struct to hold metadata about the io-mapping")
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
	Cc: linux-mm@kvack.org
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Link: http://patchwork.freedesktop.org/patch/msgid/20160823155024.22379-1-chris@chris-wilson.co.uk
(cherry picked from commit ac96b5566926af83463ddcf4655856033c092f26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/io-mapping.h
diff --cc include/linux/io-mapping.h
index 657fab4efab3,a87dd7fffc0a..000000000000
--- a/include/linux/io-mapping.h
+++ b/include/linux/io-mapping.h
@@@ -119,15 -112,20 +119,28 @@@ io_mapping_unmap(void __iomem *vaddr
  #else
  
  #include <linux/uaccess.h>
++<<<<<<< HEAD
 +
 +/* this struct isn't actually defined anywhere */
 +struct io_mapping;
++=======
+ #include <asm/pgtable.h>
++>>>>>>> ac96b5566926 (io-mapping.h: s/PAGE_KERNEL_IO/PAGE_KERNEL/)
  
  /* Create the io_mapping object*/
  static inline struct io_mapping *
 -io_mapping_init_wc(struct io_mapping *iomap,
 -		   resource_size_t base,
 -		   unsigned long size)
 +io_mapping_create_wc(resource_size_t base, unsigned long size)
  {
++<<<<<<< HEAD
 +	return (struct io_mapping __force *) ioremap_wc(base, size);
++=======
+ 	iomap->base = base;
+ 	iomap->size = size;
+ 	iomap->iomem = ioremap_wc(base, size);
+ 	iomap->prot = pgprot_writecombine(PAGE_KERNEL);
+ 
+ 	return iomap;
++>>>>>>> ac96b5566926 (io-mapping.h: s/PAGE_KERNEL_IO/PAGE_KERNEL/)
  }
  
  static inline void
* Unmerged path include/linux/io-mapping.h
