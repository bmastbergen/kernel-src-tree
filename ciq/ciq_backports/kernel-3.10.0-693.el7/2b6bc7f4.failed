ovl: lookup: do getxattr with mounter's permission

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 2b6bc7f48d34a6043915beddbf53b981603737c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2b6bc7f4.failed

The getxattr() in ovl_is_opaquedir() was missed when converting all
operations on underlying fs to be done under mounter's permission.

This patch fixes this by moving the ovl_override_creds()/revert_creds() out
from ovl_lookup_real() to ovl_lookup().

Also convert to using vfs_getxattr() instead of directly calling
i_op->getxattr().

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 2b6bc7f48d34a6043915beddbf53b981603737c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/super.c
diff --cc fs/overlayfs/super.c
index 618b25c3dfcd,8ccebaf64c5b..000000000000
--- a/fs/overlayfs/super.c
+++ b/fs/overlayfs/super.c
@@@ -274,12 -273,11 +274,15 @@@ static bool ovl_is_opaquedir(struct den
  {
  	int res;
  	char val;
- 	struct inode *inode = dentry->d_inode;
  
- 	if (!S_ISDIR(inode->i_mode) || !inode->i_op->getxattr)
+ 	if (!d_is_dir(dentry))
  		return false;
  
++<<<<<<< HEAD
 +	res = inode->i_op->getxattr(dentry, OVL_XATTR_OPAQUE, &val, 1);
++=======
+ 	res = vfs_getxattr(dentry, OVL_XATTR_OPAQUE, &val, 1);
++>>>>>>> 2b6bc7f48d34 (ovl: lookup: do getxattr with mounter's permission)
  	if (res == 1 && val == 'y')
  		return true;
  
* Unmerged path fs/overlayfs/super.c
