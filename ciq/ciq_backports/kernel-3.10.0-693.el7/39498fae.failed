nvmet_fc: add target feature flags for upcall isr contexts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [nvme] revert "nvmet_fc: add target feature flags for upcall isr contexts" (Ewan Milne) [1444045]
Rebuild_FUZZ: 92.80%
commit-author James Smart <jsmart2021@gmail.com>
commit 39498faef7c02f9f6de4060ccdc7e8975a6e690b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/39498fae.failed

Two new feature flags were added to control whether upcalls to the
transport result in context switches or stay in the calling context.

NVMET_FCTGTFEAT_CMD_IN_ISR:
  By default, if the flag is not set, the transport assumes the
  lldd is in a non-isr context and in the cpu context it should be
  for the io queue. As such, the cmd handler is called directly in the
  calling context.
  If the flag is set, indicating the upcall is an isr context, the
  transport mandates a transition to a workqueue. The workqueue assigned
  to the queue is used for the context.
NVMET_FCTGTFEAT_OPDONE_IN_ISR
  By default, if the flag is not set, the transport assumes the
  lldd is in a non-isr context and in the cpu context it should be
  for the io queue. As such, the fcp operation done callback is called
  directly in the calling context.
  If the flag is set, indicating the upcall is an isr context, the
  transport mandates a transition to a workqueue. The workqueue assigned
  to the queue is used for the context.

Updated lpfc for flags

	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit 39498faef7c02f9f6de4060ccdc7e8975a6e690b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/fc.c
#	drivers/nvme/target/fcloop.c
#	drivers/scsi/lpfc/lpfc_nvmet.c
#	include/linux/nvme-fc-driver.h
* Unmerged path drivers/nvme/target/fc.c
* Unmerged path drivers/nvme/target/fcloop.c
* Unmerged path drivers/scsi/lpfc/lpfc_nvmet.c
* Unmerged path include/linux/nvme-fc-driver.h
* Unmerged path drivers/nvme/target/fc.c
* Unmerged path drivers/nvme/target/fcloop.c
* Unmerged path drivers/scsi/lpfc/lpfc_nvmet.c
* Unmerged path include/linux/nvme-fc-driver.h
