x86/KASLR: Warn when KASLR is disabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] kaslr: Warn when KASLR is disabled (Baoquan He) [1290840]
Rebuild_FUZZ: 94.44%
commit-author Kees Cook <keescook@chromium.org>
commit 0f8ede1b8c4cb845c53072d7e49d71ca24a61ced
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0f8ede1b.failed

If KASLR is built in but not available at run-time (either due to the
current conflict with hibernation, command-line request, or e820 parsing
failures), announce the state explicitly. To support this, a new "warn"
function is created, based on the existing "error" function.

	Suggested-by: Ingo Molnar <mingo@kernel.org>
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: H.J. Lu <hjl.tools@gmail.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Yinghai Lu <yinghai@kernel.org>
Link: http://lkml.kernel.org/r/1461185746-8017-6-git-send-email-keescook@chromium.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 0f8ede1b8c4cb845c53072d7e49d71ca24a61ced)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/kaslr.c
#	arch/x86/boot/compressed/misc.c
#	arch/x86/boot/compressed/misc.h
diff --cc arch/x86/boot/compressed/misc.c
index e4ff0fcc41c6,c57d785ff955..000000000000
--- a/arch/x86/boot/compressed/misc.c
+++ b/arch/x86/boot/compressed/misc.c
@@@ -222,11 -149,34 +222,38 @@@ void __putstr(const char *s
  	outb(0xff & (pos >> 1), vidport+1);
  }
  
++<<<<<<< HEAD
 +static void error(char *x)
++=======
+ void __puthex(unsigned long value)
  {
+ 	char alpha[2] = "0";
+ 	int bits;
+ 
+ 	for (bits = sizeof(value) * 8 - 4; bits >= 0; bits -= 4) {
+ 		unsigned long digit = (value >> bits) & 0xf;
+ 
+ 		if (digit < 0xA)
+ 			alpha[0] = '0' + digit;
+ 		else
+ 			alpha[0] = 'a' + (digit - 0xA);
+ 
+ 		__putstr(alpha);
+ 	}
+ }
+ 
+ void warn(char *m)
++>>>>>>> 0f8ede1b8c4c (x86/KASLR: Warn when KASLR is disabled)
+ {
+ 	error_putstr("\n\n");
+ 	error_putstr(m);
  	error_putstr("\n\n");
- 	error_putstr(x);
- 	error_putstr("\n\n -- System halted");
+ }
+ 
+ static void error(char *m)
+ {
+ 	warn(m);
+ 	error_putstr(" -- System halted");
  
  	while (1)
  		asm("hlt");
diff --cc arch/x86/boot/compressed/misc.h
index 674019d8e235,e75f6cf9caaf..000000000000
--- a/arch/x86/boot/compressed/misc.h
+++ b/arch/x86/boot/compressed/misc.h
@@@ -23,10 -23,21 +23,15 @@@
  #define BOOT_BOOT_H
  #include "../ctype.h"
  
 -#ifdef CONFIG_X86_64
 -#define memptr long
 -#else
 -#define memptr unsigned
 -#endif
 -
  /* misc.c */
 -extern memptr free_mem_ptr;
 -extern memptr free_mem_end_ptr;
 -extern struct boot_params *boot_params;
 +extern struct boot_params *real_mode;		/* Pointer to real-mode data */
  void __putstr(const char *s);
++<<<<<<< HEAD
++=======
+ void __puthex(unsigned long value);
+ void warn(char *m);
++>>>>>>> 0f8ede1b8c4c (x86/KASLR: Warn when KASLR is disabled)
  #define error_putstr(__x)  __putstr(__x)
 -#define error_puthex(__x)  __puthex(__x)
  
  #ifdef CONFIG_X86_VERBOSE_BOOTUP
  
* Unmerged path arch/x86/boot/compressed/kaslr.c
* Unmerged path arch/x86/boot/compressed/kaslr.c
* Unmerged path arch/x86/boot/compressed/misc.c
* Unmerged path arch/x86/boot/compressed/misc.h
