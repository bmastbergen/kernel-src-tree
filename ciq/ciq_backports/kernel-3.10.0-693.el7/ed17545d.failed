GFS2: Allow glocks to be unlocked after withdraw

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit ed17545d01e4a40086f1622c88ce64cc0241cfc2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/ed17545d.failed

This bug fixes a regression introduced by patch 0d1c7ae9d8.

The intent of the patch was to stop promoting glocks after a
file system is withdrawn due to a variety of errors, because doing
so results in a BUG(). (You should be able to unmount after a
withdraw rather than having the kernel panic.)

Unfortunately, it also stopped demotions, so glocks could not be
unlocked after withdraw, which means the unmount would hang.

This patch allows function do_xmote to demote locks to an
unlocked state after a withdraw, but not promote them.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit ed17545d01e4a40086f1622c88ce64cc0241cfc2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/glock.c
diff --cc fs/gfs2/glock.c
index 507529b3d245,959a19ced4d5..000000000000
--- a/fs/gfs2/glock.c
+++ b/fs/gfs2/glock.c
@@@ -490,8 -486,9 +491,14 @@@ __acquires(&gl->gl_spin
  				gfs2_glock_put(gl);
  		}
  		else if (ret) {
++<<<<<<< HEAD
 +			printk(KERN_ERR "GFS2: lm_lock ret %d\n", ret);
 +			GLOCK_BUG_ON(gl, 1);
++=======
+ 			pr_err("lm_lock ret %d\n", ret);
+ 			GLOCK_BUG_ON(gl, !test_bit(SDF_SHUTDOWN,
+ 						   &sdp->sd_flags));
++>>>>>>> ed17545d01e4 (GFS2: Allow glocks to be unlocked after withdraw)
  		}
  	} else { /* lock_nolock */
  		finish_xmote(gl, target);
* Unmerged path fs/gfs2/glock.c
