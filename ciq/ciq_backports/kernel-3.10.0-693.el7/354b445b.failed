raid5-cache: fix lockdep warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Shaohua Li <shli@fb.com>
commit 354b445b5f84f72e64cef9ffe175548e84c1a874
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/354b445b.failed

lockdep reports warning of the rcu_dereference usage. Using normal rdev
access pattern to avoid the warning.

	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit 354b445b5f84f72e64cef9ffe175548e84c1a874)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5-cache.c
diff --cc drivers/md/raid5-cache.c
index 7b91632dc25e,f73672b0a702..000000000000
--- a/drivers/md/raid5-cache.c
+++ b/drivers/md/raid5-cache.c
@@@ -994,14 -970,28 +994,36 @@@ static int r5l_recovery_flush_one_strip
  			continue;
  
  		/* in case device is broken */
+ 		rcu_read_lock();
  		rdev = rcu_dereference(conf->disks[disk_index].rdev);
- 		if (rdev)
+ 		if (rdev) {
+ 			atomic_inc(&rdev->nr_pending);
+ 			rcu_read_unlock();
  			sync_page_io(rdev, stripe_sect, PAGE_SIZE,
++<<<<<<< HEAD
 +				     sh->dev[disk_index].page, WRITE, false);
++=======
+ 				     sh->dev[disk_index].page, REQ_OP_WRITE, 0,
+ 				     false);
+ 			rdev_dec_pending(rdev, rdev->mddev);
+ 			rcu_read_lock();
+ 		}
++>>>>>>> 354b445b5f84 (raid5-cache: fix lockdep warning)
  		rrdev = rcu_dereference(conf->disks[disk_index].replacement);
- 		if (rrdev)
+ 		if (rrdev) {
+ 			atomic_inc(&rrdev->nr_pending);
+ 			rcu_read_unlock();
  			sync_page_io(rrdev, stripe_sect, PAGE_SIZE,
++<<<<<<< HEAD
 +				     sh->dev[disk_index].page, WRITE, false);
++=======
+ 				     sh->dev[disk_index].page, REQ_OP_WRITE, 0,
+ 				     false);
+ 			rdev_dec_pending(rrdev, rrdev->mddev);
+ 			rcu_read_lock();
+ 		}
+ 		rcu_read_unlock();
++>>>>>>> 354b445b5f84 (raid5-cache: fix lockdep warning)
  	}
  	raid5_release_stripe(sh);
  	return 0;
* Unmerged path drivers/md/raid5-cache.c
