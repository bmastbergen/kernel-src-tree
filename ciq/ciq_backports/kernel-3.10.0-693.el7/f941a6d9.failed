bridge: adding stubs for multicast exports

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Linus Lüssing <linus.luessing@web.de>
commit f941a6d9a9e0612eb807af822b0d1ac004da8175
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f941a6d9.failed

To make users (e.g. batman-adv soon) load- and runnable even if the
bridge was compiled without snooping capabilities - or even if the
kernel was compiled without any bridge code at all.

	Signed-off-by: Linus Lüssing <linus.luessing@web.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f941a6d9a9e0612eb807af822b0d1ac004da8175)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/if_bridge.h
diff --cc include/linux/if_bridge.h
index d66e75e57470,e0c575ca89f7..000000000000
--- a/include/linux/if_bridge.h
+++ b/include/linux/if_bridge.h
@@@ -55,9 -36,22 +55,30 @@@ extern void brioctl_set(int (*ioctl_hoo
  
  typedef int br_should_route_hook_t(struct sk_buff *skb);
  extern br_should_route_hook_t __rcu *br_should_route_hook;
++<<<<<<< HEAD
 +#if 0
 +/* RHEL: not yet fully supported */
 +int br_multicast_list_adjacent(struct net_device *dev,
 +			       struct list_head *br_ip_list);
 +#endif
++=======
+ 
+ #if IS_ENABLED(CONFIG_BRIDGE) && IS_ENABLED(CONFIG_BRIDGE_IGMP_SNOOPING)
+ int br_multicast_list_adjacent(struct net_device *dev,
+ 			       struct list_head *br_ip_list);
+ bool br_multicast_has_querier_adjacent(struct net_device *dev, int proto);
+ #else
+ static inline int br_multicast_list_adjacent(struct net_device *dev,
+ 					     struct list_head *br_ip_list)
+ {
+ 	return 0;
+ }
+ static inline bool br_multicast_has_querier_adjacent(struct net_device *dev,
+ 						     int proto)
+ {
+ 	return false;
+ }
+ #endif
+ 
++>>>>>>> f941a6d9a9e0 (bridge: adding stubs for multicast exports)
  #endif
* Unmerged path include/linux/if_bridge.h
