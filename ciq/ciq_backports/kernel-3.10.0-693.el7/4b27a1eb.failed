nfp: remove nfp_net_irqs_wanted()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 4b27a1eb7b83da956c3939869ed22f5ca0e1f1e1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4b27a1eb.failed

nfp_net_irqs_wanted() doesn't really encapsulate much logic,
remove it and inline the calculations.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4b27a1eb7b83da956c3939869ed22f5ca0e1f1e1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net_common.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_common.c
index 8344e8e82257,f26c3927746f..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
@@@ -319,28 -308,6 +319,31 @@@ static int nfp_net_msix_alloc(struct nf
  }
  
  /**
++<<<<<<< HEAD
 + * nfp_net_irqs_wanted() - Work out how many interrupt vectors we want
 + * @nn:       NFP Network structure
 + *
 + * We want a vector per CPU (or ring), whatever is smaller plus
 + * NFP_NET_NON_Q_VECTORS for LSC etc.
 + *
 + * Return: Number of interrupts wanted
 + */
 +static int nfp_net_irqs_wanted(struct nfp_net *nn)
 +{
 +	int ncpus;
 +	int vecs;
 +
 +	ncpus = num_online_cpus();
 +
 +	vecs = max_t(int, nn->num_tx_rings, nn->num_rx_rings);
 +	vecs = min_t(int, vecs, ncpus);
 +
 +	return vecs + NFP_NET_NON_Q_VECTORS;
 +}
 +
 +/**
++=======
++>>>>>>> 4b27a1eb7b83 (nfp: remove nfp_net_irqs_wanted())
   * nfp_net_irqs_alloc() - allocates MSI-X irqs
   * @nn:       NFP Network structure
   *
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_common.c
