perf trace: Move flock op beautifier to tools/perf/trace/beauty/

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 8bf382ce0aef999663bf8d2b02bbfa7da1e9d272
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8bf382ce.failed

To reduce the size of builtin-trace.c.

	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: http://lkml.kernel.org/n/tip-c4c47w2a2jx13terl2p2hros@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 8bf382ce0aef999663bf8d2b02bbfa7da1e9d272)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
diff --cc tools/perf/builtin-trace.c
index fc31c11cbb72,c330d1a654c4..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -364,79 -369,11 +364,87 @@@ static size_t syscall_arg__scnprintf_in
  
  #define SCA_INT syscall_arg__scnprintf_int
  
++<<<<<<< HEAD
 +static size_t syscall_arg__scnprintf_flock(char *bf, size_t size,
 +					   struct syscall_arg *arg)
 +{
 +	int printed = 0, op = arg->val;
 +
 +	if (op == 0)
 +		return scnprintf(bf, size, "NONE");
 +#define	P_CMD(cmd) \
 +	if ((op & LOCK_##cmd) == LOCK_##cmd) { \
 +		printed += scnprintf(bf + printed, size - printed, "%s%s", printed ? "|" : "", #cmd); \
 +		op &= ~LOCK_##cmd; \
 +	}
 +
 +	P_CMD(SH);
 +	P_CMD(EX);
 +	P_CMD(NB);
 +	P_CMD(UN);
 +	P_CMD(MAND);
 +	P_CMD(RW);
 +	P_CMD(READ);
 +	P_CMD(WRITE);
 +#undef P_OP
 +
 +	if (op)
 +		printed += scnprintf(bf + printed, size - printed, "%s%#x", printed ? "|" : "", op);
 +
 +	return printed;
 +}
 +
 +#define SCA_FLOCK syscall_arg__scnprintf_flock
 +
 +static size_t syscall_arg__scnprintf_futex_op(char *bf, size_t size, struct syscall_arg *arg)
 +{
 +	enum syscall_futex_args {
 +		SCF_UADDR   = (1 << 0),
 +		SCF_OP	    = (1 << 1),
 +		SCF_VAL	    = (1 << 2),
 +		SCF_TIMEOUT = (1 << 3),
 +		SCF_UADDR2  = (1 << 4),
 +		SCF_VAL3    = (1 << 5),
 +	};
 +	int op = arg->val;
 +	int cmd = op & FUTEX_CMD_MASK;
 +	size_t printed = 0;
 +
 +	switch (cmd) {
 +#define	P_FUTEX_OP(n) case FUTEX_##n: printed = scnprintf(bf, size, #n);
 +	P_FUTEX_OP(WAIT);	    arg->mask |= SCF_VAL3|SCF_UADDR2;		  break;
 +	P_FUTEX_OP(WAKE);	    arg->mask |= SCF_VAL3|SCF_UADDR2|SCF_TIMEOUT; break;
 +	P_FUTEX_OP(FD);		    arg->mask |= SCF_VAL3|SCF_UADDR2|SCF_TIMEOUT; break;
 +	P_FUTEX_OP(REQUEUE);	    arg->mask |= SCF_VAL3|SCF_TIMEOUT;	          break;
 +	P_FUTEX_OP(CMP_REQUEUE);    arg->mask |= SCF_TIMEOUT;			  break;
 +	P_FUTEX_OP(CMP_REQUEUE_PI); arg->mask |= SCF_TIMEOUT;			  break;
 +	P_FUTEX_OP(WAKE_OP);							  break;
 +	P_FUTEX_OP(LOCK_PI);	    arg->mask |= SCF_VAL3|SCF_UADDR2|SCF_TIMEOUT; break;
 +	P_FUTEX_OP(UNLOCK_PI);	    arg->mask |= SCF_VAL3|SCF_UADDR2|SCF_TIMEOUT; break;
 +	P_FUTEX_OP(TRYLOCK_PI);	    arg->mask |= SCF_VAL3|SCF_UADDR2;		  break;
 +	P_FUTEX_OP(WAIT_BITSET);    arg->mask |= SCF_UADDR2;			  break;
 +	P_FUTEX_OP(WAKE_BITSET);    arg->mask |= SCF_UADDR2;			  break;
 +	P_FUTEX_OP(WAIT_REQUEUE_PI);						  break;
 +	default: printed = scnprintf(bf, size, "%#x", cmd);			  break;
 +	}
 +
 +	if (op & FUTEX_PRIVATE_FLAG)
 +		printed += scnprintf(bf + printed, size - printed, "|PRIV");
 +
 +	if (op & FUTEX_CLOCK_REALTIME)
 +		printed += scnprintf(bf + printed, size - printed, "|CLKRT");
 +
 +	return printed;
 +}
 +
 +#define SCA_FUTEX_OP  syscall_arg__scnprintf_futex_op
++=======
+ static const char *bpf_cmd[] = {
+ 	"MAP_CREATE", "MAP_LOOKUP_ELEM", "MAP_UPDATE_ELEM", "MAP_DELETE_ELEM",
+ 	"MAP_GET_NEXT_KEY", "PROG_LOAD",
+ };
+ static DEFINE_STRARRAY(bpf_cmd);
++>>>>>>> 8bf382ce0aef (perf trace: Move flock op beautifier to tools/perf/trace/beauty/)
  
  static const char *epoll_ctl_ops[] = { "ADD", "DEL", "MOD", };
  static DEFINE_STRARRAY_OFFSET(epoll_ctl_ops, 1);
@@@ -666,7 -603,8 +674,12 @@@ static size_t syscall_arg__scnprintf_ge
  	  .arg_parm	 = { [arg] = &strarray__##array, }
  
  #include "trace/beauty/eventfd.c"
++<<<<<<< HEAD
 +#include "trace/beauty/pid.c"
++=======
+ #include "trace/beauty/flock.c"
+ #include "trace/beauty/futex_op.c"
++>>>>>>> 8bf382ce0aef (perf trace: Move flock op beautifier to tools/perf/trace/beauty/)
  #include "trace/beauty/mmap.c"
  #include "trace/beauty/mode_t.c"
  #include "trace/beauty/msg_flags.c"
* Unmerged path tools/perf/builtin-trace.c
diff --git a/tools/perf/trace/beauty/flock.c b/tools/perf/trace/beauty/flock.c
new file mode 100644
index 000000000000..021bb48c6336
--- /dev/null
+++ b/tools/perf/trace/beauty/flock.c
@@ -0,0 +1,31 @@
+
+static size_t syscall_arg__scnprintf_flock(char *bf, size_t size,
+					   struct syscall_arg *arg)
+{
+	int printed = 0, op = arg->val;
+
+	if (op == 0)
+		return scnprintf(bf, size, "NONE");
+#define	P_CMD(cmd) \
+	if ((op & LOCK_##cmd) == LOCK_##cmd) { \
+		printed += scnprintf(bf + printed, size - printed, "%s%s", printed ? "|" : "", #cmd); \
+		op &= ~LOCK_##cmd; \
+	}
+
+	P_CMD(SH);
+	P_CMD(EX);
+	P_CMD(NB);
+	P_CMD(UN);
+	P_CMD(MAND);
+	P_CMD(RW);
+	P_CMD(READ);
+	P_CMD(WRITE);
+#undef P_OP
+
+	if (op)
+		printed += scnprintf(bf + printed, size - printed, "%s%#x", printed ? "|" : "", op);
+
+	return printed;
+}
+
+#define SCA_FLOCK syscall_arg__scnprintf_flock
