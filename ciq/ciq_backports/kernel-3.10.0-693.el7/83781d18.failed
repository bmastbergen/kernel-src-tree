KVM: x86: Expose Intel AVX512IFMA/AVX512VBMI/SHA features to guest.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] kvm: x86: Expose Intel AVX512IFMA/AVX512VBMI/SHA features to guest (Paul Lai) [1415961]
Rebuild_FUZZ: 99.25%
commit-author Yi Sun <yi.y.sun@linux.intel.com>
commit 83781d180b219bd079ae72b341ee3f21fb236e97
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/83781d18.failed

Expose AVX512IFMA/AVX512VBMI/SHA features to guest.

AVX512 spec can be found at:
https://software.intel.com/sites/default/files/managed/26/40/319433-026.pdf

SHA spec can be found at:
https://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol-1-2abcd-3abcd.pdf

This patch depends on below patch.
http://marc.info/?l=linux-kernel&m=147932800828178&w=2

	Signed-off-by: Yi Sun <yi.y.sun@linux.intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 83781d180b219bd079ae72b341ee3f21fb236e97)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/cpuid.c
diff --cc arch/x86/kvm/cpuid.c
index 7f642dfc1c1d,e85f6bd7b9d5..000000000000
--- a/arch/x86/kvm/cpuid.c
+++ b/arch/x86/kvm/cpuid.c
@@@ -352,16 -370,24 +352,29 @@@ static inline int __do_cpuid_ent(struc
  		F(PMM) | F(PMM_EN);
  
  	/* cpuid 7.0.ebx */
 -	const u32 kvm_cpuid_7_0_ebx_x86_features =
 +	const u32 kvm_supported_word9_x86_features =
  		F(FSGSBASE) | F(BMI1) | F(HLE) | F(AVX2) | F(SMEP) |
  		F(BMI2) | F(ERMS) | f_invpcid | F(RTM) | f_mpx | F(RDSEED) |
- 		F(ADX) | F(SMAP) | F(AVX512F) | F(AVX512PF) | F(AVX512ER) |
- 		F(AVX512CD) | F(CLFLUSHOPT) | F(CLWB) | F(AVX512DQ) |
- 		F(AVX512BW) | F(AVX512VL);
+ 		F(ADX) | F(SMAP) | F(AVX512IFMA) | F(AVX512F) | F(AVX512PF) |
+ 		F(AVX512ER) | F(AVX512CD) | F(CLFLUSHOPT) | F(CLWB) | F(AVX512DQ) |
+ 		F(SHA_NI) | F(AVX512BW) | F(AVX512VL);
  
  	/* cpuid 0xD.1.eax */
++<<<<<<< HEAD
 +	const u32 kvm_supported_word10_x86_features =
 +		F(XSAVEOPT) | F(XSAVEC) | F(XGETBV1);
++=======
+ 	const u32 kvm_cpuid_D_1_eax_x86_features =
+ 		F(XSAVEOPT) | F(XSAVEC) | F(XGETBV1) | f_xsaves;
+ 
+ 	/* cpuid 7.0.ecx*/
+ 	const u32 kvm_cpuid_7_0_ecx_x86_features =
+ 		F(AVX512VBMI) | F(PKU) | 0 /*OSPKE*/;
+ 
+ 	/* cpuid 7.0.edx*/
+ 	const u32 kvm_cpuid_7_0_edx_x86_features =
+ 		KF(AVX512_4VNNIW) | KF(AVX512_4FMAPS);
++>>>>>>> 83781d180b21 (KVM: x86: Expose Intel AVX512IFMA/AVX512VBMI/SHA features to guest.)
  
  	/* all calls to cpuid_count() should be made on the same cpu */
  	get_cpu();
* Unmerged path arch/x86/kvm/cpuid.c
