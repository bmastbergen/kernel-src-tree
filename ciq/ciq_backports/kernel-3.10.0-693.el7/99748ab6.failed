drm: virtio: fix virtio_gpu_cursor_formats

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [drm] virtio: fix virtio_gpu_cursor_formats (Laurent Vivier) [1436557]
Rebuild_FUZZ: 93.67%
commit-author Laurent Vivier <lvivier@redhat.com>
commit 99748ab64fcc857837acfd754b530487a490edb5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/99748ab6.failed

When we use virtio-vga with a big-endian guest,
the mouse pointer disappears.

To fix that, on big-endian use DRM_FORMAT_BGRA8888
instead of DRM_FORMAT_ARGB8888.

	Signed-off-by: Laurent Vivier <lvivier@redhat.com>
Link: http://patchwork.freedesktop.org/patch/msgid/20170405080915.823-1-lvivier@redhat.com
	Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
(cherry picked from commit 99748ab64fcc857837acfd754b530487a490edb5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/virtio/virtgpu_plane.c
diff --cc drivers/gpu/drm/virtio/virtgpu_plane.c
index 70b44a2345ab,adcdbd0abef6..000000000000
--- a/drivers/gpu/drm/virtio/virtgpu_plane.c
+++ b/drivers/gpu/drm/virtio/virtgpu_plane.c
@@@ -38,8 -38,85 +38,87 @@@ static const uint32_t virtio_gpu_format
  	DRM_FORMAT_ABGR8888,
  };
  
++<<<<<<< HEAD
++=======
+ static const uint32_t virtio_gpu_cursor_formats[] = {
+ #ifdef __BIG_ENDIAN
+ 	DRM_FORMAT_BGRA8888,
+ #else
+ 	DRM_FORMAT_ARGB8888,
+ #endif
+ };
+ 
+ uint32_t virtio_gpu_translate_format(uint32_t drm_fourcc)
+ {
+ 	uint32_t format;
+ 
+ 	switch (drm_fourcc) {
+ #ifdef __BIG_ENDIAN
+ 	case DRM_FORMAT_XRGB8888:
+ 		format = VIRTIO_GPU_FORMAT_X8R8G8B8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_ARGB8888:
+ 		format = VIRTIO_GPU_FORMAT_A8R8G8B8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_BGRX8888:
+ 		format = VIRTIO_GPU_FORMAT_B8G8R8X8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_BGRA8888:
+ 		format = VIRTIO_GPU_FORMAT_B8G8R8A8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_RGBX8888:
+ 		format = VIRTIO_GPU_FORMAT_R8G8B8X8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_RGBA8888:
+ 		format = VIRTIO_GPU_FORMAT_R8G8B8A8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_XBGR8888:
+ 		format = VIRTIO_GPU_FORMAT_X8B8G8R8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_ABGR8888:
+ 		format = VIRTIO_GPU_FORMAT_A8B8G8R8_UNORM;
+ 		break;
+ #else
+ 	case DRM_FORMAT_XRGB8888:
+ 		format = VIRTIO_GPU_FORMAT_B8G8R8X8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_ARGB8888:
+ 		format = VIRTIO_GPU_FORMAT_B8G8R8A8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_BGRX8888:
+ 		format = VIRTIO_GPU_FORMAT_X8R8G8B8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_BGRA8888:
+ 		format = VIRTIO_GPU_FORMAT_A8R8G8B8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_RGBX8888:
+ 		format = VIRTIO_GPU_FORMAT_X8B8G8R8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_RGBA8888:
+ 		format = VIRTIO_GPU_FORMAT_A8B8G8R8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_XBGR8888:
+ 		format = VIRTIO_GPU_FORMAT_R8G8B8X8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_ABGR8888:
+ 		format = VIRTIO_GPU_FORMAT_R8G8B8A8_UNORM;
+ 		break;
+ #endif
+ 	default:
+ 		/*
+ 		 * This should not happen, we handle everything listed
+ 		 * in virtio_gpu_formats[].
+ 		 */
+ 		format = 0;
+ 		break;
+ 	}
+ 	WARN_ON(format == 0);
+ 	return format;
+ }
+ 
++>>>>>>> 99748ab64fcc (drm: virtio: fix virtio_gpu_cursor_formats)
  static void virtio_gpu_plane_destroy(struct drm_plane *plane)
  {
 -	drm_plane_cleanup(plane);
  	kfree(plane);
  }
  
* Unmerged path drivers/gpu/drm/virtio/virtgpu_plane.c
