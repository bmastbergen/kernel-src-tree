net: add netif_is_team_master helper

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] add netif_is_team_master helper (Ivan Vecera) [1275772 1297841 1331748]
Rebuild_FUZZ: 92.54%
commit-author Jiri Pirko <jiri@mellanox.com>
commit c981e4213e9d2d4ec79501bd607722ec712742a2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c981e421.failed

Similar to other helpers, caller can use this to find out if device is
team master.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c981e4213e9d2d4ec79501bd607722ec712742a2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netdevice.h
diff --cc include/linux/netdevice.h
index b6150f910ad9,2b889be65d88..000000000000
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@@ -1382,42 -1269,38 +1382,73 @@@ struct net_device_ops 
   * @IFF_LIVE_ADDR_CHANGE: device supports hardware address
   *	change when it's running
   * @IFF_MACVLAN: Macvlan device
 - * @IFF_L3MDEV_MASTER: device is an L3 master device
   * @IFF_NO_QUEUE: device can run without qdisc attached
   * @IFF_OPENVSWITCH: device is a Open vSwitch master
++<<<<<<< HEAD
 + * @IFF_RXFH_CONFIGURED: device has had Rx Flow indirection table configured
 + * @IFF_PHONY_HEADROOM: the headroom value is controlled by an external
 + *	entity (i.e. the master device for bridged veth)
 + * @IFF_MACSEC: device is a MACsec device
++=======
+  * @IFF_L3MDEV_SLAVE: device is enslaved to an L3 master device
+  * @IFF_TEAM: device is a team device
++>>>>>>> c981e4213e9d (net: add netif_is_team_master helper)
   */
  enum netdev_priv_flags {
  	IFF_802_1Q_VLAN			= 1<<0,
  	IFF_EBRIDGE			= 1<<1,
++<<<<<<< HEAD
 +	IFF_SLAVE_INACTIVE		= 1<<2,
 +	IFF_MASTER_8023AD		= 1<<3,
 +	IFF_MASTER_ALB			= 1<<4,
 +	IFF_BONDING			= 1<<5,
 +	IFF_SLAVE_NEEDARP		= 1<<6,
 +	IFF_ISATAP			= 1<<7,
 +	IFF_MASTER_ARPMON		= 1<<8,
 +	IFF_WAN_HDLC			= 1<<9,
 +	IFF_XMIT_DST_RELEASE		= 1<<10,
 +	IFF_DONT_BRIDGE			= 1<<11,
 +	IFF_DISABLE_NETPOLL		= 1<<12,
 +	IFF_MACVLAN_PORT		= 1<<13,
 +	IFF_BRIDGE_PORT			= 1<<14,
 +	IFF_OVS_DATAPATH		= 1<<15,
 +	IFF_TX_SKB_SHARING		= 1<<16,
 +	IFF_UNICAST_FLT			= 1<<17,
 +	IFF_TEAM_PORT			= 1<<18,
 +	IFF_SUPP_NOFCS			= 1<<19,
 +	IFF_LIVE_ADDR_CHANGE		= 1<<20,
 +	IFF_MACVLAN			= 1<<21,
 +	IFF_XMIT_DST_RELEASE_PERM	= 1<<22,
 +	IFF_OPENVSWITCH			= 1<<23,
 +	IFF_RXFH_CONFIGURED		= 1<<25,
 +	IFF_NO_QUEUE			= 1<<26,
 +	IFF_PHONY_HEADROOM		= 1<<27,
 +	IFF_MACSEC			= 1<<28,
++=======
+ 	IFF_BONDING			= 1<<2,
+ 	IFF_ISATAP			= 1<<3,
+ 	IFF_WAN_HDLC			= 1<<4,
+ 	IFF_XMIT_DST_RELEASE		= 1<<5,
+ 	IFF_DONT_BRIDGE			= 1<<6,
+ 	IFF_DISABLE_NETPOLL		= 1<<7,
+ 	IFF_MACVLAN_PORT		= 1<<8,
+ 	IFF_BRIDGE_PORT			= 1<<9,
+ 	IFF_OVS_DATAPATH		= 1<<10,
+ 	IFF_TX_SKB_SHARING		= 1<<11,
+ 	IFF_UNICAST_FLT			= 1<<12,
+ 	IFF_TEAM_PORT			= 1<<13,
+ 	IFF_SUPP_NOFCS			= 1<<14,
+ 	IFF_LIVE_ADDR_CHANGE		= 1<<15,
+ 	IFF_MACVLAN			= 1<<16,
+ 	IFF_XMIT_DST_RELEASE_PERM	= 1<<17,
+ 	IFF_IPVLAN_MASTER		= 1<<18,
+ 	IFF_IPVLAN_SLAVE		= 1<<19,
+ 	IFF_L3MDEV_MASTER		= 1<<20,
+ 	IFF_NO_QUEUE			= 1<<21,
+ 	IFF_OPENVSWITCH			= 1<<22,
+ 	IFF_L3MDEV_SLAVE		= 1<<23,
+ 	IFF_TEAM			= 1<<24,
++>>>>>>> c981e4213e9d (net: add netif_is_team_master helper)
  };
  
  #define IFF_802_1Q_VLAN			IFF_802_1Q_VLAN
@@@ -1443,16 -1321,219 +1474,21 @@@
  #define IFF_LIVE_ADDR_CHANGE		IFF_LIVE_ADDR_CHANGE
  #define IFF_MACVLAN			IFF_MACVLAN
  #define IFF_XMIT_DST_RELEASE_PERM	IFF_XMIT_DST_RELEASE_PERM
 -#define IFF_IPVLAN_MASTER		IFF_IPVLAN_MASTER
 -#define IFF_IPVLAN_SLAVE		IFF_IPVLAN_SLAVE
 -#define IFF_L3MDEV_MASTER		IFF_L3MDEV_MASTER
  #define IFF_NO_QUEUE			IFF_NO_QUEUE
  #define IFF_OPENVSWITCH			IFF_OPENVSWITCH
++<<<<<<< HEAD
 +#define IFF_RXFH_CONFIGURED		IFF_RXFH_CONFIGURED
 +#define IFF_MACSEC			IFF_MACSEC
++=======
+ #define IFF_L3MDEV_SLAVE		IFF_L3MDEV_SLAVE
+ #define IFF_TEAM			IFF_TEAM
++>>>>>>> c981e4213e9d (net: add netif_is_team_master helper)
  
 -/**
 - *	struct net_device - The DEVICE structure.
 - *		Actually, this whole structure is a big mistake.  It mixes I/O
 - *		data with strictly "high-level" data, and it has to know about
 - *		almost every data structure used in the INET module.
 - *
 - *	@name:	This is the first field of the "visible" part of this structure
 - *		(i.e. as seen by users in the "Space.c" file).  It is the name
 - *	 	of the interface.
 - *
 - *	@name_hlist: 	Device name hash chain, please keep it close to name[]
 - *	@ifalias:	SNMP alias
 - *	@mem_end:	Shared memory end
 - *	@mem_start:	Shared memory start
 - *	@base_addr:	Device I/O address
 - *	@irq:		Device IRQ number
 - *
 - *	@carrier_changes:	Stats to monitor carrier on<->off transitions
 - *
 - *	@state:		Generic network queuing layer state, see netdev_state_t
 - *	@dev_list:	The global list of network devices
 - *	@napi_list:	List entry, that is used for polling napi devices
 - *	@unreg_list:	List entry, that is used, when we are unregistering the
 - *			device, see the function unregister_netdev
 - *	@close_list:	List entry, that is used, when we are closing the device
 - *
 - *	@adj_list:	Directly linked devices, like slaves for bonding
 - *	@all_adj_list:	All linked devices, *including* neighbours
 - *	@features:	Currently active device features
 - *	@hw_features:	User-changeable features
 - *
 - *	@wanted_features:	User-requested features
 - *	@vlan_features:		Mask of features inheritable by VLAN devices
 - *
 - *	@hw_enc_features:	Mask of features inherited by encapsulating devices
 - *				This field indicates what encapsulation
 - *				offloads the hardware is capable of doing,
 - *				and drivers will need to set them appropriately.
 - *
 - *	@mpls_features:	Mask of features inheritable by MPLS
 - *
 - *	@ifindex:	interface index
 - *	@group:		The group, that the device belongs to
 - *
 - *	@stats:		Statistics struct, which was left as a legacy, use
 - *			rtnl_link_stats64 instead
 - *
 - *	@rx_dropped:	Dropped packets by core network,
 - *			do not use this in drivers
 - *	@tx_dropped:	Dropped packets by core network,
 - *			do not use this in drivers
 - *
 - *	@wireless_handlers:	List of functions to handle Wireless Extensions,
 - *				instead of ioctl,
 - *				see <net/iw_handler.h> for details.
 - *	@wireless_data:	Instance data managed by the core of wireless extensions
 - *
 - *	@netdev_ops:	Includes several pointers to callbacks,
 - *			if one wants to override the ndo_*() functions
 - *	@ethtool_ops:	Management operations
 - *	@header_ops:	Includes callbacks for creating,parsing,caching,etc
 - *			of Layer 2 headers.
 - *
 - *	@flags:		Interface flags (a la BSD)
 - *	@priv_flags:	Like 'flags' but invisible to userspace,
 - *			see if.h for the definitions
 - *	@gflags:	Global flags ( kept as legacy )
 - *	@padded:	How much padding added by alloc_netdev()
 - *	@operstate:	RFC2863 operstate
 - *	@link_mode:	Mapping policy to operstate
 - *	@if_port:	Selectable AUI, TP, ...
 - *	@dma:		DMA channel
 - *	@mtu:		Interface MTU value
 - *	@type:		Interface hardware type
 - *	@hard_header_len: Hardware header length
 - *
 - *	@needed_headroom: Extra headroom the hardware may need, but not in all
 - *			  cases can this be guaranteed
 - *	@needed_tailroom: Extra tailroom the hardware may need, but not in all
 - *			  cases can this be guaranteed. Some cases also use
 - *			  LL_MAX_HEADER instead to allocate the skb
 - *
 - *	interface address info:
 - *
 - * 	@perm_addr:		Permanent hw address
 - * 	@addr_assign_type:	Hw address assignment type
 - * 	@addr_len:		Hardware address length
 - * 	@neigh_priv_len;	Used in neigh_alloc(),
 - * 				initialized only in atm/clip.c
 - * 	@dev_id:		Used to differentiate devices that share
 - * 				the same link layer address
 - * 	@dev_port:		Used to differentiate devices that share
 - * 				the same function
 - *	@addr_list_lock:	XXX: need comments on this one
 - *	@uc_promisc:		Counter, that indicates, that promiscuous mode
 - *				has been enabled due to the need to listen to
 - *				additional unicast addresses in a device that
 - *				does not implement ndo_set_rx_mode()
 - *	@uc:			unicast mac addresses
 - *	@mc:			multicast mac addresses
 - *	@dev_addrs:		list of device hw addresses
 - *	@queues_kset:		Group of all Kobjects in the Tx and RX queues
 - *	@promiscuity:		Number of times, the NIC is told to work in
 - *				Promiscuous mode, if it becomes 0 the NIC will
 - *				exit from working in Promiscuous mode
 - *	@allmulti:		Counter, enables or disables allmulticast mode
 - *
 - *	@vlan_info:	VLAN info
 - *	@dsa_ptr:	dsa specific data
 - *	@tipc_ptr:	TIPC specific data
 - *	@atalk_ptr:	AppleTalk link
 - *	@ip_ptr:	IPv4 specific data
 - *	@dn_ptr:	DECnet specific data
 - *	@ip6_ptr:	IPv6 specific data
 - *	@ax25_ptr:	AX.25 specific data
 - *	@ieee80211_ptr:	IEEE 802.11 specific data, assign before registering
 - *
 - *	@last_rx:	Time of last Rx
 - *	@dev_addr:	Hw address (before bcast,
 - *			because most packets are unicast)
 - *
 - *	@_rx:			Array of RX queues
 - *	@num_rx_queues:		Number of RX queues
 - *				allocated at register_netdev() time
 - *	@real_num_rx_queues: 	Number of RX queues currently active in device
 - *
 - *	@rx_handler:		handler for received packets
 - *	@rx_handler_data: 	XXX: need comments on this one
 - *	@ingress_queue:		XXX: need comments on this one
 - *	@broadcast:		hw bcast address
 - *
 - *	@rx_cpu_rmap:	CPU reverse-mapping for RX completion interrupts,
 - *			indexed by RX queue number. Assigned by driver.
 - *			This must only be set if the ndo_rx_flow_steer
 - *			operation is defined
 - *	@index_hlist:		Device index hash chain
 - *
 - *	@_tx:			Array of TX queues
 - *	@num_tx_queues:		Number of TX queues allocated at alloc_netdev_mq() time
 - *	@real_num_tx_queues: 	Number of TX queues currently active in device
 - *	@qdisc:			Root qdisc from userspace point of view
 - *	@tx_queue_len:		Max frames per queue allowed
 - *	@tx_global_lock: 	XXX: need comments on this one
 - *
 - *	@xps_maps:	XXX: need comments on this one
 - *
 - *	@offload_fwd_mark:	Offload device fwding mark
 - *
 - *	@trans_start:		Time (in jiffies) of last Tx
 - *	@watchdog_timeo:	Represents the timeout that is used by
 - *				the watchdog ( see dev_watchdog() )
 - *	@watchdog_timer:	List of timers
 - *
 - *	@pcpu_refcnt:		Number of references to this device
 - *	@todo_list:		Delayed register/unregister
 - *	@link_watch_list:	XXX: need comments on this one
 - *
 - *	@reg_state:		Register/unregister state machine
 - *	@dismantle:		Device is going to be freed
 - *	@rtnl_link_state:	This enum represents the phases of creating
 - *				a new link
 - *
 - *	@destructor:		Called from unregister,
 - *				can be used to call free_netdev
 - *	@npinfo:		XXX: need comments on this one
 - * 	@nd_net:		Network namespace this network device is inside
 - *
 - * 	@ml_priv:	Mid-layer private
 - * 	@lstats:	Loopback statistics
 - * 	@tstats:	Tunnel statistics
 - * 	@dstats:	Dummy statistics
 - * 	@vstats:	Virtual ethernet statistics
 - *
 - *	@garp_port:	GARP
 - *	@mrp_port:	MRP
 - *
 - *	@dev:		Class/net/name entry
 - *	@sysfs_groups:	Space for optional device, statistics and wireless
 - *			sysfs groups
 - *
 - *	@sysfs_rx_queue_group:	Space for optional per-rx queue attributes
 - *	@rtnl_link_ops:	Rtnl_link_ops
 - *
 - *	@gso_max_size:	Maximum size of generic segmentation offload
 - *	@gso_max_segs:	Maximum number of segments that can be passed to the
 - *			NIC for GSO
 - *	@gso_min_segs:	Minimum number of segments that can be passed to the
 - *			NIC for GSO
 - *
 - *	@dcbnl_ops:	Data Center Bridging netlink ops
 - *	@num_tc:	Number of traffic classes in the net device
 - *	@tc_to_txq:	XXX: need comments on this one
 - *	@prio_tc_map	XXX: need comments on this one
 - *
 - *	@fcoe_ddp_xid:	Max exchange id for FCoE LRO by ddp
 - *
 - *	@priomap:	XXX: need comments on this one
 - *	@phydev:	Physical device may attach itself
 - *			for hardware timestamping
 - *
 - *	@qdisc_tx_busylock:	XXX: need comments on this one
 - *
 - *	@proto_down:	protocol port state information can be sent to the
 - *			switch driver and used to set the phys state of the
 - *			switch port.
 +/*
 + *	The DEVICE structure.
 + *	Actually, this whole structure is a big mistake.  It mixes I/O
 + *	data with strictly "high-level" data, and it has to know about
 + *	almost every data structure used in the INET module.
   *
   *	FIXME: cleanup struct net_device such that network protocol info
   *	moves out.
@@@ -3963,9 -3892,9 +3999,15 @@@ static inline bool netif_is_ovs_master(
  	return dev->priv_flags & IFF_OPENVSWITCH;
  }
  
++<<<<<<< HEAD
 +static inline bool netif_is_rxfh_configured(const struct net_device *dev)
 +{
 +	return dev->priv_flags & IFF_RXFH_CONFIGURED;
++=======
+ static inline bool netif_is_team_master(struct net_device *dev)
+ {
+ 	return dev->priv_flags & IFF_TEAM;
++>>>>>>> c981e4213e9d (net: add netif_is_team_master helper)
  }
  
  /* This device needs to keep skb dst for qdisc enqueue or ndo_start_xmit() */
diff --git a/drivers/net/team/team.c b/drivers/net/team/team.c
index 75ab1983f4c3..91f650cd1607 100644
--- a/drivers/net/team/team.c
+++ b/drivers/net/team/team.c
@@ -2074,6 +2074,7 @@ static void team_setup(struct net_device *dev)
 	dev->destructor	= team_destructor;
 	dev->priv_flags &= ~(IFF_XMIT_DST_RELEASE | IFF_TX_SKB_SHARING);
 	dev->priv_flags |= IFF_NO_QUEUE;
+	dev->priv_flags |= IFF_TEAM;
 
 	/*
 	 * Indicate we support unicast address filtering. That way core won't
* Unmerged path include/linux/netdevice.h
