crypto: rsa - allow keys >= 2048 bits in FIPS mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [crypto] rsa - allow keys >= 2048 bits in FIPS mode (Herbert Xu) [1459191]
Rebuild_FUZZ: 91.30%
commit-author Stephan Mueller <smueller@chronox.de>
commit e09287dfef280dbe9f9aa1faa7a125957e9b7fbb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e09287df.failed

With a public notification, NIST now allows the use of RSA keys with a
modulus >= 2048 bits. The new rule allows any modulus size >= 2048 bits
provided that either 2048 or 3072 bits are supported at least so that
the entire RSA implementation can be CAVS tested.

This patch fixes the inability to boot the kernel in FIPS mode, because
certs/x509.genkey defines a 4096 bit RSA key per default. This key causes
the RSA signature verification to fail in FIPS mode without the patch
below.

	Signed-off-by: Stephan Mueller <smueller@chronox.de>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit e09287dfef280dbe9f9aa1faa7a125957e9b7fbb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	crypto/rsa_helper.c
diff --cc crypto/rsa_helper.c
index e8fccd3be61a,0b66dc824606..000000000000
--- a/crypto/rsa_helper.c
+++ b/crypto/rsa_helper.c
@@@ -22,20 -22,29 +22,35 @@@ int rsa_get_n(void *context, size_t hdr
  	      const void *value, size_t vlen)
  {
  	struct rsa_key *key = context;
 -	const u8 *ptr = value;
 -	size_t n_sz = vlen;
  
 -	/* invalid key provided */
 -	if (!value || !vlen)
 +	key->n = mpi_read_raw_data(value, vlen);
 +
 +	if (!key->n)
 +		return -ENOMEM;
 +
 +	/* In FIPS mode only allow key size 2K & 3K */
 +	if (fips_enabled && (mpi_get_size(key->n) != 256 ||
 +			     mpi_get_size(key->n) != 384)) {
 +		pr_err("RSA: key size not allowed in FIPS mode\n");
 +		mpi_free(key->n);
 +		key->n = NULL;
  		return -EINVAL;
++<<<<<<< HEAD
++=======
+ 
+ 	if (fips_enabled) {
+ 		while (!*ptr && n_sz) {
+ 			ptr++;
+ 			n_sz--;
+ 		}
+ 
+ 		/* In FIPS mode only allow key size 2K and higher */
+ 		if (n_sz < 256) {
+ 			pr_err("RSA: key size not allowed in FIPS mode\n");
+ 			return -EINVAL;
+ 		}
++>>>>>>> e09287dfef28 (crypto: rsa - allow keys >= 2048 bits in FIPS mode)
  	}
 -
 -	key->n = value;
 -	key->n_sz = vlen;
 -
  	return 0;
  }
  
* Unmerged path crypto/rsa_helper.c
