GFS2: Inline function meta_lo_add

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit 192738b711d3e41a7326347db5d6923d2136b6d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/192738b7.failed

This patch simply combines function meta_lo_add with its only
caller, trans_add_meta. This makes the code easier to read and
will make it easier to reduce contention on gfs2_log_lock.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit 192738b711d3e41a7326347db5d6923d2136b6d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/trans.c
diff --cc fs/gfs2/trans.c
index d7f68983ce8e,483c5a7e16d4..000000000000
--- a/fs/gfs2/trans.c
+++ b/fs/gfs2/trans.c
@@@ -219,32 -195,6 +219,35 @@@ void gfs2_trans_add_data(struct gfs2_gl
  	unlock_buffer(bh);
  }
  
++<<<<<<< HEAD
 +static void meta_lo_add(struct gfs2_sbd *sdp, struct gfs2_bufdata *bd)
 +{
 +	struct gfs2_meta_header *mh;
 +	struct gfs2_trans *tr;
 +
 +	tr = current->journal_info;
 +	tr->tr_touched = 1;
 +	if (!list_empty(&bd->bd_list))
 +		return;
 +	set_bit(GLF_LFLUSH, &bd->bd_gl->gl_flags);
 +	set_bit(GLF_DIRTY, &bd->bd_gl->gl_flags);
 +	mh = (struct gfs2_meta_header *)bd->bd_bh->b_data;
 +	if (unlikely(mh->mh_magic != cpu_to_be32(GFS2_MAGIC))) {
 +		printk(KERN_ERR
 +		       "Attempting to add uninitialised block to journal (inplace block=%lld)\n",
 +		       (unsigned long long)bd->bd_bh->b_blocknr);
 +		BUG();
 +	}
 +	gfs2_pin(sdp, bd->bd_bh);
 +	mh->__pad0 = cpu_to_be64(0);
 +	mh->mh_jid = cpu_to_be32(sdp->sd_jdesc->jd_jid);
 +	sdp->sd_log_num_buf++;
 +	list_add(&bd->bd_list, &sdp->sd_log_le_buf);
 +	tr->tr_num_buf_new++;
 +}
 +
++=======
++>>>>>>> 192738b711d3 (GFS2: Inline function meta_lo_add)
  void gfs2_trans_add_meta(struct gfs2_glock *gl, struct buffer_head *bh)
  {
  
* Unmerged path fs/gfs2/trans.c
