x86/KASLR: Clarify identity map interface

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] kaslr: Clarify identity map interface (Baoquan He) [1290840]
Rebuild_FUZZ: 94.87%
commit-author Kees Cook <keescook@chromium.org>
commit 11fdf97a3cd1a5a27625f820ceb74e1caba4fd26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/11fdf97a.failed

This extracts the call to prepare_level4() into a top-level function
that the user of the pagetable.c interface must call to initialize
the new page tables. For clarity and to match the "finalize" function,
it has been renamed to initialize_identity_maps(). This function also
gains the initialization of mapping_info so we don't have to do it each
time in add_identity_map().

Additionally add copyright notice to the top, to make it clear that the
bulk of the pagetable.c code was written by Yinghai, and that I just
added bugs later. :)

	Signed-off-by: Kees Cook <keescook@chromium.org>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: H.J. Lu <hjl.tools@gmail.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Yinghai Lu <yinghai@kernel.org>
Link: http://lkml.kernel.org/r/1464216334-17200-3-git-send-email-keescook@chromium.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 11fdf97a3cd1a5a27625f820ceb74e1caba4fd26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/kaslr.c
#	arch/x86/boot/compressed/misc.h
#	arch/x86/boot/compressed/pagetable.c
diff --cc arch/x86/boot/compressed/misc.h
index 674019d8e235,09c4ddd02ac6..000000000000
--- a/arch/x86/boot/compressed/misc.h
+++ b/arch/x86/boot/compressed/misc.h
@@@ -39,12 -55,50 +39,55 @@@ static inline void debug_putstr(const c
  
  #endif
  
++<<<<<<< HEAD
++=======
+ #if CONFIG_EARLY_PRINTK || CONFIG_RANDOMIZE_BASE
+ /* cmdline.c */
+ int cmdline_find_option(const char *option, char *buffer, int bufsize);
+ int cmdline_find_option_bool(const char *option);
+ #endif
+ 
+ 
+ #if CONFIG_RANDOMIZE_BASE
+ /* kaslr.c */
+ unsigned char *choose_random_location(unsigned long input_ptr,
+ 				      unsigned long input_size,
+ 				      unsigned long output_ptr,
+ 				      unsigned long output_size);
+ /* cpuflags.c */
+ bool has_cpuflag(int flag);
+ #else
+ static inline
+ unsigned char *choose_random_location(unsigned long input_ptr,
+ 				      unsigned long input_size,
+ 				      unsigned long output_ptr,
+ 				      unsigned long output_size)
+ {
+ 	return (unsigned char *)output_ptr;
+ }
+ #endif
+ 
+ #ifdef CONFIG_X86_64
+ void initialize_identity_maps(void);
+ void add_identity_map(unsigned long start, unsigned long size);
+ void finalize_identity_maps(void);
+ extern unsigned char _pgtable[];
+ #else
+ static inline void initialize_identity_maps(void)
+ { }
+ static inline void add_identity_map(unsigned long start, unsigned long size)
+ { }
+ static inline void finalize_identity_maps(void)
+ { }
+ #endif
+ 
++>>>>>>> 11fdf97a3cd1 (x86/KASLR: Clarify identity map interface)
  #ifdef CONFIG_EARLY_PRINTK
 +
 +/* cmdline.c */
 +int cmdline_find_option(const char *option, char *buffer, int bufsize);
 +int cmdline_find_option_bool(const char *option);
 +
  /* early_serial_console.c */
  extern int early_serial_base;
  void console_init(void);
* Unmerged path arch/x86/boot/compressed/kaslr.c
* Unmerged path arch/x86/boot/compressed/pagetable.c
* Unmerged path arch/x86/boot/compressed/kaslr.c
* Unmerged path arch/x86/boot/compressed/misc.h
* Unmerged path arch/x86/boot/compressed/pagetable.c
