ipv4: Set skb->protocol properly for local output

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eli Cooper <elicooper@gmx.com>
commit f4180439109aa720774baafdd798b3234ab1a0d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f4180439.failed

When xfrm is applied to TSO/GSO packets, it follows this path:

    xfrm_output() -> xfrm_output_gso() -> skb_gso_segment()

where skb_gso_segment() relies on skb->protocol to function properly.

This patch sets skb->protocol to ETH_P_IP before dst_output() is called,
fixing a bug where GSO packets sent through a sit tunnel are dropped
when xfrm is involved.

	Cc: stable@vger.kernel.org
	Signed-off-by: Eli Cooper <elicooper@gmx.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f4180439109aa720774baafdd798b3234ab1a0d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ip_output.c
diff --cc net/ipv4/ip_output.c
index c16858e932a4,877bdb02e887..000000000000
--- a/net/ipv4/ip_output.c
+++ b/net/ipv4/ip_output.c
@@@ -101,16 -99,22 +101,32 @@@ static int __ip_local_out_sk(struct soc
  
  	iph->tot_len = htons(skb->len);
  	ip_send_check(iph);
++<<<<<<< HEAD
 +	return nf_hook(NFPROTO_IPV4, NF_INET_LOCAL_OUT, sk, skb, NULL,
 +		       skb_dst(skb)->dev, dst_output_sk);
++=======
+ 
+ 	/* if egress device is enslaved to an L3 master device pass the
+ 	 * skb to its handler for processing
+ 	 */
+ 	skb = l3mdev_ip_out(sk, skb);
+ 	if (unlikely(!skb))
+ 		return 0;
+ 
+ 	skb->protocol = htons(ETH_P_IP);
+ 
+ 	return nf_hook(NFPROTO_IPV4, NF_INET_LOCAL_OUT,
+ 		       net, sk, skb, NULL, skb_dst(skb)->dev,
+ 		       dst_output);
++>>>>>>> f4180439109a (ipv4: Set skb->protocol properly for local output)
 +}
 +
 +int __ip_local_out(struct sk_buff *skb)
 +{
 +	return __ip_local_out_sk(skb->sk, skb);
  }
  
 -int ip_local_out(struct net *net, struct sock *sk, struct sk_buff *skb)
 +int ip_local_out_sk(struct sock *sk, struct sk_buff *skb)
  {
  	int err;
  
* Unmerged path net/ipv4/ip_output.c
