ipv6: Set skb->protocol properly for local output

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eli Cooper <elicooper@gmx.com>
commit b4e479a96fc398ccf83bb1cffb4ffef8631beaf1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b4e479a9.failed

When xfrm is applied to TSO/GSO packets, it follows this path:

    xfrm_output() -> xfrm_output_gso() -> skb_gso_segment()

where skb_gso_segment() relies on skb->protocol to function properly.

This patch sets skb->protocol to ETH_P_IPV6 before dst_output() is called,
fixing a bug where GSO packets sent through an ipip6 tunnel are dropped
when xfrm is involved.

	Cc: stable@vger.kernel.org
	Signed-off-by: Eli Cooper <elicooper@gmx.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b4e479a96fc398ccf83bb1cffb4ffef8631beaf1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/output_core.c
diff --cc net/ipv6/output_core.c
index 5136d74e4677,cd4252346a32..000000000000
--- a/net/ipv6/output_core.c
+++ b/net/ipv6/output_core.c
@@@ -144,14 -146,20 +144,22 @@@ static int __ip6_local_out_sk(struct so
  	if (len > IPV6_MAXPLEN)
  		len = 0;
  	ipv6_hdr(skb)->payload_len = htons(len);
 -	IP6CB(skb)->nhoff = offsetof(struct ipv6hdr, nexthdr);
  
 -	/* if egress device is enslaved to an L3 master device pass the
 -	 * skb to its handler for processing
 -	 */
 -	skb = l3mdev_ip6_out(sk, skb);
 -	if (unlikely(!skb))
 -		return 0;
 +	return nf_hook(NFPROTO_IPV6, NF_INET_LOCAL_OUT, sk, skb,
 +		       NULL, skb_dst(skb)->dev, dst_output_sk);
 +}
  
++<<<<<<< HEAD
 +int __ip6_local_out(struct sk_buff *skb)
 +{
 +	return __ip6_local_out_sk(skb->sk, skb);
++=======
+ 	skb->protocol = htons(ETH_P_IPV6);
+ 
+ 	return nf_hook(NFPROTO_IPV6, NF_INET_LOCAL_OUT,
+ 		       net, sk, skb, NULL, skb_dst(skb)->dev,
+ 		       dst_output);
++>>>>>>> b4e479a96fc3 (ipv6: Set skb->protocol properly for local output)
  }
  EXPORT_SYMBOL_GPL(__ip6_local_out);
  
* Unmerged path net/ipv6/output_core.c
