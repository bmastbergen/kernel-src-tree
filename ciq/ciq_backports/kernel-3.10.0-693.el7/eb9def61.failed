net/mlx4_en: Fix user prio field in XDP forward

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx4_en: Fix user prio field in XDP forward (Don Dutile) [1385329 1417286]
Rebuild_FUZZ: 95.56%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit eb9def61be7197669cab51f43789b53aa7a69509
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/eb9def61.failed

The user prio field is wrong (and overflows) in the XDP forward
flow.
This is a result of a bad value for num_tx_rings_p_up, which should
account all XDP TX rings, as they operate for the same user prio.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Reported-by: Martin KaFai Lau <kafai@fb.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit eb9def61be7197669cab51f43789b53aa7a69509)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/en_netdev.c
diff --cc drivers/net/ethernet/mellanox/mlx4/en_netdev.c
index 8a388253cc66,edbe200ac2fa..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
@@@ -1605,41 -1637,52 +1605,89 @@@ int mlx4_en_start_port(struct net_devic
  		goto rss_err;
  
  	/* Configure tx cq's and rings */
++<<<<<<< HEAD
 +	for (i = 0; i < priv->tx_ring_num; i++) {
 +		/* Configure cq */
 +		cq = priv->tx_cq[i];
 +		err = mlx4_en_activate_cq(priv, cq, i);
 +		if (err) {
 +			en_err(priv, "Failed allocating Tx CQ\n");
 +			goto tx_err;
++=======
+ 	for (t = 0 ; t < MLX4_EN_NUM_TX_TYPES; t++) {
+ 		u8 num_tx_rings_p_up = t == TX ?
+ 			priv->num_tx_rings_p_up : priv->tx_ring_num[t];
+ 
+ 		for (i = 0; i < priv->tx_ring_num[t]; i++) {
+ 			/* Configure cq */
+ 			cq = priv->tx_cq[t][i];
+ 			err = mlx4_en_activate_cq(priv, cq, i);
+ 			if (err) {
+ 				en_err(priv, "Failed allocating Tx CQ\n");
+ 				goto tx_err;
+ 			}
+ 			err = mlx4_en_set_cq_moder(priv, cq);
+ 			if (err) {
+ 				en_err(priv, "Failed setting cq moderation parameters\n");
+ 				mlx4_en_deactivate_cq(priv, cq);
+ 				goto tx_err;
+ 			}
+ 			en_dbg(DRV, priv,
+ 			       "Resetting index of collapsed CQ:%d to -1\n", i);
+ 			cq->buf->wqe_index = cpu_to_be16(0xffff);
+ 
+ 			/* Configure ring */
+ 			tx_ring = priv->tx_ring[t][i];
+ 			err = mlx4_en_activate_tx_ring(priv, tx_ring,
+ 						       cq->mcq.cqn,
+ 						       i / num_tx_rings_p_up);
+ 			if (err) {
+ 				en_err(priv, "Failed allocating Tx ring\n");
+ 				mlx4_en_deactivate_cq(priv, cq);
+ 				goto tx_err;
+ 			}
+ 			if (t != TX_XDP) {
+ 				tx_ring->tx_queue = netdev_get_tx_queue(dev, i);
+ 				tx_ring->recycle_ring = NULL;
+ 			} else {
+ 				mlx4_en_init_recycle_ring(priv, i);
+ 			}
+ 
+ 			/* Arm CQ for TX completions */
+ 			mlx4_en_arm_cq(priv, cq);
+ 
+ 			/* Set initial ownership of all Tx TXBBs to SW (1) */
+ 			for (j = 0; j < tx_ring->buf_size; j += STAMP_STRIDE)
+ 				*((u32 *)(tx_ring->buf + j)) = 0xffffffff;
++>>>>>>> eb9def61be71 (net/mlx4_en: Fix user prio field in XDP forward)
  		}
 +		err = mlx4_en_set_cq_moder(priv, cq);
 +		if (err) {
 +			en_err(priv, "Failed setting cq moderation parameters\n");
 +			mlx4_en_deactivate_cq(priv, cq);
 +			goto tx_err;
 +		}
 +		en_dbg(DRV, priv, "Resetting index of collapsed CQ:%d to -1\n", i);
 +		cq->buf->wqe_index = cpu_to_be16(0xffff);
 +
 +		/* Configure ring */
 +		tx_ring = priv->tx_ring[i];
 +		err = mlx4_en_activate_tx_ring(priv, tx_ring, cq->mcq.cqn,
 +			i / priv->num_tx_rings_p_up);
 +		if (err) {
 +			en_err(priv, "Failed allocating Tx ring\n");
 +			mlx4_en_deactivate_cq(priv, cq);
 +			goto tx_err;
 +		}
 +		tx_ring->tx_queue = netdev_get_tx_queue(dev, i);
 +
 +		/* Arm CQ for TX completions */
 +		mlx4_en_arm_cq(priv, cq);
 +
 +		/* Set initial ownership of all Tx TXBBs to SW (1) */
 +		for (j = 0; j < tx_ring->buf_size; j += STAMP_STRIDE)
 +			*((u32 *) (tx_ring->buf + j)) = 0xffffffff;
 +		++tx_index;
  	}
  
  	/* Configure port */
* Unmerged path drivers/net/ethernet/mellanox/mlx4/en_netdev.c
