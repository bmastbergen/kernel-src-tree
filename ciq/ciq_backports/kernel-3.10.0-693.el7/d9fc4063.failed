ASoC: core: replace codec_dev_list to component_dev_list on Card

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: core: replace codec_dev_list to component_dev_list on Card (Jaroslav Kysela) [1399503]
Rebuild_FUZZ: 95.52%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit d9fc40639dc1b87915426d2ef489a591b0fd650b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d9fc4063.failed

Current Card has Codec list (= codec_dev_list), but Codec will be
removed in the future. Because of this reason, this patch adds
new Component list in Card, and replace Codec list.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit d9fc40639dc1b87915426d2ef489a591b0fd650b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/intel/boards/cht_bsw_rt5672.c
diff --cc sound/soc/intel/boards/cht_bsw_rt5672.c
index fe607d8701a0,dfae9cfa0ac6..000000000000
--- a/sound/soc/intel/boards/cht_bsw_rt5672.c
+++ b/sound/soc/intel/boards/cht_bsw_rt5672.c
@@@ -294,10 -292,12 +294,17 @@@ static struct snd_soc_dai_link cht_dail
  
  static int cht_suspend_pre(struct snd_soc_card *card)
  {
- 	struct snd_soc_codec *codec;
+ 	struct snd_soc_component *component;
  
+ 	list_for_each_entry(component, &card->component_dev_list, card_list) {
+ 		if (!strcmp(component->name, "i2c-10EC5670:00")) {
+ 			struct snd_soc_codec *codec = snd_soc_component_to_codec(component);
+ 
++<<<<<<< HEAD
 +	list_for_each_entry(codec, &card->codec_dev_list, card_list) {
 +		if (!strcmp(codec->component.name, cht_bsw_codec_name)) {
++=======
++>>>>>>> d9fc40639dc1 (ASoC: core: replace codec_dev_list to component_dev_list on Card)
  			dev_dbg(codec->dev, "disabling jack detect before going to suspend.\n");
  			rt5670_jack_suspend(codec);
  			break;
@@@ -308,10 -308,12 +315,17 @@@
  
  static int cht_resume_post(struct snd_soc_card *card)
  {
- 	struct snd_soc_codec *codec;
+ 	struct snd_soc_component *component;
+ 
+ 	list_for_each_entry(component, &card->component_dev_list, card_list) {
+ 		if (!strcmp(component->name, "i2c-10EC5670:00")) {
+ 			struct snd_soc_codec *codec = snd_soc_component_to_codec(component);
  
++<<<<<<< HEAD
 +	list_for_each_entry(codec, &card->codec_dev_list, card_list) {
 +		if (!strcmp(codec->component.name, cht_bsw_codec_name)) {
++=======
++>>>>>>> d9fc40639dc1 (ASoC: core: replace codec_dev_list to component_dev_list on Card)
  			dev_dbg(codec->dev, "enabling jack detect for resume.\n");
  			rt5670_jack_resume(codec);
  			break;
diff --git a/include/sound/soc.h b/include/sound/soc.h
index ef25e86d51ee..99e052d76009 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -799,6 +799,7 @@ struct snd_soc_component {
 
 	struct list_head list;
 	struct list_head list_aux; /* for auxiliary component of the card */
+	struct list_head card_list;
 
 	struct snd_soc_dai_driver *dai_drv;
 	int num_dai;
@@ -857,7 +858,6 @@ struct snd_soc_codec {
 	const struct snd_soc_codec_driver *driver;
 
 	struct list_head list;
-	struct list_head card_list;
 
 	/* runtime */
 	unsigned int cache_bypass:1; /* Suppress access to the cache */
@@ -1167,7 +1167,7 @@ struct snd_soc_card {
 	struct work_struct deferred_resume_work;
 
 	/* lists of probed devices belonging to this card */
-	struct list_head codec_dev_list;
+	struct list_head component_dev_list;
 
 	struct list_head widgets;
 	struct list_head paths;
@@ -1549,11 +1549,11 @@ static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
 
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 {
-	INIT_LIST_HEAD(&card->codec_dev_list);
 	INIT_LIST_HEAD(&card->widgets);
 	INIT_LIST_HEAD(&card->paths);
 	INIT_LIST_HEAD(&card->dapm_list);
 	INIT_LIST_HEAD(&card->aux_comp_list);
+	INIT_LIST_HEAD(&card->component_dev_list);
 }
 
 static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
diff --git a/sound/soc/intel/boards/broadwell.c b/sound/soc/intel/boards/broadwell.c
index 5bb64d164877..4d7e9decfa92 100644
--- a/sound/soc/intel/boards/broadwell.c
+++ b/sound/soc/intel/boards/broadwell.c
@@ -220,10 +220,12 @@ static struct snd_soc_dai_link broadwell_rt286_dais[] = {
 };
 
 static int broadwell_suspend(struct snd_soc_card *card){
-	struct snd_soc_codec *codec;
+	struct snd_soc_component *component;
+
+	list_for_each_entry(component, &card->component_dev_list, card_list) {
+		if (!strcmp(component->name, "i2c-INT343A:00")) {
+			struct snd_soc_codec *codec = snd_soc_component_to_codec(component);
 
-	list_for_each_entry(codec, &card->codec_dev_list, card_list) {
-		if (!strcmp(codec->component.name, "i2c-INT343A:00")) {
 			dev_dbg(codec->dev, "disabling jack detect before going to suspend.\n");
 			rt286_mic_detect(codec, NULL);
 			break;
@@ -233,10 +235,12 @@ static int broadwell_suspend(struct snd_soc_card *card){
 }
 
 static int broadwell_resume(struct snd_soc_card *card){
-	struct snd_soc_codec *codec;
+	struct snd_soc_component *component;
+
+	list_for_each_entry(component, &card->component_dev_list, card_list) {
+		if (!strcmp(component->name, "i2c-INT343A:00")) {
+			struct snd_soc_codec *codec = snd_soc_component_to_codec(component);
 
-	list_for_each_entry(codec, &card->codec_dev_list, card_list) {
-		if (!strcmp(codec->component.name, "i2c-INT343A:00")) {
 			dev_dbg(codec->dev, "enabling jack detect for resume.\n");
 			rt286_mic_detect(codec, &broadwell_headset);
 			break;
* Unmerged path sound/soc/intel/boards/cht_bsw_rt5672.c
diff --git a/sound/soc/soc-core.c b/sound/soc/soc-core.c
index d2e62b159610..a2a261655505 100644
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@ -626,7 +626,7 @@ static void codec2codec_close_delayed_work(struct work_struct *work)
 int snd_soc_suspend(struct device *dev)
 {
 	struct snd_soc_card *card = dev_get_drvdata(dev);
-	struct snd_soc_codec *codec;
+	struct snd_soc_component *component;
 	struct snd_soc_pcm_runtime *rtd;
 	int i;
 
@@ -703,8 +703,12 @@ int snd_soc_suspend(struct device *dev)
 	snd_soc_dapm_sync(&card->dapm);
 
 	/* suspend all CODECs */
-	list_for_each_entry(codec, &card->codec_dev_list, card_list) {
-		struct snd_soc_dapm_context *dapm = snd_soc_codec_get_dapm(codec);
+	list_for_each_entry(component, &card->component_dev_list, card_list) {
+		struct snd_soc_dapm_context *dapm = snd_soc_component_get_dapm(component);
+		struct snd_soc_codec *codec = snd_soc_component_to_codec(component);
+
+		if (!codec)
+			continue;
 
 		/* If there are paths active then the CODEC will be held with
 		 * bias _ON and should not be suspended. */
@@ -768,7 +772,7 @@ static void soc_resume_deferred(struct work_struct *work)
 	struct snd_soc_card *card =
 			container_of(work, struct snd_soc_card, deferred_resume_work);
 	struct snd_soc_pcm_runtime *rtd;
-	struct snd_soc_codec *codec;
+	struct snd_soc_component *component;
 	int i;
 
 	/* our power state is still SNDRV_CTL_POWER_D3hot from suspend time,
@@ -794,7 +798,12 @@ static void soc_resume_deferred(struct work_struct *work)
 			cpu_dai->driver->resume(cpu_dai);
 	}
 
-	list_for_each_entry(codec, &card->codec_dev_list, card_list) {
+	list_for_each_entry(component, &card->component_dev_list, card_list) {
+		struct snd_soc_codec *codec = snd_soc_component_to_codec(component);
+
+		if (!codec)
+			continue;
+
 		if (codec->suspended) {
 			if (codec->driver->resume)
 				codec->driver->resume(codec);
@@ -1060,9 +1069,7 @@ static void soc_remove_component(struct snd_soc_component *component)
 	if (!component->card)
 		return;
 
-	/* This is a HACK and will be removed soon */
-	if (component->codec)
-		list_del(&component->codec->card_list);
+	list_del(&component->card_list);
 
 	if (component->remove)
 		component->remove(component);
@@ -1431,10 +1438,7 @@ static int soc_probe_component(struct snd_soc_card *card,
 					component->num_dapm_routes);
 
 	list_add(&dapm->list, &card->dapm_list);
-
-	/* This is a HACK and will be removed soon */
-	if (component->codec)
-		list_add(&component->codec->card_list, &card->codec_dev_list);
+	list_add(&component->card_list, &card->component_dev_list);
 
 	return 0;
 
