xprtrdma: Cap size of callback buffer resources

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 62aee0e3028614588a14e19979cd3f7b97948505
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/62aee0e3.failed

When the inline threshold size is set to large values (say, 32KB)
any NFSv4.1 CB request from the server gets a reply with status
NFS4ERR_RESOURCE.

Looks like there are some upper layer assumptions about the maximum
size of a reply (for example, in process_op). Cap the size of the
NFSv4 client's reply resources at a page.

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 62aee0e3028614588a14e19979cd3f7b97948505)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtrdma/backchannel.c
diff --cc net/sunrpc/xprtrdma/backchannel.c
index 5b6f45443e47,24fedd4b117e..000000000000
--- a/net/sunrpc/xprtrdma/backchannel.c
+++ b/net/sunrpc/xprtrdma/backchannel.c
@@@ -51,15 -50,14 +51,21 @@@ static int rpcrdma_bc_setup_rqst(struc
  		goto out_fail;
  	req->rl_rdmabuf = rb;
  
 -	size = r_xprt->rx_data.inline_rsize;
 -	rb = rpcrdma_alloc_regbuf(size, DMA_TO_DEVICE, GFP_KERNEL);
 +	size += r_xprt->rx_data.inline_rsize;
 +	rb = rpcrdma_alloc_regbuf(ia, size, GFP_KERNEL);
  	if (IS_ERR(rb))
  		goto out_fail;
 +	rb->rg_owner = req;
  	req->rl_sendbuf = rb;
++<<<<<<< HEAD
 +	/* so that rpcr_to_rdmar works when receiving a request */
 +	rqst->rq_buffer = (void *)req->rl_sendbuf->rg_base;
 +	xdr_buf_init(&rqst->rq_snd_buf, rqst->rq_buffer, size);
++=======
+ 	xdr_buf_init(&rqst->rq_snd_buf, rb->rg_base,
+ 		     min_t(size_t, size, PAGE_SIZE));
+ 	rpcrdma_set_xprtdata(rqst, req);
++>>>>>>> 62aee0e30286 (xprtrdma: Cap size of callback buffer resources)
  	return 0;
  
  out_fail:
* Unmerged path net/sunrpc/xprtrdma/backchannel.c
