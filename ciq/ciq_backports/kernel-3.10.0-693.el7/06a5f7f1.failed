i40e: Move all UDP port notifiers to single function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Alexander Duyck <aduyck@mirantis.com>
commit 06a5f7f167c53d4116c3b13912d082f4116a620f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/06a5f7f1.failed

This patch goes through and combines the notifiers for VXLAN and GENEVE
into a single function for each action.  So there is now one combined
function for getting ports, one for adding the ports, and one for deleting
the ports.

	Signed-off-by: Alexander Duyck <aduyck@mirantis.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 06a5f7f167c53d4116c3b13912d082f4116a620f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/Kconfig
#	drivers/net/ethernet/intel/i40e/i40e_main.c
diff --cc drivers/net/ethernet/intel/Kconfig
index 618a5403f8e0,1fbf9088a4d7..000000000000
--- a/drivers/net/ethernet/intel/Kconfig
+++ b/drivers/net/ethernet/intel/Kconfig
@@@ -281,17 -236,6 +281,20 @@@ config I40
  	  To compile this driver as a module, choose M here. The module
  	  will be called i40e.
  
++<<<<<<< HEAD
 +config I40E_VXLAN
 +	bool "Virtual eXtensible Local Area Network Support"
 +	default n
 +	depends on I40E && VXLAN && !(I40E=y && VXLAN=m)
 +	---help---
 +	  This allows one to create VXLAN virtual interfaces that provide
 +	  Layer 2 Networks over Layer 3 Networks. VXLAN is often used
 +	  to tunnel virtual network infrastructure in virtualized environments.
 +	  Say Y here if you want to use Virtual eXtensible Local Area Network
 +	  (VXLAN) in the driver.
 +
++=======
++>>>>>>> 06a5f7f167c5 (i40e: Move all UDP port notifiers to single function)
  config I40E_DCB
  	bool "Data Center Bridging (DCB) Support"
  	default n
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 860548e5edb1,734cba693d16..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -5369,13 -5337,8 +5364,18 @@@ int i40e_open(struct net_device *netdev
  						       TCP_FLAG_CWR) >> 16);
  	wr32(&pf->hw, I40E_GLLAN_TSOMSK_L, be32_to_cpu(TCP_FLAG_CWR) >> 16);
  
++<<<<<<< HEAD
 +#ifdef CONFIG_I40E_VXLAN
 +	vxlan_get_rx_port(netdev);
 +#endif
 +#ifdef CONFIG_I40E_GENEVE
 +	if (pf->flags & I40E_FLAG_GENEVE_OFFLOAD_CAPABLE)
 +		geneve_get_rx_port(netdev);
 +#endif
++=======
+ 	udp_tunnel_get_rx_info(netdev);
+ 	i40e_notify_client_of_netdev_open(vsi);
++>>>>>>> 06a5f7f167c5 (i40e: Move all UDP port notifiers to single function)
  
  	return 0;
  }
@@@ -9068,15 -8958,9 +9006,21 @@@ static const struct net_device_ops i40e
  	.ndo_get_vf_config	= i40e_ndo_get_vf_config,
  	.ndo_set_vf_link_state	= i40e_ndo_set_vf_link_state,
  	.ndo_set_vf_spoofchk	= i40e_ndo_set_vf_spoofchk,
++<<<<<<< HEAD
 +	.extended.ndo_set_vf_trust	= i40e_ndo_set_vf_trust,
 +#if IS_ENABLED(CONFIG_VXLAN)
 +	.ndo_add_vxlan_port	= i40e_add_vxlan_port,
 +	.ndo_del_vxlan_port	= i40e_del_vxlan_port,
 +#endif
 +#if IS_ENABLED(CONFIG_GENEVE)
 +	.ndo_add_geneve_port	= i40e_add_geneve_port,
 +	.ndo_del_geneve_port	= i40e_del_geneve_port,
 +#endif
++=======
+ 	.ndo_set_vf_trust	= i40e_ndo_set_vf_trust,
+ 	.ndo_udp_tunnel_add	= i40e_udp_tunnel_add,
+ 	.ndo_udp_tunnel_del	= i40e_udp_tunnel_del,
++>>>>>>> 06a5f7f167c5 (i40e: Move all UDP port notifiers to single function)
  	.ndo_get_phys_port_id	= i40e_get_phys_port_id,
  	.ndo_fdb_add		= i40e_ndo_fdb_add,
  	.ndo_features_check	= i40e_features_check,
* Unmerged path drivers/net/ethernet/intel/Kconfig
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
