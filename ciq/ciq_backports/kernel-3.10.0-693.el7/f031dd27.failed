mm, hugetlb: remove resv_map_put

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [mm] hugetlb: remove resv_map_put (Andrea Arcangeli) [1430172]
Rebuild_FUZZ: 93.33%
commit-author Joonsoo Kim <iamjoonsoo.kim@lge.com>
commit f031dd274ccb7069012ede73f537cc81c42fc80b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f031dd27.failed

This is a preparation patch to unify the use of vma_resv_map()
regardless of the map type.  This patch prepares it by removing
resv_map_put(), which only works for HPAGE_RESV_OWNER's resv_map, not
for all resv_maps.

[davidlohr@hp.com: update changelog]
	Signed-off-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Signed-off-by: Davidlohr Bueso <davidlohr@hp.com>
	Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
	Cc: David Gibson <david@gibson.dropbear.id.au>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit f031dd274ccb7069012ede73f537cc81c42fc80b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/hugetlb.c
diff --cc mm/hugetlb.c
index 756884ed9453,c7918cd3a153..000000000000
--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@@ -2587,19 -2271,10 +2587,22 @@@ static void hugetlb_vm_op_open(struct v
  	 * after this open call completes.  It is therefore safe to take a
  	 * new reference here without additional locking.
  	 */
 -	if (resv)
 -		kref_get(&resv->refs);
 +	if (reservations)
 +		kref_get(&reservations->refs);
  }
  
++<<<<<<< HEAD
 +static void resv_map_put(struct vm_area_struct *vma)
 +{
 +	struct resv_map *reservations = vma_resv_map(vma);
 +
 +	if (!reservations)
 +		return;
 +	kref_put(&reservations->refs, resv_map_release);
 +}
 +
++=======
++>>>>>>> f031dd274ccb (mm, hugetlb: remove resv_map_put)
  static void hugetlb_vm_op_close(struct vm_area_struct *vma)
  {
  	struct hstate *h = hstate_vma(vma);
@@@ -2614,9 -2289,9 +2617,9 @@@
  		end = vma_hugecache_offset(h, vma, vma->vm_end);
  
  		reserve = (end - start) -
 -			region_count(resv, start, end);
 +			region_count(reservations, start, end);
  
- 		resv_map_put(vma);
+ 		kref_put(&resv->refs, resv_map_release);
  
  		if (reserve) {
  			hugetlb_acct_memory(h, -reserve);
* Unmerged path mm/hugetlb.c
