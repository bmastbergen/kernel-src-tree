act_pedit: check binding before calling tcf_hash_release()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: act_pedit: check binding before calling tcf_hash_release() (Ivan Vecera) [1428588]
Rebuild_FUZZ: 94.31%
commit-author WANG Cong <xiyou.wangcong@gmail.com>
commit 5175f7106cc55a1bcf97bf7d5ba0900017ebcef8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5175f710.failed

When we share an action within a filter, the bind refcnt
should increase, therefore we should not call tcf_hash_release().

Fixes: 1a29321ed045 ("net_sched: act: Dont increment refcnt on replace")
	Cc: Jamal Hadi Salim <jhs@mojatatu.com>
	Cc: Daniel Borkmann <daniel@iogearbox.net>
	Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: Cong Wang <cwang@twopensource.com>
	Acked-by: Daniel Borkmann <daniel@iogearbox.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5175f7106cc55a1bcf97bf7d5ba0900017ebcef8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_pedit.c
diff --cc net/sched/act_pedit.c
index 0978c6d2f6cf,ff8b466a73f6..000000000000
--- a/net/sched/act_pedit.c
+++ b/net/sched/act_pedit.c
@@@ -83,13 -68,12 +83,17 @@@ static int tcf_pedit_init(struct net *n
  		}
  		ret = ACT_P_CREATED;
  	} else {
++<<<<<<< HEAD
 +		p = to_pedit(pc);
 +		tcf_hash_release(pc, bind, &pedit_hash_info);
++=======
++>>>>>>> 5175f7106cc5 (act_pedit: check binding before calling tcf_hash_release())
  		if (bind)
  			return 0;
+ 		tcf_hash_release(a, bind);
  		if (!ovr)
  			return -EEXIST;
- 
+ 		p = to_pedit(a);
  		if (p->tcfp_nkeys && p->tcfp_nkeys != parm->nkeys) {
  			keys = kmalloc(ksize, GFP_KERNEL);
  			if (keys == NULL)
* Unmerged path net/sched/act_pedit.c
