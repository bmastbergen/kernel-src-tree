flow_dissector: Check for IP fragmentation even if not using IPv4 address

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Alexander Duyck <aduyck@mirantis.com>
commit 918c023f29ab2dd8c63cfcc6a1239ee15933871a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/918c023f.failed

This patch corrects the logic for the IPv4 parsing so that it is consistent
with how we handle IPv6.  Specifically if we do not have the flow key
indicating we want the addresses we still may need to take a look at the IP
fragmentation bits and to see if we should stop after we have recognized
the L3 header.

Fixes: 807e165dc44f ("flow_dissector: Add control/reporting of fragmentation")
	Signed-off-by: Alexander Duyck <aduyck@mirantis.com>
	Acked-by: Tom Herbert <tom@herbertland.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 918c023f29ab2dd8c63cfcc6a1239ee15933871a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/flow_dissector.c
diff --cc net/core/flow_dissector.c
index dae6e57d80c3,1f88f8280280..000000000000
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@@ -145,15 -177,39 +145,44 @@@ ip
  		nhoff += iph->ihl * 4;
  
  		ip_proto = iph->protocol;
 +		if (ip_is_fragment(iph))
 +			ip_proto = 0;
  
++<<<<<<< HEAD
 +		iph_to_flow_copy_addrs(flow, iph);
++=======
+ 		if (dissector_uses_key(flow_dissector,
+ 				       FLOW_DISSECTOR_KEY_IPV4_ADDRS)) {
+ 			key_addrs = skb_flow_dissector_target(flow_dissector,
+ 							      FLOW_DISSECTOR_KEY_IPV4_ADDRS,
+ 							      target_container);
+ 
+ 			memcpy(&key_addrs->v4addrs, &iph->saddr,
+ 			       sizeof(key_addrs->v4addrs));
+ 			key_control->addr_type = FLOW_DISSECTOR_KEY_IPV4_ADDRS;
+ 		}
+ 
+ 		if (ip_is_fragment(iph)) {
+ 			key_control->flags |= FLOW_DIS_IS_FRAGMENT;
+ 
+ 			if (iph->frag_off & htons(IP_OFFSET)) {
+ 				goto out_good;
+ 			} else {
+ 				key_control->flags |= FLOW_DIS_FIRST_FRAG;
+ 				if (!(flags & FLOW_DISSECTOR_F_PARSE_1ST_FRAG))
+ 					goto out_good;
+ 			}
+ 		}
+ 
+ 		if (flags & FLOW_DISSECTOR_F_STOP_AT_L3)
+ 			goto out_good;
+ 
++>>>>>>> 918c023f29ab (flow_dissector: Check for IP fragmentation even if not using IPv4 address)
  		break;
  	}
 -	case htons(ETH_P_IPV6): {
 +	case __constant_htons(ETH_P_IPV6): {
  		const struct ipv6hdr *iph;
  		struct ipv6hdr _iph;
 -
  ipv6:
  		iph = __skb_header_pointer(skb, nhoff, sizeof(_iph), data, hlen, &_iph);
  		if (!iph)
* Unmerged path net/core/flow_dissector.c
