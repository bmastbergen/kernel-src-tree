vfs: Merge check_submounts_and_drop and d_invalidate

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 1ffe46d11cc88479797b262f60d92e5fb461b411
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/1ffe46d1.failed

Now that d_invalidate is the only caller of check_submounts_and_drop,
expand check_submounts_and_drop inline in d_invalidate.

	Reviewed-by: Miklos Szeredi <miklos@szeredi.hu>
	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 1ffe46d11cc88479797b262f60d92e5fb461b411)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/dcache.c
diff --cc fs/dcache.c
index 396c17a096b6,5e02b9eee6b1..000000000000
--- a/fs/dcache.c
+++ b/fs/dcache.c
@@@ -1279,15 -1343,20 +1253,30 @@@ static void check_and_drop(void *_data
  }
  
  /**
++<<<<<<< HEAD
 + * check_submounts_and_drop - prune dcache, check for submounts and drop
 + *
 + * All done as a single atomic operation relative to has_unlinked_ancestor().
 + * Returns 0 if successfully unhashed @parent.  If there were submounts then
 + * return -EBUSY.
 + *
 + * @dentry: dentry to prune and drop
++=======
+  * d_invalidate - detach submounts, prune dcache, and drop
+  * @dentry: dentry to invalidate (aka detach, prune and drop)
+  *
+  * Try to invalidate the dentry if it turns out to be
+  * possible. If there are reasons not to delete it
+  * return -EBUSY. On success return 0.
+  *
+  * no dcache lock.
+  *
+  * The final d_drop is done as an atomic operation relative to
+  * rename_lock ensuring there are no races with d_set_mounted.  This
+  * ensures there are no unhashed dentries on the path to a mountpoint.
++>>>>>>> 1ffe46d11cc8 (vfs: Merge check_submounts_and_drop and d_invalidate)
   */
- int check_submounts_and_drop(struct dentry *dentry)
+ int d_invalidate(struct dentry *dentry)
  {
  	int ret = 0;
  
* Unmerged path fs/dcache.c
diff --git a/include/linux/dcache.h b/include/linux/dcache.h
index cb191dcd4eb7..ad39b1c6ffef 100644
--- a/include/linux/dcache.h
+++ b/include/linux/dcache.h
@@ -270,7 +270,6 @@ extern void d_prune_aliases(struct inode *);
 
 /* test whether we have any submounts in a subdir tree */
 extern int have_submounts(struct dentry *);
-extern int check_submounts_and_drop(struct dentry *);
 
 /*
  * This adds the entry to the hash queues.
