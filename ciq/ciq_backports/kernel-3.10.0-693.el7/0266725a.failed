autofs4: fix some white space errors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Ian Kent <raven@themaw.net>
commit 0266725ad4ee0f8fcf2ee73be8e68c4adbf2ac79
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0266725a.failed

Fix some white space format errors.

	Signed-off-by: Ian Kent <raven@themaw.net>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0266725ad4ee0f8fcf2ee73be8e68c4adbf2ac79)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/autofs4/root.c
diff --cc fs/autofs4/root.c
index c8ae501dec34,18c39824a009..000000000000
--- a/fs/autofs4/root.c
+++ b/fs/autofs4/root.c
@@@ -698,9 -698,8 +698,14 @@@ static int autofs4_dir_rmdir(struct ino
  	struct autofs_sb_info *sbi = autofs4_sbi(dir->i_sb);
  	struct autofs_info *ino = autofs4_dentry_ino(dentry);
  	struct autofs_info *p_ino;
++<<<<<<< HEAD
 +	
 +	DPRINTK("dentry %p, removing %.*s",
 +		dentry, dentry->d_name.len, dentry->d_name.name);
++=======
+ 
+ 	DPRINTK("dentry %p, removing %pd", dentry, dentry);
++>>>>>>> 0266725ad4ee (autofs4: fix some white space errors)
  
  	if (!autofs4_oz_mode(sbi))
  		return -EACCES;
@@@ -877,15 -878,15 +882,20 @@@ static int autofs4_root_ioctl_unlocked(
  	if (_IOC_TYPE(cmd) != _IOC_TYPE(AUTOFS_IOC_FIRST) ||
  	     _IOC_NR(cmd) - _IOC_NR(AUTOFS_IOC_FIRST) >= AUTOFS_IOC_COUNT)
  		return -ENOTTY;
- 	
+ 
  	if (!autofs4_oz_mode(sbi) && !capable(CAP_SYS_ADMIN))
  		return -EPERM;
++<<<<<<< HEAD
 +	
 +	switch(cmd) {
++=======
+ 
+ 	switch (cmd) {
++>>>>>>> 0266725ad4ee (autofs4: fix some white space errors)
  	case AUTOFS_IOC_READY:	/* Wait queue: go ahead and retry */
 -		return autofs4_wait_release(sbi, (autofs_wqt_t) arg, 0);
 +		return autofs4_wait_release(sbi,(autofs_wqt_t)arg,0);
  	case AUTOFS_IOC_FAIL:	/* Wait queue: fail with ENOENT */
 -		return autofs4_wait_release(sbi, (autofs_wqt_t) arg, -ENOENT);
 +		return autofs4_wait_release(sbi,(autofs_wqt_t)arg,-ENOENT);
  	case AUTOFS_IOC_CATATONIC: /* Enter catatonic mode (daemon shutdown) */
  		autofs4_catatonic_mode(sbi);
  		return 0;
diff --git a/fs/autofs4/dev-ioctl.c b/fs/autofs4/dev-ioctl.c
index c954abc974af..015c37db9d73 100644
--- a/fs/autofs4/dev-ioctl.c
+++ b/fs/autofs4/dev-ioctl.c
@@ -765,4 +765,3 @@ void autofs_dev_ioctl_exit(void)
 	misc_deregister(&_autofs_dev_ioctl_misc);
 	return;
 }
-
diff --git a/fs/autofs4/inode.c b/fs/autofs4/inode.c
index 92de65fb4a3a..513dc9b0d1fd 100644
--- a/fs/autofs4/inode.c
+++ b/fs/autofs4/inode.c
@@ -328,7 +328,7 @@ int autofs4_fill_super(struct super_block *s, void *data, int silent)
 	 */
 	s->s_root = root;
 	return 0;
-	
+
 	/*
 	 * Failure ... clean up.
 	 */
* Unmerged path fs/autofs4/root.c
diff --git a/fs/autofs4/waitq.c b/fs/autofs4/waitq.c
index 0bb97d3e9baa..e08b7a8c5fd5 100644
--- a/fs/autofs4/waitq.c
+++ b/fs/autofs4/waitq.c
@@ -89,7 +89,7 @@ static int autofs4_write(struct autofs_sb_info *sbi,
 
 	return (bytes > 0);
 }
-	
+
 static void autofs4_notify_daemon(struct autofs_sb_info *sbi,
 				 struct autofs_wait_queue *wq,
 				 int type)
@@ -564,4 +564,3 @@ int autofs4_wait_release(struct autofs_sb_info *sbi, autofs_wqt_t wait_queue_tok
 
 	return 0;
 }
-
diff --git a/include/uapi/linux/auto_fs.h b/include/uapi/linux/auto_fs.h
index bb991dfe134f..22746e765891 100644
--- a/include/uapi/linux/auto_fs.h
+++ b/include/uapi/linux/auto_fs.h
@@ -51,7 +51,7 @@ struct autofs_packet_hdr {
 
 struct autofs_packet_missing {
 	struct autofs_packet_hdr hdr;
-        autofs_wqt_t wait_queue_token;
+	autofs_wqt_t wait_queue_token;
 	int len;
 	char name[NAME_MAX+1];
 };	
diff --git a/include/uapi/linux/auto_fs4.h b/include/uapi/linux/auto_fs4.h
index e02982fa2953..67cac158e6db 100644
--- a/include/uapi/linux/auto_fs4.h
+++ b/include/uapi/linux/auto_fs4.h
@@ -114,7 +114,7 @@ enum autofs_notify {
 /* v4 multi expire (via pipe) */
 struct autofs_packet_expire_multi {
 	struct autofs_packet_hdr hdr;
-        autofs_wqt_t wait_queue_token;
+	autofs_wqt_t wait_queue_token;
 	int len;
 	char name[NAME_MAX+1];
 };
