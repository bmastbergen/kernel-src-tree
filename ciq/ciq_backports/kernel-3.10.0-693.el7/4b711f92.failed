x86/mce, EDAC/mce_amd: Print MCA_SYND and MCA_IPID during MCE on SMCA systems

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 4b711f92c9b21878794597997ecda1428acc334c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4b711f92.failed

The MCA_SYND and MCA_IPID registers contain valuable information and
should be included in MCE output. The MCA_SYND register contains
syndrome and other error information, and the MCA_IPID register will
uniquely identify the MCA bank's type without having to rely on system
software.

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: http://lkml.kernel.org/r/1472680624-34221-2-git-send-email-Yazen.Ghannam@amd.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 4b711f92c9b21878794597997ecda1428acc334c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/mce_amd.c
diff --cc drivers/edac/mce_amd.c
index 896ecd88aae5,e8855a4f92d9..000000000000
--- a/drivers/edac/mce_amd.c
+++ b/drivers/edac/mce_amd.c
@@@ -801,7 -978,20 +801,24 @@@ int amd_decode_mce(struct notifier_bloc
  	pr_cont("]: 0x%016llx\n", m->status);
  
  	if (m->status & MCI_STATUS_ADDRV)
++<<<<<<< HEAD
 +		pr_emerg(HW_ERR "MC%d Error Address: 0x%016llx\n", m->bank, m->addr);
++=======
+ 		pr_emerg(HW_ERR "Error Addr: 0x%016llx", m->addr);
+ 
+ 	if (boot_cpu_has(X86_FEATURE_SMCA)) {
+ 		if (m->status & MCI_STATUS_SYNDV)
+ 			pr_cont(", Syndrome: 0x%016llx", m->synd);
+ 
+ 		pr_cont(", IPID: 0x%016llx", m->ipid);
+ 
+ 		pr_cont("\n");
+ 
+ 		decode_smca_errors(m);
+ 		goto err_code;
+ 	} else
+ 		pr_cont("\n");
++>>>>>>> 4b711f92c9b2 (x86/mce, EDAC/mce_amd: Print MCA_SYND and MCA_IPID during MCE on SMCA systems)
  
  	if (!fam_ops)
  		goto err_code;
diff --git a/arch/x86/kernel/cpu/mcheck/mce.c b/arch/x86/kernel/cpu/mcheck/mce.c
index 1bfa973429e1..3badb60c6e90 100644
--- a/arch/x86/kernel/cpu/mcheck/mce.c
+++ b/arch/x86/kernel/cpu/mcheck/mce.c
@@ -245,6 +245,13 @@ static void print_mce(struct mce *m)
 	if (m->misc)
 		pr_cont("MISC %llx ", m->misc);
 
+	if (mce_flags.smca) {
+		if (m->synd)
+			pr_cont("SYND %llx ", m->synd);
+		if (m->ipid)
+			pr_cont("IPID %llx ", m->ipid);
+	}
+
 	pr_cont("\n");
 	/*
 	 * Note this output is parsed by external tools and old fields
* Unmerged path drivers/edac/mce_amd.c
