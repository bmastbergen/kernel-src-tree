macvtap: fix use after free for skb_array during release

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jason Wang <jasowang@redhat.com>
commit 104a493390940e85fb7c840a9fd5214aba5cb3bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/104a4933.failed

We've clean skb_array in macvtap_put_queue() but still try to pop from
it during macvtap_sock_destruct(). Fix this use after free by moving
the skb array cleanup to macvtap_sock_destruct() instead.

Fixes: 362899b8725b ("macvtap: switch to use skb array")
	Reported-by: Cornelia Huck <cornelia.huck@de.ibm.com>
	Tested-by: Cornelia Huck <cornelia.huck@de.ibm.com>
	Signed-off-by: Jason Wang <jasowang@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 104a493390940e85fb7c840a9fd5214aba5cb3bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/macvtap.c
diff --cc drivers/net/macvtap.c
index 5f51ecdb243d,070e3290aa6e..000000000000
--- a/drivers/net/macvtap.c
+++ b/drivers/net/macvtap.c
@@@ -514,7 -531,9 +514,13 @@@ static void macvtap_sock_write_space(st
  
  static void macvtap_sock_destruct(struct sock *sk)
  {
++<<<<<<< HEAD
 +	skb_queue_purge(&sk->sk_receive_queue);
++=======
+ 	struct macvtap_queue *q = container_of(sk, struct macvtap_queue, sk);
+ 
+ 	skb_array_cleanup(&q->skb_array);
++>>>>>>> 104a49339094 (macvtap: fix use after free for skb_array during release)
  }
  
  static int macvtap_open(struct inode *inode, struct file *file)
* Unmerged path drivers/net/macvtap.c
