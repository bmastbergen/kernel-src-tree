sched: Pass 'struct rq' to rebalance_domains()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Daniel Lezcano <daniel.lezcano@linaro.org>
commit f7ed0a895ead0f093f59898ff9cf4e20768a5f09
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f7ed0a89.failed

The cpu information is stored in the struct rq and the caller of the
rebalance_domains function pass the cpu to retrieve the struct rq but
it already has the struct rq info. Replace the cpu parameter with the
struct rq.

	Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/1389008085-9069-7-git-send-email-daniel.lezcano@linaro.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit f7ed0a895ead0f093f59898ff9cf4e20768a5f09)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/fair.c
diff --cc kernel/sched/fair.c
index dd57c5095b8c,ff4e0dfaecc6..000000000000
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@@ -7115,17 -6764,12 +7115,26 @@@ static void nohz_idle_balance(struct r
  
  		rq = cpu_rq(balance_cpu);
  
++<<<<<<< HEAD
 +		/*
 +		 * If time for next balance is due,
 +		 * do the balance.
 +		 */
 +		if (time_after_eq(jiffies, rq->next_balance)) {
 +			raw_spin_lock_irq(&rq->lock);
 +			update_rq_clock(rq);
 +			update_idle_cpu_load(rq);
 +			raw_spin_unlock_irq(&rq->lock);
 +			rebalance_domains(balance_cpu, CPU_IDLE);
 +		}
++=======
+ 		raw_spin_lock_irq(&rq->lock);
+ 		update_rq_clock(rq);
+ 		update_idle_cpu_load(rq);
+ 		raw_spin_unlock_irq(&rq->lock);
+ 
+ 		rebalance_domains(rq, CPU_IDLE);
++>>>>>>> f7ed0a895ead (sched: Pass 'struct rq' to rebalance_domains())
  
  		if (time_after(this_rq->next_balance, rq->next_balance))
  			this_rq->next_balance = rq->next_balance;
* Unmerged path kernel/sched/fair.c
