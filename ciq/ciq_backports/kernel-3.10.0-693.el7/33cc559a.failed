scsi: lpfc: replace init_timer by setup_timer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] lpfc: replace init_timer by setup_timer (Ewan Milne) [1384922]
Rebuild_FUZZ: 92.86%
commit-author Tomas Jasek <tomsik68@gmail.com>
commit 33cc559a81397bc813c392617d40ddfdfa3cffbd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/33cc559a.failed

This patch shortens every init_timer in lpfc module followed by function
and data assignment using setup_timer.  This is purely cleanup patch, it
does not add new functionality nor remove any existing functionality.

An init_timer call in this form:

    init_timer(&vport->fc_disctmo);
    vport->fc_disctmo.function = lpfc_disc_timeout;
    vport->fc_disctmo.data = vport;

is shortened to:

    setup_timer(&vport->fc_disctmo, lpfc_disc_timeout, vport);

It increases readability and reduces chances of mistakes done by
developers.

	Signed-off-by: Tomas Jasek <tomsik68@gmail.com>
	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
	Cc: James Smart <james.smart@broadcom.com>
	Cc: Dick Kennedy <dick.kennedy@broadcom.com>
	Cc: "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>
	Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
	Cc: <linux-scsi@vger.kernel.org>
	Acked-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 33cc559a81397bc813c392617d40ddfdfa3cffbd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_init.c
diff --cc drivers/scsi/lpfc/lpfc_init.c
index bbd4080d8122,f395f2e4aa97..000000000000
--- a/drivers/scsi/lpfc/lpfc_init.c
+++ b/drivers/scsi/lpfc/lpfc_init.c
@@@ -4989,48 -5333,112 +4986,85 @@@ lpfc_sli_probe_sriov_nr_virtfn(struct l
  }
  
  /**
 - * lpfc_setup_driver_resource_phase1 - Phase1 etup driver internal resources.
 + * lpfc_sli_driver_resource_setup - Setup driver internal resources for SLI3 dev.
   * @phba: pointer to lpfc hba data structure.
   *
 - * This routine is invoked to set up the driver internal resources before the
 - * device specific resource setup to support the HBA device it attached to.
 + * This routine is invoked to set up the driver internal resources specific to
 + * support the SLI-3 HBA device it attached to.
   *
   * Return codes
 - *	0 - successful
 - *	other values - error
 + * 	0 - successful
 + * 	other values - error
   **/
  static int
 -lpfc_setup_driver_resource_phase1(struct lpfc_hba *phba)
 +lpfc_sli_driver_resource_setup(struct lpfc_hba *phba)
  {
 -	struct lpfc_sli *psli = &phba->sli;
 +	struct lpfc_sli *psli;
 +	int rc;
  
  	/*
 -	 * Driver resources common to all SLI revisions
 +	 * Initialize timers used by driver
  	 */
 -	atomic_set(&phba->fast_event_count, 0);
 -	spin_lock_init(&phba->hbalock);
  
 -	/* Initialize ndlp management spinlock */
 -	spin_lock_init(&phba->ndlp_lock);
 -
 -	INIT_LIST_HEAD(&phba->port_list);
 -	INIT_LIST_HEAD(&phba->work_list);
 -	init_waitqueue_head(&phba->wait_4_mlo_m_q);
 -
 -	/* Initialize the wait queue head for the kernel thread */
 -	init_waitqueue_head(&phba->work_waitq);
 -
 -	lpfc_printf_log(phba, KERN_INFO, LOG_INIT,
 -			"1403 Protocols supported %s %s %s\n",
 -			((phba->cfg_enable_fc4_type & LPFC_ENABLE_FCP) ?
 -				"SCSI" : " "),
 -			((phba->cfg_enable_fc4_type & LPFC_ENABLE_NVME) ?
 -				"NVME" : " "),
 -			(phba->nvmet_support ? "NVMET" : " "));
 -
 -	if (phba->cfg_enable_fc4_type & LPFC_ENABLE_FCP) {
 -		/* Initialize the scsi buffer list used by driver for scsi IO */
 -		spin_lock_init(&phba->scsi_buf_list_get_lock);
 -		INIT_LIST_HEAD(&phba->lpfc_scsi_buf_list_get);
 -		spin_lock_init(&phba->scsi_buf_list_put_lock);
 -		INIT_LIST_HEAD(&phba->lpfc_scsi_buf_list_put);
 -	}
 -
 -	if ((phba->cfg_enable_fc4_type & LPFC_ENABLE_NVME) &&
 -		(phba->nvmet_support == 0)) {
 -		/* Initialize the NVME buffer list used by driver for NVME IO */
 -		spin_lock_init(&phba->nvme_buf_list_get_lock);
 -		INIT_LIST_HEAD(&phba->lpfc_nvme_buf_list_get);
 -		spin_lock_init(&phba->nvme_buf_list_put_lock);
 -		INIT_LIST_HEAD(&phba->lpfc_nvme_buf_list_put);
 -	}
 -
 -	/* Initialize the fabric iocb list */
 -	INIT_LIST_HEAD(&phba->fabric_iocb_list);
 -
 -	/* Initialize list to save ELS buffers */
 -	INIT_LIST_HEAD(&phba->elsbuf);
 -
 -	/* Initialize FCF connection rec list */
 -	INIT_LIST_HEAD(&phba->fcf_conn_rec_list);
 -
 -	/* Initialize OAS configuration list */
 -	spin_lock_init(&phba->devicelock);
 -	INIT_LIST_HEAD(&phba->luns);
 +	/* Heartbeat timer */
 +	init_timer(&phba->hb_tmofunc);
 +	phba->hb_tmofunc.function = lpfc_hb_timeout;
 +	phba->hb_tmofunc.data = (unsigned long)phba;
  
 +	psli = &phba->sli;
  	/* MBOX heartbeat timer */
++<<<<<<< HEAD
 +	init_timer(&psli->mbox_tmo);
 +	psli->mbox_tmo.function = lpfc_mbox_timeout;
 +	psli->mbox_tmo.data = (unsigned long) phba;
 +	/* FCP polling mode timer */
 +	init_timer(&phba->fcp_poll_timer);
 +	phba->fcp_poll_timer.function = lpfc_poll_timeout;
 +	phba->fcp_poll_timer.data = (unsigned long) phba;
++=======
+ 	setup_timer(&psli->mbox_tmo, lpfc_mbox_timeout, (unsigned long)phba);
++>>>>>>> 33cc559a8139 (scsi: lpfc: replace init_timer by setup_timer)
  	/* Fabric block timer */
- 	init_timer(&phba->fabric_block_timer);
- 	phba->fabric_block_timer.function = lpfc_fabric_block_timeout;
- 	phba->fabric_block_timer.data = (unsigned long) phba;
+ 	setup_timer(&phba->fabric_block_timer, lpfc_fabric_block_timeout,
+ 			(unsigned long)phba);
  	/* EA polling mode timer */
++<<<<<<< HEAD
 +	init_timer(&phba->eratt_poll);
 +	phba->eratt_poll.function = lpfc_poll_eratt;
 +	phba->eratt_poll.data = (unsigned long) phba;
++=======
+ 	setup_timer(&phba->eratt_poll, lpfc_poll_eratt,
+ 			(unsigned long)phba);
+ 	/* Heartbeat timer */
+ 	setup_timer(&phba->hb_tmofunc, lpfc_hb_timeout, (unsigned long)phba);
+ 
+ 	return 0;
+ }
+ 
+ /**
+  * lpfc_sli_driver_resource_setup - Setup driver internal resources for SLI3 dev
+  * @phba: pointer to lpfc hba data structure.
+  *
+  * This routine is invoked to set up the driver internal resources specific to
+  * support the SLI-3 HBA device it attached to.
+  *
+  * Return codes
+  * 0 - successful
+  * other values - error
+  **/
+ static int
+ lpfc_sli_driver_resource_setup(struct lpfc_hba *phba)
+ {
+ 	int rc;
+ 
+ 	/*
+ 	 * Initialize timers used by driver
+ 	 */
+ 
+ 	/* FCP polling mode timer */
+ 	setup_timer(&phba->fcp_poll_timer, lpfc_poll_timeout,
+ 			(unsigned long)phba);
++>>>>>>> 33cc559a8139 (scsi: lpfc: replace init_timer by setup_timer)
  
  	/* Host attention work mask setup */
  	phba->work_ha_mask = (HA_ERATT | HA_MBATT | HA_LATT);
@@@ -5184,31 -5607,11 +5218,34 @@@ lpfc_sli4_driver_resource_setup(struct 
  	 * Initialize timers used by driver
  	 */
  
++<<<<<<< HEAD
 +	/* Heartbeat timer */
 +	init_timer(&phba->hb_tmofunc);
 +	phba->hb_tmofunc.function = lpfc_hb_timeout;
 +	phba->hb_tmofunc.data = (unsigned long)phba;
 +	init_timer(&phba->rrq_tmr);
 +	phba->rrq_tmr.function = lpfc_rrq_timeout;
 +	phba->rrq_tmr.data = (unsigned long)phba;
++=======
+ 	setup_timer(&phba->rrq_tmr, lpfc_rrq_timeout, (unsigned long)phba);
++>>>>>>> 33cc559a8139 (scsi: lpfc: replace init_timer by setup_timer)
  
 +	psli = &phba->sli;
 +	/* MBOX heartbeat timer */
 +	init_timer(&psli->mbox_tmo);
 +	psli->mbox_tmo.function = lpfc_mbox_timeout;
 +	psli->mbox_tmo.data = (unsigned long) phba;
 +	/* Fabric block timer */
 +	init_timer(&phba->fabric_block_timer);
 +	phba->fabric_block_timer.function = lpfc_fabric_block_timeout;
 +	phba->fabric_block_timer.data = (unsigned long) phba;
 +	/* EA polling mode timer */
 +	init_timer(&phba->eratt_poll);
 +	phba->eratt_poll.function = lpfc_poll_eratt;
 +	phba->eratt_poll.data = (unsigned long) phba;
  	/* FCF rediscover timer */
- 	init_timer(&phba->fcf.redisc_wait);
- 	phba->fcf.redisc_wait.function = lpfc_sli4_fcf_redisc_wait_tmo;
- 	phba->fcf.redisc_wait.data = (unsigned long)phba;
+ 	setup_timer(&phba->fcf.redisc_wait, lpfc_sli4_fcf_redisc_wait_tmo,
+ 			(unsigned long)phba);
  
  	/*
  	 * Control structure for handling external multi-buffer mailbox
diff --git a/drivers/scsi/lpfc/lpfc_hbadisc.c b/drivers/scsi/lpfc/lpfc_hbadisc.c
index 27f6a0bdf820..f5bb27dcaf5a 100644
--- a/drivers/scsi/lpfc/lpfc_hbadisc.c
+++ b/drivers/scsi/lpfc/lpfc_hbadisc.c
@@ -4203,9 +4203,8 @@ lpfc_initialize_node(struct lpfc_vport *vport, struct lpfc_nodelist *ndlp,
 {
 	INIT_LIST_HEAD(&ndlp->els_retry_evt.evt_listp);
 	INIT_LIST_HEAD(&ndlp->dev_loss_evt.evt_listp);
-	init_timer(&ndlp->nlp_delayfunc);
-	ndlp->nlp_delayfunc.function = lpfc_els_retry_delay;
-	ndlp->nlp_delayfunc.data = (unsigned long)ndlp;
+	setup_timer(&ndlp->nlp_delayfunc, lpfc_els_retry_delay,
+			(unsigned long)ndlp);
 	ndlp->nlp_DID = did;
 	ndlp->vport = vport;
 	ndlp->phba = vport->phba;
* Unmerged path drivers/scsi/lpfc/lpfc_init.c
