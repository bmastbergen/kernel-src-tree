xgbe: constify get_netdev_ops and get_ethtool_ops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author stephen hemminger <stephen@networkplumber.org>
commit ce0b15d1103102b78ad95739fa71e62fb16774bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/ce0b15d1.failed

Casting away const is bad practice. Since this is ARM specific driver
don't have hardware actually test this.

Having getter functions for ops is really unnecessary code bloat, but
not going to touch that.

	Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ce0b15d1103102b78ad95739fa71e62fb16774bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe.h
diff --cc drivers/net/ethernet/amd/xgbe/xgbe.h
index 1903f878545a,5dd17dcea2f8..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe.h
+++ b/drivers/net/ethernet/amd/xgbe/xgbe.h
@@@ -624,16 -954,20 +624,25 @@@ struct xgbe_prv_data 
  /* Function prototypes*/
  
  void xgbe_init_function_ptrs_dev(struct xgbe_hw_if *);
 -void xgbe_init_function_ptrs_phy(struct xgbe_phy_if *);
  void xgbe_init_function_ptrs_desc(struct xgbe_desc_if *);
++<<<<<<< HEAD
 +struct net_device_ops *xgbe_get_netdev_ops(void);
 +struct ethtool_ops *xgbe_get_ethtool_ops(void);
++=======
+ const struct net_device_ops *xgbe_get_netdev_ops(void);
+ const struct ethtool_ops *xgbe_get_ethtool_ops(void);
+ 
+ #ifdef CONFIG_AMD_XGBE_DCB
+ const struct dcbnl_rtnl_ops *xgbe_get_dcbnl_ops(void);
+ #endif
++>>>>>>> ce0b15d11031 (xgbe: constify get_netdev_ops and get_ethtool_ops)
  
 -void xgbe_ptp_register(struct xgbe_prv_data *);
 -void xgbe_ptp_unregister(struct xgbe_prv_data *);
 -void xgbe_dump_tx_desc(struct xgbe_prv_data *, struct xgbe_ring *,
 -		       unsigned int, unsigned int, unsigned int);
 -void xgbe_dump_rx_desc(struct xgbe_prv_data *, struct xgbe_ring *,
 +int xgbe_mdio_register(struct xgbe_prv_data *);
 +void xgbe_mdio_unregister(struct xgbe_prv_data *);
 +void xgbe_dump_phy_registers(struct xgbe_prv_data *);
 +void xgbe_dump_tx_desc(struct xgbe_ring *, unsigned int, unsigned int,
 +		       unsigned int);
 +void xgbe_dump_rx_desc(struct xgbe_ring *, struct xgbe_ring_desc *,
  		       unsigned int);
  void xgbe_print_pkt(struct net_device *, struct sk_buff *, bool);
  void xgbe_get_all_hw_features(struct xgbe_prv_data *);
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
index d58e85811bc9..4919253a8625 100644
--- a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
@@ -1077,9 +1077,9 @@ static const struct net_device_ops xgbe_netdev_ops = {
 	.ndo_set_features	= xgbe_set_features,
 };
 
-struct net_device_ops *xgbe_get_netdev_ops(void)
+const struct net_device_ops *xgbe_get_netdev_ops(void)
 {
-	return (struct net_device_ops *)&xgbe_netdev_ops;
+	return &xgbe_netdev_ops;
 }
 
 static void xgbe_rx_refresh(struct xgbe_channel *channel)
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c b/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
index 95b1fbb7677f..931ee244038d 100644
--- a/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
@@ -518,7 +518,7 @@ static const struct ethtool_ops xgbe_ethtool_ops = {
 	.get_sset_count = xgbe_get_sset_count,
 };
 
-struct ethtool_ops *xgbe_get_ethtool_ops(void)
+const struct ethtool_ops *xgbe_get_ethtool_ops(void)
 {
-	return (struct ethtool_ops *)&xgbe_ethtool_ops;
+	return &xgbe_ethtool_ops;
 }
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe.h
