flow_dissector: Add control/reporting of fragmentation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Tom Herbert <tom@herbertland.com>
commit 807e165dc44fd93f9d378f861f0540a158d7343a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/807e165d.failed

Add an input flag to flow dissector on rather dissection should be
attempted on a first fragment. Also add key_control flags to indicate
that a packet is a fragment or first fragment.

	Signed-off-by: Tom Herbert <tom@herbertland.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 807e165dc44fd93f9d378f861f0540a158d7343a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/flow_dissector.h
#	net/core/flow_dissector.c
diff --cc net/core/flow_dissector.c
index c177964713d3,7536a4669029..000000000000
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@@ -145,15 -177,36 +145,38 @@@ ip
  		nhoff += iph->ihl * 4;
  
  		ip_proto = iph->protocol;
- 		if (ip_is_fragment(iph))
- 			ip_proto = 0;
  
++<<<<<<< HEAD
 +		iph_to_flow_copy_addrs(flow, iph);
++=======
+ 		if (!skb_flow_dissector_uses_key(flow_dissector,
+ 						 FLOW_DISSECTOR_KEY_IPV4_ADDRS))
+ 			break;
+ 
+ 		key_addrs = skb_flow_dissector_target(flow_dissector,
+ 			      FLOW_DISSECTOR_KEY_IPV4_ADDRS, target_container);
+ 		memcpy(&key_addrs->v4addrs, &iph->saddr,
+ 		       sizeof(key_addrs->v4addrs));
+ 		key_control->addr_type = FLOW_DISSECTOR_KEY_IPV4_ADDRS;
+ 
+ 		if (ip_is_fragment(iph)) {
+ 			key_control->is_fragment = 1;
+ 
+ 			if (iph->frag_off & htons(IP_OFFSET)) {
+ 				goto out_good;
+ 			} else {
+ 				key_control->first_frag = 1;
+ 				if (!(flags & FLOW_DISSECTOR_F_PARSE_1ST_FRAG))
+ 					goto out_good;
+ 			}
+ 		}
+ 
++>>>>>>> 807e165dc44f (flow_dissector: Add control/reporting of fragmentation)
  		break;
  	}
 -	case htons(ETH_P_IPV6): {
 +	case __constant_htons(ETH_P_IPV6): {
  		const struct ipv6hdr *iph;
  		struct ipv6hdr _iph;
 -		__be32 flow_label;
 -
  ipv6:
  		iph = __skb_header_pointer(skb, nhoff, sizeof(_iph), data, hlen, &_iph);
  		if (!iph)
* Unmerged path include/net/flow_dissector.h
* Unmerged path include/net/flow_dissector.h
* Unmerged path net/core/flow_dissector.c
