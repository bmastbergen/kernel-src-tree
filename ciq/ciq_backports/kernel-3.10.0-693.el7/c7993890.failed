x86/amd_nb: Make amd_northbridges internal to amd_nb.c

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] amd_nb: Make amd_northbridges internal to amd_nb.c (Suravee Suthikulpanit) [1303712]
Rebuild_FUZZ: 96.15%
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit c7993890e772c450764d39ba872444307bbdd460
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c7993890.failed

Hide amd_northbridges in amd_nb.c so that external callers will have to
use the exported accessor functions.

Also, fix some checkpatch.pl warnings.

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
	Cc: x86-ml <x86@kernel.org>
Link: http://lkml.kernel.org/r/1478812257-5424-2-git-send-email-Yazen.Ghannam@amd.com
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit c7993890e772c450764d39ba872444307bbdd460)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/amd_nb.c
diff --cc arch/x86/kernel/amd_nb.c
index 15d1102b9e99,015328901896..000000000000
--- a/arch/x86/kernel/amd_nb.c
+++ b/arch/x86/kernel/amd_nb.c
@@@ -223,20 -240,18 +240,32 @@@ static int amd_cache_gart(void
  {
  	u16 i;
  
 -	if (!amd_nb_has_feature(AMD_NB_GART))
 -		return;
 +       if (!amd_nb_has_feature(AMD_NB_GART))
 +               return 0;
 +
++<<<<<<< HEAD
 +       flush_words = kmalloc(amd_nb_num() * sizeof(u32), GFP_KERNEL);
 +       if (!flush_words) {
 +               amd_northbridges.flags &= ~AMD_NB_GART;
 +               return -ENOMEM;
 +       }
 +
 +       for (i = 0; i != amd_nb_num(); i++)
 +               pci_read_config_dword(node_to_amd_nb(i)->misc, 0x9c,
 +                                     &flush_words[i]);
  
 +       return 0;
++=======
+ 	flush_words = kmalloc_array(amd_northbridges.num, sizeof(u32), GFP_KERNEL);
+ 	if (!flush_words) {
+ 		amd_northbridges.flags &= ~AMD_NB_GART;
+ 		pr_notice("Cannot initialize GART flush words, GART support disabled\n");
+ 		return;
+ 	}
+ 
+ 	for (i = 0; i != amd_northbridges.num; i++)
+ 		pci_read_config_dword(node_to_amd_nb(i)->misc, 0x9c, &flush_words[i]);
++>>>>>>> c7993890e772 (x86/amd_nb: Make amd_northbridges internal to amd_nb.c)
  }
  
  void amd_flush_garts(void)
diff --git a/arch/x86/include/asm/amd_nb.h b/arch/x86/include/asm/amd_nb.h
index 68d2b9f95165..f2695f913dd8 100644
--- a/arch/x86/include/asm/amd_nb.h
+++ b/arch/x86/include/asm/amd_nb.h
@@ -66,7 +66,6 @@ struct amd_northbridge_info {
 	u64 flags;
 	struct amd_northbridge *nb;
 };
-extern struct amd_northbridge_info amd_northbridges;
 
 #define AMD_NB_GART			BIT(0)
 #define AMD_NB_L3_INDEX_DISABLE		BIT(1)
@@ -74,20 +73,9 @@ extern struct amd_northbridge_info amd_northbridges;
 
 #ifdef CONFIG_AMD_NB
 
-static inline u16 amd_nb_num(void)
-{
-	return amd_northbridges.num;
-}
-
-static inline bool amd_nb_has_feature(unsigned feature)
-{
-	return ((amd_northbridges.flags & feature) == feature);
-}
-
-static inline struct amd_northbridge *node_to_amd_nb(int node)
-{
-	return (node < amd_northbridges.num) ? &amd_northbridges.nb[node] : NULL;
-}
+u16 amd_nb_num(void);
+bool amd_nb_has_feature(unsigned int feature);
+struct amd_northbridge *node_to_amd_nb(int node);
 
 static inline u16 amd_get_node_id(struct pci_dev *pdev)
 {
* Unmerged path arch/x86/kernel/amd_nb.c
