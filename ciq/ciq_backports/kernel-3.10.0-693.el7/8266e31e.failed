x86, ptdump: Add section for EFI runtime services

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] ptdump: Add section for EFI runtime services (Baoquan He) [1424943]
Rebuild_FUZZ: 94.62%
commit-author Mathias Krause <minipli@googlemail.com>
commit 8266e31ed0fedb7ee16ebc86e80468f7cc1bbb4e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8266e31e.failed

In commit 3891a04aafd6 ("x86-64, espfix: Don't leak bits 31:16 of %esp
returning..") the "ESPFix Area" was added to the page table dump special
sections. That area, though, has a limited amount of entries printed.

The EFI runtime services are, unfortunately, located in-between the
espfix area and the high kernel memory mapping. Due to the enforced
limitation for the espfix area, the EFI mappings won't be printed in the
page table dump.

To make the ESP runtime service mappings visible again, provide them a
dedicated entry.

	Signed-off-by: Mathias Krause <minipli@googlemail.com>
	Acked-by: Borislav Petkov <bp@suse.de>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Signed-off-by: Matt Fleming <matt.fleming@intel.com>
(cherry picked from commit 8266e31ed0fedb7ee16ebc86e80468f7cc1bbb4e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/pgtable_64_types.h
#	arch/x86/mm/dump_pagetables.c
diff --cc arch/x86/include/asm/pgtable_64_types.h
index 2d883440cb9a,602b6028c5b6..000000000000
--- a/arch/x86/include/asm/pgtable_64_types.h
+++ b/arch/x86/include/asm/pgtable_64_types.h
@@@ -58,9 -58,13 +58,16 @@@ typedef struct { pteval_t pte; } pte_t
  #define VMALLOC_START    _AC(0xffffc90000000000, UL)
  #define VMALLOC_END      _AC(0xffffe8ffffffffff, UL)
  #define VMEMMAP_START	 _AC(0xffffea0000000000, UL)
 -#define MODULES_VADDR    (__START_KERNEL_map + KERNEL_IMAGE_SIZE)
 +#define MODULES_VADDR    _AC(0xffffffffa0000000, UL)
  #define MODULES_END      _AC(0xffffffffff000000, UL)
  #define MODULES_LEN   (MODULES_END - MODULES_VADDR)
++<<<<<<< HEAD
++=======
+ #define ESPFIX_PGD_ENTRY _AC(-2, UL)
+ #define ESPFIX_BASE_ADDR (ESPFIX_PGD_ENTRY << PGDIR_SHIFT)
+ #define EFI_VA_START	 ( -4 * (_AC(1, UL) << 30))
+ #define EFI_VA_END	 (-68 * (_AC(1, UL) << 30))
++>>>>>>> 8266e31ed0fe (x86, ptdump: Add section for EFI runtime services)
  
  #define EARLY_DYNAMIC_PAGE_TABLES	64
  
diff --cc arch/x86/mm/dump_pagetables.c
index 20621d753d5f,1a8053d1012e..000000000000
--- a/arch/x86/mm/dump_pagetables.c
+++ b/arch/x86/mm/dump_pagetables.c
@@@ -68,6 -73,12 +68,15 @@@ static struct addr_marker address_marke
  	{ PAGE_OFFSET,		"Low Kernel Mapping" },
  	{ VMALLOC_START,        "vmalloc() Area" },
  	{ VMEMMAP_START,        "Vmemmap" },
++<<<<<<< HEAD
++=======
+ # ifdef CONFIG_X86_ESPFIX64
+ 	{ ESPFIX_BASE_ADDR,	"ESPfix Area", 16 },
+ # endif
+ # ifdef CONFIG_EFI
+ 	{ EFI_VA_END,		"EFI Runtime Services" },
+ # endif
++>>>>>>> 8266e31ed0fe (x86, ptdump: Add section for EFI runtime services)
  	{ __START_KERNEL_map,   "High Kernel Mapping" },
  	{ MODULES_VADDR,        "Modules" },
  	{ MODULES_END,          "End Modules" },
* Unmerged path arch/x86/include/asm/pgtable_64_types.h
* Unmerged path arch/x86/mm/dump_pagetables.c
diff --git a/arch/x86/platform/efi/efi_64.c b/arch/x86/platform/efi/efi_64.c
index 319a8a40b098..c74dfc8a4677 100644
--- a/arch/x86/platform/efi/efi_64.c
+++ b/arch/x86/platform/efi/efi_64.c
@@ -48,8 +48,7 @@ static unsigned long efi_flags __initdata;
  * We allocate runtime services regions bottom-up, starting from -4G, i.e.
  * 0xffff_ffff_0000_0000 and limit EFI VA mapping space to 64G.
  */
-static u64 efi_va	= -4 * (1UL << 30);
-#define EFI_VA_END	(-68 * (1UL << 30))
+static u64 efi_va = EFI_VA_START;
 
 /*
  * Scratch space used for switching the pagetable in the EFI stub
