NFS: Fix old dentry rehash after move

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Benjamin Coddington <bcodding@redhat.com>
commit d4ea7e3c5c0e341c15b073016dbf3ab6c65f12f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d4ea7e3c.failed

Now that nfs_rename()'s d_move has moved within the RPC task's rpc_call_done
callback, rehashing new_dentry will actually rehash the old dentry's name
in nfs_rename().  d_move() is going to rehash the new dentry for us anyway,
so doing it again here is unnecessary.

	Reported-by: Chuck Lever <chuck.lever@oracle.com>
Fixes: 920b4530fb80 ("NFS: nfs_rename() handle -ERESTARTSYS dentry left behind")
	Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
	Tested-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit d4ea7e3c5c0e341c15b073016dbf3ab6c65f12f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/dir.c
diff --cc fs/nfs/dir.c
index 770fe7b74079,f92ba8d6c556..000000000000
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@@ -2014,11 -2050,12 +2014,17 @@@ nfs_complete_rename(struct rpc_task *ta
   * the rename.
   */
  int nfs_rename(struct inode *old_dir, struct dentry *old_dentry,
 -	       struct inode *new_dir, struct dentry *new_dentry,
 -	       unsigned int flags)
 +		      struct inode *new_dir, struct dentry *new_dentry)
  {
++<<<<<<< HEAD
 +	struct inode *old_inode = old_dentry->d_inode;
 +	struct inode *new_inode = new_dentry->d_inode;
 +	struct dentry *dentry = NULL, *rehash = NULL;
++=======
+ 	struct inode *old_inode = d_inode(old_dentry);
+ 	struct inode *new_inode = d_inode(new_dentry);
+ 	struct dentry *dentry = NULL;
++>>>>>>> d4ea7e3c5c0e (NFS: Fix old dentry rehash after move)
  	struct rpc_task *task;
  	int error = -EBUSY;
  
* Unmerged path fs/nfs/dir.c
