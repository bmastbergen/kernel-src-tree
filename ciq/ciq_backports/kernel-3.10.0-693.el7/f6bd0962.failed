i40e: enable VSI broadcast promiscuous mode instead of adding broadcast filter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Kiran Patil <kiran.patil@intel.com>
commit f6bd09625ba66446821d55c61891bea9e2cdc5b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f6bd0962.failed

This patch sets VSI broadcast promiscuous mode during VSI add sequence
and prevents adding MAC filter if specified MAC address is broadcast.

Change-ID: Ia62251fca095bc449d0497fc44bec3a5a0136773
	Signed-off-by: Kiran Patil <kiran.patil@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit f6bd09625ba66446821d55c61891bea9e2cdc5b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_main.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 9124f91adb40,1592dcbed790..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -2170,27 -2152,12 +2177,30 @@@ int i40e_sync_vsi_filters(struct i40e_v
  			if (aq_ret) {
  				retval =
  				i40e_aq_rc_to_posix(aq_ret,
 -						    pf->hw.aq.asq_last_status);
 +						    hw->aq.asq_last_status);
  				dev_info(&pf->pdev->dev,
 -					 "set multicast promisc failed, err %d, aq_err %d\n",
 -					 aq_ret, pf->hw.aq.asq_last_status);
 +					 "set multicast promisc failed on %s, err %s, aq_err %s\n",
 +					 vsi_name,
 +					 i40e_stat_str(hw, aq_ret),
 +					 i40e_aq_str(hw,
 +						     hw->aq.asq_last_status));
  			}
  		}
++<<<<<<< HEAD
 +		aq_ret = i40e_aq_set_vsi_broadcast(&vsi->back->hw,
 +						   vsi->seid,
 +						   cur_promisc, NULL);
 +		if (aq_ret) {
 +			retval = i40e_aq_rc_to_posix(aq_ret,
 +						     pf->hw.aq.asq_last_status);
 +			dev_info(&pf->pdev->dev,
 +				 "set brdcast promisc failed, err %s, aq_err %s\n",
 +					 i40e_stat_str(hw, aq_ret),
 +					 i40e_aq_str(hw,
 +						     hw->aq.asq_last_status));
 +		}
++=======
++>>>>>>> f6bd09625ba6 (i40e: enable VSI broadcast promiscuous mode instead of adding broadcast filter)
  	}
  out:
  	/* if something went wrong then set the changed flag so we try again */
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
