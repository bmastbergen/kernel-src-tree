bridge: mdb: Passing the port-group pointer to br_mdb module

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Elad Raz <eladr@mellanox.com>
commit 9e8430f8d60d985c9f292b5eb5790cc13a87200c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9e8430f8.failed

Passing the port-group to br_mdb in order to allow direct access to the
structure. br_mdb will later use the structure to reflect HW reflection
status via "state" variable.

	Signed-off-by: Elad Raz <eladr@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9e8430f8d60d985c9f292b5eb5790cc13a87200c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_mdb.c
#	net/bridge/br_multicast.c
#	net/bridge/br_private.h
diff --cc net/bridge/br_mdb.c
index 66d85f7b04f3,ac089286526e..000000000000
--- a/net/bridge/br_mdb.c
+++ b/net/bridge/br_mdb.c
@@@ -251,19 -264,88 +254,30 @@@ errout
  	rtnl_set_sk_err(net, RTNLGRP_MDB, err);
  }
  
++<<<<<<< HEAD
 +void br_mdb_notify(struct net_device *dev, struct net_bridge_port *port,
 +		   struct br_ip *group, int type)
++=======
+ void br_mdb_notify(struct net_device *dev, struct net_bridge_port_group *pg,
+ 		   int type)
++>>>>>>> 9e8430f8d60d (bridge: mdb: Passing the port-group pointer to br_mdb module)
  {
  	struct br_mdb_entry entry;
  
  	memset(&entry, 0, sizeof(entry));
- 	entry.ifindex = port->dev->ifindex;
- 	entry.addr.proto = group->proto;
- 	entry.addr.u.ip4 = group->u.ip4;
+ 	entry.ifindex = pg->port->dev->ifindex;
+ 	entry.addr.proto = pg->addr.proto;
+ 	entry.addr.u.ip4 = pg->addr.u.ip4;
  #if IS_ENABLED(CONFIG_IPV6)
- 	entry.addr.u.ip6 = group->u.ip6;
+ 	entry.addr.u.ip6 = pg->addr.u.ip6;
  #endif
++<<<<<<< HEAD
 +	__br_mdb_notify(dev, &entry, type);
++=======
+ 	entry.vid = pg->addr.vid;
+ 	__mdb_entry_fill_flags(&entry, pg->flags);
+ 	__br_mdb_notify(dev, &entry, type, pg);
 -}
 -
 -static int nlmsg_populate_rtr_fill(struct sk_buff *skb,
 -				   struct net_device *dev,
 -				   int ifindex, u32 pid,
 -				   u32 seq, int type, unsigned int flags)
 -{
 -	struct br_port_msg *bpm;
 -	struct nlmsghdr *nlh;
 -	struct nlattr *nest;
 -
 -	nlh = nlmsg_put(skb, pid, seq, type, sizeof(*bpm), NLM_F_MULTI);
 -	if (!nlh)
 -		return -EMSGSIZE;
 -
 -	bpm = nlmsg_data(nlh);
 -	memset(bpm, 0, sizeof(*bpm));
 -	bpm->family = AF_BRIDGE;
 -	bpm->ifindex = dev->ifindex;
 -	nest = nla_nest_start(skb, MDBA_ROUTER);
 -	if (!nest)
 -		goto cancel;
 -
 -	if (nla_put_u32(skb, MDBA_ROUTER_PORT, ifindex))
 -		goto end;
 -
 -	nla_nest_end(skb, nest);
 -	nlmsg_end(skb, nlh);
 -	return 0;
 -
 -end:
 -	nla_nest_end(skb, nest);
 -cancel:
 -	nlmsg_cancel(skb, nlh);
 -	return -EMSGSIZE;
 -}
 -
 -static inline size_t rtnl_rtr_nlmsg_size(void)
 -{
 -	return NLMSG_ALIGN(sizeof(struct br_port_msg))
 -		+ nla_total_size(sizeof(__u32));
 -}
 -
 -void br_rtr_notify(struct net_device *dev, struct net_bridge_port *port,
 -		   int type)
 -{
 -	struct net *net = dev_net(dev);
 -	struct sk_buff *skb;
 -	int err = -ENOBUFS;
 -	int ifindex;
 -
 -	ifindex = port ? port->dev->ifindex : 0;
 -	skb = nlmsg_new(rtnl_rtr_nlmsg_size(), GFP_ATOMIC);
 -	if (!skb)
 -		goto errout;
 -
 -	err = nlmsg_populate_rtr_fill(skb, dev, ifindex, 0, 0, type, NTF_SELF);
 -	if (err < 0) {
 -		kfree_skb(skb);
 -		goto errout;
 -	}
 -
 -	rtnl_notify(skb, net, 0, RTNLGRP_MDB, NULL, GFP_ATOMIC);
 -	return;
 -
 -errout:
 -	rtnl_set_sk_err(net, RTNLGRP_MDB, err);
++>>>>>>> 9e8430f8d60d (bridge: mdb: Passing the port-group pointer to br_mdb module)
  }
  
  static bool is_valid_mdb_entry(struct br_mdb_entry *entry)
@@@ -413,7 -501,8 +430,12 @@@ static int __br_mdb_add(struct net *net
  static int br_mdb_add(struct sk_buff *skb, struct nlmsghdr *nlh)
  {
  	struct net *net = sock_net(skb->sk);
++<<<<<<< HEAD
 +	unsigned short vid = VLAN_N_VID;
++=======
+ 	struct net_bridge_port_group *pg;
+ 	struct net_bridge_vlan_group *vg;
++>>>>>>> 9e8430f8d60d (bridge: mdb: Passing the port-group pointer to br_mdb module)
  	struct net_device *dev, *pdev;
  	struct br_mdb_entry *entry;
  	struct net_bridge_port *p;
@@@ -438,19 -527,19 +460,27 @@@
  	if (!p || p->br != br || p->state == BR_STATE_DISABLED)
  		return -EINVAL;
  
++<<<<<<< HEAD
 +	pv = nbp_get_vlan_info(p);
 +	if (br_vlan_enabled(br) && pv && entry->vid == 0) {
 +		for_each_set_bit(vid, pv->vlan_bitmap, VLAN_N_VID) {
 +			entry->vid = vid;
 +			err = __br_mdb_add(net, br, entry);
++=======
+ 	vg = nbp_vlan_group(p);
+ 	if (br_vlan_enabled(br) && vg && entry->vid == 0) {
+ 		list_for_each_entry(v, &vg->vlan_list, vlist) {
+ 			entry->vid = v->vid;
+ 			err = __br_mdb_add(net, br, entry, &pg);
++>>>>>>> 9e8430f8d60d (bridge: mdb: Passing the port-group pointer to br_mdb module)
  			if (err)
  				break;
- 			__br_mdb_notify(dev, entry, RTM_NEWMDB);
+ 			__br_mdb_notify(dev, entry, RTM_NEWMDB, pg);
  		}
  	} else {
- 		err = __br_mdb_add(net, br, entry);
+ 		err = __br_mdb_add(net, br, entry, &pg);
  		if (!err)
- 			__br_mdb_notify(dev, entry, RTM_NEWMDB);
+ 			__br_mdb_notify(dev, entry, RTM_NEWMDB, pg);
  	}
  
  	return err;
@@@ -546,13 -629,13 +576,13 @@@ static int br_mdb_del(struct sk_buff *s
  	if (!p || p->br != br || p->state == BR_STATE_DISABLED)
  		return -EINVAL;
  
 -	vg = nbp_vlan_group(p);
 -	if (br_vlan_enabled(br) && vg && entry->vid == 0) {
 -		list_for_each_entry(v, &vg->vlan_list, vlist) {
 -			entry->vid = v->vid;
 +	pv = nbp_get_vlan_info(p);
 +	if (br_vlan_enabled(br) && pv && entry->vid == 0) {
 +		for_each_set_bit(vid, pv->vlan_bitmap, VLAN_N_VID) {
 +			entry->vid = vid;
  			err = __br_mdb_del(br, entry);
  			if (!err)
- 				__br_mdb_notify(dev, entry, RTM_DELMDB);
+ 				__br_mdb_notify(dev, entry, RTM_DELMDB, NULL);
  		}
  	} else {
  		err = __br_mdb_del(br, entry);
diff --cc net/bridge/br_multicast.c
index e267dc359e3a,8b6e4249be1b..000000000000
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@@ -271,8 -283,7 +271,12 @@@ static void br_multicast_del_pg(struct 
  		rcu_assign_pointer(*pp, p->next);
  		hlist_del_init(&p->mglist);
  		del_timer(&p->timer);
++<<<<<<< HEAD
 +		br_mdb_notify(br->dev, p->port, &pg->addr, RTM_DELMDB,
 +			      p->state);
++=======
+ 		br_mdb_notify(br->dev, p, RTM_DELMDB);
++>>>>>>> 9e8430f8d60d (bridge: mdb: Passing the port-group pointer to br_mdb module)
  		call_rcu_bh(&p->rcu, br_multicast_free_pg);
  
  		if (!mp->ports && !mp->mglist &&
@@@ -694,7 -705,7 +698,11 @@@ static int br_multicast_add_group(struc
  	if (unlikely(!p))
  		goto err;
  	rcu_assign_pointer(*pp, p);
++<<<<<<< HEAD
 +	br_mdb_notify(br->dev, port, group, RTM_NEWMDB);
++=======
+ 	br_mdb_notify(br->dev, p, RTM_NEWMDB);
++>>>>>>> 9e8430f8d60d (bridge: mdb: Passing the port-group pointer to br_mdb module)
  
  found:
  	mod_timer(&p->timer, now + br->multicast_membership_interval);
@@@ -1365,7 -1452,7 +1373,11 @@@ br_multicast_leave_group(struct net_bri
  			hlist_del_init(&p->mglist);
  			del_timer(&p->timer);
  			call_rcu_bh(&p->rcu, br_multicast_free_pg);
++<<<<<<< HEAD
 +			br_mdb_notify(br->dev, port, group, RTM_DELMDB);
++=======
+ 			br_mdb_notify(br->dev, p, RTM_DELMDB);
++>>>>>>> 9e8430f8d60d (bridge: mdb: Passing the port-group pointer to br_mdb module)
  
  			if (!mp->ports && !mp->mglist &&
  			    netif_running(br->dev))
diff --cc net/bridge/br_private.h
index b75519ca3c51,302ab0a43725..000000000000
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@@ -479,12 -556,14 +479,19 @@@ br_multicast_new_group(struct net_bridg
  void br_multicast_free_pg(struct rcu_head *head);
  struct net_bridge_port_group *
  br_multicast_new_port_group(struct net_bridge_port *port, struct br_ip *group,
 -			    struct net_bridge_port_group __rcu *next,
 -			    unsigned char flags);
 +			    struct net_bridge_port_group *next,
 +			    unsigned char state);
  void br_mdb_init(void);
  void br_mdb_uninit(void);
++<<<<<<< HEAD
 +void br_mdb_notify(struct net_device *dev, struct net_bridge_port *port,
 +		   struct br_ip *group, int type);
++=======
+ void br_mdb_notify(struct net_device *dev, struct net_bridge_port_group *pg,
+ 		   int type);
+ void br_rtr_notify(struct net_device *dev, struct net_bridge_port *port,
+ 		   int type);
++>>>>>>> 9e8430f8d60d (bridge: mdb: Passing the port-group pointer to br_mdb module)
  
  #define mlock_dereference(X, br) \
  	rcu_dereference_protected(X, lockdep_is_held(&br->multicast_lock))
* Unmerged path net/bridge/br_mdb.c
* Unmerged path net/bridge/br_multicast.c
* Unmerged path net/bridge/br_private.h
