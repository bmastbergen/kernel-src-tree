amd-xgbe: Reset running devices after resume from hibernate

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author James Morse <james.morse@arm.com>
commit a039b638592c8b967797d96f50bebfaa64964c3f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a039b638.failed

After resume from hibernate on arm64, any amd-xgbe devices that were
running when we hibernated are reported as down, even when it is not.

Re-plugging the cables does not cause the interface to come back, the
link must be marked as down then up via 'ip set link' using the serial
console.

This happens because the device has been power-cycled and possibly
re-initialised by firmware, whereas the driver's memory structures have
been restored from the hibernate image and the two do not agree.

Schedule a restart of the device after powerup in case the world changed
while we were asleep.

	Signed-off-by: James Morse <james.morse@arm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a039b638592c8b967797d96f50bebfaa64964c3f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-main.c
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-main.c
index 51cdca78ec38,9de078819aa6..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-main.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-main.c
@@@ -492,12 -858,17 +492,23 @@@ static int xgbe_resume(struct device *d
  
  	DBGPR("-->xgbe_resume\n");
  
 -	pdata->lpm_ctrl &= ~MDIO_CTRL1_LPOWER;
 -	XMDIO_WRITE(pdata, MDIO_MMD_PCS, MDIO_CTRL1, pdata->lpm_ctrl);
 +	if (!netif_running(netdev)) {
 +		DBGPR("<--xgbe_dev_resume\n");
 +		return -EINVAL;
 +	}
  
++<<<<<<< HEAD
 +	ret = xgbe_powerup(netdev, XGMAC_DRIVER_CONTEXT);
++=======
+ 	if (netif_running(netdev)) {
+ 		ret = xgbe_powerup(netdev, XGMAC_DRIVER_CONTEXT);
++>>>>>>> a039b638592c (amd-xgbe: Reset running devices after resume from hibernate)
+ 
+ 		/* Schedule a restart in case the link or phy state changed
+ 		 * while we were powered down.
+ 		 */
+ 		schedule_work(&pdata->restart_work);
+ 	}
  
  	DBGPR("<--xgbe_resume\n");
  
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-main.c
