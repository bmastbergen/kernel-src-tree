net/flow_dissector: Make dissector_uses_key() and skb_flow_dissector_target() public

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] flow_dissector: Make dissector_uses_key() and skb_flow_dissector_target() public (Jonathan Toppins) [1428557]
Rebuild_FUZZ: 97.56%
commit-author Amir Vadai <amir@vadai.me>
commit 8de2d793daf784f8f109565bcc023a6d198bad85
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8de2d793.failed

Will be used in a following patch to query if a key is being used, and
what it's value in the target object.

	Acked-by: John Fastabend <john.r.fastabend@intel.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Amir Vadai <amir@vadai.me>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8de2d793daf784f8f109565bcc023a6d198bad85)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/flow_dissector.h
#	net/core/flow_dissector.c
diff --cc net/core/flow_dissector.c
index dae6e57d80c3,a669dea146c6..000000000000
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@@ -13,17 -13,14 +13,22 @@@
  #include <linux/if_tunnel.h>
  #include <linux/if_pppox.h>
  #include <linux/ppp_defs.h>
 -#include <linux/stddef.h>
 -#include <linux/if_ether.h>
 -#include <linux/mpls.h>
 -#include <net/flow_dissector.h>
 +#include <net/flow_keys.h>
  #include <scsi/fc/fc_fcoe.h>
  
++<<<<<<< HEAD
 +static bool skb_flow_dissector_uses_key(struct flow_dissector *flow_dissector,
 +					enum flow_dissector_key_id key_id)
 +{
 +	return flow_dissector->used_keys & (1 << key_id);
 +}
 +
 +static void skb_flow_dissector_set_key(struct flow_dissector *flow_dissector,
 +				       enum flow_dissector_key_id key_id)
++=======
+ static void dissector_set_key(struct flow_dissector *flow_dissector,
+ 			      enum flow_dissector_key_id key_id)
++>>>>>>> 8de2d793daf7 (net/flow_dissector: Make dissector_uses_key() and skb_flow_dissector_target() public)
  {
  	flow_dissector->used_keys |= (1 << key_id);
  }
* Unmerged path include/net/flow_dissector.h
* Unmerged path include/net/flow_dissector.h
* Unmerged path net/core/flow_dissector.c
