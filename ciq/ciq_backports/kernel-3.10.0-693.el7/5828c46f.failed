x86/mce/AMD: Save MCA_IPID in MCE struct on SMCA systems

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 5828c46f2c07b97d758da6dc6afd5c374768d44d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5828c46f.failed

The MCA_IPID register uniquely identifies a bank's type and instance
on Scalable MCA systems. We should save the value of this register
in struct mce along with the other relevant error information. This
ensures that we can decode errors without relying on system software to
correlate the bank to the type.

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: http://lkml.kernel.org/r/1472680624-34221-1-git-send-email-Yazen.Ghannam@amd.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 5828c46f2c07b97d758da6dc6afd5c374768d44d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/uapi/asm/mce.h
#	arch/x86/kernel/cpu/mcheck/mce.c
#	arch/x86/kernel/cpu/mcheck/mce_amd.c
#	include/trace/events/mce.h
diff --cc arch/x86/include/uapi/asm/mce.h
index c250700ab6b2,69a6e07e3149..000000000000
--- a/arch/x86/include/uapi/asm/mce.h
+++ b/arch/x86/include/uapi/asm/mce.h
@@@ -26,6 -26,8 +26,11 @@@ struct mce 
  	__u32 socketid;	/* CPU socket ID */
  	__u32 apicid;	/* CPU initial apic ID */
  	__u64 mcgcap;	/* MCGCAP MSR: machine check capabilities of CPU */
++<<<<<<< HEAD
++=======
+ 	__u64 synd;	/* MCA_SYND MSR: only valid on SMCA systems */
+ 	__u64 ipid;	/* MCA_IPID MSR: only valid on SMCA systems */
++>>>>>>> 5828c46f2c07 (x86/mce/AMD: Save MCA_IPID in MCE struct on SMCA systems)
  };
  
  #define MCE_GET_RECORD_LEN   _IOR('M', 1, int)
diff --cc arch/x86/kernel/cpu/mcheck/mce.c
index 1bfa973429e1,17e9ff011c0e..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce.c
+++ b/arch/x86/kernel/cpu/mcheck/mce.c
@@@ -534,6 -582,13 +534,16 @@@ static void mce_read_aux(struct mce *m
  			m->addr <<= shift;
  		}
  	}
++<<<<<<< HEAD
++=======
+ 
+ 	if (mce_flags.smca) {
+ 		m->ipid = mce_rdmsrl(MSR_AMD64_SMCA_MCx_IPID(i));
+ 
+ 		if (m->status & MCI_STATUS_SYNDV)
+ 			m->synd = mce_rdmsrl(MSR_AMD64_SMCA_MCx_SYND(i));
+ 	}
++>>>>>>> 5828c46f2c07 (x86/mce/AMD: Save MCA_IPID in MCE struct on SMCA systems)
  }
  
  static bool memory_error(struct mce *m)
diff --cc arch/x86/kernel/cpu/mcheck/mce_amd.c
index 95ca733e89ae,d2f92ab5322f..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_amd.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_amd.c
@@@ -413,10 -562,18 +413,21 @@@ static void __log_error(unsigned int ba
  		m.misc = misc;
  
  	if (m.status & MCI_STATUS_ADDRV)
++<<<<<<< HEAD
 +		rdmsrl(MSR_IA32_MCx_ADDR(bank), m.addr);
++=======
+ 		rdmsrl(msr_addr, m.addr);
+ 
+ 	if (mce_flags.smca) {
+ 		rdmsrl(MSR_AMD64_SMCA_MCx_IPID(bank), m.ipid);
+ 
+ 		if (m.status & MCI_STATUS_SYNDV)
+ 			rdmsrl(MSR_AMD64_SMCA_MCx_SYND(bank), m.synd);
+ 	}
++>>>>>>> 5828c46f2c07 (x86/mce/AMD: Save MCA_IPID in MCE struct on SMCA systems)
  
  	mce_log(&m);
 -
 -	wrmsrl(msr_status, 0);
 +	wrmsrl(MSR_IA32_MCx_STATUS(bank), 0);
  }
  
  static inline void __smp_deferred_error_interrupt(void)
diff --cc include/trace/events/mce.h
index 4cbbcef6baa8,70f02149808c..000000000000
--- a/include/trace/events/mce.h
+++ b/include/trace/events/mce.h
@@@ -20,6 -20,8 +20,11 @@@ TRACE_EVENT(mce_record
  		__field(	u64,		status		)
  		__field(	u64,		addr		)
  		__field(	u64,		misc		)
++<<<<<<< HEAD
++=======
+ 		__field(	u64,		synd		)
+ 		__field(	u64,		ipid		)
++>>>>>>> 5828c46f2c07 (x86/mce/AMD: Save MCA_IPID in MCE struct on SMCA systems)
  		__field(	u64,		ip		)
  		__field(	u64,		tsc		)
  		__field(	u64,		walltime	)
@@@ -38,6 -40,8 +43,11 @@@
  		__entry->status		= m->status;
  		__entry->addr		= m->addr;
  		__entry->misc		= m->misc;
++<<<<<<< HEAD
++=======
+ 		__entry->synd		= m->synd;
+ 		__entry->ipid		= m->ipid;
++>>>>>>> 5828c46f2c07 (x86/mce/AMD: Save MCA_IPID in MCE struct on SMCA systems)
  		__entry->ip		= m->ip;
  		__entry->tsc		= m->tsc;
  		__entry->walltime	= m->time;
@@@ -50,11 -54,12 +60,20 @@@
  		__entry->cpuvendor	= m->cpuvendor;
  	),
  
++<<<<<<< HEAD
 +	TP_printk("CPU: %d, MCGc/s: %llx/%llx, MC%d: %016Lx, ADDR/MISC: %016Lx/%016Lx, RIP: %02x:<%016Lx>, TSC: %llx, PROCESSOR: %u:%x, TIME: %llu, SOCKET: %u, APIC: %x",
 +		__entry->cpu,
 +		__entry->mcgcap, __entry->mcgstatus,
 +		__entry->bank, __entry->status,
 +		__entry->addr, __entry->misc,
++=======
+ 	TP_printk("CPU: %d, MCGc/s: %llx/%llx, MC%d: %016Lx, IPID: %016Lx, ADDR/MISC/SYND: %016Lx/%016Lx/%016Lx, RIP: %02x:<%016Lx>, TSC: %llx, PROCESSOR: %u:%x, TIME: %llu, SOCKET: %u, APIC: %x",
+ 		__entry->cpu,
+ 		__entry->mcgcap, __entry->mcgstatus,
+ 		__entry->bank, __entry->status,
+ 		__entry->ipid,
+ 		__entry->addr, __entry->misc, __entry->synd,
++>>>>>>> 5828c46f2c07 (x86/mce/AMD: Save MCA_IPID in MCE struct on SMCA systems)
  		__entry->cs, __entry->ip,
  		__entry->tsc,
  		__entry->cpuvendor, __entry->cpuid,
* Unmerged path arch/x86/include/uapi/asm/mce.h
* Unmerged path arch/x86/kernel/cpu/mcheck/mce.c
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_amd.c
* Unmerged path include/trace/events/mce.h
