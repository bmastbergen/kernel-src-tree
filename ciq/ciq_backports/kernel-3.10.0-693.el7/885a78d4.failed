module: Ensure a module's state is set accordingly during module coming cleanup code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Aaron Tomlin <atomlin@redhat.com>
commit 885a78d4a5b3ad2d7c41d1819b001d7957f442cd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/885a78d4.failed

In load_module() in the event of an error, for e.g. unknown module
parameter(s) specified we go to perform some module coming clean up
operations. At this point the module is still in a "formed" state
when it is actually going away.

This patch updates the module's state accordingly to ensure anyone on the
module_notify_list waiting for a module going away notification will be
notified accordingly.

	Signed-off-by: Aaron Tomlin <atomlin@redhat.com>
	Acked-by: Rusty Russell <rusty@rustcorp.com.au>
	Reviewed-by: Miroslav Benes <mbenes@suse.cz>
Link: http://lkml.kernel.org/r/1476980293-19062-2-git-send-email-atomlin@redhat.com
	Signed-off-by: Jessica Yu <jeyu@redhat.com>
(cherry picked from commit 885a78d4a5b3ad2d7c41d1819b001d7957f442cd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/module.c
diff --cc kernel/module.c
index 92790f523f58,f082832ad3ad..000000000000
--- a/kernel/module.c
+++ b/kernel/module.c
@@@ -3474,6 -3694,13 +3474,16 @@@ static int load_module(struct load_inf
  
  	return do_init_module(mod);
  
++<<<<<<< HEAD
++=======
+  sysfs_cleanup:
+ 	mod_sysfs_teardown(mod);
+  coming_cleanup:
+ 	mod->state = MODULE_STATE_GOING;
+ 	blocking_notifier_call_chain(&module_notify_list,
+ 				     MODULE_STATE_GOING, mod);
+ 	klp_module_going(mod);
++>>>>>>> 885a78d4a5b3 (module: Ensure a module's state is set accordingly during module coming cleanup code)
   bug_cleanup:
  	/* module_bug_cleanup needs module_mutex protection */
  	mutex_lock(&module_mutex);
* Unmerged path kernel/module.c
