btrfs: tests, move initialization into tests/

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jeff Mahoney <jeffm@suse.com>
commit 8632daae40c1a5b8fcc1d66d788c143353fd70b7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8632daae.failed

We have all these stubs that only exist because they're called from
btrfs_run_sanity_tests, which is a static inside super.c.  Let's just
move it all into tests/btrfs-tests.c and only have one stub.

	Signed-off-by: Jeff Mahoney <jeffm@suse.com>
	Signed-off-by: David Sterba <dsterba@suse.com>
(cherry picked from commit 8632daae40c1a5b8fcc1d66d788c143353fd70b7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/super.c
#	fs/btrfs/tests/btrfs-tests.c
#	fs/btrfs/tests/btrfs-tests.h
diff --cc fs/btrfs/super.c
index 92d06671fd90,959823a12c42..000000000000
--- a/fs/btrfs/super.c
+++ b/fs/btrfs/super.c
@@@ -2277,32 -2342,6 +2277,35 @@@ static void btrfs_print_mod_info(void
  			btrfs_crc32c_impl());
  }
  
++<<<<<<< HEAD
 +static int btrfs_run_sanity_tests(void)
 +{
 +	int ret;
 +
 +	ret = btrfs_init_test_fs();
 +	if (ret)
 +		return ret;
 +
 +	ret = btrfs_test_free_space_cache();
 +	if (ret)
 +		goto out;
 +	ret = btrfs_test_extent_buffer_operations();
 +	if (ret)
 +		goto out;
 +	ret = btrfs_test_extent_io();
 +	if (ret)
 +		goto out;
 +	ret = btrfs_test_inodes();
 +	if (ret)
 +		goto out;
 +	ret = btrfs_test_qgroups();
 +out:
 +	btrfs_destroy_test_fs();
 +	return ret;
 +}
 +
++=======
++>>>>>>> 8632daae40c1 (btrfs: tests, move initialization into tests/)
  static int __init init_btrfs_fs(void)
  {
  	int err;
diff --cc fs/btrfs/tests/btrfs-tests.c
index de90bbb1cd8c,71d9a0129347..000000000000
--- a/fs/btrfs/tests/btrfs-tests.c
+++ b/fs/btrfs/tests/btrfs-tests.c
@@@ -168,3 -174,92 +168,95 @@@ void btrfs_free_dummy_root(struct btrfs
  	kfree(root);
  }
  
++<<<<<<< HEAD
++=======
+ struct btrfs_block_group_cache *
+ btrfs_alloc_dummy_block_group(unsigned long length, u32 sectorsize)
+ {
+ 	struct btrfs_block_group_cache *cache;
+ 
+ 	cache = kzalloc(sizeof(*cache), GFP_KERNEL);
+ 	if (!cache)
+ 		return NULL;
+ 	cache->free_space_ctl = kzalloc(sizeof(*cache->free_space_ctl),
+ 					GFP_KERNEL);
+ 	if (!cache->free_space_ctl) {
+ 		kfree(cache);
+ 		return NULL;
+ 	}
+ 
+ 	cache->key.objectid = 0;
+ 	cache->key.offset = length;
+ 	cache->key.type = BTRFS_BLOCK_GROUP_ITEM_KEY;
+ 	cache->sectorsize = sectorsize;
+ 	cache->full_stripe_len = sectorsize;
+ 
+ 	INIT_LIST_HEAD(&cache->list);
+ 	INIT_LIST_HEAD(&cache->cluster_list);
+ 	INIT_LIST_HEAD(&cache->bg_list);
+ 	btrfs_init_free_space_ctl(cache);
+ 	mutex_init(&cache->free_space_lock);
+ 
+ 	return cache;
+ }
+ 
+ void btrfs_free_dummy_block_group(struct btrfs_block_group_cache *cache)
+ {
+ 	if (!cache)
+ 		return;
+ 	__btrfs_remove_free_space_cache(cache->free_space_ctl);
+ 	kfree(cache->free_space_ctl);
+ 	kfree(cache);
+ }
+ 
+ void btrfs_init_dummy_trans(struct btrfs_trans_handle *trans)
+ {
+ 	memset(trans, 0, sizeof(*trans));
+ 	trans->transid = 1;
+ 	INIT_LIST_HEAD(&trans->qgroup_ref_list);
+ 	trans->type = __TRANS_DUMMY;
+ }
+ 
+ int btrfs_run_sanity_tests(void)
+ {
+ 	int ret, i;
+ 	u32 sectorsize, nodesize;
+ 	u32 test_sectorsize[] = {
+ 		PAGE_SIZE,
+ 	};
+ 	ret = btrfs_init_test_fs();
+ 	if (ret)
+ 		return ret;
+ 	for (i = 0; i < ARRAY_SIZE(test_sectorsize); i++) {
+ 		sectorsize = test_sectorsize[i];
+ 		for (nodesize = sectorsize;
+ 		     nodesize <= BTRFS_MAX_METADATA_BLOCKSIZE;
+ 		     nodesize <<= 1) {
+ 			pr_info("BTRFS: selftest: sectorsize: %u  nodesize: %u\n",
+ 				sectorsize, nodesize);
+ 			ret = btrfs_test_free_space_cache(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_extent_buffer_operations(sectorsize,
+ 				nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_extent_io(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_inodes(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_qgroups(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_free_space_tree(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 		}
+ 	}
+ out:
+ 	btrfs_destroy_test_fs();
+ 	return ret;
+ }
++>>>>>>> 8632daae40c1 (btrfs: tests, move initialization into tests/)
diff --cc fs/btrfs/tests/btrfs-tests.h
index fd3954224480,e7d364f315db..000000000000
--- a/fs/btrfs/tests/btrfs-tests.h
+++ b/fs/btrfs/tests/btrfs-tests.h
@@@ -24,42 -25,23 +25,55 @@@ int btrfs_run_sanity_tests(void)
  #define test_msg(fmt, ...) pr_info("BTRFS: selftest: " fmt, ##__VA_ARGS__)
  
  struct btrfs_root;
 -struct btrfs_trans_handle;
  
++<<<<<<< HEAD
 +int btrfs_test_free_space_cache(void);
 +int btrfs_test_extent_buffer_operations(void);
 +int btrfs_test_extent_io(void);
 +int btrfs_test_inodes(void);
 +int btrfs_test_qgroups(void);
 +int btrfs_init_test_fs(void);
 +void btrfs_destroy_test_fs(void);
++=======
+ int btrfs_test_extent_buffer_operations(u32 sectorsize, u32 nodesize);
+ int btrfs_test_free_space_cache(u32 sectorsize, u32 nodesize);
+ int btrfs_test_extent_io(u32 sectorsize, u32 nodesize);
+ int btrfs_test_inodes(u32 sectorsize, u32 nodesize);
+ int btrfs_test_qgroups(u32 sectorsize, u32 nodesize);
+ int btrfs_test_free_space_tree(u32 sectorsize, u32 nodesize);
++>>>>>>> 8632daae40c1 (btrfs: tests, move initialization into tests/)
  struct inode *btrfs_new_test_inode(void);
  struct btrfs_fs_info *btrfs_alloc_dummy_fs_info(void);
  void btrfs_free_dummy_root(struct btrfs_root *root);
 -struct btrfs_block_group_cache *
 -btrfs_alloc_dummy_block_group(unsigned long length, u32 sectorsize);
 -void btrfs_free_dummy_block_group(struct btrfs_block_group_cache *cache);
 -void btrfs_init_dummy_trans(struct btrfs_trans_handle *trans);
  #else
++<<<<<<< HEAD
 +static inline int btrfs_test_free_space_cache(void)
 +{
 +	return 0;
 +}
 +static inline int btrfs_test_extent_buffer_operations(void)
 +{
 +	return 0;
 +}
 +static inline int btrfs_init_test_fs(void)
 +{
 +	return 0;
 +}
 +static inline void btrfs_destroy_test_fs(void)
 +{
 +}
 +static inline int btrfs_test_extent_io(void)
 +{
 +	return 0;
 +}
 +static inline int btrfs_test_inodes(void)
 +{
 +	return 0;
 +}
 +static inline int btrfs_test_qgroups(void)
++=======
+ static inline int btrfs_run_sanity_tests(void)
++>>>>>>> 8632daae40c1 (btrfs: tests, move initialization into tests/)
  {
  	return 0;
  }
* Unmerged path fs/btrfs/super.c
* Unmerged path fs/btrfs/tests/btrfs-tests.c
* Unmerged path fs/btrfs/tests/btrfs-tests.h
