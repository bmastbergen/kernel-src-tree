perf hists: Move sort__has_sym into struct perf_hpp_list

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 2e0453af4e16e97268b9e66aad37beb607ed7c0f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2e0453af.failed

Now we have sort dimensions private for struct hists, we need to make
dimension booleans hists specific as well.

Moving sort__has_sym into struct perf_hpp_list.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1462276488-26683-4-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 2e0453af4e16e97268b9e66aad37beb607ed7c0f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.h
#	tools/perf/util/sort.c
#	tools/perf/util/sort.h
diff --cc tools/perf/util/hist.h
index ec76e6bef916,c3a77502e22b..000000000000
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@@ -242,6 -242,8 +242,11 @@@ struct perf_hpp_list 
  	struct list_head sorts;
  
  	int need_collapse;
++<<<<<<< HEAD
++=======
+ 	int parent;
+ 	int sym;
++>>>>>>> 2e0453af4e16 (perf hists: Move sort__has_sym into struct perf_hpp_list)
  };
  
  extern struct perf_hpp_list perf_hpp_list;
diff --cc tools/perf/util/sort.c
index 331b7cc8c0d0,544ab376ac42..000000000000
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@@ -21,8 -21,6 +21,11 @@@ const char	*sort_order
  const char	*field_order;
  regex_t		ignore_callees_regex;
  int		have_ignore_callees = 0;
++<<<<<<< HEAD
 +int		sort__has_parent = 0;
 +int		sort__has_sym = 0;
++=======
++>>>>>>> 2e0453af4e16 (perf hists: Move sort__has_sym into struct perf_hpp_list)
  int		sort__has_dso = 0;
  int		sort__has_socket = 0;
  int		sort__has_thread = 0;
@@@ -2244,9 -2242,9 +2247,9 @@@ static int sort_dimension__add(struct p
  				pr_err("Invalid regex: %s\n%s", parent_pattern, err);
  				return -EINVAL;
  			}
 -			list->parent = 1;
 +			sort__has_parent = 1;
  		} else if (sd->entry == &sort_sym) {
- 			sort__has_sym = 1;
+ 			list->sym = 1;
  			/*
  			 * perf diff displays the performance difference amongst
  			 * two or more perf.data files. Those files could come
@@@ -2749,8 -2744,8 +2752,13 @@@ int setup_sorting(struct perf_evlist *e
  void reset_output_field(void)
  {
  	perf_hpp_list.need_collapse = 0;
++<<<<<<< HEAD
 +	sort__has_parent = 0;
 +	sort__has_sym = 0;
++=======
+ 	perf_hpp_list.parent = 0;
+ 	perf_hpp_list.sym = 0;
++>>>>>>> 2e0453af4e16 (perf hists: Move sort__has_sym into struct perf_hpp_list)
  	sort__has_dso = 0;
  
  	field_order = NULL;
diff --cc tools/perf/util/sort.h
index 2e1d27326954,9a5e7d4a2cac..000000000000
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@@ -32,8 -32,6 +32,11 @@@ extern const char default_sort_order[]
  extern regex_t ignore_callees_regex;
  extern int have_ignore_callees;
  extern int sort__has_dso;
++<<<<<<< HEAD
 +extern int sort__has_parent;
 +extern int sort__has_sym;
++=======
++>>>>>>> 2e0453af4e16 (perf hists: Move sort__has_sym into struct perf_hpp_list)
  extern int sort__has_socket;
  extern int sort__has_thread;
  extern int sort__has_comm;
diff --git a/tools/perf/builtin-top.c b/tools/perf/builtin-top.c
index 362b7663a562..cedf7dae6a1a 100644
--- a/tools/perf/builtin-top.c
+++ b/tools/perf/builtin-top.c
@@ -688,7 +688,7 @@ static int hist_iter__top_callback(struct hist_entry_iter *iter,
 	struct hist_entry *he = iter->he;
 	struct perf_evsel *evsel = iter->evsel;
 
-	if (sort__has_sym && single)
+	if (perf_hpp_list.sym && single)
 		perf_top__record_precise_ip(top, he, evsel->idx, al->addr);
 
 	hist__account_cycles(iter->sample->branch_stack, al, iter->sample,
@@ -919,7 +919,7 @@ out_err:
 
 static int callchain_param__setup_sample_type(struct callchain_param *callchain)
 {
-	if (!sort__has_sym) {
+	if (!perf_hpp_list.sym) {
 		if (callchain->enabled) {
 			ui__error("Selected -g but \"sym\" not present in --sort/-s.");
 			return -EINVAL;
diff --git a/tools/perf/ui/browsers/hists.c b/tools/perf/ui/browsers/hists.c
index 6a4681932ba5..b66bf83ed883 100644
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@ -2747,7 +2747,7 @@ static int perf_evsel__hists_browse(struct perf_evsel *evsel, int nr_events,
 			 */
 			goto out_free_stack;
 		case 'a':
-			if (!sort__has_sym) {
+			if (!hists__has(hists, sym)) {
 				ui_browser__warning(&browser->b, delay_secs * 2,
 			"Annotation is only available for symbolic views, "
 			"include \"sym*\" in --sort to use it.");
@@ -2910,7 +2910,7 @@ static int perf_evsel__hists_browse(struct perf_evsel *evsel, int nr_events,
 			continue;
 		}
 
-		if (!sort__has_sym || browser->selection == NULL)
+		if (!hists__has(hists, sym) || browser->selection == NULL)
 			goto skip_annotation;
 
 		if (sort__mode == SORT_MODE__BRANCH) {
@@ -2969,7 +2969,7 @@ skip_annotation:
 			 *
 			 * See hist_browser__show_entry.
 			 */
-			if (sort__has_sym && browser->selection->sym) {
+			if (hists__has(hists, sym) && browser->selection->sym) {
 				nr_options += add_script_opt(browser,
 							     &actions[nr_options],
 							     &options[nr_options],
diff --git a/tools/perf/ui/gtk/hists.c b/tools/perf/ui/gtk/hists.c
index 2aa45b606fa4..932adfaa05af 100644
--- a/tools/perf/ui/gtk/hists.c
+++ b/tools/perf/ui/gtk/hists.c
@@ -379,7 +379,7 @@ static void perf_gtk__show_hists(GtkWidget *window, struct hists *hists,
 			gtk_tree_store_set(store, &iter, col_idx++, s, -1);
 		}
 
-		if (symbol_conf.use_callchain && sort__has_sym) {
+		if (symbol_conf.use_callchain && hists__has(hists, sym)) {
 			if (callchain_param.mode == CHAIN_GRAPH_REL)
 				total = symbol_conf.cumulate_callchain ?
 					h->stat_acc->period : h->stat.period;
diff --git a/tools/perf/ui/hist.c b/tools/perf/ui/hist.c
index 3baeaa6e71b5..af07ffb129ca 100644
--- a/tools/perf/ui/hist.c
+++ b/tools/perf/ui/hist.c
@@ -635,7 +635,7 @@ unsigned int hists__sort_list_width(struct hists *hists)
 		ret += fmt->width(fmt, &dummy_hpp, hists_to_evsel(hists));
 	}
 
-	if (verbose && sort__has_sym) /* Addr + origin */
+	if (verbose && hists__has(hists, sym)) /* Addr + origin */
 		ret += 3 + BITS_PER_LONG / 4;
 
 	return ret;
diff --git a/tools/perf/util/annotate.c b/tools/perf/util/annotate.c
index b795b6994144..d4b3d034c503 100644
--- a/tools/perf/util/annotate.c
+++ b/tools/perf/util/annotate.c
@@ -1665,5 +1665,5 @@ int hist_entry__annotate(struct hist_entry *he, size_t privsize)
 
 bool ui__has_annotation(void)
 {
-	return use_browser == 1 && sort__has_sym;
+	return use_browser == 1 && perf_hpp_list.sym;
 }
* Unmerged path tools/perf/util/hist.h
* Unmerged path tools/perf/util/sort.c
* Unmerged path tools/perf/util/sort.h
