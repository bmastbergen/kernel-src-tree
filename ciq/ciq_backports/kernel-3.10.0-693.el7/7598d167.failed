livepatch/module: print notice of TAINT_LIVEPATCH

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Joe Lawrence <joe.lawrence@redhat.com>
commit 7598d167df99ddadb7f7bd803d1413af740f3617
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7598d167.failed

Add back the "tainting kernel with TAINT_LIVEPATCH" kernel log message
that commit 2992ef29ae01 ("livepatch/module: make TAINT_LIVEPATCH
module-specific") dropped.  Now that it's a module-specific taint flag,
include the module name.

	Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
	Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
	Signed-off-by: Jessica Yu <jeyu@redhat.com>
(cherry picked from commit 7598d167df99ddadb7f7bd803d1413af740f3617)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/module.c
diff --cc kernel/module.c
index 82f01d69a669,330f64e7e193..000000000000
--- a/kernel/module.c
+++ b/kernel/module.c
@@@ -2596,6 -2789,48 +2596,51 @@@ static int elf_header_check(struct load
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ #define COPY_CHUNK_SIZE (16*PAGE_SIZE)
+ 
+ static int copy_chunked_from_user(void *dst, const void __user *usrc, unsigned long len)
+ {
+ 	do {
+ 		unsigned long n = min(len, COPY_CHUNK_SIZE);
+ 
+ 		if (copy_from_user(dst, usrc, n) != 0)
+ 			return -EFAULT;
+ 		cond_resched();
+ 		dst += n;
+ 		usrc += n;
+ 		len -= n;
+ 	} while (len);
+ 	return 0;
+ }
+ 
+ #ifdef CONFIG_LIVEPATCH
+ static int check_modinfo_livepatch(struct module *mod, struct load_info *info)
+ {
+ 	if (get_modinfo(info, "livepatch")) {
+ 		mod->klp = true;
+ 		add_taint_module(mod, TAINT_LIVEPATCH, LOCKDEP_STILL_OK);
+ 		pr_notice_once("%s: tainting kernel with TAINT_LIVEPATCH\n",
+ 			       mod->name);
+ 	}
+ 
+ 	return 0;
+ }
+ #else /* !CONFIG_LIVEPATCH */
+ static int check_modinfo_livepatch(struct module *mod, struct load_info *info)
+ {
+ 	if (get_modinfo(info, "livepatch")) {
+ 		pr_err("%s: module is marked as livepatch module, but livepatch support is disabled",
+ 		       mod->name);
+ 		return -ENOEXEC;
+ 	}
+ 
+ 	return 0;
+ }
+ #endif /* CONFIG_LIVEPATCH */
+ 
++>>>>>>> 7598d167df99 (livepatch/module: print notice of TAINT_LIVEPATCH)
  /* Sets info->hdr and info->len. */
  static int copy_module_from_user(const void __user *umod, unsigned long len,
  				  struct load_info *info)
* Unmerged path kernel/module.c
