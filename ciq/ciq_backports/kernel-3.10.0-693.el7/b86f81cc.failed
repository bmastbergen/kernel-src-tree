bridge: move br_net_exit() to br.c

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author WANG Cong <xiyou.wangcong@gmail.com>
commit b86f81cca9442ce6cfbe76d10fb8d2c61122ae12
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b86f81cc.failed

And it can become static.

	Cc: Stephen Hemminger <stephen@networkplumber.org>
	Cc: David S. Miller <davem@davemloft.net>
	Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b86f81cca9442ce6cfbe76d10fb8d2c61122ae12)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_if.c
diff --cc net/bridge/br_if.c
index dfda8797f430,cffe1d666ba1..000000000000
--- a/net/bridge/br_if.c
+++ b/net/bridge/br_if.c
@@@ -598,26 -455,3 +598,29 @@@ int br_del_if(struct net_bridge *br, st
  
  	return 0;
  }
++<<<<<<< HEAD
 +
 +void br_port_flags_change(struct net_bridge_port *p, unsigned long mask)
 +{
 +	struct net_bridge *br = p->br;
 +
 +	if (mask & BR_AUTO_MASK)
 +		nbp_update_port_count(br);
 +}
 +
 +void __net_exit br_net_exit(struct net *net)
 +{
 +	struct net_device *dev;
 +	LIST_HEAD(list);
 +
 +	rtnl_lock();
 +	for_each_netdev(net, dev)
 +		if (dev->priv_flags & IFF_EBRIDGE)
 +			br_dev_delete(dev, &list);
 +
 +	unregister_netdevice_many(&list);
 +	rtnl_unlock();
 +
 +}
++=======
++>>>>>>> b86f81cca944 (bridge: move br_net_exit() to br.c)
diff --git a/net/bridge/br.c b/net/bridge/br.c
index 8a1ecd1e7f96..5bea373f3769 100644
--- a/net/bridge/br.c
+++ b/net/bridge/br.c
@@ -22,14 +22,29 @@
 
 #include "br_private.h"
 
-static const struct stp_proto br_stp_proto = {
-	.rcv	= br_stp_rcv,
-};
+static void __net_exit br_net_exit(struct net *net)
+{
+	struct net_device *dev;
+	LIST_HEAD(list);
+
+	rtnl_lock();
+	for_each_netdev(net, dev)
+		if (dev->priv_flags & IFF_EBRIDGE)
+			br_dev_delete(dev, &list);
+
+	unregister_netdevice_many(&list);
+	rtnl_unlock();
+
+}
 
 static struct pernet_operations br_net_ops = {
 	.exit	= br_net_exit,
 };
 
+static const struct stp_proto br_stp_proto = {
+	.rcv	= br_stp_rcv,
+};
+
 static int __init br_init(void)
 {
 	int err;
* Unmerged path net/bridge/br_if.c
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index 4acaee2dd1b9..c807617878b2 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -416,7 +416,6 @@ void br_flood_forward(struct net_bridge *br, struct sk_buff *skb,
 void br_port_carrier_check(struct net_bridge_port *p);
 int br_add_bridge(struct net *net, const char *name);
 int br_del_bridge(struct net *net, const char *name);
-void br_net_exit(struct net *net);
 int br_add_if(struct net_bridge *br, struct net_device *dev);
 int br_del_if(struct net_bridge *br, struct net_device *dev);
 int br_min_mtu(const struct net_bridge *br);
