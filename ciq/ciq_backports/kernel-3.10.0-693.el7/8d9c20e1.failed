drm/i915: Remove .is_mobile field from platform struct

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Carlos Santa <carlos.santa@intel.com>
commit 8d9c20e1d1e3833b5c4dab33d59cb92ea162da6a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8d9c20e1.failed

As recommended by Ville Syrjala removing .is_mobile field from the
platform struct definition for vlv and hsw+ GPUs as there's no need to
make the distinction in later hardware anymore. Keep it for older GPUs
as it is still needed for ilk-ivb.

	Signed-off-by: Carlos Santa <carlos.santa@intel.com>
	Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
(cherry picked from commit 8d9c20e1d1e3833b5c4dab33d59cb92ea162da6a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/early-quirks.c
#	drivers/gpu/drm/i915/i915_pci.c
diff --cc arch/x86/kernel/early-quirks.c
index d7874c362348,f306698a4cb4..000000000000
--- a/arch/x86/kernel/early-quirks.c
+++ b/arch/x86/kernel/early-quirks.c
@@@ -461,127 -435,140 +461,163 @@@ struct intel_stolen_funcs 
  static size_t __init gen9_stolen_size(int num, int slot, int func)
  {
  	u16 gmch_ctrl;
 -	u16 gms;
  
  	gmch_ctrl = read_pci_config_16(num, slot, func, SNB_GMCH_CTRL);
 -	gms = (gmch_ctrl >> BDW_GMCH_GMS_SHIFT) & BDW_GMCH_GMS_MASK;
 +	gmch_ctrl >>= BDW_GMCH_GMS_SHIFT;
 +	gmch_ctrl &= BDW_GMCH_GMS_MASK;
  
 -	/* 0x0  to 0xef: 32MB increments starting at 0MB */
 -	/* 0xf0 to 0xfe: 4MB increments starting at 4MB */
 -	if (gms < 0xf0)
 -		return (size_t)gms * MB(32);
 +	if (gmch_ctrl < 0xf0)
 +		return gmch_ctrl << 25; /* 32 MB units */
  	else
 -		return (size_t)(gms - 0xf0 + 1) * MB(4);
 +		/* 4MB increments starting at 0xf0 for 4MB */
 +		return (gmch_ctrl - 0xf0 + 1) << 22;
  }
  
 -struct intel_early_ops {
 -	size_t (*stolen_size)(int num, int slot, int func);
 -	phys_addr_t (*stolen_base)(int num, int slot, int func, size_t size);
 +typedef size_t (*stolen_size_fn)(int num, int slot, int func);
 +
 +static const struct intel_stolen_funcs i830_stolen_funcs __initconst = {
 +	.base = i830_stolen_base,
 +	.size = i830_stolen_size,
  };
  
 -static const struct intel_early_ops i830_early_ops __initconst = {
 -	.stolen_base = i830_stolen_base,
 -	.stolen_size = i830_stolen_size,
 +static const struct intel_stolen_funcs i845_stolen_funcs __initconst = {
 +	.base = i845_stolen_base,
 +	.size = i830_stolen_size,
  };
  
 -static const struct intel_early_ops i845_early_ops __initconst = {
 -	.stolen_base = i845_stolen_base,
 -	.stolen_size = i830_stolen_size,
 +static const struct intel_stolen_funcs i85x_stolen_funcs __initconst = {
 +	.base = i85x_stolen_base,
 +	.size = gen3_stolen_size,
  };
  
 -static const struct intel_early_ops i85x_early_ops __initconst = {
 -	.stolen_base = i85x_stolen_base,
 -	.stolen_size = gen3_stolen_size,
 +static const struct intel_stolen_funcs i865_stolen_funcs __initconst = {
 +	.base = i865_stolen_base,
 +	.size = gen3_stolen_size,
  };
  
 -static const struct intel_early_ops i865_early_ops __initconst = {
 -	.stolen_base = i865_stolen_base,
 -	.stolen_size = gen3_stolen_size,
 +static const struct intel_stolen_funcs gen3_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = gen3_stolen_size,
  };
  
 -static const struct intel_early_ops gen3_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = gen3_stolen_size,
 +static const struct intel_stolen_funcs gen6_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = gen6_stolen_size,
  };
  
 -static const struct intel_early_ops gen6_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = gen6_stolen_size,
 +static const struct intel_stolen_funcs gen8_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = gen8_stolen_size,
  };
  
 -static const struct intel_early_ops gen8_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = gen8_stolen_size,
 +static const struct intel_stolen_funcs gen9_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = gen9_stolen_size,
  };
  
 -static const struct intel_early_ops gen9_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = gen9_stolen_size,
 +static const struct intel_stolen_funcs chv_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = chv_stolen_size,
  };
  
 -static const struct intel_early_ops chv_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = chv_stolen_size,
 +static const struct pci_device_id intel_stolen_ids[] __initconst = {
 +	INTEL_I830_IDS(&i830_stolen_funcs),
 +	INTEL_I845G_IDS(&i845_stolen_funcs),
 +	INTEL_I85X_IDS(&i85x_stolen_funcs),
 +	INTEL_I865G_IDS(&i865_stolen_funcs),
 +	INTEL_I915G_IDS(&gen3_stolen_funcs),
 +	INTEL_I915GM_IDS(&gen3_stolen_funcs),
 +	INTEL_I945G_IDS(&gen3_stolen_funcs),
 +	INTEL_I945GM_IDS(&gen3_stolen_funcs),
 +	INTEL_VLV_M_IDS(&gen6_stolen_funcs),
 +	INTEL_VLV_D_IDS(&gen6_stolen_funcs),
 +	INTEL_PINEVIEW_IDS(&gen3_stolen_funcs),
 +	INTEL_I965G_IDS(&gen3_stolen_funcs),
 +	INTEL_G33_IDS(&gen3_stolen_funcs),
 +	INTEL_I965GM_IDS(&gen3_stolen_funcs),
 +	INTEL_GM45_IDS(&gen3_stolen_funcs),
 +	INTEL_G45_IDS(&gen3_stolen_funcs),
 +	INTEL_IRONLAKE_D_IDS(&gen3_stolen_funcs),
 +	INTEL_IRONLAKE_M_IDS(&gen3_stolen_funcs),
 +	INTEL_SNB_D_IDS(&gen6_stolen_funcs),
 +	INTEL_SNB_M_IDS(&gen6_stolen_funcs),
 +	INTEL_IVB_M_IDS(&gen6_stolen_funcs),
 +	INTEL_IVB_D_IDS(&gen6_stolen_funcs),
 +	INTEL_HSW_D_IDS(&gen6_stolen_funcs),
 +	INTEL_HSW_M_IDS(&gen6_stolen_funcs),
 +	INTEL_BDW_M_IDS(&gen8_stolen_funcs),
 +	INTEL_BDW_D_IDS(&gen8_stolen_funcs),
 +	INTEL_CHV_IDS(&chv_stolen_funcs),
 +	INTEL_SKL_IDS(&gen9_stolen_funcs),
 +	INTEL_BXT_IDS(&gen9_stolen_funcs),
 +	INTEL_KBL_IDS(&gen9_stolen_funcs),
  };
  
++<<<<<<< HEAD
 +static void __init intel_graphics_stolen(int num, int slot, int func)
++=======
+ static const struct pci_device_id intel_early_ids[] __initconst = {
+ 	INTEL_I830_IDS(&i830_early_ops),
+ 	INTEL_I845G_IDS(&i845_early_ops),
+ 	INTEL_I85X_IDS(&i85x_early_ops),
+ 	INTEL_I865G_IDS(&i865_early_ops),
+ 	INTEL_I915G_IDS(&gen3_early_ops),
+ 	INTEL_I915GM_IDS(&gen3_early_ops),
+ 	INTEL_I945G_IDS(&gen3_early_ops),
+ 	INTEL_I945GM_IDS(&gen3_early_ops),
+ 	INTEL_VLV_IDS(&gen6_early_ops),
+ 	INTEL_PINEVIEW_IDS(&gen3_early_ops),
+ 	INTEL_I965G_IDS(&gen3_early_ops),
+ 	INTEL_G33_IDS(&gen3_early_ops),
+ 	INTEL_I965GM_IDS(&gen3_early_ops),
+ 	INTEL_GM45_IDS(&gen3_early_ops),
+ 	INTEL_G45_IDS(&gen3_early_ops),
+ 	INTEL_IRONLAKE_D_IDS(&gen3_early_ops),
+ 	INTEL_IRONLAKE_M_IDS(&gen3_early_ops),
+ 	INTEL_SNB_D_IDS(&gen6_early_ops),
+ 	INTEL_SNB_M_IDS(&gen6_early_ops),
+ 	INTEL_IVB_M_IDS(&gen6_early_ops),
+ 	INTEL_IVB_D_IDS(&gen6_early_ops),
+ 	INTEL_HSW_IDS(&gen6_early_ops),
+ 	INTEL_BDW_IDS(&gen8_early_ops),
+ 	INTEL_CHV_IDS(&chv_early_ops),
+ 	INTEL_SKL_IDS(&gen9_early_ops),
+ 	INTEL_BXT_IDS(&gen9_early_ops),
+ 	INTEL_KBL_IDS(&gen9_early_ops),
+ };
+ 
+ static void __init
+ intel_graphics_stolen(int num, int slot, int func,
+ 		      const struct intel_early_ops *early_ops)
++>>>>>>> 8d9c20e1d1e3 (drm/i915: Remove .is_mobile field from platform struct)
  {
 -	phys_addr_t base, end;
  	size_t size;
 -
 -	size = early_ops->stolen_size(num, slot, func);
 -	base = early_ops->stolen_base(num, slot, func, size);
 -
 -	if (!size || !base)
 -		return;
 -
 -	end = base + size - 1;
 -	printk(KERN_INFO "Reserving Intel graphics memory at %pa-%pa\n",
 -	       &base, &end);
 -
 -	/* Mark this space as reserved */
 -	e820_add_region(base, size, E820_RESERVED);
 -	sanitize_e820_map(e820.map, ARRAY_SIZE(e820.map), &e820.nr_map);
 -}
 -
 -static void __init intel_graphics_quirks(int num, int slot, int func)
 -{
 -	const struct intel_early_ops *early_ops;
 -	u16 device;
  	int i;
 +	u32 start;
 +	u16 device, subvendor, subdevice;
  
  	device = read_pci_config_16(num, slot, func, PCI_DEVICE_ID);
 -
 -	for (i = 0; i < ARRAY_SIZE(intel_early_ids); i++) {
 -		kernel_ulong_t driver_data = intel_early_ids[i].driver_data;
 -
 -		if (intel_early_ids[i].device != device)
 -			continue;
 -
 -		early_ops = (typeof(early_ops))driver_data;
 -
 -		intel_graphics_stolen(num, slot, func, early_ops);
 -
 -		return;
 +	subvendor = read_pci_config_16(num, slot, func,
 +				       PCI_SUBSYSTEM_VENDOR_ID);
 +	subdevice = read_pci_config_16(num, slot, func, PCI_SUBSYSTEM_ID);
 +
 +	for (i = 0; i < ARRAY_SIZE(intel_stolen_ids); i++) {
 +		if (intel_stolen_ids[i].device == device) {
 +			const struct intel_stolen_funcs *stolen_funcs =
 +				(const struct intel_stolen_funcs *)intel_stolen_ids[i].driver_data;
 +			size = stolen_funcs->size(num, slot, func);
 +			start = stolen_funcs->base(num, slot, func, size);
 +			if (size && start) {
 +				printk(KERN_INFO "Reserving Intel graphics stolen memory at 0x%x-0x%x\n",
 +				       start, start + (u32)size - 1);
 +				/* Mark this space as reserved */
 +				e820_add_region(start, size, E820_RESERVED);
 +				sanitize_e820_map(e820.map,
 +						  ARRAY_SIZE(e820.map),
 +						  &e820.nr_map);
 +			}
 +			return;
 +		}
  	}
  }
  
* Unmerged path drivers/gpu/drm/i915/i915_pci.c
* Unmerged path arch/x86/kernel/early-quirks.c
* Unmerged path drivers/gpu/drm/i915/i915_pci.c
diff --git a/include/drm/i915_pciids.h b/include/drm/i915_pciids.h
index 33466bfc6440..0d5f4268d75f 100644
--- a/include/drm/i915_pciids.h
+++ b/include/drm/i915_pciids.h
@@ -134,7 +134,7 @@
 #define INTEL_IVB_Q_IDS(info) \
 	INTEL_QUANTA_VGA_DEVICE(info) /* Quanta transcode */
 
-#define INTEL_HSW_D_IDS(info) \
+#define INTEL_HSW_IDS(info) \
 	INTEL_VGA_DEVICE(0x0402, info), /* GT1 desktop */ \
 	INTEL_VGA_DEVICE(0x0412, info), /* GT2 desktop */ \
 	INTEL_VGA_DEVICE(0x0422, info), /* GT3 desktop */ \
@@ -179,9 +179,7 @@
 	INTEL_VGA_DEVICE(0x0D2B, info), /* CRW GT3 reserved */ \
 	INTEL_VGA_DEVICE(0x0D0E, info), /* CRW GT1 reserved */ \
 	INTEL_VGA_DEVICE(0x0D1E, info), /* CRW GT2 reserved */ \
-	INTEL_VGA_DEVICE(0x0D2E, info)  /* CRW GT3 reserved */ \
-
-#define INTEL_HSW_M_IDS(info) \
+	INTEL_VGA_DEVICE(0x0D2E, info),  /* CRW GT3 reserved */ \
 	INTEL_VGA_DEVICE(0x0406, info), /* GT1 mobile */ \
 	INTEL_VGA_DEVICE(0x0416, info), /* GT2 mobile */ \
 	INTEL_VGA_DEVICE(0x0426, info), /* GT2 mobile */ \
@@ -198,17 +196,15 @@
 	INTEL_VGA_DEVICE(0x0D16, info), /* CRW GT2 mobile */ \
 	INTEL_VGA_DEVICE(0x0D26, info)  /* CRW GT3 mobile */
 
-#define INTEL_VLV_M_IDS(info) \
+#define INTEL_VLV_IDS(info) \
 	INTEL_VGA_DEVICE(0x0f30, info), \
 	INTEL_VGA_DEVICE(0x0f31, info), \
 	INTEL_VGA_DEVICE(0x0f32, info), \
 	INTEL_VGA_DEVICE(0x0f33, info), \
-	INTEL_VGA_DEVICE(0x0157, info)
-
-#define INTEL_VLV_D_IDS(info) \
+	INTEL_VGA_DEVICE(0x0157, info), \
 	INTEL_VGA_DEVICE(0x0155, info)
 
-#define INTEL_BDW_GT12M_IDS(info)  \
+#define INTEL_BDW_GT12_IDS(info)  \
 	INTEL_VGA_DEVICE(0x1602, info), /* GT1 ULT */ \
 	INTEL_VGA_DEVICE(0x1606, info), /* GT1 ULT */ \
 	INTEL_VGA_DEVICE(0x160B, info), /* GT1 Iris */ \
@@ -216,21 +212,17 @@
 	INTEL_VGA_DEVICE(0x1612, info), /* GT2 Halo */ \
 	INTEL_VGA_DEVICE(0x1616, info), /* GT2 ULT */ \
 	INTEL_VGA_DEVICE(0x161B, info), /* GT2 ULT */ \
-	INTEL_VGA_DEVICE(0x161E, info)  /* GT2 ULX */
-
-#define INTEL_BDW_GT12D_IDS(info) \
+	INTEL_VGA_DEVICE(0x161E, info),  /* GT2 ULX */ \
 	INTEL_VGA_DEVICE(0x160A, info), /* GT1 Server */ \
 	INTEL_VGA_DEVICE(0x160D, info), /* GT1 Workstation */ \
 	INTEL_VGA_DEVICE(0x161A, info), /* GT2 Server */ \
 	INTEL_VGA_DEVICE(0x161D, info)  /* GT2 Workstation */
 
-#define INTEL_BDW_GT3M_IDS(info) \
+#define INTEL_BDW_GT3_IDS(info) \
 	INTEL_VGA_DEVICE(0x1622, info), /* ULT */ \
 	INTEL_VGA_DEVICE(0x1626, info), /* ULT */ \
 	INTEL_VGA_DEVICE(0x162B, info), /* Iris */ \
-	INTEL_VGA_DEVICE(0x162E, info)  /* ULX */
-
-#define INTEL_BDW_GT3D_IDS(info) \
+	INTEL_VGA_DEVICE(0x162E, info),  /* ULX */\
 	INTEL_VGA_DEVICE(0x162A, info), /* Server */ \
 	INTEL_VGA_DEVICE(0x162D, info)  /* Workstation */
 
@@ -244,14 +236,12 @@
 	INTEL_VGA_DEVICE(0x163A, info), /* Server */ \
 	INTEL_VGA_DEVICE(0x163D, info)  /* Workstation */
 
-#define INTEL_BDW_M_IDS(info) \
-	INTEL_BDW_GT12M_IDS(info), \
-	INTEL_BDW_GT3M_IDS(info), \
-	INTEL_BDW_RSVDM_IDS(info)
-
-#define INTEL_BDW_D_IDS(info) \
-	INTEL_BDW_GT12D_IDS(info), \
-	INTEL_BDW_GT3D_IDS(info), \
+#define INTEL_BDW_IDS(info) \
+	INTEL_BDW_GT12_IDS(info), \
+	INTEL_BDW_GT3_IDS(info), \
+	INTEL_BDW_RSVDM_IDS(info), \
+	INTEL_BDW_GT12_IDS(info), \
+	INTEL_BDW_GT3_IDS(info), \
 	INTEL_BDW_RSVDD_IDS(info)
 
 #define INTEL_CHV_IDS(info) \
