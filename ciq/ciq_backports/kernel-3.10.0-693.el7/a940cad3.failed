perf build: Check LLVM version in feature check

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit a940cad331e79cc03d9ae74f56a2c7cb810bdce9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a940cad3.failed

Cancel builtin llvm and clang support when LLVM version is less than
3.9.0: following commits uses newer API.

Since Clang/LLVM's API is not guaranteed to be stable, add a
test-llvm-version.cpp feature checker, issue warning if LLVM found in
compiling environment is not tested yet.

Committer Notes:

Testing it:

Environment:

  $ cat /etc/fedora-release
  Fedora release 25 (Twenty Five)
  $ rpm -q llvm-devel clang-devel
  llvm-devel-3.8.0-1.fc25.x86_64
  clang-devel-3.8.0-2.fc25.x86_64
  $

Before:

  $  make -k LIBCLANGLLVM=1 O=/tmp/build/perf -C tools/perf install-bin
  make: Entering directory '/home/acme/git/linux/tools/perf'
    BUILD:   Doing 'make -j4' parallel build
  Warning: tools/include/uapi/linux/bpf.h differs from kernel
  Warning: tools/arch/arm/include/uapi/asm/kvm.h differs from kernel
    INSTALL  GTK UI
    LINK     /tmp/build/perf/perf
  /tmp/build/perf/libperf.a(libperf-in.o): In function `perf::createCompilerInvocation(llvm::SmallVector<char const*, 16u>, llvm::StringRef&, clang::DiagnosticsEngine&)':
  /home/acme/git/linux/tools/perf/util/c++/clang.cpp:56: undefined reference to `clang::tooling::newInvocation(clang::DiagnosticsEngine*, llvm::SmallVector<char const*, 16u> const&)'
  /tmp/build/perf/libperf.a(libperf-in.o): In function `perf::getModuleFromSource(llvm::SmallVector<char const*, 16u>, llvm::StringRef, llvm::IntrusiveRefCntPtr<clang::vfs::FileSystem>)':
  /home/acme/git/linux/tools/perf/util/c++/clang.cpp:68: undefined reference to `clang::CompilerInstance::CompilerInstance(std::shared_ptr<clang::PCHContainerOperations>, bool)'
  /home/acme/git/linux/tools/perf/util/c++/clang.cpp:69: undefined reference to `clang::CompilerInstance::createDiagnostics(clang::DiagnosticConsumer*, bool)'
  <SNIP>

After:

  Makefile.config:807: No suitable libLLVM found, disabling builtin clang and llvm support. Please install llvm-dev(el) (>= 3.9.0)

Updating the environment to a locally built LLVM 4.0 + clang 3.9 (forgot
to git pull, duh) combo, all works as expected, it is properly detected
and built into the resulting perf binary.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
Reported-and-Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Alexei Starovoitov <ast@fb.com>
	Cc: He Kuang <hekuang@huawei.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Joe Stringer <joe@ovn.org>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/20161206072230.7651-1-wangnan0@huawei.com
[ Change the warning message a bit (add 'suitable' and 'builtin'), clarifying it, see committer notes above ]
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit a940cad331e79cc03d9ae74f56a2c7cb810bdce9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/build/feature/Makefile
#	tools/build/feature/test-llvm.cpp
#	tools/perf/Makefile.config
diff --cc tools/build/feature/Makefile
index 017397a4639a,b564a2eea039..000000000000
--- a/tools/build/feature/Makefile
+++ b/tools/build/feature/Makefile
@@@ -209,6 -218,39 +209,42 @@@ $(OUTPUT)test-lzma.bin
  $(OUTPUT)test-get_cpuid.bin:
  	$(BUILD)
  
++<<<<<<< HEAD
++=======
+ $(OUTPUT)test-bpf.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-sdt.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-cxx.bin:
+ 	$(BUILDXX) -std=gnu++11
+ 
+ $(OUTPUT)test-jvmti.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-llvm.bin:
+ 	$(BUILDXX) -std=gnu++11 				\
+ 		-I$(shell $(LLVM_CONFIG) --includedir) 		\
+ 		-L$(shell $(LLVM_CONFIG) --libdir)		\
+ 		$(shell $(LLVM_CONFIG) --libs Core BPF)		\
+ 		$(shell $(LLVM_CONFIG) --system-libs)
+ 
+ $(OUTPUT)test-llvm-version.bin:
+ 	$(BUILDXX) -std=gnu++11 				\
+ 		-I$(shell $(LLVM_CONFIG) --includedir)
+ 
+ $(OUTPUT)test-clang.bin:
+ 	$(BUILDXX) -std=gnu++11 				\
+ 		-I$(shell $(LLVM_CONFIG) --includedir) 		\
+ 		-L$(shell $(LLVM_CONFIG) --libdir)		\
+ 		-Wl,--start-group -lclangBasic -lclangDriver	\
+ 		  -lclangFrontend -lclangEdit -lclangLex	\
+ 		  -lclangAST -Wl,--end-group 			\
+ 		$(shell $(LLVM_CONFIG) --libs Core option)	\
+ 		$(shell $(LLVM_CONFIG) --system-libs)
+ 
++>>>>>>> a940cad331e7 (perf build: Check LLVM version in feature check)
  -include $(OUTPUT)*.d
  
  ###############################
diff --cc tools/perf/Makefile.config
index 37a8404311a3,76c84f0eec52..000000000000
--- a/tools/perf/Makefile.config
+++ b/tools/perf/Makefile.config
@@@ -720,6 -769,62 +720,65 @@@ ifndef NO_AUXTRAC
    endif
  endif
  
++<<<<<<< HEAD
++=======
+ ifndef NO_JVMTI
+   ifneq (,$(wildcard /usr/sbin/update-java-alternatives))
+     JDIR=$(shell /usr/sbin/update-java-alternatives -l | head -1 | awk '{print $$3}')
+   else
+     ifneq (,$(wildcard /usr/sbin/alternatives))
+       JDIR=$(shell alternatives --display java | tail -1 | cut -d' ' -f 5 | sed 's%/jre/bin/java.%%g')
+     endif
+   endif
+   ifndef JDIR
+     $(warning No alternatives command found, you need to set JDIR= to point to the root of your Java directory)
+     NO_JVMTI := 1
+   endif
+ endif
+ 
+ ifndef NO_JVMTI
+   FEATURE_CHECK_CFLAGS-jvmti := -I$(JDIR)/include -I$(JDIR)/include/linux
+   $(call feature_check,jvmti)
+   ifeq ($(feature-jvmti), 1)
+     $(call detected_var,JDIR)
+   else
+     $(warning No openjdk development package found, please install JDK package)
+     NO_JVMTI := 1
+   endif
+ endif
+ 
+ USE_CXX = 0
+ USE_CLANGLLVM = 0
+ ifdef LIBCLANGLLVM
+   $(call feature_check,cxx)
+   ifneq ($(feature-cxx), 1)
+     msg := $(warning No g++ found, disable clang and llvm support. Please install g++)
+   else
+     $(call feature_check,llvm)
+     $(call feature_check,llvm-version)
+     ifneq ($(feature-llvm), 1)
+       msg := $(warning No suitable libLLVM found, disabling builtin clang and LLVM support. Please install llvm-dev(el) (>= 3.9.0))
+     else
+       $(call feature_check,clang)
+       ifneq ($(feature-clang), 1)
+         msg := $(warning No suitable libclang found, disabling builtin clang and LLVM support. Please install libclang-dev(el) (>= 3.9.0))
+       else
+         CFLAGS += -DHAVE_LIBCLANGLLVM_SUPPORT
+         CXXFLAGS += -DHAVE_LIBCLANGLLVM_SUPPORT -I$(shell $(LLVM_CONFIG) --includedir)
+         $(call detected,CONFIG_CXX)
+         $(call detected,CONFIG_CLANGLLVM)
+ 	USE_CXX = 1
+ 	USE_LLVM = 1
+ 	USE_CLANG = 1
+         ifneq ($(feature-llvm-version),1)
+           msg := $(warning This version of LLVM is not tested. May cause build errors)
+         endif
+       endif
+     endif
+   endif
+ endif
+ 
++>>>>>>> a940cad331e7 (perf build: Check LLVM version in feature check)
  # Among the variables below, these:
  #   perfexecdir
  #   template_dir
* Unmerged path tools/build/feature/test-llvm.cpp
* Unmerged path tools/build/feature/Makefile
diff --git a/tools/build/feature/test-llvm-version.cpp b/tools/build/feature/test-llvm-version.cpp
new file mode 100644
index 000000000000..896d31724568
--- /dev/null
+++ b/tools/build/feature/test-llvm-version.cpp
@@ -0,0 +1,11 @@
+#include <cstdio>
+#include "llvm/Config/llvm-config.h"
+
+#define NUM_VERSION (((LLVM_VERSION_MAJOR) << 16) + (LLVM_VERSION_MINOR << 8) + LLVM_VERSION_PATCH)
+#define pass int main() {printf("%x\n", NUM_VERSION); return 0;}
+
+#if NUM_VERSION >= 0x030900
+pass
+#else
+# error This LLVM is not tested yet.
+#endif
* Unmerged path tools/build/feature/test-llvm.cpp
* Unmerged path tools/perf/Makefile.config
