HID: wacom - make sure touch_input is valid before using it

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom - make sure touch_input is valid before using it (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 95.58%
commit-author Ping Cheng <pinglinux@gmail.com>
commit 44b9683853c7b47d039366d7d2fd0d5380aba276
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/44b96838.failed

touch_input is stored in wacom_shared for pen data to report touch
switch status. It is possible, although we didn't see it happen on
Linux yet, that pen data is procesed before touch interface is
fully probed.

As a by-product of this patch, it fixes the FreeBSD issue reported
by Denis Akiyakov http://www.spinics.net/lists/linux-input/msg33971.html

	Reviewed-by: Hans Petter Selasky <hps@selasky.org>
	Tested-by: Denis Akiyakov <d.akiyakov@gmail.com>
	Signed-off-by: Ping Cheng <pingc@wacom.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 44b9683853c7b47d039366d7d2fd0d5380aba276)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_wac.c
diff --cc drivers/hid/wacom_wac.c
index 01ec753fea53,d343a6ee5bf7..000000000000
--- a/drivers/hid/wacom_wac.c
+++ b/drivers/hid/wacom_wac.c
@@@ -1237,9 -1677,20 +1237,23 @@@ static int wacom_bpt_pen(struct wacom_w
  	unsigned char *data = wacom->data;
  	int prox = 0, x = 0, y = 0, p = 0, d = 0, pen = 0, btn1 = 0, btn2 = 0;
  
 -	if (data[0] != WACOM_REPORT_PENABLED && data[0] != WACOM_REPORT_USB)
 +	if (data[0] != 0x02)
  	    return 0;
  
++<<<<<<< HEAD
++=======
+ 	if (data[0] == WACOM_REPORT_USB) {
+ 		if (features->type == INTUOSHT &&
+ 		    wacom->shared->touch_input &&
+ 		    features->touch_max) {
+ 			input_report_switch(wacom->shared->touch_input,
+ 					    SW_MUTE_DEVICE, data[8] & 0x40);
+ 			input_sync(wacom->shared->touch_input);
+ 		}
+ 		return 0;
+ 	}
+ 
++>>>>>>> 44b9683853c7 (HID: wacom - make sure touch_input is valid before using it)
  	prox = (data[1] & 0x20) == 0x20;
  
  	/*
@@@ -1322,10 -1773,19 +1336,22 @@@ static int wacom_wireless_irq(struct wa
  
  	connected = data[1] & 0x01;
  	if (connected) {
++<<<<<<< HEAD
 +		int pid, battery;
++=======
+ 		int pid, battery, ps_connected;
+ 
+ 		if ((wacom->shared->type == INTUOSHT) &&
+ 		    wacom->shared->touch_input &&
+ 		    wacom->shared->touch_max) {
+ 			input_report_switch(wacom->shared->touch_input,
+ 					SW_MUTE_DEVICE, data[5] & 0x40);
+ 			input_sync(wacom->shared->touch_input);
+ 		}
++>>>>>>> 44b9683853c7 (HID: wacom - make sure touch_input is valid before using it)
  
  		pid = get_unaligned_be16(&data[6]);
 -		battery = (data[5] & 0x3f) * 100 / 31;
 -		ps_connected = !!(data[5] & 0x80);
 +		battery = data[5] & 0x3f;
  		if (wacom->pid != pid) {
  			wacom->pid = pid;
  			wacom_schedule_work(wacom);
* Unmerged path drivers/hid/wacom_wac.c
