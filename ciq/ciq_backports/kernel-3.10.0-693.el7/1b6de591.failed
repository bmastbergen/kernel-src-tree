perf/x86/intel/pt: Convert ACCESS_ONCE()s

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Alexander Shishkin <alexander.shishkin@linux.intel.com>
commit 1b6de5917172967acd8db4d222df4225d23a8a60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/1b6de591.failed

This patch converts remaining ACCESS_ONCE() instances into READ_ONCE()
and WRITE_ONCE() as appropriate.

	Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
	Cc: vince@deater.net
Link: http://lkml.kernel.org/r/1461857746-31346-2-git-send-email-alexander.shishkin@linux.intel.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 1b6de5917172967acd8db4d222df4225d23a8a60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/intel/pt.c
diff --cc arch/x86/events/intel/pt.c
index 5cc14dd32baa,54fa238d84d5..000000000000
--- a/arch/x86/events/intel/pt.c
+++ b/arch/x86/events/intel/pt.c
@@@ -1248,13 -1227,18 +1248,18 @@@ static void pt_event_start(struct perf_
  	if (READ_ONCE(pt->vmx_on))
  		return;
  
 -	buf = perf_aux_output_begin(&pt->handle, event);
 -	if (!buf)
 -		goto fail_stop;
 -
 -	pt_buffer_reset_offsets(buf, pt->handle.head);
 -	if (!buf->snapshot) {
 -		if (pt_buffer_reset_markers(buf, &pt->handle))
 -			goto fail_end_stop;
 +	if (!buf || pt_buffer_is_full(buf, pt)) {
 +		event->hw.state = PERF_HES_STOPPED;
 +		return;
  	}
  
++<<<<<<< HEAD
 +	ACCESS_ONCE(pt->handle_nmi) = 1;
 +	event->hw.state = 0;
++=======
+ 	WRITE_ONCE(pt->handle_nmi, 1);
+ 	hwc->state = 0;
++>>>>>>> 1b6de5917172 (perf/x86/intel/pt: Convert ACCESS_ONCE()s)
  
  	pt_config_buffer(buf->cur->table, buf->cur_idx,
  			 buf->output_off);
* Unmerged path arch/x86/events/intel/pt.c
