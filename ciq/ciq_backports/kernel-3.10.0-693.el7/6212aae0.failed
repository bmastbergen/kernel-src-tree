HID: wacom: Remove useless conditions from 'wacom_query_tablet_data'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom: Remove useless conditions from wacom_query_tablet_data (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 94.57%
commit-author Jason Gerecke <killertofu@gmail.com>
commit 6212aae0d4de273e8dbc9f889d0c7ef8317284df
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/6212aae0.failed

When support for the Cintiq Companion Hybrid and Cintiq Companion 2 was
added (36d3c51 and f7acb55), the 'wacom_query_tablet_data' function was
updated to include references to CINTIQ_HYBRID and CINTIQ_COMPANION_2
with the thought that they were necessary to switch the touch interface
into the proper mode. This is unnecessary, however, since those types
are only ever associated with the pen interface -- the touch interfaces
are either CINTIQ_24HDT or HID_GENERIC. To avoid confusion in the future,
we remove the unnecessary CINTIQ_HYBRID and CINTIQ_COMPANION_2 conditions.

	Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
	Reviewed-by: Ping Cheng <pingc@wacom.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 6212aae0d4de273e8dbc9f889d0c7ef8317284df)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_sys.c
diff --cc drivers/hid/wacom_sys.c
index 527bf559d1db,abb7fdf05d92..000000000000
--- a/drivers/hid/wacom_sys.c
+++ b/drivers/hid/wacom_sys.c
@@@ -563,22 -408,32 +563,26 @@@ static int wacom_set_device_mode(struc
   * from the tablet, it is necessary to switch the tablet out of this
   * mode and into one which sends the full range of tablet data.
   */
 -static int wacom_query_tablet_data(struct hid_device *hdev,
 -		struct wacom_features *features)
 +static int wacom_query_tablet_data(struct usb_interface *intf, struct wacom_features *features)
  {
 -	if (hdev->bus == BUS_BLUETOOTH)
 -		return wacom_bt_query_tablet_data(hdev, 1, features);
 -
 -	if (features->type == HID_GENERIC)
 -		return wacom_hid_set_device_mode(hdev);
 -
 -	if (features->device_type & WACOM_DEVICETYPE_TOUCH) {
 +	if (features->device_type == BTN_TOOL_FINGER) {
  		if (features->type > TABLETPC) {
  			/* MT Tablet PC touch */
 -			return wacom_set_device_mode(hdev, 3, 4, 4);
 +			return wacom_set_device_mode(intf, 3, 4, 4);
  		}
  		else if (features->type == WACOM_24HDT) {
++<<<<<<< HEAD
 +			return wacom_set_device_mode(intf, 18, 3, 2);
++=======
+ 			return wacom_set_device_mode(hdev, 18, 3, 2);
++>>>>>>> 6212aae0d4de (HID: wacom: Remove useless conditions from 'wacom_query_tablet_data')
  		}
  		else if (features->type == WACOM_27QHDT) {
 -			return wacom_set_device_mode(hdev, 131, 3, 2);
 +			return wacom_set_device_mode(intf, 131, 3, 2);
  		}
 -		else if (features->type == BAMBOO_PAD) {
 -			return wacom_set_device_mode(hdev, 2, 2, 2);
 -		}
 -	} else if (features->device_type & WACOM_DEVICETYPE_PEN) {
 -		if (features->type <= BAMBOO_PT) {
 -			return wacom_set_device_mode(hdev, 2, 2, 2);
 +	} else if (features->device_type == BTN_TOOL_PEN) {
 +		if (features->type <= BAMBOO_PT && features->type != WIRELESS) {
 +			return wacom_set_device_mode(intf, 2, 2, 2);
  		}
  	}
  
* Unmerged path drivers/hid/wacom_sys.c
