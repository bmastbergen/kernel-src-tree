pinctrl: make pinctrl_register() return proper error code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [pinctrl] make pinctrl_register() return proper error code (Suravee Suthikulpanit) [1329005]
Rebuild_FUZZ: 91.43%
commit-author Masahiro Yamada <yamada.masahiro@socionext.com>
commit 323de9efdf3e75d1dfb48003a52e59d6d9d4c7a5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/323de9ef.failed

Currently, pinctrl_register() just returns NULL on error, so the
callers can not know the exact reason of the failure.

Some of the pinctrl drivers return -EINVAL, some -ENODEV, and some
-ENOMEM on error of pinctrl_register(), although the error code
might be different from the real cause of the error.

This commit reworks pinctrl_register() to return the appropriate
error code and modifies all of the pinctrl drivers to use IS_ERR()
for the error checking and PTR_ERR() for getting the error code.

	Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
	Acked-by: Patrice Chotard <patrice.chotard@st.com>
	Acked-by: Thierry Reding <treding@nvidia.com>
	Acked-by: Heiko Stuebner <heiko@sntech.de>
	Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Acked-by: Lee Jones <lee@kernel.org>
	Acked-by: SÃ¶ren Brinkmann <soren.brinkmann@xilinx.com>
	Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Acked-by: Ray Jui <rjui@broadcom.com>
	Acked-by: Antoine Tenart <antoine.tenart@free-electrons.com>
	Acked-by: Hongzhou Yang <hongzhou.yang@mediatek.com>
	Acked-by: Wei Chen <Wei.Chen@csr.com>
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit 323de9efdf3e75d1dfb48003a52e59d6d9d4c7a5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pinctrl/bcm/pinctrl-bcm281xx.c
#	drivers/pinctrl/bcm/pinctrl-cygnus-gpio.c
#	drivers/pinctrl/bcm/pinctrl-cygnus-mux.c
#	drivers/pinctrl/berlin/berlin.c
#	drivers/pinctrl/freescale/pinctrl-imx1-core.c
#	drivers/pinctrl/intel/pinctrl-cherryview.c
#	drivers/pinctrl/intel/pinctrl-intel.c
#	drivers/pinctrl/mediatek/pinctrl-mtk-common.c
#	drivers/pinctrl/meson/pinctrl-meson.c
#	drivers/pinctrl/pinctrl-adi2.c
#	drivers/pinctrl/pinctrl-amd.c
#	drivers/pinctrl/pinctrl-as3722.c
#	drivers/pinctrl/pinctrl-at91.c
#	drivers/pinctrl/pinctrl-lpc18xx.c
#	drivers/pinctrl/pinctrl-palmas.c
#	drivers/pinctrl/pinctrl-pistachio.c
#	drivers/pinctrl/pinctrl-rockchip.c
#	drivers/pinctrl/pinctrl-st.c
#	drivers/pinctrl/pinctrl-tb10x.c
#	drivers/pinctrl/pinctrl-tegra-xusb.c
#	drivers/pinctrl/pinctrl-tz1090-pdc.c
#	drivers/pinctrl/pinctrl-tz1090.c
#	drivers/pinctrl/pinctrl-zynq.c
#	drivers/pinctrl/qcom/pinctrl-msm.c
#	drivers/pinctrl/qcom/pinctrl-spmi-gpio.c
#	drivers/pinctrl/qcom/pinctrl-spmi-mpp.c
#	drivers/pinctrl/sirf/pinctrl-atlas7.c
#	drivers/pinctrl/sirf/pinctrl-sirf.c
#	drivers/pinctrl/sunxi/pinctrl-sunxi.c
diff --cc drivers/pinctrl/pinctrl-at91.c
index 314e5e8e9122,a0824477072b..000000000000
--- a/drivers/pinctrl/pinctrl-at91.c
+++ b/drivers/pinctrl/pinctrl-at91.c
@@@ -1043,10 -1238,9 +1043,14 @@@ static int at91_pinctrl_probe(struct pl
  	platform_set_drvdata(pdev, info);
  	info->pctl = pinctrl_register(&at91_pinctrl_desc, &pdev->dev, info);
  
- 	if (!info->pctl) {
+ 	if (IS_ERR(info->pctl)) {
  		dev_err(&pdev->dev, "could not register AT91 pinctrl driver\n");
++<<<<<<< HEAD
 +		ret = -EINVAL;
 +		goto err;
++=======
+ 		return PTR_ERR(info->pctl);
++>>>>>>> 323de9efdf3e (pinctrl: make pinctrl_register() return proper error code)
  	}
  
  	/* We will handle a range of GPIO pins */
* Unmerged path drivers/pinctrl/bcm/pinctrl-bcm281xx.c
* Unmerged path drivers/pinctrl/bcm/pinctrl-cygnus-gpio.c
* Unmerged path drivers/pinctrl/bcm/pinctrl-cygnus-mux.c
* Unmerged path drivers/pinctrl/berlin/berlin.c
* Unmerged path drivers/pinctrl/freescale/pinctrl-imx1-core.c
* Unmerged path drivers/pinctrl/intel/pinctrl-cherryview.c
* Unmerged path drivers/pinctrl/intel/pinctrl-intel.c
* Unmerged path drivers/pinctrl/mediatek/pinctrl-mtk-common.c
* Unmerged path drivers/pinctrl/meson/pinctrl-meson.c
* Unmerged path drivers/pinctrl/pinctrl-adi2.c
* Unmerged path drivers/pinctrl/pinctrl-amd.c
* Unmerged path drivers/pinctrl/pinctrl-as3722.c
* Unmerged path drivers/pinctrl/pinctrl-lpc18xx.c
* Unmerged path drivers/pinctrl/pinctrl-palmas.c
* Unmerged path drivers/pinctrl/pinctrl-pistachio.c
* Unmerged path drivers/pinctrl/pinctrl-rockchip.c
* Unmerged path drivers/pinctrl/pinctrl-st.c
* Unmerged path drivers/pinctrl/pinctrl-tb10x.c
* Unmerged path drivers/pinctrl/pinctrl-tegra-xusb.c
* Unmerged path drivers/pinctrl/pinctrl-tz1090-pdc.c
* Unmerged path drivers/pinctrl/pinctrl-tz1090.c
* Unmerged path drivers/pinctrl/pinctrl-zynq.c
* Unmerged path drivers/pinctrl/qcom/pinctrl-msm.c
* Unmerged path drivers/pinctrl/qcom/pinctrl-spmi-gpio.c
* Unmerged path drivers/pinctrl/qcom/pinctrl-spmi-mpp.c
* Unmerged path drivers/pinctrl/sirf/pinctrl-atlas7.c
* Unmerged path drivers/pinctrl/sirf/pinctrl-sirf.c
* Unmerged path drivers/pinctrl/sunxi/pinctrl-sunxi.c
* Unmerged path drivers/pinctrl/bcm/pinctrl-bcm281xx.c
* Unmerged path drivers/pinctrl/bcm/pinctrl-cygnus-gpio.c
* Unmerged path drivers/pinctrl/bcm/pinctrl-cygnus-mux.c
* Unmerged path drivers/pinctrl/berlin/berlin.c
diff --git a/drivers/pinctrl/core.c b/drivers/pinctrl/core.c
index aaf81e173305..135fa34bd33e 100644
--- a/drivers/pinctrl/core.c
+++ b/drivers/pinctrl/core.c
@@ -1714,14 +1714,14 @@ struct pinctrl_dev *pinctrl_register(struct pinctrl_desc *pctldesc,
 	int ret;
 
 	if (!pctldesc)
-		return NULL;
+		return ERR_PTR(-EINVAL);
 	if (!pctldesc->name)
-		return NULL;
+		return ERR_PTR(-EINVAL);
 
 	pctldev = kzalloc(sizeof(*pctldev), GFP_KERNEL);
 	if (pctldev == NULL) {
 		dev_err(dev, "failed to alloc struct pinctrl_dev\n");
-		return NULL;
+		return ERR_PTR(-ENOMEM);
 	}
 
 	/* Initialize pin control device struct */
@@ -1734,20 +1734,23 @@ struct pinctrl_dev *pinctrl_register(struct pinctrl_desc *pctldesc,
 	mutex_init(&pctldev->mutex);
 
 	/* check core ops for sanity */
-	if (pinctrl_check_ops(pctldev)) {
+	ret = pinctrl_check_ops(pctldev);
+	if (ret) {
 		dev_err(dev, "pinctrl ops lacks necessary functions\n");
 		goto out_err;
 	}
 
 	/* If we're implementing pinmuxing, check the ops for sanity */
 	if (pctldesc->pmxops) {
-		if (pinmux_check_ops(pctldev))
+		ret = pinmux_check_ops(pctldev);
+		if (ret)
 			goto out_err;
 	}
 
 	/* If we're implementing pinconfig, check the ops for sanity */
 	if (pctldesc->confops) {
-		if (pinconf_check_ops(pctldev))
+		ret = pinconf_check_ops(pctldev);
+		if (ret)
 			goto out_err;
 	}
 
@@ -1793,7 +1796,7 @@ struct pinctrl_dev *pinctrl_register(struct pinctrl_desc *pctldesc,
 out_err:
 	mutex_destroy(&pctldev->mutex);
 	kfree(pctldev);
-	return NULL;
+	return ERR_PTR(ret);
 }
 EXPORT_SYMBOL_GPL(pinctrl_register);
 
* Unmerged path drivers/pinctrl/freescale/pinctrl-imx1-core.c
* Unmerged path drivers/pinctrl/intel/pinctrl-cherryview.c
* Unmerged path drivers/pinctrl/intel/pinctrl-intel.c
* Unmerged path drivers/pinctrl/mediatek/pinctrl-mtk-common.c
* Unmerged path drivers/pinctrl/meson/pinctrl-meson.c
diff --git a/drivers/pinctrl/mvebu/pinctrl-mvebu.c b/drivers/pinctrl/mvebu/pinctrl-mvebu.c
index bb7ddb1bc89f..cfed9312050c 100644
--- a/drivers/pinctrl/mvebu/pinctrl-mvebu.c
+++ b/drivers/pinctrl/mvebu/pinctrl-mvebu.c
@@ -739,9 +739,9 @@ int mvebu_pinctrl_probe(struct platform_device *pdev)
 	}
 
 	pctl->pctldev = pinctrl_register(&pctl->desc, &pdev->dev, pctl);
-	if (!pctl->pctldev) {
+	if (IS_ERR(pctl->pctldev)) {
 		dev_err(&pdev->dev, "unable to register pinctrl driver\n");
-		return -EINVAL;
+		return PTR_ERR(pctl->pctldev);
 	}
 
 	dev_info(&pdev->dev, "registered pinctrl driver\n");
diff --git a/drivers/pinctrl/pinctrl-abx500.c b/drivers/pinctrl/pinctrl-abx500.c
index 6d4532702f80..670619622011 100644
--- a/drivers/pinctrl/pinctrl-abx500.c
+++ b/drivers/pinctrl/pinctrl-abx500.c
@@ -925,10 +925,10 @@ static int abx500_gpio_probe(struct platform_device *pdev)
 	abx500_pinctrl_desc.pins = pct->soc->pins;
 	abx500_pinctrl_desc.npins = pct->soc->npins;
 	pct->pctldev = pinctrl_register(&abx500_pinctrl_desc, &pdev->dev, pct);
-	if (!pct->pctldev) {
+	if (IS_ERR(pct->pctldev)) {
 		dev_err(&pdev->dev,
 			"could not register abx500 pinctrl driver\n");
-		ret = -EINVAL;
+		ret = PTR_ERR(pct->pctldev);
 		goto out_rem_chip;
 	}
 	dev_info(&pdev->dev, "registered pin controller\n");
* Unmerged path drivers/pinctrl/pinctrl-adi2.c
* Unmerged path drivers/pinctrl/pinctrl-amd.c
* Unmerged path drivers/pinctrl/pinctrl-as3722.c
* Unmerged path drivers/pinctrl/pinctrl-at91.c
diff --git a/drivers/pinctrl/pinctrl-bcm2835.c b/drivers/pinctrl/pinctrl-bcm2835.c
index c8f20a3d8f88..b017150f34f9 100644
--- a/drivers/pinctrl/pinctrl-bcm2835.c
+++ b/drivers/pinctrl/pinctrl-bcm2835.c
@@ -1032,9 +1032,9 @@ static int bcm2835_pinctrl_probe(struct platform_device *pdev)
 	}
 
 	pc->pctl_dev = pinctrl_register(&bcm2835_pinctrl_desc, dev, pc);
-	if (!pc->pctl_dev) {
+	if (IS_ERR(pc->pctl_dev)) {
 		gpiochip_remove(&pc->gpio_chip);
-		return -EINVAL;
+		return PTR_ERR(pc->pctl_dev);
 	}
 
 	pc->gpio_range = bcm2835_pinctrl_gpio_range;
diff --git a/drivers/pinctrl/pinctrl-exynos5440.c b/drivers/pinctrl/pinctrl-exynos5440.c
index 32a48f44f574..c6654b5fa3f8 100644
--- a/drivers/pinctrl/pinctrl-exynos5440.c
+++ b/drivers/pinctrl/pinctrl-exynos5440.c
@@ -817,9 +817,9 @@ static int exynos5440_pinctrl_register(struct platform_device *pdev,
 		return ret;
 
 	pctl_dev = pinctrl_register(ctrldesc, &pdev->dev, priv);
-	if (!pctl_dev) {
+	if (IS_ERR(pctl_dev)) {
 		dev_err(&pdev->dev, "could not register pinctrl driver\n");
-		return -EINVAL;
+		return PTR_ERR(pctl_dev);
 	}
 
 	grange.name = "exynos5440-pctrl-gpio-range";
diff --git a/drivers/pinctrl/pinctrl-imx.c b/drivers/pinctrl/pinctrl-imx.c
index 4fcfff9243be..be48179b7021 100644
--- a/drivers/pinctrl/pinctrl-imx.c
+++ b/drivers/pinctrl/pinctrl-imx.c
@@ -570,9 +570,9 @@ int imx_pinctrl_probe(struct platform_device *pdev,
 	ipctl->dev = info->dev;
 	platform_set_drvdata(pdev, ipctl);
 	ipctl->pctl = pinctrl_register(&imx_pinctrl_desc, &pdev->dev, ipctl);
-	if (!ipctl->pctl) {
+	if (IS_ERR(ipctl->pctl)) {
 		dev_err(&pdev->dev, "could not register IMX pinctrl driver\n");
-		return -EINVAL;
+		return PTR_ERR(ipctl->pctl);
 	}
 
 	dev_info(&pdev->dev, "initialized IMX pinctrl driver\n");
diff --git a/drivers/pinctrl/pinctrl-lantiq.c b/drivers/pinctrl/pinctrl-lantiq.c
index d22ca252b80d..dfac2299007b 100644
--- a/drivers/pinctrl/pinctrl-lantiq.c
+++ b/drivers/pinctrl/pinctrl-lantiq.c
@@ -337,9 +337,9 @@ int ltq_pinctrl_register(struct platform_device *pdev,
 	info->dev = &pdev->dev;
 
 	info->pctrl = pinctrl_register(desc, &pdev->dev, info);
-	if (!info->pctrl) {
+	if (IS_ERR(info->pctrl)) {
 		dev_err(&pdev->dev, "failed to register LTQ pinmux driver\n");
-		return -EINVAL;
+		return PTR_ERR(info->pctrl);
 	}
 	platform_set_drvdata(pdev, info);
 	return 0;
* Unmerged path drivers/pinctrl/pinctrl-lpc18xx.c
diff --git a/drivers/pinctrl/pinctrl-mxs.c b/drivers/pinctrl/pinctrl-mxs.c
index b45c4eb35798..ec165ac3b07b 100644
--- a/drivers/pinctrl/pinctrl-mxs.c
+++ b/drivers/pinctrl/pinctrl-mxs.c
@@ -506,9 +506,9 @@ int mxs_pinctrl_probe(struct platform_device *pdev,
 	}
 
 	d->pctl = pinctrl_register(&mxs_pinctrl_desc, &pdev->dev, d);
-	if (!d->pctl) {
+	if (IS_ERR(d->pctl)) {
 		dev_err(&pdev->dev, "Couldn't register MXS pinctrl driver\n");
-		ret = -EINVAL;
+		ret = PTR_ERR(d->pctl);
 		goto err;
 	}
 
diff --git a/drivers/pinctrl/pinctrl-nomadik.c b/drivers/pinctrl/pinctrl-nomadik.c
index 34281754b629..013ba1a1c207 100644
--- a/drivers/pinctrl/pinctrl-nomadik.c
+++ b/drivers/pinctrl/pinctrl-nomadik.c
@@ -2213,9 +2213,9 @@ static int nmk_pinctrl_probe(struct platform_device *pdev)
 	npct->dev = &pdev->dev;
 
 	npct->pctl = pinctrl_register(&nmk_pinctrl_desc, &pdev->dev, npct);
-	if (!npct->pctl) {
+	if (IS_ERR(npct->pctl)) {
 		dev_err(&pdev->dev, "could not register Nomadik pinctrl driver\n");
-		return -EINVAL;
+		return PTR_ERR(npct->pctl);
 	}
 
 	/* We will handle a range of GPIO pins */
* Unmerged path drivers/pinctrl/pinctrl-palmas.c
* Unmerged path drivers/pinctrl/pinctrl-pistachio.c
* Unmerged path drivers/pinctrl/pinctrl-rockchip.c
diff --git a/drivers/pinctrl/pinctrl-samsung.c b/drivers/pinctrl/pinctrl-samsung.c
index 63ac22e89678..1e2623db5cc0 100644
--- a/drivers/pinctrl/pinctrl-samsung.c
+++ b/drivers/pinctrl/pinctrl-samsung.c
@@ -768,9 +768,9 @@ static int samsung_pinctrl_register(struct platform_device *pdev,
 	}
 
 	drvdata->pctl_dev = pinctrl_register(ctrldesc, &pdev->dev, drvdata);
-	if (!drvdata->pctl_dev) {
+	if (IS_ERR(drvdata->pctl_dev)) {
 		dev_err(&pdev->dev, "could not register pinctrl driver\n");
-		return -EINVAL;
+		return PTR_ERR(drvdata->pctl_dev);
 	}
 
 	for (bank = 0; bank < drvdata->ctrl->nr_banks; ++bank) {
diff --git a/drivers/pinctrl/pinctrl-single.c b/drivers/pinctrl/pinctrl-single.c
index b9fa04618601..da554b246255 100644
--- a/drivers/pinctrl/pinctrl-single.c
+++ b/drivers/pinctrl/pinctrl-single.c
@@ -1446,9 +1446,9 @@ static int pcs_probe(struct platform_device *pdev)
 		goto free;
 
 	pcs->pctl = pinctrl_register(&pcs->desc, pcs->dev, pcs);
-	if (!pcs->pctl) {
+	if (IS_ERR(pcs->pctl)) {
 		dev_err(pcs->dev, "could not register single pinctrl driver\n");
-		ret = -EINVAL;
+		ret = PTR_ERR(pcs->pctl);
 		goto free;
 	}
 
* Unmerged path drivers/pinctrl/pinctrl-st.c
* Unmerged path drivers/pinctrl/pinctrl-tb10x.c
* Unmerged path drivers/pinctrl/pinctrl-tegra-xusb.c
diff --git a/drivers/pinctrl/pinctrl-tegra.c b/drivers/pinctrl/pinctrl-tegra.c
index 2fa9bc6cd7ab..e1f705a0cfb6 100644
--- a/drivers/pinctrl/pinctrl-tegra.c
+++ b/drivers/pinctrl/pinctrl-tegra.c
@@ -759,9 +759,9 @@ int tegra_pinctrl_probe(struct platform_device *pdev,
 	}
 
 	pmx->pctl = pinctrl_register(&tegra_pinctrl_desc, &pdev->dev, pmx);
-	if (!pmx->pctl) {
+	if (IS_ERR(pmx->pctl)) {
 		dev_err(&pdev->dev, "Couldn't register pinctrl driver\n");
-		return -ENODEV;
+		return PTR_ERR(pmx->pctl);
 	}
 
 	pinctrl_add_gpio_range(pmx->pctl, &tegra_pinctrl_gpio_range);
* Unmerged path drivers/pinctrl/pinctrl-tz1090-pdc.c
* Unmerged path drivers/pinctrl/pinctrl-tz1090.c
diff --git a/drivers/pinctrl/pinctrl-u300.c b/drivers/pinctrl/pinctrl-u300.c
index 6a3a7503e6a0..f0b02af56e51 100644
--- a/drivers/pinctrl/pinctrl-u300.c
+++ b/drivers/pinctrl/pinctrl-u300.c
@@ -1083,9 +1083,9 @@ static int u300_pmx_probe(struct platform_device *pdev)
 		return PTR_ERR(upmx->virtbase);
 
 	upmx->pctl = pinctrl_register(&u300_pmx_desc, &pdev->dev, upmx);
-	if (!upmx->pctl) {
+	if (IS_ERR(upmx->pctl)) {
 		dev_err(&pdev->dev, "could not register U300 pinmux driver\n");
-		return -EINVAL;
+		return PTR_ERR(upmx->pctl);
 	}
 
 	platform_set_drvdata(pdev, upmx);
* Unmerged path drivers/pinctrl/pinctrl-zynq.c
* Unmerged path drivers/pinctrl/qcom/pinctrl-msm.c
* Unmerged path drivers/pinctrl/qcom/pinctrl-spmi-gpio.c
* Unmerged path drivers/pinctrl/qcom/pinctrl-spmi-mpp.c
diff --git a/drivers/pinctrl/sh-pfc/pinctrl.c b/drivers/pinctrl/sh-pfc/pinctrl.c
index 3492ec9a33b7..1d9fe2b665e8 100644
--- a/drivers/pinctrl/sh-pfc/pinctrl.c
+++ b/drivers/pinctrl/sh-pfc/pinctrl.c
@@ -457,8 +457,8 @@ int sh_pfc_register_pinctrl(struct sh_pfc *pfc)
 	pmx->pctl_desc.npins = pfc->info->nr_pins;
 
 	pmx->pctl = pinctrl_register(&pmx->pctl_desc, pfc->dev, pmx);
-	if (pmx->pctl == NULL)
-		return -EINVAL;
+	if (IS_ERR(pmx->pctl))
+		return PTR_ERR(pmx->pctl);
 
 	return 0;
 }
* Unmerged path drivers/pinctrl/sirf/pinctrl-atlas7.c
* Unmerged path drivers/pinctrl/sirf/pinctrl-sirf.c
diff --git a/drivers/pinctrl/spear/pinctrl-spear.c b/drivers/pinctrl/spear/pinctrl-spear.c
index 116da0412c4b..3f24f2fa7236 100644
--- a/drivers/pinctrl/spear/pinctrl-spear.c
+++ b/drivers/pinctrl/spear/pinctrl-spear.c
@@ -408,9 +408,9 @@ int spear_pinctrl_probe(struct platform_device *pdev,
 	spear_pinctrl_desc.npins = machdata->npins;
 
 	pmx->pctl = pinctrl_register(&spear_pinctrl_desc, &pdev->dev, pmx);
-	if (!pmx->pctl) {
+	if (IS_ERR(pmx->pctl)) {
 		dev_err(&pdev->dev, "Couldn't register pinctrl driver\n");
-		return -ENODEV;
+		return PTR_ERR(pmx->pctl);
 	}
 
 	return 0;
* Unmerged path drivers/pinctrl/sunxi/pinctrl-sunxi.c
diff --git a/drivers/pinctrl/vt8500/pinctrl-wmt.c b/drivers/pinctrl/vt8500/pinctrl-wmt.c
index 70d986e04afb..6df6303b4749 100644
--- a/drivers/pinctrl/vt8500/pinctrl-wmt.c
+++ b/drivers/pinctrl/vt8500/pinctrl-wmt.c
@@ -588,9 +588,9 @@ int wmt_pinctrl_probe(struct platform_device *pdev,
 	data->dev = &pdev->dev;
 
 	data->pctl_dev = pinctrl_register(&wmt_desc, &pdev->dev, data);
-	if (!data->pctl_dev) {
+	if (IS_ERR(data->pctl_dev)) {
 		dev_err(&pdev->dev, "Failed to register pinctrl\n");
-		return -EINVAL;
+		return PTR_ERR(data->pctl_dev);
 	}
 
 	err = gpiochip_add(&data->gpio_chip);
