vmbus: add support for dynamic device id's

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Stephen Hemminger <sthemmin@microsoft.com>
commit fc76936d3ea5720a6e0948a08381b803a68deb28
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/fc76936d.failed

This patch adds sysfs interface to dynamically bind new UUID values
to existing VMBus device. This is useful for generic UIO driver to
act similar to uio_pci_generic.

	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit fc76936d3ea5720a6e0948a08381b803a68deb28)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/vmbus_drv.c
diff --cc drivers/hv/vmbus_drv.c
index a1c0464efe7a,230c62e7f567..000000000000
--- a/drivers/hv/vmbus_drv.c
+++ b/drivers/hv/vmbus_drv.c
@@@ -46,6 -45,10 +46,13 @@@
  #include <linux/random.h>
  #include "hyperv_vmbus.h"
  
++<<<<<<< HEAD
++=======
+ struct vmbus_dynid {
+ 	struct list_head node;
+ 	struct hv_vmbus_device_id id;
+ };
++>>>>>>> fc76936d3ea5 (vmbus: add support for dynamic device id's)
  
  static struct acpi_device  *hv_acpi_dev;
  
* Unmerged path drivers/hv/vmbus_drv.c
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index 5b97620cc5c2..d024268fb8a6 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -1111,6 +1111,12 @@ struct hv_driver {
 
 	struct device_driver driver;
 
+	/* dynamic device GUID's */
+	struct  {
+		spinlock_t lock;
+		struct list_head list;
+	} dynids;
+
 	int (*probe)(struct hv_device *, const struct hv_vmbus_device_id *);
 	int (*remove)(struct hv_device *);
 	void (*shutdown)(struct hv_device *);
