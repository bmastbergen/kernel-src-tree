nvme: Fix nvme_get/set_features() with a NULL result pointer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [nvme] Fix nvme_get/set_features() with a NULL result pointer (David Milburn) [1384526 1389755 1366753 1374291 1383834]
Rebuild_FUZZ: 94.74%
commit-author Andy Lutomirski <luto@kernel.org>
commit 9b47f77a680447e0132b2cf7fb82374e014bec1c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9b47f77a.failed

nvme_set_features() callers seem to expect that passing NULL as the
result pointer is acceptable.  Teach nvme_set_features() not to try to
write to the NULL address.

For symmetry, make the same change to nvme_get_features(), despite the
fact that all current callers pass a valid result pointer.

I assume that this bug hasn't been reported in practice because
the callers that pass NULL are all in the SCSI translation layer
and no one uses the relevant operations.

	Cc: stable@vger.kernel.org
	Signed-off-by: Andy Lutomirski <luto@kernel.org>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 9b47f77a680447e0132b2cf7fb82374e014bec1c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 63f6b5f40b5c,2feacc70bf61..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -323,10 -606,14 +323,18 @@@ int nvme_get_features(struct nvme_ctrl 
  	memset(&c, 0, sizeof(c));
  	c.features.opcode = nvme_admin_get_features;
  	c.features.nsid = cpu_to_le32(nsid);
 -	c.features.dptr.prp1 = cpu_to_le64(dma_addr);
 +	c.features.prp1 = cpu_to_le64(dma_addr);
  	c.features.fid = cpu_to_le32(fid);
  
++<<<<<<< HEAD
 +	return __nvme_submit_sync_cmd(dev->admin_q, &c, NULL, 0, result, 0);
++=======
+ 	ret = __nvme_submit_sync_cmd(dev->admin_q, &c, &cqe, NULL, 0, 0,
+ 			NVME_QID_ANY, 0, 0);
+ 	if (ret >= 0 && result)
+ 		*result = le32_to_cpu(cqe.result);
+ 	return ret;
++>>>>>>> 9b47f77a6804 (nvme: Fix nvme_get/set_features() with a NULL result pointer)
  }
  
  int nvme_set_features(struct nvme_ctrl *dev, unsigned fid, unsigned dword11,
@@@ -340,7 -629,11 +348,15 @@@
  	c.features.fid = cpu_to_le32(fid);
  	c.features.dword11 = cpu_to_le32(dword11);
  
++<<<<<<< HEAD
 +	return __nvme_submit_sync_cmd(dev->admin_q, &c, NULL, 0, result, 0);
++=======
+ 	ret = __nvme_submit_sync_cmd(dev->admin_q, &c, &cqe, NULL, 0, 0,
+ 			NVME_QID_ANY, 0, 0);
+ 	if (ret >= 0 && result)
+ 		*result = le32_to_cpu(cqe.result);
+ 	return ret;
++>>>>>>> 9b47f77a6804 (nvme: Fix nvme_get/set_features() with a NULL result pointer)
  }
  
  int nvme_get_log_page(struct nvme_ctrl *dev, struct nvme_smart_log **log)
* Unmerged path drivers/nvme/host/core.c
