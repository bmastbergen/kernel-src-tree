net/sched: cls_flower: Add support for matching on flags

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: cls_flower: Add support for matching on flags (Jonathan Toppins) [1393375]
Rebuild_FUZZ: 96.30%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit faa3ffce78298b2b782297765cffd05f52fed9d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/faa3ffce.failed

Add UAPI to provide set of flags for matching, where the flags
provided from user-space are mapped to flow-dissector flags.

The 1st flag allows to match on whether the packet is an
IP fragment and corresponds to the FLOW_DIS_IS_FRAGMENT flag.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Reviewed-by: Paul Blakey <paulb@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit faa3ffce78298b2b782297765cffd05f52fed9d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/pkt_cls.h
#	net/sched/cls_flower.c
diff --cc include/uapi/linux/pkt_cls.h
index 3abfe7f00823,0ad9f0bce043..000000000000
--- a/include/uapi/linux/pkt_cls.h
+++ b/include/uapi/linux/pkt_cls.h
@@@ -407,6 -403,85 +407,88 @@@ enum 
  
  #define TCA_BPF_MAX (__TCA_BPF_MAX - 1)
  
++<<<<<<< HEAD
++=======
+ /* Flower classifier */
+ 
+ enum {
+ 	TCA_FLOWER_UNSPEC,
+ 	TCA_FLOWER_CLASSID,
+ 	TCA_FLOWER_INDEV,
+ 	TCA_FLOWER_ACT,
+ 	TCA_FLOWER_KEY_ETH_DST,		/* ETH_ALEN */
+ 	TCA_FLOWER_KEY_ETH_DST_MASK,	/* ETH_ALEN */
+ 	TCA_FLOWER_KEY_ETH_SRC,		/* ETH_ALEN */
+ 	TCA_FLOWER_KEY_ETH_SRC_MASK,	/* ETH_ALEN */
+ 	TCA_FLOWER_KEY_ETH_TYPE,	/* be16 */
+ 	TCA_FLOWER_KEY_IP_PROTO,	/* u8 */
+ 	TCA_FLOWER_KEY_IPV4_SRC,	/* be32 */
+ 	TCA_FLOWER_KEY_IPV4_SRC_MASK,	/* be32 */
+ 	TCA_FLOWER_KEY_IPV4_DST,	/* be32 */
+ 	TCA_FLOWER_KEY_IPV4_DST_MASK,	/* be32 */
+ 	TCA_FLOWER_KEY_IPV6_SRC,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_IPV6_SRC_MASK,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_IPV6_DST,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_IPV6_DST_MASK,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_TCP_SRC,		/* be16 */
+ 	TCA_FLOWER_KEY_TCP_DST,		/* be16 */
+ 	TCA_FLOWER_KEY_UDP_SRC,		/* be16 */
+ 	TCA_FLOWER_KEY_UDP_DST,		/* be16 */
+ 
+ 	TCA_FLOWER_FLAGS,
+ 	TCA_FLOWER_KEY_VLAN_ID,		/* be16 */
+ 	TCA_FLOWER_KEY_VLAN_PRIO,	/* u8   */
+ 	TCA_FLOWER_KEY_VLAN_ETH_TYPE,	/* be16 */
+ 
+ 	TCA_FLOWER_KEY_ENC_KEY_ID,	/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV4_SRC,	/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV4_SRC_MASK,/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV4_DST,	/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV4_DST_MASK,/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV6_SRC,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_ENC_IPV6_SRC_MASK,/* struct in6_addr */
+ 	TCA_FLOWER_KEY_ENC_IPV6_DST,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_ENC_IPV6_DST_MASK,/* struct in6_addr */
+ 
+ 	TCA_FLOWER_KEY_TCP_SRC_MASK,	/* be16 */
+ 	TCA_FLOWER_KEY_TCP_DST_MASK,	/* be16 */
+ 	TCA_FLOWER_KEY_UDP_SRC_MASK,	/* be16 */
+ 	TCA_FLOWER_KEY_UDP_DST_MASK,	/* be16 */
+ 	TCA_FLOWER_KEY_SCTP_SRC_MASK,	/* be16 */
+ 	TCA_FLOWER_KEY_SCTP_DST_MASK,	/* be16 */
+ 
+ 	TCA_FLOWER_KEY_SCTP_SRC,	/* be16 */
+ 	TCA_FLOWER_KEY_SCTP_DST,	/* be16 */
+ 
+ 	TCA_FLOWER_KEY_ENC_UDP_SRC_PORT,	/* be16 */
+ 	TCA_FLOWER_KEY_ENC_UDP_SRC_PORT_MASK,	/* be16 */
+ 	TCA_FLOWER_KEY_ENC_UDP_DST_PORT,	/* be16 */
+ 	TCA_FLOWER_KEY_ENC_UDP_DST_PORT_MASK,	/* be16 */
+ 
+ 	TCA_FLOWER_KEY_FLAGS,		/* be32 */
+ 	TCA_FLOWER_KEY_FLAGS_MASK,	/* be32 */
+ 	__TCA_FLOWER_MAX,
+ };
+ 
+ #define TCA_FLOWER_MAX (__TCA_FLOWER_MAX - 1)
+ 
+ enum {
+ 	TCA_FLOWER_KEY_FLAGS_IS_FRAGMENT = (1 << 0),
+ };
+ 
+ /* Match-all classifier */
+ 
+ enum {
+ 	TCA_MATCHALL_UNSPEC,
+ 	TCA_MATCHALL_CLASSID,
+ 	TCA_MATCHALL_ACT,
+ 	TCA_MATCHALL_FLAGS,
+ 	__TCA_MATCHALL_MAX,
+ };
+ 
+ #define TCA_MATCHALL_MAX (__TCA_MATCHALL_MAX - 1)
+ 
++>>>>>>> faa3ffce7829 (net/sched: cls_flower: Add support for matching on flags)
  /* Extended Matches */
  
  struct tcf_ematch_tree_hdr {
* Unmerged path net/sched/cls_flower.c
* Unmerged path include/uapi/linux/pkt_cls.h
* Unmerged path net/sched/cls_flower.c
