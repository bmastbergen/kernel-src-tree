bonding: correctly update link status during mii-commit phase

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Mahesh Bandewar <maheshb@google.com>
commit b5bf0f5b16b9c316c34df9f31d4be8729eb86845
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b5bf0f5b.failed

bond_miimon_commit() marks the link UP after attempting to get the speed
and duplex settings for the link. There is a possibility that
bond_update_speed_duplex() could fail. This is another place where it
could result into an inconsistent bonding link state.

With this patch the link will be marked UP only if the speed and duplex
values retrieved have sane values and processed further.

	Signed-off-by: Mahesh Bandewar <maheshb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b5bf0f5b16b9c316c34df9f31d4be8729eb86845)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index a3ed8e7e1cc1,6cea964ab70a..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2096,8 -2125,14 +2096,19 @@@ static void bond_miimon_commit(struct b
  			continue;
  
  		case BOND_LINK_UP:
++<<<<<<< HEAD
 +			bond_update_speed_duplex(slave);
 +			bond_set_slave_link_state(slave, BOND_LINK_UP);
++=======
+ 			if (bond_update_speed_duplex(slave)) {
+ 				netdev_warn(bond->dev,
+ 					    "failed to get link speed/duplex for %s\n",
+ 					    slave->dev->name);
+ 				continue;
+ 			}
+ 			bond_set_slave_link_state(slave, BOND_LINK_UP,
+ 						  BOND_SLAVE_NOTIFY_NOW);
++>>>>>>> b5bf0f5b16b9 (bonding: correctly update link status during mii-commit phase)
  			slave->last_link_up = jiffies;
  
  			primary = rtnl_dereference(bond->primary_slave);
* Unmerged path drivers/net/bonding/bond_main.c
