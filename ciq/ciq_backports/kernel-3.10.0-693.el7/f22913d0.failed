ixgb: use new API ethtool_{get|set}_link_ksettings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] xgbe: use new api ethtool_{get|set}_link_ksettings (David Arcari) [1339783]
Rebuild_FUZZ: 98.00%
commit-author Philippe Reynes <tremyfr@gmail.com>
commit f22913d0b5560ae621e8a7391e9547d5a6fd8893
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f22913d0.failed

The ethtool API {get|set}_settings is deprecated.
We move this driver to new API {get|set}_link_ksettings.

As I don't have the hardware, I'd be very pleased if
someone may test this patch.

	Signed-off-by: Philippe Reynes <tremyfr@gmail.com>
	Tested-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit f22913d0b5560ae621e8a7391e9547d5a6fd8893)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
diff --cc drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
index a154ca962e3a,d10a0d242dda..000000000000
--- a/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
+++ b/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
@@@ -98,20 -99,25 +99,30 @@@ ixgb_get_link_ksettings(struct net_devi
  {
  	struct ixgb_adapter *adapter = netdev_priv(netdev);
  
- 	ecmd->supported = (SUPPORTED_10000baseT_Full | SUPPORTED_FIBRE);
- 	ecmd->advertising = (ADVERTISED_10000baseT_Full | ADVERTISED_FIBRE);
- 	ecmd->port = PORT_FIBRE;
- 	ecmd->transceiver = XCVR_EXTERNAL;
+ 	ethtool_link_ksettings_zero_link_mode(cmd, supported);
+ 	ethtool_link_ksettings_add_link_mode(cmd, supported, 10000baseT_Full);
+ 	ethtool_link_ksettings_add_link_mode(cmd, supported, FIBRE);
+ 
+ 	ethtool_link_ksettings_zero_link_mode(cmd, advertising);
+ 	ethtool_link_ksettings_add_link_mode(cmd, advertising, 10000baseT_Full);
+ 	ethtool_link_ksettings_add_link_mode(cmd, advertising, FIBRE);
+ 
+ 	cmd->base.port = PORT_FIBRE;
  
  	if (netif_carrier_ok(adapter->netdev)) {
- 		ethtool_cmd_speed_set(ecmd, SPEED_10000);
- 		ecmd->duplex = DUPLEX_FULL;
+ 		cmd->base.speed = SPEED_10000;
+ 		cmd->base.duplex = DUPLEX_FULL;
  	} else {
++<<<<<<< HEAD
 +		ethtool_cmd_speed_set(ecmd, -1);
 +		ecmd->duplex = -1;
++=======
+ 		cmd->base.speed = SPEED_UNKNOWN;
+ 		cmd->base.duplex = DUPLEX_UNKNOWN;
++>>>>>>> f22913d0b556 (ixgb: use new API ethtool_{get|set}_link_ksettings)
  	}
  
- 	ecmd->autoneg = AUTONEG_DISABLE;
+ 	cmd->base.autoneg = AUTONEG_DISABLE;
  	return 0;
  }
  
* Unmerged path drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
