PCI/IOV: Rename and export virtfn_{add, remove}

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Wei Yang <weiyang@linux.vnet.ibm.com>
commit c194f7ea7f68f2690533832ec22f0d7ed4f2d74d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c194f7ea.failed

During EEH recovery, hotplug is applied to the devices which don't
have drivers or their drivers don't support EEH. However, the hotplug,
which was implemented based on PCI bus, can't be applied to VF directly.
Instead, we unplug and plug individual PCI devices (VFs).

This renames virtn_{add,remove}() and exports them so they can be used
in PCI hotplug during EEH recovery.

	Signed-off-by: Wei Yang <weiyang@linux.vnet.ibm.com>
	Reviewed-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
	Acked-by: Bjorn Helgaas <bhelgaas@google.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit c194f7ea7f68f2690533832ec22f0d7ed4f2d74d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/iov.c
diff --cc drivers/pci/iov.c
index c47b97b0ce2d,fa4f13869fa9..000000000000
--- a/drivers/pci/iov.c
+++ b/drivers/pci/iov.c
@@@ -340,8 -332,8 +340,13 @@@ static int sriov_enable(struct pci_dev 
  	return 0;
  
  failed:
++<<<<<<< HEAD
 +	for (j = 0; j < i; j++)
 +		virtfn_remove(dev, j, 0);
++=======
+ 	while (i--)
+ 		pci_iov_remove_virtfn(dev, i, 0);
++>>>>>>> c194f7ea7f68 (PCI/IOV: Rename and export virtfn_{add, remove})
  
  	pcibios_sriov_disable(dev);
  err_pcibios:
* Unmerged path drivers/pci/iov.c
diff --git a/include/linux/pci.h b/include/linux/pci.h
index 32d11cf0340d..7e4d1cb15c92 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -1695,6 +1695,8 @@ int pci_iov_virtfn_devfn(struct pci_dev *dev, int id);
 
 int pci_enable_sriov(struct pci_dev *dev, int nr_virtfn);
 void pci_disable_sriov(struct pci_dev *dev);
+int pci_iov_add_virtfn(struct pci_dev *dev, int id, int reset);
+void pci_iov_remove_virtfn(struct pci_dev *dev, int id, int reset);
 int pci_num_vf(struct pci_dev *dev);
 int pci_vfs_assigned(struct pci_dev *dev);
 int pci_sriov_set_totalvfs(struct pci_dev *dev, u16 numvfs);
@@ -1711,6 +1713,12 @@ static inline int pci_iov_virtfn_devfn(struct pci_dev *dev, int id)
 }
 static inline int pci_enable_sriov(struct pci_dev *dev, int nr_virtfn)
 { return -ENODEV; }
+static inline int pci_iov_add_virtfn(struct pci_dev *dev, int id, int reset)
+{
+	return -ENOSYS;
+}
+static inline void pci_iov_remove_virtfn(struct pci_dev *dev,
+					 int id, int reset) { }
 static inline void pci_disable_sriov(struct pci_dev *dev) { }
 static inline int pci_num_vf(struct pci_dev *dev) { return 0; }
 static inline int pci_vfs_assigned(struct pci_dev *dev)
