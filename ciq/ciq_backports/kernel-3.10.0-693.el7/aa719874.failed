nvme: fabrics drivers don't need the nvme-pci driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [nvme] fabrics drivers don't need the nvme-pci driver (David Milburn) [1384526 1389755 1366753 1374291 1383834]
Rebuild_FUZZ: 93.88%
commit-author Christoph Hellwig <hch@lst.de>
commit aa71987472a974f4f6dc4be377720564079ef42e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/aa719874.failed

So select the NVME_CORE symbol instead of depending on BLK_DEV_NVME.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Jay Freyensee <james_p_freyensee@linux.intel.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit aa71987472a974f4f6dc4be377720564079ef42e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/Kconfig
#	drivers/nvme/target/Kconfig
diff --cc drivers/nvme/host/Kconfig
index 002a94abdbc4,0c644f7bdf80..000000000000
--- a/drivers/nvme/host/Kconfig
+++ b/drivers/nvme/host/Kconfig
@@@ -8,3 -12,34 +8,37 @@@ config BLK_DEV_NVM
  
  	  To compile this driver as a module, choose M here: the
  	  module will be called nvme.
++<<<<<<< HEAD
++=======
+ 
+ config BLK_DEV_NVME_SCSI
+ 	bool "SCSI emulation for NVMe device nodes"
+ 	depends on NVME_CORE
+ 	---help---
+ 	  This adds support for the SG_IO ioctl on the NVMe character
+ 	  and block devices nodes, as well as a translation for a small
+ 	  number of selected SCSI commands to NVMe commands to the NVMe
+ 	  driver.  If you don't know what this means you probably want
+ 	  to say N here, unless you run a distro that abuses the SCSI
+ 	  emulation to provide stable device names for mount by id, like
+ 	  some OpenSuSE and SLES versions.
+ 
+ config NVME_FABRICS
+ 	tristate
+ 
+ config NVME_RDMA
+ 	tristate "NVM Express over Fabrics RDMA host driver"
+ 	depends on INFINIBAND
+ 	select NVME_CORE
+ 	select NVME_FABRICS
+ 	select SG_POOL
+ 	help
+ 	  This provides support for the NVMe over Fabrics protocol using
+ 	  the RDMA (Infiniband, RoCE, iWarp) transport.  This allows you
+ 	  to use remote block devices exported using the NVMe protocol set.
+ 
+ 	  To configure a NVMe over Fabrics controller use the nvme-cli tool
+ 	  from https://github.com/linux-nvme/nvme-cli.
+ 
+ 	  If unsure, say N.
++>>>>>>> aa71987472a9 (nvme: fabrics drivers don't need the nvme-pci driver)
* Unmerged path drivers/nvme/target/Kconfig
* Unmerged path drivers/nvme/host/Kconfig
* Unmerged path drivers/nvme/target/Kconfig
