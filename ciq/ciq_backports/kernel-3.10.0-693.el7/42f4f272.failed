HID: wacom: move all quirks to wacom_setup_device_quirks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom: move all quirks to wacom_setup_device_quirks (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 95.33%
commit-author Ping Cheng <pinglinux@gmail.com>
commit 42f4f272746f9e4e3fecb4440dc2429822b6950b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/42f4f272.failed

It makes probe routine easy to follow.

	Signed-off-by: Ping Cheng <pingc@wacom.com>
	Reviewed-by: Jason Gerecke <jason.gerecke@wacom.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 42f4f272746f9e4e3fecb4440dc2429822b6950b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom.h
#	drivers/hid/wacom_sys.c
#	drivers/hid/wacom_wac.c
diff --cc drivers/hid/wacom.h
index 87d2c48e3adc,c76e21f486d8..000000000000
--- a/drivers/hid/wacom.h
+++ b/drivers/hid/wacom.h
@@@ -135,10 -131,18 +135,15 @@@ static inline void wacom_schedule_work(
  	schedule_work(&wacom->work);
  }
  
 -extern const struct hid_device_id wacom_ids[];
 +extern const struct usb_device_id wacom_ids[];
  
  void wacom_wac_irq(struct wacom_wac *wacom_wac, size_t len);
++<<<<<<< HEAD
 +void wacom_setup_device_quirks(struct wacom_features *features);
 +int wacom_setup_input_capabilities(struct input_dev *input_dev,
++=======
+ void wacom_setup_device_quirks(struct wacom *wacom);
+ int wacom_setup_pentouch_input_capabilities(struct input_dev *input_dev,
++>>>>>>> 42f4f272746f (HID: wacom: move all quirks to wacom_setup_device_quirks)
  				   struct wacom_wac *wacom_wac);
 -int wacom_setup_pad_input_capabilities(struct input_dev *input_dev,
 -				       struct wacom_wac *wacom_wac);
 -void wacom_wac_usage_mapping(struct hid_device *hdev,
 -		struct hid_field *field, struct hid_usage *usage);
 -int wacom_wac_event(struct hid_device *hdev, struct hid_field *field,
 -		struct hid_usage *usage, __s32 value);
 -void wacom_wac_report(struct hid_device *hdev, struct hid_report *report);
 -void wacom_battery_work(struct work_struct *work);
  #endif
diff --cc drivers/hid/wacom_sys.c
index 527bf559d1db,13d8c8fa8ed4..000000000000
--- a/drivers/hid/wacom_sys.c
+++ b/drivers/hid/wacom_sys.c
@@@ -1343,28 -1473,9 +1343,32 @@@ static int wacom_probe(struct usb_inter
  	wacom_set_default_phy(features);
  
  	/* Retrieve the physical and logical size for touch devices */
 -	wacom_retrieve_hid_descriptor(hdev, features);
 +	error = wacom_retrieve_hid_descriptor(intf, features);
 +	if (error)
 +		goto fail3;
  
++<<<<<<< HEAD
 +	/*
 +	 * Intuos5 has no useful data about its touch interface in its
 +	 * HID descriptor. If this is the touch interface (wMaxPacketSize
 +	 * of WACOM_PKGLEN_BBTOUCH3), override the table values.
 +	 */
 +	if (features->type >= INTUOS5S && features->type <= INTUOSPL) {
 +		if (endpoint->wMaxPacketSize == WACOM_PKGLEN_BBTOUCH3) {
 +			features->device_type = BTN_TOOL_FINGER;
 +			features->pktlen = WACOM_PKGLEN_BBTOUCH3;
 +
 +			features->x_max = 4096;
 +			features->y_max = 4096;
 +		} else {
 +			features->device_type = BTN_TOOL_PEN;
 +		}
 +	}
 +
 +	wacom_setup_device_quirks(features);
++=======
+ 	wacom_setup_device_quirks(wacom);
++>>>>>>> 42f4f272746f (HID: wacom: move all quirks to wacom_setup_device_quirks)
  
  	/* set unit to "100th of a mm" for devices not reported by HID */
  	if (!features->unit) {
diff --cc drivers/hid/wacom_wac.c
index bc916ccd4c20,3609cbe9877b..000000000000
--- a/drivers/hid/wacom_wac.c
+++ b/drivers/hid/wacom_wac.c
@@@ -1483,11 -2174,32 +1484,40 @@@ void wacom_setup_device_quirks(struct w
  		features->y_max = 1023;
  	}
  
++<<<<<<< HEAD
 +	/* these device have multiple inputs */
 +	if (features->type >= WIRELESS ||
 +	    (features->type >= INTUOS5S && features->type <= INTUOSPL) ||
 +	    (features->oVid && features->oPid))
 +		features->quirks |= WACOM_QUIRK_MULTI_INPUT;
++=======
+ 	/*
+ 	 * Intuos5/Pro and Bamboo 3rd gen have no useful data about its
+ 	 * touch interface in its HID descriptor. If this is the touch
+ 	 * interface (PacketSize of WACOM_PKGLEN_BBTOUCH3), override the
+ 	 * tablet values.
+ 	 */
+ 	if ((features->type >= INTUOS5S && features->type <= INTUOSHT) ||
+ 		(features->type == BAMBOO_PT)) {
+ 		if (features->pktlen == WACOM_PKGLEN_BBTOUCH3) {
+ 			features->device_type = BTN_TOOL_FINGER;
+ 
+ 			features->x_max = 4096;
+ 			features->y_max = 4096;
+ 		} else {
+ 			features->device_type = BTN_TOOL_PEN;
+ 		}
+ 	}
+ 
+ 	/*
+ 	 * Same thing for Bamboo PAD
+ 	 */
+ 	if (features->type == BAMBOO_PAD)
+ 		features->device_type = BTN_TOOL_FINGER;
+ 
+ 	if (wacom->hdev->bus == BUS_BLUETOOTH)
+ 		features->quirks |= WACOM_QUIRK_BATTERY;
++>>>>>>> 42f4f272746f (HID: wacom: move all quirks to wacom_setup_device_quirks)
  
  	/* quirk for bamboo touch with 2 low res touches */
  	if (features->type == BAMBOO_PT &&
* Unmerged path drivers/hid/wacom.h
* Unmerged path drivers/hid/wacom_sys.c
* Unmerged path drivers/hid/wacom_wac.c
