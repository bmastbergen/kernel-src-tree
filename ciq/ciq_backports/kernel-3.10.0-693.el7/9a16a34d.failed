svcrdma: Remove unused variables in xprt_rdma_bc_allocate()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 9a16a34d2146e1bcfad6c6ae6d214d645b424265
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9a16a34d.failed

Clean up.

/linux-2.6/net/sunrpc/xprtrdma/svc_rdma_backchannel.c: In function
 ‘xprt_rdma_bc_allocate’:
linux-2.6/net/sunrpc/xprtrdma/svc_rdma_backchannel.c:169:23: warning:
 variable ‘rdma’ set but not used [-Wunused-but-set-variable]
  struct svcxprt_rdma *rdma;
                       ^

Fixes: 5d252f90a800 ("svcrdma: Add class for RDMA backwards ...")
	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 9a16a34d2146e1bcfad6c6ae6d214d645b424265)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtrdma/svc_rdma_backchannel.c
diff --cc net/sunrpc/xprtrdma/svc_rdma_backchannel.c
index 174d8ddc11c1,288e35c2d8f4..000000000000
--- a/net/sunrpc/xprtrdma/svc_rdma_backchannel.c
+++ b/net/sunrpc/xprtrdma/svc_rdma_backchannel.c
@@@ -160,29 -159,32 +160,36 @@@ out_unmap
  /* Server-side transport endpoint wants a whole page for its send
   * buffer. The client RPC code constructs the RPC header in this
   * buffer before it invokes ->send_request.
 + *
 + * Returns NULL if there was a temporary allocation failure.
   */
 -static int
 -xprt_rdma_bc_allocate(struct rpc_task *task)
 +static void *
 +xprt_rdma_bc_allocate(struct rpc_task *task, size_t size)
  {
  	struct rpc_rqst *rqst = task->tk_rqstp;
++<<<<<<< HEAD
 +	struct svc_xprt *sxprt = rqst->rq_xprt->bc_xprt;
 +	struct svcxprt_rdma *rdma;
 +	struct page *page;
 +
 +	rdma = container_of(sxprt, struct svcxprt_rdma, sc_xprt);
 +
 +	/* Prevent an infinite loop: try to make this case work */
 +	if (size > PAGE_SIZE)
++=======
+ 	size_t size = rqst->rq_callsize;
+ 	struct page *page;
+ 
+ 	if (size > PAGE_SIZE) {
++>>>>>>> 9a16a34d2146 (svcrdma: Remove unused variables in xprt_rdma_bc_allocate())
  		WARN_ONCE(1, "svcrdma: large bc buffer request (size %zu)\n",
  			  size);
 -		return -EINVAL;
 -	}
  
 -	/* svc_rdma_sendto releases this page */
  	page = alloc_page(RPCRDMA_DEF_GFP);
  	if (!page)
 -		return -ENOMEM;
 -	rqst->rq_buffer = page_address(page);
 +		return NULL;
  
 -	rqst->rq_rbuffer = kmalloc(rqst->rq_rcvsize, RPCRDMA_DEF_GFP);
 -	if (!rqst->rq_rbuffer) {
 -		put_page(page);
 -		return -ENOMEM;
 -	}
 -	return 0;
 +	return page_address(page);
  }
  
  static void
* Unmerged path net/sunrpc/xprtrdma/svc_rdma_backchannel.c
