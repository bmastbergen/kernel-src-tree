scsi: cxgb4i: libcxgbi: add active open cmd for T6 adapters

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] cxgb4i: libcxgbi: add active open cmd for T6 adapters (Sai Vemuri) [1417523]
Rebuild_FUZZ: 94.64%
commit-author Varun Prakash <varun@chelsio.com>
commit 586be7cb694fdbb3a35cc35c03387ce0fc534572
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/586be7cb.failed

Add T6 active open cmd to open active connections on T6 adapters.

	Signed-off-by: Varun Prakash <varun@chelsio.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 586be7cb694fdbb3a35cc35c03387ce0fc534572)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/cxgbi/cxgb4i/cxgb4i.c
diff --cc drivers/scsi/cxgbi/cxgb4i/cxgb4i.c
index 9516f9456783,01a2f2f315f8..000000000000
--- a/drivers/scsi/cxgbi/cxgb4i/cxgb4i.c
+++ b/drivers/scsi/cxgbi/cxgb4i/cxgb4i.c
@@@ -1402,12 -1481,20 +1460,24 @@@ static int init_act_open(struct cxgbi_s
  	}
  	cxgbi_sock_get(csk);
  
++<<<<<<< HEAD
 +	if (t4) {
++=======
+ #if IS_ENABLED(CONFIG_IPV6)
+ 	if (csk->csk_family == AF_INET6)
+ 		cxgb4_clip_get(ndev, (const u32 *)&csk->saddr6.sin6_addr, 1);
+ #endif
+ 
+ 	if (is_t4(lldi->adapter_type)) {
++>>>>>>> 586be7cb694f (scsi: cxgb4i: libcxgbi: add active open cmd for T6 adapters)
  		size = sizeof(struct cpl_act_open_req);
  		size6 = sizeof(struct cpl_act_open_req6);
- 	} else {
+ 	} else if (is_t5(lldi->adapter_type)) {
  		size = sizeof(struct cpl_t5_act_open_req);
  		size6 = sizeof(struct cpl_t5_act_open_req6);
+ 	} else {
+ 		size = sizeof(struct cpl_t6_act_open_req);
+ 		size6 = sizeof(struct cpl_t6_act_open_req6);
  	}
  
  	if (csk->csk_family == AF_INET)
* Unmerged path drivers/scsi/cxgbi/cxgb4i/cxgb4i.c
diff --git a/drivers/scsi/cxgbi/libcxgbi.c b/drivers/scsi/cxgbi/libcxgbi.c
index d67913d6209d..3c14a8eb6964 100644
--- a/drivers/scsi/cxgbi/libcxgbi.c
+++ b/drivers/scsi/cxgbi/libcxgbi.c
@@ -1892,15 +1892,15 @@ static void csk_return_rx_credits(struct cxgbi_sock *csk, int copied)
 		csk->rcv_wup, cdev->rx_credit_thres,
 		csk->rcv_win);
 
+	if (!cdev->rx_credit_thres)
+		return;
+
 	if (csk->state != CTP_ESTABLISHED)
 		return;
 
 	credits = csk->copied_seq - csk->rcv_wup;
 	if (unlikely(!credits))
 		return;
-	if (unlikely(cdev->rx_credit_thres == 0))
-		return;
-
 	must_send = credits + 16384 >= csk->rcv_win;
 	if (must_send || credits >= cdev->rx_credit_thres)
 		csk->rcv_wup += cdev->csk_send_rx_credits(csk, credits);
