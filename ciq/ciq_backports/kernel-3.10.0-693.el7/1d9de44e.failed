random: Wake up all getrandom(2) callers when pool is ready

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit 1d9de44e268d880cbe2d0bd3be1ef0661f93fd34
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/1d9de44e.failed

If more than one application invokes getrandom(2) before the pool
is ready, then all bar one will be stuck forever because we use
wake_up_interruptible which wakes up a single task.

This patch replaces it with wake_up_all.

	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 1d9de44e268d880cbe2d0bd3be1ef0661f93fd34)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/random.c
diff --cc drivers/char/random.c
index d734fecb0f95,8b8c46b5fd5c..000000000000
--- a/drivers/char/random.c
+++ b/drivers/char/random.c
@@@ -658,12 -654,14 +658,23 @@@ retry
  	if (cmpxchg(&r->entropy_count, orig, entropy_count) != orig)
  		goto retry;
  
++<<<<<<< HEAD
 +	if (!r->initialized && nbits > 0) {
 +		r->entropy_total += nbits;
 +		if (r->entropy_total > 128) {
 +			r->initialized = 1;
 +			if (r == &nonblocking_pool)
 +				prandom_reseed_late();
++=======
+ 	r->entropy_total += nbits;
+ 	if (!r->initialized && r->entropy_total > 128) {
+ 		r->initialized = 1;
+ 		r->entropy_total = 0;
+ 		if (r == &nonblocking_pool) {
+ 			prandom_reseed_late();
+ 			wake_up_all(&urandom_init_wait);
+ 			pr_notice("random: %s pool is initialized\n", r->name);
++>>>>>>> 1d9de44e268d (random: Wake up all getrandom(2) callers when pool is ready)
  		}
  	}
  
* Unmerged path drivers/char/random.c
