dax: move RADIX_DAX_ definitions to dax.c

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author NeilBrown <neilb@suse.com>
commit 78a9be0a0a3367b94af242632c525d22b26f1a87
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/78a9be0a.failed

These don't belong in radix-tree.h any more than PAGECACHE_TAG_* do.
Let's try to maintain the idea that radix-tree simply implements an
abstract data type.

	Signed-off-by: NeilBrown <neilb@suse.com>
	Reviewed-by: Ross Zwisler <ross.zwisler@linux.intel.com>
	Reviewed-by: Jan Kara <jack@suse.cz>
	Signed-off-by: Matthew Wilcox <willy@linux.intel.com>
	Cc: Konstantin Khlebnikov <koct9i@gmail.com>
	Cc: Kirill Shutemov <kirill.shutemov@linux.intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 78a9be0a0a3367b94af242632c525d22b26f1a87)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/radix-tree.h
diff --cc include/linux/radix-tree.h
index 32623d26b62a,c2f69e25ba86..000000000000
--- a/include/linux/radix-tree.h
+++ b/include/linux/radix-tree.h
@@@ -51,18 -48,9 +51,22 @@@
  #define RADIX_TREE_EXCEPTIONAL_ENTRY	2
  #define RADIX_TREE_EXCEPTIONAL_SHIFT	2
  
++<<<<<<< HEAD
 +#define RADIX_DAX_MASK	0xf
 +#define RADIX_DAX_SHIFT	4
 +#define RADIX_DAX_PTE  (0x4 | RADIX_TREE_EXCEPTIONAL_ENTRY)
 +#define RADIX_DAX_PMD  (0x8 | RADIX_TREE_EXCEPTIONAL_ENTRY)
 +#define RADIX_DAX_TYPE(entry) ((unsigned long)entry & RADIX_DAX_MASK)
 +#define RADIX_DAX_SECTOR(entry) (((unsigned long)entry >> RADIX_DAX_SHIFT))
 +#define RADIX_DAX_ENTRY(sector, pmd) ((void *)((unsigned long)sector << \
 +		RADIX_DAX_SHIFT | (pmd ? RADIX_DAX_PMD : RADIX_DAX_PTE)))
 +
 +static inline int radix_tree_is_indirect_ptr(void *ptr)
++=======
+ static inline int radix_tree_is_internal_node(void *ptr)
++>>>>>>> 78a9be0a0a33 (dax: move RADIX_DAX_ definitions to dax.c)
  {
 -	return (int)((unsigned long)ptr & RADIX_TREE_INTERNAL_NODE);
 +	return (int)((unsigned long)ptr & RADIX_TREE_INDIRECT_PTR);
  }
  
  /*** radix-tree API starts here ***/
diff --git a/fs/dax.c b/fs/dax.c
index ac0232cd059c..1ff6c04bea7a 100644
--- a/fs/dax.c
+++ b/fs/dax.c
@@ -33,6 +33,15 @@
 #include <linux/pfn_t.h>
 #include <linux/sizes.h>
 
+#define RADIX_DAX_MASK	0xf
+#define RADIX_DAX_SHIFT	4
+#define RADIX_DAX_PTE  (0x4 | RADIX_TREE_EXCEPTIONAL_ENTRY)
+#define RADIX_DAX_PMD  (0x8 | RADIX_TREE_EXCEPTIONAL_ENTRY)
+#define RADIX_DAX_TYPE(entry) ((unsigned long)entry & RADIX_DAX_MASK)
+#define RADIX_DAX_SECTOR(entry) (((unsigned long)entry >> RADIX_DAX_SHIFT))
+#define RADIX_DAX_ENTRY(sector, pmd) ((void *)((unsigned long)sector << \
+		RADIX_DAX_SHIFT | (pmd ? RADIX_DAX_PMD : RADIX_DAX_PTE)))
+
 static long dax_map_atomic(struct block_device *bdev, struct blk_dax_ctl *dax)
 {
 	struct request_queue *q = bdev->bd_queue;
* Unmerged path include/linux/radix-tree.h
