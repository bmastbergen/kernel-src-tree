xen: change the type of xen_vcpu_id to uint32_t

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [xen] change the type of xen_vcpu_id to uint32_t (Vitaly Kuznetsov) [1396554]
Rebuild_FUZZ: 94.38%
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit 55467dea2967259f21f4f854fc99d39cc5fea60e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/55467dea.failed

We pass xen_vcpu_id mapping information to hypercalls which require
uint32_t type so it would be cleaner to have it as uint32_t. The
initializer to -1 can be dropped as we always do the mapping before using
it and we never check the 'not set' value anyway.

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: David Vrabel <david.vrabel@citrix.com>
(cherry picked from commit 55467dea2967259f21f4f854fc99d39cc5fea60e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm/xen/enlighten.c
#	arch/x86/xen/enlighten.c
#	include/xen/xen-ops.h
diff --cc arch/arm/xen/enlighten.c
index 81edd31bb4ac,3d2cef6488ea..000000000000
--- a/arch/arm/xen/enlighten.c
+++ b/arch/arm/xen/enlighten.c
@@@ -37,6 -49,10 +37,13 @@@ struct shared_info *HYPERVISOR_shared_i
  DEFINE_PER_CPU(struct vcpu_info *, xen_vcpu);
  static struct vcpu_info __percpu *xen_vcpu_info;
  
++<<<<<<< HEAD
++=======
+ /* Linux <-> Xen vCPU id mapping */
+ DEFINE_PER_CPU(uint32_t, xen_vcpu_id);
+ EXPORT_PER_CPU_SYMBOL(xen_vcpu_id);
+ 
++>>>>>>> 55467dea2967 (xen: change the type of xen_vcpu_id to uint32_t)
  /* These are unused until we support booting "pre-ballooned" */
  unsigned long xen_released_pages;
  struct xen_memory_region xen_extra_mem[XEN_EXTRA_MEM_MAX_REGIONS] __initdata;
diff --cc arch/x86/xen/enlighten.c
index 573112a347d4,b86ebb1a9a7f..000000000000
--- a/arch/x86/xen/enlighten.c
+++ b/arch/x86/xen/enlighten.c
@@@ -116,6 -117,10 +116,13 @@@ DEFINE_PER_CPU(struct vcpu_info *, xen_
   */
  DEFINE_PER_CPU(struct vcpu_info, xen_vcpu_info);
  
++<<<<<<< HEAD
++=======
+ /* Linux <-> Xen vCPU id mapping */
+ DEFINE_PER_CPU(uint32_t, xen_vcpu_id);
+ EXPORT_PER_CPU_SYMBOL(xen_vcpu_id);
+ 
++>>>>>>> 55467dea2967 (xen: change the type of xen_vcpu_id to uint32_t)
  enum xen_domain_type xen_domain_type = XEN_NATIVE;
  EXPORT_SYMBOL_GPL(xen_domain_type);
  
diff --cc include/xen/xen-ops.h
index d6fe062cad6b,b5486e648607..000000000000
--- a/include/xen/xen-ops.h
+++ b/include/xen/xen-ops.h
@@@ -6,12 -8,15 +6,21 @@@
  
  DECLARE_PER_CPU(struct vcpu_info *, xen_vcpu);
  
++<<<<<<< HEAD
++=======
+ DECLARE_PER_CPU(uint32_t, xen_vcpu_id);
+ static inline uint32_t xen_vcpu_nr(int cpu)
+ {
+ 	return per_cpu(xen_vcpu_id, cpu);
+ }
+ 
++>>>>>>> 55467dea2967 (xen: change the type of xen_vcpu_id to uint32_t)
  void xen_arch_pre_suspend(void);
  void xen_arch_post_suspend(int suspend_cancelled);
 +void xen_arch_hvm_post_suspend(int suspend_cancelled);
 +
 +void xen_mm_pin_all(void);
 +void xen_mm_unpin_all(void);
  
  void xen_timer_resume(void);
  void xen_arch_resume(void);
* Unmerged path arch/arm/xen/enlighten.c
* Unmerged path arch/x86/xen/enlighten.c
* Unmerged path include/xen/xen-ops.h
