ipv4: allow local fragmentation in ip_finish_output_gso()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Lance Richardson <lrichard@redhat.com>
commit 9ee6c5dc816aa8256257f2cd4008a9291ec7e985
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9ee6c5dc.failed

Some configurations (e.g. geneve interface with default
MTU of 1500 over an ethernet interface with 1500 MTU) result
in the transmission of packets that exceed the configured MTU.
While this should be considered to be a "bad" configuration,
it is still allowed and should not result in the sending
of packets that exceed the configured MTU.

Fix by dropping the assumption in ip_finish_output_gso() that
locally originated gso packets will never need fragmentation.
Basic testing using iperf (observing CPU usage and bandwidth)
have shown no measurable performance impact for traffic not
requiring fragmentation.

Fixes: c7ba65d7b649 ("net: ip: push gso skb forwarding handling down the stack")
	Reported-by: Jan Tluka <jtluka@redhat.com>
	Signed-off-by: Lance Richardson <lrichard@redhat.com>
	Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9ee6c5dc816aa8256257f2cd4008a9291ec7e985)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/ip.h
#	net/ipv4/ip_output.c
diff --cc include/net/ip.h
index c2bdc792e22c,d3a107850a41..000000000000
--- a/include/net/ip.h
+++ b/include/net/ip.h
@@@ -46,6 -47,7 +46,10 @@@ struct inet_skb_parm 
  #define IPSKB_REROUTED		BIT(4)
  #define IPSKB_DOREDIRECT	BIT(5)
  #define IPSKB_FRAG_PMTU		BIT(6)
++<<<<<<< HEAD
++=======
+ #define IPSKB_L3SLAVE		BIT(7)
++>>>>>>> 9ee6c5dc816a (ipv4: allow local fragmentation in ip_finish_output_gso())
  
  	u16			frag_max_size;
  };
diff --cc net/ipv4/ip_output.c
index 7ade299cebf2,49714010ac2e..000000000000
--- a/net/ipv4/ip_output.c
+++ b/net/ipv4/ip_output.c
@@@ -227,10 -239,10 +227,17 @@@ static int ip_finish_output_gso(struct 
  	struct sk_buff *segs;
  	int ret = 0;
  
++<<<<<<< HEAD
 +	/* common case: locally created skb or seglen is <= mtu */
 +	if (((IPCB(skb)->flags & IPSKB_FORWARDED) == 0) ||
 +	      skb_gso_validate_mtu(skb, mtu))
 +		return ip_finish_output2(sk, skb);
++=======
+ 	/* common case: seglen is <= mtu
+ 	 */
+ 	if (skb_gso_validate_mtu(skb, mtu))
+ 		return ip_finish_output2(net, sk, skb);
++>>>>>>> 9ee6c5dc816a (ipv4: allow local fragmentation in ip_finish_output_gso())
  
  	/* Slowpath -  GSO segment length is exceeding the dst MTU.
  	 *
* Unmerged path include/net/ip.h
* Unmerged path net/ipv4/ip_output.c
