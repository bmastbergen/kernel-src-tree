md/raid1: small cleanup in raid1_end_read/write_request

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [md] raid1: small cleanup in raid1_end_read/write_request (Jes Sorensen) [1380016]
Rebuild_FUZZ: 97.20%
commit-author NeilBrown <neilb@suse.com>
commit e5872d58f5ad179fc03267f12257bee4159aace6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e5872d58.failed

Both functions use conf->mirrors[mirror].rdev several times, so
improve readability by storing this in a local variable.

	Signed-off-by: NeilBrown <neilb@suse.com>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit e5872d58f5ad179fc03267f12257bee4159aace6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid1.c
diff --cc drivers/md/raid1.c
index 7358bb1d2bf3,588608dcb780..000000000000
--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@@ -313,14 -315,13 +313,13 @@@ static int find_bio_disk(struct r1bio *
  	return mirror;
  }
  
 -static void raid1_end_read_request(struct bio *bio)
 +static void raid1_end_read_request(struct bio *bio, int error)
  {
 -	int uptodate = !bio->bi_error;
 +	int uptodate = test_bit(BIO_UPTODATE, &bio->bi_flags);
  	struct r1bio *r1_bio = bio->bi_private;
- 	int mirror;
  	struct r1conf *conf = r1_bio->mddev->private;
+ 	struct md_rdev *rdev = conf->mirrors[r1_bio->read_disk].rdev;
  
- 	mirror = r1_bio->read_disk;
  	/*
  	 * this branch is our 'one mirror IO has finished' event handler:
  	 */
@@@ -398,24 -399,21 +397,30 @@@ static void r1_bio_write_done(struct r1
  	}
  }
  
 -static void raid1_end_write_request(struct bio *bio)
 +static void raid1_end_write_request(struct bio *bio, int error)
  {
 +	int uptodate = test_bit(BIO_UPTODATE, &bio->bi_flags);
  	struct r1bio *r1_bio = bio->bi_private;
- 	int mirror, behind = test_bit(R1BIO_BehindIO, &r1_bio->state);
+ 	int behind = test_bit(R1BIO_BehindIO, &r1_bio->state);
  	struct r1conf *conf = r1_bio->mddev->private;
  	struct bio *to_put = NULL;
- 
- 	mirror = find_bio_disk(r1_bio, bio);
+ 	int mirror = find_bio_disk(r1_bio, bio);
+ 	struct md_rdev *rdev = conf->mirrors[mirror].rdev;
  
  	/*
  	 * 'one mirror IO has finished' event handler:
  	 */
++<<<<<<< HEAD
 +	if (!uptodate) {
 +		set_bit(WriteErrorSeen,
 +			&conf->mirrors[mirror].rdev->flags);
 +		if (!test_and_set_bit(WantReplacement,
 +				      &conf->mirrors[mirror].rdev->flags))
++=======
+ 	if (bio->bi_error) {
+ 		set_bit(WriteErrorSeen,	&rdev->flags);
+ 		if (!test_and_set_bit(WantReplacement, &rdev->flags))
++>>>>>>> e5872d58f5ad (md/raid1: small cleanup in raid1_end_read/write_request)
  			set_bit(MD_RECOVERY_NEEDED, &
  				conf->mddev->recovery);
  
* Unmerged path drivers/md/raid1.c
