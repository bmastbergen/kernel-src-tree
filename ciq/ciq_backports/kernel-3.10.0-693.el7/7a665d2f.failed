nvme-fabrics: change NQN UUID to big-endian format

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Daniel Verkamp <daniel.verkamp@intel.com>
commit 7a665d2f60b457c0d77b3e4f01e21c55ffc57069
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7a665d2f.failed

NVM Express 1.2.1 section 7.9, NVMe Qualified Names, specifies that the
UUID format of NQN uses a UUID based on RFC 4122.

RFC 4122 specifies that the UUID is encoded in big-endian byte order.

Switch the NVMe over Fabrics host ID field from little-endian UUID to
big-endian UUID to match the specification.

	Signed-off-by: Daniel Verkamp <daniel.verkamp@intel.com>
	Reviewed-by: Jay Freyensee <james_p_freyensee@linux.intel.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit 7a665d2f60b457c0d77b3e4f01e21c55ffc57069)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fabrics.c
#	drivers/nvme/host/fabrics.h
#	include/linux/nvme.h
diff --cc include/linux/nvme.h
index 69a54c418685,7676557ce357..000000000000
--- a/include/linux/nvme.h
+++ b/include/linux/nvme.h
@@@ -577,6 -707,126 +577,129 @@@ struct nvme_get_log_page_command 
  	__u32			rsvd14[2];
  };
  
++<<<<<<< HEAD
++=======
+ /*
+  * Fabrics subcommands.
+  */
+ enum nvmf_fabrics_opcode {
+ 	nvme_fabrics_command		= 0x7f,
+ };
+ 
+ enum nvmf_capsule_command {
+ 	nvme_fabrics_type_property_set	= 0x00,
+ 	nvme_fabrics_type_connect	= 0x01,
+ 	nvme_fabrics_type_property_get	= 0x04,
+ };
+ 
+ struct nvmf_common_command {
+ 	__u8	opcode;
+ 	__u8	resv1;
+ 	__u16	command_id;
+ 	__u8	fctype;
+ 	__u8	resv2[35];
+ 	__u8	ts[24];
+ };
+ 
+ /*
+  * The legal cntlid range a NVMe Target will provide.
+  * Note that cntlid of value 0 is considered illegal in the fabrics world.
+  * Devices based on earlier specs did not have the subsystem concept;
+  * therefore, those devices had their cntlid value set to 0 as a result.
+  */
+ #define NVME_CNTLID_MIN		1
+ #define NVME_CNTLID_MAX		0xffef
+ #define NVME_CNTLID_DYNAMIC	0xffff
+ 
+ #define MAX_DISC_LOGS	255
+ 
+ /* Discovery log page entry */
+ struct nvmf_disc_rsp_page_entry {
+ 	__u8		trtype;
+ 	__u8		adrfam;
+ 	__u8		nqntype;
+ 	__u8		treq;
+ 	__le16		portid;
+ 	__le16		cntlid;
+ 	__le16		asqsz;
+ 	__u8		resv8[22];
+ 	char		trsvcid[NVMF_TRSVCID_SIZE];
+ 	__u8		resv64[192];
+ 	char		subnqn[NVMF_NQN_FIELD_LEN];
+ 	char		traddr[NVMF_TRADDR_SIZE];
+ 	union tsas {
+ 		char		common[NVMF_TSAS_SIZE];
+ 		struct rdma {
+ 			__u8	qptype;
+ 			__u8	prtype;
+ 			__u8	cms;
+ 			__u8	resv3[5];
+ 			__u16	pkey;
+ 			__u8	resv10[246];
+ 		} rdma;
+ 	} tsas;
+ };
+ 
+ /* Discovery log page header */
+ struct nvmf_disc_rsp_page_hdr {
+ 	__le64		genctr;
+ 	__le64		numrec;
+ 	__le16		recfmt;
+ 	__u8		resv14[1006];
+ 	struct nvmf_disc_rsp_page_entry entries[0];
+ };
+ 
+ struct nvmf_connect_command {
+ 	__u8		opcode;
+ 	__u8		resv1;
+ 	__u16		command_id;
+ 	__u8		fctype;
+ 	__u8		resv2[19];
+ 	union nvme_data_ptr dptr;
+ 	__le16		recfmt;
+ 	__le16		qid;
+ 	__le16		sqsize;
+ 	__u8		cattr;
+ 	__u8		resv3;
+ 	__le32		kato;
+ 	__u8		resv4[12];
+ };
+ 
+ struct nvmf_connect_data {
+ 	uuid_be		hostid;
+ 	__le16		cntlid;
+ 	char		resv4[238];
+ 	char		subsysnqn[NVMF_NQN_FIELD_LEN];
+ 	char		hostnqn[NVMF_NQN_FIELD_LEN];
+ 	char		resv5[256];
+ };
+ 
+ struct nvmf_property_set_command {
+ 	__u8		opcode;
+ 	__u8		resv1;
+ 	__u16		command_id;
+ 	__u8		fctype;
+ 	__u8		resv2[35];
+ 	__u8		attrib;
+ 	__u8		resv3[3];
+ 	__le32		offset;
+ 	__le64		value;
+ 	__u8		resv4[8];
+ };
+ 
+ struct nvmf_property_get_command {
+ 	__u8		opcode;
+ 	__u8		resv1;
+ 	__u16		command_id;
+ 	__u8		fctype;
+ 	__u8		resv2[35];
+ 	__u8		attrib;
+ 	__u8		resv3[3];
+ 	__le32		offset;
+ 	__u8		resv4[16];
+ };
+ 
++>>>>>>> 7a665d2f60b4 (nvme-fabrics: change NQN UUID to big-endian format)
  struct nvme_command {
  	union {
  		struct nvme_common_command common;
* Unmerged path drivers/nvme/host/fabrics.c
* Unmerged path drivers/nvme/host/fabrics.h
* Unmerged path drivers/nvme/host/fabrics.c
* Unmerged path drivers/nvme/host/fabrics.h
* Unmerged path include/linux/nvme.h
