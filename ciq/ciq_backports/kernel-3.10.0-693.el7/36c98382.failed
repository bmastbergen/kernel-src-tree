gso: Only allow GSO_PARTIAL if we can checksum the inner protocol

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Alexander Duyck <aduyck@mirantis.com>
commit 36c983824b6f17b93258153ff5b05c33c34e44ba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/36c98382.failed

This patch addresses a possible issue that can occur if we get into any odd
corner cases where we support TSO for a given protocol but not the checksum
or scatter-gather offload.  There are few drivers floating around that
setup their tunnels this way and by enforcing the checksum piece we can
avoid mangling any frames.

	Signed-off-by: Alexander Duyck <aduyck@mirantis.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 36c983824b6f17b93258153ff5b05c33c34e44ba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/skbuff.c
diff --cc net/core/skbuff.c
index c7043c783fdb,5586be93632f..000000000000
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@@ -3096,11 -3076,11 +3096,10 @@@ struct sk_buff *skb_segment(struct sk_b
  	struct sk_buff *frag_skb = head_skb;
  	unsigned int offset = doffset;
  	unsigned int tnl_hlen = skb_tnl_header_len(head_skb);
 -	unsigned int partial_segs = 0;
  	unsigned int headroom;
 -	unsigned int len = head_skb->len;
 +	unsigned int len;
  	__be16 proto;
- 	bool csum;
- 	int sg = !!(features & NETIF_F_SG);
+ 	bool csum, sg;
  	int nfrags = skb_shinfo(head_skb)->nr_frags;
  	int err = -ENOMEM;
  	int i = 0;
@@@ -3112,8 -3092,21 +3111,24 @@@
  	if (unlikely(!proto))
  		return ERR_PTR(-EINVAL);
  
+ 	sg = !!(features & NETIF_F_SG);
  	csum = !!can_checksum_protocol(features, proto);
  
++<<<<<<< HEAD
++=======
+ 	/* GSO partial only requires that we trim off any excess that
+ 	 * doesn't fit into an MSS sized block, so take care of that
+ 	 * now.
+ 	 */
+ 	if (sg && csum && (features & NETIF_F_GSO_PARTIAL)) {
+ 		partial_segs = len / mss;
+ 		if (partial_segs > 1)
+ 			mss *= partial_segs;
+ 		else
+ 			partial_segs = 0;
+ 	}
+ 
++>>>>>>> 36c983824b6f (gso: Only allow GSO_PARTIAL if we can checksum the inner protocol)
  	headroom = skb_headroom(head_skb);
  	pos = skb_headlen(head_skb);
  
* Unmerged path net/core/skbuff.c
