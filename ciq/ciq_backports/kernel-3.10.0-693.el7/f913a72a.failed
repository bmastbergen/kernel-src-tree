net/mlx5e: Add support to get ethtool flow rules

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Add support to get ethtool flow rules (Don Dutile) [1383601 1417284]
Rebuild_FUZZ: 95.65%
commit-author Maor Gottlieb <maorg@mellanox.com>
commit f913a72aa008777d4a92f82acafb17cce9aed4dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f913a72a.failed

Enhance the existing get_rxnfc callback:
1. Get flow rule of specific ID.
2. Get all flow rules.
3. Get number of rules.

	Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f913a72aa008777d4a92f82acafb17cce9aed4dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 5eea7e35421a,1365cdc81838..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -592,11 -707,26 +592,28 @@@ void mlx5e_free_rx_fragmented_mpwqe(str
  				    struct mlx5e_mpw_info *wi);
  struct mlx5_cqe64 *mlx5e_get_cqe(struct mlx5e_cq *cq);
  
 -void mlx5e_rx_am(struct mlx5e_rq *rq);
 -void mlx5e_rx_am_work(struct work_struct *work);
 -struct mlx5e_cq_moder mlx5e_am_get_def_profile(u8 rx_cq_period_mode);
 -
  void mlx5e_update_stats(struct mlx5e_priv *priv);
  
++<<<<<<< HEAD
 +int mlx5e_create_flow_tables(struct mlx5e_priv *priv);
 +void mlx5e_destroy_flow_tables(struct mlx5e_priv *priv);
 +void mlx5e_init_eth_addr(struct mlx5e_priv *priv);
++=======
+ int mlx5e_create_flow_steering(struct mlx5e_priv *priv);
+ void mlx5e_destroy_flow_steering(struct mlx5e_priv *priv);
+ void mlx5e_init_l2_addr(struct mlx5e_priv *priv);
+ void mlx5e_destroy_flow_table(struct mlx5e_flow_table *ft);
+ int mlx5e_ethtool_get_flow(struct mlx5e_priv *priv, struct ethtool_rxnfc *info,
+ 			   int location);
+ int mlx5e_ethtool_get_all_flows(struct mlx5e_priv *priv,
+ 				struct ethtool_rxnfc *info, u32 *rule_locs);
+ int mlx5e_ethtool_flow_replace(struct mlx5e_priv *priv,
+ 			       struct ethtool_rx_flow_spec *fs);
+ int mlx5e_ethtool_flow_remove(struct mlx5e_priv *priv,
+ 			      int location);
+ void mlx5e_ethtool_init_steering(struct mlx5e_priv *priv);
+ void mlx5e_ethtool_cleanup_steering(struct mlx5e_priv *priv);
++>>>>>>> f913a72aa008 (net/mlx5e: Add support to get ethtool flow rules)
  void mlx5e_set_rx_mode_work(struct work_struct *work);
  
  void mlx5e_fill_hwstamp(struct mlx5e_tstamp *clock, u64 timestamp,
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index 4470bb494e73..719d232f09b8 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@ -902,6 +902,15 @@ static int mlx5e_get_rxnfc(struct net_device *netdev,
 	case ETHTOOL_GRXRINGS:
 		info->data = priv->params.num_channels;
 		break;
+	case ETHTOOL_GRXCLSRLCNT:
+		info->rule_cnt = priv->fs.ethtool.tot_num_rules;
+		break;
+	case ETHTOOL_GRXCLSRULE:
+		err = mlx5e_ethtool_get_flow(priv, info, info->fs.location);
+		break;
+	case ETHTOOL_GRXCLSRLALL:
+		err = mlx5e_ethtool_get_all_flows(priv, info, rule_locs);
+		break;
 	default:
 		err = -EOPNOTSUPP;
 		break;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
