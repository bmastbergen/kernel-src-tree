NTB: Differentiate transport link down messages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [ntb] Differentiate transport link down messages (Suravee Suthikulpanit) [1303727]
Rebuild_FUZZ: 94.38%
commit-author Allen Hubbe <Allen.Hubbe@emc.com>
commit e22e0b9dcf78ee7a72561a6770c9ea554eb65096
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e22e0b9d.failed

The same message "qp %d: Link Down\n" was printed at two locations in
ntb_transport.  Change the messages so they are distinct.

	Signed-off-by: Allen Hubbe <Allen.Hubbe@emc.com>
	Signed-off-by: Jon Mason <jdmason@kudzu.us>
(cherry picked from commit e22e0b9dcf78ee7a72561a6770c9ea554eb65096)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ntb/ntb_transport.c
diff --cc drivers/ntb/ntb_transport.c
index bf77f3a0b404,8d9b59f7fa07..000000000000
--- a/drivers/ntb/ntb_transport.c
+++ b/drivers/ntb/ntb_transport.c
@@@ -605,11 -658,11 +605,17 @@@ static void ntb_qp_link_cleanup(struct 
  		return;
  	}
  
++<<<<<<< HEAD
++=======
+ 	dev_info(&pdev->dev, "qp %d: Link Cleanup\n", qp->qp_num);
+ 	qp->link_is_up = false;
+ 
++>>>>>>> e22e0b9dcf78 (NTB: Differentiate transport link down messages)
  	if (qp->event_handler)
 -		qp->event_handler(qp->cb_data, qp->link_is_up);
 +		qp->event_handler(qp->cb_data, NTB_LINK_DOWN);
 +
 +	dev_info(&pdev->dev, "qp %d: Link Down\n", qp->qp_num);
 +	qp->qp_link = NTB_LINK_DOWN;
  }
  
  static void ntb_qp_link_cleanup_work(struct work_struct *work)
@@@ -1389,11 -1466,11 +1395,16 @@@ static void ntb_send_link_down(struct n
  	struct ntb_queue_entry *entry;
  	int i, rc;
  
 -	if (!qp->link_is_up)
 +	if (qp->qp_link == NTB_LINK_DOWN)
  		return;
  
++<<<<<<< HEAD
 +	qp->qp_link = NTB_LINK_DOWN;
 +	dev_info(&pdev->dev, "qp %d: Link Down\n", qp->qp_num);
++=======
+ 	qp->link_is_up = false;
+ 	dev_info(&pdev->dev, "qp %d: Send Link Down\n", qp->qp_num);
++>>>>>>> e22e0b9dcf78 (NTB: Differentiate transport link down messages)
  
  	for (i = 0; i < NTB_LINK_DOWN_TIMEOUT; i++) {
  		entry = ntb_list_rm(&qp->ntb_tx_free_q_lock, &qp->tx_free_q);
* Unmerged path drivers/ntb/ntb_transport.c
