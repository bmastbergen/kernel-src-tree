net: propagate upper priv via netdev_master_upper_dev_link

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] propagate upper priv via netdev_master_upper_dev_link (Ivan Vecera) [1275772 1297841 1331748]
Rebuild_FUZZ: 95.50%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 6dffb0447c25476f499d205dfceb1972e8dae919
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/6dffb044.failed

Eliminate netdev_master_upper_dev_link_private and pass priv directly as
a parameter of netdev_master_upper_dev_link.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6dffb0447c25476f499d205dfceb1972e8dae919)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vrf.c
#	net/core/dev.c
diff --cc net/core/dev.c
index e2ceb23207bd,27d052bb78bc..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -5375,7 -5446,13 +5375,17 @@@ static int __netdev_upper_dev_link(stru
  	changeupper_info.master = master;
  	changeupper_info.linking = true;
  
++<<<<<<< HEAD
 +	ret = __netdev_adjacent_dev_link_neighbour(dev, upper_dev, private,
++=======
+ 	ret = call_netdevice_notifiers_info(NETDEV_PRECHANGEUPPER, dev,
+ 					    &changeupper_info.info);
+ 	ret = notifier_to_errno(ret);
+ 	if (ret)
+ 		return ret;
+ 
+ 	ret = __netdev_adjacent_dev_link_neighbour(dev, upper_dev, upper_priv,
++>>>>>>> 6dffb0447c25 (net: propagate upper priv via netdev_master_upper_dev_link)
  						   master);
  	if (ret)
  		return ret;
* Unmerged path drivers/net/vrf.c
diff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c
index ce8e9750aae0..856246c530d0 100644
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@ -1202,7 +1202,7 @@ static int bond_master_upper_dev_link(struct net_device *bond_dev,
 {
 	int err;
 
-	err = netdev_master_upper_dev_link_private(slave_dev, bond_dev, slave);
+	err = netdev_master_upper_dev_link(slave_dev, bond_dev, slave);
 	if (err)
 		return err;
 	rtmsg_ifinfo(RTM_NEWLINK, slave_dev, IFF_SLAVE, GFP_KERNEL);
diff --git a/drivers/net/team/team.c b/drivers/net/team/team.c
index 75ab1983f4c3..c7c7245092c2 100644
--- a/drivers/net/team/team.c
+++ b/drivers/net/team/team.c
@@ -1101,7 +1101,7 @@ static int team_upper_dev_link(struct net_device *dev,
 {
 	int err;
 
-	err = netdev_master_upper_dev_link(port_dev, dev);
+	err = netdev_master_upper_dev_link(port_dev, dev, NULL);
 	if (err)
 		return err;
 	port_dev->priv_flags |= IFF_TEAM_PORT;
* Unmerged path drivers/net/vrf.c
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index 24b9dc29c57a..9d787f30c9ef 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -3698,10 +3698,8 @@ struct net_device *netdev_master_upper_dev_get(struct net_device *dev);
 struct net_device *netdev_master_upper_dev_get_rcu(struct net_device *dev);
 int netdev_upper_dev_link(struct net_device *dev, struct net_device *upper_dev);
 int netdev_master_upper_dev_link(struct net_device *dev,
-				 struct net_device *upper_dev);
-int netdev_master_upper_dev_link_private(struct net_device *dev,
-					 struct net_device *upper_dev,
-					 void *private);
+				 struct net_device *upper_dev,
+				 void *upper_priv);
 void netdev_upper_dev_unlink(struct net_device *dev,
 			     struct net_device *upper_dev);
 void netdev_adjacent_rename_links(struct net_device *dev, char *oldname);
diff --git a/net/batman-adv/hard-interface.c b/net/batman-adv/hard-interface.c
index b6504eac0ed8..397c4490c1ad 100644
--- a/net/batman-adv/hard-interface.c
+++ b/net/batman-adv/hard-interface.c
@@ -377,7 +377,8 @@ int batadv_hardif_enable_interface(struct batadv_hard_iface *hard_iface,
 	hard_iface->soft_iface = soft_iface;
 	bat_priv = netdev_priv(hard_iface->soft_iface);
 
-	ret = netdev_master_upper_dev_link(hard_iface->net_dev, soft_iface);
+	ret = netdev_master_upper_dev_link(hard_iface->net_dev,
+					   soft_iface, NULL);
 	if (ret)
 		goto err_dev;
 
diff --git a/net/bridge/br_if.c b/net/bridge/br_if.c
index c4107a488d8b..03af59cafa80 100644
--- a/net/bridge/br_if.c
+++ b/net/bridge/br_if.c
@@ -511,7 +511,7 @@ int br_add_if(struct net_bridge *br, struct net_device *dev)
 
 	dev->priv_flags |= IFF_BRIDGE_PORT;
 
-	err = netdev_master_upper_dev_link(dev, br->dev);
+	err = netdev_master_upper_dev_link(dev, br->dev, NULL);
 	if (err)
 		goto err5;
 
* Unmerged path net/core/dev.c
diff --git a/net/openvswitch/vport-netdev.c b/net/openvswitch/vport-netdev.c
index 76fcaf1fd2a9..be3645aaca7c 100644
--- a/net/openvswitch/vport-netdev.c
+++ b/net/openvswitch/vport-netdev.c
@@ -105,7 +105,7 @@ struct vport *ovs_netdev_link(struct vport *vport, const char *name)
 
 	rtnl_lock();
 	err = netdev_master_upper_dev_link(vport->dev,
-					   get_dpdev(vport->dp));
+					   get_dpdev(vport->dp), NULL);
 	if (err)
 		goto error_unlock;
 
