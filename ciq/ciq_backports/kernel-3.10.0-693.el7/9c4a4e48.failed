net sched: actions use tcf_lastuse_update for consistency

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: actions: use tcf_lastuse_update for consistency (Ivan Vecera) [1442088]
Rebuild_FUZZ: 95.50%
commit-author Jamal Hadi Salim <jhs@mojatatu.com>
commit 9c4a4e488bc8f55dfc8782c7d7757fb058e9088e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9c4a4e48.failed

	Signed-off-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9c4a4e488bc8f55dfc8782c7d7757fb058e9088e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_connmark.c
#	net/sched/act_ife.c
#	net/sched/act_mirred.c
diff --cc net/sched/act_mirred.c
index 4b6188539f6c,d3ac73e90f00..000000000000
--- a/net/sched/act_mirred.c
+++ b/net/sched/act_mirred.c
@@@ -161,16 -153,17 +161,27 @@@ static int tcf_mirred(struct sk_buff *s
  	struct tcf_mirred *m = a->priv;
  	struct net_device *dev;
  	struct sk_buff *skb2;
 -	int retval, err;
  	u32 at;
 +	int retval, err = 1;
 +
++<<<<<<< HEAD
 +	spin_lock(&m->tcf_lock);
 +	m->tcf_tm.lastuse = jiffies;
 +	bstats_update(&m->tcf_bstats, skb);
  
 +	dev = m->tcfm_dev;
 +	if (!dev) {
 +		printk_once(KERN_NOTICE "tc mirred: target device is gone\n");
++=======
+ 	tcf_lastuse_update(&m->tcf_tm);
+ 	bstats_cpu_update(this_cpu_ptr(m->common.cpu_bstats), skb);
+ 
+ 	rcu_read_lock();
+ 	retval = READ_ONCE(m->tcf_action);
+ 	dev = rcu_dereference(m->tcfm_dev);
+ 	if (unlikely(!dev)) {
+ 		pr_notice_once("tc mirred: target device is gone\n");
++>>>>>>> 9c4a4e488bc8 (net sched: actions use tcf_lastuse_update for consistency)
  		goto out;
  	}
  
* Unmerged path net/sched/act_connmark.c
* Unmerged path net/sched/act_ife.c
* Unmerged path net/sched/act_connmark.c
diff --git a/net/sched/act_csum.c b/net/sched/act_csum.c
index 11fe1a416433..ce89464e9a59 100644
--- a/net/sched/act_csum.c
+++ b/net/sched/act_csum.c
@@ -518,7 +518,7 @@ static int tcf_csum(struct sk_buff *skb,
 	u32 update_flags;
 
 	spin_lock(&p->tcf_lock);
-	p->tcf_tm.lastuse = jiffies;
+	tcf_lastuse_update(&p->tcf_tm);
 	bstats_update(&p->tcf_bstats, skb);
 	action = p->tcf_action;
 	update_flags = p->update_flags;
* Unmerged path net/sched/act_ife.c
diff --git a/net/sched/act_ipt.c b/net/sched/act_ipt.c
index 90a973aacc76..b658bc8315b9 100644
--- a/net/sched/act_ipt.c
+++ b/net/sched/act_ipt.c
@@ -215,7 +215,7 @@ static int tcf_ipt(struct sk_buff *skb, const struct tc_action *a,
 
 	spin_lock(&ipt->tcf_lock);
 
-	ipt->tcf_tm.lastuse = jiffies;
+	tcf_lastuse_update(&ipt->tcf_tm);
 	bstats_update(&ipt->tcf_bstats, skb);
 
 	/* yes, we have to worry about both in and out dev
* Unmerged path net/sched/act_mirred.c
diff --git a/net/sched/act_nat.c b/net/sched/act_nat.c
index 76869538d028..e8daae72387f 100644
--- a/net/sched/act_nat.c
+++ b/net/sched/act_nat.c
@@ -118,7 +118,7 @@ static int tcf_nat(struct sk_buff *skb, const struct tc_action *a,
 
 	spin_lock(&p->tcf_lock);
 
-	p->tcf_tm.lastuse = jiffies;
+	tcf_lastuse_update(&p->tcf_tm);
 	old_addr = p->old_addr;
 	new_addr = p->new_addr;
 	mask = p->mask;
diff --git a/net/sched/act_pedit.c b/net/sched/act_pedit.c
index 0978c6d2f6cf..e64d686ccb06 100644
--- a/net/sched/act_pedit.c
+++ b/net/sched/act_pedit.c
@@ -140,7 +140,7 @@ static int tcf_pedit(struct sk_buff *skb, const struct tc_action *a,
 
 	spin_lock(&p->tcf_lock);
 
-	p->tcf_tm.lastuse = jiffies;
+	tcf_lastuse_update(&p->tcf_tm);
 
 	if (p->tcfp_nkeys > 0) {
 		struct tc_pedit_key *tkey = p->tcfp_keys;
diff --git a/net/sched/act_simple.c b/net/sched/act_simple.c
index f7b45ab85388..c01fc1506a47 100644
--- a/net/sched/act_simple.c
+++ b/net/sched/act_simple.c
@@ -42,7 +42,7 @@ static int tcf_simp(struct sk_buff *skb, const struct tc_action *a,
 	struct tcf_defact *d = a->priv;
 
 	spin_lock(&d->tcf_lock);
-	d->tcf_tm.lastuse = jiffies;
+	tcf_lastuse_update(&d->tcf_tm);
 	bstats_update(&d->tcf_bstats, skb);
 
 	/* print policy string followed by _ then packet count
diff --git a/net/sched/act_skbedit.c b/net/sched/act_skbedit.c
index 8fe9d25c3008..ee4a120a6686 100644
--- a/net/sched/act_skbedit.c
+++ b/net/sched/act_skbedit.c
@@ -45,7 +45,7 @@ static int tcf_skbedit(struct sk_buff *skb, const struct tc_action *a,
 	struct tcf_skbedit *d = a->priv;
 
 	spin_lock(&d->tcf_lock);
-	d->tcf_tm.lastuse = jiffies;
+	tcf_lastuse_update(&d->tcf_tm);
 	bstats_update(&d->tcf_bstats, skb);
 
 	if (d->flags & SKBEDIT_F_PRIORITY)
diff --git a/net/sched/act_vlan.c b/net/sched/act_vlan.c
index d735ecf0b1a7..ef9804c6a1dc 100644
--- a/net/sched/act_vlan.c
+++ b/net/sched/act_vlan.c
@@ -29,7 +29,7 @@ static int tcf_vlan(struct sk_buff *skb, const struct tc_action *a,
 	int err;
 
 	spin_lock(&v->tcf_lock);
-	v->tcf_tm.lastuse = jiffies;
+	tcf_lastuse_update(&v->tcf_tm);
 	bstats_update(&v->tcf_bstats, skb);
 	action = v->tcf_action;
 
