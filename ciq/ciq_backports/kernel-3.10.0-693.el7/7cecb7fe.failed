perf hists: Move sort__has_comm into struct perf_hpp_list

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 7cecb7fe8388d5c39708d7f07e642ed31bb9d4fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7cecb7fe.failed

Now we have sort dimensions private for struct hists,
we need to make dimension booleans hists specific as
well.

Moving sort__has_comm into struct perf_hpp_list.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1462276488-26683-8-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 7cecb7fe8388d5c39708d7f07e642ed31bb9d4fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/browsers/hists.c
#	tools/perf/util/hist.h
#	tools/perf/util/sort.c
#	tools/perf/util/sort.h
diff --cc tools/perf/ui/browsers/hists.c
index 6a4681932ba5,538bae880bfe..000000000000
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@@ -2320,7 -2320,8 +2320,12 @@@ do_zoom_thread(struct hist_browser *bro
  {
  	struct thread *thread = act->thread;
  
++<<<<<<< HEAD
 +	if ((!sort__has_thread && !sort__has_comm) || thread == NULL)
++=======
+ 	if ((!hists__has(browser->hists, thread) &&
+ 	     !hists__has(browser->hists, comm)) || thread == NULL)
++>>>>>>> 7cecb7fe8388 (perf hists: Move sort__has_comm into struct perf_hpp_list)
  		return 0;
  
  	if (browser->hists->thread_filter) {
@@@ -2354,10 -2355,11 +2359,15 @@@ add_thread_opt(struct hist_browser *bro
  {
  	int ret;
  
++<<<<<<< HEAD
 +	if ((!sort__has_thread && !sort__has_comm) || thread == NULL)
++=======
+ 	if ((!hists__has(browser->hists, thread) &&
+ 	     !hists__has(browser->hists, comm)) || thread == NULL)
++>>>>>>> 7cecb7fe8388 (perf hists: Move sort__has_comm into struct perf_hpp_list)
  		return 0;
  
 -	if (hists__has(browser->hists, thread)) {
 +	if (sort__has_thread) {
  		ret = asprintf(optstr, "Zoom %s %s(%d) thread",
  			       browser->hists->thread_filter ? "out of" : "into",
  			       thread->comm_set ? thread__comm_str(thread) : "",
diff --cc tools/perf/util/hist.h
index ec76e6bef916,0f84bfb42bb1..000000000000
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@@ -242,6 -242,12 +242,15 @@@ struct perf_hpp_list 
  	struct list_head sorts;
  
  	int need_collapse;
++<<<<<<< HEAD
++=======
+ 	int parent;
+ 	int sym;
+ 	int dso;
+ 	int socket;
+ 	int thread;
+ 	int comm;
++>>>>>>> 7cecb7fe8388 (perf hists: Move sort__has_comm into struct perf_hpp_list)
  };
  
  extern struct perf_hpp_list perf_hpp_list;
diff --cc tools/perf/util/sort.c
index 331b7cc8c0d0,772e2e461ec3..000000000000
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@@ -21,12 -21,6 +21,15 @@@ const char	*sort_order
  const char	*field_order;
  regex_t		ignore_callees_regex;
  int		have_ignore_callees = 0;
++<<<<<<< HEAD
 +int		sort__has_parent = 0;
 +int		sort__has_sym = 0;
 +int		sort__has_dso = 0;
 +int		sort__has_socket = 0;
 +int		sort__has_thread = 0;
 +int		sort__has_comm = 0;
++=======
++>>>>>>> 7cecb7fe8388 (perf hists: Move sort__has_comm into struct perf_hpp_list)
  enum sort_mode	sort__mode = SORT_MODE__NORMAL;
  
  /*
@@@ -2257,13 -2251,13 +2260,13 @@@ static int sort_dimension__add(struct p
  				sd->entry->se_collapse = sort__sym_sort;
  
  		} else if (sd->entry == &sort_dso) {
 -			list->dso = 1;
 +			sort__has_dso = 1;
  		} else if (sd->entry == &sort_socket) {
 -			list->socket = 1;
 +			sort__has_socket = 1;
  		} else if (sd->entry == &sort_thread) {
 -			list->thread = 1;
 +			sort__has_thread = 1;
  		} else if (sd->entry == &sort_comm) {
- 			sort__has_comm = 1;
+ 			list->comm = 1;
  		}
  
  		return __sort_dimension__add(sd, list, level);
diff --cc tools/perf/util/sort.h
index 2e1d27326954,42927f448bcb..000000000000
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@@ -31,12 -31,6 +31,15 @@@ extern const char *parent_pattern
  extern const char default_sort_order[];
  extern regex_t ignore_callees_regex;
  extern int have_ignore_callees;
++<<<<<<< HEAD
 +extern int sort__has_dso;
 +extern int sort__has_parent;
 +extern int sort__has_sym;
 +extern int sort__has_socket;
 +extern int sort__has_thread;
 +extern int sort__has_comm;
++=======
++>>>>>>> 7cecb7fe8388 (perf hists: Move sort__has_comm into struct perf_hpp_list)
  extern enum sort_mode sort__mode;
  extern struct sort_entry sort_comm;
  extern struct sort_entry sort_dso;
* Unmerged path tools/perf/ui/browsers/hists.c
* Unmerged path tools/perf/util/hist.h
* Unmerged path tools/perf/util/sort.c
* Unmerged path tools/perf/util/sort.h
