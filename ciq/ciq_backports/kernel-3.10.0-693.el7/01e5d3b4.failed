x86: Silence 32bit compiler warning in intel_graphics_stolen()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] Silence 32bit compiler warning in intel_graphics_stolen() (Rob Clark) [1406119]
Rebuild_FUZZ: 95.80%
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit 01e5d3b42e2047dd6bc80e722d9f84b654c7dcfb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/01e5d3b4.failed

arch/x86/kernel/early-quirks.c: In function ‘intel_graphics_stolen’:
arch/x86/kernel/early-quirks.c:539:9: warning: format ‘%llx’ expects
argument of type ‘long long unsigned int’, but argument 2 has type ‘phys_addr_t’ [-Wformat=]
         "0x%llx-0x%llx\n", base, base + size - 1);
         ^
arch/x86/kernel/early-quirks.c:539:9: warning: format ‘%llx’ expects
argument of type ‘long long unsigned int’, but argument 3 has type ‘phys_addr_t’ [-Wformat=]

v2: Use %pa for addresses

Fixes: ee0629cfd3c16 (drm/i915: Function per early graphics quirk)
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Mika Kuoppala <mika.kuoppala@intel.com>
	Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
	Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com> #v1
	Reviewed-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
	Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Link: http://patchwork.freedesktop.org/patch/msgid/1462811982-1567-1-git-send-email-chris@chris-wilson.co.uk
(cherry picked from commit 01e5d3b42e2047dd6bc80e722d9f84b654c7dcfb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/early-quirks.c
diff --cc arch/x86/kernel/early-quirks.c
index d7874c362348,757390eb562b..000000000000
--- a/arch/x86/kernel/early-quirks.c
+++ b/arch/x86/kernel/early-quirks.c
@@@ -461,127 -426,143 +461,152 @@@ struct intel_stolen_funcs 
  static size_t __init gen9_stolen_size(int num, int slot, int func)
  {
  	u16 gmch_ctrl;
 -	u16 gms;
  
  	gmch_ctrl = read_pci_config_16(num, slot, func, SNB_GMCH_CTRL);
 -	gms = (gmch_ctrl >> BDW_GMCH_GMS_SHIFT) & BDW_GMCH_GMS_MASK;
 +	gmch_ctrl >>= BDW_GMCH_GMS_SHIFT;
 +	gmch_ctrl &= BDW_GMCH_GMS_MASK;
  
 -	/* 0x0  to 0xef: 32MB increments starting at 0MB */
 -	/* 0xf0 to 0xfe: 4MB increments starting at 4MB */
 -	if (gms < 0xf0)
 -		return (size_t)gms * MB(32);
 +	if (gmch_ctrl < 0xf0)
 +		return gmch_ctrl << 25; /* 32 MB units */
  	else
 -		return (size_t)(gms - 0xf0 + 1) * MB(4);
 +		/* 4MB increments starting at 0xf0 for 4MB */
 +		return (gmch_ctrl - 0xf0 + 1) << 22;
  }
  
 -struct intel_early_ops {
 -	size_t (*stolen_size)(int num, int slot, int func);
 -	phys_addr_t (*stolen_base)(int num, int slot, int func, size_t size);
 -};
 +typedef size_t (*stolen_size_fn)(int num, int slot, int func);
  
 -static const struct intel_early_ops i830_early_ops __initconst = {
 -	.stolen_base = i830_stolen_base,
 -	.stolen_size = i830_stolen_size,
 +static const struct intel_stolen_funcs i830_stolen_funcs __initconst = {
 +	.base = i830_stolen_base,
 +	.size = i830_stolen_size,
  };
  
 -static const struct intel_early_ops i845_early_ops __initconst = {
 -	.stolen_base = i845_stolen_base,
 -	.stolen_size = i830_stolen_size,
 +static const struct intel_stolen_funcs i845_stolen_funcs __initconst = {
 +	.base = i845_stolen_base,
 +	.size = i830_stolen_size,
  };
  
 -static const struct intel_early_ops i85x_early_ops __initconst = {
 -	.stolen_base = i85x_stolen_base,
 -	.stolen_size = gen3_stolen_size,
 +static const struct intel_stolen_funcs i85x_stolen_funcs __initconst = {
 +	.base = i85x_stolen_base,
 +	.size = gen3_stolen_size,
  };
  
 -static const struct intel_early_ops i865_early_ops __initconst = {
 -	.stolen_base = i865_stolen_base,
 -	.stolen_size = gen3_stolen_size,
 +static const struct intel_stolen_funcs i865_stolen_funcs __initconst = {
 +	.base = i865_stolen_base,
 +	.size = gen3_stolen_size,
  };
  
 -static const struct intel_early_ops gen3_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = gen3_stolen_size,
 +static const struct intel_stolen_funcs gen3_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = gen3_stolen_size,
  };
  
 -static const struct intel_early_ops gen6_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = gen6_stolen_size,
 +static const struct intel_stolen_funcs gen6_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = gen6_stolen_size,
  };
  
 -static const struct intel_early_ops gen8_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = gen8_stolen_size,
 +static const struct intel_stolen_funcs gen8_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = gen8_stolen_size,
  };
  
 -static const struct intel_early_ops gen9_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = gen9_stolen_size,
 +static const struct intel_stolen_funcs gen9_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = gen9_stolen_size,
  };
  
 -static const struct intel_early_ops chv_early_ops __initconst = {
 -	.stolen_base = gen3_stolen_base,
 -	.stolen_size = chv_stolen_size,
 +static const struct intel_stolen_funcs chv_stolen_funcs __initconst = {
 +	.base = intel_stolen_base,
 +	.size = chv_stolen_size,
  };
  
 -static const struct pci_device_id intel_early_ids[] __initconst = {
 -	INTEL_I830_IDS(&i830_early_ops),
 -	INTEL_I845G_IDS(&i845_early_ops),
 -	INTEL_I85X_IDS(&i85x_early_ops),
 -	INTEL_I865G_IDS(&i865_early_ops),
 -	INTEL_I915G_IDS(&gen3_early_ops),
 -	INTEL_I915GM_IDS(&gen3_early_ops),
 -	INTEL_I945G_IDS(&gen3_early_ops),
 -	INTEL_I945GM_IDS(&gen3_early_ops),
 -	INTEL_VLV_M_IDS(&gen6_early_ops),
 -	INTEL_VLV_D_IDS(&gen6_early_ops),
 -	INTEL_PINEVIEW_IDS(&gen3_early_ops),
 -	INTEL_I965G_IDS(&gen3_early_ops),
 -	INTEL_G33_IDS(&gen3_early_ops),
 -	INTEL_I965GM_IDS(&gen3_early_ops),
 -	INTEL_GM45_IDS(&gen3_early_ops),
 -	INTEL_G45_IDS(&gen3_early_ops),
 -	INTEL_IRONLAKE_D_IDS(&gen3_early_ops),
 -	INTEL_IRONLAKE_M_IDS(&gen3_early_ops),
 -	INTEL_SNB_D_IDS(&gen6_early_ops),
 -	INTEL_SNB_M_IDS(&gen6_early_ops),
 -	INTEL_IVB_M_IDS(&gen6_early_ops),
 -	INTEL_IVB_D_IDS(&gen6_early_ops),
 -	INTEL_HSW_D_IDS(&gen6_early_ops),
 -	INTEL_HSW_M_IDS(&gen6_early_ops),
 -	INTEL_BDW_M_IDS(&gen8_early_ops),
 -	INTEL_BDW_D_IDS(&gen8_early_ops),
 -	INTEL_CHV_IDS(&chv_early_ops),
 -	INTEL_SKL_IDS(&gen9_early_ops),
 -	INTEL_BXT_IDS(&gen9_early_ops),
 -	INTEL_KBL_IDS(&gen9_early_ops),
 +static const struct pci_device_id intel_stolen_ids[] __initconst = {
 +	INTEL_I830_IDS(&i830_stolen_funcs),
 +	INTEL_I845G_IDS(&i845_stolen_funcs),
 +	INTEL_I85X_IDS(&i85x_stolen_funcs),
 +	INTEL_I865G_IDS(&i865_stolen_funcs),
 +	INTEL_I915G_IDS(&gen3_stolen_funcs),
 +	INTEL_I915GM_IDS(&gen3_stolen_funcs),
 +	INTEL_I945G_IDS(&gen3_stolen_funcs),
 +	INTEL_I945GM_IDS(&gen3_stolen_funcs),
 +	INTEL_VLV_M_IDS(&gen6_stolen_funcs),
 +	INTEL_VLV_D_IDS(&gen6_stolen_funcs),
 +	INTEL_PINEVIEW_IDS(&gen3_stolen_funcs),
 +	INTEL_I965G_IDS(&gen3_stolen_funcs),
 +	INTEL_G33_IDS(&gen3_stolen_funcs),
 +	INTEL_I965GM_IDS(&gen3_stolen_funcs),
 +	INTEL_GM45_IDS(&gen3_stolen_funcs),
 +	INTEL_G45_IDS(&gen3_stolen_funcs),
 +	INTEL_IRONLAKE_D_IDS(&gen3_stolen_funcs),
 +	INTEL_IRONLAKE_M_IDS(&gen3_stolen_funcs),
 +	INTEL_SNB_D_IDS(&gen6_stolen_funcs),
 +	INTEL_SNB_M_IDS(&gen6_stolen_funcs),
 +	INTEL_IVB_M_IDS(&gen6_stolen_funcs),
 +	INTEL_IVB_D_IDS(&gen6_stolen_funcs),
 +	INTEL_HSW_D_IDS(&gen6_stolen_funcs),
 +	INTEL_HSW_M_IDS(&gen6_stolen_funcs),
 +	INTEL_BDW_M_IDS(&gen8_stolen_funcs),
 +	INTEL_BDW_D_IDS(&gen8_stolen_funcs),
 +	INTEL_CHV_IDS(&chv_stolen_funcs),
 +	INTEL_SKL_IDS(&gen9_stolen_funcs),
 +	INTEL_BXT_IDS(&gen9_stolen_funcs),
 +	INTEL_KBL_IDS(&gen9_stolen_funcs),
  };
  
 -static void __init
 -intel_graphics_stolen(int num, int slot, int func,
 -		      const struct intel_early_ops *early_ops)
 +static void __init intel_graphics_stolen(int num, int slot, int func)
  {
++<<<<<<< HEAD
 +	size_t size;
++=======
+ 	phys_addr_t base, end;
+ 	size_t size;
+ 
+ 	size = early_ops->stolen_size(num, slot, func);
+ 	base = early_ops->stolen_base(num, slot, func, size);
+ 
+ 	if (!size || !base)
+ 		return;
+ 
+ 	end = base + size - 1;
+ 	printk(KERN_INFO "Reserving Intel graphics memory at %pa-%pa\n",
+ 	       &base, &end);
+ 
+ 	/* Mark this space as reserved */
+ 	e820_add_region(base, size, E820_RESERVED);
+ 	sanitize_e820_map(e820.map, ARRAY_SIZE(e820.map), &e820.nr_map);
+ }
+ 
+ static void __init intel_graphics_quirks(int num, int slot, int func)
+ {
+ 	const struct intel_early_ops *early_ops;
+ 	u16 device;
++>>>>>>> 01e5d3b42e20 (x86: Silence 32bit compiler warning in intel_graphics_stolen())
  	int i;
 +	u32 start;
 +	u16 device, subvendor, subdevice;
  
  	device = read_pci_config_16(num, slot, func, PCI_DEVICE_ID);
 -
 -	for (i = 0; i < ARRAY_SIZE(intel_early_ids); i++) {
 -		kernel_ulong_t driver_data = intel_early_ids[i].driver_data;
 -
 -		if (intel_early_ids[i].device != device)
 -			continue;
 -
 -		early_ops = (typeof(early_ops))driver_data;
 -
 -		intel_graphics_stolen(num, slot, func, early_ops);
 -
 -		return;
 +	subvendor = read_pci_config_16(num, slot, func,
 +				       PCI_SUBSYSTEM_VENDOR_ID);
 +	subdevice = read_pci_config_16(num, slot, func, PCI_SUBSYSTEM_ID);
 +
 +	for (i = 0; i < ARRAY_SIZE(intel_stolen_ids); i++) {
 +		if (intel_stolen_ids[i].device == device) {
 +			const struct intel_stolen_funcs *stolen_funcs =
 +				(const struct intel_stolen_funcs *)intel_stolen_ids[i].driver_data;
 +			size = stolen_funcs->size(num, slot, func);
 +			start = stolen_funcs->base(num, slot, func, size);
 +			if (size && start) {
 +				printk(KERN_INFO "Reserving Intel graphics stolen memory at 0x%x-0x%x\n",
 +				       start, start + (u32)size - 1);
 +				/* Mark this space as reserved */
 +				e820_add_region(start, size, E820_RESERVED);
 +				sanitize_e820_map(e820.map,
 +						  ARRAY_SIZE(e820.map),
 +						  &e820.nr_map);
 +			}
 +			return;
 +		}
  	}
  }
  
* Unmerged path arch/x86/kernel/early-quirks.c
