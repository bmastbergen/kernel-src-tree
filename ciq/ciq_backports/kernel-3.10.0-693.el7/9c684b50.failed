net: move __skb_get_hash function declaration to flow_dissector.h

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] move __skb_get_hash function declaration to flow_dissector.h (Jonathan Toppins) [1428557]
Rebuild_FUZZ: 96.00%
commit-author Jiri Pirko <jiri@resnulli.us>
commit 9c684b5083bc191c4b7b189c73d75587e167a474
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9c684b50.failed

Since the definition of the function is in flow_dissector.c, it makes
sense to have the declaration in flow_dissector.h

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9c684b5083bc191c4b7b189c73d75587e167a474)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/skbuff.h
#	include/net/flow_keys.h
diff --cc include/linux/skbuff.h
index 449d0a455cd2,ae2d1b7769d8..000000000000
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@@ -973,12 -917,10 +973,15 @@@ skb_set_hash(struct sk_buff *skb, __u3
  	skb->hash = hash;
  }
  
++<<<<<<< HEAD
 +#define skb_get_rxhash skb_get_hash
 +
 +void __skb_get_hash(struct sk_buff *skb);
++=======
++>>>>>>> 9c684b5083bc (net: move __skb_get_hash function declaration to flow_dissector.h)
  static inline __u32 skb_get_hash(struct sk_buff *skb)
  {
 -	if (!skb->l4_hash && !skb->sw_hash)
 +	if (!skb->l4_hash)
  		__skb_get_hash(skb);
  
  	return skb->hash;
diff --cc include/net/flow_keys.h
index 7ee2df083542,e4ee761ca8c0..000000000000
--- a/include/net/flow_keys.h
+++ b/include/net/flow_keys.h
@@@ -39,7 -44,26 +39,30 @@@ static inline __be32 skb_flow_get_ports
  {
  	return __skb_flow_get_ports(skb, thoff, ip_proto, NULL, 0);
  }
 -
  u32 flow_hash_from_keys(struct flow_keys *keys);
++<<<<<<< HEAD:include/net/flow_keys.h
 +unsigned int flow_get_hlen(const unsigned char *data, unsigned int max_len,
 +			   __be16 protocol);
++=======
+ void __skb_get_hash(struct sk_buff *skb);
+ u32 skb_get_poff(const struct sk_buff *skb);
+ u32 __skb_get_poff(const struct sk_buff *skb, void *data,
+ 		   const struct flow_keys *keys, int hlen);
+ 
+ /* struct flow_keys_digest:
+  *
+  * This structure is used to hold a digest of the full flow keys. This is a
+  * larger "hash" of a flow to allow definitively matching specific flows where
+  * the 32 bit skb->hash is not large enough. The size is limited to 16 bytes so
+  * that it can by used in CB of skb (see sch_choke for an example).
+  */
+ #define FLOW_KEYS_DIGEST_LEN	16
+ struct flow_keys_digest {
+ 	u8	data[FLOW_KEYS_DIGEST_LEN];
+ };
+ 
+ void make_flow_keys_digest(struct flow_keys_digest *digest,
+ 			   const struct flow_keys *flow);
+ 
++>>>>>>> 9c684b5083bc (net: move __skb_get_hash function declaration to flow_dissector.h):include/net/flow_dissector.h
  #endif
* Unmerged path include/linux/skbuff.h
* Unmerged path include/net/flow_keys.h
