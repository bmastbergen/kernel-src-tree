ARM/PCI: Move align_resource function pointer to pci_host_bridge structure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Gabriele Paoloni <gabriele.paoloni@huawei.com>
commit 7c7a0e945349a3d0d497d7f32db6ed33d4031110
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7c7a0e94.failed

Commit b3a72384fe29 ("ARM/PCI: Replace pci_sys_data->align_resource with
global function pointer") introduced an ARM-specific align_resource()
function pointer.  This is not portable to other arches and doesn't work
for platforms with two different PCIe host bridge controllers.

Move the function pointer to the pci_host_bridge structure so each host
bridge driver can specify its own align_resource() function.

	Signed-off-by: Gabriele Paoloni <gabriele.paoloni@huawei.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Arnd Bergmann <arnd@arndb.de>
(cherry picked from commit 7c7a0e945349a3d0d497d7f32db6ed33d4031110)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm/kernel/bios32.c
diff --cc arch/arm/kernel/bios32.c
index 5f232fbb4f05,066f7f9ba411..000000000000
--- a/arch/arm/kernel/bios32.c
+++ b/arch/arm/kernel/bios32.c
@@@ -462,7 -456,6 +462,10 @@@ static void pcibios_init_hw(struct hw_p
  		sys->busnr   = busnr;
  		sys->swizzle = hw->swizzle;
  		sys->map_irq = hw->map_irq;
++<<<<<<< HEAD
 +		sys->align_resource = hw->align_resource;
++=======
++>>>>>>> 7c7a0e945349 (ARM/PCI: Move align_resource function pointer to pci_host_bridge structure)
  		INIT_LIST_HEAD(&sys->resources);
  
  		if (hw->private_data)
@@@ -576,16 -576,19 +584,25 @@@ resource_size_t pcibios_align_resource(
  				resource_size_t size, resource_size_t align)
  {
  	struct pci_dev *dev = data;
 +	struct pci_sys_data *sys = dev->sysdata;
  	resource_size_t start = res->start;
+ 	struct pci_host_bridge *host_bridge;
  
  	if (res->flags & IORESOURCE_IO && start & 0x300)
  		start = (start + 0x3ff) & ~0x3ff;
  
  	start = (start + align - 1) & ~(align - 1);
  
++<<<<<<< HEAD
 +	if (sys->align_resource)
 +		return sys->align_resource(dev, res, start, size, align);
++=======
+ 	host_bridge = pci_find_host_bridge(dev->bus);
+ 
+ 	if (host_bridge->align_resource)
+ 		return host_bridge->align_resource(dev, res,
+ 				start, size, align);
++>>>>>>> 7c7a0e945349 (ARM/PCI: Move align_resource function pointer to pci_host_bridge structure)
  
  	return start;
  }
* Unmerged path arch/arm/kernel/bios32.c
diff --git a/drivers/pci/pci.h b/drivers/pci/pci.h
index 147fd6c8aeb5..766bec5c05b9 100644
--- a/drivers/pci/pci.h
+++ b/drivers/pci/pci.h
@@ -334,6 +334,4 @@ static inline int pci_dev_specific_reset(struct pci_dev *dev, int probe)
 }
 #endif
 
-struct pci_host_bridge *pci_find_host_bridge(struct pci_bus *bus);
-
 #endif /* DRIVERS_PCI_H */
diff --git a/include/linux/pci.h b/include/linux/pci.h
index a9be89272f9a..ad5af49bf1cf 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -436,9 +436,18 @@ struct pci_host_bridge {
 	void (*release_fn)(struct pci_host_bridge *);
 	void *release_data;
 	unsigned int ignore_reset_delay:1;	/* for entire hierarchy */
+	/* Resource alignment requirements */
+	resource_size_t (*align_resource)(struct pci_dev *dev,
+			const struct resource *res,
+			resource_size_t start,
+			resource_size_t size,
+			resource_size_t align);
 };
 
 #define	to_pci_host_bridge(n) container_of(n, struct pci_host_bridge, dev)
+
+struct pci_host_bridge *pci_find_host_bridge(struct pci_bus *bus);
+
 void pci_set_host_bridge_release(struct pci_host_bridge *bridge,
 		     void (*release_fn)(struct pci_host_bridge *),
 		     void *release_data);
