x86/mce/AMD: Update sysfs bank names for SMCA systems

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] mce/amd: Update sysfs bank names for SMCA systems (David Arcari) [1389383]
Rebuild_FUZZ: 96.08%
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 87a6d4091bd795b43d684bfc87253e04a263af1c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/87a6d409.failed

Define a bank's sysfs filename based on its IP type and InstanceId.

Credits go to Aravind  for:
 * The general idea and proto- get_name().
 * Defining smca_umc_block_names[] and buf_mcatype[].

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: Aravind Gopalakrishnan <aravindksg.lkml@gmail.com>
Link: http://lkml.kernel.org/r/1473193490-3291-2-git-send-email-Yazen.Ghannam@amd.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 87a6d4091bd795b43d684bfc87253e04a263af1c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce_amd.c
diff --cc arch/x86/kernel/cpu/mcheck/mce_amd.c
index 40045b269893,0f9d0786bc97..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_amd.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_amd.c
@@@ -63,6 -64,72 +64,75 @@@ static const char * const th_names[] = 
  	"execution_unit",
  };
  
++<<<<<<< HEAD
++=======
+ static const char * const smca_umc_block_names[] = {
+ 	"dram_ecc",
+ 	"misc_umc"
+ };
+ 
+ struct smca_bank_name smca_bank_names[] = {
+ 	[SMCA_LS]	= { "load_store",	"Load Store Unit" },
+ 	[SMCA_IF]	= { "insn_fetch",	"Instruction Fetch Unit" },
+ 	[SMCA_L2_CACHE]	= { "l2_cache",		"L2 Cache" },
+ 	[SMCA_DE]	= { "decode_unit",	"Decode Unit" },
+ 	[SMCA_EX]	= { "execution_unit",	"Execution Unit" },
+ 	[SMCA_FP]	= { "floating_point",	"Floating Point Unit" },
+ 	[SMCA_L3_CACHE]	= { "l3_cache",		"L3 Cache" },
+ 	[SMCA_CS]	= { "coherent_slave",	"Coherent Slave" },
+ 	[SMCA_PIE]	= { "pie",		"Power, Interrupts, etc." },
+ 	[SMCA_UMC]	= { "umc",		"Unified Memory Controller" },
+ 	[SMCA_PB]	= { "param_block",	"Parameter Block" },
+ 	[SMCA_PSP]	= { "psp",		"Platform Security Processor" },
+ 	[SMCA_SMU]	= { "smu",		"System Management Unit" },
+ };
+ EXPORT_SYMBOL_GPL(smca_bank_names);
+ 
+ static struct smca_hwid_mcatype smca_hwid_mcatypes[] = {
+ 	/* { bank_type, hwid_mcatype, xec_bitmap } */
+ 
+ 	/* ZN Core (HWID=0xB0) MCA types */
+ 	{ SMCA_LS,	 HWID_MCATYPE(0xB0, 0x0), 0x1FFFEF },
+ 	{ SMCA_IF,	 HWID_MCATYPE(0xB0, 0x1), 0x3FFF },
+ 	{ SMCA_L2_CACHE, HWID_MCATYPE(0xB0, 0x2), 0xF },
+ 	{ SMCA_DE,	 HWID_MCATYPE(0xB0, 0x3), 0x1FF },
+ 	/* HWID 0xB0 MCATYPE 0x4 is Reserved */
+ 	{ SMCA_EX,	 HWID_MCATYPE(0xB0, 0x5), 0x7FF },
+ 	{ SMCA_FP,	 HWID_MCATYPE(0xB0, 0x6), 0x7F },
+ 	{ SMCA_L3_CACHE, HWID_MCATYPE(0xB0, 0x7), 0xFF },
+ 
+ 	/* Data Fabric MCA types */
+ 	{ SMCA_CS,	 HWID_MCATYPE(0x2E, 0x0), 0x1FF },
+ 	{ SMCA_PIE,	 HWID_MCATYPE(0x2E, 0x1), 0xF },
+ 
+ 	/* Unified Memory Controller MCA type */
+ 	{ SMCA_UMC,	 HWID_MCATYPE(0x96, 0x0), 0x3F },
+ 
+ 	/* Parameter Block MCA type */
+ 	{ SMCA_PB,	 HWID_MCATYPE(0x05, 0x0), 0x1 },
+ 
+ 	/* Platform Security Processor MCA type */
+ 	{ SMCA_PSP,	 HWID_MCATYPE(0xFF, 0x0), 0x1 },
+ 
+ 	/* System Management Unit MCA type */
+ 	{ SMCA_SMU,	 HWID_MCATYPE(0x01, 0x0), 0x1 },
+ };
+ 
+ struct smca_bank_info smca_banks[MAX_NR_BANKS];
+ EXPORT_SYMBOL_GPL(smca_banks);
+ 
+ /*
+  * In SMCA enabled processors, we can have multiple banks for a given IP type.
+  * So to define a unique name for each bank, we use a temp c-string to append
+  * the MCA_IPID[InstanceId] to type's name in get_name().
+  *
+  * InstanceId is 32 bits which is 8 characters. Make sure MAX_MCATYPE_NAME_LEN
+  * is greater than 8 plus 1 (for underscore) plus length of longest type name.
+  */
+ #define MAX_MCATYPE_NAME_LEN	30
+ static char buf_mcatype[MAX_MCATYPE_NAME_LEN];
+ 
++>>>>>>> 87a6d4091bd7 (x86/mce/AMD: Update sysfs bank names for SMCA systems)
  static DEFINE_PER_CPU(struct threshold_bank **, threshold_banks);
  static DEFINE_PER_CPU(unsigned int, bank_map);	/* see which banks are on */
  
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_amd.c
