ipv6: pointer math error in ip6_tnl_parse_tlv_enc_lim()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 63117f09c768be05a0bf465911297dc76394f686
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/63117f09.failed

Casting is a high precedence operation but "off" and "i" are in terms of
bytes so we need to have some parenthesis here.

Fixes: fbfa743a9d2a ("ipv6: fix ip6_tnl_parse_tlv_enc_lim()")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Acked-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 63117f09c768be05a0bf465911297dc76394f686)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_tunnel.c
diff --cc net/ipv6/ip6_tunnel.c
index 2a4b43ddc51c,75fac933c209..000000000000
--- a/net/ipv6/ip6_tunnel.c
+++ b/net/ipv6/ip6_tunnel.c
@@@ -415,10 -438,10 +415,14 @@@ __u16 ip6_tnl_parse_tlv_enc_lim(struct 
  				struct ipv6_tlv_tnl_enc_lim *tel;
  
  				/* No more room for encapsulation limit */
 -				if (i + sizeof(*tel) > optlen)
 +				if (i + sizeof (*tel) > off + optlen)
  					break;
  
++<<<<<<< HEAD
 +				tel = (struct ipv6_tlv_tnl_enc_lim *) &raw[i];
++=======
+ 				tel = (struct ipv6_tlv_tnl_enc_lim *)(skb->data + off + i);
++>>>>>>> 63117f09c768 (ipv6: pointer math error in ip6_tnl_parse_tlv_enc_lim())
  				/* return index of option if found and valid */
  				if (tel->type == IPV6_TLV_TNL_ENCAP_LIMIT &&
  				    tel->length == 1)
* Unmerged path net/ipv6/ip6_tunnel.c
