perf evsel: Use variable instead of repeating lengthy FD macro

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 83c2e4f3968d6871eed295f2f5675d3d70b01afa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/83c2e4f3.failed

It's more readable and will ease up following patches.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1481538943-21874-3-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 83c2e4f3968d6871eed295f2f5675d3d70b01afa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel.c
diff --cc tools/perf/util/evsel.c
index f76f126b80c9,fd61ebd77c26..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -1428,20 -1481,50 +1428,42 @@@ retry_sample_id
  
  			group_fd = get_group_fd(evsel, cpu, thread);
  retry_open:
 -			pr_debug2("sys_perf_event_open: pid %d  cpu %d  group_fd %d  flags %#lx",
 +			pr_debug2("sys_perf_event_open: pid %d  cpu %d  group_fd %d  flags %#lx\n",
  				  pid, cpus->map[cpu], group_fd, flags);
  
- 			FD(evsel, cpu, thread) = sys_perf_event_open(&evsel->attr,
- 								     pid,
- 								     cpus->map[cpu],
- 								     group_fd, flags);
- 			if (FD(evsel, cpu, thread) < 0) {
+ 			fd = sys_perf_event_open(&evsel->attr, pid, cpus->map[cpu],
+ 						 group_fd, flags);
+ 
+ 			FD(evsel, cpu, thread) = fd;
+ 
+ 			if (fd < 0) {
  				err = -errno;
 -				pr_debug2("\nsys_perf_event_open failed, error %d\n",
 +				pr_debug2("sys_perf_event_open failed, error %d\n",
  					  err);
  				goto try_fallback;
  			}
++<<<<<<< HEAD
++=======
+ 
+ 			pr_debug2(" = %d\n", fd);
+ 
+ 			if (evsel->bpf_fd >= 0) {
+ 				int evt_fd = fd;
+ 				int bpf_fd = evsel->bpf_fd;
+ 
+ 				err = ioctl(evt_fd,
+ 					    PERF_EVENT_IOC_SET_BPF,
+ 					    bpf_fd);
+ 				if (err && errno != EEXIST) {
+ 					pr_err("failed to attach bpf fd %d: %s\n",
+ 					       bpf_fd, strerror(errno));
+ 					err = -EINVAL;
+ 					goto out_close;
+ 				}
+ 			}
+ 
++>>>>>>> 83c2e4f3968d (perf evsel: Use variable instead of repeating lengthy FD macro)
  			set_rlimit = NO_CHANGE;
 -
 -			/*
 -			 * If we succeeded but had to kill clockid, fail and
 -			 * have perf_evsel__open_strerror() print us a nice
 -			 * error.
 -			 */
 -			if (perf_missing_features.clockid ||
 -			    perf_missing_features.clockid_wrong) {
 -				err = -EINVAL;
 -				goto out_close;
 -			}
  		}
  	}
  
* Unmerged path tools/perf/util/evsel.c
