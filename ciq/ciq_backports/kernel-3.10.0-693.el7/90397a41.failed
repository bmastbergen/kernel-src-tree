x86/mm: Add memory hotplug support for KASLR memory randomization

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] mm: Add memory hotplug support for KASLR memory randomization (Baoquan He) [1424943]
Rebuild_FUZZ: 96.83%
commit-author Thomas Garnier <thgarnie@google.com>
commit 90397a41779645d3abba5599f6bb538fdcab9339
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/90397a41.failed

Add a new option (CONFIG_RANDOMIZE_MEMORY_PHYSICAL_PADDING) to define
the padding used for the physical memory mapping section when KASLR
memory is enabled. It ensures there is enough virtual address space when
CONFIG_MEMORY_HOTPLUG is used. The default value is 10 terabytes. If
CONFIG_MEMORY_HOTPLUG is not used, no space is reserved increasing the
entropy available.

	Signed-off-by: Thomas Garnier <thgarnie@google.com>
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
	Cc: Alexander Popov <alpopov@ptsecurity.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Dave Young <dyoung@redhat.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Jan Beulich <JBeulich@suse.com>
	Cc: Joerg Roedel <jroedel@suse.de>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Lv Zheng <lv.zheng@intel.com>
	Cc: Mark Salter <msalter@redhat.com>
	Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Cc: Matt Fleming <matt@codeblueprint.co.uk>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephen Smalley <sds@tycho.nsa.gov>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Toshi Kani <toshi.kani@hpe.com>
	Cc: Xiao Guangrong <guangrong.xiao@linux.intel.com>
	Cc: Yinghai Lu <yinghai@kernel.org>
	Cc: kernel-hardening@lists.openwall.com
	Cc: linux-doc@vger.kernel.org
Link: http://lkml.kernel.org/r/1466556426-32664-10-git-send-email-keescook@chromium.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 90397a41779645d3abba5599f6bb538fdcab9339)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/Kconfig
#	arch/x86/mm/kaslr.c
diff --cc arch/x86/Kconfig
index 5162fc083bed,703413fb233a..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -1823,6 -1993,38 +1823,41 @@@ config PHYSICAL_ALIG
  
  	  Don't change this unless you know what you are doing.
  
++<<<<<<< HEAD
++=======
+ config RANDOMIZE_MEMORY
+ 	bool "Randomize the kernel memory sections"
+ 	depends on X86_64
+ 	depends on RANDOMIZE_BASE
+ 	default RANDOMIZE_BASE
+ 	---help---
+ 	   Randomizes the base virtual address of kernel memory sections
+ 	   (physical memory mapping, vmalloc & vmemmap). This security feature
+ 	   makes exploits relying on predictable memory locations less reliable.
+ 
+ 	   The order of allocations remains unchanged. Entropy is generated in
+ 	   the same way as RANDOMIZE_BASE. Current implementation in the optimal
+ 	   configuration have in average 30,000 different possible virtual
+ 	   addresses for each memory section.
+ 
+ 	   If unsure, say N.
+ 
+ config RANDOMIZE_MEMORY_PHYSICAL_PADDING
+ 	hex "Physical memory mapping padding" if EXPERT
+ 	depends on RANDOMIZE_MEMORY
+ 	default "0xa" if MEMORY_HOTPLUG
+ 	default "0x0"
+ 	range 0x1 0x40 if MEMORY_HOTPLUG
+ 	range 0x0 0x40
+ 	---help---
+ 	   Define the padding in terabytes added to the existing physical
+ 	   memory size during kernel memory randomization. It is useful
+ 	   for memory hotplug support but reduces the entropy available for
+ 	   address randomization.
+ 
+ 	   If unsure, leave at the default value.
+ 
++>>>>>>> 90397a417796 (x86/mm: Add memory hotplug support for KASLR memory randomization)
  config HOTPLUG_CPU
  	bool "Support for hot-pluggable CPUs"
  	depends on SMP
* Unmerged path arch/x86/mm/kaslr.c
* Unmerged path arch/x86/Kconfig
* Unmerged path arch/x86/mm/kaslr.c
