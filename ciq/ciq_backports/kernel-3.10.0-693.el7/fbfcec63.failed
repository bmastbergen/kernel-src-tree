phylib: make phy_scan_fixups() static

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
commit fbfcec635dba38345a446f44b22352cd96ad9463
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/fbfcec63.failed

phy_scan_fixups()  isn't and shouldn't be called by the drivers directly, so
unexport it. And since Florian Fainelli's recent patches, the function is only
called locally, so we can make it static as well.

	Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fbfcec635dba38345a446f44b22352cd96ad9463)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/phy.h
diff --cc include/linux/phy.h
index 825eed90a307,7c81dd8870d4..000000000000
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@@ -625,12 -591,11 +625,16 @@@ void phy_print_status(struct phy_devic
  void phy_device_free(struct phy_device *phydev);
  
  int phy_register_fixup(const char *bus_id, u32 phy_uid, u32 phy_uid_mask,
 -		       int (*run)(struct phy_device *));
 +		int (*run)(struct phy_device *));
  int phy_register_fixup_for_id(const char *bus_id,
 -			      int (*run)(struct phy_device *));
 +		int (*run)(struct phy_device *));
  int phy_register_fixup_for_uid(u32 phy_uid, u32 phy_uid_mask,
++<<<<<<< HEAD
 +		int (*run)(struct phy_device *));
 +int phy_scan_fixups(struct phy_device *phydev);
++=======
+ 			       int (*run)(struct phy_device *));
++>>>>>>> fbfcec635dba (phylib: make phy_scan_fixups() static)
  
  int phy_init_eee(struct phy_device *phydev, bool clk_stop_enable);
  int phy_get_eee_err(struct phy_device *phydev);
diff --git a/drivers/net/phy/phy_device.c b/drivers/net/phy/phy_device.c
index f7ef63500175..912ea0b1284e 100644
--- a/drivers/net/phy/phy_device.c
+++ b/drivers/net/phy/phy_device.c
@@ -122,7 +122,7 @@ static int phy_needs_fixup(struct phy_device *phydev, struct phy_fixup *fixup)
 }
 
 /* Runs any matching fixups for this phydev */
-int phy_scan_fixups(struct phy_device *phydev)
+static int phy_scan_fixups(struct phy_device *phydev)
 {
 	struct phy_fixup *fixup;
 
@@ -141,7 +141,6 @@ int phy_scan_fixups(struct phy_device *phydev)
 
 	return 0;
 }
-EXPORT_SYMBOL(phy_scan_fixups);
 
 struct phy_device *phy_device_create(struct mii_bus *bus, int addr, int phy_id,
 				     bool is_c45,
* Unmerged path include/linux/phy.h
