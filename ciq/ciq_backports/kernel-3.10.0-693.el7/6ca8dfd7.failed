tty: vt, convert more macros to functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Slaby <jslaby@suse.cz>
commit 6ca8dfd78187d8238abc5b2996848a0c8f07948d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/6ca8dfd7.failed

Namely convert:
* IS_FG -> con_is_fg
* DO_UPDATE -> con_should_update
* CON_IS_VISIBLE -> con_is_visible

DO_UPDATE was a weird name for a yes/no answer, so the new name is
con_should_update.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
	Cc: Thomas Winischhofer <thomas@winischhofer.net>
	Cc: Jean-Christophe Plagniol-Villard <plagnioj@jcrosoft.com>
	Cc: linux-usb@vger.kernel.org
	Cc: linux-fbdev@vger.kernel.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 6ca8dfd78187d8238abc5b2996848a0c8f07948d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/vt/vt.c
diff --cc drivers/tty/vt/vt.c
index 00d1dc4a0c6f,26de5c0fc056..000000000000
--- a/drivers/tty/vt/vt.c
+++ b/drivers/tty/vt/vt.c
@@@ -271,13 -277,15 +271,25 @@@ static void notify_update(struct vc_dat
   *	Low-Level Functions
   */
  
++<<<<<<< HEAD
 +#define IS_FG(vc)	((vc)->vc_num == fg_console)
 +
 +#ifdef VT_BUF_VRAM_ONLY
 +#define DO_UPDATE(vc)	0
 +#else
 +#define DO_UPDATE(vc)	(CON_IS_VISIBLE(vc) && !console_blanked)
 +#endif
++=======
+ static inline bool con_is_fg(const struct vc_data *vc)
+ {
+ 	return vc->vc_num == fg_console;
+ }
+ 
+ static inline bool con_should_update(const struct vc_data *vc)
+ {
+ 	return con_is_visible(vc) && !console_blanked;
+ }
++>>>>>>> 6ca8dfd78187 (tty: vt, convert more macros to functions)
  
  static inline unsigned short *screenpos(struct vc_data *vc, int offset, int viewed)
  {
@@@ -495,9 -496,10 +507,14 @@@ void invert_screen(struct vc_data *vc, 
  			}
  		}
  	}
++<<<<<<< HEAD
 +#endif
 +	if (DO_UPDATE(vc))
++=======
+ 
+ 	if (con_should_update(vc))
++>>>>>>> 6ca8dfd78187 (tty: vt, convert more macros to functions)
  		do_update_region(vc, (unsigned long) p, count);
 -	notify_update(vc);
  }
  
  /* used by selection: complement pointer position */
@@@ -512,8 -514,9 +529,8 @@@ void complement_pos(struct vc_data *vc
  	if (old_offset != -1 && old_offset >= 0 &&
  	    old_offset < vc->vc_screenbuf_size) {
  		scr_writew(old, screenpos(vc, old_offset, 1));
- 		if (DO_UPDATE(vc))
+ 		if (con_should_update(vc))
  			vc->vc_sw->con_putc(vc, old, oldy, oldx);
 -		notify_update(vc);
  	}
  
  	old_offset = offset;
@@@ -1164,6 -1177,8 +1180,11 @@@ static void csi_J(struct vc_data *vc, i
  			scr_memsetw(vc->vc_screenbuf, vc->vc_video_erase_char,
  				    vc->vc_screenbuf_size >> 1);
  			set_origin(vc);
++<<<<<<< HEAD
++=======
+ 			if (con_is_visible(vc))
+ 				update_screen(vc);
++>>>>>>> 6ca8dfd78187 (tty: vt, convert more macros to functions)
  			/* fall through */
  		case 2: /* erase whole display */
  			count = vc->vc_cols * vc->vc_rows;
* Unmerged path drivers/tty/vt/vt.c
diff --git a/drivers/usb/misc/sisusbvga/sisusb_con.c b/drivers/usb/misc/sisusbvga/sisusb_con.c
index 4112835f4aed..b7f606e5ea8a 100644
--- a/drivers/usb/misc/sisusbvga/sisusb_con.c
+++ b/drivers/usb/misc/sisusbvga/sisusb_con.c
@@ -603,7 +603,7 @@ sisusbcon_set_palette(struct vc_data *c, const unsigned char *table)
 
 	/* Return value not used by vt */
 
-	if (!CON_IS_VISIBLE(c))
+	if (!con_is_visible(c))
 		return;
 
 	sisusb = sisusb_get_sisusb_lock_and_check(c->vc_num);
@@ -1259,7 +1259,7 @@ sisusbcon_do_font_op(struct sisusb_usb_data *sisusb, int set, int slot,
 			struct vc_data *vc = vc_cons[i].d;
 
 			if (vc && vc->vc_sw == &sisusb_con) {
-				if (CON_IS_VISIBLE(vc)) {
+				if (con_is_visible(vc)) {
 					vc->vc_sw->con_cursor(vc, CM_DRAW);
 				}
 				vc->vc_font.height = fh;
diff --git a/drivers/video/console/fbcon.c b/drivers/video/console/fbcon.c
index 42e659fb079e..8c04e1bfbfbb 100644
--- a/drivers/video/console/fbcon.c
+++ b/drivers/video/console/fbcon.c
@@ -383,7 +383,7 @@ static void fb_flashcursor(struct work_struct *work)
 	if (ops && ops->currcon != -1)
 		vc = vc_cons[ops->currcon].d;
 
-	if (!vc || !CON_IS_VISIBLE(vc) ||
+	if (!vc || !con_is_visible(vc) ||
  	    registered_fb[con2fb_map[vc->vc_num]] != info ||
 	    vc->vc_deccm != 1) {
 		console_unlock();
@@ -650,7 +650,7 @@ static void fbcon_prepare_logo(struct vc_data *vc, struct fb_info *info,
 		    erase,
 		    vc->vc_size_row * logo_lines);
 
-	if (CON_IS_VISIBLE(vc) && vc->vc_mode == KD_TEXT) {
+	if (con_is_visible(vc) && vc->vc_mode == KD_TEXT) {
 		fbcon_clear_margins(vc, 0);
 		update_screen(vc);
 	}
@@ -1140,7 +1140,7 @@ static void fbcon_init(struct vc_data *vc, int init)
 	 *
 	 * We need to do it in fbcon_init() to prevent screen corruption.
 	 */
-	if (CON_IS_VISIBLE(vc) && vc->vc_mode == KD_TEXT) {
+	if (con_is_visible(vc) && vc->vc_mode == KD_TEXT) {
 		if (info->fbops->fb_set_par &&
 		    !(ops->flags & FBCON_FLAGS_INIT)) {
 			ret = info->fbops->fb_set_par(info);
@@ -1220,7 +1220,7 @@ static void fbcon_deinit(struct vc_data *vc)
 	if (!ops)
 		goto finished;
 
-	if (CON_IS_VISIBLE(vc))
+	if (con_is_visible(vc))
 		fbcon_del_cursor_timer(info);
 
 	ops->flags &= ~FBCON_FLAGS_INIT;
@@ -1424,7 +1424,7 @@ static void fbcon_set_disp(struct fb_info *info, struct fb_var_screeninfo *var,
 	rows /= vc->vc_font.height;
 	vc_resize(vc, cols, rows);
 
-	if (CON_IS_VISIBLE(vc)) {
+	if (con_is_visible(vc)) {
 		update_screen(vc);
 		if (softback_buf)
 			fbcon_update_softback(vc);
@@ -2172,7 +2172,7 @@ static int fbcon_resize(struct vc_data *vc, unsigned int width,
 			return -EINVAL;
 
 		DPRINTK("resize now %ix%i\n", var.xres, var.yres);
-		if (CON_IS_VISIBLE(vc)) {
+		if (con_is_visible(vc)) {
 			var.activate = FB_ACTIVATE_NOW |
 				FB_ACTIVATE_FORCE;
 			fb_set_var(info, &var);
@@ -2475,7 +2475,7 @@ static int fbcon_do_set_font(struct vc_data *vc, int w, int h,
 	int cnt;
 	char *old_data = NULL;
 
-	if (CON_IS_VISIBLE(vc) && softback_lines)
+	if (con_is_visible(vc) && softback_lines)
 		fbcon_set_origin(vc);
 
 	resize = (w != vc->vc_font.width) || (h != vc->vc_font.height);
@@ -2556,9 +2556,9 @@ static int fbcon_do_set_font(struct vc_data *vc, int w, int h,
 		cols /= w;
 		rows /= h;
 		vc_resize(vc, cols, rows);
-		if (CON_IS_VISIBLE(vc) && softback_buf)
+		if (con_is_visible(vc) && softback_buf)
 			fbcon_update_softback(vc);
-	} else if (CON_IS_VISIBLE(vc)
+	} else if (con_is_visible(vc)
 		   && vc->vc_mode == KD_TEXT) {
 		fbcon_clear_margins(vc, 0);
 		update_screen(vc);
@@ -2687,7 +2687,7 @@ static void fbcon_set_palette(struct vc_data *vc, const unsigned char *table)
 	if (fbcon_is_inactive(vc, info))
 		return;
 
-	if (!CON_IS_VISIBLE(vc))
+	if (!con_is_visible(vc))
 		return;
 
 	depth = fb_get_color_depth(&info->var, &info->fix);
@@ -2929,7 +2929,7 @@ static void fbcon_modechanged(struct fb_info *info)
 	p = &fb_display[vc->vc_num];
 	set_blitting_type(vc, info);
 
-	if (CON_IS_VISIBLE(vc)) {
+	if (con_is_visible(vc)) {
 		var_to_display(p, &info->var, info);
 		cols = FBCON_SWAP(ops->rotate, info->var.xres, info->var.yres);
 		rows = FBCON_SWAP(ops->rotate, info->var.yres, info->var.xres);
@@ -2968,7 +2968,7 @@ static void fbcon_set_all_vcs(struct fb_info *info)
 		    registered_fb[con2fb_map[i]] != info)
 			continue;
 
-		if (CON_IS_VISIBLE(vc)) {
+		if (con_is_visible(vc)) {
 			fg = i;
 			continue;
 		}
@@ -3184,7 +3184,7 @@ static void fbcon_fb_blanked(struct fb_info *info, int blank)
 			registered_fb[con2fb_map[ops->currcon]] != info)
 		return;
 
-	if (CON_IS_VISIBLE(vc)) {
+	if (con_is_visible(vc)) {
 		if (blank)
 			do_blank_screen(0);
 		else
diff --git a/drivers/video/console/vgacon.c b/drivers/video/console/vgacon.c
index ffcd70541d4c..afde3b9a430a 100644
--- a/drivers/video/console/vgacon.c
+++ b/drivers/video/console/vgacon.c
@@ -587,7 +587,7 @@ static void vgacon_init(struct vc_data *c, int init)
 static void vgacon_deinit(struct vc_data *c)
 {
 	/* When closing the active console, reset video origin */
-	if (CON_IS_VISIBLE(c)) {
+	if (con_is_visible(c)) {
 		c->vc_visible_origin = vga_vram_base;
 		vga_set_mem_top(c);
 	}
@@ -858,7 +858,7 @@ static void vgacon_set_palette(struct vc_data *vc, const unsigned char *table)
 {
 #ifdef CAN_LOAD_PALETTE
 	if (vga_video_type != VIDEO_TYPE_VGAC || vga_palette_blanked
-	    || !CON_IS_VISIBLE(vc))
+	    || !con_is_visible(vc))
 		return;
 	vga_set_palette(vc, table);
 #endif
@@ -1238,7 +1238,7 @@ static int vgacon_adjust_height(struct vc_data *vc, unsigned fontheight)
 		struct vc_data *c = vc_cons[i].d;
 
 		if (c && c->vc_sw == &vga_con) {
-			if (CON_IS_VISIBLE(c)) {
+			if (con_is_visible(c)) {
 			        /* void size to cause regs to be rewritten */
 				cursor_size_lastfrom = 0;
 				cursor_size_lastto = 0;
@@ -1302,7 +1302,7 @@ static int vgacon_resize(struct vc_data *c, unsigned int width,
 		   return success */
 		return (user) ? 0 : -EINVAL;
 
-	if (CON_IS_VISIBLE(c) && !vga_is_gfx) /* who knows */
+	if (con_is_visible(c) && !vga_is_gfx) /* who knows */
 		vgacon_doresize(c, width, height);
 	return 0;
 }
diff --git a/include/linux/console_struct.h b/include/linux/console_struct.h
index 7f0c32908568..c997f8f2ac43 100644
--- a/include/linux/console_struct.h
+++ b/include/linux/console_struct.h
@@ -134,6 +134,9 @@ extern void vc_SAK(struct work_struct *work);
 
 #define CUR_DEFAULT CUR_UNDERLINE
 
-#define CON_IS_VISIBLE(conp) (*conp->vc_display_fg == conp)
+static inline bool con_is_visible(const struct vc_data *vc)
+{
+	return *vc->vc_display_fg == vc;
+}
 
 #endif /* _LINUX_CONSOLE_STRUCT_H */
