net: ethtool: export conversion function between u32 and link mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] ethtool: export conversion function between u32 and link mode (Ivan Vecera) [1382040]
Rebuild_FUZZ: 96.06%
commit-author Philippe Reynes <tremyfr@gmail.com>
commit 6d62b4d5fac620ee0ca65dc6d99b0306d96bc541
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/6d62b4d5.failed

The function convert_legacy_u32_to_link_mode and
convert_link_mode_to_legacy_u32 may be used outside
of ethtool.c. We rename them to ethtool_convert_...
and export them, so we could use them in others
drivers and modules.

	Signed-off-by: Philippe Reynes <tremyfr@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6d62b4d5fac620ee0ca65dc6d99b0306d96bc541)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/ethtool.h
diff --cc include/linux/ethtool.h
index 5f97f19321d4,9ded8c6d8176..000000000000
--- a/include/linux/ethtool.h
+++ b/include/linux/ethtool.h
@@@ -151,9 -150,12 +151,18 @@@ extern in
  __ethtool_get_link_ksettings(struct net_device *dev,
  			     struct ethtool_link_ksettings *link_ksettings);
  
++<<<<<<< HEAD
 +/* DEPRECATED, use __ethtool_get_link_ksettings */
 +extern int __ethtool_get_settings(struct net_device *dev,
 +				  struct ethtool_cmd *cmd);
++=======
+ void ethtool_convert_legacy_u32_to_link_mode(unsigned long *dst,
+ 					     u32 legacy_u32);
+ 
+ /* return false if src had higher bits set. lower bits always updated. */
+ bool ethtool_convert_link_mode_to_legacy_u32(u32 *legacy_u32,
+ 				     const unsigned long *src);
++>>>>>>> 6d62b4d5fac6 (net: ethtool: export conversion function between u32 and link mode)
  
  /**
   * struct ethtool_ops - optional netdev operations
* Unmerged path include/linux/ethtool.h
diff --git a/net/core/ethtool.c b/net/core/ethtool.c
index 939c077f6470..b583a72af36f 100644
--- a/net/core/ethtool.c
+++ b/net/core/ethtool.c
@@ -355,15 +355,17 @@ static int __ethtool_set_flags(struct net_device *dev, u32 data)
 	return 0;
 }
 
-static void convert_legacy_u32_to_link_mode(unsigned long *dst, u32 legacy_u32)
+void ethtool_convert_legacy_u32_to_link_mode(unsigned long *dst,
+					     u32 legacy_u32)
 {
 	bitmap_zero(dst, __ETHTOOL_LINK_MODE_MASK_NBITS);
 	dst[0] = legacy_u32;
 }
+EXPORT_SYMBOL(ethtool_convert_legacy_u32_to_link_mode);
 
 /* return false if src had higher bits set. lower bits always updated. */
-static bool convert_link_mode_to_legacy_u32(u32 *legacy_u32,
-					    const unsigned long *src)
+bool ethtool_convert_link_mode_to_legacy_u32(u32 *legacy_u32,
+					     const unsigned long *src)
 {
 	bool retval = true;
 
@@ -383,6 +385,7 @@ static bool convert_link_mode_to_legacy_u32(u32 *legacy_u32,
 	*legacy_u32 = src[0];
 	return retval;
 }
+EXPORT_SYMBOL(ethtool_convert_link_mode_to_legacy_u32);
 
 /* return false if legacy contained non-0 deprecated fields
  * transceiver/maxtxpkt/maxrxpkt. rest of ksettings always updated
@@ -405,13 +408,13 @@ convert_legacy_settings_to_link_ksettings(
 	    legacy_settings->maxrxpkt)
 		retval = false;
 
-	convert_legacy_u32_to_link_mode(
+	ethtool_convert_legacy_u32_to_link_mode(
 		link_ksettings->link_modes.supported,
 		legacy_settings->supported);
-	convert_legacy_u32_to_link_mode(
+	ethtool_convert_legacy_u32_to_link_mode(
 		link_ksettings->link_modes.advertising,
 		legacy_settings->advertising);
-	convert_legacy_u32_to_link_mode(
+	ethtool_convert_legacy_u32_to_link_mode(
 		link_ksettings->link_modes.lp_advertising,
 		legacy_settings->lp_advertising);
 	link_ksettings->base.speed
@@ -450,13 +453,13 @@ convert_link_ksettings_to_legacy_settings(
 	 * __u32	maxrxpkt;
 	 */
 
-	retval &= convert_link_mode_to_legacy_u32(
+	retval &= ethtool_convert_link_mode_to_legacy_u32(
 		&legacy_settings->supported,
 		link_ksettings->link_modes.supported);
-	retval &= convert_link_mode_to_legacy_u32(
+	retval &= ethtool_convert_link_mode_to_legacy_u32(
 		&legacy_settings->advertising,
 		link_ksettings->link_modes.advertising);
-	retval &= convert_link_mode_to_legacy_u32(
+	retval &= ethtool_convert_link_mode_to_legacy_u32(
 		&legacy_settings->lp_advertising,
 		link_ksettings->link_modes.lp_advertising);
 	ethtool_cmd_speed_set(legacy_settings, link_ksettings->base.speed);
