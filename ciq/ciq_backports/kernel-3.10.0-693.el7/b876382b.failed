amd-xgbe: Move Rx mode configuration into init

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Lendacky, Thomas <Thomas.Lendacky@amd.com>
commit b876382bac0fe2ed1129247c47029799bb4d763a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b876382b.failed

Currently a call to configure the Rx mode (promiscuous mode, all
multicast mode, etc.) is made in xgbe_start separate from the xgbe_init
function. This call to set the Rx mode should be part of the xgbe_init
function so that calls to the init function don't have to be preceded
with calls to configure the Rx mode.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b876382bac0fe2ed1129247c47029799bb4d763a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-dev.c
#	drivers/net/ethernet/amd/xgbe/xgbe-drv.c
#	drivers/net/ethernet/amd/xgbe/xgbe.h
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-dev.c
index ec5481f846ee,21d9497518fd..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-dev.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-dev.c
@@@ -2182,10 -2844,8 +2199,14 @@@ void xgbe_init_function_ptrs_dev(struc
  
  	hw_if->tx_complete = xgbe_tx_complete;
  
++<<<<<<< HEAD
 +	hw_if->set_promiscuous_mode = xgbe_set_promiscuous_mode;
 +	hw_if->set_all_multicast_mode = xgbe_set_all_multicast_mode;
 +	hw_if->set_addn_mac_addrs = xgbe_set_addn_mac_addrs;
++=======
++>>>>>>> b876382bac0f (amd-xgbe: Move Rx mode configuration into init)
  	hw_if->set_mac_address = xgbe_set_mac_address;
+ 	hw_if->config_rx_mode = xgbe_config_rx_mode;
  
  	hw_if->enable_rx_csum = xgbe_enable_rx_csum;
  	hw_if->disable_rx_csum = xgbe_disable_rx_csum;
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-drv.c
index d58e85811bc9,e10abc7db447..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
@@@ -124,9 -127,97 +124,14 @@@
  #include "xgbe.h"
  #include "xgbe-common.h"
  
++<<<<<<< HEAD
 +
 +static int xgbe_poll(struct napi_struct *, int);
 +static void xgbe_set_rx_mode(struct net_device *);
++=======
+ static int xgbe_one_poll(struct napi_struct *, int);
+ static int xgbe_all_poll(struct napi_struct *, int);
 -
 -static int xgbe_alloc_channels(struct xgbe_prv_data *pdata)
 -{
 -	struct xgbe_channel *channel_mem, *channel;
 -	struct xgbe_ring *tx_ring, *rx_ring;
 -	unsigned int count, i;
 -	int ret = -ENOMEM;
 -
 -	count = max_t(unsigned int, pdata->tx_ring_count, pdata->rx_ring_count);
 -
 -	channel_mem = kcalloc(count, sizeof(struct xgbe_channel), GFP_KERNEL);
 -	if (!channel_mem)
 -		goto err_channel;
 -
 -	tx_ring = kcalloc(pdata->tx_ring_count, sizeof(struct xgbe_ring),
 -			  GFP_KERNEL);
 -	if (!tx_ring)
 -		goto err_tx_ring;
 -
 -	rx_ring = kcalloc(pdata->rx_ring_count, sizeof(struct xgbe_ring),
 -			  GFP_KERNEL);
 -	if (!rx_ring)
 -		goto err_rx_ring;
 -
 -	for (i = 0, channel = channel_mem; i < count; i++, channel++) {
 -		snprintf(channel->name, sizeof(channel->name), "channel-%d", i);
 -		channel->pdata = pdata;
 -		channel->queue_index = i;
 -		channel->dma_regs = pdata->xgmac_regs + DMA_CH_BASE +
 -				    (DMA_CH_INC * i);
 -
 -		if (pdata->per_channel_irq) {
 -			/* Get the DMA interrupt (offset 1) */
 -			ret = platform_get_irq(pdata->pdev, i + 1);
 -			if (ret < 0) {
 -				netdev_err(pdata->netdev,
 -					   "platform_get_irq %u failed\n",
 -					   i + 1);
 -				goto err_irq;
 -			}
 -
 -			channel->dma_irq = ret;
 -		}
 -
 -		if (i < pdata->tx_ring_count) {
 -			spin_lock_init(&tx_ring->lock);
 -			channel->tx_ring = tx_ring++;
 -		}
 -
 -		if (i < pdata->rx_ring_count) {
 -			spin_lock_init(&rx_ring->lock);
 -			channel->rx_ring = rx_ring++;
 -		}
 -
 -		DBGPR("  %s: queue=%u, dma_regs=%p, dma_irq=%d, tx=%p, rx=%p\n",
 -		      channel->name, channel->queue_index, channel->dma_regs,
 -		      channel->dma_irq, channel->tx_ring, channel->rx_ring);
 -	}
 -
 -	pdata->channel = channel_mem;
 -	pdata->channel_count = count;
 -
 -	return 0;
 -
 -err_irq:
 -	kfree(rx_ring);
 -
 -err_rx_ring:
 -	kfree(tx_ring);
 -
 -err_tx_ring:
 -	kfree(channel_mem);
 -
 -err_channel:
 -	return ret;
 -}
 -
 -static void xgbe_free_channels(struct xgbe_prv_data *pdata)
 -{
 -	if (!pdata->channel)
 -		return;
 -
 -	kfree(pdata->channel->rx_ring);
 -	kfree(pdata->channel->tx_ring);
 -	kfree(pdata->channel);
 -
 -	pdata->channel = NULL;
 -	pdata->channel_count = 0;
 -}
++>>>>>>> b876382bac0f (amd-xgbe: Move Rx mode configuration into init)
  
  static inline unsigned int xgbe_tx_avail_desc(struct xgbe_ring *ring)
  {
@@@ -920,22 -1533,7 +923,25 @@@ static void xgbe_set_rx_mode(struct net
  
  	DBGPR("-->xgbe_set_rx_mode\n");
  
++<<<<<<< HEAD
 +	pr_mode = ((netdev->flags & IFF_PROMISC) != 0);
 +	am_mode = ((netdev->flags & IFF_ALLMULTI) != 0);
 +
 +	if (netdev_uc_count(netdev) > pdata->hw_feat.addn_mac)
 +		pr_mode = 1;
 +	if (netdev_mc_count(netdev) > pdata->hw_feat.addn_mac)
 +		am_mode = 1;
 +	if ((netdev_uc_count(netdev) + netdev_mc_count(netdev)) >
 +	     pdata->hw_feat.addn_mac)
 +		pr_mode = 1;
 +
 +	hw_if->set_promiscuous_mode(pdata, pr_mode);
 +	hw_if->set_all_multicast_mode(pdata, am_mode);
 +	if (!pr_mode)
 +		hw_if->set_addn_mac_addrs(pdata, am_mode);
++=======
+ 	hw_if->config_rx_mode(pdata);
++>>>>>>> b876382bac0f (amd-xgbe: Move Rx mode configuration into init)
  
  	DBGPR("<--xgbe_set_rx_mode\n");
  }
diff --cc drivers/net/ethernet/amd/xgbe/xgbe.h
index 1903f878545a,e62dfa2deab6..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe.h
+++ b/drivers/net/ethernet/amd/xgbe/xgbe.h
@@@ -388,10 -495,8 +388,14 @@@ struct xgbe_mmc_stats 
  struct xgbe_hw_if {
  	int (*tx_complete)(struct xgbe_ring_desc *);
  
++<<<<<<< HEAD
 +	int (*set_promiscuous_mode)(struct xgbe_prv_data *, unsigned int);
 +	int (*set_all_multicast_mode)(struct xgbe_prv_data *, unsigned int);
 +	int (*set_addn_mac_addrs)(struct xgbe_prv_data *, unsigned int);
++=======
++>>>>>>> b876382bac0f (amd-xgbe: Move Rx mode configuration into init)
  	int (*set_mac_address)(struct xgbe_prv_data *, u8 *addr);
+ 	int (*config_rx_mode)(struct xgbe_prv_data *);
  
  	int (*enable_rx_csum)(struct xgbe_prv_data *);
  	int (*disable_rx_csum)(struct xgbe_prv_data *);
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-dev.c
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-drv.c
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe.h
