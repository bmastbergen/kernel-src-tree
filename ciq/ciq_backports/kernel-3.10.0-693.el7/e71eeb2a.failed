ACPI / button: Do not propagate wakeup-from-suspend events

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [acpi] button: Do not propagate wakeup-from-suspend events (Lenny Szubowicz) [1246944]
Rebuild_FUZZ: 93.58%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit e71eeb2a6bcc6282b95215eb353a3ac9ce3e0de3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e71eeb2a.failed

During system suspend mark ACPI buttons (other than the lid) as
"suspended" and if in that state, report wakeup events on button
events, but do not propagate those events up the stack.

This prevents systems from being turned off after a button-triggered
wakeup from the "freeze" sleep state.

Link: https://bugzilla.kernel.org/show_bug.cgi?id=77611
Tested-on: Acer Aspire S5, Toshiba Portege R500
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit e71eeb2a6bcc6282b95215eb353a3ac9ce3e0de3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/button.c
diff --cc drivers/acpi/button.c
index 2893d95c2b80,6d5d1832a588..000000000000
--- a/drivers/acpi/button.c
+++ b/drivers/acpi/button.c
@@@ -103,7 -104,7 +105,11 @@@ struct acpi_button 
  	struct input_dev *input;
  	char phys[32];			/* for input device */
  	unsigned long pushed;
++<<<<<<< HEAD
 +	bool wakeup_enabled;
++=======
+ 	bool suspended;
++>>>>>>> e71eeb2a6bcc (ACPI / button: Do not propagate wakeup-from-suspend events)
  };
  
  static BLOCKING_NOTIFIER_HEAD(acpi_lid_notifier);
@@@ -303,10 -309,11 +314,17 @@@ static void acpi_button_notify(struct a
  			input_report_key(input, keycode, 0);
  			input_sync(input);
  
++<<<<<<< HEAD
 +			pm_wakeup_event(&device->dev, 0);
++=======
+ 			acpi_bus_generate_netlink_event(
+ 					device->pnp.device_class,
+ 					dev_name(&device->dev),
+ 					event, ++button->pushed);
++>>>>>>> e71eeb2a6bcc (ACPI / button: Do not propagate wakeup-from-suspend events)
  		}
 +
 +		acpi_bus_generate_proc_event(device, event, ++button->pushed);
  		break;
  	default:
  		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
* Unmerged path drivers/acpi/button.c
