xfs: fix warning in xfs_finish_page_writeback for non-debug builds

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 690a7871225b7f91f8fe13c465a79e183a61cfe3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/690a7871.failed

blockmask is unused if ASSERTs are disabled.

	Reported-by: kbuild test robot <fengguang.wu@intel.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>

(cherry picked from commit 690a7871225b7f91f8fe13c465a79e183a61cfe3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_aops.c
diff --cc fs/xfs/xfs_aops.c
index acf6c4a54883,736461a861b1..000000000000
--- a/fs/xfs/xfs_aops.c
+++ b/fs/xfs/xfs_aops.c
@@@ -70,10 -84,42 +70,49 @@@ xfs_find_bdev_for_inode
  }
  
  /*
++<<<<<<< HEAD
 + * We're now finished for good with this ioend structure.
 + * Update the page state via the associated buffer_heads,
 + * release holds on the inode and bio, and finally free
 + * up memory.  Do not use the ioend after this.
++=======
+  * We're now finished for good with this page.  Update the page state via the
+  * associated buffer_heads, paying attention to the start and end offsets that
+  * we need to process on the page.
+  */
+ static void
+ xfs_finish_page_writeback(
+ 	struct inode		*inode,
+ 	struct bio_vec		*bvec,
+ 	int			error)
+ {
+ 	unsigned int		end = bvec->bv_offset + bvec->bv_len - 1;
+ 	struct buffer_head	*head, *bh;
+ 	unsigned int		off = 0;
+ 
+ 	ASSERT(bvec->bv_offset < PAGE_SIZE);
+ 	ASSERT((bvec->bv_offset & ((1 << inode->i_blkbits) - 1)) == 0);
+ 	ASSERT(end < PAGE_SIZE);
+ 	ASSERT((bvec->bv_len & ((1 << inode->i_blkbits) - 1)) == 0);
+ 
+ 	bh = head = page_buffers(bvec->bv_page);
+ 
+ 	do {
+ 		if (off < bvec->bv_offset)
+ 			goto next_bh;
+ 		if (off > end)
+ 			break;
+ 		bh->b_end_io(bh, !error);
+ next_bh:
+ 		off += bh->b_size;
+ 	} while ((bh = bh->b_this_page) != head);
+ }
+ 
+ /*
+  * We're now finished for good with this ioend structure.  Update the page
+  * state, release holds on bios, and finally free up memory.  Do not use the
+  * ioend after this.
++>>>>>>> 690a7871225b (xfs: fix warning in xfs_finish_page_writeback for non-debug builds)
   */
  STATIC void
  xfs_destroy_ioend(
* Unmerged path fs/xfs/xfs_aops.c
