alx: enable multiple tx queues

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Tobias Regnery <tobias.regnery@gmail.com>
commit d768319cd4277ef1cfa1e04792adb0aeea40cca6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d768319c.failed

Enable multiple tx queues by default based on the number of online cpus. The
hardware supports up to four tx queues.

Based on the downstream driver at github.com/qca/alx

	Signed-off-by: Tobias Regnery <tobias.regnery@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d768319cd4277ef1cfa1e04792adb0aeea40cca6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/atheros/alx/main.c
diff --cc drivers/net/ethernet/atheros/alx/main.c
index b165b9e58ad3,c8f525574d68..000000000000
--- a/drivers/net/ethernet/atheros/alx/main.c
+++ b/drivers/net/ethernet/atheros/alx/main.c
@@@ -712,7 -832,11 +712,15 @@@ static void alx_config_vector_mapping(s
  
  static bool alx_enable_msix(struct alx_priv *alx)
  {
++<<<<<<< HEAD
 +	int i, err, num_vec = 2;
++=======
+ 	int i, err, num_vec, num_txq, num_rxq;
+ 
+ 	num_txq = min_t(int, num_online_cpus(), ALX_MAX_TX_QUEUES);
+ 	num_rxq = 1;
+ 	num_vec = max_t(int, num_txq, num_rxq) + 1;
++>>>>>>> d768319cd427 (alx: enable multiple tx queues)
  
  	alx->msix_entries = kcalloc(num_vec, sizeof(struct msix_entry),
  				    GFP_KERNEL);
* Unmerged path drivers/net/ethernet/atheros/alx/main.c
