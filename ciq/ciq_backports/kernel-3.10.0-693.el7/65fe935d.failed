x86/KASLR, x86/power: Remove x86 hibernation restrictions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Kees Cook <keescook@chromium.org>
commit 65fe935dd2387a4faf15314c73f5e6d31ef0217e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/65fe935d.failed

With the following fix:

  70595b479ce1 ("x86/power/64: Fix crash whan the hibernation code passes control to the image kernel")

... there is no longer a problem with hibernation resuming a
KASLR-booted kernel image, so remove the restriction.

	Signed-off-by: Kees Cook <keescook@chromium.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Len Brown <len.brown@intel.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Linux PM list <linux-pm@vger.kernel.org>
	Cc: Logan Gunthorpe <logang@deltatee.com>
	Cc: Pavel Machek <pavel@ucw.cz>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephen Smalley <sds@tycho.nsa.gov>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Yinghai Lu <yinghai@kernel.org>
	Cc: linux-doc@vger.kernel.org
Link: http://lkml.kernel.org/r/20160613221002.GA29719@www.outflux.net
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 65fe935dd2387a4faf15314c73f5e6d31ef0217e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/kernel-parameters.txt
#	arch/x86/boot/compressed/kaslr.c
#	kernel/power/hibernate.c
diff --cc Documentation/kernel-parameters.txt
index ef522ccf479f,fa8c6d470ad2..000000000000
--- a/Documentation/kernel-parameters.txt
+++ b/Documentation/kernel-parameters.txt
@@@ -1397,6 -1796,18 +1397,14 @@@ bytes respectively. Such letter suffixe
  	js=		[HW,JOY] Analog joystick
  			See Documentation/input/joystick.txt.
  
++<<<<<<< HEAD
++=======
+ 	nokaslr		[KNL]
+ 			When CONFIG_RANDOMIZE_BASE is set, this disables
+ 			kernel and module base offset ASLR (Address Space
+ 			Layout Randomization).
+ 
++>>>>>>> 65fe935dd238 (x86/KASLR, x86/power: Remove x86 hibernation restrictions)
  	keepinitrd	[HW,ARM]
  
  	kernelcore=	[KNL,X86,IA-64,PPC]
diff --cc kernel/power/hibernate.c
index 2c7dfcb630a4,9021387c6ff4..000000000000
--- a/kernel/power/hibernate.c
+++ b/kernel/power/hibernate.c
@@@ -1118,7 -1140,33 +1118,37 @@@ static int __init resumewait_setup(cha
  
  static int __init resumedelay_setup(char *str)
  {
++<<<<<<< HEAD
 +	resume_delay = simple_strtoul(str, NULL, 0);
++=======
+ 	int rc = kstrtouint(str, 0, &resume_delay);
+ 
+ 	if (rc)
+ 		return rc;
+ 	return 1;
+ }
+ 
+ static int __init nohibernate_setup(char *str)
+ {
+ 	noresume = 1;
+ 	nohibernate = 1;
+ 	return 1;
+ }
+ 
+ static int __init page_poison_nohibernate_setup(char *str)
+ {
+ #ifdef CONFIG_PAGE_POISONING_ZERO
+ 	/*
+ 	 * The zeroing option for page poison skips the checks on alloc.
+ 	 * since hibernation doesn't save free pages there's no way to
+ 	 * guarantee the pages will still be zeroed.
+ 	 */
+ 	if (!strcmp(str, "on")) {
+ 		pr_info("Disabling hibernation due to page poisoning\n");
+ 		return nohibernate_setup(str);
+ 	}
+ #endif
++>>>>>>> 65fe935dd238 (x86/KASLR, x86/power: Remove x86 hibernation restrictions)
  	return 1;
  }
  
@@@ -1128,3 -1176,5 +1158,8 @@@ __setup("resume=", resume_setup)
  __setup("hibernate=", hibernate_setup);
  __setup("resumewait", resumewait_setup);
  __setup("resumedelay=", resumedelay_setup);
++<<<<<<< HEAD
++=======
+ __setup("nohibernate", nohibernate_setup);
+ __setup("page_poison=", page_poison_nohibernate_setup);
++>>>>>>> 65fe935dd238 (x86/KASLR, x86/power: Remove x86 hibernation restrictions)
* Unmerged path arch/x86/boot/compressed/kaslr.c
* Unmerged path Documentation/kernel-parameters.txt
* Unmerged path arch/x86/boot/compressed/kaslr.c
* Unmerged path kernel/power/hibernate.c
