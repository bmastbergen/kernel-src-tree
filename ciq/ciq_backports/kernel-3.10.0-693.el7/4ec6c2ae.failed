fix unpaired rcu lock in prepend_path()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Li Zhong <zhong@linux.vnet.ibm.com>
commit 4ec6c2aeab8a909418ac60b782a963cb7257207f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4ec6c2ae.failed

	Signed-off-by: Li Zhong <zhong@linux.vnet.ibm.com>
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 4ec6c2aeab8a909418ac60b782a963cb7257207f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/dcache.c
diff --cc fs/dcache.c
index 396c17a096b6,eacc853a2e3a..000000000000
--- a/fs/dcache.c
+++ b/fs/dcache.c
@@@ -2734,8 -2920,11 +2734,15 @@@ static int prepend_path(const struct pa
  	char *bptr;
  	int blen;
  
 +	br_read_lock(&vfsmount_lock);
  	rcu_read_lock();
++<<<<<<< HEAD
++=======
+ restart_mnt:
+ 	read_seqbegin_or_lock(&mount_lock, &m_seq);
+ 	seq = 0;
+ 	rcu_read_lock();
++>>>>>>> 4ec6c2aeab8a (fix unpaired rcu lock in prepend_path())
  restart:
  	bptr = *buffer;
  	blen = *buflen;
@@@ -2792,7 -2972,14 +2799,18 @@@
  		goto restart;
  	}
  	done_seqretry(&rename_lock, seq);
++<<<<<<< HEAD
 +	br_read_unlock(&vfsmount_lock);
++=======
+ 
+ 	if (!(m_seq & 1))
+ 		rcu_read_unlock();
+ 	if (need_seqretry(&mount_lock, m_seq)) {
+ 		m_seq = 1;
+ 		goto restart_mnt;
+ 	}
+ 	done_seqretry(&mount_lock, m_seq);
++>>>>>>> 4ec6c2aeab8a (fix unpaired rcu lock in prepend_path())
  
  	if (error >= 0 && bptr == *buffer) {
  		if (--blen < 0)
* Unmerged path fs/dcache.c
