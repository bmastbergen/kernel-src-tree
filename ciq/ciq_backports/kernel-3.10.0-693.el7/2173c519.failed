audit: normalize NETFILTER_PKT

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Richard Guy Briggs <rgb@redhat.com>
commit 2173c519d5e912a6e2934bb04255fcd36c1591c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2173c519.failed

Eliminate flipping in and out of message fields, dropping fields in the
process.

Sample raw message format IPv4 UDP:
type=NETFILTER_PKT msg=audit(1487874761.386:228):  mark=0xae8a2732 saddr=127.0.0.1 daddr=127.0.0.1 proto=17^]
Sample raw message format IPv6 ICMP6:
type=NETFILTER_PKT msg=audit(1487874761.381:227):  mark=0x223894b7 saddr=::1 daddr=::1 proto=58^]

Issue: https://github.com/linux-audit/audit-kernel/issues/11
Test case: https://github.com/linux-audit/audit-testsuite/issues/43

	Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
	Signed-off-by: Paul Moore <paul@paul-moore.com>
(cherry picked from commit 2173c519d5e912a6e2934bb04255fcd36c1591c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/xt_AUDIT.c
diff --cc net/netfilter/xt_AUDIT.c
index cdb7ceea1329,c502419d6306..000000000000
--- a/net/netfilter/xt_AUDIT.c
+++ b/net/netfilter/xt_AUDIT.c
@@@ -131,39 -78,24 +78,56 @@@ audit_tg(struct sk_buff *skb, const str
  	if (ab == NULL)
  		goto errout;
  
++<<<<<<< HEAD
 +	audit_log_format(ab, "action=%hhu hook=%u len=%u inif=%s outif=%s",
 +			 info->type, par->hooknum, skb->len,
 +			 par->in ? par->in->name : "?",
 +			 par->out ? par->out->name : "?");
 +
 +	if (skb->mark)
 +		audit_log_format(ab, " mark=%#x", skb->mark);
 +
 +	if (skb->dev && skb->dev->type == ARPHRD_ETHER) {
 +		audit_log_format(ab, " smac=%pM dmac=%pM macproto=0x%04x",
 +				 eth_hdr(skb)->h_source, eth_hdr(skb)->h_dest,
 +				 ntohs(eth_hdr(skb)->h_proto));
 +
 +		if (par->family == NFPROTO_BRIDGE) {
 +			switch (eth_hdr(skb)->h_proto) {
 +			case htons(ETH_P_IP):
 +				audit_ip4(ab, skb);
 +				break;
 +
 +			case htons(ETH_P_IPV6):
 +				audit_ip6(ab, skb);
 +				break;
 +			}
 +		}
 +	}
 +
 +	switch (par->family) {
 +	case NFPROTO_IPV4:
 +		audit_ip4(ab, skb);
++=======
+ 	audit_log_format(ab, "mark=%#x", skb->mark);
+ 
+ 	switch (xt_family(par)) {
+ 	case NFPROTO_BRIDGE:
+ 		switch (eth_hdr(skb)->h_proto) {
+ 		case htons(ETH_P_IP):
+ 			fam = audit_ip4(ab, skb) ? NFPROTO_IPV4 : -1;
+ 			break;
+ 		case htons(ETH_P_IPV6):
+ 			fam = audit_ip6(ab, skb) ? NFPROTO_IPV6 : -1;
+ 			break;
+ 		}
+ 		break;
+ 	case NFPROTO_IPV4:
+ 		fam = audit_ip4(ab, skb) ? NFPROTO_IPV4 : -1;
++>>>>>>> 2173c519d5e9 (audit: normalize NETFILTER_PKT)
  		break;
- 
  	case NFPROTO_IPV6:
- 		audit_ip6(ab, skb);
+ 		fam = audit_ip6(ab, skb) ? NFPROTO_IPV6 : -1;
  		break;
  	}
  
* Unmerged path net/netfilter/xt_AUDIT.c
