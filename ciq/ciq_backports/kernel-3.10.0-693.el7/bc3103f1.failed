net/sched: cls_flower: Classify packet in ip tunnels

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: cls_flower: Classify packet in ip tunnels (Jonathan Toppins) [1393375]
Rebuild_FUZZ: 96.00%
commit-author Amir Vadai <amir@vadai.me>
commit bc3103f1ed405de587fa43d8b0671e615505a700
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/bc3103f1.failed

Introduce classifying by metadata extracted by the tunnel device.
Outer header fields - source/dest ip and tunnel id, are extracted from
the metadata when classifying.

For example, the following will add a filter on the ingress Qdisc of shared
vxlan device named 'vxlan0'. To forward packets with outer src ip
11.11.0.2, dst ip 11.11.0.1 and tunnel id 11. The packets will be
forwarded to tap device 'vnet0' (after metadata is released):

$ tc filter add dev vxlan0 protocol ip parent ffff: \
    flower \
      enc_src_ip 11.11.0.2 \
      enc_dst_ip 11.11.0.1 \
      enc_key_id 11 \
      dst_ip 11.11.11.1 \
    action tunnel_key release \
    action mirred egress redirect dev vnet0

The action tunnel_key, will be introduced in the next patch in this
series.

	Signed-off-by: Amir Vadai <amir@vadai.me>
	Signed-off-by: Hadar Hen Zion <hadarh@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bc3103f1ed405de587fa43d8b0671e615505a700)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/pkt_cls.h
#	net/sched/cls_flower.c
diff --cc include/uapi/linux/pkt_cls.h
index 3abfe7f00823,f9c287c67eae..000000000000
--- a/include/uapi/linux/pkt_cls.h
+++ b/include/uapi/linux/pkt_cls.h
@@@ -407,6 -401,64 +407,67 @@@ enum 
  
  #define TCA_BPF_MAX (__TCA_BPF_MAX - 1)
  
++<<<<<<< HEAD
++=======
+ /* Flower classifier */
+ 
+ enum {
+ 	TCA_FLOWER_UNSPEC,
+ 	TCA_FLOWER_CLASSID,
+ 	TCA_FLOWER_INDEV,
+ 	TCA_FLOWER_ACT,
+ 	TCA_FLOWER_KEY_ETH_DST,		/* ETH_ALEN */
+ 	TCA_FLOWER_KEY_ETH_DST_MASK,	/* ETH_ALEN */
+ 	TCA_FLOWER_KEY_ETH_SRC,		/* ETH_ALEN */
+ 	TCA_FLOWER_KEY_ETH_SRC_MASK,	/* ETH_ALEN */
+ 	TCA_FLOWER_KEY_ETH_TYPE,	/* be16 */
+ 	TCA_FLOWER_KEY_IP_PROTO,	/* u8 */
+ 	TCA_FLOWER_KEY_IPV4_SRC,	/* be32 */
+ 	TCA_FLOWER_KEY_IPV4_SRC_MASK,	/* be32 */
+ 	TCA_FLOWER_KEY_IPV4_DST,	/* be32 */
+ 	TCA_FLOWER_KEY_IPV4_DST_MASK,	/* be32 */
+ 	TCA_FLOWER_KEY_IPV6_SRC,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_IPV6_SRC_MASK,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_IPV6_DST,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_IPV6_DST_MASK,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_TCP_SRC,		/* be16 */
+ 	TCA_FLOWER_KEY_TCP_DST,		/* be16 */
+ 	TCA_FLOWER_KEY_UDP_SRC,		/* be16 */
+ 	TCA_FLOWER_KEY_UDP_DST,		/* be16 */
+ 
+ 	TCA_FLOWER_FLAGS,
+ 	TCA_FLOWER_KEY_VLAN_ID,
+ 	TCA_FLOWER_KEY_VLAN_PRIO,
+ 	TCA_FLOWER_KEY_VLAN_ETH_TYPE,
+ 
+ 	TCA_FLOWER_KEY_ENC_KEY_ID,	/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV4_SRC,	/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV4_SRC_MASK,/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV4_DST,	/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV4_DST_MASK,/* be32 */
+ 	TCA_FLOWER_KEY_ENC_IPV6_SRC,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_ENC_IPV6_SRC_MASK,/* struct in6_addr */
+ 	TCA_FLOWER_KEY_ENC_IPV6_DST,	/* struct in6_addr */
+ 	TCA_FLOWER_KEY_ENC_IPV6_DST_MASK,/* struct in6_addr */
+ 
+ 	__TCA_FLOWER_MAX,
+ };
+ 
+ #define TCA_FLOWER_MAX (__TCA_FLOWER_MAX - 1)
+ 
+ /* Match-all classifier */
+ 
+ enum {
+ 	TCA_MATCHALL_UNSPEC,
+ 	TCA_MATCHALL_CLASSID,
+ 	TCA_MATCHALL_ACT,
+ 	TCA_MATCHALL_FLAGS,
+ 	__TCA_MATCHALL_MAX,
+ };
+ 
+ #define TCA_MATCHALL_MAX (__TCA_MATCHALL_MAX - 1)
+ 
++>>>>>>> bc3103f1ed40 (net/sched: cls_flower: Classify packet in ip tunnels)
  /* Extended Matches */
  
  struct tcf_ematch_tree_hdr {
* Unmerged path net/sched/cls_flower.c
* Unmerged path include/uapi/linux/pkt_cls.h
* Unmerged path net/sched/cls_flower.c
