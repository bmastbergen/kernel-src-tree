tools/power turbostat: indicate SMX and SGX support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [tools] power turbostat: indicate SMX and SGX support (Prarit Bhargava) [1422076]
Rebuild_FUZZ: 93.75%
commit-author Len Brown <len.brown@intel.com>
commit aa8d8cc79af16e16da04efff1c1a72b1ea4a9e7e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/aa8d8cc7.failed

SGX presence is related to a SKL power workaround,
so lets show when that is enabled.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit aa8d8cc79af16e16da04efff1c1a72b1ea4a9e7e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index b938c3391c64,db9c9d100042..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -2734,11 -3120,12 +2745,16 @@@ void process_cpuid(
  		model += ((fms >> 16) & 0xf) << 4;
  
  	if (debug) {
 -		fprintf(outf, "%d CPUID levels; family:model:stepping 0x%x:%x:%x (%d:%d:%d)\n",
 +		fprintf(stderr, "%d CPUID levels; family:model:stepping 0x%x:%x:%x (%d:%d:%d)\n",
  			max_level, family, model, stepping, family, model, stepping);
++<<<<<<< HEAD
 +		fprintf(stderr, "CPUID(1): %s %s %s %s %s %s %s %s\n",
++=======
+ 		fprintf(outf, "CPUID(1): %s %s %s %s %s %s %s %s %s\n",
++>>>>>>> aa8d8cc79af1 (tools/power turbostat: indicate SMX and SGX support)
  			ecx & (1 << 0) ? "SSE3" : "-",
  			ecx & (1 << 3) ? "MONITOR" : "-",
+ 			ecx & (1 << 6) ? "SMX" : "-",
  			ecx & (1 << 7) ? "EIST" : "-",
  			ecx & (1 << 8) ? "TM2" : "-",
  			edx & (1 << 4) ? "TSC" : "-",
@@@ -2789,7 -3187,21 +2805,25 @@@
  	if (debug)
  		decode_misc_enable_msr();
  
++<<<<<<< HEAD
 +	if (max_level > 0x15) {
++=======
+ 	if (max_level >= 0x7) {
+ 		int has_sgx;
+ 
+ 		ecx = 0;
+ 
+ 		__cpuid_count(0x7, 0, eax, ebx, ecx, edx);
+ 
+ 		has_sgx = ebx & (1 << 2);
+ 		fprintf(outf, "CPUID(7): %sSGX\n", has_sgx ? "" : "No-");
+ 
+ 		if (has_sgx)
+ 			decode_feature_control_msr();
+ 	}
+ 
+ 	if (max_level >= 0x15) {
++>>>>>>> aa8d8cc79af1 (tools/power turbostat: indicate SMX and SGX support)
  		unsigned int eax_crystal;
  		unsigned int ebx_tsc;
  
* Unmerged path tools/power/x86/turbostat/turbostat.c
