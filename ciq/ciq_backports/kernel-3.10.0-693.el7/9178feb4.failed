ASoC: add Component level suspend/resume

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: add Component level suspend/resume (Jaroslav Kysela) [1399503]
Rebuild_FUZZ: 93.02%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit 9178feb4538e055bf22be44c38b90cc31d2baf99
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9178feb4.failed

In current ALSA SoC, Codec only has suspend/resume feature,
but it should be supported on Component level. This patch adds it.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 9178feb4538e055bf22be44c38b90cc31d2baf99)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/sound/soc.h
#	sound/soc/soc-core.c
diff --cc include/sound/soc.h
index ef25e86d51ee,13cc64e5bb77..000000000000
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@@ -796,9 -809,11 +798,14 @@@ struct snd_soc_component 
  
  	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
  	unsigned int registered_as_component:1;
++<<<<<<< HEAD
++=======
+ 	unsigned int auxiliary:1; /* for auxiliary component of the card */
+ 	unsigned int suspended:1; /* is in suspend PM state */
++>>>>>>> 9178feb4538e (ASoC: add Component level suspend/resume)
  
  	struct list_head list;
 -	struct list_head card_list;
 +	struct list_head list_aux; /* for auxiliary component of the card */
  
  	struct snd_soc_dai_driver *dai_drv;
  	int num_dai;
diff --cc sound/soc/soc-core.c
index d2e62b159610,f35ec5bf3b78..000000000000
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@@ -702,13 -702,13 +702,21 @@@ int snd_soc_suspend(struct device *dev
  	dapm_mark_endpoints_dirty(card);
  	snd_soc_dapm_sync(&card->dapm);
  
++<<<<<<< HEAD
 +	/* suspend all CODECs */
 +	list_for_each_entry(codec, &card->codec_dev_list, card_list) {
 +		struct snd_soc_dapm_context *dapm = snd_soc_codec_get_dapm(codec);
 +
 +		/* If there are paths active then the CODEC will be held with
++=======
+ 	/* suspend all COMPONENTs */
+ 	list_for_each_entry(component, &card->component_dev_list, card_list) {
+ 		struct snd_soc_dapm_context *dapm = snd_soc_component_get_dapm(component);
+ 
+ 		/* If there are paths active then the COMPONENT will be held with
++>>>>>>> 9178feb4538e (ASoC: add Component level suspend/resume)
  		 * bias _ON and should not be suspended. */
- 		if (!codec->suspended) {
+ 		if (!component->suspended) {
  			switch (snd_soc_dapm_get_bias_level(dapm)) {
  			case SND_SOC_BIAS_STANDBY:
  				/*
@@@ -794,11 -794,11 +802,19 @@@ static void soc_resume_deferred(struct 
  			cpu_dai->driver->resume(cpu_dai);
  	}
  
++<<<<<<< HEAD
 +	list_for_each_entry(codec, &card->codec_dev_list, card_list) {
 +		if (codec->suspended) {
 +			if (codec->driver->resume)
 +				codec->driver->resume(codec);
 +			codec->suspended = 0;
++=======
+ 	list_for_each_entry(component, &card->component_dev_list, card_list) {
+ 		if (component->suspended) {
+ 			if (component->resume)
+ 				component->resume(component);
+ 			component->suspended = 0;
++>>>>>>> 9178feb4538e (ASoC: add Component level suspend/resume)
  		}
  	}
  
* Unmerged path include/sound/soc.h
* Unmerged path sound/soc/soc-core.c
