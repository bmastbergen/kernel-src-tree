locking/qspinlock/x86: Fix performance regression under unaccelerated VMs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [kernel] locking/qspinlock: Fix performance regression under unaccelerated VMs (Waiman Long) [1241990]
Rebuild_FUZZ: 97.18%
commit-author Peter Zijlstra <peterz@infradead.org>
commit 43b3f02899f74ae9914a39547cc5492156f0027a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/43b3f028.failed

Dave ran into horrible performance on a VM without PARAVIRT_SPINLOCKS
set and Linus noted that the test-and-set implementation was retarded.

One should spin on the variable with a load, not a RMW.

While there, remove 'queued' from the name, as the lock isn't queued
at all, but a simple test-and-set.

	Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
	Reported-by: Dave Chinner <david@fromorbit.com>
	Tested-by: Dave Chinner <david@fromorbit.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Waiman Long <Waiman.Long@hp.com>
	Cc: stable@vger.kernel.org # v4.2+
Link: http://lkml.kernel.org/r/20150904152523.GR18673@twins.programming.kicks-ass.net
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 43b3f02899f74ae9914a39547cc5492156f0027a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/qspinlock.h
#	include/asm-generic/qspinlock.h
#	kernel/locking/qspinlock.c
* Unmerged path arch/x86/include/asm/qspinlock.h
* Unmerged path include/asm-generic/qspinlock.h
* Unmerged path kernel/locking/qspinlock.c
* Unmerged path arch/x86/include/asm/qspinlock.h
* Unmerged path include/asm-generic/qspinlock.h
* Unmerged path kernel/locking/qspinlock.c
