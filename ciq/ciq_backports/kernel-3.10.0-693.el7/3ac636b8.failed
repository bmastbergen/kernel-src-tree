bridge: implement rtnl_link_ops->slave_changelink

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Pirko <jiri@resnulli.us>
commit 3ac636b8591c37bb5028814a4ebd41d263b56181
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3ac636b8.failed

Allow rtnetlink users to set port info via IFLA_INFO_SLAVE_DATA attr

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3ac636b8591c37bb5028814a4ebd41d263b56181)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_netlink.c
diff --cc net/bridge/br_netlink.c
index f3eb671f2eb9,05aeea1222a7..000000000000
--- a/net/bridge/br_netlink.c
+++ b/net/bridge/br_netlink.c
@@@ -624,6 -461,29 +624,32 @@@ static int br_dev_newlink(struct net *s
  	return register_netdevice(dev);
  }
  
++<<<<<<< HEAD
++=======
+ static int br_port_slave_changelink(struct net_device *brdev,
+ 				    struct net_device *dev,
+ 				    struct nlattr *tb[],
+ 				    struct nlattr *data[])
+ {
+ 	if (!data)
+ 		return 0;
+ 	return br_setport(br_port_get_rtnl(dev), data);
+ }
+ 
+ static int br_port_fill_slave_info(struct sk_buff *skb,
+ 				   const struct net_device *brdev,
+ 				   const struct net_device *dev)
+ {
+ 	return br_port_fill_attrs(skb, br_port_get_rtnl(dev));
+ }
+ 
+ static size_t br_port_get_slave_size(const struct net_device *brdev,
+ 				     const struct net_device *dev)
+ {
+ 	return br_port_info_size();
+ }
+ 
++>>>>>>> 3ac636b8591c (bridge: implement rtnl_link_ops->slave_changelink)
  static size_t br_get_link_af_size(const struct net_device *dev)
  {
  	struct net_port_vlans *pv;
@@@ -648,14 -508,18 +674,29 @@@ static struct rtnl_af_ops br_af_ops = 
  };
  
  struct rtnl_link_ops br_link_ops __read_mostly = {
++<<<<<<< HEAD
 +	.kind		= "bridge",
 +	.priv_size	= sizeof(struct net_bridge),
 +	.setup		= br_dev_setup,
 +	.validate	= br_validate,
 +	.newlink	= br_dev_newlink,
 +	.dellink	= br_dev_delete,
 +	.get_size	= br_get_size,
 +	.fill_info	= br_fill_info,
++=======
+ 	.kind			= "bridge",
+ 	.priv_size		= sizeof(struct net_bridge),
+ 	.setup			= br_dev_setup,
+ 	.validate		= br_validate,
+ 	.newlink		= br_dev_newlink,
+ 	.dellink		= br_dev_delete,
+ 
+ 	.slave_maxtype		= IFLA_BRPORT_MAX,
+ 	.slave_policy		= br_port_policy,
+ 	.slave_changelink	= br_port_slave_changelink,
+ 	.get_slave_size		= br_port_get_slave_size,
+ 	.fill_slave_info	= br_port_fill_slave_info,
++>>>>>>> 3ac636b8591c (bridge: implement rtnl_link_ops->slave_changelink)
  };
  
  int __init br_netlink_init(void)
* Unmerged path net/bridge/br_netlink.c
