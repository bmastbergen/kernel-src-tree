net/mlx5: Introduce sniffer steering hardware capabilities

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [kernel] mlx5: Introduce sniffer steering hardware capabilities (Don Dutile) [1385256 1385330 1417285]
Rebuild_FUZZ: 96.43%
commit-author Maor Gottlieb <maorg@mellanox.com>
commit cea824d416522ce63d83b45fc0dc53c0f5b68cee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/cea824d4.failed

Define needed hardware capabilities for sniffer
RX and TX flow tables.

Add the following capabilities:
1. Sniffer RX flow table capabilities.
2. Sniffer TX flow table capabilities.
3. If same TIR can be used by multiple flow tables of different types.

	Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
(cherry picked from commit cea824d416522ce63d83b45fc0dc53c0f5b68cee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/device.h
diff --cc include/linux/mlx5/device.h
index 10fda52ea5b3,77c141797152..000000000000
--- a/include/linux/mlx5/device.h
+++ b/include/linux/mlx5/device.h
@@@ -1171,6 -958,24 +1171,27 @@@ enum mlx5_cap_type 
  #define MLX5_CAP_FLOWTABLE_MAX(mdev, cap) \
  	MLX5_GET(flow_table_nic_cap, mdev->hca_caps_max[MLX5_CAP_FLOW_TABLE], cap)
  
++<<<<<<< HEAD
++=======
+ #define MLX5_CAP_FLOWTABLE_NIC_RX(mdev, cap) \
+ 	MLX5_CAP_FLOWTABLE(mdev, flow_table_properties_nic_receive.cap)
+ 
+ #define MLX5_CAP_FLOWTABLE_NIC_RX_MAX(mdev, cap) \
+ 	MLX5_CAP_FLOWTABLE_MAX(mdev, flow_table_properties_nic_receive.cap)
+ 
+ #define MLX5_CAP_FLOWTABLE_SNIFFER_RX(mdev, cap) \
+ 	MLX5_CAP_FLOWTABLE(mdev, flow_table_properties_nic_receive_sniffer.cap)
+ 
+ #define MLX5_CAP_FLOWTABLE_SNIFFER_RX_MAX(mdev, cap) \
+ 	MLX5_CAP_FLOWTABLE_MAX(mdev, flow_table_properties_nic_receive_sniffer.cap)
+ 
+ #define MLX5_CAP_FLOWTABLE_SNIFFER_TX(mdev, cap) \
+ 	MLX5_CAP_FLOWTABLE(mdev, flow_table_properties_nic_transmit_sniffer.cap)
+ 
+ #define MLX5_CAP_FLOWTABLE_SNIFFER_TX_MAX(mdev, cap) \
+ 	MLX5_CAP_FLOWTABLE_MAX(mdev, flow_table_properties_nic_transmit_sniffer.cap)
+ 
++>>>>>>> cea824d41652 (net/mlx5: Introduce sniffer steering hardware capabilities)
  #define MLX5_CAP_ESW_FLOWTABLE(mdev, cap) \
  	MLX5_GET(flow_table_eswitch_cap, \
  		 mdev->hca_caps_cur[MLX5_CAP_ESWITCH_FLOW_TABLE], cap)
* Unmerged path include/linux/mlx5/device.h
diff --git a/include/linux/mlx5/mlx5_ifc.h b/include/linux/mlx5/mlx5_ifc.h
index fab1dc11d205..ce8f027159a4 100644
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@ -483,7 +483,9 @@ struct mlx5_ifc_ads_bits {
 
 struct mlx5_ifc_flow_table_nic_cap_bits {
 	u8         nic_rx_multi_path_tirs[0x1];
-	u8         reserved_at_1[0x1ff];
+	u8         nic_rx_multi_path_tirs_fts[0x1];
+	u8         allow_sniffer_and_nic_rx_shared_tir[0x1];
+	u8         reserved_at_3[0x1fd];
 
 	struct mlx5_ifc_flow_table_prop_layout_bits flow_table_properties_nic_receive;
 
