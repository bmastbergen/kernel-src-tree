ixgbevf: restore hw_addr on resume or error

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Emil Tantilov <emil.s.tantilov@intel.com>
commit 26403b7fde65ecfc74f5571e3cfa602dc9b3d6cb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/26403b7f.failed

Restore adapter->hw.hw_addr after handling an error, or a resume
operation to make sure we can access the registers.

	Signed-off-by: Emil Tantilov <emil.s.tantilov@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 26403b7fde65ecfc74f5571e3cfa602dc9b3d6cb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
diff --cc drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
index 34bb1d1939f2,dc23f56d5c10..000000000000
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@@ -3867,7 -3851,9 +3867,13 @@@ static int ixgbevf_resume(struct pci_de
  		dev_err(&pdev->dev, "Cannot enable PCI device from suspend\n");
  		return err;
  	}
++<<<<<<< HEAD
 +	smp_mb__before_clear_bit();
++=======
+ 
+ 	adapter->hw.hw_addr = adapter->io_addr;
+ 	smp_mb__before_atomic();
++>>>>>>> 26403b7fde65 (ixgbevf: restore hw_addr on resume or error)
  	clear_bit(__IXGBEVF_DISABLED, &adapter->state);
  	pci_set_master(pdev);
  
@@@ -4284,7 -4287,8 +4290,12 @@@ static pci_ers_result_t ixgbevf_io_slot
  		return PCI_ERS_RESULT_DISCONNECT;
  	}
  
++<<<<<<< HEAD
 +	smp_mb__before_clear_bit();
++=======
+ 	adapter->hw.hw_addr = adapter->io_addr;
+ 	smp_mb__before_atomic();
++>>>>>>> 26403b7fde65 (ixgbevf: restore hw_addr on resume or error)
  	clear_bit(__IXGBEVF_DISABLED, &adapter->state);
  	pci_set_master(pdev);
  
* Unmerged path drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
