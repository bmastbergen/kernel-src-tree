MD: hold mddev lock to change bitmap location

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [md] hold mddev lock to change bitmap location (Jes Sorensen) [1380016]
Rebuild_FUZZ: 95.35%
commit-author Shaohua Li <shli@fb.com>
commit d9dd26b20cff88b45d861ec786d86b1c9bd2ee60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d9dd26b2.failed

Changing the location changes a lot of things. Holding the lock to avoid race.
This makes the .quiesce called with mddev lock hold too.

	Acked-by: NeilBrown <neilb@suse.com>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit d9dd26b20cff88b45d861ec786d86b1c9bd2ee60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/bitmap.c
diff --cc drivers/md/bitmap.c
index 5d638c495205,13041ee37ad6..000000000000
--- a/drivers/md/bitmap.c
+++ b/drivers/md/bitmap.c
@@@ -2002,26 -2232,35 +2012,34 @@@ location_store(struct mddev *mddev, con
  			else
  				rv = kstrtoll(buf, 10, &offset);
  			if (rv)
- 				return rv;
- 			if (offset == 0)
- 				return -EINVAL;
+ 				goto out;
+ 			if (offset == 0) {
+ 				rv = -EINVAL;
+ 				goto out;
+ 			}
  			if (mddev->bitmap_info.external == 0 &&
  			    mddev->major_version == 0 &&
- 			    offset != mddev->bitmap_info.default_offset)
- 				return -EINVAL;
+ 			    offset != mddev->bitmap_info.default_offset) {
+ 				rv = -EINVAL;
+ 				goto out;
+ 			}
  			mddev->bitmap_info.offset = offset;
  			if (mddev->pers) {
 -				struct bitmap *bitmap;
  				mddev->pers->quiesce(mddev, 1);
 -				bitmap = bitmap_create(mddev, -1);
 -				if (IS_ERR(bitmap))
 -					rv = PTR_ERR(bitmap);
 -				else {
 -					mddev->bitmap = bitmap;
 +				rv = bitmap_create(mddev);
 +				if (!rv)
  					rv = bitmap_load(mddev);
 -					if (rv)
 -						mddev->bitmap_info.offset = 0;
 -				}
 -				mddev->pers->quiesce(mddev, 0);
  				if (rv) {
  					bitmap_destroy(mddev);
++<<<<<<< HEAD
 +					mddev->bitmap_info.offset = 0;
++=======
+ 					goto out;
++>>>>>>> d9dd26b20cff (MD: hold mddev lock to change bitmap location)
  				}
 +				mddev->pers->quiesce(mddev, 0);
 +				if (rv)
 +					return rv;
  			}
  		}
  	}
* Unmerged path drivers/md/bitmap.c
