ntb_perf: Improve thread handling to increase robustness

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Logan Gunthorpe <logang@deltatee.com>
commit da573eaa3a13f60efafcbe25e4f4465cf1a1b40b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/da573eaa.failed

This commit accomplishes a few things:

1) Properly prevent multiple sets of threads from running at once using
a mutex. Lots of race issues existed with the thread_cleanup.

2) The mutex allows us to ensure that threads are finished before
tearing down the device or module.

3) Don't use kthread_stop when the threads can exit by themselves, as
this is counter-indicated by the kthread_create documentation. Threads
now wait for kthread_stop to occur.

4) Writing to the run file now blocks until the threads are complete.
The test can then be safely interrupted by a SIGINT.

Also, while I was at it:

5) debugfs_run_write shouldn't return 0 in the early check cases as this
could cause debugfs_run_write to loop undesirably.

	Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
	Acked-by: Dave Jiang <dave.jiang@intel.com>
	Signed-off-by: Jon Mason <jdmason@kudzu.us>
(cherry picked from commit da573eaa3a13f60efafcbe25e4f4465cf1a1b40b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ntb/test/ntb_perf.c
* Unmerged path drivers/ntb/test/ntb_perf.c
* Unmerged path drivers/ntb/test/ntb_perf.c
