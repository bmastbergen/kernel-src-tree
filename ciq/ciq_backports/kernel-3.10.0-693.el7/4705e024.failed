powerpc: Update TM user feature bits in scan_features()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [powerpc] Update TM user feature bits in scan_features() (David Gibson) [1445883]
Rebuild_FUZZ: 91.09%
commit-author Anton Blanchard <anton@samba.org>
commit 4705e02498d6d5a7ab98dfee9595cd5e91db2017
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4705e024.failed

We need to update the user TM feature bits (PPC_FEATURE2_HTM and
PPC_FEATURE2_HTM) to mirror what we do with the kernel TM feature
bit.

At the moment, if firmware reports TM is not available we turn off
the kernel TM feature bit but leave the userspace ones on. Userspace
thinks it can execute TM instructions and it dies trying.

This (together with a QEMU patch) fixes PR KVM, which doesn't currently
support TM.

	Signed-off-by: Anton Blanchard <anton@samba.org>
	Cc: stable@vger.kernel.org
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 4705e02498d6d5a7ab98dfee9595cd5e91db2017)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/prom.c
diff --cc arch/powerpc/kernel/prom.c
index 7088a896d465,a15fe1d4e84a..000000000000
--- a/arch/powerpc/kernel/prom.c
+++ b/arch/powerpc/kernel/prom.c
@@@ -152,23 -153,23 +152,28 @@@ static struct ibm_pa_feature 
  	unsigned char	pabit;		/* bit number (big-endian) */
  	unsigned char	invert;		/* if 1, pa bit set => clear feature */
  } ibm_pa_features[] __initdata = {
 -	{0, 0, PPC_FEATURE_HAS_MMU, 0,		0, 0, 0},
 -	{0, 0, PPC_FEATURE_HAS_FPU, 0,		0, 1, 0},
 -	{CPU_FTR_CTRL, 0, 0, 0,			0, 3, 0},
 -	{CPU_FTR_NOEXECUTE, 0, 0, 0,		0, 6, 0},
 -	{CPU_FTR_NODSISRALIGN, 0, 0, 0,		1, 1, 1},
 -	{0, MMU_FTR_CI_LARGE_PAGE, 0, 0,		1, 2, 0},
 -	{CPU_FTR_REAL_LE, 0, PPC_FEATURE_TRUE_LE, 0, 5, 0, 0},
 +	{0, 0, PPC_FEATURE_HAS_MMU,	0, 0, 0},
 +	{0, 0, PPC_FEATURE_HAS_FPU,	0, 1, 0},
 +	{0, MMU_FTR_SLB, 0,		0, 2, 0},
 +	{CPU_FTR_CTRL, 0, 0,		0, 3, 0},
 +	{CPU_FTR_NOEXECUTE, 0, 0,	0, 6, 0},
 +	{CPU_FTR_NODSISRALIGN, 0, 0,	1, 1, 1},
 +	{0, MMU_FTR_CI_LARGE_PAGE, 0,	1, 2, 0},
 +	{CPU_FTR_REAL_LE, PPC_FEATURE_TRUE_LE, 5, 0, 0},
  	/*
- 	 * If the kernel doesn't support TM (ie. CONFIG_PPC_TRANSACTIONAL_MEM=n),
- 	 * we don't want to turn on CPU_FTR_TM here, so we use CPU_FTR_TM_COMP
- 	 * which is 0 if the kernel doesn't support TM.
+ 	 * If the kernel doesn't support TM (ie CONFIG_PPC_TRANSACTIONAL_MEM=n),
+ 	 * we don't want to turn on TM here, so we use the *_COMP versions
+ 	 * which are 0 if the kernel doesn't support TM.
  	 */
++<<<<<<< HEAD
 +	{CPU_FTR_TM_COMP, 0, 0,		22, 0, 0},
++=======
+ 	{CPU_FTR_TM_COMP, 0, 0,
+ 	 PPC_FEATURE2_HTM_COMP|PPC_FEATURE2_HTM_NOSC_COMP, 22, 0, 0},
++>>>>>>> 4705e02498d6 (powerpc: Update TM user feature bits in scan_features())
  };
  
 -static void __init scan_features(unsigned long node, const unsigned char *ftrs,
 +static void __init scan_features(unsigned long node, unsigned char *ftrs,
  				 unsigned long tablelen,
  				 struct ibm_pa_feature *fp,
  				 unsigned long ft_size)
* Unmerged path arch/powerpc/kernel/prom.c
