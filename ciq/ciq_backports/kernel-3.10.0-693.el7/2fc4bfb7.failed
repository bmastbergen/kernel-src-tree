net/mlx5e: Dynamic RQ type infrastructure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Dynamic RQ type infrastructure (Don Dutile) [1385330 1417285]
Rebuild_FUZZ: 94.87%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 2fc4bfb7250d79ee4e58c1d5bca257687e9f5e53
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2fc4bfb7.failed

Add two helper functions to allow dynamic changes of RQ type.

mlx5e_set_rq_priv_params and mlx5e_set_rq_type_params will be
used on netdev creation to determine the default RQ type.

This will be needed later for downstream patches of XDP support.
When enabling XDP we will dynamically move from striding RQ to
linked list RQ type.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2fc4bfb7250d79ee4e58c1d5bca257687e9f5e53)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 98d2ea9b4528,ff520ad27f5e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -2754,12 -3154,17 +2788,14 @@@ static void mlx5e_build_netdev_priv(str
  	struct mlx5e_priv *priv = netdev_priv(netdev);
  	u32 link_speed = 0;
  	u32 pci_bw = 0;
 -	u8 cq_period_mode = MLX5_CAP_GEN(mdev, cq_period_start_from_cqe) ?
 -					 MLX5_CQ_PERIOD_MODE_START_FROM_CQE :
 -					 MLX5_CQ_PERIOD_MODE_START_FROM_EQE;
  
- 	priv->params.log_sq_size           =
- 		MLX5E_PARAMS_DEFAULT_LOG_SQ_SIZE;
- 	priv->params.rq_wq_type = mlx5e_check_fragmented_striding_rq_cap(mdev) ?
- 		MLX5_WQ_TYPE_LINKED_LIST_STRIDING_RQ :
- 		MLX5_WQ_TYPE_LINKED_LIST;
+ 	priv->mdev                         = mdev;
+ 	priv->netdev                       = netdev;
+ 	priv->params.num_channels          = profile->max_nch(mdev);
+ 	priv->profile                      = profile;
+ 	priv->ppriv                        = ppriv;
+ 
+ 	priv->params.log_sq_size = MLX5E_PARAMS_DEFAULT_LOG_SQ_SIZE;
  
  	/* set CQE compression */
  	priv->params.rx_cqe_compress_admin = false;
@@@ -2772,36 -3177,14 +2808,14 @@@
  		priv->params.rx_cqe_compress_admin =
  			cqe_compress_heuristic(link_speed, pci_bw);
  	}
- 
  	priv->params.rx_cqe_compress = priv->params.rx_cqe_compress_admin;
  
- 	switch (priv->params.rq_wq_type) {
- 	case MLX5_WQ_TYPE_LINKED_LIST_STRIDING_RQ:
- 		priv->params.log_rq_size = MLX5E_PARAMS_DEFAULT_LOG_RQ_SIZE_MPW;
- 		priv->params.mpwqe_log_stride_sz =
- 			priv->params.rx_cqe_compress ?
- 			MLX5_MPWRQ_LOG_STRIDE_SIZE_CQE_COMPRESS :
- 			MLX5_MPWRQ_LOG_STRIDE_SIZE;
- 		priv->params.mpwqe_log_num_strides = MLX5_MPWRQ_LOG_WQE_SZ -
- 			priv->params.mpwqe_log_stride_sz;
+ 	mlx5e_set_rq_priv_params(priv);
+ 	if (priv->params.rq_wq_type == MLX5_WQ_TYPE_LINKED_LIST_STRIDING_RQ)
  		priv->params.lro_en = true;
- 		break;
- 	default: /* MLX5_WQ_TYPE_LINKED_LIST */
- 		priv->params.log_rq_size = MLX5E_PARAMS_DEFAULT_LOG_RQ_SIZE;
- 	}
- 
- 	mlx5_core_info(mdev,
- 		       "MLX5E: StrdRq(%d) RqSz(%ld) StrdSz(%ld) RxCqeCmprss(%d)\n",
- 		       priv->params.rq_wq_type == MLX5_WQ_TYPE_LINKED_LIST_STRIDING_RQ,
- 		       BIT(priv->params.log_rq_size),
- 		       BIT(priv->params.mpwqe_log_stride_sz),
- 		       priv->params.rx_cqe_compress_admin);
- 
- 	priv->params.min_rx_wqes = mlx5_min_rx_wqes(priv->params.rq_wq_type,
- 					    BIT(priv->params.log_rq_size));
  
 -	priv->params.rx_am_enabled = MLX5_CAP_GEN(mdev, cq_moderation);
 -	mlx5e_set_rx_cq_mode_params(&priv->params, cq_period_mode);
 +	mlx5e_set_rx_cq_mode_params(&priv->params,
 +				    MLX5_CQ_PERIOD_MODE_START_FROM_EQE);
  
  	priv->params.tx_cq_moderation.usec =
  		MLX5E_PARAMS_DEFAULT_TX_CQ_MODERATION_USEC;
@@@ -2827,10 -3211,6 +2841,13 @@@
  	MLX5E_SET_PRIV_FLAG(priv, MLX5E_PFLAG_RX_CQE_BASED_MODER,
  			    priv->params.rx_cq_period_mode == MLX5_CQ_PERIOD_MODE_START_FROM_CQE);
  
++<<<<<<< HEAD
 +	priv->mdev                         = mdev;
 +	priv->netdev                       = netdev;
 +	priv->params.num_channels          = num_channels;
 +
++=======
++>>>>>>> 2fc4bfb7250d (net/mlx5e: Dynamic RQ type infrastructure)
  #ifdef CONFIG_MLX5_CORE_EN_DCB
  	mlx5e_ets_init(priv);
  #endif
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
