alx: enable msi-x interrupts by default

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Tobias Regnery <tobias.regnery@gmail.com>
commit f58e0f77471b913c18fc253c90fd7bb8ee6fca3f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f58e0f77.failed

Remove the module parameter to enable msi-x support and enable msi-x
interrupts unconditionally by default. This is a preparatory step to enable
multi queue support by default, because this is only working with msi-x
interrupts.

	Signed-off-by: Tobias Regnery <tobias.regnery@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f58e0f77471b913c18fc253c90fd7bb8ee6fca3f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/atheros/alx/main.c
diff --cc drivers/net/ethernet/atheros/alx/main.c
index b165b9e58ad3,91c9149ab3f2..000000000000
--- a/drivers/net/ethernet/atheros/alx/main.c
+++ b/drivers/net/ethernet/atheros/alx/main.c
@@@ -51,16 -51,12 +51,20 @@@
  
  const char alx_drv_name[] = "alx";
  
++<<<<<<< HEAD
 +static bool msix = false;
 +module_param(msix, bool, 0);
 +MODULE_PARM_DESC(msix, "Enable msi-x interrupt support");
 +
 +static void alx_free_txbuf(struct alx_priv *alx, int entry)
++=======
+ static void alx_free_txbuf(struct alx_tx_queue *txq, int entry)
++>>>>>>> f58e0f77471b (alx: enable msi-x interrupts by default)
  {
 -	struct alx_buffer *txb = &txq->bufs[entry];
 +	struct alx_buffer *txb = &alx->txq.bufs[entry];
  
  	if (dma_unmap_len(txb, size)) {
 -		dma_unmap_single(txq->dev,
 +		dma_unmap_single(&alx->hw.pdev->dev,
  				 dma_unmap_addr(txb, dma),
  				 dma_unmap_len(txb, size),
  				 DMA_TO_DEVICE);
* Unmerged path drivers/net/ethernet/atheros/alx/main.c
