powerpc/eeh: Null check uses of eeh_pe_bus_get

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [powerpc] eeh: Null check uses of eeh_pe_bus_get (Steve Best) [1427224]
Rebuild_FUZZ: 90.48%
commit-author Russell Currey <ruscur@russell.cc>
commit 04fec21c06e35b169a83e75a84a015ab4606bf5e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/04fec21c.failed

eeh_pe_bus_get() can return NULL if a PCI bus isn't found for a given PE.
Some callers don't check this, and can cause a null pointer dereference
under certain circumstances.

Fix this by checking NULL everywhere eeh_pe_bus_get() is called.

Fixes: 8a6b1bc70dbb ("powerpc/eeh: EEH core to handle special event")
	Cc: stable@vger.kernel.org # v3.11+
	Signed-off-by: Russell Currey <ruscur@russell.cc>
	Reviewed-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 04fec21c06e35b169a83e75a84a015ab4606bf5e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/eeh-powernv.c
diff --cc arch/powerpc/platforms/powernv/eeh-powernv.c
index 244776788244,cb08e6aaf9bd..000000000000
--- a/arch/powerpc/platforms/powernv/eeh-powernv.c
+++ b/arch/powerpc/platforms/powernv/eeh-powernv.c
@@@ -943,43 -1066,44 +943,60 @@@ static int pnv_eeh_reset(struct eeh_pe 
  	 * reset. The side effect is that EEH core has to clear the frozen
  	 * state explicitly after BAR restore.
  	 */
 -	if (pe->type & EEH_PE_PHB)
 -		return pnv_eeh_phb_reset(hose, option);
 +	if (pe->type & EEH_PE_PHB) {
 +		ret = pnv_eeh_phb_reset(hose, option);
 +	} else {
 +		struct pnv_phb *phb;
 +		s64 rc;
  
 -	/*
 -	 * The frozen PE might be caused by PAPR error injection
 -	 * registers, which are expected to be cleared after hitting
 -	 * frozen PE as stated in the hardware spec. Unfortunately,
 -	 * that's not true on P7IOC. So we have to clear it manually
 -	 * to avoid recursive EEH errors during recovery.
 -	 */
 -	phb = hose->private_data;
 -	if (phb->model == PNV_PHB_MODEL_P7IOC &&
 -	    (option == EEH_RESET_HOT ||
 -	     option == EEH_RESET_FUNDAMENTAL)) {
 -		rc = opal_pci_reset(phb->opal_id,
 -				    OPAL_RESET_PHB_ERROR,
 -				    OPAL_ASSERT_RESET);
 -		if (rc != OPAL_SUCCESS) {
 -			pr_warn("%s: Failure %lld clearing error injection registers\n",
 -				__func__, rc);
 -			return -EIO;
 +		/*
 +		 * The frozen PE might be caused by PAPR error injection
 +		 * registers, which are expected to be cleared after hitting
 +		 * frozen PE as stated in the hardware spec. Unfortunately,
 +		 * that's not true on P7IOC. So we have to clear it manually
 +		 * to avoid recursive EEH errors during recovery.
 +		 */
 +		phb = hose->private_data;
 +		if (phb->model == PNV_PHB_MODEL_P7IOC &&
 +		    (option == EEH_RESET_HOT ||
 +		    option == EEH_RESET_FUNDAMENTAL)) {
 +			rc = opal_pci_reset(phb->opal_id,
 +					    OPAL_PHB_ERROR,
 +					    OPAL_ASSERT_RESET);
 +			if (rc != OPAL_SUCCESS) {
 +				pr_warn("%s: Failure %lld clearing "
 +					"error injection registers\n",
 +					__func__, rc);
 +				return -EIO;
 +			}
  		}
 +
 +		bus = eeh_pe_bus_get(pe);
 +		if (pci_is_root_bus(bus) ||
 +			pci_is_root_bus(bus->parent))
 +			ret = pnv_eeh_root_reset(hose, option);
 +		else
 +			ret = pnv_eeh_bridge_reset(bus->self, option);
  	}
  
++<<<<<<< HEAD
 +	return ret;
++=======
+ 	bus = eeh_pe_bus_get(pe);
+ 	if (!bus) {
+ 		pr_err("%s: Cannot find PCI bus for PHB#%d-PE#%x\n",
+ 			__func__, pe->phb->global_number, pe->addr);
+ 		return -EIO;
+ 	}
+ 	if (pe->type & EEH_PE_VF)
+ 		return pnv_eeh_reset_vf_pe(pe, option);
+ 
+ 	if (pci_is_root_bus(bus) ||
+ 	    pci_is_root_bus(bus->parent))
+ 		return pnv_eeh_root_reset(hose, option);
+ 
+ 	return pnv_eeh_bridge_reset(bus->self, option);
++>>>>>>> 04fec21c06e3 (powerpc/eeh: Null check uses of eeh_pe_bus_get)
  }
  
  /**
diff --git a/arch/powerpc/kernel/eeh_driver.c b/arch/powerpc/kernel/eeh_driver.c
index bbb53ce6649e..e3c3cf26dc8b 100644
--- a/arch/powerpc/kernel/eeh_driver.c
+++ b/arch/powerpc/kernel/eeh_driver.c
@@ -902,6 +902,14 @@ static void eeh_handle_special_event(void)
 				/* Notify all devices to be down */
 				eeh_pe_state_clear(pe, EEH_PE_PRI_BUS);
 				bus = eeh_pe_bus_get(phb_pe);
+				if (!bus) {
+					pr_err("%s: Cannot find PCI bus for "
+					       "PHB#%d-PE#%x\n",
+					       __func__,
+					       pe->phb->global_number,
+					       pe->addr);
+					break;
+				}
 				eeh_pe_dev_traverse(pe,
 					eeh_report_failure, NULL);
 				pcibios_remove_pci_devices(bus);
* Unmerged path arch/powerpc/platforms/powernv/eeh-powernv.c
