drm/i915/gvt: handle workload lifecycle properly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [drm] i915/gvt: handle workload lifecycle properly (Rob Clark) [1380115]
Rebuild_FUZZ: 95.65%
commit-author Chuanxiao Dong <chuanxiao.dong@intel.com>
commit 8f1117abb408808af9cc4c948925c726bec4755a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8f1117ab.failed

Currently i915 has a request replay mechanism which can make sure
the request can be replayed after a GPU reset. With this mechanism,
gvt should wait until the GVT request seqno passed before complete
the current workload. So that there should be a context switch interrupt
come before gvt free the workload. In this way, workload lifecylce
matches with the i915 request lifecycle. The workload can only be freed
after the request is completed.

v2: use gvt_dbg_sched instead of gvt_err to print when wait again

	Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
	Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
(cherry picked from commit 8f1117abb408808af9cc4c948925c726bec4755a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gvt/scheduler.c
* Unmerged path drivers/gpu/drm/i915/gvt/scheduler.c
* Unmerged path drivers/gpu/drm/i915/gvt/scheduler.c
