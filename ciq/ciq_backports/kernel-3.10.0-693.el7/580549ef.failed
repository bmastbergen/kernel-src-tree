HID: wacom: fix Bamboo ONE oops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom: fix Bamboo ONE oops (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 91.23%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit 580549ef6b3e3fb3b958de490ca99f43a089a2cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/580549ef.failed

Looks like recent changes in the Wacom driver made the Bamboo ONE crashes.
The tablet behaves as if it was a regular Bamboo device with pen, touch
and pad, but there is no physical pad connected to it.
The weird part is that the pad is still sending events and given that
there is no input node connected to it, we get  anull pointer exception.

Link: https://bugzilla.redhat.com/show_bug.cgi?id=1317116

	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Acked-by: Ping Cheng <pingc@wacom.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 580549ef6b3e3fb3b958de490ca99f43a089a2cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_wac.c
diff --cc drivers/hid/wacom_wac.c
index 98c7d65145c2,02c4efea241c..000000000000
--- a/drivers/hid/wacom_wac.c
+++ b/drivers/hid/wacom_wac.c
@@@ -1469,11 -2403,54 +1469,62 @@@ void wacom_setup_device_quirks(struct w
  		features->y_max = 1023;
  	}
  
++<<<<<<< HEAD
 +	/* these device have multiple inputs */
 +	if (features->type >= WIRELESS ||
 +	    (features->type >= INTUOS5S && features->type <= INTUOSPL) ||
 +	    (features->oVid && features->oPid))
 +		features->quirks |= WACOM_QUIRK_MULTI_INPUT;
++=======
+ 	/*
+ 	 * Intuos5/Pro and Bamboo 3rd gen have no useful data about its
+ 	 * touch interface in its HID descriptor. If this is the touch
+ 	 * interface (PacketSize of WACOM_PKGLEN_BBTOUCH3), override the
+ 	 * tablet values.
+ 	 */
+ 	if ((features->type >= INTUOS5S && features->type <= INTUOSPL) ||
+ 		(features->type >= INTUOSHT && features->type <= BAMBOO_PT)) {
+ 		if (features->pktlen == WACOM_PKGLEN_BBTOUCH3) {
+ 			if (features->touch_max)
+ 				features->device_type |= WACOM_DEVICETYPE_TOUCH;
+ 			if (features->type >= INTUOSHT && features->type <= BAMBOO_PT)
+ 				features->device_type |= WACOM_DEVICETYPE_PAD;
+ 
+ 			features->x_max = 4096;
+ 			features->y_max = 4096;
+ 		}
+ 		else if (features->pktlen == WACOM_PKGLEN_BBTOUCH) {
+ 			features->device_type |= WACOM_DEVICETYPE_PAD;
+ 		}
+ 	}
+ 
+ 	/*
+ 	 * Hack for the Bamboo One:
+ 	 * the device presents a PAD/Touch interface as most Bamboos and even
+ 	 * sends ghosts PAD data on it. However, later, we must disable this
+ 	 * ghost interface, and we can not detect it unless we set it here
+ 	 * to WACOM_DEVICETYPE_PAD or WACOM_DEVICETYPE_TOUCH.
+ 	 */
+ 	if (features->type == BAMBOO_PEN &&
+ 	    features->pktlen == WACOM_PKGLEN_BBTOUCH3)
+ 		features->device_type |= WACOM_DEVICETYPE_PAD;
+ 
+ 	/*
+ 	 * Raw Wacom-mode pen and touch events both come from interface
+ 	 * 0, whose HID descriptor has an application usage of 0xFF0D
+ 	 * (i.e., WACOM_VENDORDEFINED_PEN). We route pen packets back
+ 	 * out through the HID_GENERIC device created for interface 1,
+ 	 * so rewrite this one to be of type WACOM_DEVICETYPE_TOUCH.
+ 	 */
+ 	if (features->type == BAMBOO_PAD)
+ 		features->device_type = WACOM_DEVICETYPE_TOUCH;
+ 
+ 	if (features->type == REMOTE)
+ 		features->device_type = WACOM_DEVICETYPE_PAD;
+ 
+ 	if (wacom->hdev->bus == BUS_BLUETOOTH)
+ 		features->quirks |= WACOM_QUIRK_BATTERY;
++>>>>>>> 580549ef6b3e (HID: wacom: fix Bamboo ONE oops)
  
  	/* quirk for bamboo touch with 2 low res touches */
  	if ((features->type == BAMBOO_PT || features->type == BAMBOO_TOUCH) &&
* Unmerged path drivers/hid/wacom_wac.c
