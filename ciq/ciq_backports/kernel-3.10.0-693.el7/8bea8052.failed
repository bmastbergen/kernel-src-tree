mm/hugetlb.c: use huge_pte_lock instead of opencoding the lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [mm] hugetlb.c: use huge_pte_lock instead of opencoding the lock (Andrea Arcangeli) [1430172]
Rebuild_FUZZ: 97.52%
commit-author Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
commit 8bea805207500068b70778b707299a9b5920ca72
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8bea8052.failed

No functional change by this patch.

Link: http://lkml.kernel.org/r/20161018090234.22574-1-aneesh.kumar@linux.vnet.ibm.com
	Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 8bea805207500068b70778b707299a9b5920ca72)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/hugetlb.c
diff --cc mm/hugetlb.c
index bd5fcc1970c8,c12296f62e8d..000000000000
--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@@ -3333,9 -3709,11 +3333,8 @@@ retry
  			ret = VM_FAULT_OOM;
  			goto backout_unlocked;
  		}
 -		/* Just decrements count, does not deallocate */
 -		vma_end_reservation(h, vma, address);
 -	}
  
- 	ptl = huge_pte_lockptr(h, mm, ptep);
- 	spin_lock(ptl);
+ 	ptl = huge_pte_lock(h, mm, ptep);
  	size = i_size_read(mapping->host) >> huge_page_shift(h);
  	if (idx >= size)
  		goto backout;
@@@ -3914,13 -4331,14 +3913,18 @@@ pte_t *huge_pmd_share(struct mm_struct 
  	if (!spte)
  		goto out;
  
++<<<<<<< HEAD
 +	ptl = huge_pte_lockptr(hstate_vma(vma), mm, spte);
 +	spin_lock(ptl);
 +	if (pud_none(*pud))
++=======
+ 	ptl = huge_pte_lock(hstate_vma(vma), mm, spte);
+ 	if (pud_none(*pud)) {
++>>>>>>> 8bea80520750 (mm/hugetlb.c: use huge_pte_lock instead of opencoding the lock)
  		pud_populate(mm, pud,
  				(pmd_t *)((unsigned long)spte & PAGE_MASK));
 -		mm_inc_nr_pmds(mm);
 -	} else {
 +	else
  		put_page(virt_to_page(spte));
 -	}
  	spin_unlock(ptl);
  out:
  	pte = (pte_t *)pmd_alloc(mm, pud, addr);
* Unmerged path mm/hugetlb.c
