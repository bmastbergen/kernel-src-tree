net: sched: do not requeue a NULL skb

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: do not requeue a NULL skb (Ivan Vecera) [1382040]
Rebuild_FUZZ: 92.75%
commit-author Lars Persson <lars.persson@axis.com>
commit 3dcd493fbebfd631913df6e2773cc295d3bf7d22
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3dcd493f.failed

A failure in validate_xmit_skb_list() triggered an unconditional call
to dev_requeue_skb with skb=NULL. This slowly grows the queue
discipline's qlen count until all traffic through the queue stops.

We take the optimistic approach and continue running the queue after a
failure since it is unknown if later packets also will fail in the
validate path.

Fixes: 55a93b3ea780 ("qdisc: validate skb without holding lock")
	Signed-off-by: Lars Persson <larper@axis.com>
	Acked-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3dcd493fbebfd631913df6e2773cc295d3bf7d22)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_generic.c
diff --cc net/sched/sch_generic.c
index 216eb999ba8a,80742edea96f..000000000000
--- a/net/sched/sch_generic.c
+++ b/net/sched/sch_generic.c
@@@ -161,12 -155,20 +161,25 @@@ int sch_direct_xmit(struct sk_buff *skb
  	/* And release qdisc */
  	spin_unlock(root_lock);
  
 -	/* Note that we validate skb (GSO, checksum, ...) outside of locks */
 -	if (validate)
 -		skb = validate_xmit_skb_list(skb, dev);
 +	HARD_TX_LOCK(dev, txq, smp_processor_id());
 +	if (!netif_xmit_frozen_or_stopped(txq))
 +		skb = dev_hard_start_xmit(skb, dev, txq, &ret);
  
++<<<<<<< HEAD
 +	HARD_TX_UNLOCK(dev, txq);
 +
++=======
+ 	if (likely(skb)) {
+ 		HARD_TX_LOCK(dev, txq, smp_processor_id());
+ 		if (!netif_xmit_frozen_or_stopped(txq))
+ 			skb = dev_hard_start_xmit(skb, dev, txq, &ret);
+ 
+ 		HARD_TX_UNLOCK(dev, txq);
+ 	} else {
+ 		spin_lock(root_lock);
+ 		return qdisc_qlen(q);
+ 	}
++>>>>>>> 3dcd493fbebf (net: sched: do not requeue a NULL skb)
  	spin_lock(root_lock);
  
  	if (dev_xmit_complete(ret)) {
* Unmerged path net/sched/sch_generic.c
