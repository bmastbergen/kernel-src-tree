GSO: Reload iph after pskb_may_pull

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Arnaldo Carvalho de Melo <acme@kernel.org>
commit a510887824171ad260cc4a2603396c6247fdd091
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a5108878.failed

As it may get stale and lead to use after free.

	Acked-by: Eric Dumazet <eric.dumazet@gmail.com>
	Cc: Alexander Duyck <aduyck@mirantis.com>
	Cc: Andrey Konovalov <andreyknvl@google.com>
Fixes: cbc53e08a793 ("GSO: Add GSO type for fixed IPv4 ID")
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Acked-by: Alexander Duyck <alexander.h.duyck@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a510887824171ad260cc4a2603396c6247fdd091)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/af_inet.c
diff --cc net/ipv4/af_inet.c
index 3068a0e54f0b,215143246e4b..000000000000
--- a/net/ipv4/af_inet.c
+++ b/net/ipv4/af_inet.c
@@@ -1243,11 -1228,14 +1243,22 @@@ static struct sk_buff *inet_gso_segment
  
  	segs = ERR_PTR(-EPROTONOSUPPORT);
  
++<<<<<<< HEAD
 +	if (skb->encapsulation &&
 +	    skb_shinfo(skb)->gso_type & (SKB_GSO_SIT|SKB_GSO_IPIP))
 +		udpfrag = proto == IPPROTO_UDP && encap;
 +	else
 +		udpfrag = proto == IPPROTO_UDP && !skb->encapsulation;
++=======
+ 	if (!skb->encapsulation || encap) {
+ 		udpfrag = !!(skb_shinfo(skb)->gso_type & SKB_GSO_UDP);
+ 		fixedid = !!(skb_shinfo(skb)->gso_type & SKB_GSO_TCP_FIXEDID);
+ 
+ 		/* fixed ID is invalid if DF bit is not set */
+ 		if (fixedid && !(ip_hdr(skb)->frag_off & htons(IP_DF)))
+ 			goto out;
+ 	}
++>>>>>>> a51088782417 (GSO: Reload iph after pskb_may_pull)
  
  	ops = rcu_dereference(inet_offloads[proto]);
  	if (likely(ops && ops->callbacks.gso_segment))
* Unmerged path net/ipv4/af_inet.c
