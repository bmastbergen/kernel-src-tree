crypto: ccp - Fix double add when creating new DMA command

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [crypto] ccp - Fix double add when creating new DMA command (Suravee Suthikulpanit) [1390820 1420977]
Rebuild_FUZZ: 92.59%
commit-author Gary R Hook <gary.hook@amd.com>
commit e5da5c5667381d2772374ee6a2967b3576c9483d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e5da5c56.failed

Eliminate a double-add by creating a new list to manage
command descriptors when created; move the descriptor to
the pending list when the command is submitted.

	Cc: <stable@vger.kernel.org>
	Signed-off-by: Gary R Hook <gary.hook@amd.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit e5da5c5667381d2772374ee6a2967b3576c9483d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/ccp/ccp-dev.h
#	drivers/crypto/ccp/ccp-dmaengine.c
diff --cc drivers/crypto/ccp/ccp-dev.h
index 72bf1536b653,649e5610a5ce..000000000000
--- a/drivers/crypto/ccp/ccp-dev.h
+++ b/drivers/crypto/ccp/ccp-dev.h
@@@ -139,9 -208,46 +139,47 @@@
  #define CCP_ECC_RESULT_OFFSET		60
  #define CCP_ECC_RESULT_SUCCESS		0x0001
  
 -#define CCP_SB_BYTES			32
  
 -struct ccp_op;
  struct ccp_device;
  struct ccp_cmd;
++<<<<<<< HEAD
++=======
+ struct ccp_fns;
+ 
+ struct ccp_dma_cmd {
+ 	struct list_head entry;
+ 
+ 	struct ccp_cmd ccp_cmd;
+ };
+ 
+ struct ccp_dma_desc {
+ 	struct list_head entry;
+ 
+ 	struct ccp_device *ccp;
+ 
+ 	struct list_head pending;
+ 	struct list_head active;
+ 
+ 	enum dma_status status;
+ 	struct dma_async_tx_descriptor tx_desc;
+ 	size_t len;
+ };
+ 
+ struct ccp_dma_chan {
+ 	struct ccp_device *ccp;
+ 
+ 	spinlock_t lock;
+ 	struct list_head created;
+ 	struct list_head pending;
+ 	struct list_head active;
+ 	struct list_head complete;
+ 
+ 	struct tasklet_struct cleanup_tasklet;
+ 
+ 	enum dma_status status;
+ 	struct dma_chan dma_chan;
+ };
++>>>>>>> e5da5c566738 (crypto: ccp - Fix double add when creating new DMA command)
  
  struct ccp_cmd_queue {
  	struct ccp_device *ccp;
* Unmerged path drivers/crypto/ccp/ccp-dmaengine.c
* Unmerged path drivers/crypto/ccp/ccp-dev.h
* Unmerged path drivers/crypto/ccp/ccp-dmaengine.c
