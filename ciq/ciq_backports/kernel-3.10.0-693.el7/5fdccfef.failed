cifs: kill more bogus checks in ->...xattr() methods

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit 5fdccfef483d088fcc533b282bf6953579d6d6f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5fdccfef.failed

none of that stuff can ever be called for NULL or negative
dentry.

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 5fdccfef483d088fcc533b282bf6953579d6d6f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/xattr.c
diff --cc fs/cifs/xattr.c
index ff9e1f8b16a4,159547c8a40b..000000000000
--- a/fs/cifs/xattr.c
+++ b/fs/cifs/xattr.c
@@@ -42,21 -42,11 +42,23 @@@ int cifs_removexattr(struct dentry *dir
  	int rc = -EOPNOTSUPP;
  #ifdef CONFIG_CIFS_XATTR
  	unsigned int xid;
- 	struct cifs_sb_info *cifs_sb;
+ 	struct cifs_sb_info *cifs_sb = CIFS_SB(direntry->d_sb);
  	struct tcon_link *tlink;
  	struct cifs_tcon *pTcon;
- 	struct super_block *sb;
  	char *full_path = NULL;
  
++<<<<<<< HEAD
 +	if (direntry == NULL)
 +		return -EIO;
 +	if (d_really_is_negative(direntry))
 +		return -EIO;
 +	sb = d_inode(direntry)->i_sb;
 +	if (sb == NULL)
 +		return -EIO;
 +
 +	cifs_sb = CIFS_SB(sb);
++=======
++>>>>>>> 5fdccfef483d (cifs: kill more bogus checks in ->...xattr() methods)
  	tlink = cifs_sb_tlink(cifs_sb);
  	if (IS_ERR(tlink))
  		return PTR_ERR(tlink);
@@@ -103,21 -93,12 +105,24 @@@ int cifs_setxattr(struct dentry *dirent
  	int rc = -EOPNOTSUPP;
  #ifdef CONFIG_CIFS_XATTR
  	unsigned int xid;
- 	struct cifs_sb_info *cifs_sb;
+ 	struct super_block *sb = direntry->d_sb;
+ 	struct cifs_sb_info *cifs_sb = CIFS_SB(sb);
  	struct tcon_link *tlink;
  	struct cifs_tcon *pTcon;
- 	struct super_block *sb;
  	char *full_path;
  
++<<<<<<< HEAD
 +	if (direntry == NULL)
 +		return -EIO;
 +	if (d_really_is_negative(direntry))
 +		return -EIO;
 +	sb = d_inode(direntry)->i_sb;
 +	if (sb == NULL)
 +		return -EIO;
 +
 +	cifs_sb = CIFS_SB(sb);
++=======
++>>>>>>> 5fdccfef483d (cifs: kill more bogus checks in ->...xattr() methods)
  	tlink = cifs_sb_tlink(cifs_sb);
  	if (IS_ERR(tlink))
  		return PTR_ERR(tlink);
@@@ -238,21 -219,12 +243,24 @@@ ssize_t cifs_getxattr(struct dentry *di
  	ssize_t rc = -EOPNOTSUPP;
  #ifdef CONFIG_CIFS_XATTR
  	unsigned int xid;
- 	struct cifs_sb_info *cifs_sb;
+ 	struct super_block *sb = direntry->d_sb;
+ 	struct cifs_sb_info *cifs_sb = CIFS_SB(sb);
  	struct tcon_link *tlink;
  	struct cifs_tcon *pTcon;
- 	struct super_block *sb;
  	char *full_path;
  
++<<<<<<< HEAD
 +	if (direntry == NULL)
 +		return -EIO;
 +	if (d_really_is_negative(direntry))
 +		return -EIO;
 +	sb = d_inode(direntry)->i_sb;
 +	if (sb == NULL)
 +		return -EIO;
 +
 +	cifs_sb = CIFS_SB(sb);
++=======
++>>>>>>> 5fdccfef483d (cifs: kill more bogus checks in ->...xattr() methods)
  	tlink = cifs_sb_tlink(cifs_sb);
  	if (IS_ERR(tlink))
  		return PTR_ERR(tlink);
@@@ -374,21 -346,11 +382,23 @@@ ssize_t cifs_listxattr(struct dentry *d
  	ssize_t rc = -EOPNOTSUPP;
  #ifdef CONFIG_CIFS_XATTR
  	unsigned int xid;
- 	struct cifs_sb_info *cifs_sb;
+ 	struct cifs_sb_info *cifs_sb = CIFS_SB(direntry->d_sb);
  	struct tcon_link *tlink;
  	struct cifs_tcon *pTcon;
- 	struct super_block *sb;
  	char *full_path;
  
++<<<<<<< HEAD
 +	if (direntry == NULL)
 +		return -EIO;
 +	if (d_really_is_negative(direntry))
 +		return -EIO;
 +	sb = d_inode(direntry)->i_sb;
 +	if (sb == NULL)
 +		return -EIO;
 +
 +	cifs_sb = CIFS_SB(sb);
++=======
++>>>>>>> 5fdccfef483d (cifs: kill more bogus checks in ->...xattr() methods)
  	if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_NO_XATTR)
  		return -EOPNOTSUPP;
  
* Unmerged path fs/cifs/xattr.c
