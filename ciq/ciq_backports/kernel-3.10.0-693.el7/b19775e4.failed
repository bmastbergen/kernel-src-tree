scsi: qedi: Fix endpoint NULL panic during recovery.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] qedi: Fix endpoint NULL panic during recovery (Chad Dupuis) [1452748]
Rebuild_FUZZ: 92.78%
commit-author manish.rangankar@cavium.com <manish.rangankar@cavium.com>
commit b19775e4785996503b106e59d9d3a8839e677afd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b19775e4.failed

	Signed-off-by: Manish Rangankar <manish.rangankar@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit b19775e4785996503b106e59d9d3a8839e677afd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qedi/qedi_fw.c
diff --cc drivers/scsi/qedi/qedi_fw.c
index c9f0ef4e11b3,8bc7ee1a8ca8..000000000000
--- a/drivers/scsi/qedi/qedi_fw.c
+++ b/drivers/scsi/qedi/qedi_fw.c
@@@ -1533,47 -1476,48 +1533,53 @@@ ldel_exit
  static int qedi_send_iscsi_tmf(struct qedi_conn *qedi_conn,
  			       struct iscsi_task *mtask)
  {
 -	struct iscsi_tmf_request_hdr tmf_pdu_header;
 -	struct iscsi_task_params task_params;
 +	struct iscsi_conn *conn = qedi_conn->cls_conn->dd_data;
  	struct qedi_ctx *qedi = qedi_conn->qedi;
  	struct iscsi_task_context *fw_task_ctx;
 -	struct iscsi_conn *conn = qedi_conn->cls_conn->dd_data;
 -	struct iscsi_task *ctask;
 -	struct iscsi_tm *tmf_hdr;
 +	struct iscsi_tmf_request_hdr *fw_tmf_request;
 +	struct iscsi_sge *single_sge;
  	struct qedi_cmd *qedi_cmd;
  	struct qedi_cmd *cmd;
 -	struct qedi_endpoint *ep;
 -	u32 scsi_lun[2];
 -	s16 tid = 0;
 -	u16 sq_idx = 0;
 -	int rval = 0;
 +	struct iscsi_task *ctask;
 +	struct iscsi_tm *tmf_hdr;
 +	struct iscsi_sge *req_sge;
 +	struct iscsi_sge *resp_sge;
 +	u32 lun[2];
 +	s16 tid = 0, ptu_invalidate = 0;
  
 -	tmf_hdr = (struct iscsi_tm *)mtask->hdr;
 +	req_sge = (struct iscsi_sge *)qedi_conn->gen_pdu.req_bd_tbl;
 +	resp_sge = (struct iscsi_sge *)qedi_conn->gen_pdu.resp_bd_tbl;
  	qedi_cmd = (struct qedi_cmd *)mtask->dd_data;
++<<<<<<< HEAD
 +	tmf_hdr = (struct iscsi_tm *)mtask->hdr;
++=======
+ 	ep = qedi_conn->ep;
+ 	if (!ep)
+ 		return -ENODEV;
++>>>>>>> b19775e47859 (scsi: qedi: Fix endpoint NULL panic during recovery.)
  
 -	tid = qedi_get_task_idx(qedi);
 -	if (tid == -1)
 -		return -ENOMEM;
 +	tid = qedi_cmd->task_id;
 +	qedi_update_itt_map(qedi, tid, mtask->itt, qedi_cmd);
  
 -	fw_task_ctx =
 -	     (struct iscsi_task_context *)qedi_get_task_mem(&qedi->tasks, tid);
 +	fw_task_ctx = qedi_get_task_mem(&qedi->tasks, tid);
  	memset(fw_task_ctx, 0, sizeof(struct iscsi_task_context));
  
 -	qedi_cmd->task_id = tid;
 +	fw_tmf_request = &fw_task_ctx->ystorm_st_context.pdu_hdr.tmf_request;
 +	fw_tmf_request->itt = qedi_set_itt(tid, get_itt(mtask->itt));
 +	fw_tmf_request->cmd_sn = be32_to_cpu(tmf_hdr->cmdsn);
  
 -	memset(&task_params, 0, sizeof(task_params));
 -	memset(&tmf_pdu_header, 0, sizeof(tmf_pdu_header));
 +	memcpy(lun, &tmf_hdr->lun, sizeof(struct scsi_lun));
 +	fw_tmf_request->lun.lo = be32_to_cpu(lun[0]);
 +	fw_tmf_request->lun.hi = be32_to_cpu(lun[1]);
  
 -	/* Update header info */
 -	qedi_update_itt_map(qedi, tid, mtask->itt, qedi_cmd);
 -	tmf_pdu_header.itt = qedi_set_itt(tid, get_itt(mtask->itt));
 -	tmf_pdu_header.cmd_sn = be32_to_cpu(tmf_hdr->cmdsn);
 -
 -	memcpy(scsi_lun, &tmf_hdr->lun, sizeof(struct scsi_lun));
 -	tmf_pdu_header.lun.lo = be32_to_cpu(scsi_lun[0]);
 -	tmf_pdu_header.lun.hi = be32_to_cpu(scsi_lun[1]);
 +	if (qedi->tid_reuse_count[tid] == QEDI_MAX_TASK_NUM) {
 +		ptu_invalidate = 1;
 +		qedi->tid_reuse_count[tid] = 0;
 +	}
 +	fw_task_ctx->ystorm_st_context.state.reuse_count =
 +						qedi->tid_reuse_count[tid];
 +	fw_task_ctx->mstorm_st_context.reuse_count =
 +						qedi->tid_reuse_count[tid]++;
  
  	if ((tmf_hdr->flags & ISCSI_FLAG_TM_FUNC_MASK) ==
  	     ISCSI_TM_FUNC_ABORT_TASK) {
* Unmerged path drivers/scsi/qedi/qedi_fw.c
