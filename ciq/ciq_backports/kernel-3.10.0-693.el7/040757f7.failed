ucount: Remove the atomicity from ucount->count

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 040757f738e13caaa9c5078bca79aa97e11dde88
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/040757f7.failed

Always increment/decrement ucount->count under the ucounts_lock.  The
increments are there already and moving the decrements there means the
locking logic of the code is simpler.  This simplification in the
locking logic fixes a race between put_ucounts and get_ucounts that
could result in a use-after-free because the count could go zero then
be found by get_ucounts and then be freed by put_ucounts.

A bug presumably this one was found by a combination of syzkaller and
KASAN.  JongWhan Kim reported the syzkaller failure and Dmitry Vyukov
spotted the race in the code.

	Cc: stable@vger.kernel.org
Fixes: f6b2db1a3e8d ("userns: Make the count of user namespaces per user")
	Reported-by: JongHwan Kim <zzoru007@gmail.com>
	Reported-by: Dmitry Vyukov <dvyukov@google.com>
	Reviewed-by: Andrei Vagin <avagin@gmail.com>
	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
(cherry picked from commit 040757f738e13caaa9c5078bca79aa97e11dde88)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/user_namespace.h
#	kernel/ucount.c
diff --cc include/linux/user_namespace.h
index 9b176275291d,32354b4b4b2b..000000000000
--- a/include/linux/user_namespace.h
+++ b/include/linux/user_namespace.h
@@@ -39,8 -59,21 +39,26 @@@ struct user_namespace 
  	struct key		*persistent_keyring_register;
  	struct rw_semaphore	persistent_keyring_register_sem;
  #endif
++<<<<<<< HEAD
 +	RH_KABI_EXTEND(int level)
 +	RH_KABI_EXTEND(unsigned long flags)
++=======
+ 	struct work_struct	work;
+ #ifdef CONFIG_SYSCTL
+ 	struct ctl_table_set	set;
+ 	struct ctl_table_header *sysctls;
+ #endif
+ 	struct ucounts		*ucounts;
+ 	int ucount_max[UCOUNT_COUNTS];
+ };
+ 
+ struct ucounts {
+ 	struct hlist_node node;
+ 	struct user_namespace *ns;
+ 	kuid_t uid;
+ 	int count;
+ 	atomic_t ucount[UCOUNT_COUNTS];
++>>>>>>> 040757f738e1 (ucount: Remove the atomicity from ucount->count)
  };
  
  extern struct user_namespace init_user_ns;
* Unmerged path kernel/ucount.c
* Unmerged path include/linux/user_namespace.h
* Unmerged path kernel/ucount.c
