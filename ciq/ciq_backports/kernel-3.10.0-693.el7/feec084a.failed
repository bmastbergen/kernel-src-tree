tun: use symmetric hash

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jason Wang <jasowang@redhat.com>
commit feec084a7cf49adb4a87bea9867fb2ba99821f48
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/feec084a.failed

Tun actually expects a symmetric hash for queue selecting to work
correctly, otherwise packets belongs to a single flow may be
redirected to the wrong queue. So this patch switch to use
__skb_get_hash_symmetric().

	Signed-off-by: Jason Wang <jasowang@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit feec084a7cf49adb4a87bea9867fb2ba99821f48)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/tun.c
diff --cc drivers/net/tun.c
index 30139619c52b,fe660e524af9..000000000000
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@@ -447,12 -465,13 +447,12 @@@ static u16 tun_select_queue(struct net_
  	rcu_read_lock();
  	numqueues = ACCESS_ONCE(tun->numqueues);
  
- 	txq = skb_get_hash(skb);
+ 	txq = __skb_get_hash_symmetric(skb);
  	if (txq) {
  		e = tun_flow_find(&tun->flows[tun_hashfn(txq)], txq);
 -		if (e) {
 -			tun_flow_save_rps_rxhash(e, txq);
 +		if (e)
  			txq = e->queue_index;
 -		} else
 +		else
  			/* use multiply and shift instead of expensive divide */
  			txq = ((u64)txq * numqueues) >> 32;
  	} else if (likely(skb_rx_queue_recorded(skb))) {
@@@ -813,6 -860,24 +813,27 @@@ static netdev_tx_t tun_net_xmit(struct 
  	if (txq >= numqueues)
  		goto drop;
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_RPS
+ 	if (numqueues == 1 && static_key_false(&rps_needed)) {
+ 		/* Select queue was not called for the skbuff, so we extract the
+ 		 * RPS hash and save it into the flow_table here.
+ 		 */
+ 		__u32 rxhash;
+ 
+ 		rxhash = __skb_get_hash_symmetric(skb);
+ 		if (rxhash) {
+ 			struct tun_flow_entry *e;
+ 			e = tun_flow_find(&tun->flows[tun_hashfn(rxhash)],
+ 					rxhash);
+ 			if (e)
+ 				tun_flow_save_rps_rxhash(e, rxhash);
+ 		}
+ 	}
+ #endif
+ 
++>>>>>>> feec084a7cf4 (tun: use symmetric hash)
  	tun_debug(KERN_INFO, tun, "tun_net_xmit %d\n", skb->len);
  
  	BUG_ON(!tfile);
@@@ -1383,11 -1334,9 +1404,11 @@@ static ssize_t tun_get_user(struct tun_
  	skb_reset_network_header(skb);
  	skb_probe_transport_header(skb, 0);
  
- 	rxhash = skb_get_hash(skb);
+ 	rxhash = __skb_get_hash_symmetric(skb);
  #ifndef CONFIG_4KSTACKS
 -	tun_rx_batched(tun, tfile, skb, more);
 +	local_bh_disable();
 +	netif_receive_skb(skb);
 +	local_bh_enable();
  #else
  	netif_rx_ni(skb);
  #endif
* Unmerged path drivers/net/tun.c
