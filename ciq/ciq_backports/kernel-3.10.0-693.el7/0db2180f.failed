dell-smbios: rename dell_smi_error() to dell_smbios_error()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Michał Kępień <kernel@kempniu.pl>
commit 0db2180fce6ada548f03c4f456ba2113753cdba9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0db2180f.failed

As dell_smi_error() is exported by dell-smbios, its prefix should be
consistent with other exported symbols, so change function name to
dell_smbios_error().

	Signed-off-by: Michał Kępień <kernel@kempniu.pl>
	Reviewed-by: Pali Rohár <pali.rohar@gmail.com>
	Signed-off-by: Darren Hart <dvhart@linux.intel.com>
(cherry picked from commit 0db2180fce6ada548f03c4f456ba2113753cdba9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/dell-laptop.c
#	drivers/platform/x86/dell-smbios.c
#	drivers/platform/x86/dell-smbios.h
diff --cc drivers/platform/x86/dell-laptop.c
index 87688ae0318c,2c2f02b2e08a..000000000000
--- a/drivers/platform/x86/dell-laptop.c
+++ b/drivers/platform/x86/dell-laptop.c
@@@ -584,8 -432,8 +584,13 @@@ static int dell_rfkill_set(void *data, 
  	ret = buffer->output[0];
  
   out:
++<<<<<<< HEAD
 +	release_buffer();
 +	return dell_smi_error(ret);
++=======
+ 	dell_smbios_release_buffer();
+ 	return dell_smbios_error(ret);
++>>>>>>> 0db2180fce6a (dell-smbios: rename dell_smi_error() to dell_smbios_error())
  }
  
  /* Must be called with the buffer held */
@@@ -1017,35 -872,36 +1022,35 @@@ static int dell_send_intensity(struct b
  	buffer->input[1] = bd->props.brightness;
  
  	if (power_supply_is_system_supplied() > 0)
 -		dell_smbios_send_request(1, 2);
 +		dell_send_request(buffer, 1, 2);
  	else
 -		dell_smbios_send_request(1, 1);
 +		dell_send_request(buffer, 1, 1);
  
- 	ret = dell_smi_error(buffer->output[0]);
+ 	ret = dell_smbios_error(buffer->output[0]);
  
 -	dell_smbios_release_buffer();
 +	release_buffer();
  	return ret;
  }
  
  static int dell_get_intensity(struct backlight_device *bd)
  {
 -	struct calling_interface_buffer *buffer;
 -	struct calling_interface_token *token;
 +	int token;
  	int ret;
  
 -	token = dell_smbios_find_token(BRIGHTNESS_TOKEN);
 -	if (!token)
 +	token = find_token_location(BRIGHTNESS_TOKEN);
 +	if (token == -1)
  		return -ENODEV;
  
 -	buffer = dell_smbios_get_buffer();
 -	buffer->input[0] = token->location;
 +	get_buffer();
 +	buffer->input[0] = token;
  
  	if (power_supply_is_system_supplied() > 0)
 -		dell_smbios_send_request(0, 2);
 +		dell_send_request(buffer, 0, 2);
  	else
 -		dell_smbios_send_request(0, 1);
 +		dell_send_request(buffer, 0, 1);
  
  	if (buffer->output[0])
- 		ret = dell_smi_error(buffer->output[0]);
+ 		ret = dell_smbios_error(buffer->output[0]);
  	else
  		ret = buffer->output[1];
  
@@@ -1423,11 -1282,11 +1428,11 @@@ static int kbd_set_state(struct kbd_sta
  	buffer->input[1] |= (state->timeout_unit & 0x3) << 30;
  	buffer->input[2] = state->als_setting & 0xFF;
  	buffer->input[2] |= (state->level & 0xFF) << 16;
 -	dell_smbios_send_request(4, 11);
 +	dell_send_request(buffer, 4, 11);
  	ret = buffer->output[0];
 -	dell_smbios_release_buffer();
 +	release_buffer();
  
- 	return dell_smi_error(ret);
+ 	return dell_smbios_error(ret);
  }
  
  static int kbd_set_state_safe(struct kbd_state *state, struct kbd_state *old)
@@@ -1458,18 -1318,18 +1463,18 @@@ static int kbd_set_token_bit(u8 bit
  	if (bit >= ARRAY_SIZE(kbd_tokens))
  		return -EINVAL;
  
 -	token = dell_smbios_find_token(kbd_tokens[bit]);
 -	if (!token)
 +	id = find_token_id(kbd_tokens[bit]);
 +	if (id == -1)
  		return -EINVAL;
  
 -	buffer = dell_smbios_get_buffer();
 -	buffer->input[0] = token->location;
 -	buffer->input[1] = token->value;
 -	dell_smbios_send_request(1, 0);
 +	get_buffer();
 +	buffer->input[0] = da_tokens[id].location;
 +	buffer->input[1] = da_tokens[id].value;
 +	dell_send_request(buffer, 1, 0);
  	ret = buffer->output[0];
 -	dell_smbios_release_buffer();
 +	release_buffer();
  
- 	return dell_smi_error(ret);
+ 	return dell_smbios_error(ret);
  }
  
  static int kbd_get_token_bit(u8 bit)
@@@ -1481,21 -1342,21 +1486,21 @@@
  	if (bit >= ARRAY_SIZE(kbd_tokens))
  		return -EINVAL;
  
 -	token = dell_smbios_find_token(kbd_tokens[bit]);
 -	if (!token)
 +	id = find_token_id(kbd_tokens[bit]);
 +	if (id == -1)
  		return -EINVAL;
  
 -	buffer = dell_smbios_get_buffer();
 -	buffer->input[0] = token->location;
 -	dell_smbios_send_request(0, 0);
 +	get_buffer();
 +	buffer->input[0] = da_tokens[id].location;
 +	dell_send_request(buffer, 0, 0);
  	ret = buffer->output[0];
  	val = buffer->output[1];
 -	dell_smbios_release_buffer();
 +	release_buffer();
  
  	if (ret)
- 		return dell_smi_error(ret);
+ 		return dell_smbios_error(ret);
  
 -	return (val == token->value);
 +	return (val == da_tokens[id].value);
  }
  
  static int kbd_get_first_active_token_bit(void)
* Unmerged path drivers/platform/x86/dell-smbios.c
* Unmerged path drivers/platform/x86/dell-smbios.h
* Unmerged path drivers/platform/x86/dell-laptop.c
* Unmerged path drivers/platform/x86/dell-smbios.c
* Unmerged path drivers/platform/x86/dell-smbios.h
