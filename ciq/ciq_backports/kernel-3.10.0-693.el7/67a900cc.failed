flow_dissector: introduce support for Ethernet addresses

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Pirko <jiri@resnulli.us>
commit 67a900cc0436d74e7ff89042371760def087680d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/67a900cc.failed

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 67a900cc0436d74e7ff89042371760def087680d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/flow_dissector.h
#	net/core/flow_dissector.c
diff --cc net/core/flow_dissector.c
index fbf58a98e819,7a0b391114a5..000000000000
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@@ -13,7 -13,9 +13,13 @@@
  #include <linux/if_tunnel.h>
  #include <linux/if_pppox.h>
  #include <linux/ppp_defs.h>
++<<<<<<< HEAD
 +#include <net/flow_keys.h>
++=======
+ #include <linux/stddef.h>
+ #include <linux/if_ether.h>
+ #include <net/flow_dissector.h>
++>>>>>>> 67a900cc0436 (flow_dissector: introduce support for Ethernet addresses)
  #include <scsi/fc/fc_fcoe.h>
  
  static bool skb_flow_dissector_uses_key(struct flow_dissector *flow_dissector,
@@@ -131,11 -132,27 +137,22 @@@ bool __skb_flow_dissect(const struct sk
  		hlen = skb_headlen(skb);
  	}
  
 -	/* It is ensured by skb_flow_dissector_init() that basic key will
 -	 * be always present.
 -	 */
 -	key_basic = skb_flow_dissector_target(flow_dissector,
 -					      FLOW_DISSECTOR_KEY_BASIC,
 -					      target_container);
 +	memset(flow, 0, sizeof(*flow));
  
+ 	if (skb_flow_dissector_uses_key(flow_dissector,
+ 					FLOW_DISSECTOR_KEY_ETH_ADDRS)) {
+ 		struct ethhdr *eth = eth_hdr(skb);
+ 		struct flow_dissector_key_eth_addrs *key_eth_addrs;
+ 
+ 		key_eth_addrs = skb_flow_dissector_target(flow_dissector,
+ 							  FLOW_DISSECTOR_KEY_ETH_ADDRS,
+ 							  target_container);
+ 		memcpy(key_eth_addrs, &eth->h_dest, sizeof(*key_eth_addrs));
+ 	}
+ 
  again:
  	switch (proto) {
 -	case htons(ETH_P_IP): {
 +	case __constant_htons(ETH_P_IP): {
  		const struct iphdr *iph;
  		struct iphdr _iph;
  ip:
* Unmerged path include/net/flow_dissector.h
* Unmerged path include/net/flow_dissector.h
* Unmerged path net/core/flow_dissector.c
