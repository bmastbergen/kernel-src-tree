net_sched: act_gact: use a separate packet counters for gact_determ()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: act_gact: use a separate packet counters for gact_determ() (Ivan Vecera) [1428588]
Rebuild_FUZZ: 97.01%
commit-author Eric Dumazet <edumazet@google.com>
commit cc6510a9504fd3c03d76bd68d99653148342eecc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/cc6510a9.failed

Second step for gact RCU operation :

We want to get rid of the spinlock protecting gact operations.
Stats (packets/bytes) will soon be per cpu.

gact_determ() would not work without a central packet counter,
so lets add it for this mode.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Cc: Alexei Starovoitov <ast@plumgrid.com>
	Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Acked-by: John Fastabend <john.fastabend@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cc6510a9504fd3c03d76bd68d99653148342eecc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_gact.c
diff --cc net/sched/act_gact.c
index eb9ba60ebab4,2f9bec584b3f..000000000000
--- a/net/sched/act_gact.c
+++ b/net/sched/act_gact.c
@@@ -44,7 -36,10 +44,14 @@@ static int gact_net_rand(struct tcf_gac
  
  static int gact_determ(struct tcf_gact *gact)
  {
++<<<<<<< HEAD
 +	if (!gact->tcfg_pval || gact->tcf_bstats.packets % gact->tcfg_pval)
++=======
+ 	u32 pack = atomic_inc_return(&gact->packets);
+ 
+ 	smp_rmb(); /* coupled with smp_wmb() in tcf_gact_init() */
+ 	if (pack % gact->tcfg_pval)
++>>>>>>> cc6510a9504f (net_sched: act_gact: use a separate packet counters for gact_determ())
  		return gact->tcf_action;
  	return gact->tcfg_paction;
  }
diff --git a/include/net/tc_act/tc_gact.h b/include/net/tc_act/tc_gact.h
index 9e3f6767b80e..585e12117cc3 100644
--- a/include/net/tc_act/tc_gact.h
+++ b/include/net/tc_act/tc_gact.h
@@ -6,9 +6,10 @@
 struct tcf_gact {
 	struct tcf_common	common;
 #ifdef CONFIG_GACT_PROB
-        u16			tcfg_ptype;
-        u16			tcfg_pval;
-        int			tcfg_paction;
+	u16			tcfg_ptype;
+	u16			tcfg_pval;
+	int			tcfg_paction;
+	atomic_t		packets;
 #endif
 };
 #define to_gact(pc) \
* Unmerged path net/sched/act_gact.c
