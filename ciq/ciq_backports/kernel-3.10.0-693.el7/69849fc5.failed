perf hists: Move sort__has_dso into struct perf_hpp_list

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 69849fc5d2119799509026df7a6fd5ffe5a578b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/69849fc5.failed

Now we have sort dimensions private for struct hists, we need to make
dimension booleans hists specific as well.

Moving sort__has_dso into struct perf_hpp_list.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1462276488-26683-5-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 69849fc5d2119799509026df7a6fd5ffe5a578b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.h
#	tools/perf/util/sort.c
#	tools/perf/util/sort.h
diff --cc tools/perf/util/hist.h
index ec76e6bef916,4302f34f36ae..000000000000
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@@ -242,6 -242,9 +242,12 @@@ struct perf_hpp_list 
  	struct list_head sorts;
  
  	int need_collapse;
++<<<<<<< HEAD
++=======
+ 	int parent;
+ 	int sym;
+ 	int dso;
++>>>>>>> 69849fc5d211 (perf hists: Move sort__has_dso into struct perf_hpp_list)
  };
  
  extern struct perf_hpp_list perf_hpp_list;
diff --cc tools/perf/util/sort.c
index 331b7cc8c0d0,2446c39b5fa6..000000000000
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@@ -21,9 -21,6 +21,12 @@@ const char	*sort_order
  const char	*field_order;
  regex_t		ignore_callees_regex;
  int		have_ignore_callees = 0;
++<<<<<<< HEAD
 +int		sort__has_parent = 0;
 +int		sort__has_sym = 0;
 +int		sort__has_dso = 0;
++=======
++>>>>>>> 69849fc5d211 (perf hists: Move sort__has_dso into struct perf_hpp_list)
  int		sort__has_socket = 0;
  int		sort__has_thread = 0;
  int		sort__has_comm = 0;
@@@ -2749,9 -2743,9 +2752,15 @@@ int setup_sorting(struct perf_evlist *e
  void reset_output_field(void)
  {
  	perf_hpp_list.need_collapse = 0;
++<<<<<<< HEAD
 +	sort__has_parent = 0;
 +	sort__has_sym = 0;
 +	sort__has_dso = 0;
++=======
+ 	perf_hpp_list.parent = 0;
+ 	perf_hpp_list.sym = 0;
+ 	perf_hpp_list.dso = 0;
++>>>>>>> 69849fc5d211 (perf hists: Move sort__has_dso into struct perf_hpp_list)
  
  	field_order = NULL;
  	sort_order = NULL;
diff --cc tools/perf/util/sort.h
index 2e1d27326954,87d4addf92b5..000000000000
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@@ -31,9 -31,6 +31,12 @@@ extern const char *parent_pattern
  extern const char default_sort_order[];
  extern regex_t ignore_callees_regex;
  extern int have_ignore_callees;
++<<<<<<< HEAD
 +extern int sort__has_dso;
 +extern int sort__has_parent;
 +extern int sort__has_sym;
++=======
++>>>>>>> 69849fc5d211 (perf hists: Move sort__has_dso into struct perf_hpp_list)
  extern int sort__has_socket;
  extern int sort__has_thread;
  extern int sort__has_comm;
diff --git a/tools/perf/ui/browsers/hists.c b/tools/perf/ui/browsers/hists.c
index 6a4681932ba5..f2dbae5f7d6f 100644
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@ -2380,7 +2380,7 @@ do_zoom_dso(struct hist_browser *browser, struct popup_action *act)
 {
 	struct map *map = act->ms.map;
 
-	if (!sort__has_dso || map == NULL)
+	if (!hists__has(browser->hists, dso) || map == NULL)
 		return 0;
 
 	if (browser->hists->dso_filter) {
@@ -2407,7 +2407,7 @@ static int
 add_dso_opt(struct hist_browser *browser, struct popup_action *act,
 	    char **optstr, struct map *map)
 {
-	if (!sort__has_dso || map == NULL)
+	if (!hists__has(browser->hists, dso) || map == NULL)
 		return 0;
 
 	if (asprintf(optstr, "Zoom %s %s DSO",
@@ -2429,10 +2429,10 @@ do_browse_map(struct hist_browser *browser __maybe_unused,
 }
 
 static int
-add_map_opt(struct hist_browser *browser __maybe_unused,
+add_map_opt(struct hist_browser *browser,
 	    struct popup_action *act, char **optstr, struct map *map)
 {
-	if (!sort__has_dso || map == NULL)
+	if (!hists__has(browser->hists, dso) || map == NULL)
 		return 0;
 
 	if (asprintf(optstr, "Browse map details") < 0)
* Unmerged path tools/perf/util/hist.h
* Unmerged path tools/perf/util/sort.c
* Unmerged path tools/perf/util/sort.h
