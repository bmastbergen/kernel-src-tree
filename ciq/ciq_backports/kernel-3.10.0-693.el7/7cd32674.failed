dm bufio: remove dm_bufio_cond_resched()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit 7cd326747f46ffe1c7bff5682e97dfbcb98990ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7cd32674.failed

Use cond_resched() like everybody else.

Mikulas explained why dm_bufio_cond_resched() was introduced to begin
with (hopefully cond_resched can be improved accordingly) here:
https://www.redhat.com/archives/dm-devel/2016-September/msg00112.html

	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Mikulas Patocka <mpatocka@redhat.com>
	Cc: Mike Snitzer <snitzer@redhat.com>
	Cc: Alasdair Kergon <agk@redhat.com>
	Acked-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com> # added last comment in header
(cherry picked from commit 7cd326747f46ffe1c7bff5682e97dfbcb98990ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-bufio.c
diff --cc drivers/md/dm-bufio.c
index 7d2d56864e4e,27f4a802f83c..000000000000
--- a/drivers/md/dm-bufio.c
+++ b/drivers/md/dm-bufio.c
@@@ -1562,22 -1557,23 +1549,27 @@@ static void __scan(struct dm_bufio_clie
  
  	for (l = 0; l < LIST_SIZE; l++) {
  		list_for_each_entry_safe_reverse(b, tmp, &c->lru[l], lru_list) {
 -			if (__try_evict_buffer(b, gfp_mask))
 +			if (__try_evict_buffer(b, sc->gfp_mask))
  				freed++;
  			if (!--nr_to_scan || ((count - freed) <= retain_target))
++<<<<<<< HEAD
 +				return;
 +			dm_bufio_cond_resched();
++=======
+ 				return freed;
+ 			cond_resched();
++>>>>>>> 7cd326747f46 (dm bufio: remove dm_bufio_cond_resched())
  		}
  	}
 -	return freed;
  }
  
 -static unsigned long
 -dm_bufio_shrink_scan(struct shrinker *shrink, struct shrink_control *sc)
 +static int shrink(struct shrinker *shrinker, struct shrink_control *sc)
  {
 -	struct dm_bufio_client *c;
 -	unsigned long freed;
 +	struct dm_bufio_client *c =
 +	    container_of(shrinker, struct dm_bufio_client, shrinker);
 +	unsigned long r;
 +	unsigned long nr_to_scan = sc->nr_to_scan;
  
 -	c = container_of(shrink, struct dm_bufio_client, shrinker);
  	if (sc->gfp_mask & __GFP_FS)
  		dm_bufio_lock(c);
  	else if (!dm_bufio_trylock(c))
* Unmerged path drivers/md/dm-bufio.c
