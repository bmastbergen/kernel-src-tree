hv_netvsc: make recording RSS hash depend on feature flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.15.2.el7
commit-author Stephen Hemminger <sthemmin@microsoft.com>
commit 6f3aeb1ba05d41320e6cf9a60f698d9c4e44348e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.15.2.el7/6f3aeb1b.failed

The recording of RSS hash should be controlled by NETIF_F_RXHASH.

Fixes: 1fac7ca4e63b ("hv_netvsc: record hardware hash in skb")
	Suggested-by: Eric Dumazet <eric.dumazet@gmail.com>
	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Reviewed-by: Michael Kelley <mikelley@microsoft.com>
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
(cherry picked from commit 6f3aeb1ba05d41320e6cf9a60f698d9c4e44348e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/hyperv_net.h
#	drivers/net/hyperv/rndis_filter.c
diff --cc drivers/net/hyperv/hyperv_net.h
index d7d0979b725b,250bd90627a5..000000000000
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@@ -835,7 -823,8 +835,12 @@@ struct nvsp_message 
  
  #define NETVSC_SUPPORTED_HW_FEATURES (NETIF_F_RXCSUM | NETIF_F_IP_CSUM | \
  				      NETIF_F_TSO | NETIF_F_IPV6_CSUM | \
++<<<<<<< HEAD
 +				      NETIF_F_TSO6 | NETIF_F_LRO)
++=======
+ 				      NETIF_F_TSO6 | NETIF_F_LRO | \
+ 				      NETIF_F_SG | NETIF_F_RXHASH)
++>>>>>>> 6f3aeb1ba05d (hv_netvsc: make recording RSS hash depend on feature flag)
  
  #define VRSS_SEND_TAB_SIZE 16  /* must be power of 2 */
  #define VRSS_CHANNEL_MAX 64
diff --cc drivers/net/hyperv/rndis_filter.c
index 39704d7e851a,206b4e77eaf0..000000000000
--- a/drivers/net/hyperv/rndis_filter.c
+++ b/drivers/net/hyperv/rndis_filter.c
@@@ -1206,6 -1213,8 +1206,11 @@@ static int rndis_netdev_set_hwcaps(stru
  
  	/* Compute tx offload settings based on hw capabilities */
  	net->hw_features |= NETIF_F_RXCSUM;
++<<<<<<< HEAD
++=======
+ 	net->hw_features |= NETIF_F_SG;
+ 	net->hw_features |= NETIF_F_RXHASH;
++>>>>>>> 6f3aeb1ba05d (hv_netvsc: make recording RSS hash depend on feature flag)
  
  	if ((hwcaps.csum.ip4_txcsum & NDIS_TXCSUM_ALL_TCP4) == NDIS_TXCSUM_ALL_TCP4) {
  		/* Can checksum TCP */
* Unmerged path drivers/net/hyperv/hyperv_net.h
diff --git a/drivers/net/hyperv/netvsc_drv.c b/drivers/net/hyperv/netvsc_drv.c
index 98f8a1707eca..d657ce2c8cea 100644
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@ -818,7 +818,7 @@ static struct sk_buff *netvsc_alloc_recv_skb(struct net_device *net,
 			skb->ip_summed = CHECKSUM_UNNECESSARY;
 	}
 
-	if (hash_info)
+	if (hash_info && (net->features & NETIF_F_RXHASH))
 		skb_set_hash(skb, *hash_info, PKT_HASH_TYPE_L4);
 
 	if (vlan) {
* Unmerged path drivers/net/hyperv/rndis_filter.c
