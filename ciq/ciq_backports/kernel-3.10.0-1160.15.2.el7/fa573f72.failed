block/rsxx: use generic io stats accounting functions to simplify io stat accounting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.15.2.el7
commit-author Gu Zheng <guz.fnst@cn.fujitsu.com>
commit fa573f72790c2c2b9bfd758c5d33959af4a39915
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.15.2.el7/fa573f72.failed

Use generic io stats accounting help functions (generic_{start,end}_io_acct)
to simplify io stat accounting.

	Signed-off-by: Gu Zheng <guz.fnst@cn.fujitsu.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit fa573f72790c2c2b9bfd758c5d33959af4a39915)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/rsxx/dev.c
diff --cc drivers/block/rsxx/dev.c
index 7f5426009d76,ac8c62cb4875..000000000000
--- a/drivers/block/rsxx/dev.c
+++ b/drivers/block/rsxx/dev.c
@@@ -112,37 -112,16 +112,47 @@@ static const struct block_device_operat
  
  static void disk_stats_start(struct rsxx_cardinfo *card, struct bio *bio)
  {
++<<<<<<< HEAD
 +	struct hd_struct *part0 = &card->gendisk->part0;
 +	int rw = bio_data_dir(bio);
 +	int cpu;
 +
 +	cpu = part_stat_lock();
 +
 +	part_round_stats(card->queue, cpu, part0);
 +	part_inc_in_flight(card->queue, part0, rw);
 +
 +	part_stat_unlock();
++=======
+ 	generic_start_io_acct(bio_data_dir(bio), bio_sectors(bio),
+ 			     &card->gendisk->part0);
++>>>>>>> fa573f72790c (block/rsxx: use generic io stats accounting functions to simplify io stat accounting)
  }
  
  static void disk_stats_complete(struct rsxx_cardinfo *card,
  				struct bio *bio,
  				unsigned long start_time)
  {
++<<<<<<< HEAD
 +	struct hd_struct *part0 = &card->gendisk->part0;
 +	unsigned long duration = jiffies - start_time;
 +	int rw = bio_data_dir(bio);
 +	int cpu;
 +
 +	cpu = part_stat_lock();
 +
 +	part_stat_add(cpu, part0, sectors[rw], bio_sectors(bio));
 +	part_stat_inc(cpu, part0, ios[rw]);
 +	part_stat_add(cpu, part0, ticks[rw], duration);
 +
 +	part_round_stats(card->queue, cpu, part0);
 +	part_dec_in_flight(card->queue, part0, rw);
 +
 +	part_stat_unlock();
++=======
+ 	generic_end_io_acct(bio_data_dir(bio), &card->gendisk->part0,
+ 			   start_time);
++>>>>>>> fa573f72790c (block/rsxx: use generic io stats accounting functions to simplify io stat accounting)
  }
  
  static void bio_dma_done_cb(struct rsxx_cardinfo *card,
* Unmerged path drivers/block/rsxx/dev.c
