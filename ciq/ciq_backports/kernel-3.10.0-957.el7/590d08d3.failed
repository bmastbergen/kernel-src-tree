SMB3: Fix endian warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Steve French <smfrench@gmail.com>
commit 590d08d3da45e9fed423b08ab38d71886c07abc8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/590d08d3.failed

Multi-dialect negotiate patch had a minor endian error.

	Signed-off-by: Steve French <smfrench@gmail.com>
	Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
CC: Stable <stable@vger.kernel.org> # 4.13+
(cherry picked from commit 590d08d3da45e9fed423b08ab38d71886c07abc8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/smb2pdu.c
diff --cc fs/cifs/smb2pdu.c
index 0f16f8aaa791,b4c58a1db1ae..000000000000
--- a/fs/cifs/smb2pdu.c
+++ b/fs/cifs/smb2pdu.c
@@@ -533,10 -549,37 +533,42 @@@ SMB2_negotiate(const unsigned int xid, 
  	} else if (rc != 0)
  		goto neg_exit;
  
++<<<<<<< HEAD
++=======
+ 	if (strcmp(ses->server->vals->version_string,
+ 		   SMB3ANY_VERSION_STRING) == 0) {
+ 		if (rsp->DialectRevision == cpu_to_le16(SMB20_PROT_ID)) {
+ 			cifs_dbg(VFS,
+ 				"SMB2 dialect returned but not requested\n");
+ 			return -EIO;
+ 		} else if (rsp->DialectRevision == cpu_to_le16(SMB21_PROT_ID)) {
+ 			cifs_dbg(VFS,
+ 				"SMB2.1 dialect returned but not requested\n");
+ 			return -EIO;
+ 		}
+ 	} else if (strcmp(ses->server->vals->version_string,
+ 		   SMBDEFAULT_VERSION_STRING) == 0) {
+ 		if (rsp->DialectRevision == cpu_to_le16(SMB20_PROT_ID)) {
+ 			cifs_dbg(VFS,
+ 				"SMB2 dialect returned but not requested\n");
+ 			return -EIO;
+ 		} else if (rsp->DialectRevision == cpu_to_le16(SMB21_PROT_ID)) {
+ 			/* ops set to 3.0 by default for default so update */
+ 			ses->server->ops = &smb21_operations;
+ 		}
+ 	} else if (le16_to_cpu(rsp->DialectRevision) !=
+ 				ses->server->vals->protocol_id) {
+ 		/* if requested single dialect ensure returned dialect matched */
+ 		cifs_dbg(VFS, "Illegal 0x%x dialect returned: not requested\n",
+ 			le16_to_cpu(rsp->DialectRevision));
+ 		return -EIO;
+ 	}
+ 
++>>>>>>> 590d08d3da45 (SMB3: Fix endian warning)
  	cifs_dbg(FYI, "mode 0x%x\n", rsp->SecurityMode);
  
 +	/* BB we may eventually want to match the negotiated vs. requested
 +	   dialect, even though we are only requesting one at a time */
  	if (rsp->DialectRevision == cpu_to_le16(SMB20_PROT_ID))
  		cifs_dbg(FYI, "negotiated smb2.0 dialect\n");
  	else if (rsp->DialectRevision == cpu_to_le16(SMB21_PROT_ID))
* Unmerged path fs/cifs/smb2pdu.c
