perf script: Allow creating per-event dump files

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit a14390fde64e862c4fe8b92ecb293ee4b12d5bfe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/a14390fd.failed

Introduce a new option to dump trace output to files named by the
monitored events and update perf-script documentation accordingly.

Shown below is output of perf script command with the newly introduced
option.

         $ perf record -e cycles -e cs -ag -- sleep 1
         $ perf script --per-event-dump
         $ ls
         perf.data.cycles.dump perf.data.cs.dump

Without per-event-dump support, drawing flamegraphs for different events
would require post processing to separate events. You can monitor only
one event at a time if you want to get flamegraphs for different events.
Using this option, you can get the trace output files named by the
monitored events, and could draw flamegraphs according to the event's
name.

Based-on-a-patch-by: yuzhoujian <yuzhoujian@didichuxing.com>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/1508921599-10832-3-git-send-email-yuzhoujian@didichuxing.com
Link: http://lkml.kernel.org/n/tip-8ngzsjdhgiovkupl3r5yy570@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit a14390fde64e862c4fe8b92ecb293ee4b12d5bfe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-script.c
diff --cc tools/perf/builtin-script.c
index d3f20cf9a358,fb5e49b3bc44..000000000000
--- a/tools/perf/builtin-script.c
+++ b/tools/perf/builtin-script.c
@@@ -1042,7 -1390,9 +1042,8 @@@ struct perf_script 
  	bool			show_task_events;
  	bool			show_mmap_events;
  	bool			show_switch_events;
 -	bool			show_namespace_events;
  	bool			allocated;
+ 	bool			per_event_dump;
  	struct cpu_map		*cpus;
  	struct thread_map	*threads;
  	int			name_width;
@@@ -1089,6 -1439,7 +1090,10 @@@ static void process_event(struct perf_s
  	struct thread *thread = al->thread;
  	struct perf_event_attr *attr = &evsel->attr;
  	unsigned int type = output_type(attr->type);
++<<<<<<< HEAD
++=======
+ 	FILE *fp = evsel->priv;
++>>>>>>> a14390fde64e (perf script: Allow creating per-event dump files)
  
  	if (output[type].fields == 0)
  		return;
@@@ -1505,9 -1952,19 +1556,17 @@@ static int __cmd_script(struct perf_scr
  	}
  	if (script->show_switch_events)
  		script->tool.context_switch = process_switch_event;
 -	if (script->show_namespace_events)
 -		script->tool.namespaces = process_namespaces_event;
  
+ 	if (perf_script__setup_per_event_dump(script)) {
+ 		pr_err("Couldn't create the per event dump files\n");
+ 		return -1;
+ 	}
+ 
  	ret = perf_session__process_events(script->session);
  
+ 	if (script->per_event_dump)
+ 		perf_script__fclose_per_event_dump(script);
+ 
  	if (debug_mode)
  		pr_err("Misordered timestamps: %" PRIu64 "\n", nr_unordered);
  
@@@ -2422,6 -2880,10 +2481,13 @@@ int cmd_script(int argc, const char **a
  		    "Show the mmap events"),
  	OPT_BOOLEAN('\0', "show-switch-events", &script.show_switch_events,
  		    "Show context switch events (if recorded)"),
++<<<<<<< HEAD
++=======
+ 	OPT_BOOLEAN('\0', "show-namespace-events", &script.show_namespace_events,
+ 		    "Show namespace events (if recorded)"),
+ 	OPT_BOOLEAN('\0', "per-event-dump", &script.per_event_dump,
+ 		    "Dump trace output to files named by the monitored events"),
++>>>>>>> a14390fde64e (perf script: Allow creating per-event dump files)
  	OPT_BOOLEAN('f', "force", &symbol_conf.force, "don't complain, do it"),
  	OPT_INTEGER(0, "max-blocks", &max_blocks,
  		    "Maximum number of code blocks to dump with brstackinsn"),
diff --git a/tools/perf/Documentation/perf-script.txt b/tools/perf/Documentation/perf-script.txt
index abcc2ace6726..f8befbc687ba 100644
--- a/tools/perf/Documentation/perf-script.txt
+++ b/tools/perf/Documentation/perf-script.txt
@@ -316,6 +316,10 @@ include::itrace.txt[]
 	Set the maximum number of program blocks to print with brstackasm for
 	each sample.
 
+--per-event-dump::
+	Create per event files with a "perf.data.EVENT.dump" name instead of
+        printing to stdout, useful, for instance, for generating flamegraphs.
+
 --inline::
 	If a callgraph address belongs to an inlined function, the inline stack
 	will be printed. Each entry has function name and file/line. Enabled by
* Unmerged path tools/perf/builtin-script.c
