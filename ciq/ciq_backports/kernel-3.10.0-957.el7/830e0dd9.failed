i40e: avoid overflow in i40e_ptp_adjfreq()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit 830e0dd9996c4644e42412aa6c46ed8f8eab0cca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/830e0dd9.failed

When operating at 1GbE, the base incval for the PTP clock is so large
that multiplying it by numbers close to the max_adj can overflow the
u64.

Rather than attempting to limit the max_adj to a value small enough to
avoid overflow, instead calculate the incvalue adjustment based on the
40GbE incvalue, and then multiply that by the scaling factor for the
link speed.

This sacrifices a small amount of precision in the adjustment but we
avoid erratic behavior of the clock due to the overflow caused if ppb is
very near the maximum adjustment.

	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 830e0dd9996c4644e42412aa6c46ed8f8eab0cca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_ptp.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_ptp.c
index d8456c381c99,aa3daec2049d..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_ptp.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_ptp.c
@@@ -129,10 -106,7 +129,14 @@@ static int i40e_ptp_adjfreq(struct ptp_
  		ppb = -ppb;
  	}
  
++<<<<<<< HEAD
 +	smp_mb(); /* Force any pending update before accessing. */
 +	adj = ACCESS_ONCE(pf->ptp_base_adj);
 +
 +	freq = adj;
++=======
+ 	freq = I40E_PTP_40GB_INCVAL;
++>>>>>>> 830e0dd9996c (i40e: avoid overflow in i40e_ptp_adjfreq())
  	freq *= ppb;
  	diff = div_u64(freq, 1000000000ULL);
  
@@@ -499,7 -489,7 +519,11 @@@ void i40e_ptp_set_increment(struct i40e
  	wr32(hw, I40E_PRTTSYN_INC_H, incval >> 32);
  
  	/* Update the base adjustement value. */
++<<<<<<< HEAD
 +	ACCESS_ONCE(pf->ptp_base_adj) = incval;
++=======
+ 	WRITE_ONCE(pf->ptp_adj_mult, mult);
++>>>>>>> 830e0dd9996c (i40e: avoid overflow in i40e_ptp_adjfreq())
  	smp_mb(); /* Force the above update. */
  }
  
diff --git a/drivers/net/ethernet/intel/i40e/i40e.h b/drivers/net/ethernet/intel/i40e/i40e.h
index 1d5305235e57..831dc9008f60 100644
--- a/drivers/net/ethernet/intel/i40e/i40e.h
+++ b/drivers/net/ethernet/intel/i40e/i40e.h
@@ -556,7 +556,7 @@ struct i40e_pf {
 	unsigned long ptp_tx_start;
 	struct hwtstamp_config tstamp_config;
 	struct mutex tmreg_lock; /* Used to protect the SYSTIME registers. */
-	u64 ptp_base_adj;
+	u32 ptp_adj_mult;
 	u32 tx_hwtstamp_timeouts;
 	u32 tx_hwtstamp_skipped;
 	u32 rx_hwtstamp_cleared;
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_ptp.c
