iio: Move generic buffer implementations to sub-directory

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [iio] Move generic buffer implementations to sub-directory (Tony Camuso) [1559170]
Rebuild_FUZZ: 95.41%
commit-author Lars-Peter Clausen <lars@metafoo.de>
commit 8548a63b37be4891e7972ba058b785d9468e8907
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/8548a63b.failed

For generic IIO trigger implementations we already have a sub-directory,
but the generic buffer implementations currently reside in the IIO
top-level directory. The main reason is that things have historically grown
into this form.

With more generic buffer implementations on its way now is the perfect time
to clean this up and introduce a sub-directory for generic buffer
implementations to avoid too much clutter in the top-level directory.

	Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
	Signed-off-by: Jonathan Cameron <jic23@kernel.org>
(cherry picked from commit 8548a63b37be4891e7972ba058b785d9468e8907)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/DocBook/iio.tmpl
#	drivers/iio/Kconfig
#	drivers/iio/Makefile
#	drivers/iio/buffer/industrialio-buffer-cb.c
#	drivers/iio/buffer_cb.c
#	drivers/iio/industrialio-buffer-cb.c
diff --cc drivers/iio/Kconfig
index 4445a10262c8,3c6c6e28a60a..000000000000
--- a/drivers/iio/Kconfig
+++ b/drivers/iio/Kconfig
@@@ -19,28 -19,7 +19,32 @@@ config IIO_BUFFE
  	  acquisition methods.
  
  if IIO_BUFFER
++<<<<<<< HEAD
 +
 +config IIO_BUFFER_CB
 +boolean "IIO callback buffer used for push in-kernel interfaces"
 +	help
 +	  Should be selected by any drivers that do-inkernel push
 +	  usage.  That is, those where the data is pushed to the consumer.
 +
 +config IIO_KFIFO_BUF
 +	tristate "Industrial I/O buffering based on kfifo"
 +	help
 +	  A simple fifo based on kfifo.  Use this if you want a fifo
 +	  rather than a ring buffer. Note that this currently provides
 +	  no buffer events so it is up to userspace to work out how
 +	  often to read from the buffer.
 +
 +config IIO_TRIGGERED_BUFFER
 +	tristate
 +	select IIO_TRIGGER
 +	select IIO_KFIFO_BUF
 +	help
 +	  Provides helper functions for setting up triggered buffers.
 +
++=======
+ 	source "drivers/iio/buffer/Kconfig"
++>>>>>>> 8548a63b37be (iio: Move generic buffer implementations to sub-directory)
  endif # IIO_BUFFER
  
  config IIO_TRIGGER
diff --cc drivers/iio/Makefile
index 7a3866c2d2a1,7ddb988338ec..000000000000
--- a/drivers/iio/Makefile
+++ b/drivers/iio/Makefile
@@@ -6,11 -6,7 +6,14 @@@ obj-$(CONFIG_IIO) += industrialio.
  industrialio-y := industrialio-core.o industrialio-event.o inkern.o
  industrialio-$(CONFIG_IIO_BUFFER) += industrialio-buffer.o
  industrialio-$(CONFIG_IIO_TRIGGER) += industrialio-trigger.o
 +industrialio-$(CONFIG_IIO_BUFFER_CB) += buffer_cb.o
  
++<<<<<<< HEAD
 +obj-$(CONFIG_IIO_TRIGGERED_BUFFER) += industrialio-triggered-buffer.o
 +obj-$(CONFIG_IIO_KFIFO_BUF) += kfifo_buf.o
 +
++=======
++>>>>>>> 8548a63b37be (iio: Move generic buffer implementations to sub-directory)
  obj-y += accel/
  obj-y += adc/
  obj-y += amplifiers/
* Unmerged path Documentation/DocBook/iio.tmpl
* Unmerged path drivers/iio/buffer/industrialio-buffer-cb.c
* Unmerged path drivers/iio/buffer_cb.c
* Unmerged path drivers/iio/industrialio-buffer-cb.c
* Unmerged path Documentation/DocBook/iio.tmpl
* Unmerged path drivers/iio/Kconfig
* Unmerged path drivers/iio/Makefile
diff --git a/drivers/iio/buffer/Kconfig b/drivers/iio/buffer/Kconfig
new file mode 100644
index 000000000000..0a7b2fd3699b
--- /dev/null
+++ b/drivers/iio/buffer/Kconfig
@@ -0,0 +1,24 @@
+#
+# Industrial I/O generic buffer implementations
+#
+# When adding new entries keep the list in alphabetical order
+
+config IIO_BUFFER_CB
+	tristate "IIO callback buffer used for push in-kernel interfaces"
+	help
+	  Should be selected by any drivers that do in-kernel push
+	  usage.  That is, those where the data is pushed to the consumer.
+
+config IIO_KFIFO_BUF
+	tristate "Industrial I/O buffering based on kfifo"
+	help
+	  A simple fifo based on kfifo.  Note that this currently provides
+	  no buffer events so it is up to userspace to work out how
+	  often to read from the buffer.
+
+config IIO_TRIGGERED_BUFFER
+	tristate
+	select IIO_TRIGGER
+	select IIO_KFIFO_BUF
+	help
+	  Provides helper functions for setting up triggered buffers.
diff --git a/drivers/iio/buffer/Makefile b/drivers/iio/buffer/Makefile
new file mode 100644
index 000000000000..4d193b9a9123
--- /dev/null
+++ b/drivers/iio/buffer/Makefile
@@ -0,0 +1,8 @@
+#
+# Makefile for the industrial I/O buffer implementations
+#
+
+# When adding new entries keep the list in alphabetical order
+obj-$(CONFIG_IIO_BUFFER_CB) += industrialio-buffer-cb.o
+obj-$(CONFIG_IIO_TRIGGERED_BUFFER) += industrialio-triggered-buffer.o
+obj-$(CONFIG_IIO_KFIFO_BUF) += kfifo_buf.o
* Unmerged path drivers/iio/buffer/industrialio-buffer-cb.c
diff --git a/drivers/iio/industrialio-triggered-buffer.c b/drivers/iio/buffer/industrialio-triggered-buffer.c
similarity index 100%
rename from drivers/iio/industrialio-triggered-buffer.c
rename to drivers/iio/buffer/industrialio-triggered-buffer.c
diff --git a/drivers/iio/kfifo_buf.c b/drivers/iio/buffer/kfifo_buf.c
similarity index 100%
rename from drivers/iio/kfifo_buf.c
rename to drivers/iio/buffer/kfifo_buf.c
* Unmerged path drivers/iio/buffer_cb.c
* Unmerged path drivers/iio/industrialio-buffer-cb.c
