NFS: Change nfs4_setup_sequence() to take an nfs_client structure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Anna Schumaker <Anna.Schumaker@Netapp.com>
commit 42e1cca7e91e1a7502694cfd18857ed243f54174
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/42e1cca7.failed

I want to have all callers use this function, rather than calling the
NFS v4.0 and v4.1 versions directly.  This includes pNFS, which only has
access to the nfs_client structure in some places.

	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 42e1cca7e91e1a7502694cfd18857ed243f54174)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4proc.c
diff --cc fs/nfs/nfs4proc.c
index 0a1efaa4e649,f62d58cb3014..000000000000
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@@ -2176,9 -2168,10 +2175,9 @@@ static void nfs4_open_prepare(struct rp
  		data->o_arg.open_bitmap = &nfs4_open_noattr_bitmap[0];
  	case NFS4_OPEN_CLAIM_FH:
  		task->tk_msg.rpc_proc = &nfs4_procedures[NFSPROC4_CLNT_OPEN_NOATTR];
 -		nfs_copy_fh(&data->o_res.fh, data->o_arg.fh);
  	}
  	data->timestamp = jiffies;
- 	if (nfs4_setup_sequence(data->o_arg.server,
+ 	if (nfs4_setup_sequence(data->o_arg.server->nfs_client,
  				&data->o_arg.seq_args,
  				&data->o_res.seq_res,
  				task) != 0)
@@@ -3219,9 -3228,12 +3218,9 @@@ static void nfs4_close_prepare(struct r
  		nfs4_map_atomic_open_share(NFS_SERVER(inode),
  				calldata->arg.fmode, 0);
  
 -	if (calldata->res.fattr == NULL)
 -		calldata->arg.bitmask = NULL;
 -	else if (calldata->arg.bitmask == NULL)
 -		calldata->res.fattr = NULL;
 +	nfs_fattr_init(calldata->res.fattr);
  	calldata->timestamp = jiffies;
- 	if (nfs4_setup_sequence(NFS_SERVER(inode),
+ 	if (nfs4_setup_sequence(NFS_SERVER(inode)->nfs_client,
  				&calldata->arg.seq_args,
  				&calldata->res.seq_res,
  				task) != 0)
@@@ -4099,7 -4113,7 +4098,11 @@@ static void nfs4_proc_unlink_setup(stru
  
  static void nfs4_proc_unlink_rpc_prepare(struct rpc_task *task, struct nfs_unlinkdata *data)
  {
++<<<<<<< HEAD
 +	nfs4_setup_sequence(NFS_SERVER(data->dir),
++=======
+ 	nfs4_setup_sequence(NFS_SB(data->dentry->d_sb)->nfs_client,
++>>>>>>> 42e1cca7e91e (NFS: Change nfs4_setup_sequence() to take an nfs_client structure)
  			&data->args.seq_args,
  			&data->res.seq_res,
  			task);
* Unmerged path fs/nfs/nfs4proc.c
