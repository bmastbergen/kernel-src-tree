ceph: cleanup local variables in ceph_writepages_start()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 0e5ecac7168366500af1fa9a70fa9ce573f891f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/0e5ecac7.failed

Remove two variables and define variables of same type together.

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 0e5ecac7168366500af1fa9a70fa9ce573f891f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/addr.c
diff --cc fs/ceph/addr.c
index 2c8328a70fdb,221df531b0c3..000000000000
--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@@ -739,7 -807,6 +738,10 @@@ static int ceph_writepages_start(struc
  	}
  	if (fsc->mount_options->wsize < wsize)
  		wsize = fsc->mount_options->wsize;
++<<<<<<< HEAD
 +	max_pages_ever = wsize >> PAGE_CACHE_SHIFT;
++=======
++>>>>>>> 0e5ecac71683 (ceph: cleanup local variables in ceph_writepages_start())
  
  	pagevec_init(&pvec, 0);
  
@@@ -785,28 -848,25 +787,39 @@@ retry
  	last_snapc = snapc;
  
  	while (!done && index <= end) {
++<<<<<<< HEAD
 +		unsigned i;
 +		int first;
 +		pgoff_t strip_unit_end = 0;
++=======
++>>>>>>> 0e5ecac71683 (ceph: cleanup local variables in ceph_writepages_start())
  		int num_ops = 0, op_idx;
- 		int pvec_pages, locked_pages = 0;
+ 		unsigned i, pvec_pages, max_pages, locked_pages = 0;
  		struct page **pages = NULL, **data_pages;
  		mempool_t *pool = NULL;	/* Becomes non-null if mempool used */
  		struct page *page;
- 		int want;
+ 		pgoff_t strip_unit_end = 0;
  		u64 offset = 0, len = 0;
  
- 		max_pages = max_pages_ever;
+ 		max_pages = wsize >> PAGE_SHIFT;
  
  get_more_pages:
++<<<<<<< HEAD
 +		first = -1;
 +		want = min(end - index,
 +			   min((pgoff_t)PAGEVEC_SIZE,
 +			       max_pages - (pgoff_t)locked_pages) - 1)
 +			+ 1;
++=======
+ 		pvec_pages = min_t(unsigned, PAGEVEC_SIZE,
+ 				   max_pages - locked_pages);
+ 		if (end - index < (u64)(pvec_pages - 1))
+ 			pvec_pages = (unsigned)(end - index) + 1;
+ 
++>>>>>>> 0e5ecac71683 (ceph: cleanup local variables in ceph_writepages_start())
  		pvec_pages = pagevec_lookup_tag(&pvec, mapping, &index,
  						PAGECACHE_TAG_DIRTY,
- 						want);
+ 						pvec_pages);
  		dout("pagevec_lookup_tag got %d\n", pvec_pages);
  		if (!pvec_pages && !locked_pages)
  			break;
* Unmerged path fs/ceph/addr.c
