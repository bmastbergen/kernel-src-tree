net: sched: remove tc_can_offload check from egdev call

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] sched: remove tc_can_offload check from egdev call (Ivan Vecera) [1572720]
Rebuild_FUZZ: 95.24%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 7612fb0387d6ffcfc3173527466fe3f596657c58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/7612fb03.failed

Since the only user, mlx5 driver does the check in
mlx5e_setup_tc_block_cb, no need to check here.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7612fb0387d6ffcfc3173527466fe3f596657c58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_api.c
diff --cc net/sched/cls_api.c
index 0e9c21220742,a26c690b48ac..000000000000
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@@ -1027,27 -1188,56 +1027,41 @@@ int tcf_exts_dump_stats(struct sk_buff 
  }
  EXPORT_SYMBOL(tcf_exts_dump_stats);
  
 -static int tc_exts_setup_cb_egdev_call(struct tcf_exts *exts,
 -				       enum tc_setup_type type,
 -				       void *type_data, bool err_stop)
 +int tcf_exts_get_dev(struct net_device *dev, struct tcf_exts *exts,
 +		     struct net_device **hw_dev)
  {
 -	int ok_count = 0;
  #ifdef CONFIG_NET_CLS_ACT
  	const struct tc_action *a;
 -	struct net_device *dev;
 -	int i, ret;
 +	LIST_HEAD(actions);
  
  	if (!tcf_exts_has_actions(exts))
 -		return 0;
 +		return -EINVAL;
  
++<<<<<<< HEAD
 +	tcf_exts_to_list(exts, &actions);
 +	list_for_each_entry(a, &actions, list) {
 +		if (a->ops->get_dev)
 +			*hw_dev = a->ops->get_dev(a);
++=======
+ 	for (i = 0; i < exts->nr_actions; i++) {
+ 		a = exts->actions[i];
+ 		if (!a->ops->get_dev)
+ 			continue;
+ 		dev = a->ops->get_dev(a);
+ 		if (!dev)
+ 			continue;
+ 		ret = tc_setup_cb_egdev_call(dev, type, type_data, err_stop);
+ 		if (ret < 0)
+ 			return ret;
+ 		ok_count += ret;
++>>>>>>> 7612fb0387d6 (net: sched: remove tc_can_offload check from egdev call)
  	}
 +	if (*hw_dev)
 +		return 0;
  #endif
 -	return ok_count;
 -}
 -
 -int tc_setup_cb_call(struct tcf_block *block, struct tcf_exts *exts,
 -		     enum tc_setup_type type, void *type_data, bool err_stop)
 -{
 -	int ok_count;
 -	int ret;
 -
 -	ret = tcf_block_cb_call(block, type, type_data, err_stop);
 -	if (ret < 0)
 -		return ret;
 -	ok_count = ret;
 -
 -	if (!exts)
 -		return ok_count;
 -	ret = tc_exts_setup_cb_egdev_call(exts, type, type_data, err_stop);
 -	if (ret < 0)
 -		return ret;
 -	ok_count += ret;
 -
 -	return ok_count;
 +	return -EOPNOTSUPP;
  }
 -EXPORT_SYMBOL(tc_setup_cb_call);
 +EXPORT_SYMBOL(tcf_exts_get_dev);
  
  static int __init tc_filter_init(void)
  {
* Unmerged path net/sched/cls_api.c
