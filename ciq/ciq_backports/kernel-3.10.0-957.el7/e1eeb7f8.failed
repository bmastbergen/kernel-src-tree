ipmi_si: Move io setup into io structure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Corey Minyard <cminyard@mvista.com>
commit e1eeb7f8620733fe9f6640eef48d449b925b3c23
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e1eeb7f8.failed

Where it belongs, and getting ready for pulling the platform
handling into its own file.

	Signed-off-by: Corey Minyard <cminyard@mvista.com>
(cherry picked from commit e1eeb7f8620733fe9f6640eef48d449b925b3c23)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/ipmi/ipmi_si_intf.c
#	drivers/char/ipmi/ipmi_si_sm.h
diff --cc drivers/char/ipmi/ipmi_si_intf.c
index 72982bfaeaf1,d0a0a5d9e5ff..000000000000
--- a/drivers/char/ipmi/ipmi_si_intf.c
+++ b/drivers/char/ipmi/ipmi_si_intf.c
@@@ -173,14 -173,6 +173,17 @@@ struct smi_info 
  	 * IPMI
  	 */
  	struct si_sm_io io;
++<<<<<<< HEAD
 +	int (*io_setup)(struct smi_info *info);
 +	void (*io_cleanup)(struct smi_info *info);
 +	int (*irq_setup)(struct smi_info *info);
 +	void (*irq_cleanup)(struct smi_info *info);
 +	unsigned int io_size;
 +	enum ipmi_addr_src addr_source; /* ACPI, PCI, SMBIOS, hardcode, etc. */
 +	void (*addr_source_cleanup)(struct smi_info *info);
 +	void *addr_source_data;
++=======
++>>>>>>> e1eeb7f86207 (ipmi_si: Move io setup into io structure)
  
  	/*
  	 * Per-OEM handler, called from handle_flags().  Returns 1
@@@ -1531,22 -1511,22 +1534,27 @@@ static int port_setup(struct si_sm_io *
  	 * Figure out the actual inb/inw/inl/etc routine to use based
  	 * upon the register size.
  	 */
- 	switch (info->io.regsize) {
+ 	switch (io->regsize) {
  	case 1:
- 		info->io.inputb = port_inb;
- 		info->io.outputb = port_outb;
+ 		io->inputb = port_inb;
+ 		io->outputb = port_outb;
  		break;
  	case 2:
- 		info->io.inputb = port_inw;
- 		info->io.outputb = port_outw;
+ 		io->inputb = port_inw;
+ 		io->outputb = port_outw;
  		break;
  	case 4:
- 		info->io.inputb = port_inl;
- 		info->io.outputb = port_outl;
+ 		io->inputb = port_inl;
+ 		io->outputb = port_outl;
  		break;
  	default:
++<<<<<<< HEAD
 +		dev_warn(info->dev, "Invalid register size: %d\n",
 +			 info->io.regsize);
++=======
+ 		dev_warn(io->dev, "Invalid register size: %d\n",
+ 			 io->regsize);
++>>>>>>> e1eeb7f86207 (ipmi_si: Move io setup into io structure)
  		return -EINVAL;
  	}
  
@@@ -1673,8 -1653,8 +1681,13 @@@ static int mem_setup(struct si_sm_io *i
  		break;
  #endif
  	default:
++<<<<<<< HEAD
 +		dev_warn(info->dev, "Invalid register size: %d\n",
 +			 info->io.regsize);
++=======
+ 		dev_warn(io->dev, "Invalid register size: %d\n",
+ 			 io->regsize);
++>>>>>>> e1eeb7f86207 (ipmi_si: Move io setup into io structure)
  		return -EINVAL;
  	}
  
@@@ -1916,14 -1896,10 +1929,10 @@@ static int hotmod_handler(const char *v
  				goto out;
  			}
  
 -			info->io.addr_source = SI_HOTMOD;
 -			info->io.si_type = si_type;
 +			info->addr_source = SI_HOTMOD;
 +			info->si_type = si_type;
  			info->io.addr_data = addr;
  			info->io.addr_type = addr_space;
- 			if (addr_space == IPMI_MEM_ADDR_SPACE)
- 				info->io_setup = mem_setup;
- 			else
- 				info->io_setup = port_setup;
  
  			info->io.addr = NULL;
  			info->io.regspacing = regspacing;
@@@ -2417,8 -2381,8 +2419,13 @@@ static int ipmi_pci_probe_regspacing(st
  		/* detect 1, 4, 16byte spacing */
  		for (regspacing = DEFAULT_REGSPACING; regspacing <= 16;) {
  			info->io.regspacing = regspacing;
++<<<<<<< HEAD
 +			if (info->io_setup(info)) {
 +				dev_err(info->dev,
++=======
+ 			if (info->io.io_setup(&info->io)) {
+ 				dev_err(info->io.dev,
++>>>>>>> e1eeb7f86207 (ipmi_si: Move io setup into io structure)
  					"Could not setup I/O space\n");
  				return DEFAULT_REGSPACING;
  			}
@@@ -2475,16 -2439,13 +2482,13 @@@ static int ipmi_pci_probe(struct pci_de
  		return rv;
  	}
  
 -	info->io.addr_source_cleanup = ipmi_pci_cleanup;
 -	info->io.addr_source_data = pdev;
 +	info->addr_source_cleanup = ipmi_pci_cleanup;
 +	info->addr_source_data = pdev;
  
- 	if (pci_resource_flags(pdev, 0) & IORESOURCE_IO) {
- 		info->io_setup = port_setup;
+ 	if (pci_resource_flags(pdev, 0) & IORESOURCE_IO)
  		info->io.addr_type = IPMI_IO_ADDR_SPACE;
- 	} else {
- 		info->io_setup = mem_setup;
+ 	else
  		info->io.addr_type = IPMI_MEM_ADDR_SPACE;
- 	}
  	info->io.addr_data = pci_resource_start(pdev, 0);
  
  	info->io.regspacing = ipmi_pci_probe_regspacing(info);
@@@ -2594,17 -2556,14 +2598,14 @@@ static int of_ipmi_probe(struct platfor
  		return -ENOMEM;
  	}
  
 -	info->io.si_type	= (enum si_type) match->data;
 -	info->io.addr_source	= SI_DEVICETREE;
 -	info->io.irq_setup	= ipmi_std_irq_setup;
 +	info->si_type		= (enum si_type) match->data;
 +	info->addr_source	= SI_DEVICETREE;
 +	info->irq_setup		= std_irq_setup;
  
- 	if (resource.flags & IORESOURCE_IO) {
- 		info->io_setup		= port_setup;
- 		info->io.addr_type	= IPMI_IO_ADDR_SPACE;
- 	} else {
- 		info->io_setup		= mem_setup;
- 		info->io.addr_type	= IPMI_MEM_ADDR_SPACE;
- 	}
+ 	if (resource.flags & IORESOURCE_IO)
+ 		info->io.addr_type = IPMI_IO_ADDR_SPACE;
+ 	else
+ 		info->io.addr_type = IPMI_MEM_ADDR_SPACE;
  
  	info->io.addr_data	= resource.start;
  
@@@ -2812,9 -2772,8 +2813,14 @@@ static int ipmi_parisc_probe(struct par
  		return -ENOMEM;
  	}
  
++<<<<<<< HEAD
 +	info->si_type		= SI_KCS;
 +	info->addr_source	= SI_DEVICETREE;
 +	info->io_setup		= mem_setup;
++=======
+ 	info->io.si_type	= SI_KCS;
+ 	info->io.addr_source	= SI_DEVICETREE;
++>>>>>>> e1eeb7f86207 (ipmi_si: Move io setup into io structure)
  	info->io.addr_type	= IPMI_MEM_ADDR_SPACE;
  	info->io.addr_data	= dev->hpa.start;
  	info->io.regsize	= 1;
@@@ -3541,13 -3511,13 +3557,13 @@@ static int try_smi_init(struct smi_inf
  		rv = -ENOMEM;
  		goto out_err;
  	}
- 	new_smi->io_size = new_smi->handlers->init_data(new_smi->si_sm,
- 							&new_smi->io);
+ 	new_smi->io.io_size = new_smi->handlers->init_data(new_smi->si_sm,
+ 							   &new_smi->io);
  
  	/* Now that we know the I/O size, we can set up the I/O. */
- 	rv = new_smi->io_setup(new_smi);
+ 	rv = new_smi->io.io_setup(&new_smi->io);
  	if (rv) {
 -		dev_err(new_smi->io.dev, "Could not set up I/O space\n");
 +		dev_err(new_smi->dev, "Could not set up I/O space\n");
  		goto out_err;
  	}
  
@@@ -3697,18 -3664,17 +3713,18 @@@ out_err
  		kfree(new_smi->si_sm);
  		new_smi->si_sm = NULL;
  	}
 -	if (new_smi->io.addr_source_cleanup) {
 -		new_smi->io.addr_source_cleanup(&new_smi->io);
 -		new_smi->io.addr_source_cleanup = NULL;
 +	if (new_smi->addr_source_cleanup) {
 +		new_smi->addr_source_cleanup(new_smi);
 +		new_smi->addr_source_cleanup = NULL;
  	}
- 	if (new_smi->io_cleanup) {
- 		new_smi->io_cleanup(new_smi);
- 		new_smi->io_cleanup = NULL;
+ 	if (new_smi->io.io_cleanup) {
+ 		new_smi->io.io_cleanup(&new_smi->io);
+ 		new_smi->io.io_cleanup = NULL;
  	}
  
 -	if (new_smi->pdev) {
 +	if (new_smi->dev_registered) {
  		platform_device_unregister(new_smi->pdev);
 +		new_smi->dev_registered = 0;
  		new_smi->pdev = NULL;
  	} else if (new_smi->pdev) {
  		platform_device_put(new_smi->pdev);
@@@ -3894,12 -3848,12 +3910,19 @@@ static void cleanup_one_si(struct smi_i
  
  	kfree(to_clean->si_sm);
  
++<<<<<<< HEAD
 +	if (to_clean->addr_source_cleanup)
 +		to_clean->addr_source_cleanup(to_clean);
 +	if (to_clean->io_cleanup)
 +		to_clean->io_cleanup(to_clean);
++=======
+ 	if (to_clean->io.addr_source_cleanup)
+ 		to_clean->io.addr_source_cleanup(&to_clean->io);
+ 	if (to_clean->io.io_cleanup)
+ 		to_clean->io.io_cleanup(&to_clean->io);
++>>>>>>> e1eeb7f86207 (ipmi_si: Move io setup into io structure)
  
 -	if (to_clean->pdev)
 +	if (to_clean->dev_registered)
  		platform_device_unregister(to_clean->pdev);
  
  	kfree(to_clean);
diff --cc drivers/char/ipmi/ipmi_si_sm.h
index a705027c0493,9df77c664908..000000000000
--- a/drivers/char/ipmi/ipmi_si_sm.h
+++ b/drivers/char/ipmi/ipmi_si_sm.h
@@@ -61,6 -67,22 +61,25 @@@ struct si_sm_io 
  	int  regshift;
  	int addr_type;
  	long addr_data;
++<<<<<<< HEAD
++=======
+ 	enum ipmi_addr_src addr_source; /* ACPI, PCI, SMBIOS, hardcode, etc. */
+ 	void (*addr_source_cleanup)(struct si_sm_io *io);
+ 	void *addr_source_data;
+ 
+ 	int (*io_setup)(struct si_sm_io *info);
+ 	void (*io_cleanup)(struct si_sm_io *info);
+ 	unsigned int io_size;
+ 
+ 	int irq;
+ 	int (*irq_setup)(struct si_sm_io *io);
+ 	void *irq_handler_data;
+ 	void (*irq_cleanup)(struct si_sm_io *io);
+ 
+ 	u8 slave_addr;
+ 	enum si_type si_type;
+ 	struct device *dev;
++>>>>>>> e1eeb7f86207 (ipmi_si: Move io setup into io structure)
  };
  
  /* Results of SMI events. */
* Unmerged path drivers/char/ipmi/ipmi_si_intf.c
* Unmerged path drivers/char/ipmi/ipmi_si_sm.h
