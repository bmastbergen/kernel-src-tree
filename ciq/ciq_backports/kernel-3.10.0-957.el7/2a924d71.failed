Input: trackpoint - only expose supported controls for Elan, ALPS and NXP

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [input] trackpoint - only expose supported controls for Elan, ALPS and NXP (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 94.96%
commit-author Dmitry Torokhov <dmitry.torokhov@gmail.com>
commit 2a924d71794c530e55e73d0ce2cc77233307eaa9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2a924d71.failed

The newer trackpoints from ALPS, Elan and NXP implement a very limited
subset of extended commands and controls that the original trackpoints
implemented, so we should not be exposing not working controls in sysfs.
The newer trackpoints also do not implement "Power On Reset" or "Read
Extended Button Status", so we should not be using these commands during
initialization.

While we are at it, let's change "unsigned char" to u8 for byte data or
bool for booleans and use better suited error codes instead of -1.

	Cc: stable@vger.kernel.org
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit 2a924d71794c530e55e73d0ce2cc77233307eaa9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/mouse/trackpoint.c
diff --cc drivers/input/mouse/trackpoint.c
index ce6ff9b301bb,bbd29220dbe9..000000000000
--- a/drivers/input/mouse/trackpoint.c
+++ b/drivers/input/mouse/trackpoint.c
@@@ -380,16 -420,17 +420,27 @@@ int trackpoint_detect(struct psmouse *p
  	if (!set_properties)
  		return 0;
  
++<<<<<<< HEAD
 +	if (trackpoint_read(&psmouse->ps2dev, TP_EXT_BTN, &button_info)) {
 +		psmouse_warn(psmouse, "failed to get extended button data\n");
 +		button_info = 0;
 +	}
 +
 +	psmouse->private = kzalloc(sizeof(struct trackpoint_data), GFP_KERNEL);
 +	if (!psmouse->private)
++=======
+ 	tp = kzalloc(sizeof(*tp), GFP_KERNEL);
+ 	if (!tp)
++>>>>>>> 2a924d71794c (Input: trackpoint - only expose supported controls for Elan, ALPS and NXP)
  		return -ENOMEM;
  
- 	psmouse->vendor = "IBM";
+ 	trackpoint_defaults(tp);
+ 	tp->variant_id = variant_id;
+ 	tp->firmware_id = firmware_id;
+ 
+ 	psmouse->private = tp;
+ 
+ 	psmouse->vendor = trackpoint_variants[variant_id];
  	psmouse->name = "TrackPoint";
  
  	psmouse->reconnect = trackpoint_reconnect;
@@@ -401,15 -458,15 +468,24 @@@
  	__set_bit(INPUT_PROP_POINTER, psmouse->dev->propbit);
  	__set_bit(INPUT_PROP_POINTING_STICK, psmouse->dev->propbit);
  
++<<<<<<< HEAD
 +	trackpoint_defaults(psmouse->private);
 +
 +	error = trackpoint_power_on_reset(&psmouse->ps2dev);
 +
 +	/* Write defaults to TP only if reset fails. */
 +	if (error)
++=======
+ 	if (variant_id != TP_VARIANT_IBM ||
+ 	    trackpoint_power_on_reset(ps2dev) != 0) {
+ 		/*
+ 		 * Write defaults to TP if we did not reset the trackpoint.
+ 		 */
++>>>>>>> 2a924d71794c (Input: trackpoint - only expose supported controls for Elan, ALPS and NXP)
  		trackpoint_sync(psmouse, false);
+ 	}
  
- 	error = sysfs_create_group(&ps2dev->serio->dev.kobj, &trackpoint_attr_group);
+ 	error = device_add_group(&ps2dev->serio->dev, &trackpoint_attr_group);
  	if (error) {
  		psmouse_err(psmouse,
  			    "failed to create sysfs attributes, error: %d\n",
* Unmerged path drivers/input/mouse/trackpoint.c
diff --git a/drivers/input/mouse/trackpoint.h b/drivers/input/mouse/trackpoint.h
index 88055755f82e..10a039148234 100644
--- a/drivers/input/mouse/trackpoint.h
+++ b/drivers/input/mouse/trackpoint.h
@@ -21,10 +21,16 @@
 #define TP_COMMAND		0xE2	/* Commands start with this */
 
 #define TP_READ_ID		0xE1	/* Sent for device identification */
-#define TP_MAGIC_IDENT		0x03	/* Sent after a TP_READ_ID followed */
-					/* by the firmware ID */
-					/* Firmware ID includes 0x1, 0x2, 0x3 */
 
+/*
+ * Valid first byte responses to the "Read Secondary ID" (0xE1) command.
+ * 0x01 was the original IBM trackpoint, others implement very limited
+ * subset of trackpoint features.
+ */
+#define TP_VARIANT_IBM		0x01
+#define TP_VARIANT_ALPS		0x02
+#define TP_VARIANT_ELAN		0x03
+#define TP_VARIANT_NXP		0x04
 
 /*
  * Commands
@@ -136,18 +142,20 @@
 
 #define MAKE_PS2_CMD(params, results, cmd) ((params<<12) | (results<<8) | (cmd))
 
-struct trackpoint_data
-{
-	unsigned char sensitivity, speed, inertia, reach;
-	unsigned char draghys, mindrag;
-	unsigned char thresh, upthresh;
-	unsigned char ztime, jenks;
-	unsigned char drift_time;
+struct trackpoint_data {
+	u8 variant_id;
+	u8 firmware_id;
+
+	u8 sensitivity, speed, inertia, reach;
+	u8 draghys, mindrag;
+	u8 thresh, upthresh;
+	u8 ztime, jenks;
+	u8 drift_time;
 
 	/* toggles */
-	unsigned char press_to_select;
-	unsigned char skipback;
-	unsigned char ext_dev;
+	bool press_to_select;
+	bool skipback;
+	bool ext_dev;
 };
 
 #ifdef CONFIG_MOUSE_PS2_TRACKPOINT
