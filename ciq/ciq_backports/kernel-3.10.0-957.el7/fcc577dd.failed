iio: Fix parameters in iio_triggered_buffer_setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [iio] Fix parameters in iio_triggered_buffer_setup (Tony Camuso) [1559170]
Rebuild_FUZZ: 94.62%
commit-author Cristina Opriceana <cristina.opriceana@gmail.com>
commit fcc577dd55db193926537e0e4de98492d665446b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/fcc577dd.failed

This patch renames the top half handler and the bottom half handler
of iio_triggered_buffer_setup() in accordance with their usage.
The bottom half has been renamed to reflect the fact that it is a
thread based call, compliant with iio_alloc_pollfunc().
The names of the parameters were swapped, thus creating confusion.

	Signed-off-by: Cristina Opriceana <cristina.opriceana@gmail.com>
	Signed-off-by: Jonathan Cameron <jic23@kernel.org>
(cherry picked from commit fcc577dd55db193926537e0e4de98492d665446b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iio/industrialio-triggered-buffer.c
diff --cc drivers/iio/industrialio-triggered-buffer.c
index 19eaf7c3b7c0,4b2858ba1fd6..000000000000
--- a/drivers/iio/industrialio-triggered-buffer.c
+++ b/drivers/iio/industrialio-triggered-buffer.c
@@@ -42,20 -42,23 +42,27 @@@ static const struct iio_buffer_setup_op
   * iio_triggered_buffer_cleanup().
   */
  int iio_triggered_buffer_setup(struct iio_dev *indio_dev,
- 	irqreturn_t (*pollfunc_bh)(int irq, void *p),
- 	irqreturn_t (*pollfunc_th)(int irq, void *p),
+ 	irqreturn_t (*h)(int irq, void *p),
+ 	irqreturn_t (*thread)(int irq, void *p),
  	const struct iio_buffer_setup_ops *setup_ops)
  {
 -	struct iio_buffer *buffer;
  	int ret;
  
 -	buffer = iio_kfifo_allocate();
 -	if (!buffer) {
 +	indio_dev->buffer = iio_kfifo_allocate(indio_dev);
 +	if (!indio_dev->buffer) {
  		ret = -ENOMEM;
  		goto error_ret;
  	}
  
++<<<<<<< HEAD
 +	indio_dev->pollfunc = iio_alloc_pollfunc(pollfunc_bh,
 +						 pollfunc_th,
++=======
+ 	iio_device_attach_buffer(indio_dev, buffer);
+ 
+ 	indio_dev->pollfunc = iio_alloc_pollfunc(h,
+ 						 thread,
++>>>>>>> fcc577dd55db (iio: Fix parameters in iio_triggered_buffer_setup)
  						 IRQF_ONESHOT,
  						 indio_dev,
  						 "%s_consumer%d",
* Unmerged path drivers/iio/industrialio-triggered-buffer.c
diff --git a/include/linux/iio/triggered_buffer.h b/include/linux/iio/triggered_buffer.h
index c378ebec605e..f72f70d5a97b 100644
--- a/include/linux/iio/triggered_buffer.h
+++ b/include/linux/iio/triggered_buffer.h
@@ -7,8 +7,8 @@ struct iio_dev;
 struct iio_buffer_setup_ops;
 
 int iio_triggered_buffer_setup(struct iio_dev *indio_dev,
-	irqreturn_t (*pollfunc_bh)(int irq, void *p),
-	irqreturn_t (*pollfunc_th)(int irq, void *p),
+	irqreturn_t (*h)(int irq, void *p),
+	irqreturn_t (*thread)(int irq, void *p),
 	const struct iio_buffer_setup_ops *setup_ops);
 void iio_triggered_buffer_cleanup(struct iio_dev *indio_dev);
 
