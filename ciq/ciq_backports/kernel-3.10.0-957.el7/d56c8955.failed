mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Nogah Frankel <nogahf@mellanox.com>
commit d56c89550bd0da43bfe9f91ade469ab3f233c62b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d56c8955.failed

Tclass number is needed for most of the operations related to the qdisc in
the driver. Create a field for it in the mlxsw_sp_qdisc instead of passing
it to every function as parameter.

	Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
	Reviewed-by: Yuval Mintz <yuvalm@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d56c89550bd0da43bfe9f91ade469ab3f233c62b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
index b5397da94d7f,dcf6d7c932f9..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
@@@ -41,6 -41,26 +41,29 @@@
  #include "spectrum.h"
  #include "reg.h"
  
++<<<<<<< HEAD
++=======
+ enum mlxsw_sp_qdisc_type {
+ 	MLXSW_SP_QDISC_NO_QDISC,
+ 	MLXSW_SP_QDISC_RED,
+ };
+ 
+ struct mlxsw_sp_qdisc {
+ 	u32 handle;
+ 	enum mlxsw_sp_qdisc_type type;
+ 	u8 tclass_num;
+ 	union {
+ 		struct red_stats red;
+ 	} xstats_base;
+ 	struct mlxsw_sp_qdisc_stats {
+ 		u64 tx_bytes;
+ 		u64 tx_packets;
+ 		u64 drops;
+ 		u64 overlimits;
+ 	} stats_base;
+ };
+ 
++>>>>>>> d56c89550bd0 (mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc)
  static int
  mlxsw_sp_tclass_congestion_enable(struct mlxsw_sp_port *mlxsw_sp_port,
  				  int tclass_num, u32 min, u32 max,
@@@ -80,13 -99,14 +103,21 @@@ mlxsw_sp_tclass_congestion_disable(stru
  }
  
  static void
++<<<<<<< HEAD
 +mlxsw_sp_setup_tc_qdisc_clean_stats(struct mlxsw_sp_port *mlxsw_sp_port,
 +				    struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
 +				    int tclass_num)
 +{
 +	struct red_stats *xstats_base = &mlxsw_sp_qdisc->xstats_base;
++=======
+ mlxsw_sp_setup_tc_qdisc_red_clean_stats(struct mlxsw_sp_port *mlxsw_sp_port,
+ 					struct mlxsw_sp_qdisc *mlxsw_sp_qdisc)
+ {
+ 	u8 tclass_num = mlxsw_sp_qdisc->tclass_num;
+ 	struct mlxsw_sp_qdisc_stats *stats_base;
++>>>>>>> d56c89550bd0 (mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc)
  	struct mlxsw_sp_port_xstats *xstats;
  	struct rtnl_link_stats64 *stats;
 -	struct red_stats *red_base;
  
  	xstats = &mlxsw_sp_port->periodic_hw_stats.xstats;
  	stats = &mlxsw_sp_port->periodic_hw_stats.stats;
@@@ -169,9 -183,8 +200,14 @@@ mlxsw_sp_qdisc_red_replace(struct mlxsw
  
  	mlxsw_sp_qdisc->type = MLXSW_SP_QDISC_RED;
  	if (mlxsw_sp_qdisc->handle != handle)
++<<<<<<< HEAD
 +		mlxsw_sp_setup_tc_qdisc_clean_stats(mlxsw_sp_port,
 +						    mlxsw_sp_qdisc,
 +						    tclass_num);
++=======
+ 		mlxsw_sp_setup_tc_qdisc_red_clean_stats(mlxsw_sp_port,
+ 							mlxsw_sp_qdisc);
++>>>>>>> d56c89550bd0 (mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc)
  
  	mlxsw_sp_qdisc->handle = handle;
  	return 0;
@@@ -187,10 -200,12 +223,15 @@@ err_config
  static int
  mlxsw_sp_qdisc_get_red_xstats(struct mlxsw_sp_port *mlxsw_sp_port, u32 handle,
  			      struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
- 			      int tclass_num, struct red_stats *res)
+ 			      struct red_stats *res)
  {
++<<<<<<< HEAD
 +	struct red_stats *xstats_base = &mlxsw_sp_qdisc->xstats_base;
++=======
+ 	struct red_stats *xstats_base = &mlxsw_sp_qdisc->xstats_base.red;
+ 	u8 tclass_num = mlxsw_sp_qdisc->tclass_num;
++>>>>>>> d56c89550bd0 (mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc)
  	struct mlxsw_sp_port_xstats *xstats;
 -	int early_drops, marks, pdrops;
  
  	if (mlxsw_sp_qdisc->handle != handle ||
  	    mlxsw_sp_qdisc->type != MLXSW_SP_QDISC_RED)
@@@ -207,10 -230,11 +248,18 @@@
  static int
  mlxsw_sp_qdisc_get_red_stats(struct mlxsw_sp_port *mlxsw_sp_port, u32 handle,
  			     struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
++<<<<<<< HEAD
 +			     int tclass_num,
 +			     struct tc_red_qopt_offload_stats *res)
 +{
 +	u64 tx_bytes, tx_packets, overlimits, drops;
++=======
+ 			     struct tc_qopt_offload_stats *res)
+ {
+ 	u64 tx_bytes, tx_packets, overlimits, drops;
+ 	u8 tclass_num = mlxsw_sp_qdisc->tclass_num;
+ 	struct mlxsw_sp_qdisc_stats *stats_base;
++>>>>>>> d56c89550bd0 (mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc)
  	struct mlxsw_sp_port_xstats *xstats;
  	struct rtnl_link_stats64 *stats;
  
@@@ -252,8 -276,7 +300,12 @@@ int mlxsw_sp_setup_tc_red(struct mlxsw_
  	if (p->parent != TC_H_ROOT)
  		return -EOPNOTSUPP;
  
++<<<<<<< HEAD
 +	mlxsw_sp_qdisc = &mlxsw_sp_port->root_qdisc;
 +	tclass_num = MLXSW_SP_PORT_DEFAULT_TCLASS;
++=======
+ 	mlxsw_sp_qdisc = mlxsw_sp_port->root_qdisc;
++>>>>>>> d56c89550bd0 (mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc)
  
  	switch (p->command) {
  	case TC_RED_REPLACE:
@@@ -275,3 -297,20 +326,23 @@@
  		return -EOPNOTSUPP;
  	}
  }
++<<<<<<< HEAD
++=======
+ 
+ int mlxsw_sp_tc_qdisc_init(struct mlxsw_sp_port *mlxsw_sp_port)
+ {
+ 	mlxsw_sp_port->root_qdisc = kzalloc(sizeof(*mlxsw_sp_port->root_qdisc),
+ 					    GFP_KERNEL);
+ 	if (!mlxsw_sp_port->root_qdisc)
+ 		return -ENOMEM;
+ 
+ 	mlxsw_sp_port->root_qdisc->tclass_num = MLXSW_SP_PORT_DEFAULT_TCLASS;
+ 
+ 	return 0;
+ }
+ 
+ void mlxsw_sp_tc_qdisc_fini(struct mlxsw_sp_port *mlxsw_sp_port)
+ {
+ 	kfree(mlxsw_sp_port->root_qdisc);
+ }
++>>>>>>> d56c89550bd0 (mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc)
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
