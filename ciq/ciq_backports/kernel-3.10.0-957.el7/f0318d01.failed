bpf: allow adjusted map element values to spill

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Gianluca Borello <g.borello@gmail.com>
commit f0318d01b694485af9678a4e120328ae3555be6d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/f0318d01.failed

commit 484611357c19 ("bpf: allow access into map value arrays")
introduces the ability to do pointer math inside a map element value via
the PTR_TO_MAP_VALUE_ADJ register type.

The current support doesn't handle the case where a PTR_TO_MAP_VALUE_ADJ
is spilled into the stack, limiting several use cases, especially when
generating bpf code from a compiler.

Handle this case by explicitly enabling the register type
PTR_TO_MAP_VALUE_ADJ to be spilled. Also, make sure that min_value and
max_value are reset just for BPF_LDX operations that don't result in a
restore of a spilled register from stack.

	Signed-off-by: Gianluca Borello <g.borello@gmail.com>
	Acked-by: Daniel Borkmann <daniel@iogearbox.net>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f0318d01b694485af9678a4e120328ae3555be6d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/verifier.c
#	tools/testing/selftests/bpf/test_verifier.c
* Unmerged path kernel/bpf/verifier.c
* Unmerged path tools/testing/selftests/bpf/test_verifier.c
* Unmerged path kernel/bpf/verifier.c
* Unmerged path tools/testing/selftests/bpf/test_verifier.c
