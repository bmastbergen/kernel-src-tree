amd-xgbe: Prepare for ethtool set-channel support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Tom Lendacky <thomas.lendacky@amd.com>
commit 2244753409f5bc3e2eae4e2ec6f4ced239993f33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/22447534.failed

In order to support being able to dynamically set/change the number of
Rx and Tx channels, update the code to:
 - Move alloc and free of device memory into callable functions
 - Move setting of the real number of Rx and Tx channels to device startup
 - Move mapping of the RSS channels to device startup

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2244753409f5bc3e2eae4e2ec6f4ced239993f33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-drv.c
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-drv.c
index d6687ed9891d,397e3a0e1d67..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
@@@ -1661,10 -1879,33 +1717,37 @@@ static void xgbe_packet_info(struct xgb
  static int xgbe_open(struct net_device *netdev)
  {
  	struct xgbe_prv_data *pdata = netdev_priv(netdev);
- 	struct xgbe_desc_if *desc_if = &pdata->desc_if;
  	int ret;
  
++<<<<<<< HEAD
 +	DBGPR("-->xgbe_open\n");
++=======
+ 	/* Create the various names based on netdev name */
+ 	snprintf(pdata->an_name, sizeof(pdata->an_name) - 1, "%s-pcs",
+ 		 netdev_name(netdev));
+ 
+ 	snprintf(pdata->ecc_name, sizeof(pdata->ecc_name) - 1, "%s-ecc",
+ 		 netdev_name(netdev));
+ 
+ 	snprintf(pdata->i2c_name, sizeof(pdata->i2c_name) - 1, "%s-i2c",
+ 		 netdev_name(netdev));
+ 
+ 	/* Create workqueues */
+ 	pdata->dev_workqueue =
+ 		create_singlethread_workqueue(netdev_name(netdev));
+ 	if (!pdata->dev_workqueue) {
+ 		netdev_err(netdev, "device workqueue creation failed\n");
+ 		return -ENOMEM;
+ 	}
+ 
+ 	pdata->an_workqueue =
+ 		create_singlethread_workqueue(pdata->an_name);
+ 	if (!pdata->an_workqueue) {
+ 		netdev_err(netdev, "phy workqueue creation failed\n");
+ 		ret = -ENOMEM;
+ 		goto err_dev_wq;
+ 	}
++>>>>>>> 2244753409f5 (amd-xgbe: Prepare for ethtool set-channel support)
  
  	/* Reset the phy settings */
  	ret = xgbe_phy_reset(pdata);
@@@ -1751,10 -1973,14 +1809,8 @@@ static int xgbe_close(struct net_devic
  	clk_disable_unprepare(pdata->ptpclk);
  	clk_disable_unprepare(pdata->sysclk);
  
 -	flush_workqueue(pdata->an_workqueue);
 -	destroy_workqueue(pdata->an_workqueue);
 -
 -	flush_workqueue(pdata->dev_workqueue);
 -	destroy_workqueue(pdata->dev_workqueue);
 -
  	set_bit(XGBE_DOWN, &pdata->dev_state);
  
- 	DBGPR("<--xgbe_close\n");
- 
  	return 0;
  }
  
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-drv.c
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-main.c b/drivers/net/ethernet/amd/xgbe/xgbe-main.c
index 9f75f57abbe7..c86d5d3016d7 100644
--- a/drivers/net/ethernet/amd/xgbe/xgbe-main.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-main.c
@@ -263,7 +263,6 @@ int xgbe_config_netdev(struct xgbe_prv_data *pdata)
 {
 	struct net_device *netdev = pdata->netdev;
 	struct device *dev = pdata->dev;
-	unsigned int i;
 	int ret;
 
 	netdev->irq = pdata->dev_irq;
@@ -322,26 +321,9 @@ int xgbe_config_netdev(struct xgbe_prv_data *pdata)
 				pdata->tx_ring_count, pdata->rx_ring_count);
 	}
 
-	/* Set the number of queues */
-	ret = netif_set_real_num_tx_queues(netdev, pdata->tx_ring_count);
-	if (ret) {
-		dev_err(dev, "error setting real tx queue count\n");
-		return ret;
-	}
-
-	ret = netif_set_real_num_rx_queues(netdev, pdata->rx_ring_count);
-	if (ret) {
-		dev_err(dev, "error setting real rx queue count\n");
-		return ret;
-	}
-
-	/* Initialize RSS hash key and lookup table */
+	/* Initialize RSS hash key */
 	netdev_rss_key_fill(pdata->rss_key, sizeof(pdata->rss_key));
 
-	for (i = 0; i < XGBE_RSS_MAX_TABLE_SIZE; i++)
-		XGMAC_SET_BITS(pdata->rss_table[i], MAC_RSSDR, DMCH,
-			       i % pdata->rx_ring_count);
-
 	XGMAC_SET_BITS(pdata->rss_options, MAC_RSSCR, IP2TE, 1);
 	XGMAC_SET_BITS(pdata->rss_options, MAC_RSSCR, TCP4TE, 1);
 	XGMAC_SET_BITS(pdata->rss_options, MAC_RSSCR, UDP4TE, 1);
