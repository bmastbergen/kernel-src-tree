pNFS: Prevent the layout header refcount going to zero in pnfs_roc()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 9c6376ebddad585da4238532dd6d90ae23ffee67
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9c6376eb.failed

Ensure that we hold a reference to the layout header when processing
the pNFS return-on-close so that the refcount value does not inadvertently
go to zero.

	Reported-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
	Cc: stable@vger.kernel.org # v4.10+
	Tested-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
(cherry picked from commit 9c6376ebddad585da4238532dd6d90ae23ffee67)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/pnfs.c
diff --cc fs/nfs/pnfs.c
index 0be02f1a176d,ee723aa153a3..000000000000
--- a/fs/nfs/pnfs.c
+++ b/fs/nfs/pnfs.c
@@@ -292,11 -292,14 +292,14 @@@ pnfs_detach_layout_hdr(struct pnfs_layo
  void
  pnfs_put_layout_hdr(struct pnfs_layout_hdr *lo)
  {
- 	struct inode *inode = lo->plh_inode;
+ 	struct inode *inode;
  
+ 	if (!lo)
+ 		return;
+ 	inode = lo->plh_inode;
  	pnfs_layoutreturn_before_put_layout_hdr(lo);
  
 -	if (refcount_dec_and_lock(&lo->plh_refcount, &inode->i_lock)) {
 +	if (atomic_dec_and_lock(&lo->plh_refcount, &inode->i_lock)) {
  		if (!list_empty(&lo->plh_segs))
  			WARN_ONCE(1, "NFS: BUG unfreed layout segments.\n");
  		pnfs_detach_layout_hdr(lo);
@@@ -1262,12 -1243,26 +1265,25 @@@ bool pnfs_roc(struct inode *ino
  	spin_lock(&ino->i_lock);
  	lo = nfsi->layout;
  	if (!lo || !pnfs_layout_is_valid(lo) ||
- 	    test_bit(NFS_LAYOUT_BULK_RECALL, &lo->plh_flags))
+ 	    test_bit(NFS_LAYOUT_BULK_RECALL, &lo->plh_flags)) {
+ 		lo = NULL;
  		goto out_noroc;
++<<<<<<< HEAD
++=======
+ 	}
+ 	pnfs_get_layout_hdr(lo);
+ 	if (test_bit(NFS_LAYOUT_RETURN_LOCK, &lo->plh_flags)) {
+ 		spin_unlock(&ino->i_lock);
+ 		wait_on_bit(&lo->plh_flags, NFS_LAYOUT_RETURN,
+ 				TASK_UNINTERRUPTIBLE);
+ 		pnfs_put_layout_hdr(lo);
+ 		goto retry;
+ 	}
++>>>>>>> 9c6376ebddad (pNFS: Prevent the layout header refcount going to zero in pnfs_roc())
  
  	/* no roc if we hold a delegation */
 -	if (nfs4_check_delegation(ino, FMODE_READ)) {
 -		if (nfs4_check_delegation(ino, FMODE_WRITE))
 -			goto out_noroc;
 -		skip_read = true;
 -	}
 +	if (nfs4_check_delegation(ino, FMODE_READ))
 +		goto out_noroc;
  
  	list_for_each_entry(ctx, &nfsi->open_files, list) {
  		state = ctx->state;
* Unmerged path fs/nfs/pnfs.c
