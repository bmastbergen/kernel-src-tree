x86/vmware: Read tsc_khz only once at boot time

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] vmware: Read tsc_khz only once at boot time (Vitaly Kuznetsov) [1507027]
Rebuild_FUZZ: 95.56%
commit-author Alexey Makhalov <amakhalov@vmware.com>
commit cf11372949434fc4a6194b1ed9eb861d08032d08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/cf113729.failed

Re-factor the vmware platform setup code to query the hypervisor for tsc
frequency only once during boot. Since the VMware hypervisor guarantees
constant TSC, calibrate_tsc now uses the saved value.

	Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
	Acked-by: Alok N Kataria <akataria@vmware.com>
	Cc: virtualization@lists.linux-foundation.org
Link: http://lkml.kernel.org/r/20161020050211.GA25304@amakhalov-virtual-machine
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit cf11372949434fc4a6194b1ed9eb861d08032d08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/vmware.c
diff --cc arch/x86/kernel/cpu/vmware.c
index 66d19c4a4b0a,4e34da4be297..000000000000
--- a/arch/x86/kernel/cpu/vmware.c
+++ b/arch/x86/kernel/cpu/vmware.c
@@@ -56,25 -58,7 +58,29 @@@ static inline int __vmware_platform(voi
  
  static unsigned long vmware_get_tsc_khz(void)
  {
++<<<<<<< HEAD
 +	uint64_t tsc_hz, lpj;
 +	uint32_t eax, ebx, ecx, edx;
 +
 +	VMWARE_PORT(GETHZ, eax, ebx, ecx, edx);
 +
 +	tsc_hz = eax | (((uint64_t)ebx) << 32);
 +	do_div(tsc_hz, 1000);
 +	BUG_ON(tsc_hz >> 32);
 +	printk(KERN_INFO "TSC freq read from hypervisor : %lu.%03lu MHz\n",
 +			 (unsigned long) tsc_hz / 1000,
 +			 (unsigned long) tsc_hz % 1000);
 +
 +	if (!preset_lpj) {
 +		lpj = ((u64)tsc_hz * 1000);
 +		do_div(lpj, HZ);
 +		preset_lpj = lpj;
 +	}
 +
 +	return tsc_hz;
++=======
+ 	return vmware_tsc_khz;
++>>>>>>> cf1137294943 (x86/vmware: Read tsc_khz only once at boot time)
  }
  
  static void __init vmware_platform_setup(void)
@@@ -84,8 -69,20 +91,24 @@@
  	VMWARE_PORT(GETHZ, eax, ebx, ecx, edx);
  
  	if (ebx != UINT_MAX) {
+ 		lpj = tsc_khz = eax | (((uint64_t)ebx) << 32);
+ 		do_div(tsc_khz, 1000);
+ 		WARN_ON(tsc_khz >> 32);
+ 		pr_info("TSC freq read from hypervisor : %lu.%03lu MHz\n",
+ 			(unsigned long) tsc_khz / 1000,
+ 			(unsigned long) tsc_khz % 1000);
+ 
+ 		if (!preset_lpj) {
+ 			do_div(lpj, HZ);
+ 			preset_lpj = lpj;
+ 		}
+ 
+ 		vmware_tsc_khz = tsc_khz;
  		x86_platform.calibrate_tsc = vmware_get_tsc_khz;
++<<<<<<< HEAD
 +		x86_platform.calibrate_cpu = vmware_get_tsc_khz;
++=======
++>>>>>>> cf1137294943 (x86/vmware: Read tsc_khz only once at boot time)
  
  #ifdef CONFIG_X86_LOCAL_APIC
  		/* Skip lapic calibration since we know the bus frequency. */
* Unmerged path arch/x86/kernel/cpu/vmware.c
