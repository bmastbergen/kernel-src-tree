net: avoid skb_warn_bad_offload on IS_ERR

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] avoid skb_warn_bad_offload on IS_ERR (Andrea Claudi) [1624702]
Rebuild_FUZZ: 93.51%
commit-author Willem de Bruijn <willemb@google.com>
commit 8d74e9f88d65af8bb2e095aff506aa6eac755ada
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/8d74e9f8.failed

skb_warn_bad_offload warns when packets enter the GSO stack that
require skb_checksum_help or vice versa. Do not warn on arbitrary
bad packets. Packet sockets can craft many. Syzkaller was able to
demonstrate another one with eth_type games.

In particular, suppress the warning when segmentation returns an
error, which is for reasons other than checksum offload.

See also commit 36c92474498a ("net: WARN if skb_checksum_help() is
called on skb requiring segmentation") for context on this warning.

	Signed-off-by: Willem de Bruijn <willemb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8d74e9f88d65af8bb2e095aff506aa6eac755ada)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/dev.c
diff --cc net/core/dev.c
index bb0aceac6913,b0eee49a2489..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -2820,7 -2801,12 +2820,16 @@@ struct sk_buff *__skb_gso_segment(struc
  	skb_reset_mac_header(skb);
  	skb_reset_mac_len(skb);
  
++<<<<<<< HEAD
 +	return skb_mac_gso_segment(skb, features);
++=======
+ 	segs = skb_mac_gso_segment(skb, features);
+ 
+ 	if (unlikely(skb_needs_check(skb, tx_path) && !IS_ERR(segs)))
+ 		skb_warn_bad_offload(skb);
+ 
+ 	return segs;
++>>>>>>> 8d74e9f88d65 (net: avoid skb_warn_bad_offload on IS_ERR)
  }
  EXPORT_SYMBOL(__skb_gso_segment);
  
* Unmerged path net/core/dev.c
