net: ipmr: move the tbl id check in ipmr_new_table

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] ipmr: move the tbl id check in ipmr_new_table (Ivan Vecera) [1584232]
Rebuild_FUZZ: 94.74%
commit-author Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
commit 1113ebbcf9e43c80fe5ef05c48b4cd1c25b306b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/1113ebbc.failed

Move the table id check in ipmr_new_table and make it return error
pointer. We need this change for the upcoming netlink table manipulation
support in order to avoid code duplication and a race condition.

	Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1113ebbcf9e43c80fe5ef05c48b4cd1c25b306b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ipmr.c
diff --cc net/ipv4/ipmr.c
index 5bae18fddda8,5271e2eee110..000000000000
--- a/net/ipv4/ipmr.c
+++ b/net/ipv4/ipmr.c
@@@ -252,8 -252,8 +252,13 @@@ static int __net_init ipmr_rules_init(s
  	INIT_LIST_HEAD(&net->ipv4.mr_tables);
  
  	mrt = ipmr_new_table(net, RT_TABLE_DEFAULT);
++<<<<<<< HEAD
 +	if (mrt == NULL) {
 +		err = -ENOMEM;
++=======
+ 	if (IS_ERR(mrt)) {
+ 		err = PTR_ERR(mrt);
++>>>>>>> 1113ebbcf9e4 (net: ipmr: move the tbl id check in ipmr_new_table)
  		goto err1;
  	}
  
@@@ -319,13 -324,17 +329,22 @@@ static struct mr_table *ipmr_new_table(
  	struct mr_table *mrt;
  	unsigned int i;
  
+ 	/* "pimreg%u" should not exceed 16 bytes (IFNAMSIZ) */
+ 	if (id != RT_TABLE_DEFAULT && id >= 1000000000)
+ 		return ERR_PTR(-EINVAL);
+ 
  	mrt = ipmr_get_table(net, id);
 -	if (mrt)
 +	if (mrt != NULL)
  		return mrt;
  
  	mrt = kzalloc(sizeof(*mrt), GFP_KERNEL);
++<<<<<<< HEAD
 +	if (mrt == NULL)
 +		return NULL;
++=======
+ 	if (!mrt)
+ 		return ERR_PTR(-ENOMEM);
++>>>>>>> 1113ebbcf9e4 (net: ipmr: move the tbl id check in ipmr_new_table)
  	write_pnet(&mrt->net, net);
  	mrt->id = id;
  
* Unmerged path net/ipv4/ipmr.c
