net/mlx5e: E-Switch, Move send-to-vport rule struct to en_rep

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: E-Switch, Move send-to-vport rule struct to en_rep (Alaa Hleihel) [1591249]
Rebuild_FUZZ: 96.61%
commit-author Mark Bloch <markb@mellanox.com>
commit 2c47bf80e8b70a284b6926f3379109eed7d03ac7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2c47bf80.failed

Move struct mlx5_esw_sq which keeps send-to-vport rule to from the eswitch
code to mlx5e and rename it to better reflect where it belongs

	Signed-off-by: Mark Bloch <markb@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 2c47bf80e8b70a284b6926f3379109eed7d03ac7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 1f6b50ed685e,c6a77f8e99a4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -197,33 -193,37 +197,51 @@@ int mlx5e_attr_get(struct net_device *d
  static void mlx5e_sqs2vport_stop(struct mlx5_eswitch *esw,
  				 struct mlx5_eswitch_rep *rep)
  {
++<<<<<<< HEAD
 +	struct mlx5_esw_sq *esw_sq, *tmp;
++=======
+ 	struct mlx5e_rep_sq *rep_sq, *tmp;
+ 	struct mlx5e_rep_priv *rpriv;
++>>>>>>> 2c47bf80e8b7 (net/mlx5e: E-Switch, Move send-to-vport rule struct to en_rep)
  
  	if (esw->mode != SRIOV_OFFLOADS)
  		return;
  
++<<<<<<< HEAD
 +	list_for_each_entry_safe(esw_sq, tmp, &rep->vport_sqs_list, list) {
 +		mlx5_eswitch_del_send_to_vport_rule(esw_sq->send_to_vport_rule);
 +		list_del(&esw_sq->list);
 +		kfree(esw_sq);
++=======
+ 	rpriv = mlx5e_rep_to_rep_priv(rep);
+ 	list_for_each_entry_safe(rep_sq, tmp, &rpriv->vport_sqs_list, list) {
+ 		mlx5_eswitch_del_send_to_vport_rule(rep_sq->send_to_vport_rule);
+ 		list_del(&rep_sq->list);
+ 		kfree(rep_sq);
++>>>>>>> 2c47bf80e8b7 (net/mlx5e: E-Switch, Move send-to-vport rule struct to en_rep)
  	}
  }
  
  static int mlx5e_sqs2vport_start(struct mlx5_eswitch *esw,
  				 struct mlx5_eswitch_rep *rep,
 -				 u16 *sqns_array, int sqns_num)
 +				 u32 *sqns_array, int sqns_num)
  {
  	struct mlx5_flow_handle *flow_rule;
++<<<<<<< HEAD
 +	struct mlx5_esw_sq *esw_sq;
++=======
+ 	struct mlx5e_rep_priv *rpriv;
+ 	struct mlx5e_rep_sq *rep_sq;
++>>>>>>> 2c47bf80e8b7 (net/mlx5e: E-Switch, Move send-to-vport rule struct to en_rep)
  	int err;
  	int i;
  
  	if (esw->mode != SRIOV_OFFLOADS)
  		return 0;
  
 -	rpriv = mlx5e_rep_to_rep_priv(rep);
  	for (i = 0; i < sqns_num; i++) {
- 		esw_sq = kzalloc(sizeof(*esw_sq), GFP_KERNEL);
- 		if (!esw_sq) {
+ 		rep_sq = kzalloc(sizeof(*rep_sq), GFP_KERNEL);
+ 		if (!rep_sq) {
  			err = -ENOMEM;
  			goto out_err;
  		}
@@@ -234,11 -234,11 +252,16 @@@
  								sqns_array[i]);
  		if (IS_ERR(flow_rule)) {
  			err = PTR_ERR(flow_rule);
- 			kfree(esw_sq);
+ 			kfree(rep_sq);
  			goto out_err;
  		}
++<<<<<<< HEAD
 +		esw_sq->send_to_vport_rule = flow_rule;
 +		list_add(&esw_sq->list, &rep->vport_sqs_list);
++=======
+ 		rep_sq->send_to_vport_rule = flow_rule;
+ 		list_add(&rep_sq->list, &rpriv->vport_sqs_list);
++>>>>>>> 2c47bf80e8b7 (net/mlx5e: E-Switch, Move send-to-vport rule struct to en_rep)
  	}
  	return 0;
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
index 288cff3a0677,3b481182f13a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@@ -141,9 -138,13 +141,19 @@@ struct mlx5_eswitch_fdb 
  	};
  };
  
++<<<<<<< HEAD
 +struct mlx5_esw_sq {
 +	struct mlx5_flow_handle	*send_to_vport_rule;
 +	struct list_head	 list;
++=======
+ struct mlx5_eswitch_rep;
+ struct mlx5_eswitch_rep_if {
+ 	int		       (*load)(struct mlx5_core_dev *dev,
+ 				       struct mlx5_eswitch_rep *rep);
+ 	void		       (*unload)(struct mlx5_eswitch_rep *rep);
+ 	void			*priv;
+ 	bool		       valid;
++>>>>>>> 2c47bf80e8b7 (net/mlx5e: E-Switch, Move send-to-vport rule struct to en_rep)
  };
  
  struct mlx5_eswitch_rep {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.h b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
index 5659ed9f51e6..0b8b81481064 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
@@ -124,6 +124,11 @@ struct mlx5e_encap_entry {
 	int encap_size;
 };
 
+struct mlx5e_rep_sq {
+	struct mlx5_flow_handle	*send_to_vport_rule;
+	struct list_head	 list;
+};
+
 void *mlx5e_alloc_nic_rep_priv(struct mlx5_core_dev *mdev);
 void mlx5e_register_vport_reps(struct mlx5e_priv *priv);
 void mlx5e_unregister_vport_reps(struct mlx5e_priv *priv);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
