iio: fix some warning messages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [iio] fix some warning messages (Tony Camuso) [1559170]
Rebuild_FUZZ: 90.91%
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 231bfe53c57e89857753c940192acba933cba56c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/231bfe53.failed

WARN_ON() only takes a condition argument.  I have changed these to
WARN() instead.

	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Cc: <Stable@vger.kernel.org>
	Signed-off-by: Jonathan Cameron <jic23@kernel.org>
(cherry picked from commit 231bfe53c57e89857753c940192acba933cba56c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iio/industrialio-core.c
diff --cc drivers/iio/industrialio-core.c
index 4add760f6942,159ede61f793..000000000000
--- a/drivers/iio/industrialio-core.c
+++ b/drivers/iio/industrialio-core.c
@@@ -593,9 -652,15 +593,21 @@@ int __iio_device_attr_init(struct devic
  					    iio_chan_type_name_spec[chan->type],
  					    iio_chan_type_name_spec[chan->type],
  					    full_postfix);
++<<<<<<< HEAD
 +		else if (chan->indexed)
 +			name_format
 +				= kasprintf(GFP_KERNEL, "%s_%s%d-%s%d_%s",
++=======
+ 			break;
+ 		case IIO_SEPARATE:
+ 			if (!chan->indexed) {
+ 				WARN(1, "Differential channels must be indexed\n");
+ 				ret = -EINVAL;
+ 				goto error_free_full_postfix;
+ 			}
+ 			name = kasprintf(GFP_KERNEL,
+ 					    "%s_%s%d-%s%d_%s",
++>>>>>>> 231bfe53c57e (iio: fix some warning messages)
  					    iio_direction[chan->output],
  					    iio_chan_type_name_spec[chan->type],
  					    chan->channel,
diff --git a/drivers/iio/industrialio-buffer.c b/drivers/iio/industrialio-buffer.c
index f0b219d32278..581d3e3c2408 100644
--- a/drivers/iio/industrialio-buffer.c
+++ b/drivers/iio/industrialio-buffer.c
@@ -240,7 +240,7 @@ static int iio_scan_mask_set(struct iio_dev *indio_dev,
 	if (trialmask == NULL)
 		return -ENOMEM;
 	if (!indio_dev->masklength) {
-		WARN_ON("Trying to set scanmask prior to registering buffer\n");
+		WARN(1, "Trying to set scanmask prior to registering buffer\n");
 		goto err_invalid_mask;
 	}
 	bitmap_copy(trialmask, buffer->scan_mask, indio_dev->masklength);
* Unmerged path drivers/iio/industrialio-core.c
