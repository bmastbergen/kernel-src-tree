scsi: lpfc: Streamline NVME Targe6t WQE setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] lpfc: Streamline NVME Targe6t WQE setup (Dick Kennedy) [1519548]
Rebuild_FUZZ: 92.86%
commit-author James Smart <jsmart2021@gmail.com>
commit bd3061bab3328db40d5d27491fa07a030a12e153
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/bd3061ba.failed

To reduce latency when initializing WQE content, created templates for the
most common wqes. This reduces the number of operations taken to set the
content. It's not a lot of speed up, but every bit helps.

This patch updates the NVME target path.

[mkp: fixed typo]

	Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit bd3061bab3328db40d5d27491fa07a030a12e153)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_nvmet.c
diff --cc drivers/scsi/lpfc/lpfc_nvmet.c
index a6e82b967719,07f89524c320..000000000000
--- a/drivers/scsi/lpfc/lpfc_nvmet.c
+++ b/drivers/scsi/lpfc/lpfc_nvmet.c
@@@ -1154,16 -1294,10 +1297,14 @@@ lpfc_nvmet_setup_io_context(struct lpfc
  		}
  		ctx_buf->iocbq->iocb_flag = LPFC_IO_NVMET;
  		nvmewqe = ctx_buf->iocbq;
++<<<<<<< HEAD
 +		wqe = (union lpfc_wqe128 *)&nvmewqe->wqe;
++=======
+ 		wqe = &nvmewqe->wqe;
+ 
++>>>>>>> bd3061bab332 (scsi: lpfc: Streamline NVME Targe6t WQE setup)
  		/* Initialize WQE */
  		memset(wqe, 0, sizeof(union lpfc_wqe));
- 		/* Word 7 */
- 		bf_set(wqe_ct, &wqe->generic.wqe_com, SLI4_CT_RPI);
- 		bf_set(wqe_class, &wqe->generic.wqe_com, CLASS3);
- 		/* Word 10 */
- 		bf_set(wqe_nvme, &wqe->fcp_tsend.wqe_com, 1);
- 		bf_set(wqe_ebde_cnt, &wqe->generic.wqe_com, 0);
- 		bf_set(wqe_qosd, &wqe->generic.wqe_com, 0);
  
  		ctx_buf->iocbq->context1 = NULL;
  		spin_lock(&phba->sli4_hba.sgl_list_lock);
diff --git a/drivers/scsi/lpfc/lpfc_crtn.h b/drivers/scsi/lpfc/lpfc_crtn.h
index e56199e159e8..3d47e8f75066 100644
--- a/drivers/scsi/lpfc/lpfc_crtn.h
+++ b/drivers/scsi/lpfc/lpfc_crtn.h
@@ -568,6 +568,7 @@ void lpfc_nvme_abort_fcreq_cmpl(struct lpfc_hba *phba,
 				struct lpfc_iocbq *cmdiocb,
 				struct lpfc_wcqe_complete *abts_cmpl);
 void lpfc_nvme_cmd_template(void);
+void lpfc_nvmet_cmd_template(void);
 extern int lpfc_enable_nvmet_cnt;
 extern unsigned long lpfc_enable_nvmet[];
 extern int lpfc_no_hba_reset_cnt;
diff --git a/drivers/scsi/lpfc/lpfc_init.c b/drivers/scsi/lpfc/lpfc_init.c
index b284b035834c..8edec33a1ef8 100644
--- a/drivers/scsi/lpfc/lpfc_init.c
+++ b/drivers/scsi/lpfc/lpfc_init.c
@@ -12979,6 +12979,7 @@ lpfc_init(void)
 		return -ENOMEM;
 	}
 	lpfc_nvme_cmd_template();
+	lpfc_nvmet_cmd_template();
 
 	/* Initialize in case vector mapping is needed */
 	lpfc_used_cpu = NULL;
* Unmerged path drivers/scsi/lpfc/lpfc_nvmet.c
