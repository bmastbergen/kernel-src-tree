iio: kfifo: Set update_needed to false only if a buffer was allocated

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [iio] kfifo: Set update_needed to false only if a buffer was allocated (Tony Camuso) [1559170]
Rebuild_FUZZ: 96.24%
commit-author Gabriele Mazzotta <gabriele.mzt@gmail.com>
commit e5f1efb9ae71bbb79629d660dc19b51ce7b95439
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e5f1efb9.failed

Check whether the allocation of a new kfifo buffer failed or not before
setting the update_needed flag to false. This will make
iio_request_update_kfifo() try to allocate a new buffer the next time a
buffer update is requested.

	Signed-off-by: Gabriele Mazzotta <gabriele.mzt@gmail.com>
	Signed-off-by: Jonathan Cameron <jic23@kernel.org>
(cherry picked from commit e5f1efb9ae71bbb79629d660dc19b51ce7b95439)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iio/kfifo_buf.c
diff --cc drivers/iio/kfifo_buf.c
index 1bea41bcbdc6,55c267bbfd2f..000000000000
--- a/drivers/iio/kfifo_buf.c
+++ b/drivers/iio/kfifo_buf.c
@@@ -32,13 -33,18 +32,23 @@@ static int iio_request_update_kfifo(str
  	int ret = 0;
  	struct iio_kfifo *buf = iio_to_kfifo(r);
  
 -	mutex_lock(&buf->user_lock);
 -	if (buf->update_needed) {
 -		kfifo_free(&buf->kf);
 -		ret = __iio_allocate_kfifo(buf, buf->buffer.bytes_per_datum,
 +	if (!buf->update_needed)
 +		goto error_ret;
 +	kfifo_free(&buf->kf);
 +	ret = __iio_allocate_kfifo(buf, buf->buffer.bytes_per_datum,
  				   buf->buffer.length);
++<<<<<<< HEAD
 +	r->stufftoread = false;
 +error_ret:
++=======
+ 		if (ret >= 0)
+ 			buf->update_needed = false;
+ 	} else {
+ 		kfifo_reset_out(&buf->kf);
+ 	}
+ 	mutex_unlock(&buf->user_lock);
+ 
++>>>>>>> e5f1efb9ae71 (iio: kfifo: Set update_needed to false only if a buffer was allocated)
  	return ret;
  }
  
* Unmerged path drivers/iio/kfifo_buf.c
