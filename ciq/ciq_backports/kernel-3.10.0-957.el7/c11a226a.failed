IB/mlx5: Move RoCE/ETH initialization to the corresponding stage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Mark Bloch <markb@mellanox.com>
commit c11a226a1e023508a663a07ff822f6ff33e7868c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/c11a226a.failed

Now that we have a stage just for RoCE/ETH, move all relevant
initialization logic into one place.

	Signed-off-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit c11a226a1e023508a663a07ff822f6ff33e7868c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index a49372cd35f7,9a5de242b74d..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -4077,6 -4063,19 +4077,22 @@@ static void *mlx5_ib_add(struct mlx5_co
  		dev->mdev->priv.eq_table.num_comp_vectors;
  	dev->ib_dev.dev.parent		= &mdev->pdev->dev;
  
++<<<<<<< HEAD
++=======
+ 	return 0;
+ 
+ err_free_port:
+ 	kfree(dev->port);
+ 
+ 	return -ENOMEM;
+ }
+ 
+ static int mlx5_ib_stage_caps_init(struct mlx5_ib_dev *dev)
+ {
+ 	struct mlx5_core_dev *mdev = dev->mdev;
+ 	int err;
+ 
++>>>>>>> c11a226a1e02 (IB/mlx5: Move RoCE/ETH initialization to the corresponding stage)
  	dev->ib_dev.uverbs_abi_ver	= MLX5_IB_UVERBS_ABI_VERSION;
  	dev->ib_dev.uverbs_cmd_mask	=
  		(1ull << IB_USER_VERBS_CMD_GET_CONTEXT)		|
@@@ -4204,8 -4201,30 +4218,17 @@@
  			(1ull << IB_USER_VERBS_EX_CMD_CREATE_FLOW) |
  			(1ull << IB_USER_VERBS_EX_CMD_DESTROY_FLOW);
  
- 	if (mlx5_ib_port_link_layer(&dev->ib_dev, 1) ==
- 	    IB_LINK_LAYER_ETHERNET) {
+ 	err = init_node_data(dev);
+ 	if (err)
 -		return err;
++		goto err_free_port;
+ 
+ 	mutex_init(&dev->flow_db.lock);
+ 	mutex_init(&dev->cap_mask_mutex);
+ 	INIT_LIST_HEAD(&dev->qp_list);
+ 	spin_lock_init(&dev->reset_flow_resource_lock);
+ 
 -	return 0;
 -}
 -
 -static int mlx5_ib_stage_roce_init(struct mlx5_ib_dev *dev)
 -{
 -	struct mlx5_core_dev *mdev = dev->mdev;
 -	enum rdma_link_layer ll;
 -	int port_type_cap;
 -	int err;
 -
 -	port_type_cap = MLX5_CAP_GEN(mdev, port_type);
 -	ll = mlx5_port_type_cap_to_rdma_ll(port_type_cap);
 -
+ 	if (ll == IB_LINK_LAYER_ETHERNET) {
+ 		dev->ib_dev.get_netdev	= mlx5_ib_get_netdev;
  		dev->ib_dev.create_wq	 = mlx5_ib_create_wq;
  		dev->ib_dev.modify_wq	 = mlx5_ib_modify_wq;
  		dev->ib_dev.destroy_wq	 = mlx5_ib_destroy_wq;
@@@ -4217,20 -4236,9 +4240,9 @@@
  			(1ull << IB_USER_VERBS_EX_CMD_DESTROY_WQ) |
  			(1ull << IB_USER_VERBS_EX_CMD_CREATE_RWQ_IND_TBL) |
  			(1ull << IB_USER_VERBS_EX_CMD_DESTROY_RWQ_IND_TBL);
- 	}
- 	err = init_node_data(dev);
- 	if (err)
- 		goto err_free_port;
- 
- 	mutex_init(&dev->flow_db.lock);
- 	mutex_init(&dev->cap_mask_mutex);
- 	INIT_LIST_HEAD(&dev->qp_list);
- 	spin_lock_init(&dev->reset_flow_resource_lock);
- 
- 	if (ll == IB_LINK_LAYER_ETHERNET) {
  		err = mlx5_enable_eth(dev);
  		if (err)
 -			return err;
 +			goto err_free_port;
  		dev->roce.last_port_state = IB_PORT_DOWN;
  	}
  
* Unmerged path drivers/infiniband/hw/mlx5/main.c
