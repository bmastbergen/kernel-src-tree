nvme: check for a live controller in nvme_dev_open

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] check for a live controller in nvme_dev_open (David Milburn) [1519689]
Rebuild_FUZZ: 93.62%
commit-author Christoph Hellwig <hch@lst.de>
commit 999ada28713d7bcf4a2c70cbab47b08cd95f2cf8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/999ada28.failed

This is a much more sensible check than just the admin queue.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@rimbeg.me>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
(cherry picked from commit 999ada28713d7bcf4a2c70cbab47b08cd95f2cf8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 7c0569923504,df525ab42fcd..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -1752,33 -1888,12 +1752,39 @@@ EXPORT_SYMBOL_GPL(nvme_init_identify)
  
  static int nvme_dev_open(struct inode *inode, struct file *file)
  {
 -	struct nvme_ctrl *ctrl =
 -		container_of(inode->i_cdev, struct nvme_ctrl, cdev);
 +	struct nvme_ctrl *ctrl;
 +	int instance = iminor(inode);
 +	int ret = -ENODEV;
 +
++<<<<<<< HEAD
 +	spin_lock(&dev_list_lock);
 +	list_for_each_entry(ctrl, &nvme_ctrl_list, node) {
 +		if (ctrl->instance != instance)
 +			continue;
 +
 +		if (!ctrl->admin_q) {
 +			ret = -EWOULDBLOCK;
 +			break;
 +		}
 +		if (!kref_get_unless_zero(&ctrl->kref))
 +			break;
 +		file->private_data = ctrl;
 +		ret = 0;
 +		break;
 +	}
 +	spin_unlock(&dev_list_lock);
 +
 +	return ret;
 +}
  
 +static int nvme_dev_release(struct inode *inode, struct file *file)
 +{
 +	nvme_put_ctrl(file->private_data);
++=======
+ 	if (ctrl->state != NVME_CTRL_LIVE)
+ 		return -EWOULDBLOCK;
+ 	file->private_data = ctrl;
++>>>>>>> 999ada28713d (nvme: check for a live controller in nvme_dev_open)
  	return 0;
  }
  
* Unmerged path drivers/nvme/host/core.c
