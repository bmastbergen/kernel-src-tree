ifb: fix packets checksum

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jon Maxwell <jmaxwell37@gmail.com>
commit b1d2e4e03f92734ff524f96c4b2287133de7a4a3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b1d2e4e0.failed

Fixup the checksum for CHECKSUM_COMPLETE when pulling skbs on RX path.
Otherwise we get splats when tc mirred is used to redirect packets to ifb.

Before fix:

nic: hw csum failure

	Signed-off-by: Jon Maxwell <jmaxwell37@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b1d2e4e03f92734ff524f96c4b2287133de7a4a3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ifb.c
diff --cc drivers/net/ifb.c
index 7c1efcebe148,d345c61d476c..000000000000
--- a/drivers/net/ifb.c
+++ b/drivers/net/ifb.c
@@@ -100,15 -97,14 +100,20 @@@ static void ri_tasklet(unsigned long de
  			break;
  		}
  		rcu_read_unlock();
 -		skb->skb_iif = txp->dev->ifindex;
 +		skb->skb_iif = _dev->ifindex;
  
 -		if (!skb->tc_from_ingress) {
 +		if (from & AT_EGRESS) {
  			dev_queue_xmit(skb);
++<<<<<<< HEAD
 +		} else if (from & AT_INGRESS) {
 +			skb_pull(skb, skb->mac_len);
++=======
+ 		} else {
+ 			skb_pull_rcsum(skb, skb->mac_len);
++>>>>>>> b1d2e4e03f92 (ifb: fix packets checksum)
  			netif_receive_skb(skb);
 -		}
 +		} else
 +			BUG();
  	}
  
  	if (__netif_tx_trylock(txq)) {
* Unmerged path drivers/net/ifb.c
