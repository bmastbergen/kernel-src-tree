iwlwifi: mvm: remove division by size of sizeof(struct ieee80211_wmm_rule)

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Colin Ian King <colin.king@canonical.com>
commit b38c395f16562423f438065ad8d88c20ad92cab3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b38c395f.failed

The subtraction of two struct ieee80211_wmm_rule pointers leaves a result
that is automatically scaled down by the size of the size of pointed-to
type, hence the division by sizeof(struct ieee80211_wmm_rule) is
bogus and should be removed.

Detected by CoverityScan, CID#1467777 ("Extra sizeof expression")

Fixes: 77e30e10ee28 ("iwlwifi: mvm: query regdb for wmm rule if needed")
	Signed-off-by: Colin Ian King <colin.king@canonical.com>
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit b38c395f16562423f438065ad8d88c20ad92cab3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
diff --cc drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
index c3a5d8ccc95e,b815ba38dbdb..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
@@@ -929,12 -975,63 +929,42 @@@ iwl_parse_nvm_mcc_info(struct device *d
  	}
  
  	regd->n_reg_rules = valid_rules;
 -	regd->n_wmm_rules = n_wmms;
  
 -	/*
 -	 * Narrow down regdom for unused regulatory rules to prevent hole
 -	 * between reg rules to wmm rules.
 -	 */
 -	regd_to_copy = sizeof(struct ieee80211_regdomain) +
 -		valid_rules * sizeof(struct ieee80211_reg_rule);
 +	/* set alpha2 from FW. */
 +	regd->alpha2[0] = fw_mcc >> 8;
 +	regd->alpha2[1] = fw_mcc & 0xff;
  
++<<<<<<< HEAD
 +	return regd;
++=======
+ 	wmms_to_copy = sizeof(struct ieee80211_wmm_rule) * n_wmms;
+ 
+ 	copy_rd = kzalloc(regd_to_copy + wmms_to_copy, GFP_KERNEL);
+ 	if (!copy_rd) {
+ 		copy_rd = ERR_PTR(-ENOMEM);
+ 		goto out;
+ 	}
+ 
+ 	memcpy(copy_rd, regd, regd_to_copy);
+ 	memcpy((u8 *)copy_rd + regd_to_copy, (u8 *)regd + size_of_regd,
+ 	       wmms_to_copy);
+ 
+ 	d_wmm = (struct ieee80211_wmm_rule *)((u8 *)copy_rd + regd_to_copy);
+ 	s_wmm = (struct ieee80211_wmm_rule *)((u8 *)regd + size_of_regd);
+ 
+ 	for (i = 0; i < regd->n_reg_rules; i++) {
+ 		if (!regd->reg_rules[i].wmm_rule)
+ 			continue;
+ 
+ 		copy_rd->reg_rules[i].wmm_rule = d_wmm +
+ 			(regd->reg_rules[i].wmm_rule - s_wmm);
+ 	}
+ 
+ out:
+ 	kfree(regdb_ptrs);
+ 	kfree(regd);
+ 	return copy_rd;
++>>>>>>> b38c395f1656 (iwlwifi: mvm: remove division by size of sizeof(struct ieee80211_wmm_rule))
  }
  IWL_EXPORT_SYMBOL(iwl_parse_nvm_mcc_info);
  
* Unmerged path drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
