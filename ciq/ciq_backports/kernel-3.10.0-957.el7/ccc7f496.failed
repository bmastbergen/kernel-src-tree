net: print net_device reg_state in netdev_* unless it's registered

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] print net_device reg_state in netdev_* unless it's registered (David Arcari) [1554418]
Rebuild_FUZZ: 96.06%
commit-author Veaceslav Falico <vfalico@gmail.com>
commit ccc7f4968a18b980994e622006b84e0195754390
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ccc7f496.failed

This way we'll always know in what status the device is, unless it's
running normally (i.e. NETDEV_REGISTERED).

Also, emit a warning once in case of a bad reg_state.

CC: "David S. Miller" <davem@davemloft.net>
CC: Jason Baron <jbaron@akamai.com>
CC: Eric Dumazet <edumazet@google.com>
CC: Vlad Yasevich <vyasevic@redhat.com>
CC: stephen hemminger <stephen@networkplumber.org>
CC: Jerry Chu <hkchu@google.com>
CC: Ben Hutchings <bhutchings@solarflare.com>
CC: Joe Perches <joe@perches.com>
	Signed-off-by: Veaceslav Falico <vfalico@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ccc7f4968a18b980994e622006b84e0195754390)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/dynamic_debug.c
diff --cc lib/dynamic_debug.c
index 2248589ab8a2,c9afbe2c445a..000000000000
--- a/lib/dynamic_debug.c
+++ b/lib/dynamic_debug.c
@@@ -610,8 -613,8 +610,13 @@@ int __dynamic_netdev_dbg(struct _ddebu
  	if (dev && dev->dev.parent) {
  		char buf[PREFIX_SIZE];
  
++<<<<<<< HEAD
 +		res = dev_printk_emit(LOGLEVEL_DEBUG, dev->dev.parent,
 +				      "%s%s %s %s: %pV",
++=======
+ 		res = dev_printk_emit(7, dev->dev.parent,
+ 				      "%s%s %s %s%s: %pV",
++>>>>>>> ccc7f4968a18 (net: print net_device reg_state in netdev_* unless it's registered)
  				      dynamic_emit_prefix(descriptor, buf),
  				      dev_driver_string(dev->dev.parent),
  				      dev_name(dev->dev.parent),
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index cb552e1391f3..8f7ee8d732af 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -4371,6 +4371,21 @@ static inline const char *netdev_name(const struct net_device *dev)
 	return dev->name;
 }
 
+static inline const char *netdev_reg_state(const struct net_device *dev)
+{
+	switch (dev->reg_state) {
+	case NETREG_UNINITIALIZED: return " (uninitialized)";
+	case NETREG_REGISTERED: return "";
+	case NETREG_UNREGISTERING: return " (unregistering)";
+	case NETREG_UNREGISTERED: return " (unregistered)";
+	case NETREG_RELEASED: return " (released)";
+	case NETREG_DUMMY: return " (dummy)";
+	}
+
+	WARN_ONCE(1, "%s: unknown reg_state %d\n", dev->name, dev->reg_state);
+	return " (unknown)";
+}
+
 __printf(3, 4)
 int netdev_printk(const char *level, const struct net_device *dev,
 		  const char *format, ...);
@@ -4427,7 +4442,8 @@ do {								\
  * file/line information and a backtrace.
  */
 #define netdev_WARN(dev, format, args...)			\
-	WARN(1, "netdevice: %s\n" format, netdev_name(dev), ##args)
+	WARN(1, "netdevice: %s%s\n" format, netdev_name(dev),	\
+	     netdev_reg_state(dev), ##args)
 
 /* netif printk helpers, similar to netdev_printk */
 
* Unmerged path lib/dynamic_debug.c
diff --git a/net/core/dev.c b/net/core/dev.c
index 92d6c5903634..8f51b9857321 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -8485,12 +8485,14 @@ static int __netdev_printk(const char *level, const struct net_device *dev,
 	if (dev && dev->dev.parent) {
 		r = dev_printk_emit(level[1] - '0',
 				    dev->dev.parent,
-				    "%s %s %s: %pV",
+				    "%s %s %s%s: %pV",
 				    dev_driver_string(dev->dev.parent),
 				    dev_name(dev->dev.parent),
-				    netdev_name(dev), vaf);
+				    netdev_name(dev), netdev_reg_state(dev),
+				    vaf);
 	} else if (dev) {
-		r = printk("%s%s: %pV", level, netdev_name(dev), vaf);
+		r = printk("%s%s%s: %pV", level, netdev_name(dev),
+			   netdev_reg_state(dev), vaf);
 	} else {
 		r = printk("%s(NULL net_device): %pV", level, vaf);
 	}
