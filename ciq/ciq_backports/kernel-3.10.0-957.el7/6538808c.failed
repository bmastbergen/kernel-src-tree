USB: serial: relax generic driver bulk-endpoint requirement

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [usb] serial: relax generic driver bulk-endpoint requirement (Torez Smith) [1540721]
Rebuild_FUZZ: 95.58%
commit-author Johan Hovold <johan@kernel.org>
commit 6538808c5619850cfedc9bee6d64d3793b31923d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6538808c.failed

Relax the generic driver bulk-endpoint requirement. The driver handles
devices without bulk-out endpoints just fine these days.

	Signed-off-by: Johan Hovold <johan@kernel.org>
(cherry picked from commit 6538808c5619850cfedc9bee6d64d3793b31923d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/serial/generic.c
diff --cc drivers/usb/serial/generic.c
index 21703d96b103,35cb8c0e584f..000000000000
--- a/drivers/usb/serial/generic.c
+++ b/drivers/usb/serial/generic.c
@@@ -47,7 -48,23 +47,27 @@@ static int usb_serial_generic_probe(str
  	return 0;
  }
  
++<<<<<<< HEAD
 +struct usb_serial_driver usb_serial_generic_device = {
++=======
+ static int usb_serial_generic_calc_num_ports(struct usb_serial *serial,
+ 					struct usb_serial_endpoints *epds)
+ {
+ 	struct device *dev = &serial->interface->dev;
+ 	int num_ports;
+ 
+ 	num_ports = max(epds->num_bulk_in, epds->num_bulk_out);
+ 
+ 	if (num_ports == 0) {
+ 		dev_err(dev, "device has no bulk endpoints\n");
+ 		return -ENODEV;
+ 	}
+ 
+ 	return num_ports;
+ }
+ 
+ static struct usb_serial_driver usb_serial_generic_device = {
++>>>>>>> 6538808c5619 (USB: serial: relax generic driver bulk-endpoint requirement)
  	.driver = {
  		.owner =	THIS_MODULE,
  		.name =		"generic",
* Unmerged path drivers/usb/serial/generic.c
