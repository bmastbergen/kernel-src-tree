sched/debug: Adjust newlines for better alignment

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Joe Lawrence <joe.lawrence@redhat.com>
commit e9ca267096674eadd1fd479279bcb58df1486049
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e9ca2670.failed

Scheduler debug stats include newlines that display out of alignment
when prefixed by timestamps.  For example, the dmesg utility:

  % echo t > /proc/sysrq-trigger
  % dmesg
  ...
  [   83.124251]
  runnable tasks:
   S           task   PID         tree-key  switches  prio     wait-time
  sum-exec        sum-sleep
  -----------------------------------------------------------------------------------------------------------

At the same time, some syslog utilities (like rsyslog by default) don't
like the additional newlines control characters, saving lines like this
to /var/log/messages:

  Mar 16 16:02:29 localhost kernel: #012runnable tasks:#012 S           task   PID         tree-key ...
                                    ^^^^               ^^^^
Clean these up by moving newline characters to their own SEQ_printf
invocation.  This leaves the /proc/sched_debug unchanged, but brings the
entire output into alignment when prefixed:

  % echo t > /proc/sysrq-trigger
  % dmesg
  ...
  [   62.410368] runnable tasks:
  [   62.410368]  S           task   PID         tree-key  switches  prio     wait-time             sum-exec        sum-sleep
  [   62.410369] -----------------------------------------------------------------------------------------------------------
  [   62.410369]  I  kworker/u12:0     5      1932.215593       332   120         0.000000         3.621252         0.000000 0 0 /

and no escaped control characters from rsyslog in /var/log/messages:

  Mar 16 16:15:06 localhost kernel: runnable tasks:
  Mar 16 16:15:06 localhost kernel: S           task   PID         tree-key  ...

	Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
	Acked-by: Peter Zijlstra <peterz@infradead.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/1521484555-8620-3-git-send-email-joe.lawrence@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit e9ca267096674eadd1fd479279bcb58df1486049)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/debug.c
diff --cc kernel/sched/debug.c
index 82c7a591e8d4,72c401b3b15c..000000000000
--- a/kernel/sched/debug.c
+++ b/kernel/sched/debug.c
@@@ -150,18 -500,16 +150,27 @@@ print_task(struct seq_file *m, struct r
  static void print_rq(struct seq_file *m, struct rq *rq, int rq_cpu)
  {
  	struct task_struct *g, *p;
 +	unsigned long flags;
  
++<<<<<<< HEAD
 +	SEQ_printf(m,
 +	"\nrunnable tasks:\n"
 +	"            task   PID         tree-key  switches  prio"
 +	"     wait-time             sum-exec        sum-sleep\n"
 +	"------------------------------------------------------"
 +	"----------------------------------------------------\n");
++=======
+ 	SEQ_printf(m, "\n");
+ 	SEQ_printf(m, "runnable tasks:\n");
+ 	SEQ_printf(m, " S           task   PID         tree-key  switches  prio"
+ 		   "     wait-time             sum-exec        sum-sleep\n");
+ 	SEQ_printf(m, "-------------------------------------------------------"
+ 		   "----------------------------------------------------\n");
++>>>>>>> e9ca26709667 (sched/debug: Adjust newlines for better alignment)
  
 -	rcu_read_lock();
 -	for_each_process_thread(g, p) {
 +	qread_lock_irqsave(&tasklist_lock, flags);
 +
 +	do_each_thread(g, p) {
  		if (task_cpu(p) != rq_cpu)
  			continue;
  
@@@ -262,6 -623,30 +275,32 @@@ void print_rt_rq(struct seq_file *m, in
  #undef P
  }
  
++<<<<<<< HEAD
++=======
+ void print_dl_rq(struct seq_file *m, int cpu, struct dl_rq *dl_rq)
+ {
+ 	struct dl_bw *dl_bw;
+ 
+ 	SEQ_printf(m, "\n");
+ 	SEQ_printf(m, "dl_rq[%d]:\n", cpu);
+ 
+ #define PU(x) \
+ 	SEQ_printf(m, "  .%-30s: %lu\n", #x, (unsigned long)(dl_rq->x))
+ 
+ 	PU(dl_nr_running);
+ #ifdef CONFIG_SMP
+ 	PU(dl_nr_migratory);
+ 	dl_bw = &cpu_rq(cpu)->rd->dl_bw;
+ #else
+ 	dl_bw = &dl_rq->dl_bw;
+ #endif
+ 	SEQ_printf(m, "  .%-30s: %lld\n", "dl_bw->bw", dl_bw->bw);
+ 	SEQ_printf(m, "  .%-30s: %lld\n", "dl_bw->total_bw", dl_bw->total_bw);
+ 
+ #undef PU
+ }
+ 
++>>>>>>> e9ca26709667 (sched/debug: Adjust newlines for better alignment)
  extern __read_mostly int sched_clock_running;
  
  static void print_cpu(struct seq_file *m, int cpu)
* Unmerged path kernel/sched/debug.c
