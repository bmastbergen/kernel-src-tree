pinctrl: intel: Make offset to interrupt status register configurable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [pinctrl] intel: Make offset to interrupt status register configurable (David Arcari) [1567849]
Rebuild_FUZZ: 93.02%
commit-author Mika Westerberg <mika.westerberg@linux.intel.com>
commit cf769bd86bccf210e4063540634a7abf2b99581f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/cf769bd8.failed

Some GPIO blocks have the interrupt status (GPI_IS) offset different
than it normally is, so make it configurable. If no offset is specified
we use the default.

While there remove two unused constants from the core driver.

	Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit cf769bd86bccf210e4063540634a7abf2b99581f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pinctrl/intel/pinctrl-intel.c
diff --cc drivers/pinctrl/intel/pinctrl-intel.c
index 2350f7aeaaab,3761fd29100f..000000000000
--- a/drivers/pinctrl/intel/pinctrl-intel.c
+++ b/drivers/pinctrl/intel/pinctrl-intel.c
@@@ -1389,6 -1345,26 +1393,29 @@@ int intel_pinctrl_suspend(struct devic
  }
  EXPORT_SYMBOL_GPL(intel_pinctrl_suspend);
  
++<<<<<<< HEAD
++=======
+ static void intel_gpio_irq_init(struct intel_pinctrl *pctrl)
+ {
+ 	size_t i;
+ 
+ 	for (i = 0; i < pctrl->ncommunities; i++) {
+ 		const struct intel_community *community;
+ 		void __iomem *base;
+ 		unsigned gpp;
+ 
+ 		community = &pctrl->communities[i];
+ 		base = community->regs;
+ 
+ 		for (gpp = 0; gpp < community->ngpps; gpp++) {
+ 			/* Mask and clear all interrupts */
+ 			writel(0, base + community->ie_offset + gpp * 4);
+ 			writel(0xffff, base + community->is_offset + gpp * 4);
+ 		}
+ 	}
+ }
+ 
++>>>>>>> cf769bd86bcc (pinctrl: intel: Make offset to interrupt status register configurable)
  int intel_pinctrl_resume(struct device *dev)
  {
  	struct platform_device *pdev = to_platform_device(dev);
* Unmerged path drivers/pinctrl/intel/pinctrl-intel.c
diff --git a/drivers/pinctrl/intel/pinctrl-intel.h b/drivers/pinctrl/intel/pinctrl-intel.h
index e178b29f1942..a954601a0a7b 100644
--- a/drivers/pinctrl/intel/pinctrl-intel.h
+++ b/drivers/pinctrl/intel/pinctrl-intel.h
@@ -73,6 +73,8 @@ struct intel_padgroup {
  * @hostown_offset: Register offset of HOSTSW_OWN from @regs. If %0 then it
  *                  is assumed that the host owns the pin (rather than
  *                  ACPI).
+ * @is_offset: Register offset of GPI_IS from @regs. If %0 then uses the
+ *             default (%0x100).
  * @ie_offset: Register offset of GPI_IE from @regs.
  * @pin_base: Starting pin of pins in this community
  * @gpp_size: Maximum number of pads in each group, such as PADCFGLOCK,
@@ -98,6 +100,7 @@ struct intel_community {
 	unsigned padown_offset;
 	unsigned padcfglock_offset;
 	unsigned hostown_offset;
+	unsigned is_offset;
 	unsigned ie_offset;
 	unsigned pin_base;
 	unsigned gpp_size;
