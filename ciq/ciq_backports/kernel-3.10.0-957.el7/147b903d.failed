Input: libps2 - add debugging statements

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [input] libps2 - add debugging statements (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 90.41%
commit-author Dmitry Torokhov <dmitry.torokhov@gmail.com>
commit 147b903da65daedc90dbeb66a75dd608a6a41ef2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/147b903d.failed

Debugging via i8042.debug and analyzing raw PS/2 data stream may be
cumbersome as you need to locate the boundaries of commands, decipher the
sliced commands, etc, etc. Let's add a bit more high level debug statements
for ps2_sendbyte(), ps2_command(), and ps2_sliced_command().

We do not introduce a new module parameter, but rater rely on the kernel
having dynamic debug facility enabled (which most everyone has nowadays).
Enable with:

echo "file libps2.c +pf" > /sys/kernel/debug/dynamic_debug/control

or add "libps2.dyndbg=+pf" to the kernel command line.

	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit 147b903da65daedc90dbeb66a75dd608a6a41ef2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/serio/libps2.c
diff --cc drivers/input/serio/libps2.c
index c43291c1cca4,82befae4dab0..000000000000
--- a/drivers/input/serio/libps2.c
+++ b/drivers/input/serio/libps2.c
@@@ -273,6 -295,39 +298,42 @@@ int ps2_command(struct ps2dev *ps2dev, 
  EXPORT_SYMBOL(ps2_command);
  
  /*
++<<<<<<< HEAD
++=======
+  * ps2_sliced_command() sends an extended PS/2 command to the mouse
+  * using sliced syntax, understood by advanced devices, such as Logitech
+  * or Synaptics touchpads. The command is encoded as:
+  * 0xE6 0xE8 rr 0xE8 ss 0xE8 tt 0xE8 uu where (rr*64)+(ss*16)+(tt*4)+uu
+  * is the command.
+  */
+ 
+ int ps2_sliced_command(struct ps2dev *ps2dev, u8 command)
+ {
+ 	int i;
+ 	int retval;
+ 
+ 	ps2_begin_command(ps2dev);
+ 
+ 	retval = __ps2_command(ps2dev, NULL, PS2_CMD_SETSCALE11);
+ 	if (retval)
+ 		goto out;
+ 
+ 	for (i = 6; i >= 0; i -= 2) {
+ 		u8 d = (command >> i) & 3;
+ 		retval = __ps2_command(ps2dev, &d, PS2_CMD_SETRES);
+ 		if (retval)
+ 			break;
+ 	}
+ 
+ out:
+ 	dev_dbg(&ps2dev->serio->dev, "%02x - %d\n", command, retval);
+ 	ps2_end_command(ps2dev);
+ 	return retval;
+ }
+ EXPORT_SYMBOL(ps2_sliced_command);
+ 
+ /*
++>>>>>>> 147b903da65d (Input: libps2 - add debugging statements)
   * ps2_init() initializes ps2dev structure
   */
  
* Unmerged path drivers/input/serio/libps2.c
