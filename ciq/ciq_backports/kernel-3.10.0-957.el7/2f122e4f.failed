nvme-rdma: wait for local invalidation before completing a request

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] rdma: wait for local invalidation before completing a request (David Milburn) [1547273]
Rebuild_FUZZ: 96.06%
commit-author Sagi Grimberg <sagi@grimberg.me>
commit 2f122e4f5107cf8ab0e592d63ed816a00110b4fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2f122e4f.failed

We must not complete a request before the host memory region is
invalidated.  Luckily we have send with invalidate protocol support so
we usually don't need to execute it, but in case the target did not
invalidate a memory region for us, we must wait for the invalidation to
complete before unmapping host memory and completing the I/O.

	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 2f122e4f5107cf8ab0e592d63ed816a00110b4fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/rdma.c
diff --cc drivers/nvme/host/rdma.c
index 073a7b113e99,c03460d0ca94..000000000000
--- a/drivers/nvme/host/rdma.c
+++ b/drivers/nvme/host/rdma.c
@@@ -892,16 -1061,6 +900,19 @@@ static void nvme_rdma_unmap_data(struc
  	if (!blk_rq_bytes(rq))
  		return;
  
++<<<<<<< HEAD
 +	if (req->mr->need_inval) {
 +		res = nvme_rdma_inv_rkey(queue, req);
 +		if (res < 0) {
 +			dev_err(ctrl->ctrl.device,
 +				"Queueing INV WR for rkey %#x failed (%d)\n",
 +				req->mr->rkey, res);
 +			nvme_rdma_error_recovery(queue->ctrl);
 +		}
 +	}
 +
++=======
++>>>>>>> 2f122e4f5107 (nvme-rdma: wait for local invalidation before completing a request)
  	ib_dma_unmap_sg(ibdev, req->sg_table.sgl,
  			req->nents, rq_data_dir(rq) ==
  				    WRITE ? DMA_TO_DEVICE : DMA_FROM_DEVICE);
* Unmerged path drivers/nvme/host/rdma.c
