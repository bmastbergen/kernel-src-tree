nvme: take refcount on transport module

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] take refcount on transport module (David Milburn) [1515584]
Rebuild_FUZZ: 91.67%
commit-author Nitzan Carmi <nitzanc@mellanox.com>
commit 85088c4a0f65f0be25a98164ec6bca02ac5cad04
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/85088c4a.failed

The block device is backed by the transport so we must ensure that the
transport driver will not be removed until all references are released.
Otherwise, we might end up referencing freed memory.

	Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
	Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 85088c4a0f65f0be25a98164ec6bca02ac5cad04)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 27174fd02aa2,c8bcfe64e976..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -988,7 -1223,24 +988,28 @@@ static int nvme_compat_ioctl(struct blo
  
  static int nvme_open(struct block_device *bdev, fmode_t mode)
  {
++<<<<<<< HEAD
 +	return nvme_get_ns_from_disk(bdev->bd_disk) ? 0 : -ENXIO;
++=======
+ 	struct nvme_ns *ns = bdev->bd_disk->private_data;
+ 
+ #ifdef CONFIG_NVME_MULTIPATH
+ 	/* should never be called due to GENHD_FL_HIDDEN */
+ 	if (WARN_ON_ONCE(ns->head->disk))
+ 		goto fail;
+ #endif
+ 	if (!kref_get_unless_zero(&ns->kref))
+ 		goto fail;
+ 	if (!try_module_get(ns->ctrl->ops->module))
+ 		goto fail_put_ns;
+ 
+ 	return 0;
+ 
+ fail_put_ns:
+ 	nvme_put_ns(ns);
+ fail:
+ 	return -ENXIO;
++>>>>>>> 85088c4a0f65 (nvme: take refcount on transport module)
  }
  
  static void nvme_release(struct gendisk *disk, fmode_t mode)
* Unmerged path drivers/nvme/host/core.c
