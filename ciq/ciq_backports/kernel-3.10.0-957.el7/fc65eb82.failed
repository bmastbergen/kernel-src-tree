perf trace beauty: Export the fd beautifier for use in more places

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit fc65eb8213a437b43e9de7776699aaa25dfa00df
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/fc65eb82.failed

Now that the beautifiers are being split into multiple source and object
files, we will need more of them exported, do it for the 'fd' one, will
be used to augment the return of some syscalls that may return an 'fd',
such as fcntl(fd, F_DUPFD).

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-39sosu12hhywyunqf5s74ewf@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit fc65eb8213a437b43e9de7776699aaa25dfa00df)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/trace/beauty/beauty.h
diff --cc tools/perf/trace/beauty/beauty.h
index b6964c1e77f7,790e8307fc6a..000000000000
--- a/tools/perf/trace/beauty/beauty.h
+++ b/tools/perf/trace/beauty/beauty.h
@@@ -31,6 -31,27 +31,30 @@@ unsigned long syscall_arg__val(struct s
  size_t syscall_arg__scnprintf_strarrays(char *bf, size_t size, struct syscall_arg *arg);
  #define SCA_STRARRAYS syscall_arg__scnprintf_strarrays
  
++<<<<<<< HEAD
++=======
+ size_t syscall_arg__scnprintf_fd(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_FD syscall_arg__scnprintf_fd
+ 
+ size_t syscall_arg__scnprintf_hex(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_HEX syscall_arg__scnprintf_hex
+ 
+ size_t syscall_arg__scnprintf_int(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_INT syscall_arg__scnprintf_int
+ 
+ size_t syscall_arg__scnprintf_long(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_LONG syscall_arg__scnprintf_long
+ 
+ size_t syscall_arg__scnprintf_fcntl_cmd(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_FCNTL_CMD syscall_arg__scnprintf_fcntl_cmd
+ 
+ size_t syscall_arg__scnprintf_fcntl_arg(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_FCNTL_ARG syscall_arg__scnprintf_fcntl_arg
+ 
+ size_t syscall_arg__scnprintf_open_flags(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_OPEN_FLAGS syscall_arg__scnprintf_open_flags
+ 
++>>>>>>> fc65eb8213a4 (perf trace beauty: Export the fd beautifier for use in more places)
  size_t syscall_arg__scnprintf_statx_flags(char *bf, size_t size, struct syscall_arg *arg);
  #define SCA_STATX_FLAGS syscall_arg__scnprintf_statx_flags
  
diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index 7277ef4b0577..69dd7758194d 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -363,11 +363,6 @@ static size_t syscall_arg__scnprintf_strhexarray(char *bf, size_t size,
 #define SCA_STRHEXARRAY syscall_arg__scnprintf_strhexarray
 #endif /* defined(__i386__) || defined(__x86_64__) */
 
-static size_t syscall_arg__scnprintf_fd(char *bf, size_t size,
-					struct syscall_arg *arg);
-
-#define SCA_FD syscall_arg__scnprintf_fd
-
 #ifndef AT_FDCWD
 #define AT_FDCWD	-100
 #endif
@@ -1052,8 +1047,7 @@ static const char *thread__fd_path(struct thread *thread, int fd,
 	return ttrace->paths.table[fd];
 }
 
-static size_t syscall_arg__scnprintf_fd(char *bf, size_t size,
-					struct syscall_arg *arg)
+size_t syscall_arg__scnprintf_fd(char *bf, size_t size, struct syscall_arg *arg)
 {
 	int fd = arg->val;
 	size_t printed = scnprintf(bf, size, "%d", fd);
* Unmerged path tools/perf/trace/beauty/beauty.h
