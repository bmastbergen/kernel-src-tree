ipv4: remove BUG_ON() from fib_compute_spec_dst

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
commit 9fc12023d6f51551d6ca9ed7e02ecc19d79caf17
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9fc12023.failed

Remove BUG_ON() from fib_compute_spec_dst routine and check
in_dev pointer during flowi4 data structure initialization.
fib_compute_spec_dst routine can be run concurrently with device removal
where ip_ptr net_device pointer is set to NULL. This can happen
if userspace enables pkt info on UDP rx socket and the device
is removed while traffic is flowing

Fixes: 35ebf65e851c ("ipv4: Create and use fib_compute_spec_dst() helper")
	Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9fc12023d6f51551d6ca9ed7e02ecc19d79caf17)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_frontend.c
diff --cc net/ipv4/fib_frontend.c
index 82467a4371a5,2998b0e47d4b..000000000000
--- a/net/ipv4/fib_frontend.c
+++ b/net/ipv4/fib_frontend.c
@@@ -264,15 -297,16 +263,28 @@@ __be32 fib_compute_spec_dst(struct sk_b
  
  	scope = RT_SCOPE_UNIVERSE;
  	if (!ipv4_is_zeronet(ip_hdr(skb)->saddr)) {
++<<<<<<< HEAD
 +		fl4.flowi4_oif = 0;
 +		fl4.flowi4_iif = LOOPBACK_IFINDEX;
 +		fl4.daddr = ip_hdr(skb)->saddr;
 +		fl4.saddr = 0;
 +		fl4.flowi4_tos = RT_TOS(ip_hdr(skb)->tos);
 +		fl4.flowi4_scope = scope;
 +		fl4.flowi4_mark = IN_DEV_SRC_VMARK(in_dev) ? skb->mark : 0;
 +		flowi4_tun_id_set(&fl4, 0);
 +		if (!fib_lookup(net, &fl4, &res))
++=======
+ 		bool vmark = in_dev && IN_DEV_SRC_VMARK(in_dev);
+ 		struct flowi4 fl4 = {
+ 			.flowi4_iif = LOOPBACK_IFINDEX,
+ 			.flowi4_oif = l3mdev_master_ifindex_rcu(dev),
+ 			.daddr = ip_hdr(skb)->saddr,
+ 			.flowi4_tos = RT_TOS(ip_hdr(skb)->tos),
+ 			.flowi4_scope = scope,
+ 			.flowi4_mark = vmark ? skb->mark : 0,
+ 		};
+ 		if (!fib_lookup(net, &fl4, &res, 0))
++>>>>>>> 9fc12023d6f5 (ipv4: remove BUG_ON() from fib_compute_spec_dst)
  			return FIB_RES_PREFSRC(net, res);
  	} else {
  		scope = RT_SCOPE_LINK;
* Unmerged path net/ipv4/fib_frontend.c
