drm/nouveau/gr/gf100-: virtualise init_zcull

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 02917aa39d56f504b47354135120000da1efa760
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/02917aa3.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 02917aa39d56f504b47354135120000da1efa760)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
index 5d64fed84507,56d9ead0b380..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
@@@ -1903,60 -1914,81 +1903,130 @@@ gf100_gr_new_(const struct gf100_gr_fun
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ void
+ gf100_gr_init_gpc_mmu(struct gf100_gr *gr)
+ {
+ 	struct nvkm_device *device = gr->base.engine.subdev.device;
+ 	struct nvkm_fb *fb = device->fb;
+ 
+ 	nvkm_wr32(device, 0x418880, nvkm_rd32(device, 0x100c80) & 0x00000001);
+ 	nvkm_wr32(device, 0x4188a4, 0x03000000);
+ 	nvkm_wr32(device, 0x418888, 0x00000000);
+ 	nvkm_wr32(device, 0x41888c, 0x00000000);
+ 	nvkm_wr32(device, 0x418890, 0x00000000);
+ 	nvkm_wr32(device, 0x418894, 0x00000000);
+ 	nvkm_wr32(device, 0x4188b4, nvkm_memory_addr(fb->mmu_wr) >> 8);
+ 	nvkm_wr32(device, 0x4188b8, nvkm_memory_addr(fb->mmu_rd) >> 8);
+ }
+ 
+ void
+ gf100_gr_init_zcull(struct gf100_gr *gr)
+ {
+ 	struct nvkm_device *device = gr->base.engine.subdev.device;
+ 	const u32 magicgpc918 = DIV_ROUND_UP(0x00800000, gr->tpc_total);
+ 	u32 data[TPC_MAX / 8] = {};
+ 	u8  tpcnr[GPC_MAX];
+ 	int gpc, tpc;
+ 	int i;
+ 
+ 	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
+ 	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
+ 		do {
+ 			gpc = (gpc + 1) % gr->gpc_nr;
+ 		} while (!tpcnr[gpc]);
+ 		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
+ 
+ 		data[i / 8] |= tpc << ((i % 8) * 4);
+ 	}
+ 
+ 	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
+ 	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
+ 	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
+ 	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
+ 
+ 	nvkm_wr32(device, GPC_BCAST(0x1bd4), magicgpc918);
+ }
+ 
+ void
+ gf100_gr_init_vsc_stream_master(struct gf100_gr *gr)
+ {
+ 	struct nvkm_device *device = gr->base.engine.subdev.device;
+ 	nvkm_mask(device, TPC_UNIT(0, 0, 0x05c), 0x00000001, 0x00000001);
+ }
+ 
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  int
  gf100_gr_init(struct gf100_gr *gr)
  {
  	struct nvkm_device *device = gr->base.engine.subdev.device;
++<<<<<<< HEAD
 +	struct nvkm_fb *fb = device->fb;
 +	const u32 magicgpc918 = DIV_ROUND_UP(0x00800000, gr->tpc_total);
 +	u32 data[TPC_MAX / 8] = {};
 +	u8  tpcnr[GPC_MAX];
++=======
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	int gpc, tpc, rop;
- 	int i;
  
 -	gr->func->init_gpc_mmu(gr);
 +	nvkm_wr32(device, GPC_BCAST(0x0880), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x08a4), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0888), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x088c), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0890), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0894), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x08b4), nvkm_memory_addr(fb->mmu_wr) >> 8);
 +	nvkm_wr32(device, GPC_BCAST(0x08b8), nvkm_memory_addr(fb->mmu_rd) >> 8);
  
  	if (gr->fuc_sw_nonctx)
  		gf100_gr_mmio(gr, gr->fuc_sw_nonctx);
  	else
  		gf100_gr_mmio(gr, gr->func->mmio);
  
++<<<<<<< HEAD
 +	nvkm_mask(device, TPC_UNIT(0, 0, 0x05c), 0x00000001, 0x00000001);
 +
 +	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
 +	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
 +		do {
 +			gpc = (gpc + 1) % gr->gpc_nr;
 +		} while (!tpcnr[gpc]);
 +		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
 +
 +		data[i / 8] |= tpc << ((i % 8) * 4);
 +	}
 +
 +	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
 +	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
 +	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
 +	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
 +
 +	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
 +			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
 +							 gr->tpc_total);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
 +	}
 +
 +	if (device->chipset != 0xd7)
 +		nvkm_wr32(device, GPC_BCAST(0x1bd4), magicgpc918);
 +	else
 +		nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
++=======
+ 	if (gr->func->init_r405a14)
+ 		gr->func->init_r405a14(gr);
+ 
+ 	if (gr->func->clkgate_pack)
+ 		nvkm_therm_clkgate_init(device->therm, gr->func->clkgate_pack);
+ 
+ 	if (gr->func->init_bios)
+ 		gr->func->init_bios(gr);
+ 
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  
  	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
  
@@@ -2039,6 -2071,9 +2109,12 @@@ gf100_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gf100_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.mmio = gf100_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
index a36e45a4a635,b322dc424761..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
@@@ -122,6 -122,10 +122,13 @@@ struct gf100_gr_func 
  	void (*dtor)(struct gf100_gr *);
  	int (*init)(struct gf100_gr *);
  	void (*init_gpc_mmu)(struct gf100_gr *);
++<<<<<<< HEAD
++=======
+ 	void (*init_r405a14)(struct gf100_gr *);
+ 	void (*init_bios)(struct gf100_gr *);
+ 	void (*init_vsc_stream_master)(struct gf100_gr *);
+ 	void (*init_zcull)(struct gf100_gr *);
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	void (*init_rop_active_fbps)(struct gf100_gr *);
  	void (*init_ppc_exceptions)(struct gf100_gr *);
  	void (*init_swdx_pes_mask)(struct gf100_gr *);
@@@ -140,10 -144,16 +147,17 @@@
  	struct nvkm_sclass sclass[];
  };
  
 -int gf100_gr_rops(struct gf100_gr *);
  int gf100_gr_init(struct gf100_gr *);
++<<<<<<< HEAD
 +int gf100_gr_rops(struct gf100_gr *);
++=======
+ void gf100_gr_init_vsc_stream_master(struct gf100_gr *);
+ void gf100_gr_init_zcull(struct gf100_gr *);
+ 
+ void gf117_gr_init_zcull(struct gf100_gr *);
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  
  int gk104_gr_init(struct gf100_gr *);
 -void gk104_gr_init_vsc_stream_master(struct gf100_gr *);
  void gk104_gr_init_rop_active_fbps(struct gf100_gr *);
  void gk104_gr_init_ppc_exceptions(struct gf100_gr *);
  
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
index d736dcd55ea2,23c2613fa6bf..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
@@@ -115,6 -115,9 +115,12 @@@ gf104_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf104_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.mmio = gf104_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
index 2f0d24498427,a79a7860732a..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
@@@ -106,6 -106,16 +106,13 @@@ gf108_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf108_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_r405a14 = gf108_gr_init_r405a14,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.mmio = gf108_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
index d1d942eb86af,fd8e13716d94..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
@@@ -87,6 -87,9 +87,12 @@@ gf110_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf110_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.mmio = gf110_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
index 0124e468086e,01e213e4d1a9..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
@@@ -123,6 -151,9 +151,12 @@@ gf117_gr_init_zcull(struct gf100_gr *gr
  static const struct gf100_gr_func
  gf117_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.mmio = gf117_gr_pack_mmio,
  	.fecs.ucode = &gf117_gr_fecs_ucode,
  	.gpccs.ucode = &gf117_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
index 8d8e4cafe28f,269922e9fca2..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
@@@ -178,6 -178,9 +178,12 @@@ gf119_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf119_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.mmio = gf119_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
index ec22da6c99fc,d1b7fb8957fb..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
@@@ -207,51 -415,18 +207,33 @@@ in
  gk104_gr_init(struct gf100_gr *gr)
  {
  	struct nvkm_device *device = gr->base.engine.subdev.device;
++<<<<<<< HEAD
 +	struct nvkm_fb *fb = device->fb;
 +	const u32 magicgpc918 = DIV_ROUND_UP(0x00800000, gr->tpc_total);
 +	u32 data[TPC_MAX / 8] = {};
 +	u8  tpcnr[GPC_MAX];
++=======
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	int gpc, tpc, rop;
- 	int i;
  
 -	gr->func->init_gpc_mmu(gr);
 +	nvkm_wr32(device, GPC_BCAST(0x0880), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x08a4), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0888), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x088c), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0890), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0894), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x08b4), nvkm_memory_addr(fb->mmu_wr) >> 8);
 +	nvkm_wr32(device, GPC_BCAST(0x08b8), nvkm_memory_addr(fb->mmu_rd) >> 8);
  
  	gf100_gr_mmio(gr, gr->func->mmio);
 -	if (gr->func->clkgate_pack)
 -		nvkm_therm_clkgate_init(gr->base.engine.subdev.device->therm,
 -					gr->func->clkgate_pack);
  
++<<<<<<< HEAD
 +	nvkm_wr32(device, GPC_UNIT(0, 0x3018), 0x00000001);
++=======
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  
- 	memset(data, 0x00, sizeof(data));
- 	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
- 	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
- 		do {
- 			gpc = (gpc + 1) % gr->gpc_nr;
- 		} while (!tpcnr[gpc]);
- 		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
- 
- 		data[i / 8] |= tpc << ((i % 8) * 4);
- 	}
- 
- 	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
- 	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
- 	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
- 	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
- 
- 	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
- 			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
- 							 gr->tpc_total);
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
- 	}
- 
- 	nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
  	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
  
  	gr->func->init_rop_active_fbps(gr);
@@@ -339,6 -514,9 +321,12 @@@ gk104_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gk104_gr = {
  	.init = gk104_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk104_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
index f31b171a4102,0eba041cd399..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
@@@ -183,6 -337,9 +183,12 @@@ gk110_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gk110_gr = {
  	.init = gk104_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk110_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
index d76dd178007f,84a1664f9e46..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
@@@ -103,6 -103,9 +103,12 @@@ gk110b_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gk110b_gr = {
  	.init = gk104_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk110b_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
index 14bbe6ed02a9,701199abf5f9..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
@@@ -162,6 -162,9 +162,12 @@@ gk208_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gk208_gr = {
  	.init = gk104_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk208_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
index 2c67fac576d1,a5f5e05c21ac..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
@@@ -308,16 -308,11 +308,18 @@@ gm107_gr_init_bios(struct gf100_gr *gr
  	}
  }
  
 -static void
 -gm107_gr_init_gpc_mmu(struct gf100_gr *gr)
 +static int
 +gm107_gr_init(struct gf100_gr *gr)
  {
  	struct nvkm_device *device = gr->base.engine.subdev.device;
++<<<<<<< HEAD
  	struct nvkm_fb *fb = device->fb;
 +	const u32 magicgpc918 = DIV_ROUND_UP(0x00800000, gr->tpc_total);
 +	u32 data[TPC_MAX / 8] = {};
 +	u8  tpcnr[GPC_MAX];
++=======
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
 +	int gpc, tpc, rop;
- 	int i;
  
  	nvkm_wr32(device, GPC_BCAST(0x0880), 0x00000000);
  	nvkm_wr32(device, GPC_BCAST(0x0890), 0x00000000);
@@@ -327,35 -322,20 +329,15 @@@
  
  	gf100_gr_mmio(gr, gr->func->mmio);
  
 -	gr->func->init_bios(gr);
 +	gm107_gr_init_bios(gr);
  
++<<<<<<< HEAD
 +	nvkm_wr32(device, GPC_UNIT(0, 0x3018), 0x00000001);
++=======
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  
- 	memset(data, 0x00, sizeof(data));
- 	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
- 	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
- 		do {
- 			gpc = (gpc + 1) % gr->gpc_nr;
- 		} while (!tpcnr[gpc]);
- 		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
- 
- 		data[i / 8] |= tpc << ((i % 8) * 4);
- 	}
- 
- 	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
- 	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
- 	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
- 	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
- 
- 	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
- 			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
- 							 gr->tpc_total);
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
- 	}
- 
- 	nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
  	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
  
  	gr->func->init_rop_active_fbps(gr);
@@@ -442,6 -422,10 +424,13 @@@ gm107_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gm107_gr = {
  	.init = gm107_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gm107_gr_init_gpc_mmu,
+ 	.init_bios = gm107_gr_init_bios,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gm107_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
index 6435f1257572,2ceef1737f84..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
@@@ -75,35 -71,11 +71,15 @@@ gm200_gr_init(struct gf100_gr *gr
  
  	gf100_gr_mmio(gr, gr->fuc_sw_nonctx);
  
 -	gr->func->init_bios(gr);
 +	gm107_gr_init_bios(gr);
  
++<<<<<<< HEAD
 +	nvkm_wr32(device, GPC_UNIT(0, 0x3018), 0x00000001);
++=======
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  
- 	memset(data, 0x00, sizeof(data));
- 	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
- 	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
- 		do {
- 			gpc = (gpc + 1) % gr->gpc_nr;
- 		} while (!tpcnr[gpc]);
- 		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
- 
- 		data[i / 8] |= tpc << ((i % 8) * 4);
- 	}
- 
- 	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
- 	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
- 	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
- 	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
- 
- 	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
- 			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
- 							 gr->tpc_total);
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
- 	}
- 
- 	nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
  	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
  	nvkm_wr32(device, GPC_BCAST(0x033c), nvkm_rd32(device, 0x100804));
  
@@@ -210,6 -182,9 +186,12 @@@ static const struct gf100_gr_fun
  gm200_gr = {
  	.init = gm200_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_bios = gm107_gr_init_bios,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gm200_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.rops = gm200_gr_rops,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
index 867a5f7cc5bc,7d3317eb3e54..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
@@@ -63,33 -59,9 +59,13 @@@ gp100_gr_init(struct gf100_gr *gr
  
  	gf100_gr_mmio(gr, gr->fuc_sw_nonctx);
  
++<<<<<<< HEAD
 +	nvkm_wr32(device, GPC_UNIT(0, 0x3018), 0x00000001);
++=======
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  
- 	memset(data, 0x00, sizeof(data));
- 	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
- 	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
- 		do {
- 			gpc = (gpc + 1) % gr->gpc_nr;
- 		} while (!tpcnr[gpc]);
- 		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
- 
- 		data[i / 8] |= tpc << ((i % 8) * 4);
- 	}
- 
- 	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
- 	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
- 	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
- 	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
- 
- 	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
- 			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
- 							 gr->tpc_total);
- 		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
- 	}
- 
- 	nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
  	gr->func->init_num_active_ltcs(gr);
  
  	gr->func->init_rop_active_fbps(gr);
@@@ -160,6 -132,8 +136,11 @@@ static const struct gf100_gr_fun
  gp100_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.init_num_active_ltcs = gp100_gr_init_num_active_ltcs,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
index 61e3a0b08559,0d9bf6c27a7b..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
@@@ -44,6 -44,8 +44,11 @@@ static const struct gf100_gr_fun
  gp102_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.init_swdx_pes_mask = gp102_gr_init_swdx_pes_mask,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
index f7272323f694,67d567e3a2ac..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
@@@ -30,6 -30,8 +30,11 @@@ static const struct gf100_gr_fun
  gp107_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.init_swdx_pes_mask = gp102_gr_init_swdx_pes_mask,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
index 5f3d161a0842,af06b10ba92f..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
@@@ -37,6 -37,8 +37,11 @@@ static const struct gf100_gr_fun
  gp10b_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
++>>>>>>> 02917aa39d56 (drm/nouveau/gr/gf100-: virtualise init_zcull)
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.init_num_active_ltcs = gp10b_gr_init_num_active_ltcs,
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk20a.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk20a.c
index de8b806b88fd..a806643ede7e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk20a.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk20a.c
@@ -219,11 +219,7 @@ int
 gk20a_gr_init(struct gf100_gr *gr)
 {
 	struct nvkm_device *device = gr->base.engine.subdev.device;
-	const u32 magicgpc918 = DIV_ROUND_UP(0x00800000, gr->tpc_total);
-	u32 data[TPC_MAX / 8] = {};
-	u8  tpcnr[GPC_MAX];
-	int gpc, tpc;
-	int ret, i;
+	int ret;
 
 	/* Clear SCC RAM */
 	nvkm_wr32(device, 0x40802c, 0x1);
@@ -246,31 +242,7 @@ gk20a_gr_init(struct gf100_gr *gr)
 	nvkm_mask(device, 0x503018, 0x1, 0x1);
 
 	/* Zcull init */
-	memset(data, 0x00, sizeof(data));
-	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
-	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
-		do {
-			gpc = (gpc + 1) % gr->gpc_nr;
-		} while (!tpcnr[gpc]);
-		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
-
-		data[i / 8] |= tpc << ((i % 8) * 4);
-	}
-
-	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
-	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
-	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
-	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
-
-	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
-		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
-			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
-		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
-			  gr->tpc_total);
-		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
-	}
-
-	nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
+	gr->func->init_zcull(gr);
 
 	gr->func->init_rop_active_fbps(gr);
 
@@ -311,6 +283,7 @@ gk20a_gr_init(struct gf100_gr *gr)
 static const struct gf100_gr_func
 gk20a_gr = {
 	.init = gk20a_gr_init,
+	.init_zcull = gf117_gr_init_zcull,
 	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
 	.set_hww_esr_report_mask = gk20a_gr_set_hww_esr_report_mask,
 	.rops = gf100_gr_rops,
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm20b.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm20b.c
index 69479af1d829..fcf86d5cf26f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm20b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm20b.c
@@ -65,6 +65,7 @@ gm20b_gr_set_hww_esr_report_mask(struct gf100_gr *gr)
 static const struct gf100_gr_func
 gm20b_gr = {
 	.init = gk20a_gr_init,
+	.init_zcull = gf117_gr_init_zcull,
 	.init_gpc_mmu = gm20b_gr_init_gpc_mmu,
 	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
 	.set_hww_esr_report_mask = gm20b_gr_set_hww_esr_report_mask,
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
