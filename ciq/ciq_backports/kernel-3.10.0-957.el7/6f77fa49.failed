PCI: shpchp: Remove acpi_get_hp_hw_control_from_firmware() flags

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [pci] shpchp: Remove acpi_get_hp_hw_control_from_firmware() flags (Jarod Wilson) [1495223]
Rebuild_FUZZ: 95.93%
commit-author Mika Westerberg <mika.westerberg@linux.intel.com>
commit 6f77fa4941aac0fa721eef5fe61820a4c314fffb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6f77fa49.failed

acpi_get_hp_hw_control_from_firmware() no longer uses the flags parameter,
so remove it.

	Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
[bhelgaas: split to separate patch]
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 6f77fa4941aac0fa721eef5fe61820a4c314fffb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pci_hotplug.h
diff --cc include/linux/pci_hotplug.h
index 2e855afa0212,39591213a584..000000000000
--- a/include/linux/pci_hotplug.h
+++ b/include/linux/pci_hotplug.h
@@@ -176,8 -162,8 +176,13 @@@ struct hotplug_params 
  #ifdef CONFIG_ACPI
  #include <linux/acpi.h>
  int pci_get_hp_params(struct pci_dev *dev, struct hotplug_params *hpp);
++<<<<<<< HEAD
 +bool pciehp_is_native(struct pci_dev *pdev);
 +int acpi_get_hp_hw_control_from_firmware(struct pci_dev *dev, u32 flags);
++=======
+ bool pciehp_is_native(struct pci_dev *bridge);
+ int acpi_get_hp_hw_control_from_firmware(struct pci_dev *bridge);
++>>>>>>> 6f77fa4941aa (PCI: shpchp: Remove acpi_get_hp_hw_control_from_firmware() flags)
  int acpi_pci_check_ejectable(struct pci_bus *pbus, acpi_handle handle);
  int acpi_pci_detect_ejectable(acpi_handle handle);
  #else
diff --git a/drivers/pci/hotplug/acpi_pcihp.c b/drivers/pci/hotplug/acpi_pcihp.c
index 631262c12b24..956941d359ad 100644
--- a/drivers/pci/hotplug/acpi_pcihp.c
+++ b/drivers/pci/hotplug/acpi_pcihp.c
@@ -77,11 +77,10 @@ static acpi_status acpi_run_oshp(acpi_handle handle)
 /**
  * acpi_get_hp_hw_control_from_firmware
  * @dev: the pci_dev of the bridge that has a hotplug controller
- * @flags: requested control bits for _OSC
  *
  * Attempt to take hotplug control from firmware.
  */
-int acpi_get_hp_hw_control_from_firmware(struct pci_dev *pdev, u32 flags)
+int acpi_get_hp_hw_control_from_firmware(struct pci_dev *pdev)
 {
 	const struct pci_host_bridge *host;
 	const struct acpi_pci_root *root;
diff --git a/drivers/pci/hotplug/shpchp.h b/drivers/pci/hotplug/shpchp.h
index 4da8fc601467..be9eb27d49a1 100644
--- a/drivers/pci/hotplug/shpchp.h
+++ b/drivers/pci/hotplug/shpchp.h
@@ -191,8 +191,7 @@ static inline const char *slot_name(struct slot *slot)
 #include <linux/pci-acpi.h>
 static inline int get_hp_hw_control_from_firmware(struct pci_dev *dev)
 {
-	u32 flags = OSC_PCI_SHPC_NATIVE_HP_CONTROL;
-	return acpi_get_hp_hw_control_from_firmware(dev, flags);
+	return acpi_get_hp_hw_control_from_firmware(dev);
 }
 #else
 #define get_hp_hw_control_from_firmware(dev) (0)
* Unmerged path include/linux/pci_hotplug.h
