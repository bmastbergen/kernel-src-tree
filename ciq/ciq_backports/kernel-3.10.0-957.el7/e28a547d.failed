IB/srpt: Fix a race condition related to wait list processing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Bart Van Assche <bart.vanassche@wdc.com>
commit e28a547da6e9c6dd5ba64b978d361222db3592e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e28a547d.failed

Wait list processing only occurs if the channel state >= CH_LIVE. Hence
set the channel state to CH_LIVE before triggering wait list processing
asynchronously.

	Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit e28a547da6e9c6dd5ba64b978d361222db3592e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srpt/ib_srpt.c
diff --cc drivers/infiniband/ulp/srpt/ib_srpt.c
index 22badbe26bbc,372f1eb2fa49..000000000000
--- a/drivers/infiniband/ulp/srpt/ib_srpt.c
+++ b/drivers/infiniband/ulp/srpt/ib_srpt.c
@@@ -2276,17 -2347,28 +2276,35 @@@ static void srpt_cm_rtu_recv(struct srp
  {
  	int ret;
  
 -	ret = srpt_ch_qp_rts(ch, ch->qp);
 -	if (ret < 0) {
 -		pr_err("%s-%d: QP transition to RTS failed\n", ch->sess_name,
 -		       ch->qp->qp_num);
 -		srpt_close_ch(ch);
 -		return;
 +	if (srpt_set_ch_state(ch, CH_LIVE)) {
 +		ret = srpt_ch_qp_rts(ch, ch->qp);
 +
 +		if (ret == 0) {
 +			/* Trigger wait list processing. */
 +			ret = srpt_zerolength_write(ch);
 +			WARN_ONCE(ret < 0, "%d\n", ret);
 +		} else {
 +			srpt_close_ch(ch);
 +		}
  	}
++<<<<<<< HEAD
++=======
+ 
+ 	/*
+ 	 * Note: calling srpt_close_ch() if the transition to the LIVE state
+ 	 * fails is not necessary since that means that that function has
+ 	 * already been invoked from another thread.
+ 	 */
+ 	if (!srpt_set_ch_state(ch, CH_LIVE)) {
+ 		pr_err("%s-%d: channel transition to LIVE state failed\n",
+ 		       ch->sess_name, ch->qp->qp_num);
+ 		return;
+ 	}
+ 
+ 	/* Trigger wait list processing. */
+ 	ret = srpt_zerolength_write(ch);
+ 	WARN_ONCE(ret < 0, "%d\n", ret);
++>>>>>>> e28a547da6e9 (IB/srpt: Fix a race condition related to wait list processing)
  }
  
  /**
* Unmerged path drivers/infiniband/ulp/srpt/ib_srpt.c
