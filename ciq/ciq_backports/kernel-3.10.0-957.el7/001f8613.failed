EDAC: Add new memory type for non-volatile DIMMs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [edac] Add new memory type for non-volatile DIMMs (Aristeu Rozanski) [1588177]
Rebuild_FUZZ: 93.33%
commit-author Tony Luck <tony.luck@intel.com>
commit 001f86137d3fca3c9002beaa7609c666715ebc70
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/001f8613.failed

There are now non-volatile versions of DIMMs. Add a new entry to "enum
mem_type" and a new string in edac_mem_types[].

	Signed-off-by: Tony Luck <tony.luck@intel.com>
	Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
	Cc: Aristeu Rozanski <aris@redhat.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Jean Delvare <jdelvare@suse.com>
	Cc: Len Brown <lenb@kernel.org>
	Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
	Cc: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
	Cc: linux-acpi@vger.kernel.org
	Cc: linux-edac <linux-edac@vger.kernel.org>
	Cc: linux-nvdimm@lists.01.org
Link: http://lkml.kernel.org/r/20180312182430.10335-3-tony.luck@intel.com
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 001f86137d3fca3c9002beaa7609c666715ebc70)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/edac_mc.c
diff --cc drivers/edac/edac_mc.c
index ea089853cb38,3bb82e511eca..000000000000
--- a/drivers/edac/edac_mc.c
+++ b/drivers/edac/edac_mc.c
@@@ -125,27 -194,28 +125,52 @@@ static void edac_mc_dump_mci(struct mem
  
  #endif				/* CONFIG_EDAC_DEBUG */
  
++<<<<<<< HEAD
 +const char *edac_mem_types[] = {
 +	[MEM_EMPTY]	= "Empty csrow",
 +	[MEM_RESERVED]	= "Reserved csrow type",
 +	[MEM_UNKNOWN]	= "Unknown csrow type",
 +	[MEM_FPM]	= "Fast page mode RAM",
 +	[MEM_EDO]	= "Extended data out RAM",
 +	[MEM_BEDO]	= "Burst Extended data out RAM",
 +	[MEM_SDR]	= "Single data rate SDRAM",
 +	[MEM_RDR]	= "Registered single data rate SDRAM",
 +	[MEM_DDR]	= "Double data rate SDRAM",
 +	[MEM_RDDR]	= "Registered Double data rate SDRAM",
 +	[MEM_RMBS]	= "Rambus DRAM",
 +	[MEM_DDR2]	= "Unbuffered DDR2 RAM",
 +	[MEM_FB_DDR2]	= "Fully buffered DDR2",
 +	[MEM_RDDR2]	= "Registered DDR2 RAM",
 +	[MEM_XDR]	= "Rambus XDR",
 +	[MEM_DDR3]	= "Unbuffered DDR3 RAM",
 +	[MEM_RDDR3]	= "Registered DDR3 RAM",
 +	[MEM_LRDDR3]	= "Load-Reduced DDR3 RAM",
 +	[MEM_DDR4]	= "Unbuffered DDR4 RAM",
 +	[MEM_RDDR4]	= "Registered DDR4 RAM",
++=======
+ const char * const edac_mem_types[] = {
+ 	[MEM_EMPTY]	= "Empty",
+ 	[MEM_RESERVED]	= "Reserved",
+ 	[MEM_UNKNOWN]	= "Unknown",
+ 	[MEM_FPM]	= "FPM",
+ 	[MEM_EDO]	= "EDO",
+ 	[MEM_BEDO]	= "BEDO",
+ 	[MEM_SDR]	= "Unbuffered-SDR",
+ 	[MEM_RDR]	= "Registered-SDR",
+ 	[MEM_DDR]	= "Unbuffered-DDR",
+ 	[MEM_RDDR]	= "Registered-DDR",
+ 	[MEM_RMBS]	= "RMBS",
+ 	[MEM_DDR2]	= "Unbuffered-DDR2",
+ 	[MEM_FB_DDR2]	= "FullyBuffered-DDR2",
+ 	[MEM_RDDR2]	= "Registered-DDR2",
+ 	[MEM_XDR]	= "XDR",
+ 	[MEM_DDR3]	= "Unbuffered-DDR3",
+ 	[MEM_RDDR3]	= "Registered-DDR3",
+ 	[MEM_LRDDR3]	= "Load-Reduced-DDR3-RAM",
+ 	[MEM_DDR4]	= "Unbuffered-DDR4",
+ 	[MEM_RDDR4]	= "Registered-DDR4",
+ 	[MEM_NVDIMM]	= "Non-volatile-RAM",
++>>>>>>> 001f86137d3f (EDAC: Add new memory type for non-volatile DIMMs)
  };
  EXPORT_SYMBOL_GPL(edac_mem_types);
  
* Unmerged path drivers/edac/edac_mc.c
diff --git a/include/linux/edac.h b/include/linux/edac.h
index 3db2e33dfcef..a5fa8e151cac 100644
--- a/include/linux/edac.h
+++ b/include/linux/edac.h
@@ -208,6 +208,7 @@ static inline char *mc_event_error_type(const unsigned int err_type)
  * @MEM_RDDR4:		Registered DDR4 RAM
  *			This is a variant of the DDR4 memories.
  * @MEM_LRDDR4:		Load-Reduced DDR4 memory.
+ * @MEM_NVDIMM:		Non-volatile RAM
  */
 enum mem_type {
 	MEM_EMPTY = 0,
@@ -231,6 +232,7 @@ enum mem_type {
 	MEM_DDR4,
 	MEM_RDDR4,
 	MEM_LRDDR4,
+	MEM_NVDIMM,
 };
 
 #define MEM_FLAG_EMPTY		BIT(MEM_EMPTY)
@@ -253,6 +255,7 @@ enum mem_type {
 #define MEM_FLAG_DDR4           BIT(MEM_DDR4)
 #define MEM_FLAG_RDDR4          BIT(MEM_RDDR4)
 #define MEM_FLAG_LRDDR4         BIT(MEM_LRDDR4)
+#define MEM_FLAG_NVDIMM         BIT(MEM_NVDIMM)
 
 /**
  * enum edac-type - Error Detection and Correction capabilities and mode
