ceph: remove stale check in ceph_invalidatepage()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit b072d774664b690768bdf7e068ee95a161e5f107
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b072d774.failed

Both set_page_dirty and truncate_complete_page should be called
for locked page, they can't race with each other.

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit b072d774664b690768bdf7e068ee95a161e5f107)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/addr.c
diff --cc fs/ceph/addr.c
index 2c8328a70fdb,b6ac3da9ddab..000000000000
--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@@ -147,13 -150,11 +147,21 @@@ static void ceph_invalidatepage(struct 
  		return;
  	}
  
++<<<<<<< HEAD
 +	/*
 +	 * We can get non-dirty pages here due to races between
 +	 * set_page_dirty and truncate_complete_page; just spit out a
 +	 * warning, in case we end up with accounting problems later.
 +	 */
 +	if (!PageDirty(page))
 +		pr_err("%p invalidatepage %p page not dirty\n", inode, page);
++=======
+ 	ceph_invalidate_fscache_page(inode, page);
+ 
+ 	WARN_ON(!PageLocked(page));
+ 	if (!PagePrivate(page))
+ 		return;
++>>>>>>> b072d774664b (ceph: remove stale check in ceph_invalidatepage())
  
  	ClearPageChecked(page);
  
* Unmerged path fs/ceph/addr.c
