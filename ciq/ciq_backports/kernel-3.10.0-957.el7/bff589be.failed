platform/x86: dell-wmi: Convert to the WMI bus infrastructure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [platform] x86: dell-wmi: Convert to the WMI bus infrastructure (Jarod Wilson) [1526317]
Rebuild_FUZZ: 92.04%
commit-author Andy Lutomirski <luto@kernel.org>
commit bff589be59c50924a9715951160578e570cba5c6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/bff589be.failed

Move some initialization out of _init and into _probe.
Update signatures and logic to use the wmi bus and device structures.

	Signed-off-by: Andy Lutomirski <luto@kernel.org>
[dvhart: drop deprecated sparse_keymap_free, order declarations, add commit msg]
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Mario Limonciello <mario_limonciello@dell.com>
	Cc: Pali Roh√°r <pali.rohar@gmail.com>
	Cc: linux-kernel@vger.kernel.org
	Cc: platform-driver-x86@vger.kernel.org
	Cc: linux-acpi@vger.kernel.org
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
(cherry picked from commit bff589be59c50924a9715951160578e570cba5c6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/dell-wmi.c
diff --cc drivers/platform/x86/dell-wmi.c
index 91c39b6c1524,f8978464df31..000000000000
--- a/drivers/platform/x86/dell-wmi.c
+++ b/drivers/platform/x86/dell-wmi.c
@@@ -36,6 -36,8 +36,11 @@@
  #include <linux/acpi.h>
  #include <linux/string.h>
  #include <linux/dmi.h>
++<<<<<<< HEAD
++=======
+ #include <linux/wmi.h>
+ #include <acpi/video.h>
++>>>>>>> bff589be59c5 (platform/x86: dell-wmi: Convert to the WMI bus infrastructure)
  #include "dell-smbios.h"
  
  MODULE_AUTHOR("Matthew Garrett <mjg@redhat.com>");
@@@ -333,33 -338,22 +341,26 @@@ static void dell_wmi_process_key(struc
  	if (type == 0x0000 && code == 0xe025 && !wmi_requires_smbios_request)
  		return;
  
++<<<<<<< HEAD
 +	sparse_keymap_report_entry(dell_wmi_input_dev, key, 1, true);
++=======
+ 	if (key->keycode == KEY_KBDILLUMTOGGLE)
+ 		dell_laptop_call_notifier(
+ 			DELL_LAPTOP_KBD_BACKLIGHT_BRIGHTNESS_CHANGED, NULL);
+ 
+ 	sparse_keymap_report_entry(priv->input_dev, key, 1, true);
++>>>>>>> bff589be59c5 (platform/x86: dell-wmi: Convert to the WMI bus infrastructure)
  }
  
- static void dell_wmi_notify(u32 value, void *context)
+ static void dell_wmi_notify(struct wmi_device *wdev,
+ 			    union acpi_object *obj)
  {
- 	struct acpi_buffer response = { ACPI_ALLOCATE_BUFFER, NULL };
- 	union acpi_object *obj;
- 	acpi_status status;
- 	acpi_size buffer_size;
  	u16 *buffer_entry, *buffer_end;
+ 	acpi_size buffer_size;
  	int len, i;
  
- 	status = wmi_get_event_data(value, &response);
- 	if (status != AE_OK) {
- 		pr_warn("bad event status 0x%x\n", status);
- 		return;
- 	}
- 
- 	obj = (union acpi_object *)response.pointer;
- 	if (!obj) {
- 		pr_warn("no response\n");
- 		return;
- 	}
- 
  	if (obj->type != ACPI_TYPE_BUFFER) {
  		pr_warn("bad response type %x\n", obj->type);
- 		kfree(obj);
  		return;
  	}
  
@@@ -730,20 -753,6 +760,23 @@@ static int __init dell_wmi_init(void
  	if (err)
  		return err;
  
++<<<<<<< HEAD
 +	acpi_video = acpi_video_backlight_support();
 +
 +	err = dell_wmi_input_setup();
 +	if (err)
 +		return err;
 +
 +	status = wmi_install_notify_handler(DELL_EVENT_GUID,
 +					 dell_wmi_notify, NULL);
 +	if (ACPI_FAILURE(status)) {
 +		input_unregister_device(dell_wmi_input_dev);
 +		pr_err("Unable to register notify handler - %d\n", status);
 +		return -ENODEV;
 +	}
 +
++=======
++>>>>>>> bff589be59c5 (platform/x86: dell-wmi: Convert to the WMI bus infrastructure)
  	dmi_check_system(dell_wmi_smbios_list);
  
  	if (wmi_requires_smbios_request) {
* Unmerged path drivers/platform/x86/dell-wmi.c
