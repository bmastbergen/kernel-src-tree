Input: psmouse - clean up Cypress probe

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [input] psmouse - clean up Cypress probe (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 90.14%
commit-author Dmitry Torokhov <dmitry.torokhov@gmail.com>
commit 24a06f3e3ab640490f49c8e8812d9550d6f15e92
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/24a06f3e.failed

When Cypress protocol support is disabled cypress_init() is a stub that
always returns -ENOSYS, so there is not point in testing for
CONFIG_MOUSE_PS2_CYPRESS after we decided that we are dealing with a
Cypress device. Also, we should only be calling cypress_detect() when
set_properties argument is "true", like with other protocols.

There is a slight change in behavior to make follow-up patches more
uniform: when we detect Cypress but its initialization fails, instead of
immediately returning PSMOUSE_PS2 protocol we now continue trying
IntelliMouse [Explorer]. Given that Cypress devices only have issue with
Sentelic probes probing Imtellimouse should be safe.

	Reviewed-by: Hans de Goede <hdegoede@redhat.com>
	Tested-by: Marcin Sochacki <msochacki+kernel@gmail.com>
	Tested-by: Till <till2.schaefer@uni-dortmund.de>
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit 24a06f3e3ab640490f49c8e8812d9550d6f15e92)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/mouse/psmouse-base.c
diff --cc drivers/input/mouse/psmouse-base.c
index e63171ffe241,978ba0bb4bd9..000000000000
--- a/drivers/input/mouse/psmouse-base.c
+++ b/drivers/input/mouse/psmouse-base.c
@@@ -780,25 -830,21 +780,36 @@@ static int psmouse_extensions(struct ps
  		synaptics_reset(psmouse);
  	}
  
 -	/*
 -	 * Try Cypress Trackpad. We must try it before Finger Sensing Pad
 -	 * because Finger Sensing Pad probe upsets some modules of Cypress
 -	 * Trackpads.
 -	 */
 +/*
 + * Try Cypress Trackpad.
 + * Must try it before Finger Sensing Pad because Finger Sensing Pad probe
 + * upsets some modules of Cypress Trackpads.
 + */
  	if (max_proto > PSMOUSE_IMEX &&
++<<<<<<< HEAD
 +			cypress_detect(psmouse, set_properties) == 0) {
 +		if (cypress_supported()) {
 +			if (cypress_init(psmouse) == 0)
 +				return PSMOUSE_CYPRESS;
 +
 +			/*
 +			 * Finger Sensing Pad probe upsets some modules of
 +			 * Cypress Trackpad, must avoid Finger Sensing Pad
 +			 * probe if Cypress Trackpad device detected.
 +			 */
 +			return PSMOUSE_PS2;
 +		}
++=======
+ 	    psmouse_do_detect(cypress_detect, psmouse, set_properties) == 0) {
+ 		if (!set_properties || cypress_init(psmouse) == 0)
+ 			return PSMOUSE_CYPRESS;
++>>>>>>> 24a06f3e3ab6 (Input: psmouse - clean up Cypress probe)
  
+ 		/*
+ 		 * Finger Sensing Pad probe upsets some modules of
+ 		 * Cypress Trackpad, must avoid Finger Sensing Pad
+ 		 * probe if Cypress Trackpad device detected.
+ 		 */
  		max_proto = PSMOUSE_IMEX;
  	}
  
* Unmerged path drivers/input/mouse/psmouse-base.c
