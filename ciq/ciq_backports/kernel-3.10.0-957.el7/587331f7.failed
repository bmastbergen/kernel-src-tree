nvme-fc: remove reinit_request routine

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author James Smart <jsmart2021@gmail.com>
commit 587331f71e2748371526597cafc72e5732c67e88
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/587331f7.failed

The reinit_request routine is not necessary. Remove support for the
op callback.

As all that nvme_reinit_tagset() does is itterate and call the
reinit routine, it too has no purpose. Remove the call.

	Signed-off-by: James Smart <james.smart@broadcom.com>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 587331f71e2748371526597cafc72e5732c67e88)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fc.c
diff --cc drivers/nvme/host/fc.c
index d165c0527376,36e72e64f57d..000000000000
--- a/drivers/nvme/host/fc.c
+++ b/drivers/nvme/host/fc.c
@@@ -1486,24 -1469,8 +1486,9 @@@ nvme_fc_xmt_disconnect_assoc(struct nvm
  
  /* *********************** NVME Ctrl Routines **************************** */
  
 +static void __nvme_fc_final_op_cleanup(struct request *rq);
  static void nvme_fc_error_recovery(struct nvme_fc_ctrl *ctrl, char *errmsg);
  
- static int
- nvme_fc_reinit_request(void *data, struct request *rq)
- {
- 	struct nvme_fc_fcp_op *op = blk_mq_rq_to_pdu(rq);
- 	struct nvme_fc_cmd_iu *cmdiu = &op->cmd_iu;
- 
- 	memset(cmdiu, 0, sizeof(*cmdiu));
- 	cmdiu->scsi_id = NVME_CMD_SCSI_ID;
- 	cmdiu->fc_id = NVME_CMD_FC_ID;
- 	cmdiu->iu_len = cpu_to_be16(sizeof(*cmdiu) / sizeof(u32));
- 	memset(&op->rsp_iu, 0, sizeof(op->rsp_iu));
- 
- 	return 0;
- }
- 
  static void
  __nvme_fc_exit_request(struct nvme_fc_ctrl *ctrl,
  		struct nvme_fc_fcp_op *op)
@@@ -2601,11 -2490,7 +2586,15 @@@ nvme_fc_reinit_io_queues(struct nvme_fc
  
  	nvme_fc_init_io_queues(ctrl);
  
++<<<<<<< HEAD
 +	ret = blk_mq_reinit_tagset(&ctrl->tag_set);
 +	if (ret)
 +		goto out_free_io_queues;
 +
 +	ret = nvme_fc_create_hw_io_queues(ctrl, ctrl->ctrl.opts->queue_size);
++=======
+ 	ret = nvme_fc_create_hw_io_queues(ctrl, ctrl->ctrl.sqsize + 1);
++>>>>>>> 587331f71e27 (nvme-fc: remove reinit_request routine)
  	if (ret)
  		goto out_free_io_queues;
  
* Unmerged path drivers/nvme/host/fc.c
