perf trace: Allow syscall arg formatters to request non suppression of zeros

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit d47737d524174a81b80c487fe07de3ee2458ee32
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d47737d5.failed

The 'perf trace' tool is suppressing args set to zero, with the
exception of string tables (strarrays), which are kinda like enums, i.e.
we have maps to go from numbers to strings.

But the 'cmd' fcntl arg requires more specialized treatment, as its
value will regulate if the next fcntl syscall arg, 'arg', should be
ignored (not used) and also how to format the syscall return (fd, file
flags, etc), so add a 'show_zero" bool to struct syscall_arg_fmt, to
regulate this more explicitely.

Will be used in a following patch with fcntl, here is just the
mechanism.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-all738jctxets8ffyizp5lzo@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d47737d524174a81b80c487fe07de3ee2458ee32)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
diff --cc tools/perf/builtin-trace.c
index 5114abbd2e32,b842bd93457f..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -599,6 -601,12 +599,15 @@@ static size_t syscall_arg__scnprintf_ge
  #include "trace/beauty/socket_type.c"
  #include "trace/beauty/waitid_options.c"
  
++<<<<<<< HEAD
++=======
+ struct syscall_arg_fmt {
+ 	size_t	   (*scnprintf)(char *bf, size_t size, struct syscall_arg *arg);
+ 	void	   *parm;
+ 	bool	   show_zero;
+ };
+ 
++>>>>>>> d47737d52417 (perf trace: Allow syscall arg formatters to request non suppression of zeros)
  static struct syscall_fmt {
  	const char *name;
  	const char *alias;
@@@ -1417,10 -1428,11 +1426,18 @@@ static size_t syscall__scnprintf_args(s
   			 * strarray for it.
   			 */
  			if (val == 0 &&
++<<<<<<< HEAD
 +			    !(sc->arg_scnprintf &&
 +			      (sc->arg_scnprintf[arg.idx] == SCA_STRARRAY ||
 +			       sc->arg_scnprintf[arg.idx] == SCA_STRARRAYS) &&
 +			      sc->arg_parm[arg.idx]))
++=======
+ 			    !(sc->arg_fmt &&
+ 			      (sc->arg_fmt[arg.idx].show_zero ||
+ 			       sc->arg_fmt[arg.idx].scnprintf == SCA_STRARRAY ||
+ 			       sc->arg_fmt[arg.idx].scnprintf == SCA_STRARRAYS) &&
+ 			      sc->arg_fmt[arg.idx].parm))
++>>>>>>> d47737d52417 (perf trace: Allow syscall arg formatters to request non suppression of zeros)
  				continue;
  
  			printed += scnprintf(bf + printed, size - printed,
* Unmerged path tools/perf/builtin-trace.c
