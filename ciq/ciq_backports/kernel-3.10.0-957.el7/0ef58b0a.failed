hv_netvsc: change GPAD teardown order on older versions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Stephen Hemminger <stephen@networkplumber.org>
commit 0ef58b0a05c127762f975c3dfe8b922e4aa87a29
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/0ef58b0a.failed

On older versions of Windows, the host ignores messages after
vmbus channel is closed.

Workaround this by doing what Windows does and send the teardown
before close on older versions of NVSP protocol.

	Reported-by: Mohammed Gamal <mgamal@redhat.com>
Fixes: 0cf737808ae7 ("hv_netvsc: netvsc_teardown_gpadl() split")
	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0ef58b0a05c127762f975c3dfe8b922e4aa87a29)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc.c
diff --cc drivers/net/hyperv/netvsc.c
index 1d1926ae8a75,37b0a30d6b03..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -609,14 -578,8 +613,19 @@@ void netvsc_device_remove(struct hv_dev
  	/* Now, we can close the channel safely */
  	vmbus_close(device->channel);
  
++<<<<<<< HEAD
 +	/*
 +	 * If host is Win2016 or higher then we do the GPADL tear down
 +	 * here after VMBus is closed, instead of doing it earlier.
 +	 */
 +	if (vmbus_proto_version >= VERSION_WIN10) {
 +		netvsc_teardown_recv_buf_gpadl(device, net_device);
 +		netvsc_teardown_send_buf_gpadl(device, net_device);
 +	}
++=======
+ 	if (net_device->nvsp_version >= NVSP_PROTOCOL_VERSION_4)
+ 		netvsc_teardown_gpadl(device, net_device);
++>>>>>>> 0ef58b0a05c1 (hv_netvsc: change GPAD teardown order on older versions)
  
  	/* Release all resources */
  	free_netvsc_device_rcu(net_device);
* Unmerged path drivers/net/hyperv/netvsc.c
