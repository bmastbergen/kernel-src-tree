md/raid1: factor out flush_bio_list()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [md] raid1: factor out flush_bio_list() (Nigel Croxon) [1494474]
Rebuild_FUZZ: 95.77%
commit-author NeilBrown <neilb@suse.com>
commit 673ca68d93879b9ffbbed874c9e70ca6e37cab15
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/673ca68d.failed

flush_pending_writes() and raid1_unplug() each contain identical
copies of a fairly large slab of code.  So factor that out into
new flush_bio_list() to simplify maintenance.

	Signed-off-by: NeilBrown <neilb@suse.com>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit 673ca68d93879b9ffbbed874c9e70ca6e37cab15)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid1.c
diff --cc drivers/md/raid1.c
index 5904bace89de,57611f43ed6c..000000000000
--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@@ -824,22 -823,7 +848,26 @@@ static void flush_pending_writes(struc
  		bio = bio_list_get(&conf->pending_bio_list);
  		conf->pending_count = 0;
  		spin_unlock_irq(&conf->device_lock);
++<<<<<<< HEAD
 +		/* flush any pending bitmap writes to
 +		 * disk before proceeding w/ I/O */
 +		bitmap_unplug(conf->mddev->bitmap);
 +		wake_up(&conf->wait_barrier);
 +
 +		while (bio) { /* submit pending writes */
 +			struct bio *next = bio->bi_next;
 +			bio->bi_next = NULL;
 +			if (unlikely((bio->bi_rw & REQ_DISCARD) &&
 +			    !blk_queue_discard(bdev_get_queue(bio->bi_bdev))))
 +				/* Just ignore it */
 +				bio_endio(bio, 0);
 +			else
 +				generic_make_request(bio);
 +			bio = next;
 +		}
++=======
+ 		flush_bio_list(conf, bio);
++>>>>>>> 673ca68d9387 (md/raid1: factor out flush_bio_list())
  	} else
  		spin_unlock_irq(&conf->device_lock);
  }
@@@ -1145,20 -1156,7 +1173,24 @@@ static void raid1_unplug(struct blk_plu
  
  	/* we aren't scheduling, so we can do the write-out directly. */
  	bio = bio_list_get(&plug->pending);
++<<<<<<< HEAD
 +	bitmap_unplug(mddev->bitmap);
 +	wake_up(&conf->wait_barrier);
 +
 +	while (bio) { /* submit pending writes */
 +		struct bio *next = bio->bi_next;
 +		bio->bi_next = NULL;
 +		if (unlikely((bio->bi_rw & REQ_DISCARD) &&
 +		    !blk_queue_discard(bdev_get_queue(bio->bi_bdev))))
 +			/* Just ignore it */
 +			bio_endio(bio, 0);
 +		else
 +			generic_make_request(bio);
 +		bio = next;
 +	}
++=======
+ 	flush_bio_list(conf, bio);
++>>>>>>> 673ca68d9387 (md/raid1: factor out flush_bio_list())
  	kfree(plug);
  }
  
* Unmerged path drivers/md/raid1.c
