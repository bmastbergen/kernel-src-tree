net: usbnet: support 64bit stats

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [usb] usbnet: support 64bit stats (Torez Smith) [1540721]
Rebuild_FUZZ: 91.53%
commit-author Greg Ungerer <gerg@linux-m68k.org>
commit c8b5d129ee293bcf972e7279ac996bb8a138505c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/c8b5d129.failed

Add support for the net stats64 counters to the usbnet core. With that
in place put the hooks into every usbnet driver to use it.

This is a strait forward addition of 64bit counters for RX and TX packet
and byte counts. It is done in the same style as for the other net drivers
that support stats64. Note that the other stats fields remain as 32bit
sized values (error counts, etc).

The motivation to add this is that it is not particularly difficult to
get the RX and TX byte counts to wrap on 32bit platforms.

	Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
	Acked-by: Bj√∏rn Mork <bjorn@mork.no>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c8b5d129ee293bcf972e7279ac996bb8a138505c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/asix_devices.c
#	drivers/net/usb/ax88172a.c
#	drivers/net/usb/ax88179_178a.c
#	drivers/net/usb/cdc_mbim.c
#	drivers/net/usb/cdc_ncm.c
#	drivers/net/usb/dm9601.c
#	drivers/net/usb/int51x1.c
#	drivers/net/usb/mcs7830.c
#	drivers/net/usb/qmi_wwan.c
#	drivers/net/usb/sierra_net.c
#	drivers/net/usb/smsc75xx.c
#	drivers/net/usb/smsc95xx.c
#	drivers/net/usb/usbnet.c
diff --cc drivers/net/usb/asix_devices.c
index 6fca9b006555,a3aa0a27dfe5..000000000000
--- a/drivers/net/usb/asix_devices.c
+++ b/drivers/net/usb/asix_devices.c
@@@ -205,7 -205,8 +205,12 @@@ static const struct net_device_ops ax88
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address 	= eth_mac_addr,
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_do_ioctl		= asix_ioctl,
@@@ -590,7 -591,8 +595,12 @@@ static const struct net_device_ops ax88
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address 	= asix_set_mac_address,
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_do_ioctl		= asix_ioctl,
diff --cc drivers/net/usb/ax88172a.c
index cfd48422bee5,501576f53854..000000000000
--- a/drivers/net/usb/ax88172a.c
+++ b/drivers/net/usb/ax88172a.c
@@@ -152,7 -142,8 +152,12 @@@ static const struct net_device_ops ax88
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address	= asix_set_mac_address,
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_do_ioctl		= ax88172a_ioctl,
diff --cc drivers/net/usb/ax88179_178a.c
index 5b71883616c0,51cf60092a18..000000000000
--- a/drivers/net/usb/ax88179_178a.c
+++ b/drivers/net/usb/ax88179_178a.c
@@@ -962,7 -959,8 +962,12 @@@ static const struct net_device_ops ax88
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= ax88179_change_mtu,
++=======
+ 	.ndo_get_stats64	= usbnet_get_stats64,
+ 	.ndo_change_mtu		= ax88179_change_mtu,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address	= ax88179_set_mac_addr,
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_do_ioctl		= ax88179_ioctl,
diff --cc drivers/net/usb/cdc_mbim.c
index ade0d5ec45c5,a6b997cffd3b..000000000000
--- a/drivers/net/usb/cdc_mbim.c
+++ b/drivers/net/usb/cdc_mbim.c
@@@ -100,7 -100,8 +100,12 @@@ static const struct net_device_ops cdc_
  	.ndo_stop             = usbnet_stop,
  	.ndo_start_xmit       = usbnet_start_xmit,
  	.ndo_tx_timeout       = usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74  = cdc_ncm_change_mtu,
++=======
+ 	.ndo_get_stats64      = usbnet_get_stats64,
+ 	.ndo_change_mtu       = cdc_ncm_change_mtu,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address  = eth_mac_addr,
  	.ndo_validate_addr    = eth_validate_addr,
  	.ndo_vlan_rx_add_vid  = cdc_mbim_rx_add_vid,
diff --cc drivers/net/usb/cdc_ncm.c
index 3e582e83ebb5,bb3f71f9fbde..000000000000
--- a/drivers/net/usb/cdc_ncm.c
+++ b/drivers/net/usb/cdc_ncm.c
@@@ -757,7 -753,8 +757,12 @@@ static const struct net_device_ops cdc_
  	.ndo_stop	     = usbnet_stop,
  	.ndo_start_xmit	     = usbnet_start_xmit,
  	.ndo_tx_timeout	     = usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74 = cdc_ncm_change_mtu,
++=======
+ 	.ndo_get_stats64     = usbnet_get_stats64,
+ 	.ndo_change_mtu	     = cdc_ncm_change_mtu,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address = eth_mac_addr,
  	.ndo_validate_addr   = eth_validate_addr,
  };
diff --cc drivers/net/usb/dm9601.c
index 69550cbc0265,b91f92e4e5f2..000000000000
--- a/drivers/net/usb/dm9601.c
+++ b/drivers/net/usb/dm9601.c
@@@ -342,7 -342,8 +342,12 @@@ static const struct net_device_ops dm96
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_do_ioctl 		= dm9601_ioctl,
  	.ndo_set_rx_mode	= dm9601_set_multicast,
diff --cc drivers/net/usb/int51x1.c
index 03932a5d9ad1,5a43b77a6b9c..000000000000
--- a/drivers/net/usb/int51x1.c
+++ b/drivers/net/usb/int51x1.c
@@@ -143,7 -143,8 +143,12 @@@ static const struct net_device_ops int5
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address	= eth_mac_addr,
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_set_rx_mode	= int51x1_set_multicast,
diff --cc drivers/net/usb/mcs7830.c
index 97c65ddb901e,5a47e5510ca8..000000000000
--- a/drivers/net/usb/mcs7830.c
+++ b/drivers/net/usb/mcs7830.c
@@@ -474,7 -474,8 +474,12 @@@ static const struct net_device_ops mcs7
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_do_ioctl 		= mcs7830_ioctl,
  	.ndo_set_rx_mode	= mcs7830_set_multicast,
diff --cc drivers/net/usb/qmi_wwan.c
index edfd89bd9d06,adbed261cc8a..000000000000
--- a/drivers/net/usb/qmi_wwan.c
+++ b/drivers/net/usb/qmi_wwan.c
@@@ -540,7 -541,8 +540,12 @@@ static const struct net_device_ops qmi_
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address	= qmi_wwan_mac_addr,
  	.ndo_validate_addr	= eth_validate_addr,
  };
diff --cc drivers/net/usb/sierra_net.c
index bfb56a087297,2110ab3513f0..000000000000
--- a/drivers/net/usb/sierra_net.c
+++ b/drivers/net/usb/sierra_net.c
@@@ -199,7 -198,8 +199,12 @@@ static const struct net_device_ops sier
  	.ndo_stop               = usbnet_stop,
  	.ndo_start_xmit         = usbnet_start_xmit,
  	.ndo_tx_timeout         = usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74    = sierra_net_change_mtu,
++=======
+ 	.ndo_change_mtu         = usbnet_change_mtu,
+ 	.ndo_get_stats64        = usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address    = eth_mac_addr,
  	.ndo_validate_addr      = eth_validate_addr,
  };
diff --cc drivers/net/usb/smsc75xx.c
index 6d854b25145e,1ce01dbd494f..000000000000
--- a/drivers/net/usb/smsc75xx.c
+++ b/drivers/net/usb/smsc75xx.c
@@@ -1384,7 -1381,8 +1384,12 @@@ static const struct net_device_ops smsc
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= smsc75xx_change_mtu,
++=======
+ 	.ndo_get_stats64	= usbnet_get_stats64,
+ 	.ndo_change_mtu		= smsc75xx_change_mtu,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address 	= eth_mac_addr,
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_do_ioctl 		= smsc75xx_ioctl,
diff --cc drivers/net/usb/smsc95xx.c
index df77201f22a3,c2f67cecdf5b..000000000000
--- a/drivers/net/usb/smsc95xx.c
+++ b/drivers/net/usb/smsc95xx.c
@@@ -1247,7 -1247,8 +1247,12 @@@ static const struct net_device_ops smsc
  	.ndo_stop		= usbnet_stop,
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address 	= eth_mac_addr,
  	.ndo_validate_addr	= eth_validate_addr,
  	.ndo_do_ioctl 		= smsc95xx_ioctl,
diff --cc drivers/net/usb/usbnet.c
index c49a65404374,9890656af735..000000000000
--- a/drivers/net/usb/usbnet.c
+++ b/drivers/net/usb/usbnet.c
@@@ -1582,7 -1619,8 +1621,12 @@@ static const struct net_device_ops usbn
  	.ndo_start_xmit		= usbnet_start_xmit,
  	.ndo_tx_timeout		= usbnet_tx_timeout,
  	.ndo_set_rx_mode	= usbnet_set_rx_mode,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= usbnet_change_mtu,
++=======
+ 	.ndo_change_mtu		= usbnet_change_mtu,
+ 	.ndo_get_stats64	= usbnet_get_stats64,
++>>>>>>> c8b5d129ee29 (net: usbnet: support 64bit stats)
  	.ndo_set_mac_address 	= eth_mac_addr,
  	.ndo_validate_addr	= eth_validate_addr,
  };
* Unmerged path drivers/net/usb/asix_devices.c
* Unmerged path drivers/net/usb/ax88172a.c
* Unmerged path drivers/net/usb/ax88179_178a.c
* Unmerged path drivers/net/usb/cdc_mbim.c
* Unmerged path drivers/net/usb/cdc_ncm.c
* Unmerged path drivers/net/usb/dm9601.c
* Unmerged path drivers/net/usb/int51x1.c
* Unmerged path drivers/net/usb/mcs7830.c
* Unmerged path drivers/net/usb/qmi_wwan.c
diff --git a/drivers/net/usb/rndis_host.c b/drivers/net/usb/rndis_host.c
index 4f4f71b2966b..8c4660556f6b 100644
--- a/drivers/net/usb/rndis_host.c
+++ b/drivers/net/usb/rndis_host.c
@@ -291,6 +291,7 @@ static const struct net_device_ops rndis_netdev_ops = {
 	.ndo_stop		= usbnet_stop,
 	.ndo_start_xmit		= usbnet_start_xmit,
 	.ndo_tx_timeout		= usbnet_tx_timeout,
+	.ndo_get_stats64	= usbnet_get_stats64,
 	.ndo_set_mac_address 	= eth_mac_addr,
 	.ndo_validate_addr	= eth_validate_addr,
 };
* Unmerged path drivers/net/usb/sierra_net.c
* Unmerged path drivers/net/usb/smsc75xx.c
* Unmerged path drivers/net/usb/smsc95xx.c
diff --git a/drivers/net/usb/sr9700.c b/drivers/net/usb/sr9700.c
index ff554da40cc3..2d316c1b851b 100644
--- a/drivers/net/usb/sr9700.c
+++ b/drivers/net/usb/sr9700.c
@@ -308,6 +308,7 @@ static const struct net_device_ops sr9700_netdev_ops = {
 	.ndo_start_xmit		= usbnet_start_xmit,
 	.ndo_tx_timeout		= usbnet_tx_timeout,
 	.ndo_change_mtu		= usbnet_change_mtu,
+	.ndo_get_stats64	= usbnet_get_stats64,
 	.ndo_validate_addr	= eth_validate_addr,
 	.ndo_do_ioctl		= sr9700_ioctl,
 	.ndo_set_rx_mode	= sr9700_set_multicast,
diff --git a/drivers/net/usb/sr9800.c b/drivers/net/usb/sr9800.c
index a4aa774db059..1923dc9e0f80 100644
--- a/drivers/net/usb/sr9800.c
+++ b/drivers/net/usb/sr9800.c
@@ -675,6 +675,7 @@ static const struct net_device_ops sr9800_netdev_ops = {
 	.ndo_start_xmit		= usbnet_start_xmit,
 	.ndo_tx_timeout		= usbnet_tx_timeout,
 	.ndo_change_mtu		= usbnet_change_mtu,
+	.ndo_get_stats64	= usbnet_get_stats64,
 	.ndo_set_mac_address	= sr_set_mac_address,
 	.ndo_validate_addr	= eth_validate_addr,
 	.ndo_do_ioctl		= sr_ioctl,
* Unmerged path drivers/net/usb/usbnet.c
diff --git a/drivers/net/wireless/rndis_wlan.c b/drivers/net/wireless/rndis_wlan.c
index 8169a85c4498..dcb0c2e618f3 100644
--- a/drivers/net/wireless/rndis_wlan.c
+++ b/drivers/net/wireless/rndis_wlan.c
@@ -3387,6 +3387,7 @@ static const struct net_device_ops rndis_wlan_netdev_ops = {
 	.ndo_stop		= usbnet_stop,
 	.ndo_start_xmit		= usbnet_start_xmit,
 	.ndo_tx_timeout		= usbnet_tx_timeout,
+	.ndo_get_stats64	= usbnet_get_stats64,
 	.ndo_set_mac_address 	= eth_mac_addr,
 	.ndo_validate_addr	= eth_validate_addr,
 	.ndo_set_rx_mode	= rndis_wlan_set_multicast_list,
diff --git a/include/linux/usb/usbnet.h b/include/linux/usb/usbnet.h
index e2b56917450f..7dffa5624ea6 100644
--- a/include/linux/usb/usbnet.h
+++ b/include/linux/usb/usbnet.h
@@ -64,6 +64,8 @@ struct usbnet {
 	struct usb_anchor	deferred;
 	struct tasklet_struct	bh;
 
+	struct pcpu_sw_netstats __percpu *stats64;
+
 	struct work_struct	kevent;
 	unsigned long		flags;
 #		define EVENT_TX_HALT	0
@@ -278,5 +280,7 @@ extern int usbnet_status_start(struct usbnet *dev, gfp_t mem_flags);
 extern void usbnet_status_stop(struct usbnet *dev);
 
 extern void usbnet_update_max_qlen(struct usbnet *dev);
+extern void usbnet_get_stats64(struct net_device *dev,
+			       struct rtnl_link_stats64 *stats);
 
 #endif /* __LINUX_USB_USBNET_H */
