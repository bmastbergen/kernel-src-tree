fw_cfg: add a public uapi header

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Marc-André Lureau <marcandre.lureau@redhat.com>
commit 1f57bc12d87dda2d56b564d35f21b9e6bdb2bb2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/1f57bc12.failed

Create a common header file for well-known values and structures to be
shared by the Linux kernel with qemu or other projects.

It is based from qemu/docs/specs/fw_cfg.txt which references
qemu/include/hw/nvram/fw_cfg_keys.h "for the most up-to-date and
authoritative list" & vmcoreinfo.txt. Those files don't have an
explicit license, but qemu/hw/nvram/fw_cfg.c is BSD-license, so
Michael S. Tsirkin suggested to use the same license.

The patch intentionally left out DMA & vmcoreinfo structures &
defines, which are added in the commits making usage of it.

	Suggested-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: Marc-André Lureau <marcandre.lureau@redhat.com>
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
(cherry picked from commit 1f57bc12d87dda2d56b564d35f21b9e6bdb2bb2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	MAINTAINERS
#	drivers/firmware/qemu_fw_cfg.c
diff --cc MAINTAINERS
index 28d01d76d545,fc2c373f24a0..000000000000
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@@ -7001,51 -11307,104 +7001,73 @@@ F:	include/linux/pwm.
  F:	drivers/pwm/
  F:	drivers/video/backlight/pwm_bl.c
  F:	include/linux/pwm_backlight.h
 -F:	drivers/gpio/gpio-mvebu.c
 -F:	Documentation/devicetree/bindings/gpio/gpio-mvebu.txt
 -
 -PXA GPIO DRIVER
 -M:	Robert Jarzmik <robert.jarzmik@free.fr>
 -L:	linux-gpio@vger.kernel.org
 -S:	Maintained
 -F:	drivers/gpio/gpio-pxa.c
 -
 -PXA MMCI DRIVER
 -S:	Orphan
 -
 -PXA RTC DRIVER
 -M:	Robert Jarzmik <robert.jarzmik@free.fr>
 -L:	linux-rtc@vger.kernel.org
 -S:	Maintained
  
  PXA2xx/PXA3xx SUPPORT
 -M:	Daniel Mack <daniel@zonque.org>
 +M:	Eric Miao <eric.y.miao@gmail.com>
 +M:	Russell King <linux@arm.linux.org.uk>
  M:	Haojian Zhuang <haojian.zhuang@gmail.com>
 -M:	Robert Jarzmik <robert.jarzmik@free.fr>
  L:	linux-arm-kernel@lists.infradead.org (moderated for non-subscribers)
  T:	git git://github.com/hzhuang1/linux.git
 -T:	git git://github.com/rjarzmik/linux.git
 +T:	git git://git.linaro.org/people/ycmiao/pxa-linux.git
  S:	Maintained
 -F:	arch/arm/boot/dts/pxa*
  F:	arch/arm/mach-pxa/
 -F:	drivers/dma/pxa*
  F:	drivers/pcmcia/pxa2xx*
 -F:	drivers/pinctrl/pxa/
  F:	drivers/spi/spi-pxa2xx*
 -F:	drivers/usb/gadget/udc/pxa2*
 +F:	drivers/usb/gadget/pxa2*
  F:	include/sound/pxa2xx-lib.h
  F:	sound/arm/pxa*
 -F:	sound/soc/pxa/
 +F:	sound/soc/pxa
  
 -PXA3xx NAND FLASH DRIVER
 -M:	Ezequiel Garcia <ezequiel.garcia@free-electrons.com>
 -L:	linux-mtd@lists.infradead.org
 +MMP SUPPORT
 +M:	Eric Miao <eric.y.miao@gmail.com>
 +M:	Haojian Zhuang <haojian.zhuang@gmail.com>
 +L:	linux-arm-kernel@lists.infradead.org (moderated for non-subscribers)
 +T:	git git://github.com/hzhuang1/linux.git
 +T:	git git://git.linaro.org/people/ycmiao/pxa-linux.git
 +S:	Maintained
 +F:	arch/arm/mach-mmp/
 +
 +PXA MMCI DRIVER
 +S:	Orphan
 +
 +PXA RTC DRIVER
 +M:	Robert Jarzmik <robert.jarzmik@free.fr>
 +L:	rtc-linux@googlegroups.com
  S:	Maintained
 -F:	drivers/mtd/nand/pxa3xx_nand.c
  
  QAT DRIVER
++<<<<<<< HEAD
 +M:      Tadeusz Struk <tadeusz.struk@intel.com>
 +L:      qat-linux@intel.com
 +S:      Supported
 +F:      drivers/crypto/qat/
++=======
+ M:	Giovanni Cabiddu <giovanni.cabiddu@intel.com>
+ L:	qat-linux@intel.com
+ S:	Supported
+ F:	drivers/crypto/qat/
+ 
+ QCOM AUDIO (ASoC) DRIVERS
+ M:	Patrick Lai <plai@codeaurora.org>
+ M:	Banajit Goswami <bgoswami@codeaurora.org>
+ L:	alsa-devel@alsa-project.org (moderated for non-subscribers)
+ S:	Supported
 -F:	sound/soc/qcom/
 -
 -QEMU MACHINE EMULATOR AND VIRTUALIZER SUPPORT
 -M:	Gabriel Somlo <somlo@cmu.edu>
 -M:	"Michael S. Tsirkin" <mst@redhat.com>
 -L:	qemu-devel@nongnu.org
 -S:	Maintained
 -F:	drivers/firmware/qemu_fw_cfg.c
 -F:	include/uapi/linux/qemu_fw_cfg.h
 -
 -QIB DRIVER
 -M:	Dennis Dalessandro <dennis.dalessandro@intel.com>
 -M:	Mike Marciniszyn <mike.marciniszyn@intel.com>
 -L:	linux-rdma@vger.kernel.org
 -S:	Supported
 -F:	drivers/infiniband/hw/qib/
 -
 -QLOGIC QL41xxx FCOE DRIVER
 -M:	QLogic-Storage-Upstream@cavium.com
 -L:	linux-scsi@vger.kernel.org
 -S:	Supported
 -F:	drivers/scsi/qedf/
 -
 -QLOGIC QL41xxx ISCSI DRIVER
 -M:	QLogic-Storage-Upstream@cavium.com
 -L:	linux-scsi@vger.kernel.org
 -S:	Supported
 -F:	drivers/scsi/qedi/
++F:	sound/soc/qcom/
+ 
 -QLOGIC QL4xxx ETHERNET DRIVER
 -M:	Ariel Elior <Ariel.Elior@cavium.com>
 -M:	everest-linux-l2@cavium.com
 -L:	netdev@vger.kernel.org
 -S:	Supported
 -F:	drivers/net/ethernet/qlogic/qed/
 -F:	include/linux/qed/
 -F:	drivers/net/ethernet/qlogic/qede/
++QEMU MACHINE EMULATOR AND VIRTUALIZER SUPPORT
++M:	Gabriel Somlo <somlo@cmu.edu>
++M:	"Michael S. Tsirkin" <mst@redhat.com>
++L:	qemu-devel@nongnu.org
++S:	Maintained
++F:	drivers/firmware/qemu_fw_cfg.c
++F:	include/uapi/linux/qemu_fw_cfg.h
++>>>>>>> 1f57bc12d87d (fw_cfg: add a public uapi header)
  
 -QLOGIC QL4xxx RDMA DRIVER
 -M:	Michal Kalderon <Michal.Kalderon@cavium.com>
 -M:	Ariel Elior <Ariel.Elior@cavium.com>
 +QIB DRIVER
 +M:	Mike Marciniszyn <infinipath@intel.com>
  L:	linux-rdma@vger.kernel.org
  S:	Supported
 -F:	drivers/infiniband/hw/qedr/
 -F:	include/uapi/rdma/qedr-abi.h
 +F:	drivers/infiniband/hw/qib/
  
  QLOGIC QLA1280 SCSI DRIVER
  M:	Michael Reed <mdr@sgi.com>
diff --cc drivers/firmware/qemu_fw_cfg.c
index 0d0d7a831ec8,5de6bb406fb6..000000000000
--- a/drivers/firmware/qemu_fw_cfg.c
+++ b/drivers/firmware/qemu_fw_cfg.c
@@@ -33,55 -32,12 +33,62 @@@
  #include <linux/slab.h>
  #include <linux/io.h>
  #include <linux/ioport.h>
++<<<<<<< HEAD
 +#include <linux/delay.h>
 +#include <linux/dma-mapping.h>
 +#include <linux/crash_core.h>
 +#include <linux/crash_dump.h>
++=======
+ #include <uapi/linux/qemu_fw_cfg.h>
++>>>>>>> 1f57bc12d87d (fw_cfg: add a public uapi header)
  
  MODULE_AUTHOR("Gabriel L. Somlo <somlo@cmu.edu>");
  MODULE_DESCRIPTION("QEMU fw_cfg sysfs support");
  MODULE_LICENSE("GPL");
  
++<<<<<<< HEAD
 +/* selector key values for "well-known" fw_cfg entries */
 +#define FW_CFG_SIGNATURE  0x00
 +#define FW_CFG_ID         0x01
 +#define FW_CFG_FILE_DIR   0x19
 +
 +#define FW_CFG_VERSION_DMA     0x02
 +#define FW_CFG_DMA_CTL_ERROR   0x01
 +#define FW_CFG_DMA_CTL_READ    0x02
 +#define FW_CFG_DMA_CTL_SKIP    0x04
 +#define FW_CFG_DMA_CTL_SELECT  0x08
 +#define FW_CFG_DMA_CTL_WRITE   0x10
 +
 +/* size in bytes of fw_cfg signature */
 +#define FW_CFG_SIG_SIZE 4
 +
 +/* fw_cfg "file name" is up to 56 characters (including terminating nul) */
 +#define FW_CFG_MAX_FILE_PATH 56
 +
 +#define VMCOREINFO_FORMAT_ELF 0x1
 +
 +/* platform device for dma mapping */
 +static struct device *dev;
 +
 +/* fw_cfg revision attribute, in /sys/firmware/qemu_fw_cfg top-level dir. */
 +static u32 fw_cfg_rev;
 +
 +/* fw_cfg file directory entry type */
 +struct fw_cfg_file {
 +	u32 size;
 +	u16 select;
 +	u16 reserved;
 +	char name[FW_CFG_MAX_FILE_PATH];
 +};
 +
 +struct fw_cfg_dma {
 +	u32 control;
 +	u32 length;
 +	u64 address;
 +} __packed;
 +
++=======
++>>>>>>> 1f57bc12d87d (fw_cfg: add a public uapi header)
  /* fw_cfg device i/o register addresses */
  static bool fw_cfg_is_mmio;
  static phys_addr_t fw_cfg_p_base;
* Unmerged path MAINTAINERS
* Unmerged path drivers/firmware/qemu_fw_cfg.c
diff --git a/include/uapi/linux/qemu_fw_cfg.h b/include/uapi/linux/qemu_fw_cfg.h
new file mode 100644
index 000000000000..c698ac3812f6
--- /dev/null
+++ b/include/uapi/linux/qemu_fw_cfg.h
@@ -0,0 +1,66 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+#ifndef _LINUX_FW_CFG_H
+#define _LINUX_FW_CFG_H
+
+#include <linux/types.h>
+
+#define FW_CFG_ACPI_DEVICE_ID	"QEMU0002"
+
+/* selector key values for "well-known" fw_cfg entries */
+#define FW_CFG_SIGNATURE	0x00
+#define FW_CFG_ID		0x01
+#define FW_CFG_UUID		0x02
+#define FW_CFG_RAM_SIZE		0x03
+#define FW_CFG_NOGRAPHIC	0x04
+#define FW_CFG_NB_CPUS		0x05
+#define FW_CFG_MACHINE_ID	0x06
+#define FW_CFG_KERNEL_ADDR	0x07
+#define FW_CFG_KERNEL_SIZE	0x08
+#define FW_CFG_KERNEL_CMDLINE	0x09
+#define FW_CFG_INITRD_ADDR	0x0a
+#define FW_CFG_INITRD_SIZE	0x0b
+#define FW_CFG_BOOT_DEVICE	0x0c
+#define FW_CFG_NUMA		0x0d
+#define FW_CFG_BOOT_MENU	0x0e
+#define FW_CFG_MAX_CPUS		0x0f
+#define FW_CFG_KERNEL_ENTRY	0x10
+#define FW_CFG_KERNEL_DATA	0x11
+#define FW_CFG_INITRD_DATA	0x12
+#define FW_CFG_CMDLINE_ADDR	0x13
+#define FW_CFG_CMDLINE_SIZE	0x14
+#define FW_CFG_CMDLINE_DATA	0x15
+#define FW_CFG_SETUP_ADDR	0x16
+#define FW_CFG_SETUP_SIZE	0x17
+#define FW_CFG_SETUP_DATA	0x18
+#define FW_CFG_FILE_DIR		0x19
+
+#define FW_CFG_FILE_FIRST	0x20
+#define FW_CFG_FILE_SLOTS_MIN	0x10
+
+#define FW_CFG_WRITE_CHANNEL	0x4000
+#define FW_CFG_ARCH_LOCAL	0x8000
+#define FW_CFG_ENTRY_MASK	(~(FW_CFG_WRITE_CHANNEL | FW_CFG_ARCH_LOCAL))
+
+#define FW_CFG_INVALID		0xffff
+
+/* width in bytes of fw_cfg control register */
+#define FW_CFG_CTL_SIZE		0x02
+
+/* fw_cfg "file name" is up to 56 characters (including terminating nul) */
+#define FW_CFG_MAX_FILE_PATH	56
+
+/* size in bytes of fw_cfg signature */
+#define FW_CFG_SIG_SIZE 4
+
+/* FW_CFG_ID bits */
+#define FW_CFG_VERSION		0x01
+
+/* fw_cfg file directory entry type */
+struct fw_cfg_file {
+	__be32 size;
+	__be16 select;
+	__u16 reserved;
+	char name[FW_CFG_MAX_FILE_PATH];
+};
+
+#endif
