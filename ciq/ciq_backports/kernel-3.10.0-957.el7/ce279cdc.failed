x86/apic: Split out restore_boot_irq_mode() from disable_IO_APIC()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] apic: Split out restore_boot_irq_mode() from disable_IO_APIC() (Baoquan He) [1521003]
Rebuild_FUZZ: 96.88%
commit-author Baoquan He <bhe@redhat.com>
commit ce279cdc04aafd5c41ae49f941ee2c3342e35e3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ce279cdc.failed

This is a preparation patch. Split out the code which restores boot
irq mode from disable_IO_APIC() into the new restore_boot_irq_mode()
function.

No functional changes.

	Signed-off-by: Baoquan He <bhe@redhat.com>
	Reviewed-by: Eric W. Biederman <ebiederm@xmission.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: douly.fnst@cn.fujitsu.com
	Cc: joro@8bytes.org
	Cc: prarit@redhat.com
	Cc: uobergfe@redhat.com
Link: http://lkml.kernel.org/r/20180214054656.3780-2-bhe@redhat.com
[ Build fix for !CONFIG_IO_APIC and rewrote the changelog. ]
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit ce279cdc04aafd5c41ae49f941ee2c3342e35e3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/io_apic.h
diff --cc arch/x86/include/asm/io_apic.h
index a1ac5648dd12,4e3bb13e02a6..000000000000
--- a/arch/x86/include/asm/io_apic.h
+++ b/arch/x86/include/asm/io_apic.h
@@@ -218,19 -190,15 +218,28 @@@ static inline unsigned int io_apic_read
  	return x86_io_apic_ops.read(apic, reg);
  }
  
++<<<<<<< HEAD
 +static inline void io_apic_write(unsigned int apic, unsigned int reg, unsigned int value)
 +{
 +	x86_io_apic_ops.write(apic, reg, value);
 +}
 +static inline void io_apic_modify(unsigned int apic, unsigned int reg, unsigned int value)
 +{
 +	x86_io_apic_ops.modify(apic, reg, value);
 +}
 +
 +extern void io_apic_eoi(unsigned int apic, unsigned int vector);
 +
++=======
+ extern void setup_IO_APIC(void);
+ extern void enable_IO_APIC(void);
+ extern void disable_IO_APIC(void);
+ extern void restore_boot_irq_mode(void);
+ extern int IO_APIC_get_PCI_irq_vector(int bus, int devfn, int pin);
+ extern void print_IO_APICs(void);
++>>>>>>> ce279cdc04aa (x86/apic: Split out restore_boot_irq_mode() from disable_IO_APIC())
  #else  /* !CONFIG_X86_IO_APIC */
  
 -#define IO_APIC_IRQ(x)		0
  #define io_apic_assign_pci_irqs 0
  #define setup_ioapic_ids_from_mpc x86_init_noop
  static inline void ioapic_insert_resources(void) { }
@@@ -251,18 -225,16 +260,26 @@@ static inline int restore_ioapic_entrie
  	return -ENOMEM;
  }
  
 -static inline void mp_save_irq(struct mpc_intsrc *m) { }
 +static inline void mp_save_irq(struct mpc_intsrc *m) { };
  static inline void disable_ioapic_support(void) { }
 -static inline void io_apic_init_mappings(void) { }
 +#define native_io_apic_init_mappings	NULL
  #define native_io_apic_read		NULL
 +#define native_io_apic_write		NULL
 +#define native_io_apic_modify		NULL
  #define native_disable_io_apic		NULL
++<<<<<<< HEAD
 +#define native_io_apic_print_entries	NULL
 +#define native_ioapic_set_affinity	NULL
 +#define native_setup_ioapic_entry	NULL
 +#define native_compose_msi_msg		NULL
 +#define native_eoi_ioapic_pin		NULL
++=======
+ 
+ static inline void setup_IO_APIC(void) { }
+ static inline void enable_IO_APIC(void) { }
+ static inline void restore_boot_irq_mode(void) { }
+ 
++>>>>>>> ce279cdc04aa (x86/apic: Split out restore_boot_irq_mode() from disable_IO_APIC())
  #endif
  
  #endif /* _ASM_X86_IO_APIC_H */
* Unmerged path arch/x86/include/asm/io_apic.h
diff --git a/arch/x86/kernel/apic/io_apic.c b/arch/x86/kernel/apic/io_apic.c
index d122dcd2cb76..cac32127c7e2 100644
--- a/arch/x86/kernel/apic/io_apic.c
+++ b/arch/x86/kernel/apic/io_apic.c
@@ -2044,6 +2044,11 @@ void disable_IO_APIC(void)
 	 */
 	clear_IO_APIC();
 
+	restore_boot_irq_mode();
+}
+
+void restore_boot_irq_mode(void)
+{
 	if (!nr_legacy_irqs())
 		return;
 
