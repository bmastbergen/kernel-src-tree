scsi: qla2xxx: Spinlock recursion in qla_target

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Spinlock recursion in qla_target (Himanshu Madhani) [1599351]
Rebuild_FUZZ: 93.18%
commit-author Mikhail Malygin <m.malygin@yadro.com>
commit 49d7bd36813ea8e6b4c97b640d24e7fbd44c84f0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/49d7bd36.failed

The patch reverts changes done in qlt_schedule_sess_for_deletion() to
avoid spinlock recursion sess->vha->work_lock should be used instead
of ha->tgt.sess_lock, that can be locked in callers: qlt_reset() or
qlt_handle_login()

[mkp: roll in build warning reported by sfr]

Fixes: 1c6cacf4ea6c04 ("scsi: qla2xxx: Fixup locking for session deletion")
	Cc: <stable@vger.kernel.org> #v4.17
	Signed-off-by: Mikhail Malygin <m.malygin@yadro.com>
	Reported-by: Mikhail Malygin <m.malygin@yadro.com>
	Tested-by: Mikhail Malygin <m.malygin@yadro.com>
	Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 49d7bd36813ea8e6b4c97b640d24e7fbd44c84f0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
diff --cc drivers/scsi/qla2xxx/qla_target.c
index 753c5e0953f9,1027b0cb7fa3..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -1180,11 -1221,10 +1180,15 @@@ static void qla24xx_chk_fcp_state(struc
  	}
  }
  
 -void qlt_schedule_sess_for_deletion(struct fc_port *sess)
 +/* ha->tgt.sess_lock supposed to be held on entry */
 +void qlt_schedule_sess_for_deletion(struct fc_port *sess,
 +	bool immediate)
  {
  	struct qla_tgt *tgt = sess->tgt;
++<<<<<<< HEAD
++=======
+ 	unsigned long flags;
++>>>>>>> 49d7bd36813e (scsi: qla2xxx: Spinlock recursion in qla_target)
  
  	if (sess->disc_state == DSC_DELETE_PEND)
  		return;
@@@ -1200,12 -1240,19 +1204,28 @@@
  			return;
  	}
  
++<<<<<<< HEAD
 +	sess->disc_state = DSC_DELETE_PEND;
 +
 +	if (sess->deleted == QLA_SESS_DELETED)
 +		sess->logout_on_delete = 0;
 +
 +	sess->deleted = QLA_SESS_DELETION_IN_PROGRESS;
++=======
+ 	if (sess->deleted == QLA_SESS_DELETED)
+ 		sess->logout_on_delete = 0;
+ 
+ 	spin_lock_irqsave(&sess->vha->work_lock, flags);
+ 	if (sess->deleted == QLA_SESS_DELETION_IN_PROGRESS) {
+ 		spin_unlock_irqrestore(&sess->vha->work_lock, flags);
+ 		return;
+ 	}
+ 	sess->deleted = QLA_SESS_DELETION_IN_PROGRESS;
+ 	spin_unlock_irqrestore(&sess->vha->work_lock, flags);
+ 
+ 	sess->disc_state = DSC_DELETE_PEND;
+ 
++>>>>>>> 49d7bd36813e (scsi: qla2xxx: Spinlock recursion in qla_target)
  	qla24xx_chk_fcp_state(sess);
  
  	ql_dbg(ql_dbg_tgt, sess->vha, 0xe001,
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
