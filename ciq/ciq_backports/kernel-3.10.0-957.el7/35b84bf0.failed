ASoC: dmic: Fix check of return value from read of 'num-channels'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: dmic: Fix check of return value from read of 'num-channels' (Jaroslav Kysela) [1535427]
Rebuild_FUZZ: 95.59%
commit-author Matthias Kaehlcke <mka@chromium.org>
commit 35b84bf0614a7da98bfbbac70ed3d01c3b5b6c58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/35b84bf0.failed

Commit 7fb59e940f62 ("ASoC: codecs: dmic: Make number of channels
 configurable") introduces an optional property to the device tree
to specify the number of DMIC channels. dmic_codec_probe() uses
of_property_read_u32() to read the DT value, and expects a return
value of -ENOENT when the property does not exist. This expectation
is incorrect, the actual value returned in this case is -EINVAL (see
of_find_property_value_of_size(), which is called under the hood).
Check for -EINVAL instead.

Fixes: 7fb59e940f62 ("ASoC: codecs: dmic: Make number of channels configurable")
	Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 35b84bf0614a7da98bfbbac70ed3d01c3b5b6c58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/dmic.c
diff --cc sound/soc/codecs/dmic.c
index b88a1ee66f80,cf83c423394d..000000000000
--- a/sound/soc/codecs/dmic.c
+++ b/sound/soc/codecs/dmic.c
@@@ -107,8 -107,30 +107,33 @@@ static const struct snd_soc_codec_drive
  
  static int dmic_dev_probe(struct platform_device *pdev)
  {
++<<<<<<< HEAD
++=======
+ 	int err;
+ 	u32 chans;
+ 	struct snd_soc_dai_driver *dai_drv = &dmic_dai;
+ 
+ 	if (pdev->dev.of_node) {
+ 		err = of_property_read_u32(pdev->dev.of_node, "num-channels", &chans);
+ 		if (err && (err != -EINVAL))
+ 			return err;
+ 
+ 		if (!err) {
+ 			if (chans < 1 || chans > 8)
+ 				return -EINVAL;
+ 
+ 			dai_drv = devm_kzalloc(&pdev->dev, sizeof(*dai_drv), GFP_KERNEL);
+ 			if (!dai_drv)
+ 				return -ENOMEM;
+ 
+ 			memcpy(dai_drv, &dmic_dai, sizeof(*dai_drv));
+ 			dai_drv->capture.channels_max = chans;
+ 		}
+ 	}
+ 
++>>>>>>> 35b84bf0614a (ASoC: dmic: Fix check of return value from read of 'num-channels')
  	return snd_soc_register_codec(&pdev->dev,
 -			&soc_dmic, dai_drv, 1);
 +			&soc_dmic, &dmic_dai, 1);
  }
  
  static int dmic_dev_remove(struct platform_device *pdev)
* Unmerged path sound/soc/codecs/dmic.c
