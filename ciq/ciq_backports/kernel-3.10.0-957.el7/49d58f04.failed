perf script: Support physical address

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Kan Liang <kan.liang@intel.com>
commit 49d58f04eb6cdc18b3747fc4243a7114364f5420
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/49d58f04.failed

Display the physical address at the tail if it is available.

	Signed-off-by: Kan Liang <kan.liang@intel.com>
	Tested-by: Jiri Olsa <jolsa@redhat.com>
	Acked-by: Stephane Eranian <eranian@google.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/1504026672-7304-5-git-send-email-kan.liang@intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 49d58f04eb6cdc18b3747fc4243a7114364f5420)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Documentation/perf-script.txt
#	tools/perf/builtin-script.c
diff --cc tools/perf/Documentation/perf-script.txt
index 66be2e69d03b,18dfcfa38454..000000000000
--- a/tools/perf/Documentation/perf-script.txt
+++ b/tools/perf/Documentation/perf-script.txt
@@@ -116,7 -116,8 +116,12 @@@ OPTION
  --fields::
          Comma separated list of fields to print. Options are:
          comm, tid, pid, time, cpu, event, trace, ip, sym, dso, addr, symoff,
++<<<<<<< HEAD
 +	srcline, period, iregs, brstack, brstacksym, flags, brstackinsn, insn, insnlen.
++=======
+         srcline, period, iregs, brstack, brstacksym, flags, bpf-output, brstackinsn, brstackoff,
+         callindent, insn, insnlen, synth, phys_addr.
++>>>>>>> 49d58f04eb6c (perf script: Support physical address)
          Field list can be prepended with the type, trace, sw or hw,
          to indicate to which event type the field list applies.
          e.g., -F sw:comm,tid,time,ip,sym  and -F trace:time,cpu,trace
diff --cc tools/perf/builtin-script.c
index 1c5919ddf0e7,3d4c3b5e1868..000000000000
--- a/tools/perf/builtin-script.c
+++ b/tools/perf/builtin-script.c
@@@ -84,6 -85,9 +84,12 @@@ enum perf_output_field 
  	PERF_OUTPUT_INSN	    = 1U << 21,
  	PERF_OUTPUT_INSNLEN	    = 1U << 22,
  	PERF_OUTPUT_BRSTACKINSN	    = 1U << 23,
++<<<<<<< HEAD
++=======
+ 	PERF_OUTPUT_BRSTACKOFF	    = 1U << 24,
+ 	PERF_OUTPUT_SYNTH           = 1U << 25,
+ 	PERF_OUTPUT_PHYS_ADDR       = 1U << 26,
++>>>>>>> 49d58f04eb6c (perf script: Support physical address)
  };
  
  struct output_option {
@@@ -113,6 -118,9 +119,12 @@@
  	{.str = "insn", .field = PERF_OUTPUT_INSN},
  	{.str = "insnlen", .field = PERF_OUTPUT_INSNLEN},
  	{.str = "brstackinsn", .field = PERF_OUTPUT_BRSTACKINSN},
++<<<<<<< HEAD
++=======
+ 	{.str = "brstackoff", .field = PERF_OUTPUT_BRSTACKOFF},
+ 	{.str = "synth", .field = PERF_OUTPUT_SYNTH},
+ 	{.str = "phys_addr", .field = PERF_OUTPUT_PHYS_ADDR},
++>>>>>>> 49d58f04eb6c (perf script: Support physical address)
  };
  
  enum {
@@@ -169,9 -177,10 +181,10 @@@ static struct 
  			      PERF_OUTPUT_EVNAME | PERF_OUTPUT_IP |
  			      PERF_OUTPUT_SYM | PERF_OUTPUT_DSO |
  			      PERF_OUTPUT_PERIOD |  PERF_OUTPUT_ADDR |
- 			      PERF_OUTPUT_DATA_SRC | PERF_OUTPUT_WEIGHT,
+ 			      PERF_OUTPUT_DATA_SRC | PERF_OUTPUT_WEIGHT |
+ 			      PERF_OUTPUT_PHYS_ADDR,
  
 -		.invalid_fields = PERF_OUTPUT_TRACE | PERF_OUTPUT_BPF_OUTPUT,
 +		.invalid_fields = PERF_OUTPUT_TRACE,
  	},
  
  	[PERF_TYPE_BREAKPOINT] = {
@@@ -1145,10 -1445,18 +1163,13 @@@ static void process_event(struct perf_s
  		print_sample_iregs(sample, attr);
  
  	if (PRINT_FIELD(BRSTACK))
 -		print_sample_brstack(sample, thread, attr);
 +		print_sample_brstack(sample);
  	else if (PRINT_FIELD(BRSTACKSYM))
 -		print_sample_brstacksym(sample, thread, attr);
 -	else if (PRINT_FIELD(BRSTACKOFF))
 -		print_sample_brstackoff(sample, thread, attr);
 -
 -	if (perf_evsel__is_bpf_output(evsel) && PRINT_FIELD(BPF_OUTPUT))
 -		print_sample_bpf_output(sample);
 +		print_sample_brstacksym(sample, thread);
  	print_insn(sample, attr, thread, machine);
+ 
+ 	if (PRINT_FIELD(PHYS_ADDR))
+ 		printf("%16" PRIx64, sample->phys_addr);
  	printf("\n");
  }
  
@@@ -2398,7 -2740,7 +2419,11 @@@ int cmd_script(int argc, const char **a
  		     "Valid types: hw,sw,trace,raw,synth. "
  		     "Fields: comm,tid,pid,time,cpu,event,trace,ip,sym,dso,"
  		     "addr,symoff,period,iregs,brstack,brstacksym,flags,"
++<<<<<<< HEAD
 +		     "callindent,insn,insnlen,brstackinsn",
++=======
+ 		     "bpf-output,callindent,insn,insnlen,brstackinsn,synth,phys_addr",
++>>>>>>> 49d58f04eb6c (perf script: Support physical address)
  		     parse_output_fields),
  	OPT_BOOLEAN('a', "all-cpus", &system_wide,
  		    "system-wide collection from all CPUs"),
* Unmerged path tools/perf/Documentation/perf-script.txt
* Unmerged path tools/perf/builtin-script.c
