netfilter: ipset: Check extensions attributes before getting extensions.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] netfilter: ipset: Check extensions attributes before getting extensions (Stefano Brivio) [1557599]
Rebuild_FUZZ: 99.30%
commit-author Sergey Popovich <popovich_sergei@mail.ua>
commit 7dd37bc8e605d3ce14e6a1bc88ebbfae7ef43b9f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/7dd37bc8.failed

Make all extensions attributes checks within ip_set_get_extensions()
and reduce number of duplicated code.

	Signed-off-by: Sergey Popovich <popovich_sergei@mail.ua>
	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit 7dd37bc8e605d3ce14e6a1bc88ebbfae7ef43b9f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_bitmap_ip.c
#	net/netfilter/ipset/ip_set_bitmap_ipmac.c
#	net/netfilter/ipset/ip_set_bitmap_port.c
#	net/netfilter/ipset/ip_set_core.c
#	net/netfilter/ipset/ip_set_hash_ip.c
#	net/netfilter/ipset/ip_set_hash_ipmark.c
#	net/netfilter/ipset/ip_set_hash_ipport.c
#	net/netfilter/ipset/ip_set_hash_ipportip.c
#	net/netfilter/ipset/ip_set_hash_ipportnet.c
#	net/netfilter/ipset/ip_set_hash_mac.c
#	net/netfilter/ipset/ip_set_hash_net.c
#	net/netfilter/ipset/ip_set_hash_netiface.c
#	net/netfilter/ipset/ip_set_hash_netnet.c
#	net/netfilter/ipset/ip_set_hash_netport.c
#	net/netfilter/ipset/ip_set_hash_netportnet.c
#	net/netfilter/ipset/ip_set_list_set.c
diff --cc net/netfilter/ipset/ip_set_bitmap_ip.c
index faaca51bf3fa,212005e7d735..000000000000
--- a/net/netfilter/ipset/ip_set_bitmap_ip.c
+++ b/net/netfilter/ipset/ip_set_bitmap_ip.c
@@@ -133,14 -134,11 +133,18 @@@ bitmap_ip_uadt(struct ip_set *set, stru
  	struct bitmap_ip *map = set->data;
  	ipset_adtfn adtfn = set->variant->adt[adt];
  	u32 ip = 0, ip_to = 0;
 -	struct bitmap_ip_adt_elem e = { .id = 0 };
 -	struct ip_set_ext ext = IP_SET_INIT_UEXT(set);
 +	struct bitmap_ip_adt_elem e = { };
 +	struct ip_set_ext ext = IP_SET_INIT_UEXT(map);
  	int ret = 0;
  
++<<<<<<< HEAD
 +	if (unlikely(!tb[IPSET_ATTR_IP] ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 	if (unlikely(!tb[IPSET_ATTR_IP]))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
diff --cc net/netfilter/ipset/ip_set_bitmap_ipmac.c
index b2a7bea3f7b6,0648e749114b..000000000000
--- a/net/netfilter/ipset/ip_set_bitmap_ipmac.c
+++ b/net/netfilter/ipset/ip_set_bitmap_ipmac.c
@@@ -250,10 -239,7 +250,14 @@@ bitmap_ipmac_uadt(struct ip_set *set, s
  	u32 ip = 0;
  	int ret = 0;
  
++<<<<<<< HEAD
 +	if (unlikely(!tb[IPSET_ATTR_IP] ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 	if (unlikely(!tb[IPSET_ATTR_IP]))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
diff --cc net/netfilter/ipset/ip_set_bitmap_port.c
index 3fcb6e11fac3,10ed264dbe91..000000000000
--- a/net/netfilter/ipset/ip_set_bitmap_port.c
+++ b/net/netfilter/ipset/ip_set_bitmap_port.c
@@@ -137,10 -137,7 +137,14 @@@ bitmap_port_uadt(struct ip_set *set, st
  	int ret = 0;
  
  	if (unlikely(!ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
diff --cc net/netfilter/ipset/ip_set_core.c
index 1b9673fde81c,68ae551f2b39..000000000000
--- a/net/netfilter/ipset/ip_set_core.c
+++ b/net/netfilter/ipset/ip_set_core.c
@@@ -328,8 -388,18 +328,21 @@@ in
  ip_set_get_extensions(struct ip_set *set, struct nlattr *tb[],
  		      struct ip_set_ext *ext)
  {
++<<<<<<< HEAD
++=======
+ 	u64 fullmark;
+ 
+ 	if (unlikely(!ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES) ||
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_SKBMARK) ||
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_SKBPRIO) ||
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_SKBQUEUE)))
+ 		return -IPSET_ERR_PROTOCOL;
+ 
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  	if (tb[IPSET_ATTR_TIMEOUT]) {
 -		if (!SET_WITH_TIMEOUT(set))
 +		if (!(set->extensions & IPSET_EXT_TIMEOUT))
  			return -IPSET_ERR_TIMEOUT;
  		ext->timeout = ip_set_timeout_uget(tb[IPSET_ATTR_TIMEOUT]);
  	}
diff --cc net/netfilter/ipset/ip_set_hash_ip.c
index 6e3d06eb397b,0d955a480dee..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ip.c
+++ b/net/netfilter/ipset/ip_set_hash_ip.c
@@@ -122,10 -108,7 +122,14 @@@ hash_ip4_uadt(struct ip_set *set, struc
  	u32 ip = 0, ip_to = 0, hosts;
  	int ret = 0;
  
++<<<<<<< HEAD
 +	if (unlikely(!tb[IPSET_ATTR_IP] ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 	if (unlikely(!tb[IPSET_ATTR_IP]))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
@@@ -273,9 -241,6 +277,12 @@@ hash_ip6_uadt(struct ip_set *set, struc
  	int ret;
  
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES) ||
++=======
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		     tb[IPSET_ATTR_IP_TO] ||
  		     tb[IPSET_ATTR_CIDR]))
  		return -IPSET_ERR_PROTOCOL;
diff --cc net/netfilter/ipset/ip_set_hash_ipmark.c
index 50389697a53a,f4e14ec4684a..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipmark.c
+++ b/net/netfilter/ipset/ip_set_hash_ipmark.c
@@@ -106,10 -109,7 +106,14 @@@ hash_ipmark4_uadt(struct ip_set *set, s
  	int ret;
  
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
++<<<<<<< HEAD
 +		     !ip_set_attr_netorder(tb, IPSET_ATTR_MARK) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_attr_netorder(tb, IPSET_ATTR_MARK)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
@@@ -231,9 -236,6 +235,12 @@@ hash_ipmark6_uadt(struct ip_set *set, s
  
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_MARK) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES) ||
++=======
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		     tb[IPSET_ATTR_IP_TO] ||
  		     tb[IPSET_ATTR_CIDR]))
  		return -IPSET_ERR_PROTOCOL;
diff --cc net/netfilter/ipset/ip_set_hash_ipport.c
index 5e57c86de14d,02d9dbaeea6b..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipport.c
+++ b/net/netfilter/ipset/ip_set_hash_ipport.c
@@@ -142,10 -118,7 +142,14 @@@ hash_ipport4_uadt(struct ip_set *set, s
  
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
@@@ -331,9 -276,6 +335,12 @@@ hash_ipport6_uadt(struct ip_set *set, s
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
  		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES) ||
++=======
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		     tb[IPSET_ATTR_IP_TO] ||
  		     tb[IPSET_ATTR_CIDR]))
  		return -IPSET_ERR_PROTOCOL;
diff --cc net/netfilter/ipset/ip_set_hash_ipportip.c
index 24b9417eb2c5,4e3b1c3f32b2..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipportip.c
+++ b/net/netfilter/ipset/ip_set_hash_ipportip.c
@@@ -148,10 -121,7 +148,14 @@@ hash_ipportip4_uadt(struct ip_set *set
  
  	if (unlikely(!tb[IPSET_ATTR_IP] || !tb[IPSET_ATTR_IP2] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
@@@ -348,9 -287,6 +352,12 @@@ hash_ipportip6_uadt(struct ip_set *set
  	if (unlikely(!tb[IPSET_ATTR_IP] || !tb[IPSET_ATTR_IP2] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
  		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES) ||
++=======
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		     tb[IPSET_ATTR_IP_TO] ||
  		     tb[IPSET_ATTR_CIDR]))
  		return -IPSET_ERR_PROTOCOL;
diff --cc net/netfilter/ipset/ip_set_hash_ipportnet.c
index bb1a8e8f02c9,988567e7dbce..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipportnet.c
+++ b/net/netfilter/ipset/ip_set_hash_ipportnet.c
@@@ -205,10 -176,7 +205,14 @@@ hash_ipportnet4_uadt(struct ip_set *set
  	if (unlikely(!tb[IPSET_ATTR_IP] || !tb[IPSET_ATTR_IP2] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
  		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
@@@ -488,10 -423,7 +492,12 @@@ hash_ipportnet6_uadt(struct ip_set *set
  	if (unlikely(!tb[IPSET_ATTR_IP] || !tb[IPSET_ATTR_IP2] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
  		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
- 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
  		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES) ||
++=======
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		     tb[IPSET_ATTR_IP_TO] ||
  		     tb[IPSET_ATTR_CIDR]))
  		return -IPSET_ERR_PROTOCOL;
diff --cc net/netfilter/ipset/ip_set_hash_net.c
index 0a64dad156d9,5eb334dea163..000000000000
--- a/net/netfilter/ipset/ip_set_hash_net.c
+++ b/net/netfilter/ipset/ip_set_hash_net.c
@@@ -170,10 -147,7 +170,14 @@@ hash_net4_uadt(struct ip_set *set, stru
  	int ret;
  
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
@@@ -364,10 -313,7 +368,14 @@@ hash_net6_uadt(struct ip_set *set, stru
  	int ret;
  
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  	if (unlikely(tb[IPSET_ATTR_IP_TO]))
  		return -IPSET_ERR_HASH_RANGE_UNSUPPORTED;
diff --cc net/netfilter/ipset/ip_set_hash_netiface.c
index aa4929b15a09,5eef6f315ccd..000000000000
--- a/net/netfilter/ipset/ip_set_hash_netiface.c
+++ b/net/netfilter/ipset/ip_set_hash_netiface.c
@@@ -342,10 -295,7 +342,14 @@@ hash_netiface4_uadt(struct ip_set *set
  
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
  		     !tb[IPSET_ATTR_IFACE] ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
@@@ -605,10 -525,7 +609,14 @@@ hash_netiface6_uadt(struct ip_set *set
  
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
  		     !tb[IPSET_ATTR_IFACE] ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  	if (unlikely(tb[IPSET_ATTR_IP_TO]))
  		return -IPSET_ERR_HASH_RANGE_UNSUPPORTED;
diff --cc net/netfilter/ipset/ip_set_hash_netport.c
index d98a685cd916,0eb73daf375e..000000000000
--- a/net/netfilter/ipset/ip_set_hash_netport.c
+++ b/net/netfilter/ipset/ip_set_hash_netport.c
@@@ -195,10 -169,7 +195,14 @@@ hash_netport4_uadt(struct ip_set *set, 
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
  		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
@@@ -440,10 -381,7 +444,14 @@@ hash_netport6_uadt(struct ip_set *set, 
  	if (unlikely(!tb[IPSET_ATTR_IP] ||
  		     !ip_set_attr_netorder(tb, IPSET_ATTR_PORT) ||
  		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PORT_TO) ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  	if (unlikely(tb[IPSET_ATTR_IP_TO]))
  		return -IPSET_ERR_HASH_RANGE_UNSUPPORTED;
diff --cc net/netfilter/ipset/ip_set_list_set.c
index a9a97c07ecb4,7d1377d6b8bb..000000000000
--- a/net/netfilter/ipset/ip_set_list_set.c
+++ b/net/netfilter/ipset/ip_set_list_set.c
@@@ -392,10 -384,7 +392,14 @@@ list_set_uadt(struct ip_set *set, struc
  	int ret = 0;
  
  	if (unlikely(!tb[IPSET_ATTR_NAME] ||
++<<<<<<< HEAD
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_TIMEOUT) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_PACKETS) ||
 +		     !ip_set_optattr_netorder(tb, IPSET_ATTR_BYTES)))
++=======
+ 		     !ip_set_optattr_netorder(tb, IPSET_ATTR_CADT_FLAGS)))
++>>>>>>> 7dd37bc8e605 (netfilter: ipset: Check extensions attributes before getting extensions.)
  		return -IPSET_ERR_PROTOCOL;
  
  	if (tb[IPSET_ATTR_LINENO])
* Unmerged path net/netfilter/ipset/ip_set_hash_mac.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netnet.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netportnet.c
* Unmerged path net/netfilter/ipset/ip_set_bitmap_ip.c
* Unmerged path net/netfilter/ipset/ip_set_bitmap_ipmac.c
* Unmerged path net/netfilter/ipset/ip_set_bitmap_port.c
* Unmerged path net/netfilter/ipset/ip_set_core.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ip.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipmark.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipport.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipportip.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipportnet.c
* Unmerged path net/netfilter/ipset/ip_set_hash_mac.c
* Unmerged path net/netfilter/ipset/ip_set_hash_net.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netiface.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netnet.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netport.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netportnet.c
* Unmerged path net/netfilter/ipset/ip_set_list_set.c
