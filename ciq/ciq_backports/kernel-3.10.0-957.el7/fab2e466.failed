scsi: lpfc: make several unions static, fix non-ANSI prototype

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] lpfc: make several unions static, fix non-ANSI prototype (Dick Kennedy) [1519548]
Rebuild_FUZZ: 94.92%
commit-author Colin Ian King <colin.king@canonical.com>
commit fab2e466e9dfe47371b54a54b86f6630feced80e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/fab2e466.failed

There are several unions that are local to the source and do not need to
be in global scope, so make them static. Also add in a missing void
parameter to functions lpfc_nvme_cmd_template and
lpfc_nvmet_cmd_template to clean up non-ANSI warning.

Cleans up sparse warnings:
drivers/scsi/lpfc/lpfc_nvme.c:68:19: warning: symbol
'lpfc_iread_cmd_template' was not declared. Should it be static?
drivers/scsi/lpfc/lpfc_nvme.c:69:19: warning: symbol
'lpfc_iwrite_cmd_template' was not declared. Should it be static?
drivers/scsi/lpfc/lpfc_nvme.c:70:19: warning: symbol
'lpfc_icmnd_cmd_template' was not declared. Should it be static?
drivers/scsi/lpfc/lpfc_nvme.c:74:24: warning: non-ANSI function
'lpfc_tsend_cmd_template' was not declared. Should it be static?
drivers/scsi/lpfc/lpfc_nvmet.c:78:19: warning: symbol
'lpfc_treceive_cmd_template' was not declared. Should it be static?
drivers/scsi/lpfc/lpfc_nvmet.c:79:19: warning: symbol
'lpfc_trsp_cmd_template' was not declared. Should it be static?
drivers/scsi/lpfc/lpfc_nvmet.c:83:25: warning: non-ANSI function
declaration of function 'lpfc_nvmet_cmd_template'

	Signed-off-by: Colin Ian King <colin.king@canonical.com>
	Acked-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit fab2e466e9dfe47371b54a54b86f6630feced80e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_nvmet.c
diff --cc drivers/scsi/lpfc/lpfc_nvmet.c
index a6e82b967719,7271c9d885dd..000000000000
--- a/drivers/scsi/lpfc/lpfc_nvmet.c
+++ b/drivers/scsi/lpfc/lpfc_nvmet.c
@@@ -74,6 -74,149 +74,152 @@@ static int lpfc_nvmet_unsol_ls_issue_ab
  static void lpfc_nvmet_wqfull_flush(struct lpfc_hba *, struct lpfc_queue *,
  				    struct lpfc_nvmet_rcv_ctx *);
  
++<<<<<<< HEAD
++=======
+ static union lpfc_wqe128 lpfc_tsend_cmd_template;
+ static union lpfc_wqe128 lpfc_treceive_cmd_template;
+ static union lpfc_wqe128 lpfc_trsp_cmd_template;
+ 
+ /* Setup WQE templates for NVME IOs */
+ void
+ lpfc_nvmet_cmd_template(void)
+ {
+ 	union lpfc_wqe128 *wqe;
+ 
+ 	/* TSEND template */
+ 	wqe = &lpfc_tsend_cmd_template;
+ 	memset(wqe, 0, sizeof(union lpfc_wqe128));
+ 
+ 	/* Word 0, 1, 2 - BDE is variable */
+ 
+ 	/* Word 3 - payload_offset_len is zero */
+ 
+ 	/* Word 4 - relative_offset is variable */
+ 
+ 	/* Word 5 - is zero */
+ 
+ 	/* Word 6 - ctxt_tag, xri_tag is variable */
+ 
+ 	/* Word 7 - wqe_ar is variable */
+ 	bf_set(wqe_cmnd, &wqe->fcp_tsend.wqe_com, CMD_FCP_TSEND64_WQE);
+ 	bf_set(wqe_pu, &wqe->fcp_tsend.wqe_com, PARM_REL_OFF);
+ 	bf_set(wqe_class, &wqe->fcp_tsend.wqe_com, CLASS3);
+ 	bf_set(wqe_ct, &wqe->fcp_tsend.wqe_com, SLI4_CT_RPI);
+ 	bf_set(wqe_ar, &wqe->fcp_tsend.wqe_com, 1);
+ 
+ 	/* Word 8 - abort_tag is variable */
+ 
+ 	/* Word 9  - reqtag, rcvoxid is variable */
+ 
+ 	/* Word 10 - wqes, xc is variable */
+ 	bf_set(wqe_nvme, &wqe->fcp_tsend.wqe_com, 1);
+ 	bf_set(wqe_dbde, &wqe->fcp_tsend.wqe_com, 1);
+ 	bf_set(wqe_wqes, &wqe->fcp_tsend.wqe_com, 0);
+ 	bf_set(wqe_xc, &wqe->fcp_tsend.wqe_com, 1);
+ 	bf_set(wqe_iod, &wqe->fcp_tsend.wqe_com, LPFC_WQE_IOD_WRITE);
+ 	bf_set(wqe_lenloc, &wqe->fcp_tsend.wqe_com, LPFC_WQE_LENLOC_WORD12);
+ 
+ 	/* Word 11 - sup, irsp, irsplen is variable */
+ 	bf_set(wqe_cmd_type, &wqe->fcp_tsend.wqe_com, FCP_COMMAND_TSEND);
+ 	bf_set(wqe_cqid, &wqe->fcp_tsend.wqe_com, LPFC_WQE_CQ_ID_DEFAULT);
+ 	bf_set(wqe_sup, &wqe->fcp_tsend.wqe_com, 0);
+ 	bf_set(wqe_irsp, &wqe->fcp_tsend.wqe_com, 0);
+ 	bf_set(wqe_irsplen, &wqe->fcp_tsend.wqe_com, 0);
+ 	bf_set(wqe_pbde, &wqe->fcp_tsend.wqe_com, 0);
+ 
+ 	/* Word 12 - fcp_data_len is variable */
+ 
+ 	/* Word 13, 14, 15 - PBDE is zero */
+ 
+ 	/* TRECEIVE template */
+ 	wqe = &lpfc_treceive_cmd_template;
+ 	memset(wqe, 0, sizeof(union lpfc_wqe128));
+ 
+ 	/* Word 0, 1, 2 - BDE is variable */
+ 
+ 	/* Word 3 */
+ 	wqe->fcp_treceive.payload_offset_len = TXRDY_PAYLOAD_LEN;
+ 
+ 	/* Word 4 - relative_offset is variable */
+ 
+ 	/* Word 5 - is zero */
+ 
+ 	/* Word 6 - ctxt_tag, xri_tag is variable */
+ 
+ 	/* Word 7 */
+ 	bf_set(wqe_cmnd, &wqe->fcp_treceive.wqe_com, CMD_FCP_TRECEIVE64_WQE);
+ 	bf_set(wqe_pu, &wqe->fcp_treceive.wqe_com, PARM_REL_OFF);
+ 	bf_set(wqe_class, &wqe->fcp_treceive.wqe_com, CLASS3);
+ 	bf_set(wqe_ct, &wqe->fcp_treceive.wqe_com, SLI4_CT_RPI);
+ 	bf_set(wqe_ar, &wqe->fcp_treceive.wqe_com, 0);
+ 
+ 	/* Word 8 - abort_tag is variable */
+ 
+ 	/* Word 9  - reqtag, rcvoxid is variable */
+ 
+ 	/* Word 10 - xc is variable */
+ 	bf_set(wqe_dbde, &wqe->fcp_treceive.wqe_com, 1);
+ 	bf_set(wqe_wqes, &wqe->fcp_treceive.wqe_com, 0);
+ 	bf_set(wqe_nvme, &wqe->fcp_treceive.wqe_com, 1);
+ 	bf_set(wqe_iod, &wqe->fcp_treceive.wqe_com, LPFC_WQE_IOD_READ);
+ 	bf_set(wqe_lenloc, &wqe->fcp_treceive.wqe_com, LPFC_WQE_LENLOC_WORD12);
+ 	bf_set(wqe_xc, &wqe->fcp_tsend.wqe_com, 1);
+ 
+ 	/* Word 11 - pbde is variable */
+ 	bf_set(wqe_cmd_type, &wqe->fcp_treceive.wqe_com, FCP_COMMAND_TRECEIVE);
+ 	bf_set(wqe_cqid, &wqe->fcp_treceive.wqe_com, LPFC_WQE_CQ_ID_DEFAULT);
+ 	bf_set(wqe_sup, &wqe->fcp_treceive.wqe_com, 0);
+ 	bf_set(wqe_irsp, &wqe->fcp_treceive.wqe_com, 0);
+ 	bf_set(wqe_irsplen, &wqe->fcp_treceive.wqe_com, 0);
+ 	bf_set(wqe_pbde, &wqe->fcp_treceive.wqe_com, 1);
+ 
+ 	/* Word 12 - fcp_data_len is variable */
+ 
+ 	/* Word 13, 14, 15 - PBDE is variable */
+ 
+ 	/* TRSP template */
+ 	wqe = &lpfc_trsp_cmd_template;
+ 	memset(wqe, 0, sizeof(union lpfc_wqe128));
+ 
+ 	/* Word 0, 1, 2 - BDE is variable */
+ 
+ 	/* Word 3 - response_len is variable */
+ 
+ 	/* Word 4, 5 - is zero */
+ 
+ 	/* Word 6 - ctxt_tag, xri_tag is variable */
+ 
+ 	/* Word 7 */
+ 	bf_set(wqe_cmnd, &wqe->fcp_trsp.wqe_com, CMD_FCP_TRSP64_WQE);
+ 	bf_set(wqe_pu, &wqe->fcp_trsp.wqe_com, PARM_UNUSED);
+ 	bf_set(wqe_class, &wqe->fcp_trsp.wqe_com, CLASS3);
+ 	bf_set(wqe_ct, &wqe->fcp_trsp.wqe_com, SLI4_CT_RPI);
+ 	bf_set(wqe_ag, &wqe->fcp_trsp.wqe_com, 1); /* wqe_ar */
+ 
+ 	/* Word 8 - abort_tag is variable */
+ 
+ 	/* Word 9  - reqtag is variable */
+ 
+ 	/* Word 10 wqes, xc is variable */
+ 	bf_set(wqe_dbde, &wqe->fcp_trsp.wqe_com, 1);
+ 	bf_set(wqe_nvme, &wqe->fcp_trsp.wqe_com, 1);
+ 	bf_set(wqe_wqes, &wqe->fcp_trsp.wqe_com, 0);
+ 	bf_set(wqe_xc, &wqe->fcp_trsp.wqe_com, 0);
+ 	bf_set(wqe_iod, &wqe->fcp_trsp.wqe_com, LPFC_WQE_IOD_NONE);
+ 	bf_set(wqe_lenloc, &wqe->fcp_trsp.wqe_com, LPFC_WQE_LENLOC_WORD3);
+ 
+ 	/* Word 11 irsp, irsplen is variable */
+ 	bf_set(wqe_cmd_type, &wqe->fcp_trsp.wqe_com, FCP_COMMAND_TRSP);
+ 	bf_set(wqe_cqid, &wqe->fcp_trsp.wqe_com, LPFC_WQE_CQ_ID_DEFAULT);
+ 	bf_set(wqe_sup, &wqe->fcp_trsp.wqe_com, 0);
+ 	bf_set(wqe_irsp, &wqe->fcp_trsp.wqe_com, 0);
+ 	bf_set(wqe_irsplen, &wqe->fcp_trsp.wqe_com, 0);
+ 	bf_set(wqe_pbde, &wqe->fcp_trsp.wqe_com, 0);
+ 
+ 	/* Word 12, 13, 14, 15 - is zero */
+ }
+ 
++>>>>>>> fab2e466e9df (scsi: lpfc: make several unions static, fix non-ANSI prototype)
  void
  lpfc_nvmet_defer_release(struct lpfc_hba *phba, struct lpfc_nvmet_rcv_ctx *ctxp)
  {
diff --git a/drivers/scsi/lpfc/lpfc_nvme.c b/drivers/scsi/lpfc/lpfc_nvme.c
index 09f620b449e5..4ad5c5a160c7 100644
--- a/drivers/scsi/lpfc/lpfc_nvme.c
+++ b/drivers/scsi/lpfc/lpfc_nvme.c
@@ -65,13 +65,13 @@ lpfc_release_nvme_buf(struct lpfc_hba *, struct lpfc_nvme_buf *);
 
 static struct nvme_fc_port_template lpfc_nvme_template;
 
-union lpfc_wqe128 lpfc_iread_cmd_template;
-union lpfc_wqe128 lpfc_iwrite_cmd_template;
-union lpfc_wqe128 lpfc_icmnd_cmd_template;
+static union lpfc_wqe128 lpfc_iread_cmd_template;
+static union lpfc_wqe128 lpfc_iwrite_cmd_template;
+static union lpfc_wqe128 lpfc_icmnd_cmd_template;
 
 /* Setup WQE templates for NVME IOs */
 void
-lpfc_nvme_cmd_template()
+lpfc_nvme_cmd_template(void)
 {
 	union lpfc_wqe128 *wqe;
 
* Unmerged path drivers/scsi/lpfc/lpfc_nvmet.c
