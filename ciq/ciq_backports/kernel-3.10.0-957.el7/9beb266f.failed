exec: proc_exec_connector() should be called only once

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Oleg Nesterov <oleg@redhat.com>
commit 9beb266f2d7e5362c5bb9f999255aa1af5318aef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9beb266f.failed

A separate one-liner with the minor fix.

PROC_EVENT_EXEC reports the "exec" event, but this message is sent at
least twice if search_binary_handler() is called by ->load_binary()
recursively, say, load_script().

Move it to exec_binprm(), this is "depth == 0" code too.

	Signed-off-by: Oleg Nesterov <oleg@redhat.com>
	Acked-by: Kees Cook <keescook@chromium.org>
	Cc: Al Viro <viro@ZenIV.linux.org.uk>
	Cc: Evgeniy Polyakov <zbr@ioremap.net>
	Cc: Zach Levis <zml@linux.vnet.ibm.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 9beb266f2d7e5362c5bb9f999255aa1af5318aef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/exec.c
diff --cc fs/exec.c
index 7eaf14e395d9,d51f7172832b..000000000000
--- a/fs/exec.c
+++ b/fs/exec.c
@@@ -1463,8 -1404,6 +1463,11 @@@ int search_binary_handler(struct linux_
  				if (bprm->file)
  					fput(bprm->file);
  				bprm->file = NULL;
++<<<<<<< HEAD
 +				current->did_exec = 1;
 +				proc_exec_connector(current);
++=======
++>>>>>>> 9beb266f2d7e (exec: proc_exec_connector() should be called only once)
  				return retval;
  			}
  			read_lock(&binfmt_lock);
@@@ -1497,9 -1436,30 +1500,34 @@@
  	}
  	return retval;
  }
 +
  EXPORT_SYMBOL(search_binary_handler);
  
++<<<<<<< HEAD
++=======
+ static int exec_binprm(struct linux_binprm *bprm)
+ {
+ 	pid_t old_pid, old_vpid;
+ 	int ret;
+ 
+ 	/* Need to fetch pid before load_binary changes it */
+ 	old_pid = current->pid;
+ 	rcu_read_lock();
+ 	old_vpid = task_pid_nr_ns(current, task_active_pid_ns(current->parent));
+ 	rcu_read_unlock();
+ 
+ 	ret = search_binary_handler(bprm);
+ 	if (ret >= 0) {
+ 		trace_sched_process_exec(current, old_pid, bprm);
+ 		ptrace_event(PTRACE_EVENT_EXEC, old_vpid);
+ 		current->did_exec = 1;
+ 		proc_exec_connector(current);
+ 	}
+ 
+ 	return ret;
+ }
+ 
++>>>>>>> 9beb266f2d7e (exec: proc_exec_connector() should be called only once)
  /*
   * sys_execve() executes a new program.
   */
* Unmerged path fs/exec.c
