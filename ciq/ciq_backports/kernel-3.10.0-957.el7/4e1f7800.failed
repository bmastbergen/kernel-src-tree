mmc: block: break out mmc_blk_rw_cmd_abort()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [mmc] block: break out mmc_blk_rw_cmd_abort() (Gopal Tiwari) [1549495]
Rebuild_FUZZ: 93.98%
commit-author Linus Walleij <linus.walleij@linaro.org>
commit 4e1f780032c56894e8d7b6685b029b718588f483
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/4e1f7800.failed

As a first step toward breaking apart the very complex function
mmc_blk_issue_rw_rq() we break out the command abort code.
This code assumes "ret" is != 0 and then repeatedly hammers
blk_end_request() until the request to the block layer to end
the request succeeds.

	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 4e1f780032c56894e8d7b6685b029b718588f483)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/block.c
diff --cc drivers/mmc/core/block.c
index 485b42441ab6,14efe92a14ef..000000000000
--- a/drivers/mmc/core/block.c
+++ b/drivers/mmc/core/block.c
@@@ -1730,11 -1748,7 +1741,15 @@@ static int mmc_blk_issue_rw_rq(struct m
  	return 1;
  
   cmd_abort:
++<<<<<<< HEAD
 +	if (mmc_card_removed(card))
 +		req->cmd_flags |= REQ_QUIET;
 +	while (ret)
 +		ret = blk_end_request(req, -EIO,
 +				blk_rq_cur_bytes(req));
++=======
+ 	mmc_blk_rw_cmd_abort(card, req);
++>>>>>>> 4e1f780032c5 (mmc: block: break out mmc_blk_rw_cmd_abort())
  
   start_new_req:
  	if (rqc) {
* Unmerged path drivers/mmc/core/block.c
