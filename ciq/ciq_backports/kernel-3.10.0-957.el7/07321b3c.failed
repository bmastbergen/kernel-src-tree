IB/mlx5: Move ODP initialization to the corresponding stage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Mark Bloch <markb@mellanox.com>
commit 07321b3c674bc2f4d1e47431e38365af523fe34f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/07321b3c.failed

Now that we have a stage just for ODP, move all relevant
initialization logic into one place.

	Signed-off-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 07321b3c674bc2f4d1e47431e38365af523fe34f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index a49372cd35f7,07331613f423..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -4234,27 -4240,86 +4232,73 @@@ static void *mlx5_ib_add(struct mlx5_co
  		dev->roce.last_port_state = IB_PORT_DOWN;
  	}
  
 -	return 0;
 -}
 -
 -static void mlx5_ib_stage_roce_cleanup(struct mlx5_ib_dev *dev)
 -{
 -	struct mlx5_core_dev *mdev = dev->mdev;
 -	enum rdma_link_layer ll;
 -	int port_type_cap;
 +	err = create_dev_resources(&dev->devr);
 +	if (err)
 +		goto err_disable_eth;
  
 -	port_type_cap = MLX5_CAP_GEN(mdev, port_type);
 -	ll = mlx5_port_type_cap_to_rdma_ll(port_type_cap);
 +	err = mlx5_ib_odp_init_one(dev);
 +	if (err)
 +		goto err_rsrc;
  
 -	if (ll == IB_LINK_LAYER_ETHERNET) {
 -		mlx5_disable_eth(dev);
 -		mlx5_remove_netdev_notifier(dev);
 +	if (MLX5_CAP_GEN(dev->mdev, max_qp_cnt)) {
 +		err = mlx5_ib_alloc_counters(dev);
 +		if (err)
 +			goto err_odp;
  	}
 -}
  
 -static int mlx5_ib_stage_dev_res_init(struct mlx5_ib_dev *dev)
 -{
 -	return create_dev_resources(&dev->devr);
 -}
 +	err = mlx5_ib_init_cong_debugfs(dev);
 +	if (err)
 +		goto err_cnt;
  
++<<<<<<< HEAD
++=======
+ static void mlx5_ib_stage_dev_res_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	destroy_dev_resources(&dev->devr);
+ }
+ 
+ static int mlx5_ib_stage_odp_init(struct mlx5_ib_dev *dev)
+ {
+ 	mlx5_ib_internal_fill_odp_caps(dev);
+ 
+ 	return mlx5_ib_odp_init_one(dev);
+ }
+ 
+ static void mlx5_ib_stage_odp_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	mlx5_ib_odp_remove_one(dev);
+ }
+ 
+ static int mlx5_ib_stage_counters_init(struct mlx5_ib_dev *dev)
+ {
+ 	if (MLX5_CAP_GEN(dev->mdev, max_qp_cnt))
+ 		return  mlx5_ib_alloc_counters(dev);
+ 
+ 	return 0;
+ }
+ 
+ static void mlx5_ib_stage_counters_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	if (MLX5_CAP_GEN(dev->mdev, max_qp_cnt))
+ 		mlx5_ib_dealloc_counters(dev);
+ }
+ 
+ static int mlx5_ib_stage_cong_debugfs_init(struct mlx5_ib_dev *dev)
+ {
+ 	return mlx5_ib_init_cong_debugfs(dev);
+ }
+ 
+ static void mlx5_ib_stage_cong_debugfs_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	mlx5_ib_cleanup_cong_debugfs(dev);
+ }
+ 
+ static int mlx5_ib_stage_uar_init(struct mlx5_ib_dev *dev)
+ {
++>>>>>>> 07321b3c674b (IB/mlx5: Move ODP initialization to the corresponding stage)
  	dev->mdev->priv.uar = mlx5_get_uars_page(dev->mdev);
 -	if (!dev->mdev->priv.uar)
 -		return -ENOMEM;
 -	return 0;
 -}
 -
 -static void mlx5_ib_stage_uar_cleanup(struct mlx5_ib_dev *dev)
 -{
 -	mlx5_put_uars_page(dev->mdev, dev->mdev->priv.uar);
 -}
 -
 -static int mlx5_ib_stage_bfrag_init(struct mlx5_ib_dev *dev)
 -{
 -	int err;
 +	if (IS_ERR(dev->mdev->priv.uar))
 +		goto err_cong;
  
  	err = mlx5_alloc_bfreg(dev->mdev, &dev->bfreg, false, false);
  	if (err)
* Unmerged path drivers/infiniband/hw/mlx5/main.c
