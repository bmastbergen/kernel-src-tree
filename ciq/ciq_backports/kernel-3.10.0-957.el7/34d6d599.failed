drm/amdgpu: Update pin_size values before unpinning BO

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Michel Dänzer <michel.daenzer@amd.com>
commit 34d6d59986abb1d2cb5415a49b6c50f51ba1d2e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/34d6d599.failed

At least in theory, ttm_bo_validate may move the BO, in which case the
pin_size accounting would be inconsistent with when the BO was pinned.

	Cc: stable@vger.kernel.org
	Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
	Reviewed-by: Christian König <christian.koenig@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 34d6d59986abb1d2cb5415a49b6c50f51ba1d2e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
diff --cc drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
index cdebce365f6f,026140f08ee9..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
@@@ -771,15 -790,6 +771,18 @@@ int amdgpu_bo_unpin(struct amdgpu_bo *b
  	bo->pin_count--;
  	if (bo->pin_count)
  		return 0;
++<<<<<<< HEAD
 +	for (i = 0; i < bo->placement.num_placement; i++) {
 +		bo->placements[i].lpfn = 0;
 +		bo->placements[i].flags &= ~TTM_PL_FLAG_NO_EVICT;
 +	}
 +	r = ttm_bo_validate(&bo->tbo, &bo->placement, false, false);
 +	if (unlikely(r)) {
 +		dev_err(adev->dev, "%p validate failed for unpin\n", bo);
 +		goto error;
 +	}
++=======
++>>>>>>> 34d6d59986ab (drm/amdgpu: Update pin_size values before unpinning BO)
  
  	if (bo->tbo.mem.mem_type == TTM_PL_VRAM) {
  		adev->vram_pin_size -= amdgpu_bo_size(bo);
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
