net/mlx5: E-Switch, Disallow vlan/spoofcheck setup if not being esw manager

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] mlx5: E-Switch, Disallow vlan/spoofcheck setup if not being esw manager (Alaa Hleihel) [1595687]
Rebuild_FUZZ: 97.26%
commit-author Eli Cohen <eli@mellanox.com>
commit a8d70a054a718b63058b3d3ac58b6181815e4289
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/a8d70a05.failed

In smartnic env, if the host (PF) driver is not an e-switch manager, we
are not allowed to apply eswitch ports setups such as vlan (VST),
spoof-checks, min/max rate or state.

Make sure we are eswitch manager when coming to issue these callbacks
and err otherwise.

Also fix the definition of ESW_ALLOWED to rely on eswitch_manager
capability and on the vport_group_manger.

Operations on the VF nic vport context, such as setting a mac or reading
the vport counters are allowed to the PF in this scheme.

The modify nic vport guid code was modified to omit checking the
nic_vport_node_guid_modify eswitch capability.
The reason for doing so is that modifying node guid requires vport group
manager capability, and there's no need to check further capabilities.

1. set_vf_vlan     - disallowed
2. set_vf_spoofchk - disallowed
3. set_vf_mac      - allowed
4. get_vf_config   - allowed
5. set_vf_trust    - disallowed
6. set_vf_rate     - disallowed
7. get_vf_stat     - allowed
8. set_vf_link_state - disallowed

Fixes: f942380c1239 ('net/mlx5: E-Switch, Vport ingress/egress ACLs rules for spoofchk')
	Signed-off-by: Eli Cohen <eli@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Tested-by: Or Gerlitz <ogerlitz@mellanox.com>
(cherry picked from commit a8d70a054a718b63058b3d3ac58b6181815e4289)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
index 5ecfef87628e,b79d74860a30..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
@@@ -1601,10 -1602,7 +1602,14 @@@ int mlx5_eswitch_enable_sriov(struct ml
  	int err;
  	int i, enabled_events;
  
++<<<<<<< HEAD
 +	if (!ESW_ALLOWED(esw))
 +		return 0;
 +
 +	if (!MLX5_CAP_GEN(esw->dev, eswitch_flow_table) ||
++=======
+ 	if (!ESW_ALLOWED(esw) ||
++>>>>>>> a8d70a054a71 (net/mlx5: E-Switch, Disallow vlan/spoofcheck setup if not being esw manager)
  	    !MLX5_CAP_ESW_FLOWTABLE_FDB(esw->dev, ft_support)) {
  		esw_warn(esw->dev, "E-Switch FDB is not supported, aborting ...\n");
  		return -EOPNOTSUPP;
@@@ -1789,11 -1800,11 +1794,11 @@@ void mlx5_eswitch_vport_event(struct ml
  int mlx5_eswitch_set_vport_mac(struct mlx5_eswitch *esw,
  			       int vport, u8 mac[ETH_ALEN])
  {
 -	struct mlx5_vport *evport;
  	u64 node_guid;
  	int err = 0;
 +	struct mlx5_vport *evport;
  
- 	if (!ESW_ALLOWED(esw))
+ 	if (!MLX5_CAP_GEN(esw->dev, vport_group_manager))
  		return -EPERM;
  	if (!LEGAL_VPORT(esw, vport) || is_multicast_ether_addr(mac))
  		return -EINVAL;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/vport.c b/drivers/net/ethernet/mellanox/mlx5/core/vport.c
index 78d62514fc77..35c15dd217db 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/vport.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/vport.c
@@ -552,8 +552,6 @@ int mlx5_modify_nic_vport_node_guid(struct mlx5_core_dev *mdev,
 		return -EINVAL;
 	if (!MLX5_CAP_GEN(mdev, vport_group_manager))
 		return -EACCES;
-	if (!MLX5_CAP_ESW(mdev, nic_vport_node_guid_modify))
-		return -EOPNOTSUPP;
 
 	in = kvzalloc(inlen, GFP_KERNEL);
 	if (!in)
