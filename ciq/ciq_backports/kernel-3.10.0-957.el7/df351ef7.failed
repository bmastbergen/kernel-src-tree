nvme-fabrics: fix memory leak when parsing host ID option

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Roland Dreier <roland@purestorage.com>
commit df351ef73789345b4b6c00434c5fd1fca7175643
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/df351ef7.failed

We use match_strdup() to get a copy of the option string for host ID string, but
we just pass it to uuid_parse() and don't store the string pointer, so we need to
kfree() the string after parsing it.

	Signed-off-by: Roland Dreier <roland@purestorage.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit df351ef73789345b4b6c00434c5fd1fca7175643)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fabrics.c
diff --cc drivers/nvme/host/fabrics.c
index 4ef418568e4b,eb46967bb0d5..000000000000
--- a/drivers/nvme/host/fabrics.c
+++ b/drivers/nvme/host/fabrics.c
@@@ -737,7 -738,10 +737,14 @@@ static int nvmf_parse_options(struct nv
  				ret = -ENOMEM;
  				goto out;
  			}
++<<<<<<< HEAD
 +			if (uuid_be_to_bin(p, &hostid)) {
++=======
+ 			ret = uuid_parse(p, &hostid);
+ 			kfree(p);
+ 			if (ret) {
+ 				pr_err("Invalid hostid %s\n", p);
++>>>>>>> df351ef73789 (nvme-fabrics: fix memory leak when parsing host ID option)
  				ret = -EINVAL;
  				goto out;
  			}
* Unmerged path drivers/nvme/host/fabrics.c
