platform/x86: dell-wmi: Fix driver interface version query

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [platform] x86: dell-wmi: Fix driver interface version query (Jarod Wilson) [1526317]
Rebuild_FUZZ: 91.59%
commit-author Andy Lutomirski <luto@kernel.org>
commit baa5480b0509d8af06c37fff03edbb5a6815cef1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/baa5480b.failed

When I converted dell-wmi to the new bus infrastructure, I left the
call to dell_wmi_check_descriptor_buffer() in dell_wmi_init().  This
could cause two problems:

 - An error message when loading the driver on a system without
   dell-wmi.  We'd try to read the event descriptor even if the WMI
   GUID wasn't there.

 - A possible race if dell-wmi was loaded manually before wmi was
   fully initialized.

Fix it by moving the call to the probe function where it belongs.

Fixes: bff589be59c5 ("platform/x86: dell-wmi: Convert to the WMI bus infrastructure")
	Signed-off-by: Andy Lutomirski <luto@kernel.org>
	Reviewed-by: Pali Roh√°r <pali.rohar@gmail.com>
	Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
(cherry picked from commit baa5480b0509d8af06c37fff03edbb5a6815cef1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/dell-wmi.c
diff --cc drivers/platform/x86/dell-wmi.c
index 91c39b6c1524,dad8f4afa17c..000000000000
--- a/drivers/platform/x86/dell-wmi.c
+++ b/drivers/platform/x86/dell-wmi.c
@@@ -715,35 -715,46 +715,77 @@@ static int dell_wmi_events_set_enabled(
  	return dell_smbios_error(ret);
  }
  
++<<<<<<< HEAD
++=======
+ static int dell_wmi_probe(struct wmi_device *wdev)
+ {
+ 	int err;
+ 
+ 	struct dell_wmi_priv *priv = devm_kzalloc(
+ 		&wdev->dev, sizeof(struct dell_wmi_priv), GFP_KERNEL);
+ 
+ 	err = dell_wmi_check_descriptor_buffer();
+ 	if (err)
+ 		return err;
+ 
+ 	dev_set_drvdata(&wdev->dev, priv);
+ 
+ 	return dell_wmi_input_setup(wdev);
+ }
+ 
+ static int dell_wmi_remove(struct wmi_device *wdev)
+ {
+ 	dell_wmi_input_destroy(wdev);
+ 	return 0;
+ }
+ static const struct wmi_device_id dell_wmi_id_table[] = {
+ 	{ .guid_string = DELL_EVENT_GUID },
+ 	{ },
+ };
+ 
+ static struct wmi_driver dell_wmi_driver = {
+ 	.driver = {
+ 		.name = "dell-wmi",
+ 	},
+ 	.id_table = dell_wmi_id_table,
+ 	.probe = dell_wmi_probe,
+ 	.remove = dell_wmi_remove,
+ 	.notify = dell_wmi_notify,
+ };
+ 
++>>>>>>> baa5480b0509 (platform/x86: dell-wmi: Fix driver interface version query)
  static int __init dell_wmi_init(void)
  {
  	int err;
 +	acpi_status status;
 +
 +	if (!wmi_has_guid(DELL_EVENT_GUID) ||
 +	    !wmi_has_guid(DELL_DESCRIPTOR_GUID)) {
 +		pr_warn("Dell WMI GUID were not found\n");
 +		return -ENODEV;
 +	}
 +
++<<<<<<< HEAD
 +	err = dell_wmi_check_descriptor_buffer();
 +	if (err)
 +		return err;
  
 +	acpi_video = acpi_video_backlight_support();
 +
 +	err = dell_wmi_input_setup();
 +	if (err)
 +		return err;
 +
 +	status = wmi_install_notify_handler(DELL_EVENT_GUID,
 +					 dell_wmi_notify, NULL);
 +	if (ACPI_FAILURE(status)) {
 +		input_unregister_device(dell_wmi_input_dev);
 +		pr_err("Unable to register notify handler - %d\n", status);
 +		return -ENODEV;
 +	}
 +
++=======
++>>>>>>> baa5480b0509 (platform/x86: dell-wmi: Fix driver interface version query)
  	dmi_check_system(dell_wmi_smbios_list);
  
  	if (wmi_requires_smbios_request) {
* Unmerged path drivers/platform/x86/dell-wmi.c
