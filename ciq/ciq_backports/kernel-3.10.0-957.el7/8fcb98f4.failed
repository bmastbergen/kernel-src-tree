net: aquantia: Convert hw and caps structures to const static pointers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] aquantia: Convert hw and caps structures to const static pointers (David Arcari) [1546765]
Rebuild_FUZZ: 96.30%
commit-author Igor Russkikh <igor.russkikh@aquantia.com>
commit 8fcb98f462e6504e6d1ab2dab87c6db803c206b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/8fcb98f4.failed

This removes unnecessary structure copying, and prepares the driver for
separate firmware ops table introduction.

We also remove extra copy of capabilities structure (which is const actually)
and also replace it with a const pointer in aq_nic_cfg.

	Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8fcb98f462e6504e6d1ab2dab87c6db803c206b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/aq_nic.c
#	drivers/net/ethernet/aquantia/atlantic/aq_nic.h
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_nic.c
index 30b3edb5d728,c5fd90cc310c..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_nic.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_nic.c
@@@ -239,17 -228,15 +237,24 @@@ struct aq_nic_s *aq_nic_alloc_cold(cons
  
  	self->aq_pci_func = aq_pci_func;
  
++<<<<<<< HEAD
 +	self->aq_hw_ops = *aq_hw_ops;
++=======
+ 	self->aq_hw_ops = aq_hw_ops;
+ 	self->aq_nic_cfg.aq_hw_caps = aq_hw_caps;
+ 	self->aq_hw->aq_nic_cfg = &self->aq_nic_cfg;
++>>>>>>> 8fcb98f462e6 (net: aquantia: Convert hw and caps structures to const static pointers)
  	self->port = (u8)port;
  
- 	self->aq_hw = self->aq_hw_ops.create(aq_pci_func, self->port);
- 	self->aq_hw->aq_nic_cfg = &self->aq_nic_cfg;
+ 	self->aq_hw = self->aq_hw_ops->create(aq_pci_func, self->port);
+ 	if (err < 0)
+ 		goto err_exit;
  
 +	err = self->aq_hw_ops.get_hw_caps(self->aq_hw, &self->aq_hw_caps,
 +					  pdev->device, pdev->subsystem_device);
 +	if (err < 0)
 +		goto err_exit;
 +
  	aq_nic_cfg_init_defaults(self);
  
  err_exit:
@@@ -302,8 -289,7 +307,12 @@@ int aq_nic_ndev_init(struct aq_nic_s *s
  	self->ndev->features = aq_hw_caps->hw_features;
  	self->ndev->priv_flags = aq_hw_caps->hw_priv_flags;
  	self->ndev->mtu = aq_nic_cfg->mtu - ETH_HLEN;
++<<<<<<< HEAD
 +	self->ndev->extended->max_mtu = self->aq_hw_caps.mtu - ETH_FCS_LEN -
 +		ETH_HLEN;
++=======
+ 	self->ndev->max_mtu = aq_hw_caps->mtu - ETH_FCS_LEN - ETH_HLEN;
++>>>>>>> 8fcb98f462e6 (net: aquantia: Convert hw and caps structures to const static pointers)
  
  	return 0;
  }
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_nic.h
index 715b53c689ef,8e6e54213c36..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_nic.h
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_nic.h
@@@ -70,12 -58,41 +70,46 @@@ struct aq_nic_cfg_s 
  #define AQ_NIC_TCVEC2RING(_NIC_, _TC_, _VEC_) \
  	((_TC_) * AQ_CFG_TCS_MAX + (_VEC_))
  
++<<<<<<< HEAD
 +struct aq_nic_s *aq_nic_alloc_cold(const struct net_device_ops *ndev_ops,
 +				   const struct ethtool_ops *et_ops,
 +				   struct pci_dev *pdev,
++=======
+ struct aq_nic_s {
+ 	atomic_t flags;
+ 	struct aq_vec_s *aq_vec[AQ_CFG_VECS_MAX];
+ 	struct aq_ring_s *aq_ring_tx[AQ_CFG_VECS_MAX * AQ_CFG_TCS_MAX];
+ 	struct aq_hw_s *aq_hw;
+ 	struct net_device *ndev;
+ 	struct aq_pci_func_s *aq_pci_func;
+ 	unsigned int aq_vecs;
+ 	unsigned int packet_filter;
+ 	unsigned int power_state;
+ 	u8 port;
+ 	const struct aq_hw_ops *aq_hw_ops;
+ 	struct aq_nic_cfg_s aq_nic_cfg;
+ 	struct timer_list service_timer;
+ 	struct timer_list polling_timer;
+ 	struct aq_hw_link_status_s link_status;
+ 	struct {
+ 		u32 count;
+ 		u8 ar[AQ_CFG_MULTICAST_ADDRESS_MAX][ETH_ALEN];
+ 	} mc_list;
+ 
+ 	struct pci_dev *pdev;
+ 	unsigned int msix_entry_mask;
+ };
+ 
+ static inline struct device *aq_nic_get_dev(struct aq_nic_s *self)
+ {
+ 	return self->ndev->dev.parent;
+ }
+ 
+ struct aq_nic_s *aq_nic_alloc_cold(struct pci_dev *pdev,
++>>>>>>> 8fcb98f462e6 (net: aquantia: Convert hw and caps structures to const static pointers)
  				   struct aq_pci_func_s *aq_pci_func,
  				   unsigned int port,
 -				   const struct aq_hw_ops *aq_hw_ops,
 -				   const struct aq_hw_caps_s *aq_hw_caps);
 +				   const struct aq_hw_ops *aq_hw_ops);
  int aq_nic_ndev_init(struct aq_nic_s *self);
  struct aq_nic_s *aq_nic_alloc_hot(struct net_device *ndev);
  void aq_nic_set_tx_ring(struct aq_nic_s *self, unsigned int idx,
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_nic.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_nic.h
