media: uvcvideo: Support realtek's UVC 1.5 device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [media] uvcvideo: Support realtek's UVC 1.5 device (Jarod Wilson) [1561502]
Rebuild_FUZZ: 92.31%
commit-author ming_qian <ming_qian@realsil.com.cn>
commit f620d1d7afc7db57ab59f35000752840c91f67e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/f620d1d7.failed

media: uvcvideo: Support UVC 1.5 video probe & commit controls

The length of UVC 1.5 video control is 48, and it is 34 for UVC 1.1.
Change it to 48 for UVC 1.5 device, and the UVC 1.5 device can be
recognized.

More changes to the driver are needed for full UVC 1.5 compatibility.
However, at least the UVC 1.5 Realtek RTS5847/RTS5852 cameras have been
reported to work well.

[laurent.pinchart@ideasonboard.com: Factor out code to helper function, update size checks]

	Cc: stable@vger.kernel.org
	Signed-off-by: ming_qian <ming_qian@realsil.com.cn>
	Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Tested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
	Tested-by: Ana Guerrero Lopez <ana.guerrero@collabora.com>
	Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
(cherry picked from commit f620d1d7afc7db57ab59f35000752840c91f67e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/usb/uvc/uvc_video.c
diff --cc drivers/media/usb/uvc/uvc_video.c
index 3e6fd4253703,b28c997a7ab0..000000000000
--- a/drivers/media/usb/uvc/uvc_video.c
+++ b/drivers/media/usb/uvc/uvc_video.c
@@@ -163,14 -163,27 +163,32 @@@ static void uvc_fixup_video_ctrl(struc
  	}
  }
  
+ static size_t uvc_video_ctrl_size(struct uvc_streaming *stream)
+ {
+ 	/*
+ 	 * Return the size of the video probe and commit controls, which depends
+ 	 * on the protocol version.
+ 	 */
+ 	if (stream->dev->uvc_version < 0x0110)
+ 		return 26;
+ 	else if (stream->dev->uvc_version < 0x0150)
+ 		return 34;
+ 	else
+ 		return 48;
+ }
+ 
  static int uvc_get_video_ctrl(struct uvc_streaming *stream,
 -	struct uvc_streaming_control *ctrl, int probe, u8 query)
 +	struct uvc_streaming_control *ctrl, int probe, __u8 query)
  {
++<<<<<<< HEAD
 +	__u8 *data;
 +	__u16 size;
++=======
+ 	u16 size = uvc_video_ctrl_size(stream);
+ 	u8 *data;
++>>>>>>> f620d1d7afc7 (media: uvcvideo: Support realtek's UVC 1.5 device)
  	int ret;
  
- 	size = stream->dev->uvc_version >= 0x0110 ? 34 : 26;
  	if ((stream->dev->quirks & UVC_QUIRK_PROBE_DEF) &&
  			query == UVC_GET_DEF)
  		return -EIO;
@@@ -254,11 -267,10 +272,15 @@@ out
  static int uvc_set_video_ctrl(struct uvc_streaming *stream,
  	struct uvc_streaming_control *ctrl, int probe)
  {
++<<<<<<< HEAD
 +	__u8 *data;
 +	__u16 size;
++=======
+ 	u16 size = uvc_video_ctrl_size(stream);
+ 	u8 *data;
++>>>>>>> f620d1d7afc7 (media: uvcvideo: Support realtek's UVC 1.5 device)
  	int ret;
  
- 	size = stream->dev->uvc_version >= 0x0110 ? 34 : 26;
  	data = kzalloc(size, GFP_KERNEL);
  	if (data == NULL)
  		return -ENOMEM;
* Unmerged path drivers/media/usb/uvc/uvc_video.c
