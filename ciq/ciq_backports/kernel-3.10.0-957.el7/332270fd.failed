bpf: enhance verifier to understand stack pointer arithmetic

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Yonghong Song <yhs@fb.com>
commit 332270fdc8b6fba07d059a9ad44df9e1a2ad4529
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/332270fd.failed

llvm 4.0 and above generates the code like below:
....
440: (b7) r1 = 15
441: (05) goto pc+73
515: (79) r6 = *(u64 *)(r10 -152)
516: (bf) r7 = r10
517: (07) r7 += -112
518: (bf) r2 = r7
519: (0f) r2 += r1
520: (71) r1 = *(u8 *)(r8 +0)
521: (73) *(u8 *)(r2 +45) = r1
....
and the verifier complains "R2 invalid mem access 'inv'" for insn #521.
This is because verifier marks register r2 as unknown value after #519
where r2 is a stack pointer and r1 holds a constant value.

Teach verifier to recognize "stack_ptr + imm" and
"stack_ptr + reg with const val" as valid stack_ptr with new offset.

	Signed-off-by: Yonghong Song <yhs@fb.com>
	Acked-by: Martin KaFai Lau <kafai@fb.com>
	Acked-by: Daniel Borkmann <daniel@iogearbox.net>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 332270fdc8b6fba07d059a9ad44df9e1a2ad4529)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/verifier.c
#	tools/testing/selftests/bpf/test_verifier.c
* Unmerged path kernel/bpf/verifier.c
* Unmerged path tools/testing/selftests/bpf/test_verifier.c
* Unmerged path kernel/bpf/verifier.c
* Unmerged path tools/testing/selftests/bpf/test_verifier.c
