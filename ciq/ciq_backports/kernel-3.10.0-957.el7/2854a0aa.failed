platform/x86: intel_pmc_core: Change driver to a module

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [platform] x86: intel_pmc_core: Change driver to a module (Scott Wood) [1445478]
Rebuild_FUZZ: 91.09%
commit-author Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
commit 2854a0aa822c11ea8538ebfe94a62e20ab570e2b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2854a0aa.failed

Allow the driver to be a module since builtin_pci_driver funtionality is no
longer needed.

	Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Signed-off-by: Rajneesh Bhardwaj <rajneesh.bhardwaj@intel.com>
	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
(cherry picked from commit 2854a0aa822c11ea8538ebfe94a62e20ab570e2b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/Kconfig
#	drivers/platform/x86/intel_pmc_core.c
diff --cc drivers/platform/x86/Kconfig
index cd2842518f6d,1c251eb130ab..000000000000
--- a/drivers/platform/x86/Kconfig
+++ b/drivers/platform/x86/Kconfig
@@@ -766,9 -949,45 +766,48 @@@ config INTEL_IP
  	  functionality.  If in doubt, say Y here; it will only load on
  	  supported platforms.
  
++<<<<<<< HEAD
++=======
+ config INTEL_IMR
+ 	bool "Intel Isolated Memory Region support"
+ 	depends on X86_INTEL_QUARK && IOSF_MBI
+ 	---help---
+ 	  This option provides a means to manipulate Isolated Memory Regions.
+ 	  IMRs are a set of registers that define read and write access masks
+ 	  to prohibit certain system agents from accessing memory with 1 KiB
+ 	  granularity.
+ 
+ 	  IMRs make it possible to control read/write access to an address
+ 	  by hardware agents inside the SoC. Read and write masks can be
+ 	  defined for:
+ 		- eSRAM flush
+ 		- Dirty CPU snoop (write only)
+ 		- RMU access
+ 		- PCI Virtual Channel 0/Virtual Channel 1
+ 		- SMM mode
+ 		- Non SMM mode
+ 
+ 	  Quark contains a set of eight IMR registers and makes use of those
+ 	  registers during its bootup process.
+ 
+ 	  If you are running on a Galileo/Quark say Y here.
+ 
+ config INTEL_PMC_CORE
+ 	tristate "Intel PMC Core driver"
+ 	depends on PCI
+ 	---help---
+ 	  The Intel Platform Controller Hub for Intel Core SoCs provides access
+ 	  to Power Management Controller registers via a PCI interface. This
+ 	  driver can utilize debugging capabilities and supported features as
+ 	  exposed by the Power Management Controller.
+ 
+ 	  Supported features:
+ 		- SLP_S0_RESIDENCY counter.
+ 
++>>>>>>> 2854a0aa822c (platform/x86: intel_pmc_core: Change driver to a module)
  config IBM_RTL
  	tristate "Device driver to enable PRTL support"
 -	depends on PCI
 +	depends on X86 && PCI
  	---help---
  	 Enable support for IBM Premium Real Time Mode (PRTM).
  	 This module will allow you the enter and exit PRTM in the BIOS via
* Unmerged path drivers/platform/x86/intel_pmc_core.c
* Unmerged path drivers/platform/x86/Kconfig
* Unmerged path drivers/platform/x86/intel_pmc_core.c
