cifs: show the "w" bit for writeable /proc/fs/cifs/* files

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ronnie Sahlberg <lsahlber@redhat.com>
commit 6539e7f3727ab9d1c3810ecda040bb4d8c12a238
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6539e7f3.failed

RHBZ: 1539612

Lets show the "w" bit for those files have a .write interface to set/enable/...
the feature.

	Reported-by: Xiaoli Feng <xifeng@redhat.com>
	Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 6539e7f3727ab9d1c3810ecda040bb4d8c12a238)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/cifs_debug.c
diff --cc fs/cifs/cifs_debug.c
index d60674ca4d15,7b857002c063..000000000000
--- a/fs/cifs/cifs_debug.c
+++ b/fs/cifs/cifs_debug.c
@@@ -402,16 -501,34 +402,37 @@@ cifs_proc_init(void
  	proc_create("DebugData", 0, proc_fs_cifs, &cifs_debug_data_proc_fops);
  
  #ifdef CONFIG_CIFS_STATS
- 	proc_create("Stats", 0, proc_fs_cifs, &cifs_stats_proc_fops);
+ 	proc_create("Stats", 0644, proc_fs_cifs, &cifs_stats_proc_fops);
  #endif /* STATS */
- 	proc_create("cifsFYI", 0, proc_fs_cifs, &cifsFYI_proc_fops);
- 	proc_create("traceSMB", 0, proc_fs_cifs, &traceSMB_proc_fops);
- 	proc_create("LinuxExtensionsEnabled", 0, proc_fs_cifs,
+ 	proc_create("cifsFYI", 0644, proc_fs_cifs, &cifsFYI_proc_fops);
+ 	proc_create("traceSMB", 0644, proc_fs_cifs, &traceSMB_proc_fops);
+ 	proc_create("LinuxExtensionsEnabled", 0644, proc_fs_cifs,
  		    &cifs_linux_ext_proc_fops);
- 	proc_create("SecurityFlags", 0, proc_fs_cifs,
+ 	proc_create("SecurityFlags", 0644, proc_fs_cifs,
  		    &cifs_security_flags_proc_fops);
- 	proc_create("LookupCacheEnabled", 0, proc_fs_cifs,
+ 	proc_create("LookupCacheEnabled", 0644, proc_fs_cifs,
  		    &cifs_lookup_cache_proc_fops);
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_CIFS_SMB_DIRECT
+ 	proc_create("rdma_readwrite_threshold", 0644, proc_fs_cifs,
+ 		&cifs_rdma_readwrite_threshold_proc_fops);
+ 	proc_create("smbd_max_frmr_depth", 0644, proc_fs_cifs,
+ 		&cifs_smbd_max_frmr_depth_proc_fops);
+ 	proc_create("smbd_keep_alive_interval", 0644, proc_fs_cifs,
+ 		&cifs_smbd_keep_alive_interval_proc_fops);
+ 	proc_create("smbd_max_receive_size", 0644, proc_fs_cifs,
+ 		&cifs_smbd_max_receive_size_proc_fops);
+ 	proc_create("smbd_max_fragmented_recv_size", 0644, proc_fs_cifs,
+ 		&cifs_smbd_max_fragmented_recv_size_proc_fops);
+ 	proc_create("smbd_max_send_size", 0644, proc_fs_cifs,
+ 		&cifs_smbd_max_send_size_proc_fops);
+ 	proc_create("smbd_send_credit_target", 0644, proc_fs_cifs,
+ 		&cifs_smbd_send_credit_target_proc_fops);
+ 	proc_create("smbd_receive_credit_max", 0644, proc_fs_cifs,
+ 		&cifs_smbd_receive_credit_max_proc_fops);
+ #endif
++>>>>>>> 6539e7f3727a (cifs: show the "w" bit for writeable /proc/fs/cifs/* files)
  }
  
  void
* Unmerged path fs/cifs/cifs_debug.c
