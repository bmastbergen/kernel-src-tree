tools: Adopt __scanf from kernel sources

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [tools] Adopt __scanf from kernel sources (Jiri Olsa) [1532861]
Rebuild_FUZZ: 90.41%
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 3ee350fb8a2b30fe47dd9e3b299dff0178fc8c88
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3ee350fb.failed

To have a more compact way to ask the compiler to perform scanf like
argument validation.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-yzqrhfjrn26lqqtwf55egg0h@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 3ee350fb8a2b30fe47dd9e3b299dff0178fc8c88)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/include/linux/compiler-gcc.h
diff --cc tools/include/linux/compiler-gcc.h
index a3deb74cb070,2846094aad4d..000000000000
--- a/tools/include/linux/compiler-gcc.h
+++ b/tools/include/linux/compiler-gcc.h
@@@ -21,3 -21,6 +21,9 @@@
  #define __must_be_array(a)	BUILD_BUG_ON_ZERO(__same_type((a), &(a)[0]))
  
  #define __noreturn	__attribute__((noreturn))
++<<<<<<< HEAD
++=======
+ 
+ #define __printf(a, b)	__attribute__((format(printf, a, b)))
+ #define __scanf(a, b)	__attribute__((format(scanf, a, b)))
++>>>>>>> 3ee350fb8a2b (tools: Adopt __scanf from kernel sources)
* Unmerged path tools/include/linux/compiler-gcc.h
diff --git a/tools/perf/util/pmu.h b/tools/perf/util/pmu.h
index 3aaccfcc468d..060f6abba8ed 100644
--- a/tools/perf/util/pmu.h
+++ b/tools/perf/util/pmu.h
@@ -2,6 +2,7 @@
 #define __PMU_H
 
 #include <linux/bitmap.h>
+#include <linux/compiler.h>
 #include <linux/perf_event.h>
 #include <stdbool.h>
 #include "evsel.h"
@@ -83,8 +84,7 @@ void print_pmu_events(const char *event_glob, bool name_only, bool quiet,
 		      bool long_desc, bool details_flag);
 bool pmu_have_event(const char *pname, const char *name);
 
-int perf_pmu__scan_file(struct perf_pmu *pmu, const char *name, const char *fmt,
-			...) __attribute__((format(scanf, 3, 4)));
+int perf_pmu__scan_file(struct perf_pmu *pmu, const char *name, const char *fmt, ...) __scanf(3, 4);
 
 int perf_pmu__test(void);
 
