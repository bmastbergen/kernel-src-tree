perf script: Add a few missing conversions to fprintf style

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 69c71252298acad7a25e9499929f723790f48e26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/69c71252.failed

In a1a587073ccd ("perf script: Use fprintf like printing uniformly")
there were a few cases that were missed, fix it.

	Reported-by: yuzhoujian <yuzhoujian@didichuxing.com>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-sq9hvfk5mkjdqzlpyiq7jkos@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 69c71252298acad7a25e9499929f723790f48e26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-script.c
diff --cc tools/perf/builtin-script.c
index b438ada92944,db4ff1510dc5..000000000000
--- a/tools/perf/builtin-script.c
+++ b/tools/perf/builtin-script.c
@@@ -1094,10 -1444,10 +1094,10 @@@ static void process_event(struct perf_s
  	if (output[type].fields == 0)
  		return;
  
 -	perf_sample__fprintf_start(sample, thread, evsel, fp);
 +	print_sample_start(sample, thread, evsel);
  
  	if (PRINT_FIELD(PERIOD))
- 		printf("%10" PRIu64 " ", sample->period);
+ 		fprintf(fp, "%10" PRIu64 " ", sample->period);
  
  	if (PRINT_FIELD(EVNAME)) {
  		const char *evname = perf_evsel__name(evsel);
@@@ -1142,14 -1495,25 +1141,28 @@@
  	}
  
  	if (PRINT_FIELD(IREGS))
 -		perf_sample__fprintf_iregs(sample, attr, fp);
 -
 -	if (PRINT_FIELD(UREGS))
 -		perf_sample__fprintf_uregs(sample, attr, fp);
 +		print_sample_iregs(sample, attr);
  
  	if (PRINT_FIELD(BRSTACK))
 -		perf_sample__fprintf_brstack(sample, thread, attr, fp);
 +		print_sample_brstack(sample);
  	else if (PRINT_FIELD(BRSTACKSYM))
++<<<<<<< HEAD
 +		print_sample_brstacksym(sample, thread);
 +	print_insn(sample, attr, thread, machine);
 +	printf("\n");
++=======
+ 		perf_sample__fprintf_brstacksym(sample, thread, attr, fp);
+ 	else if (PRINT_FIELD(BRSTACKOFF))
+ 		perf_sample__fprintf_brstackoff(sample, thread, attr, fp);
+ 
+ 	if (perf_evsel__is_bpf_output(evsel) && PRINT_FIELD(BPF_OUTPUT))
+ 		perf_sample__fprintf_bpf_output(sample, fp);
+ 	perf_sample__fprintf_insn(sample, attr, thread, machine, fp);
+ 
+ 	if (PRINT_FIELD(PHYS_ADDR))
+ 		fprintf(fp, "%16" PRIx64, sample->phys_addr);
+ 	fprintf(fp, "\n");
++>>>>>>> 69c71252298a (perf script: Add a few missing conversions to fprintf style)
  }
  
  static struct scripting_ops	*scripting_ops;
* Unmerged path tools/perf/builtin-script.c
