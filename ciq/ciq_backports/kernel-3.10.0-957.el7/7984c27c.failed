bpf: do not use KMALLOC_SHIFT_MAX

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Michal Hocko <mhocko@suse.com>
commit 7984c27c2c5cd3298de8afdba3e1bd46f884e934
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/7984c27c.failed

Commit 01b3f52157ff ("bpf: fix allocation warnings in bpf maps and
integer overflow") has added checks for the maximum allocateable size.
It (ab)used KMALLOC_SHIFT_MAX for that purpose.

While this is not incorrect it is not very clean because we already have
KMALLOC_MAX_SIZE for this very reason so let's change both checks to use
KMALLOC_MAX_SIZE instead.

The original motivation for using KMALLOC_SHIFT_MAX was to work around
an incorrect KMALLOC_MAX_SIZE which could lead to allocation warnings
but it is no longer needed since "slab: make sure that KMALLOC_MAX_SIZE
will fit into MAX_ORDER".

Link: http://lkml.kernel.org/r/20161220130659.16461-3-mhocko@kernel.org
	Signed-off-by: Michal Hocko <mhocko@suse.com>
	Acked-by: Christoph Lameter <cl@linux.com>
	Cc: Alexei Starovoitov <ast@kernel.org>
	Cc: Andrey Konovalov <andreyknvl@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 7984c27c2c5cd3298de8afdba3e1bd46f884e934)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/arraymap.c
#	kernel/bpf/hashtab.c
* Unmerged path kernel/bpf/arraymap.c
* Unmerged path kernel/bpf/hashtab.c
* Unmerged path kernel/bpf/arraymap.c
* Unmerged path kernel/bpf/hashtab.c
