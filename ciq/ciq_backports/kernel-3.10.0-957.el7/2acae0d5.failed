trace: add variant without spacing in trace_print_hex_seq

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit 2acae0d5b0f73a8fb4b180bd13491feb96e55fc6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2acae0d5.failed

For upcoming tracepoint support for BPF, we want to dump the program's
tag. Format should be similar to __print_hex(), but without spacing.
Add a __print_hex_str() variant for exactly that purpose that reuses
trace_print_hex_seq().

	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2acae0d5b0f73a8fb4b180bd13491feb96e55fc6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/ftrace_event.h
#	include/trace/ftrace.h
#	kernel/trace/trace_output.c
diff --cc include/linux/ftrace_event.h
index 5be378c489c1,cfa475a0e9ca..000000000000
--- a/include/linux/ftrace_event.h
+++ b/include/linux/ftrace_event.h
@@@ -40,11 -29,15 +40,20 @@@ const char *ftrace_print_symbols_seq_u6
  								 *symbol_array);
  #endif
  
 -const char *trace_print_bitmask_seq(struct trace_seq *p, void *bitmask_ptr,
 -				    unsigned int bitmask_size);
 +const char *ftrace_print_hex_seq(struct trace_seq *p,
 +				 const unsigned char *buf, int len);
  
++<<<<<<< HEAD:include/linux/ftrace_event.h
 +const char *ftrace_print_array_seq(struct trace_seq *p,
 +				   const void *buf, int buf_len,
++=======
+ const char *trace_print_hex_seq(struct trace_seq *p,
+ 				const unsigned char *buf, int len,
+ 				bool spacing);
+ 
+ const char *trace_print_array_seq(struct trace_seq *p,
+ 				   const void *buf, int count,
++>>>>>>> 2acae0d5b0f7 (trace: add variant without spacing in trace_print_hex_seq):include/linux/trace_events.h
  				   size_t el_size);
  
  struct trace_iterator;
diff --cc include/trace/ftrace.h
index 0941f9f66227,9f684629c3cf..000000000000
--- a/include/trace/ftrace.h
+++ b/include/trace/ftrace.h
@@@ -264,7 -297,12 +264,16 @@@ TRACE_MAKE_SYSTEM_STR()
  #endif
  
  #undef __print_hex
++<<<<<<< HEAD:include/trace/ftrace.h
 +#define __print_hex(buf, buf_len) ftrace_print_hex_seq(p, buf, buf_len)
++=======
+ #define __print_hex(buf, buf_len)					\
+ 	trace_print_hex_seq(p, buf, buf_len, true)
+ 
+ #undef __print_hex_str
+ #define __print_hex_str(buf, buf_len)					\
+ 	trace_print_hex_seq(p, buf, buf_len, false)
++>>>>>>> 2acae0d5b0f7 (trace: add variant without spacing in trace_print_hex_seq):include/trace/trace_events.h
  
  #undef __print_array
  #define __print_array(array, count, el_size)				\
diff --cc kernel/trace/trace_output.c
index 493871b807d2,30a144b1b9ee..000000000000
--- a/kernel/trace/trace_output.c
+++ b/kernel/trace/trace_output.c
@@@ -428,7 -150,21 +428,25 @@@ EXPORT_SYMBOL(ftrace_print_symbols_seq_
  #endif
  
  const char *
++<<<<<<< HEAD
 +ftrace_print_hex_seq(struct trace_seq *p, const unsigned char *buf, int buf_len)
++=======
+ trace_print_bitmask_seq(struct trace_seq *p, void *bitmask_ptr,
+ 			unsigned int bitmask_size)
+ {
+ 	const char *ret = trace_seq_buffer_ptr(p);
+ 
+ 	trace_seq_bitmask(p, bitmask_ptr, bitmask_size * 8);
+ 	trace_seq_putc(p, 0);
+ 
+ 	return ret;
+ }
+ EXPORT_SYMBOL_GPL(trace_print_bitmask_seq);
+ 
+ const char *
+ trace_print_hex_seq(struct trace_seq *p, const unsigned char *buf, int buf_len,
+ 		    bool spacing)
++>>>>>>> 2acae0d5b0f7 (trace: add variant without spacing in trace_print_hex_seq)
  {
  	int i;
  	const char *ret = trace_seq_buffer_ptr(p);
* Unmerged path include/linux/ftrace_event.h
* Unmerged path include/trace/ftrace.h
* Unmerged path kernel/trace/trace_output.c
