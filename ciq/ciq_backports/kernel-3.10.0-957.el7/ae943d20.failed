blk-mq: Avoid that blk_mq_delay_run_hw_queue() introduces unintended delays

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Bart Van Assche <bart.vanassche@wdc.com>
commit ae943d20624de0a6aac7dd0597616dce2c498029
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ae943d20.failed

Make sure that calling blk_mq_run_hw_queue() or
blk_mq_kick_requeue_list() triggers a queue run without delay even
if blk_mq_delay_run_hw_queue() has been called recently and if its
delay has not yet expired.

	Reviewed-by: Mike Snitzer <snitzer@redhat.com>
	Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit ae943d20624de0a6aac7dd0597616dce2c498029)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 1eaa154c3ecb,43e7449723e0..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -1210,8 -1401,8 +1210,13 @@@ static void __blk_mq_delay_run_hw_queue
  		put_cpu();
  	}
  
++<<<<<<< HEAD
 +	kblockd_schedule_delayed_work_on(blk_mq_hctx_next_cpu(hctx),
 +			&hctx->run_work, msecs);
++=======
+ 	kblockd_mod_delayed_work_on(blk_mq_hctx_next_cpu(hctx), &hctx->run_work,
+ 				    msecs_to_jiffies(msecs));
++>>>>>>> ae943d20624d (blk-mq: Avoid that blk_mq_delay_run_hw_queue() introduces unintended delays)
  }
  
  void blk_mq_delay_run_hw_queue(struct blk_mq_hw_ctx *hctx, unsigned long msecs)
* Unmerged path block/blk-mq.c
