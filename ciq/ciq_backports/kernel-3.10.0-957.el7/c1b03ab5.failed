iio: core: Fix double free.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [iio] core: Fix double free (Tony Camuso) [1559170]
Rebuild_FUZZ: 87.50%
commit-author Martin Fuzzey <mfuzzey@parkeon.com>
commit c1b03ab5e886760bdd38c9c7a27af149046ffe01
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/c1b03ab5.failed

When an error occurred during event registration memory was freed twice
resulting in kernel memory corruption and a crash in unrelated code.

The problem was caused by
	iio_device_unregister_eventset()
	iio_device_unregister_sysfs()

being called twice, once on the error path and then
again via iio_dev_release().

Fix this by making these two functions idempotent so they
may be called multiple times.

The problem was observed before applying
	78b33216 iio:core: Handle error when mask type is not separate

	Signed-off-by: Martin Fuzzey <mfuzzey@parkeon.com>
	Cc: <Stable@vger.kernel.org>
	Signed-off-by: Jonathan Cameron <jic23@kernel.org>
(cherry picked from commit c1b03ab5e886760bdd38c9c7a27af149046ffe01)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iio/industrialio-event.c
diff --cc drivers/iio/industrialio-event.c
index e2b5f552eb77,a99692ba91bc..000000000000
--- a/drivers/iio/industrialio-event.c
+++ b/drivers/iio/industrialio-event.c
@@@ -589,8 -500,7 +589,12 @@@ int iio_device_register_eventset(struc
  error_free_setup_event_lines:
  	iio_free_chan_devattr_list(&indio_dev->event_interface->dev_attr_list);
  	kfree(indio_dev->event_interface);
++<<<<<<< HEAD
 +error_ret:
 +
++=======
+ 	indio_dev->event_interface = NULL;
++>>>>>>> c1b03ab5e886 (iio: core: Fix double free.)
  	return ret;
  }
  
diff --git a/drivers/iio/industrialio-core.c b/drivers/iio/industrialio-core.c
index 31af79e1e872..8c0584c3171d 100644
--- a/drivers/iio/industrialio-core.c
+++ b/drivers/iio/industrialio-core.c
@@ -782,8 +782,7 @@ error_ret:
  * @attr_list: List of IIO device attributes
  *
  * This function frees the memory allocated for each of the IIO device
- * attributes in the list. Note: if you want to reuse the list after calling
- * this function you have to reinitialize it using INIT_LIST_HEAD().
+ * attributes in the list.
  */
 void iio_free_chan_devattr_list(struct list_head *attr_list)
 {
@@ -791,6 +790,7 @@ void iio_free_chan_devattr_list(struct list_head *attr_list)
 
 	list_for_each_entry_safe(p, n, attr_list, l) {
 		kfree(p->dev_attr.attr.name);
+		list_del(&p->l);
 		kfree(p);
 	}
 }
@@ -871,6 +871,7 @@ static void iio_device_unregister_sysfs(struct iio_dev *indio_dev)
 
 	iio_free_chan_devattr_list(&indio_dev->channel_attr_list);
 	kfree(indio_dev->chan_attr_group.attrs);
+	indio_dev->chan_attr_group.attrs = NULL;
 }
 
 static void iio_dev_release(struct device *device)
* Unmerged path drivers/iio/industrialio-event.c
