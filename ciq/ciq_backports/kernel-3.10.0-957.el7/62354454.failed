USB: uas and storage: Add US_FL_BROKEN_FUA for another JMicron JMS567 ID

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [usb] uas and storage: Add US_FL_BROKEN_FUA for another JMicron JMS567 ID (Torez Smith) [1540721]
Rebuild_FUZZ: 96.40%
commit-author David Kozub <zub@linux.fjfi.cvut.cz>
commit 62354454625741f0569c2cbe45b2d192f8fd258e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/62354454.failed

There is another JMS567-based USB3 UAS enclosure (152d:0578) that fails
with the following error:

[sda] tag#0 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
[sda] tag#0 Sense Key : Illegal Request [current]
[sda] tag#0 Add. Sense: Invalid field in cdb

The issue occurs both with UAS (occasionally) and mass storage
(immediately after mounting a FS on a disk in the enclosure).

Enabling US_FL_BROKEN_FUA quirk solves this issue.

This patch adds an UNUSUAL_DEV with US_FL_BROKEN_FUA for the enclosure
for both UAS and mass storage.

	Signed-off-by: David Kozub <zub@linux.fjfi.cvut.cz>
	Acked-by: Alan Stern <stern@rowland.harvard.edu>
	Cc: stable <stable@vger.kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 62354454625741f0569c2cbe45b2d192f8fd258e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/storage/unusual_uas.h
diff --cc drivers/usb/storage/unusual_uas.h
index 6e50519c8b8c,e6127fb21c12..000000000000
--- a/drivers/usb/storage/unusual_uas.h
+++ b/drivers/usb/storage/unusual_uas.h
@@@ -149,6 -129,20 +149,23 @@@ UNUSUAL_DEV(0x152d, 0x0567, 0x0000, 0x9
  		USB_SC_DEVICE, USB_PR_DEVICE, NULL,
  		US_FL_BROKEN_FUA | US_FL_NO_REPORT_OPCODES),
  
++<<<<<<< HEAD
++=======
+ /* Reported-by: David Kozub <zub@linux.fjfi.cvut.cz> */
+ UNUSUAL_DEV(0x152d, 0x0578, 0x0000, 0x9999,
+ 		"JMicron",
+ 		"JMS567",
+ 		USB_SC_DEVICE, USB_PR_DEVICE, NULL,
+ 		US_FL_BROKEN_FUA),
+ 
+ /* Reported-by: Hans de Goede <hdegoede@redhat.com> */
+ UNUSUAL_DEV(0x2109, 0x0711, 0x0000, 0x9999,
+ 		"VIA",
+ 		"VL711",
+ 		USB_SC_DEVICE, USB_PR_DEVICE, NULL,
+ 		US_FL_NO_ATA_1X),
+ 
++>>>>>>> 623544546257 (USB: uas and storage: Add US_FL_BROKEN_FUA for another JMicron JMS567 ID)
  /* Reported-by: Takeo Nakayama <javhera@gmx.com> */
  UNUSUAL_DEV(0x357d, 0x7788, 0x0000, 0x9999,
  		"JMicron",
diff --git a/drivers/usb/storage/unusual_devs.h b/drivers/usb/storage/unusual_devs.h
index be038cd9b54e..a3ff5f3255bf 100644
--- a/drivers/usb/storage/unusual_devs.h
+++ b/drivers/usb/storage/unusual_devs.h
@@ -2113,6 +2113,13 @@ UNUSUAL_DEV(  0x152d, 0x0567, 0x0114, 0x0116,
 		USB_SC_DEVICE, USB_PR_DEVICE, NULL,
 		US_FL_BROKEN_FUA ),
 
+/* Reported by David Kozub <zub@linux.fjfi.cvut.cz> */
+UNUSUAL_DEV(0x152d, 0x0578, 0x0000, 0x9999,
+		"JMicron",
+		"JMS567",
+		USB_SC_DEVICE, USB_PR_DEVICE, NULL,
+		US_FL_BROKEN_FUA),
+
 /*
  * Reported by Alexandre Oliva <oliva@lsd.ic.unicamp.br>
  * JMicron responds to USN and several other SCSI ioctls with a
* Unmerged path drivers/usb/storage/unusual_uas.h
