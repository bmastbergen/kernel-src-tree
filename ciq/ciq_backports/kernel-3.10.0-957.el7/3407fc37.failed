scsi: qla2xxx: Use chip reset to bring down laser on unload.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Use chip reset to bring down laser on unload (Himanshu Madhani) [1547714]
Rebuild_FUZZ: 93.81%
commit-author Quinn Tran <quinn.tran@cavium.com>
commit 3407fc373d8ad794e94fc50b9c085f7451b502f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3407fc37.failed

Current code uses Stop Firmware MB cmd to stop the chip before
driver unload.  This will leave the laser in its current state.
This give the illusion of this adapter is still alive.
For 8G & newer adapters, use chip reset to stop the chip and
bring down the laser.

	Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 3407fc373d8ad794e94fc50b9c085f7451b502f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 75f3e94a56ff,987bade1c606..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -277,11 -292,10 +277,16 @@@ static int qla2xxx_eh_target_reset(stru
  static int qla2xxx_eh_bus_reset(struct scsi_cmnd *);
  static int qla2xxx_eh_host_reset(struct scsi_cmnd *);
  
 +static int qla2x00_change_queue_depth(struct scsi_device *, int, int);
 +static int qla2x00_change_queue_type(struct scsi_device *, int);
  static void qla2x00_clear_drv_active(struct qla_hw_data *);
  static void qla2x00_free_device(scsi_qla_host_t *);
++<<<<<<< HEAD
 +static void qla83xx_disable_laser(scsi_qla_host_t *vha);
++=======
+ static int qla2xxx_map_queues(struct Scsi_Host *shost);
+ static void qla2x00_destroy_deferred_work(struct qla_hw_data *);
++>>>>>>> 3407fc373d8a (scsi: qla2xxx: Use chip reset to bring down laser on unload.)
  
  struct scsi_host_template qla2xxx_driver_template = {
  	.module			= THIS_MODULE,
@@@ -6599,30 -6625,16 +6613,43 @@@ qla2xxx_pci_resume(struct pci_dev *pdev
  	ha->flags.eeh_busy = 0;
  }
  
++<<<<<<< HEAD
 +static void
 +qla83xx_disable_laser(scsi_qla_host_t *vha)
 +{
 +	uint32_t reg, data, fn;
 +	struct qla_hw_data *ha = vha->hw;
 +	struct device_reg_24xx __iomem *isp_reg = &ha->iobase->isp24;
 +
 +	/* pci func #/port # */
 +	ql_dbg(ql_dbg_init, vha, 0x004b,
 +	    "Disabling Laser for hba: %p\n", vha);
 +
 +	fn = (RD_REG_DWORD(&isp_reg->ctrl_status) &
 +		(BIT_15|BIT_14|BIT_13|BIT_12));
 +
 +	fn = (fn >> 12);
 +
 +	if (fn & 1)
 +		reg = PORT_1_2031;
 +	else
 +		reg = PORT_0_2031;
 +
 +	data = LASER_OFF_2031;
 +
 +	qla83xx_wr_reg(vha, reg, data);
++=======
+ static int qla2xxx_map_queues(struct Scsi_Host *shost)
+ {
+ 	int rc;
+ 	scsi_qla_host_t *vha = (scsi_qla_host_t *)shost->hostdata;
+ 
+ 	if (USER_CTRL_IRQ(vha->hw))
+ 		rc = blk_mq_map_queues(&shost->tag_set);
+ 	else
+ 		rc = blk_mq_pci_map_queues(&shost->tag_set, vha->hw->pdev);
+ 	return rc;
++>>>>>>> 3407fc373d8a (scsi: qla2xxx: Use chip reset to bring down laser on unload.)
  }
  
  static const struct pci_error_handlers qla2xxx_err_handler = {
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
