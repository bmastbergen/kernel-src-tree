e1000e: Set HTHRESH when PTHRESH is used

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Matt Turner <matt.turner@intel.com>
commit b701cacdbcfb65a5ba38d9d4121c12a0a4eaa01a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b701cacd.failed

According to section 12.0.3.4.13 "Receive Descriptor Control - RXDCTL"
of the IntelÂ® 82579 Gigabit Ethernet PHY Datasheet v2.1:

    "HTHRESH should be given a non zero value when ever PTHRESH is
     used."

In RXDCTL(0), PTHRESH lives at bits 5:0, and HTHREST lives at bits 13:8.
Set only bit 8 of HTHREST as is done in e1000_flush_rx_ring(). Found by
inspection.

	Signed-off-by: Matt Turner <matt.turner@intel.com>
	Tested-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit b701cacdbcfb65a5ba38d9d4121c12a0a4eaa01a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/e1000e/netdev.c
diff --cc drivers/net/ethernet/intel/e1000e/netdev.c
index f468f0dce132,5af93ce5acc6..000000000000
--- a/drivers/net/ethernet/intel/e1000e/netdev.c
+++ b/drivers/net/ethernet/intel/e1000e/netdev.c
@@@ -3281,7 -3302,8 +3281,12 @@@ static void e1000_configure_rx(struct e
  
  		if (adapter->flags & FLAG_IS_ICH) {
  			u32 rxdctl = er32(RXDCTL(0));
++<<<<<<< HEAD
 +			ew32(RXDCTL(0), rxdctl | 0x3);
++=======
+ 
+ 			ew32(RXDCTL(0), rxdctl | 0x3 | BIT(8));
++>>>>>>> b701cacdbcfb (e1000e: Set HTHRESH when PTHRESH is used)
  		}
  
  		pm_qos_update_request(&adapter->pm_qos_req, lat);
* Unmerged path drivers/net/ethernet/intel/e1000e/netdev.c
