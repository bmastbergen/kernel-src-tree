x86/microcode: Do not upload microcode if CPUs are offline

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] microcode: Do not upload microcode if CPUs are offline (Prarit Bhargava) [1568249]
Rebuild_FUZZ: 96.43%
commit-author Ashok Raj <ashok.raj@intel.com>
commit 30ec26da9967d0d785abc24073129a34c3211777
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/30ec26da.failed

Avoid loading microcode if any of the CPUs are offline, and issue a
warning. Having different microcode revisions on the system at any time
is outright dangerous.

[ Borislav: Massage changelog. ]

	Signed-off-by: Ashok Raj <ashok.raj@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Tom Lendacky <thomas.lendacky@amd.com>
	Tested-by: Ashok Raj <ashok.raj@intel.com>
	Reviewed-by: Tom Lendacky <thomas.lendacky@amd.com>
	Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
Link: http://lkml.kernel.org/r/1519352533-15992-4-git-send-email-ashok.raj@intel.com
Link: https://lkml.kernel.org/r/20180228102846.13447-5-bp@alien8.de

(cherry picked from commit 30ec26da9967d0d785abc24073129a34c3211777)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/microcode/core.c
diff --cc arch/x86/kernel/cpu/microcode/core.c
index 1b81185d9250,fa32cb3dcca5..000000000000
--- a/arch/x86/kernel/cpu/microcode/core.c
+++ b/arch/x86/kernel/cpu/microcode/core.c
@@@ -369,7 -486,17 +369,21 @@@ static void __exit microcode_dev_exit(v
  /* fake device for request_firmware */
  static struct platform_device	*microcode_pdev;
  
++<<<<<<< HEAD
 +static int reload_for_cpu(int cpu)
++=======
+ static int check_online_cpus(void)
+ {
+ 	if (num_online_cpus() == num_present_cpus())
+ 		return 0;
+ 
+ 	pr_err("Not all CPUs online, aborting microcode update.\n");
+ 
+ 	return -EINVAL;
+ }
+ 
+ static enum ucode_state reload_for_cpu(int cpu)
++>>>>>>> 30ec26da9967 (x86/microcode: Do not upload microcode if CPUs are offline)
  {
  	struct ucode_cpu_info *uci = ucode_cpu_info + cpu;
  	enum ucode_state ustate;
@@@ -403,21 -529,33 +417,29 @@@ static ssize_t reload_store(struct devi
  		return size;
  
  	get_online_cpus();
+ 
+ 	ret = check_online_cpus();
+ 	if (ret)
+ 		goto put;
+ 
  	mutex_lock(&microcode_mutex);
+ 
  	for_each_online_cpu(cpu) {
  		tmp_ret = reload_for_cpu(cpu);
 -		if (tmp_ret > UCODE_NFOUND) {
 +		if (tmp_ret != 0)
  			pr_warn("Error reloading microcode on CPU %d\n", cpu);
  
 -			/* set retval for the first encountered reload error */
 -			if (!ret)
 -				ret = -EINVAL;
 -		}
 -
 -		if (tmp_ret == UCODE_UPDATED)
 -			do_callback = true;
 +		/* save retval of the first encountered reload error */
 +		if (!ret)
 +			ret = tmp_ret;
 +	}
 +	if (!ret) {
 +		perf_check_microcode();
 +		spec_ctrl_rescan_cpuid();
  	}
 -
 -	if (!ret && do_callback)
 -		microcode_check();
 -
  	mutex_unlock(&microcode_mutex);
+ 
+ put:
  	put_online_cpus();
  
  	if (!ret)
* Unmerged path arch/x86/kernel/cpu/microcode/core.c
