bpf: split HAVE_BPF_JIT into cBPF and eBPF variant

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit 6077776b5908e0493a3946f7d3bc63871b201e87
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6077776b.failed

Split the HAVE_BPF_JIT into two for distinguishing cBPF and eBPF JITs.

Current cBPF ones:

  # git grep -n HAVE_CBPF_JIT arch/
  arch/arm/Kconfig:44:    select HAVE_CBPF_JIT
  arch/mips/Kconfig:18:   select HAVE_CBPF_JIT if !CPU_MICROMIPS
  arch/powerpc/Kconfig:129:       select HAVE_CBPF_JIT
  arch/sparc/Kconfig:35:  select HAVE_CBPF_JIT

Current eBPF ones:

  # git grep -n HAVE_EBPF_JIT arch/
  arch/arm64/Kconfig:61:  select HAVE_EBPF_JIT
  arch/s390/Kconfig:126:  select HAVE_EBPF_JIT if PACK_STACK && HAVE_MARCH_Z196_FEATURES
  arch/x86/Kconfig:94:    select HAVE_EBPF_JIT                    if X86_64

Later code also needs this facility to check for eBPF JITs.

	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6077776b5908e0493a3946f7d3bc63871b201e87)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm/Kconfig
#	arch/arm64/Kconfig
#	arch/mips/Kconfig
#	arch/powerpc/Kconfig
#	arch/s390/Kconfig
#	arch/x86/Kconfig
diff --cc arch/arm/Kconfig
index d1387fc4470a,2315b0d1b4f4..000000000000
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@@ -1,36 -1,55 +1,43 @@@
  config ARM
  	bool
  	default y
 +	select ARCH_BINFMT_ELF_RANDOMIZE_PIE
  	select ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE
 -	select ARCH_HAS_DEVMEM_IS_ALLOWED
 -	select ARCH_HAS_ELF_RANDOMIZE
 -	select ARCH_HAS_TICK_BROADCAST if GENERIC_CLOCKEVENTS_BROADCAST
  	select ARCH_HAVE_CUSTOM_GPIO_H
 -	select ARCH_HAS_GCOV_PROFILE_ALL
 -	select ARCH_MIGHT_HAVE_PC_PARPORT
 -	select ARCH_SUPPORTS_ATOMIC_RMW
 -	select ARCH_USE_BUILTIN_BSWAP
 -	select ARCH_USE_CMPXCHG_LOCKREF
 +	select ARCH_HAS_TICK_BROADCAST if GENERIC_CLOCKEVENTS_BROADCAST
  	select ARCH_WANT_IPC_PARSE_VERSION
  	select BUILDTIME_EXTABLE_SORT if MMU
 -	select CLONE_BACKWARDS
  	select CPU_PM if (SUSPEND || CPU_IDLE)
 -	select DCACHE_WORD_ACCESS if HAVE_EFFICIENT_UNALIGNED_ACCESS
 -	select EDAC_SUPPORT
 -	select EDAC_ATOMIC_SCRUB
 -	select GENERIC_ALLOCATOR
 -	select GENERIC_ATOMIC64 if (CPU_V7M || CPU_V6 || !CPU_32v6K || !AEABI)
 +	select DCACHE_WORD_ACCESS if (CPU_V6 || CPU_V6K || CPU_V7) && !CPU_BIG_ENDIAN && MMU
 +	select GENERIC_ATOMIC64 if (CPU_V6 || !CPU_32v6K || !AEABI)
  	select GENERIC_CLOCKEVENTS_BROADCAST if SMP
 -	select GENERIC_EARLY_IOREMAP
 -	select GENERIC_IDLE_POLL_SETUP
  	select GENERIC_IRQ_PROBE
  	select GENERIC_IRQ_SHOW
 -	select GENERIC_IRQ_SHOW_LEVEL
  	select GENERIC_PCI_IOMAP
 -	select GENERIC_SCHED_CLOCK
  	select GENERIC_SMP_IDLE_THREAD
 +	select GENERIC_IDLE_POLL_SETUP
  	select GENERIC_STRNCPY_FROM_USER
  	select GENERIC_STRNLEN_USER
 -	select HANDLE_DOMAIN_IRQ
  	select HARDIRQS_SW_RESEND
 -	select HAVE_ARCH_AUDITSYSCALL if (AEABI && !OABI_COMPAT)
 -	select HAVE_ARCH_BITREVERSE if (CPU_32v7M || CPU_32v7) && !CPU_32v6
 -	select HAVE_ARCH_JUMP_LABEL if !XIP_KERNEL && !CPU_ENDIAN_BE32 && MMU
 -	select HAVE_ARCH_KGDB if !CPU_ENDIAN_BE32 && MMU
 -	select HAVE_ARCH_MMAP_RND_BITS if MMU
 -	select HAVE_ARCH_SECCOMP_FILTER if (AEABI && !OABI_COMPAT)
 +	select HAVE_ARCH_JUMP_LABEL if !XIP_KERNEL
 +	select HAVE_ARCH_KGDB
 +	select HAVE_ARCH_SECCOMP_FILTER
  	select HAVE_ARCH_TRACEHOOK
++<<<<<<< HEAD
 +	select HAVE_BPF_JIT
++=======
+ 	select HAVE_ARM_SMCCC if CPU_V7
+ 	select HAVE_CBPF_JIT
+ 	select HAVE_CC_STACKPROTECTOR
+ 	select HAVE_CONTEXT_TRACKING
++>>>>>>> 6077776b5908 (bpf: split HAVE_BPF_JIT into cBPF and eBPF variant)
  	select HAVE_C_RECORDMCOUNT
 +	select HAVE_CC_STACKPROTECTOR
  	select HAVE_DEBUG_KMEMLEAK
  	select HAVE_DMA_API_DEBUG
 +	select HAVE_DMA_ATTRS
  	select HAVE_DMA_CONTIGUOUS if MMU
 -	select HAVE_DYNAMIC_FTRACE if (!XIP_KERNEL) && !CPU_ENDIAN_BE32 && MMU
 -	select HAVE_EFFICIENT_UNALIGNED_ACCESS if (CPU_V6 || CPU_V6K || CPU_V7) && MMU
 +	select HAVE_DYNAMIC_FTRACE if (!XIP_KERNEL)
  	select HAVE_FTRACE_MCOUNT_RECORD if (!XIP_KERNEL)
  	select HAVE_FUNCTION_GRAPH_TRACER if (!THUMB2_KERNEL)
  	select HAVE_FUNCTION_TRACER if (!XIP_KERNEL)
diff --cc arch/arm64/Kconfig
index 56b3f6d447ae,e6761ea2feec..000000000000
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@@ -7,16 -17,52 +7,24 @@@ config ARM6
  	select ARM_AMBA
  	select ARM_ARCH_TIMER
  	select ARM_GIC
 -	select AUDIT_ARCH_COMPAT_GENERIC
 -	select ARM_GIC_V2M if PCI_MSI
 -	select ARM_GIC_V3
 -	select ARM_GIC_V3_ITS if PCI_MSI
 -	select ARM_PSCI_FW
 -	select BUILDTIME_EXTABLE_SORT
  	select CLONE_BACKWARDS
  	select COMMON_CLK
 -	select CPU_PM if (SUSPEND || CPU_IDLE)
 -	select DCACHE_WORD_ACCESS
 -	select EDAC_SUPPORT
 -	select FRAME_POINTER
 -	select GENERIC_ALLOCATOR
  	select GENERIC_CLOCKEVENTS
 -	select GENERIC_CLOCKEVENTS_BROADCAST
 -	select GENERIC_CPU_AUTOPROBE
 -	select GENERIC_EARLY_IOREMAP
 -	select GENERIC_IDLE_POLL_SETUP
 +	select GENERIC_IOMAP
  	select GENERIC_IRQ_PROBE
  	select GENERIC_IRQ_SHOW
 -	select GENERIC_IRQ_SHOW_LEVEL
 -	select GENERIC_PCI_IOMAP
 -	select GENERIC_SCHED_CLOCK
  	select GENERIC_SMP_IDLE_THREAD
 -	select GENERIC_STRNCPY_FROM_USER
 -	select GENERIC_STRNLEN_USER
  	select GENERIC_TIME_VSYSCALL
 -	select HANDLE_DOMAIN_IRQ
  	select HARDIRQS_SW_RESEND
 -	select HAVE_ALIGNED_STRUCT_PAGE if SLUB
 -	select HAVE_ARCH_AUDITSYSCALL
 -	select HAVE_ARCH_BITREVERSE
 -	select HAVE_ARCH_HUGE_VMAP
 -	select HAVE_ARCH_JUMP_LABEL
 -	select HAVE_ARCH_KASAN if SPARSEMEM_VMEMMAP && !(ARM64_16K_PAGES && ARM64_VA_BITS_48)
 -	select HAVE_ARCH_KGDB
 -	select HAVE_ARCH_MMAP_RND_BITS
 -	select HAVE_ARCH_MMAP_RND_COMPAT_BITS if COMPAT
 -	select HAVE_ARCH_SECCOMP_FILTER
  	select HAVE_ARCH_TRACEHOOK
++<<<<<<< HEAD
++=======
+ 	select HAVE_EBPF_JIT
+ 	select HAVE_C_RECORDMCOUNT
+ 	select HAVE_CC_STACKPROTECTOR
+ 	select HAVE_CMPXCHG_DOUBLE
+ 	select HAVE_CMPXCHG_LOCAL
++>>>>>>> 6077776b5908 (bpf: split HAVE_BPF_JIT into cBPF and eBPF variant)
  	select HAVE_DEBUG_BUGVERBOSE
  	select HAVE_DEBUG_KMEMLEAK
  	select HAVE_DMA_API_DEBUG
diff --cc arch/mips/Kconfig
index b4969202c59f,3ee1ea61b2dc..000000000000
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@@ -7,9 -13,10 +7,15 @@@ config MIP
  	select HAVE_PERF_EVENTS
  	select PERF_USE_VMALLOC
  	select HAVE_ARCH_KGDB
++<<<<<<< HEAD
 +	select ARCH_HAVE_CUSTOM_GPIO_H
++=======
+ 	select HAVE_ARCH_SECCOMP_FILTER
+ 	select HAVE_ARCH_TRACEHOOK
+ 	select HAVE_CBPF_JIT if !CPU_MICROMIPS
++>>>>>>> 6077776b5908 (bpf: split HAVE_BPF_JIT into cBPF and eBPF variant)
  	select HAVE_FUNCTION_TRACER
 +	select HAVE_FUNCTION_TRACE_MCOUNT_TEST
  	select HAVE_DYNAMIC_FTRACE
  	select HAVE_FTRACE_MCOUNT_RECORD
  	select HAVE_C_RECORDMCOUNT
diff --cc arch/powerpc/Kconfig
index 32232f9bee79,2fdb73d9198a..000000000000
--- a/arch/powerpc/Kconfig
+++ b/arch/powerpc/Kconfig
@@@ -169,9 -126,10 +169,13 @@@ config PP
  	select IRQ_FORCED_THREADING
  	select HAVE_RCU_TABLE_FREE if SMP
  	select HAVE_SYSCALL_TRACEPOINTS
++<<<<<<< HEAD
 +	select HAVE_BPF_JIT if (PPC64 && CPU_BIG_ENDIAN)
++=======
+ 	select HAVE_CBPF_JIT
++>>>>>>> 6077776b5908 (bpf: split HAVE_BPF_JIT into cBPF and eBPF variant)
  	select HAVE_ARCH_JUMP_LABEL
  	select ARCH_HAVE_NMI_SAFE_CMPXCHG
 -	select ARCH_HAS_GCOV_PROFILE_ALL
  	select GENERIC_SMP_IDLE_THREAD
  	select GENERIC_CMOS_UPDATE
  	select GENERIC_TIME_VSYSCALL_OLD
diff --cc arch/s390/Kconfig
index 6d4676098bd9,a883981c0174..000000000000
--- a/arch/s390/Kconfig
+++ b/arch/s390/Kconfig
@@@ -108,14 -118,17 +108,19 @@@ config S39
  	select GENERIC_SMP_IDLE_THREAD
  	select GENERIC_TIME_VSYSCALL
  	select HAVE_ALIGNED_STRUCT_PAGE if SLUB
 -	select HAVE_ARCH_AUDITSYSCALL
 -	select HAVE_ARCH_EARLY_PFN_TO_NID
 -	select HAVE_ARCH_JUMP_LABEL
 +	select HAVE_ARCH_JUMP_LABEL if !MARCH_G5
  	select HAVE_ARCH_SECCOMP_FILTER
 -	select HAVE_ARCH_SOFT_DIRTY
  	select HAVE_ARCH_TRACEHOOK
++<<<<<<< HEAD
 +	select HAVE_ARCH_TRANSPARENT_HUGEPAGE if 64BIT
 +	select HAVE_BPF_JIT if 64BIT && PACK_STACK
++=======
+ 	select HAVE_ARCH_TRANSPARENT_HUGEPAGE
+ 	select HAVE_EBPF_JIT if PACK_STACK && HAVE_MARCH_Z196_FEATURES
++>>>>>>> 6077776b5908 (bpf: split HAVE_BPF_JIT into cBPF and eBPF variant)
  	select HAVE_CMPXCHG_DOUBLE
  	select HAVE_CMPXCHG_LOCAL
 +	select HAVE_C_RECORDMCOUNT
  	select HAVE_DEBUG_KMEMLEAK
  	select HAVE_DMA_API_DEBUG
  	select HAVE_DYNAMIC_FTRACE
diff --cc arch/x86/Kconfig
index 48ae09959d87,ae83046d51a8..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -22,59 -17,123 +22,143 @@@ config X86_6
  ### Arch settings
  config X86
  	def_bool y
 -	select ACPI_LEGACY_TABLES_LOOKUP	if ACPI
 -	select ACPI_SYSTEM_POWER_STATES_SUPPORT	if ACPI
 -	select ANON_INODES
 -	select ARCH_CLOCKSOURCE_DATA
 -	select ARCH_DISCARD_MEMBLOCK
 -	select ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE
  	select ARCH_HAS_DEBUG_STRICT_USER_COPY_CHECKS
 -	select ARCH_HAS_DEVMEM_IS_ALLOWED
 -	select ARCH_HAS_ELF_RANDOMIZE
 -	select ARCH_HAS_FAST_MULTIPLIER
 -	select ARCH_HAS_GCOV_PROFILE_ALL
 -	select ARCH_HAS_KCOV			if X86_64
  	select ARCH_HAS_PMEM_API		if X86_64
 +	select ARCH_HAS_UACCESS_FLUSHCACHE	if X86_64
  	select ARCH_HAS_MMIO_FLUSH
++<<<<<<< HEAD
 +	select HAVE_AOUT if X86_32
 +	select HAVE_UNSTABLE_SCHED_CLOCK
 +	select ARCH_SUPPORTS_NUMA_BALANCING
 +	select ARCH_SUPPORTS_INT128 if X86_64
 +	select ARCH_WANTS_PROT_NUMA_PROT_NONE
++=======
+ 	select ARCH_HAS_SG_CHAIN
+ 	select ARCH_HAS_UBSAN_SANITIZE_ALL
+ 	select ARCH_HAVE_NMI_SAFE_CMPXCHG
+ 	select ARCH_MIGHT_HAVE_ACPI_PDC		if ACPI
+ 	select ARCH_MIGHT_HAVE_PC_PARPORT
+ 	select ARCH_MIGHT_HAVE_PC_SERIO
+ 	select ARCH_SUPPORTS_ATOMIC_RMW
+ 	select ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT
+ 	select ARCH_SUPPORTS_INT128		if X86_64
+ 	select ARCH_SUPPORTS_NUMA_BALANCING	if X86_64
+ 	select ARCH_USE_BUILTIN_BSWAP
+ 	select ARCH_USE_CMPXCHG_LOCKREF		if X86_64
+ 	select ARCH_USE_QUEUED_RWLOCKS
+ 	select ARCH_USE_QUEUED_SPINLOCKS
+ 	select ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH if SMP
+ 	select ARCH_WANTS_DYNAMIC_TASK_STRUCT
+ 	select ARCH_WANT_FRAME_POINTERS
+ 	select ARCH_WANT_IPC_PARSE_VERSION	if X86_32
+ 	select ARCH_WANT_OPTIONAL_GPIOLIB
+ 	select BUILDTIME_EXTABLE_SORT
+ 	select CLKEVT_I8253
+ 	select CLKSRC_I8253			if X86_32
+ 	select CLOCKSOURCE_VALIDATE_LAST_CYCLE
+ 	select CLOCKSOURCE_WATCHDOG
+ 	select CLONE_BACKWARDS			if X86_32
+ 	select COMPAT_OLD_SIGACTION		if IA32_EMULATION
+ 	select DCACHE_WORD_ACCESS
+ 	select EDAC_ATOMIC_SCRUB
+ 	select EDAC_SUPPORT
+ 	select GENERIC_CLOCKEVENTS
+ 	select GENERIC_CLOCKEVENTS_BROADCAST	if X86_64 || (X86_32 && X86_LOCAL_APIC)
+ 	select GENERIC_CLOCKEVENTS_MIN_ADJUST
+ 	select GENERIC_CMOS_UPDATE
+ 	select GENERIC_CPU_AUTOPROBE
+ 	select GENERIC_EARLY_IOREMAP
+ 	select GENERIC_FIND_FIRST_BIT
+ 	select GENERIC_IOMAP
+ 	select GENERIC_IRQ_PROBE
+ 	select GENERIC_IRQ_SHOW
+ 	select GENERIC_PENDING_IRQ		if SMP
+ 	select GENERIC_SMP_IDLE_THREAD
+ 	select GENERIC_STRNCPY_FROM_USER
+ 	select GENERIC_STRNLEN_USER
+ 	select GENERIC_TIME_VSYSCALL
+ 	select HAVE_ACPI_APEI			if ACPI
+ 	select HAVE_ACPI_APEI_NMI		if ACPI
+ 	select HAVE_ALIGNED_STRUCT_PAGE		if SLUB
+ 	select HAVE_AOUT			if X86_32
+ 	select HAVE_ARCH_AUDITSYSCALL
+ 	select HAVE_ARCH_HUGE_VMAP		if X86_64 || X86_PAE
+ 	select HAVE_ARCH_JUMP_LABEL
+ 	select HAVE_ARCH_KASAN			if X86_64 && SPARSEMEM_VMEMMAP
+ 	select HAVE_ARCH_KGDB
+ 	select HAVE_ARCH_KMEMCHECK
+ 	select HAVE_ARCH_MMAP_RND_BITS		if MMU
+ 	select HAVE_ARCH_MMAP_RND_COMPAT_BITS	if MMU && COMPAT
+ 	select HAVE_ARCH_SECCOMP_FILTER
+ 	select HAVE_ARCH_SOFT_DIRTY		if X86_64
+ 	select HAVE_ARCH_TRACEHOOK
+ 	select HAVE_ARCH_TRANSPARENT_HUGEPAGE
+ 	select HAVE_EBPF_JIT			if X86_64
+ 	select HAVE_CC_STACKPROTECTOR
+ 	select HAVE_CMPXCHG_DOUBLE
+ 	select HAVE_CMPXCHG_LOCAL
+ 	select HAVE_CONTEXT_TRACKING		if X86_64
+ 	select HAVE_COPY_THREAD_TLS
+ 	select HAVE_C_RECORDMCOUNT
+ 	select HAVE_DEBUG_KMEMLEAK
+ 	select HAVE_DEBUG_STACKOVERFLOW
+ 	select HAVE_DMA_API_DEBUG
+ 	select HAVE_DMA_CONTIGUOUS
+ 	select HAVE_DYNAMIC_FTRACE
+ 	select HAVE_DYNAMIC_FTRACE_WITH_REGS
+ 	select HAVE_EFFICIENT_UNALIGNED_ACCESS
+ 	select HAVE_FENTRY			if X86_64
+ 	select HAVE_FTRACE_MCOUNT_RECORD
+ 	select HAVE_FUNCTION_GRAPH_FP_TEST
+ 	select HAVE_FUNCTION_GRAPH_TRACER
+ 	select HAVE_FUNCTION_TRACER
+ 	select HAVE_GENERIC_DMA_COHERENT	if X86_32
+ 	select HAVE_HW_BREAKPOINT
++>>>>>>> 6077776b5908 (bpf: split HAVE_BPF_JIT into cBPF and eBPF variant)
  	select HAVE_IDE
 +	select HAVE_OPROFILE
 +	select HAVE_PCSPKR_PLATFORM
 +	select HAVE_PERF_EVENTS
  	select HAVE_IOREMAP_PROT
 -	select HAVE_IRQ_EXIT_ON_IRQ_STACK	if X86_64
 -	select HAVE_IRQ_TIME_ACCOUNTING
 -	select HAVE_KERNEL_BZIP2
 -	select HAVE_KERNEL_GZIP
 -	select HAVE_KERNEL_LZ4
 -	select HAVE_KERNEL_LZMA
 -	select HAVE_KERNEL_LZO
 -	select HAVE_KERNEL_XZ
  	select HAVE_KPROBES
 -	select HAVE_KPROBES_ON_FTRACE
 -	select HAVE_KRETPROBES
 -	select HAVE_KVM
 -	select HAVE_LIVEPATCH			if X86_64
  	select HAVE_MEMBLOCK
  	select HAVE_MEMBLOCK_NODE_MAP
 -	select HAVE_MIXED_BREAKPOINTS_REGS
 -	select HAVE_OPROFILE
 +	select ARCH_DISCARD_MEMBLOCK
 +	select ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT
 +	select ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH if SMP
 +	select ARCH_WANT_OPTIONAL_GPIOLIB
 +	select ARCH_WANT_FRAME_POINTERS
 +	select HAVE_DMA_CONTIGUOUS if !SWIOTLB
 +	select HAVE_KRETPROBES
  	select HAVE_OPTPROBES
 -	select HAVE_PCSPKR_PLATFORM
 -	select HAVE_PERF_EVENTS
 +	select HAVE_KPROBES_ON_FTRACE
 +	select HAVE_FTRACE_MCOUNT_RECORD
 +	select HAVE_FENTRY if X86_64
 +	select HAVE_ARCH_MMAP_RND_BITS		if MMU
 +	select HAVE_ARCH_MMAP_RND_COMPAT_BITS	if MMU && COMPAT
 +	select HAVE_C_RECORDMCOUNT
 +	select HAVE_DYNAMIC_FTRACE
 +	select HAVE_DYNAMIC_FTRACE_WITH_REGS
 +	select HAVE_FUNCTION_TRACER
 +	select HAVE_FUNCTION_GRAPH_TRACER
 +	select HAVE_SYSCALL_TRACEPOINTS
 +	select SYSCTL_EXCEPTION_TRACE
 +	select HAVE_KVM
 +	select HAVE_ARCH_KGDB
 +	select HAVE_ARCH_TRACEHOOK
 +	select HAVE_GENERIC_DMA_COHERENT if X86_32
 +	select HAVE_EFFICIENT_UNALIGNED_ACCESS
 +	select USER_STACKTRACE_SUPPORT
 +	select HAVE_REGS_AND_STACK_ACCESS_API
 +	select HAVE_DMA_API_DEBUG
 +	select HAVE_KERNEL_GZIP
 +	select HAVE_KERNEL_BZIP2
 +	select HAVE_KERNEL_LZMA
 +	select HAVE_KERNEL_XZ
 +	select HAVE_KERNEL_LZO
 +	select HAVE_HW_BREAKPOINT
 +	select HAVE_MIXED_BREAKPOINTS_REGS
 +	select PERF_EVENTS
  	select HAVE_PERF_EVENTS_NMI
  	select HAVE_PERF_REGS
  	select HAVE_PERF_USER_STACK_DUMP
* Unmerged path arch/arm/Kconfig
* Unmerged path arch/arm64/Kconfig
* Unmerged path arch/mips/Kconfig
* Unmerged path arch/powerpc/Kconfig
* Unmerged path arch/s390/Kconfig
diff --git a/arch/sparc/Kconfig b/arch/sparc/Kconfig
index 82bf6d789310..28dcb9ff1fe6 100644
--- a/arch/sparc/Kconfig
+++ b/arch/sparc/Kconfig
@@ -32,7 +32,7 @@ config SPARC
 	select USE_GENERIC_SMP_HELPERS if SMP
 	select GENERIC_PCI_IOMAP
 	select HAVE_NMI_WATCHDOG if SPARC64
-	select HAVE_BPF_JIT
+	select HAVE_CBPF_JIT
 	select HAVE_DEBUG_BUGVERBOSE
 	select GENERIC_SMP_IDLE_THREAD
 	select GENERIC_CMOS_UPDATE
* Unmerged path arch/x86/Kconfig
diff --git a/net/Kconfig b/net/Kconfig
index 6019eecc5f21..0c8a1600d950 100644
--- a/net/Kconfig
+++ b/net/Kconfig
@@ -264,7 +264,7 @@ config BQL
 
 config BPF_JIT
 	bool "enable BPF Just In Time compiler"
-	depends on HAVE_BPF_JIT
+	depends on HAVE_CBPF_JIT || HAVE_EBPF_JIT
 	depends on MODULES
 	---help---
 	  Berkeley Packet Filter filtering capabilities are normally handled
@@ -383,6 +383,14 @@ config MAY_USE_DEVLINK
 
 endif   # if NET
 
-# Used by archs to tell that they support BPF_JIT
-config HAVE_BPF_JIT
+# Used by archs to tell that they support BPF JIT compiler plus which flavour.
+# Only one of the two can be selected for a specific arch since eBPF JIT supersedes
+# the cBPF JIT.
+
+# Classic BPF JIT (cBPF)
+config HAVE_CBPF_JIT
+	bool
+
+# Extended BPF JIT (eBPF)
+config HAVE_EBPF_JIT
 	bool
