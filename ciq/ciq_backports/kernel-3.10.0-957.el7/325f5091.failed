perf trace: Ditch __syscall__arg_val() variant, not needed anymore

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 325f5091b0da5a7d8d190262661af17d75bee262
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/325f5091.failed

All callers now can use syscall__arg_val(arg, idx), be it to iterate
thru the syscall arguments while taking into account alignment, or to
get values for other arguments that affect how the current argument
should be formatted (think of fcntl's 'cmd' and 'arg' arguments).

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-wm5b156d8kro1r4y3b33eyta@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 325f5091b0da5a7d8d190262661af17d75bee262)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
diff --cc tools/perf/builtin-trace.c
index 5114abbd2e32,f8b7bfdf4ee7..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -1373,9 -1345,16 +1373,22 @@@ unsigned long syscall_arg__val(struct s
  	return val;
  }
  
++<<<<<<< HEAD
 +unsigned long syscall_arg__val(struct syscall_arg *arg, u8 idx)
 +{
 +	return __syscall_arg__val(arg->args, idx);
++=======
+ static size_t syscall__scnprintf_val(struct syscall *sc, char *bf, size_t size,
+ 				     struct syscall_arg *arg, unsigned long val)
+ {
+ 	if (sc->arg_fmt && sc->arg_fmt[arg->idx].scnprintf) {
+ 		arg->val = val;
+ 		if (sc->arg_fmt[arg->idx].parm)
+ 			arg->parm = sc->arg_fmt[arg->idx].parm;
+ 		return sc->arg_fmt[arg->idx].scnprintf(bf, size, arg);
+ 	}
+ 	return scnprintf(bf, size, "%ld", val);
++>>>>>>> 325f5091b0da (perf trace: Ditch __syscall__arg_val() variant, not needed anymore)
  }
  
  static size_t syscall__scnprintf_args(struct syscall *sc, char *bf, size_t size,
* Unmerged path tools/perf/builtin-trace.c
