perf evlist: Remove 'overwrite' parameter from perf_evlist__mmap_ex

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit 7a276ff6c3202697c3c15cad757dec3bb07d14bf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/7a276ff6.failed

All users of perf_evlist__mmap_ex set !overwrite. Remove it from its
arguments list.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Acked-by: Namhyung Kim <namhyung@kernel.org>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Kan Liang <kan.liang@intel.com>
Link: http://lkml.kernel.org/r/20171203020044.81680-3-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 7a276ff6c3202697c3c15cad757dec3bb07d14bf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evlist.c
diff --cc tools/perf/util/evlist.c
index 0abcf97f8546,93272d932407..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -1339,10 -1091,9 +1339,14 @@@ int perf_evlist__mmap_ex(struct perf_ev
  	return perf_evlist__mmap_per_cpu(evlist, &mp);
  }
  
 -int perf_evlist__mmap(struct perf_evlist *evlist, unsigned int pages)
 +int perf_evlist__mmap(struct perf_evlist *evlist, unsigned int pages,
 +		      bool overwrite)
  {
++<<<<<<< HEAD
 +	return perf_evlist__mmap_ex(evlist, pages, overwrite, 0, false);
++=======
+ 	return perf_evlist__mmap_ex(evlist, pages, 0, false);
++>>>>>>> 7a276ff6c320 (perf evlist: Remove 'overwrite' parameter from perf_evlist__mmap_ex)
  }
  
  int perf_evlist__create_maps(struct perf_evlist *evlist, struct target *target)
diff --git a/tools/perf/builtin-record.c b/tools/perf/builtin-record.c
index 6203082f0f85..f786490163fa 100644
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@ -398,7 +398,7 @@ static int record__mmap_evlist(struct record *rec,
 	struct record_opts *opts = &rec->opts;
 	char msg[512];
 
-	if (perf_evlist__mmap_ex(evlist, opts->mmap_pages, false,
+	if (perf_evlist__mmap_ex(evlist, opts->mmap_pages,
 				 opts->auxtrace_mmap_pages,
 				 opts->auxtrace_snapshot_mode) < 0) {
 		if (errno == EPERM) {
* Unmerged path tools/perf/util/evlist.c
diff --git a/tools/perf/util/evlist.h b/tools/perf/util/evlist.h
index 8cb6e907ffcd..ca5dba8fad2d 100644
--- a/tools/perf/util/evlist.h
+++ b/tools/perf/util/evlist.h
@@ -221,7 +221,7 @@ int perf_evlist__parse_mmap_pages(const struct option *opt,
 unsigned long perf_event_mlock_kb_in_pages(void);
 
 int perf_evlist__mmap_ex(struct perf_evlist *evlist, unsigned int pages,
-			 bool overwrite, unsigned int auxtrace_pages,
+			 unsigned int auxtrace_pages,
 			 bool auxtrace_overwrite);
 int perf_evlist__mmap(struct perf_evlist *evlist, unsigned int pages,
 		      bool overwrite);
