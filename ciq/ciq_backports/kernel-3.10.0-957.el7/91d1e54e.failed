x86/vmware: Add basic paravirt ops support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] vmware: Add basic paravirt ops support (Vitaly Kuznetsov) [1507027]
Rebuild_FUZZ: 95.00%
commit-author Alexey Makhalov <amakhalov@vmware.com>
commit 91d1e54ebd1615d216b7f57324a5e69166a344e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/91d1e54e.failed

Add basic paravirt support:

 1. Set pv_info.name to "VMware hypervisor" to have proper boot log message
	Booting paravirtualized kernel on VMware hypervisor
    instead of "... on bare hardware"

 2. Set pv_cpu_ops.io_delay() to empty function - paravirt_noop() to
    avoid vm-exits on IO delays because io delays they are not required.

	Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
	Acked-by: Alok N Kataria <akataria@vmware.com>
	Cc: linux-doc@vger.kernel.org
	Cc: pv-drivers@vmware.com
	Cc: corbet@lwn.net
	Cc: virtualization@lists.linux-foundation.org
Link: http://lkml.kernel.org/r/20161028075432.90579-3-amakhalov@vmware.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 91d1e54ebd1615d216b7f57324a5e69166a344e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/vmware.c
diff --cc arch/x86/kernel/cpu/vmware.c
index 66d19c4a4b0a,098a524a1646..000000000000
--- a/arch/x86/kernel/cpu/vmware.c
+++ b/arch/x86/kernel/cpu/vmware.c
@@@ -56,27 -58,19 +56,37 @@@ static inline int __vmware_platform(voi
  
  static unsigned long vmware_get_tsc_khz(void)
  {
 -	return vmware_tsc_khz;
 +	uint64_t tsc_hz, lpj;
 +	uint32_t eax, ebx, ecx, edx;
 +
 +	VMWARE_PORT(GETHZ, eax, ebx, ecx, edx);
 +
 +	tsc_hz = eax | (((uint64_t)ebx) << 32);
 +	do_div(tsc_hz, 1000);
 +	BUG_ON(tsc_hz >> 32);
 +	printk(KERN_INFO "TSC freq read from hypervisor : %lu.%03lu MHz\n",
 +			 (unsigned long) tsc_hz / 1000,
 +			 (unsigned long) tsc_hz % 1000);
 +
 +	if (!preset_lpj) {
 +		lpj = ((u64)tsc_hz * 1000);
 +		do_div(lpj, HZ);
 +		preset_lpj = lpj;
 +	}
 +
 +	return tsc_hz;
  }
  
+ #ifdef CONFIG_PARAVIRT
+ static void __init vmware_paravirt_ops_setup(void)
+ {
+ 	pv_info.name = "VMware hypervisor";
+ 	pv_cpu_ops.io_delay = paravirt_nop;
+ }
+ #else
+ #define vmware_paravirt_ops_setup() do {} while (0)
+ #endif
+ 
  static void __init vmware_platform_setup(void)
  {
  	uint32_t eax, ebx, ecx, edx;
@@@ -94,13 -102,10 +104,17 @@@
  			ecx);
  #endif
  	} else {
 -		pr_warn("Failed to get TSC freq from the hypervisor\n");
 +		printk(KERN_WARNING
 +		       "Failed to get TSC freq from the hypervisor\n");
  	}
  
++<<<<<<< HEAD
 +#ifdef CONFIG_X86_IO_APIC
 +	no_timer_check = 1;
 +#endif
++=======
+ 	vmware_paravirt_ops_setup();
++>>>>>>> 91d1e54ebd16 (x86/vmware: Add basic paravirt ops support)
  }
  
  /*
* Unmerged path arch/x86/kernel/cpu/vmware.c
