x86/CPU/AMD: Derive CPU topology from CPUID function 0xB when available

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] cpu/amd: Derive CPU topology from CPUID function 0xB when available (Suravee Suthikulpanit) [1543815]
Rebuild_FUZZ: 97.10%
commit-author Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
commit 3986a0a805e668a63fac0ca2cdfa8db951f87c4b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3986a0a8.failed

Derive topology information from Extended Topology Enumeration (CPUID
function 0xB) when the information is available.

	Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/1524865681-112110-3-git-send-email-suravee.suthikulpanit@amd.com

(cherry picked from commit 3986a0a805e668a63fac0ca2cdfa8db951f87c4b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/amd.c
diff --cc arch/x86/kernel/cpu/amd.c
index d354c50b9560,55361ee04cc5..000000000000
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@@ -322,7 -326,8 +322,12 @@@ static void amd_get_topology(struct cpu
  	int cpu = smp_processor_id();
  
  	/* get information required for multi-node processors */
++<<<<<<< HEAD
 +	if (cpu_has_topoext) {
++=======
+ 	if (boot_cpu_has(X86_FEATURE_TOPOEXT)) {
+ 		int err;
++>>>>>>> 3986a0a805e6 (x86/CPU/AMD: Derive CPU topology from CPUID function 0xB when available)
  		u32 eax, ebx, ecx, edx;
  
  		cpuid(0x8000001e, &eax, &ebx, &ecx, &edx);
@@@ -378,8 -387,6 +391,11 @@@ static void amd_detect_cmp(struct cpuin
  	c->phys_proc_id = c->initial_apicid >> bits;
  	/* use socket ID also for last level cache */
  	per_cpu(cpu_llc_id, cpu) = c->phys_proc_id;
++<<<<<<< HEAD
 +	amd_get_topology(c);
 +#endif
++=======
++>>>>>>> 3986a0a805e6 (x86/CPU/AMD: Derive CPU topology from CPUID function 0xB when available)
  }
  
  u16 amd_get_nb_id(int cpu)
* Unmerged path arch/x86/kernel/cpu/amd.c
