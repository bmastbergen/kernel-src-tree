typec: tcpm: fusb302: Resolve out of order messaging events

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
commit ab69f61321140ff632d560775bc226259a78dfa2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ab69f613.failed

The expectation in the FUSB302 driver is that a TX_SUCCESS event
should occur after a message has been sent, but before a GCRCSENT
event is raised to indicate successful receipt of a message from
the partner. However in some circumstances it is possible to see
the hardware raise a GCRCSENT event before a TX_SUCCESS event
is raised. The upshot of this is that the GCRCSENT handling portion
of code ends up reporting the GoodCRC message to TCPM because the
TX_SUCCESS event hasn't yet arrived to trigger a consumption of it.
When TX_SUCCESS is then raised by the chip it ends up consuming the
actual message that was meant for TCPM, and this incorrect sequence
results in a hard reset from TCPM.

To avoid this problem, this commit updates the message reading
code to check whether a GoodCRC message was received or not. Based
on this check it will either report that the previous transmission
has completed or it will pass the msg data to TCPM for futher
processing. This way the incorrect ordering of the events no longer
matters.

	Signed-off-by: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
	Reviewed-by: Guenter Roeck <linux@roeck-us.net>
	Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ab69f61321140ff632d560775bc226259a78dfa2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/typec/fusb302/fusb302.c
* Unmerged path drivers/usb/typec/fusb302/fusb302.c
* Unmerged path drivers/usb/typec/fusb302/fusb302.c
