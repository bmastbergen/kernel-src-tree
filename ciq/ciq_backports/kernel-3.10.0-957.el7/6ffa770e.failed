usbnet: kaweth: Use net_device_stats from struct net_device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Tobias Klauser <tklauser@distanz.ch>
commit 6ffa770e311a11e760777b8a527a8d9562628b20
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6ffa770e.failed

Instead of using a private copy of struct net_device_stats in struct
kaweth_device, use stats from struct net_device. Also remove the now
unnecessary .ndo_get_stats function.

	Cc: linux-usb@vger.kernel.org
	Signed-off-by: Tobias Klauser <tklauser@distanz.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6ffa770e311a11e760777b8a527a8d9562628b20)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/kaweth.c
diff --cc drivers/net/usb/kaweth.c
index 864e23ae1a3f,3d8ea18df696..000000000000
--- a/drivers/net/usb/kaweth.c
+++ b/drivers/net/usb/kaweth.c
@@@ -803,12 -801,18 +801,27 @@@ static netdev_tx_t kaweth_start_xmit(st
  	}
  
  	/* We now decide whether we can put our special header into the sk_buff */
++<<<<<<< HEAD
 +	if (skb_cow_head(skb, 2)) {
 +		kaweth->stats.tx_errors++;
 +		netif_start_queue(net);
 +		spin_unlock_irq(&kaweth->device_lock);
 +		dev_kfree_skb_any(skb);
 +		return NETDEV_TX_OK;
++=======
+ 	if (skb_cloned(skb) || skb_headroom(skb) < 2) {
+ 		/* no such luck - we make our own */
+ 		struct sk_buff *copied_skb;
+ 		copied_skb = skb_copy_expand(skb, 2, 0, GFP_ATOMIC);
+ 		dev_kfree_skb_irq(skb);
+ 		skb = copied_skb;
+ 		if (!copied_skb) {
+ 			net->stats.tx_errors++;
+ 			netif_start_queue(net);
+ 			spin_unlock_irq(&kaweth->device_lock);
+ 			return NETDEV_TX_OK;
+ 		}
++>>>>>>> 6ffa770e311a (usbnet: kaweth: Use net_device_stats from struct net_device)
  	}
  
  	private_header = (__le16 *)__skb_push(skb, 2);
@@@ -975,8 -970,6 +979,11 @@@ static const struct net_device_ops kawe
  	.ndo_start_xmit =		kaweth_start_xmit,
  	.ndo_tx_timeout =		kaweth_tx_timeout,
  	.ndo_set_rx_mode =		kaweth_set_rx_mode,
++<<<<<<< HEAD
 +	.ndo_get_stats =		kaweth_netdev_stats,
 +	.ndo_change_mtu_rh74 =		eth_change_mtu,
++=======
++>>>>>>> 6ffa770e311a (usbnet: kaweth: Use net_device_stats from struct net_device)
  	.ndo_set_mac_address =		eth_mac_addr,
  	.ndo_validate_addr =		eth_validate_addr,
  };
* Unmerged path drivers/net/usb/kaweth.c
