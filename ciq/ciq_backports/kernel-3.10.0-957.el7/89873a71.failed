watchdog: pretimeout: add pretimeout_available_governors attribute

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [watchdog] pretimeout: add pretimeout_available_governors attribute (David Arcari) [1576173]
Rebuild_FUZZ: 91.80%
commit-author Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
commit 89873a711dd20b614abb6e4038fb4b5462f4c701
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/89873a71.failed

The change adds an option to a user with CONFIG_WATCHDOG_SYSFS and
CONFIG_WATCHDOG_PRETIMEOUT_GOV enabled to get information about all
registered watchdog pretimeout governors by reading watchdog device
attribute named "pretimeout_available_governors".

	Signed-off-by: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
	Reviewed-by: Guenter Roeck <linux@roeck-us.net>
	Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
	Tested-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
	Signed-off-by: Guenter Roeck <linux@roeck-us.net>
	Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
(cherry picked from commit 89873a711dd20b614abb6e4038fb4b5462f4c701)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/watchdog/watchdog_dev.c
#	drivers/watchdog/watchdog_pretimeout.c
#	drivers/watchdog/watchdog_pretimeout.h
diff --cc drivers/watchdog/watchdog_dev.c
index f06fbcf0bea2,32930a073a12..000000000000
--- a/drivers/watchdog/watchdog_dev.c
+++ b/drivers/watchdog/watchdog_dev.c
@@@ -326,6 -489,36 +326,39 @@@ static ssize_t state_show(struct devic
  }
  static DEVICE_ATTR_RO(state);
  
++<<<<<<< HEAD
++=======
+ static ssize_t pretimeout_available_governors_show(struct device *dev,
+ 				   struct device_attribute *attr, char *buf)
+ {
+ 	return watchdog_pretimeout_available_governors_get(buf);
+ }
+ static DEVICE_ATTR_RO(pretimeout_available_governors);
+ 
+ static ssize_t pretimeout_governor_show(struct device *dev,
+ 					struct device_attribute *attr,
+ 					char *buf)
+ {
+ 	struct watchdog_device *wdd = dev_get_drvdata(dev);
+ 
+ 	return watchdog_pretimeout_governor_get(wdd, buf);
+ }
+ 
+ static ssize_t pretimeout_governor_store(struct device *dev,
+ 					 struct device_attribute *attr,
+ 					 const char *buf, size_t count)
+ {
+ 	struct watchdog_device *wdd = dev_get_drvdata(dev);
+ 	int ret = watchdog_pretimeout_governor_set(wdd, buf);
+ 
+ 	if (!ret)
+ 		ret = count;
+ 
+ 	return ret;
+ }
+ static DEVICE_ATTR_RW(pretimeout_governor);
+ 
++>>>>>>> 89873a711dd2 (watchdog: pretimeout: add pretimeout_available_governors attribute)
  static umode_t wdt_is_visible(struct kobject *kobj, struct attribute *attr,
  				int n)
  {
@@@ -333,9 -526,15 +366,19 @@@
  	struct watchdog_device *wdd = dev_get_drvdata(dev);
  	umode_t mode = attr->mode;
  
 -	if (attr == &dev_attr_timeleft.attr && !wdd->ops->get_timeleft)
 +	if (attr == &dev_attr_status.attr && !wdd->ops->status)
  		mode = 0;
++<<<<<<< HEAD
 +	else if (attr == &dev_attr_timeleft.attr && !wdd->ops->get_timeleft)
++=======
+ 	else if (attr == &dev_attr_pretimeout.attr &&
+ 		 !(wdd->info->options & WDIOF_PRETIMEOUT))
+ 		mode = 0;
+ 	else if ((attr == &dev_attr_pretimeout_governor.attr ||
+ 		  attr == &dev_attr_pretimeout_available_governors.attr) &&
+ 		 (!(wdd->info->options & WDIOF_PRETIMEOUT) ||
+ 		  !IS_ENABLED(CONFIG_WATCHDOG_PRETIMEOUT_GOV)))
++>>>>>>> 89873a711dd2 (watchdog: pretimeout: add pretimeout_available_governors attribute)
  		mode = 0;
  
  	return mode;
@@@ -348,6 -548,8 +391,11 @@@ static struct attribute *wdt_attrs[] = 
  	&dev_attr_bootstatus.attr,
  	&dev_attr_status.attr,
  	&dev_attr_nowayout.attr,
++<<<<<<< HEAD
++=======
+ 	&dev_attr_pretimeout_governor.attr,
+ 	&dev_attr_pretimeout_available_governors.attr,
++>>>>>>> 89873a711dd2 (watchdog: pretimeout: add pretimeout_available_governors attribute)
  	NULL,
  };
  
* Unmerged path drivers/watchdog/watchdog_pretimeout.c
* Unmerged path drivers/watchdog/watchdog_pretimeout.h
* Unmerged path drivers/watchdog/watchdog_dev.c
* Unmerged path drivers/watchdog/watchdog_pretimeout.c
* Unmerged path drivers/watchdog/watchdog_pretimeout.h
