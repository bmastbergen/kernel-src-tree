drm/nouveau/gr/gf100-: virtualise init_419c9c + apply fixes from traces

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 778f18c607e30206c1a791a4d356f1ed32bc1947
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/778f18c6.failed

Deliberately removed from non-GP100, as RM doesn't touch it.

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 778f18c607e30206c1a791a4d356f1ed32bc1947)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
index 38a5ff7dd3aa,a379794df761..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
@@@ -1970,13 -2051,25 +1970,23 @@@ gf100_gr_init(struct gf100_gr *gr
  	nvkm_wr32(device, 0x404000, 0xc0000000);
  	nvkm_wr32(device, 0x404600, 0xc0000000);
  	nvkm_wr32(device, 0x408030, 0xc0000000);
 -
 -	if (gr->func->init_40601c)
 -		gr->func->init_40601c(gr);
 -
 +	nvkm_wr32(device, 0x40601c, 0xc0000000);
  	nvkm_wr32(device, 0x404490, 0xc0000000);
  	nvkm_wr32(device, 0x406018, 0xc0000000);
 -
 -	if (gr->func->init_sked_hww_esr)
 -		gr->func->init_sked_hww_esr(gr);
 -
  	nvkm_wr32(device, 0x405840, 0xc0000000);
  	nvkm_wr32(device, 0x405844, 0x00ffffff);
++<<<<<<< HEAD
 +	nvkm_mask(device, 0x419cc0, 0x00000008, 0x00000008);
 +	nvkm_mask(device, 0x419eb4, 0x00001000, 0x00001000);
++=======
+ 
+ 	if (gr->func->init_419cc0)
+ 		gr->func->init_419cc0(gr);
+ 	if (gr->func->init_419eb4)
+ 		gr->func->init_419eb4(gr);
+ 	if (gr->func->init_419c9c)
+ 		gr->func->init_419c9c(gr);
++>>>>>>> 778f18c607e3 (drm/nouveau/gr/gf100-: virtualise init_419c9c + apply fixes from traces)
  
  	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
  		nvkm_wr32(device, GPC_UNIT(gpc, 0x0420), 0xc0000000);
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
index a36e45a4a635,e328957453fb..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
@@@ -122,10 -122,22 +122,22 @@@ struct gf100_gr_func 
  	void (*dtor)(struct gf100_gr *);
  	int (*init)(struct gf100_gr *);
  	void (*init_gpc_mmu)(struct gf100_gr *);
 -	void (*init_r405a14)(struct gf100_gr *);
 -	void (*init_bios)(struct gf100_gr *);
 -	void (*init_vsc_stream_master)(struct gf100_gr *);
 -	void (*init_zcull)(struct gf100_gr *);
 -	void (*init_num_active_ltcs)(struct gf100_gr *);
  	void (*init_rop_active_fbps)(struct gf100_gr *);
++<<<<<<< HEAD
++=======
+ 	void (*init_bios_2)(struct gf100_gr *);
+ 	void (*init_swdx_pes_mask)(struct gf100_gr *);
+ 	void (*init_fecs_exceptions)(struct gf100_gr *);
+ 	void (*init_ds_hww_esr_2)(struct gf100_gr *);
+ 	void (*init_40601c)(struct gf100_gr *);
+ 	void (*init_sked_hww_esr)(struct gf100_gr *);
+ 	void (*init_419cc0)(struct gf100_gr *);
+ 	void (*init_419eb4)(struct gf100_gr *);
+ 	void (*init_419c9c)(struct gf100_gr *);
++>>>>>>> 778f18c607e3 (drm/nouveau/gr/gf100-: virtualise init_419c9c + apply fixes from traces)
  	void (*init_ppc_exceptions)(struct gf100_gr *);
 +	void (*init_swdx_pes_mask)(struct gf100_gr *);
 +	void (*init_num_active_ltcs)(struct gf100_gr *);
  	void (*set_hww_esr_report_mask)(struct gf100_gr *);
  	const struct gf100_gr_pack *mmio;
  	struct {
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
index 867a5f7cc5bc,3fcbe1fc19cf..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
@@@ -30,6 -30,20 +30,14 @@@
   * PGRAPH engine/subdev functions
   ******************************************************************************/
  
+ static void
+ gp100_gr_init_419c9c(struct gf100_gr *gr)
+ {
+ 	struct nvkm_device *device = gr->base.engine.subdev.device;
+ 	nvkm_mask(device, 0x419c9c, 0x00010000, 0x00010000);
+ 	nvkm_mask(device, 0x419c9c, 0x00020000, 0x00020000);
+ }
+ 
 -void
 -gp100_gr_init_fecs_exceptions(struct gf100_gr *gr)
 -{
 -	nvkm_wr32(gr->base.engine.subdev.device, 0x409c24, 0x000f0002);
 -}
 -
  void
  gp100_gr_init_rop_active_fbps(struct gf100_gr *gr)
  {
@@@ -108,13 -84,12 +116,19 @@@ gp100_gr_init(struct gf100_gr *gr
  	nvkm_wr32(device, 0x408030, 0xc0000000);
  	nvkm_wr32(device, 0x404490, 0xc0000000);
  	nvkm_wr32(device, 0x406018, 0xc0000000);
 -	gr->func->init_sked_hww_esr(gr);
 +	nvkm_wr32(device, 0x407020, 0x40000000);
  	nvkm_wr32(device, 0x405840, 0xc0000000);
  	nvkm_wr32(device, 0x405844, 0x00ffffff);
++<<<<<<< HEAD
 +	nvkm_mask(device, 0x419cc0, 0x00000008, 0x00000008);
 +
 +	nvkm_mask(device, 0x419c9c, 0x00010000, 0x00010000);
 +	nvkm_mask(device, 0x419c9c, 0x00020000, 0x00020000);
++=======
+ 	gr->func->init_419cc0(gr);
+ 	if (gr->func->init_419c9c)
+ 		gr->func->init_419c9c(gr);
++>>>>>>> 778f18c607e3 (drm/nouveau/gr/gf100-: virtualise init_419c9c + apply fixes from traces)
  
  	gr->func->init_ppc_exceptions(gr);
  
@@@ -160,9 -134,16 +174,17 @@@ static const struct gf100_gr_fun
  gp100_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
 -	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
 -	.init_zcull = gf117_gr_init_zcull,
 -	.init_num_active_ltcs = gm200_gr_init_num_active_ltcs,
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
++<<<<<<< HEAD
++=======
+ 	.init_fecs_exceptions = gp100_gr_init_fecs_exceptions,
+ 	.init_ds_hww_esr_2 = gm200_gr_init_ds_hww_esr_2,
+ 	.init_sked_hww_esr = gk104_gr_init_sked_hww_esr,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419c9c = gp100_gr_init_419c9c,
++>>>>>>> 778f18c607e3 (drm/nouveau/gr/gf100-: virtualise init_419c9c + apply fixes from traces)
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
 +	.init_num_active_ltcs = gp100_gr_init_num_active_ltcs,
  	.rops = gm200_gr_rops,
  	.ppc_nr = 2,
  	.grctx = &gp100_grctx,
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
