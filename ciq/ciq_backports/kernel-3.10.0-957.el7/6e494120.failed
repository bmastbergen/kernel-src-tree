nvme: don't free uuid pointer before printing it

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] don't free uuid pointer before printing it (David Milburn) [1515584]
Rebuild_FUZZ: 93.33%
commit-author Johannes Thumshirn <jthumshirn@suse.de>
commit 6e49412016f5f28ae36c3eaa5a36ec787b788951
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6e494120.failed

Commit df351ef73789 ("nvme-fabrics: fix memory leak when parsing host ID
option") fixed the leak of 'p' but in case uuid_parse() fails the memory
is freed before the error print that is using it.

Free it after printing eventual errors.

	Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
Fixes: df351ef73789 ("nvme-fabrics: fix memory leak when parsing host ID option")
	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 6e49412016f5f28ae36c3eaa5a36ec787b788951)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fabrics.c
diff --cc drivers/nvme/host/fabrics.c
index 4ef418568e4b,9cee72a80472..000000000000
--- a/drivers/nvme/host/fabrics.c
+++ b/drivers/nvme/host/fabrics.c
@@@ -737,10 -738,14 +737,18 @@@ static int nvmf_parse_options(struct nv
  				ret = -ENOMEM;
  				goto out;
  			}
++<<<<<<< HEAD
 +			if (uuid_be_to_bin(p, &hostid)) {
++=======
+ 			ret = uuid_parse(p, &hostid);
+ 			if (ret) {
+ 				pr_err("Invalid hostid %s\n", p);
++>>>>>>> 6e49412016f5 (nvme: don't free uuid pointer before printing it)
  				ret = -EINVAL;
+ 				kfree(p);
  				goto out;
  			}
+ 			kfree(p);
  			break;
  		case NVMF_OPT_DUP_CONNECT:
  			opts->duplicate_connect = true;
* Unmerged path drivers/nvme/host/fabrics.c
