sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ingo Molnar <mingo@kernel.org>
commit 299300258d1bc4e997b7db340a2e06636757fe2e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/29930025.failed

We are going to split <linux/sched/task.h> out of <linux/sched.h>, which
will have to be picked up from other headers and a couple of .c files.

Create a trivial placeholder <linux/sched/task.h> file that just
maps to <linux/sched.h> to make this patch obviously correct and
bisectable.

Include the new header in the files that are going to need it.

	Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 299300258d1bc4e997b7db340a2e06636757fe2e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/alpha/kernel/process.c
#	arch/arm/kernel/process.c
#	arch/arm/mm/init.c
#	arch/arm64/kernel/process.c
#	arch/avr32/kernel/process.c
#	arch/blackfin/kernel/process.c
#	arch/blackfin/kernel/trace.c
#	arch/cris/arch-v10/kernel/process.c
#	arch/cris/arch-v32/kernel/process.c
#	arch/frv/kernel/process.c
#	arch/frv/mm/mmu-context.c
#	arch/h8300/kernel/process.c
#	arch/hexagon/kernel/process.c
#	arch/ia64/kernel/mca.c
#	arch/ia64/kernel/process.c
#	arch/m32r/kernel/process.c
#	arch/m68k/kernel/process.c
#	arch/metag/kernel/process.c
#	arch/metag/kernel/traps.c
#	arch/microblaze/kernel/process.c
#	arch/mips/kernel/mips-mt-fpaff.c
#	arch/mips/kernel/process.c
#	arch/mn10300/kernel/process.c
#	arch/nios2/kernel/process.c
#	arch/openrisc/kernel/process.c
#	arch/parisc/kernel/process.c
#	arch/powerpc/kernel/process.c
#	arch/s390/kernel/process.c
#	arch/sh/kernel/cpu/fpu.c
#	arch/sh/kernel/process_32.c
#	arch/sh/kernel/process_64.c
#	arch/sh/mm/asids-debugfs.c
#	arch/sparc/kernel/process_32.c
#	arch/sparc/kernel/process_64.c
#	arch/tile/kernel/process.c
#	arch/tile/kernel/unaligned.c
#	arch/tile/mm/fault.c
#	arch/um/kernel/process.c
#	arch/um/kernel/reboot.c
#	arch/unicore32/kernel/process.c
#	arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
#	arch/x86/kernel/fpu/init.c
#	arch/x86/kernel/process.c
#	arch/xtensa/kernel/process.c
#	drivers/tty/sysrq.c
#	drivers/tty/tty_io.c
#	fs/exec.c
#	fs/fs_struct.c
#	fs/proc/array.c
#	init/main.c
#	kernel/cgroup/cgroup.c
#	kernel/cpu.c
#	kernel/exit.c
#	kernel/fork.c
#	kernel/lockdep.c
#	kernel/power/process.c
#	kernel/ptrace.c
#	kernel/sched/sched.h
#	kernel/signal.c
#	kernel/sys.c
#	kernel/tracepoint.c
#	mm/kmemleak.c
#	mm/memory-failure.c
#	mm/memory.c
#	mm/oom_kill.c
#	mm/rmap.c
#	mm/swapfile.c
#	mm/usercopy.c
#	security/selinux/hooks.c
diff --cc arch/alpha/kernel/process.c
index ab80a80d38a2,713b4fac998e..000000000000
--- a/arch/alpha/kernel/process.c
+++ b/arch/alpha/kernel/process.c
@@@ -11,6 -11,8 +11,11 @@@
  #include <linux/errno.h>
  #include <linux/module.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/smp.h>
diff --cc arch/arm/kernel/process.c
index ab1fe3bb31f0,d4c7c9a1afa9..000000000000
--- a/arch/arm/kernel/process.c
+++ b/arch/arm/kernel/process.c
@@@ -12,6 -12,8 +12,11 @@@
  
  #include <linux/export.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/stddef.h>
diff --cc arch/arm/mm/init.c
index 0ecc43fd6229,1d8558ff9827..000000000000
--- a/arch/arm/mm/init.c
+++ b/arch/arm/mm/init.c
@@@ -13,6 -13,8 +13,11 @@@
  #include <linux/init.h>
  #include <linux/bootmem.h>
  #include <linux/mman.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/export.h>
  #include <linux/nodemask.h>
  #include <linux/initrd.h>
diff --cc arch/arm64/kernel/process.c
index 46f02c3b5015,f9b8e74ff8f2..000000000000
--- a/arch/arm64/kernel/process.c
+++ b/arch/arm64/kernel/process.c
@@@ -20,8 -20,12 +20,13 @@@
  
  #include <stdarg.h>
  
 -#include <linux/compat.h>
 -#include <linux/efi.h>
  #include <linux/export.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/stddef.h>
diff --cc arch/avr32/kernel/process.c
index e7b61494c312,75b944a5107c..000000000000
--- a/arch/avr32/kernel/process.c
+++ b/arch/avr32/kernel/process.c
@@@ -6,6 -6,8 +6,11 @@@
   * published by the Free Software Foundation.
   */
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/module.h>
  #include <linux/kallsyms.h>
  #include <linux/fs.h>
diff --cc arch/blackfin/kernel/process.c
index 4aa5545c4fde,1a1f444004b1..000000000000
--- a/arch/blackfin/kernel/process.c
+++ b/arch/blackfin/kernel/process.c
@@@ -12,6 -12,8 +12,11 @@@
  #include <linux/uaccess.h>
  #include <linux/slab.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/tick.h>
  #include <linux/fs.h>
  #include <linux/err.h>
diff --cc arch/blackfin/kernel/trace.c
index c36efa0c7163,151f22196ab6..000000000000
--- a/arch/blackfin/kernel/trace.c
+++ b/arch/blackfin/kernel/trace.c
@@@ -11,7 -11,9 +11,13 @@@
  #include <linux/thread_info.h>
  #include <linux/mm.h>
  #include <linux/oom.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/uaccess.h>
  #include <linux/module.h>
  #include <linux/kallsyms.h>
diff --cc arch/cris/arch-v10/kernel/process.c
index 753e9a03cf87,808c2186b704..000000000000
--- a/arch/cris/arch-v10/kernel/process.c
+++ b/arch/cris/arch-v10/kernel/process.c
@@@ -11,6 -11,8 +11,11 @@@
   */
  
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/slab.h>
  #include <linux/err.h>
  #include <linux/fs.h>
diff --cc arch/cris/arch-v32/kernel/process.c
index cebd32e2a8fb,c852df262948..000000000000
--- a/arch/cris/arch-v32/kernel/process.c
+++ b/arch/cris/arch-v32/kernel/process.c
@@@ -9,6 -9,8 +9,11 @@@
   */
  
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/slab.h>
  #include <linux/err.h>
  #include <linux/fs.h>
diff --cc arch/frv/kernel/process.c
index 5d40aeb7712e,c96dbd4b8626..000000000000
--- a/arch/frv/kernel/process.c
+++ b/arch/frv/kernel/process.c
@@@ -13,6 -13,8 +13,11 @@@
  #include <linux/module.h>
  #include <linux/errno.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/smp.h>
diff --cc arch/frv/mm/mmu-context.c
index 81757d55a5b5,16946a58f64d..000000000000
--- a/arch/frv/mm/mmu-context.c
+++ b/arch/frv/mm/mmu-context.c
@@@ -10,6 -10,8 +10,11 @@@
   */
  
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/mm.h>
  #include <asm/tlbflush.h>
  
diff --cc arch/h8300/kernel/process.c
index 1a744ab7e7e5,54e4d6f01865..000000000000
--- a/arch/h8300/kernel/process.c
+++ b/arch/h8300/kernel/process.c
@@@ -25,6 -25,8 +25,11 @@@
  #include <linux/errno.h>
  #include <linux/module.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/smp.h>
diff --cc arch/hexagon/kernel/process.c
index 0a0dd5c05b46,a2a822a875b6..000000000000
--- a/arch/hexagon/kernel/process.c
+++ b/arch/hexagon/kernel/process.c
@@@ -19,6 -19,8 +19,11 @@@
   */
  
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/types.h>
  #include <linux/module.h>
  #include <linux/tick.h>
diff --cc arch/ia64/kernel/mca.c
index d7396dbb07bb,79c7c46d7dc1..000000000000
--- a/arch/ia64/kernel/mca.c
+++ b/arch/ia64/kernel/mca.c
@@@ -72,7 -72,9 +72,13 @@@
  #include <linux/jiffies.h>
  #include <linux/types.h>
  #include <linux/init.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/interrupt.h>
  #include <linux/irq.h>
  #include <linux/bootmem.h>
diff --cc arch/ia64/kernel/process.c
index 55d4ba47a907,054facf22156..000000000000
--- a/arch/ia64/kernel/process.c
+++ b/arch/ia64/kernel/process.c
@@@ -20,6 -20,9 +20,12 @@@
  #include <linux/notifier.h>
  #include <linux/personality.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/hotplug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/stddef.h>
  #include <linux/thread_info.h>
  #include <linux/unistd.h>
diff --cc arch/m32r/kernel/process.c
index e69221d581d5,2a450382934c..000000000000
--- a/arch/m32r/kernel/process.c
+++ b/arch/m32r/kernel/process.c
@@@ -22,6 -22,8 +22,11 @@@
  
  #include <linux/fs.h>
  #include <linux/slab.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/module.h>
  #include <linux/ptrace.h>
  #include <linux/unistd.h>
diff --cc arch/m68k/kernel/process.c
index c55ff719fa72,5d335d178706..000000000000
--- a/arch/m68k/kernel/process.c
+++ b/arch/m68k/kernel/process.c
@@@ -13,6 -13,8 +13,11 @@@
  #include <linux/errno.h>
  #include <linux/module.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/slab.h>
diff --cc arch/metag/kernel/process.c
index 483dff986a23,801e6f927e62..000000000000
--- a/arch/metag/kernel/process.c
+++ b/arch/metag/kernel/process.c
@@@ -8,6 -8,8 +8,11 @@@
  #include <linux/errno.h>
  #include <linux/export.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/unistd.h>
diff --cc arch/metag/kernel/traps.c
index 2ceeaae5b199,23c5ac33a93f..000000000000
--- a/arch/metag/kernel/traps.c
+++ b/arch/metag/kernel/traps.c
@@@ -10,6 -10,8 +10,11 @@@
  
  #include <linux/export.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/signal.h>
  #include <linux/kernel.h>
  #include <linux/mm.h>
diff --cc arch/microblaze/kernel/process.c
index 7d1a9c8b1f3d,a642fe5ac5ff..000000000000
--- a/arch/microblaze/kernel/process.c
+++ b/arch/microblaze/kernel/process.c
@@@ -8,8 -8,11 +8,13 @@@
   * for more details.
   */
  
 -#include <linux/cpu.h>
  #include <linux/export.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/pm.h>
  #include <linux/tick.h>
  #include <linux/bitops.h>
diff --cc arch/mips/kernel/mips-mt-fpaff.c
index fd814e08c945,8cab633e0e5a..000000000000
--- a/arch/mips/kernel/mips-mt-fpaff.c
+++ b/arch/mips/kernel/mips-mt-fpaff.c
@@@ -9,9 -9,11 +9,14 @@@
  #include <linux/kernel.h>
  #include <linux/init.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/task.h>
+ #include <linux/cred.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/security.h>
  #include <linux/types.h>
 -#include <linux/uaccess.h>
 +#include <asm/uaccess.h>
  
  /*
   * CPU mask used to set process affinity for MT VPEs/TCs with FPUs
diff --cc arch/mips/kernel/process.c
index c6a041d9d05d,8bfb833b3158..000000000000
--- a/arch/mips/kernel/process.c
+++ b/arch/mips/kernel/process.c
@@@ -11,6 -11,8 +11,11 @@@
   */
  #include <linux/errno.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/tick.h>
  #include <linux/kernel.h>
  #include <linux/mm.h>
diff --cc arch/mn10300/kernel/process.c
index 3707da583d05,8ca7a9de09a5..000000000000
--- a/arch/mn10300/kernel/process.c
+++ b/arch/mn10300/kernel/process.c
@@@ -11,6 -11,8 +11,11 @@@
  #include <linux/module.h>
  #include <linux/errno.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/smp.h>
diff --cc arch/openrisc/kernel/process.c
index 386af258591d,0c5ad3bde0f5..000000000000
--- a/arch/openrisc/kernel/process.c
+++ b/arch/openrisc/kernel/process.c
@@@ -22,6 -22,8 +22,11 @@@
  
  #include <linux/errno.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/module.h>
  #include <linux/mm.h>
diff --cc arch/parisc/kernel/process.c
index 55f92b614182,e5f97239cc5e..000000000000
--- a/arch/parisc/kernel/process.c
+++ b/arch/parisc/kernel/process.c
@@@ -43,6 -43,8 +43,11 @@@
  #include <linux/personality.h>
  #include <linux/ptrace.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/slab.h>
  #include <linux/stddef.h>
  #include <linux/unistd.h>
diff --cc arch/powerpc/kernel/process.c
index 13e89d95565a,b99b12656f6f..000000000000
--- a/arch/powerpc/kernel/process.c
+++ b/arch/powerpc/kernel/process.c
@@@ -16,6 -16,8 +16,11 @@@
  
  #include <linux/errno.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/smp.h>
diff --cc arch/s390/kernel/process.c
index fcaf47fbcd75,250c41f05721..000000000000
--- a/arch/s390/kernel/process.c
+++ b/arch/s390/kernel/process.c
@@@ -10,6 -10,9 +10,11 @@@
  #include <linux/compiler.h>
  #include <linux/cpu.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/elfcore.h>
diff --cc arch/sh/kernel/cpu/fpu.c
index f8f7af51c128,b76370a47bf9..000000000000
--- a/arch/sh/kernel/cpu/fpu.c
+++ b/arch/sh/kernel/cpu/fpu.c
@@@ -1,4 -1,5 +1,9 @@@
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/slab.h>
  #include <asm/processor.h>
  #include <asm/fpu.h>
diff --cc arch/sh/kernel/process_32.c
index ebd3933005b4,493c3eb86aa5..000000000000
--- a/arch/sh/kernel/process_32.c
+++ b/arch/sh/kernel/process_32.c
@@@ -15,6 -15,8 +15,11 @@@
   */
  #include <linux/module.h>
  #include <linux/mm.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/slab.h>
  #include <linux/elfcore.h>
  #include <linux/kallsyms.h>
diff --cc arch/sh/kernel/process_64.c
index 174d124b419e,056607185158..000000000000
--- a/arch/sh/kernel/process_64.c
+++ b/arch/sh/kernel/process_64.c
@@@ -25,8 -25,10 +25,13 @@@
  #include <linux/init.h>
  #include <linux/module.h>
  #include <linux/io.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <asm/syscalls.h>
 -#include <linux/uaccess.h>
 +#include <asm/uaccess.h>
  #include <asm/pgtable.h>
  #include <asm/mmu_context.h>
  #include <asm/fpu.h>
diff --cc arch/sh/mm/asids-debugfs.c
index 74c03ecc4871,e5539e0f8e3b..000000000000
--- a/arch/sh/mm/asids-debugfs.c
+++ b/arch/sh/mm/asids-debugfs.c
@@@ -21,6 -20,9 +21,12 @@@
  #include <linux/debugfs.h>
  #include <linux/seq_file.h>
  #include <linux/spinlock.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
+ 
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <asm/processor.h>
  #include <asm/mmu_context.h>
  
diff --cc arch/sparc/kernel/process_32.c
index fdd819dfdacf,ed87c45a785b..000000000000
--- a/arch/sparc/kernel/process_32.c
+++ b/arch/sparc/kernel/process_32.c
@@@ -13,6 -13,9 +13,11 @@@
  #include <linux/errno.h>
  #include <linux/module.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/stddef.h>
diff --cc arch/sparc/kernel/process_64.c
index baebab215492,4c82a73af893..000000000000
--- a/arch/sparc/kernel/process_64.c
+++ b/arch/sparc/kernel/process_64.c
@@@ -14,6 -14,8 +14,11 @@@
  #include <linux/errno.h>
  #include <linux/export.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/fs.h>
diff --cc arch/tile/kernel/process.c
index 8ac304484f98,dbb4fa76d1dd..000000000000
--- a/arch/tile/kernel/process.c
+++ b/arch/tile/kernel/process.c
@@@ -13,6 -13,8 +13,11 @@@
   */
  
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/preempt.h>
  #include <linux/module.h>
  #include <linux/fs.h>
diff --cc arch/tile/mm/fault.c
index c54a9b32c678,f58fa06a2214..000000000000
--- a/arch/tile/mm/fault.c
+++ b/arch/tile/mm/fault.c
@@@ -16,6 -16,9 +16,12 @@@
  
  #include <linux/signal.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
+ #include <linux/sched/task_stack.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/errno.h>
  #include <linux/string.h>
diff --cc arch/um/kernel/process.c
index bbcef522bcb1,e76dc7c11251..000000000000
--- a/arch/um/kernel/process.c
+++ b/arch/um/kernel/process.c
@@@ -15,6 -17,8 +15,11 @@@
  #include <linux/random.h>
  #include <linux/slab.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/seq_file.h>
  #include <linux/tick.h>
  #include <linux/threads.h>
diff --cc arch/um/kernel/reboot.c
index ced8903921ae,0bc921cee0b1..000000000000
--- a/arch/um/kernel/reboot.c
+++ b/arch/um/kernel/reboot.c
@@@ -3,7 -3,8 +3,12 @@@
   * Licensed under the GPL
   */
  
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/spinlock.h>
  #include <linux/slab.h>
  #include <linux/oom.h>
diff --cc arch/unicore32/kernel/process.c
index c9447691bdac,d58f1600b477..000000000000
--- a/arch/unicore32/kernel/process.c
+++ b/arch/unicore32/kernel/process.c
@@@ -13,6 -13,8 +13,11 @@@
  
  #include <linux/module.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/stddef.h>
diff --cc arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
index c1fd25488a23,0bbe0f3a039f..000000000000
--- a/arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
+++ b/arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
@@@ -24,10 -24,11 +24,15 @@@
  #include <linux/fs.h>
  #include <linux/sysfs.h>
  #include <linux/kernfs.h>
 +#include <linux/seq_buf.h>
  #include <linux/seq_file.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/slab.h>
 -#include <linux/cpu.h>
  #include <linux/task_work.h>
  
  #include <uapi/linux/magic.h>
diff --cc arch/x86/kernel/process.c
index f741d66041de,441f00e7be8f..000000000000
--- a/arch/x86/kernel/process.c
+++ b/arch/x86/kernel/process.c
@@@ -7,9 -7,13 +7,17 @@@
  #include <linux/prctl.h>
  #include <linux/slab.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
 +#include <linux/module.h>
++=======
+ #include <linux/sched/idle.h>
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
+ #include <linux/init.h>
+ #include <linux/export.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/pm.h>
 -#include <linux/tick.h>
 +#include <linux/clockchips.h>
  #include <linux/random.h>
  #include <linux/user-return-notifier.h>
  #include <linux/dmi.h>
diff --cc arch/xtensa/kernel/process.c
index 1c85323f01d7,af33f9d4c624..000000000000
--- a/arch/xtensa/kernel/process.c
+++ b/arch/xtensa/kernel/process.c
@@@ -17,6 -17,8 +17,11 @@@
  
  #include <linux/errno.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/kernel.h>
  #include <linux/mm.h>
  #include <linux/smp.h>
diff --cc drivers/tty/sysrq.c
index f696c04f6b07,c6fc7141d7b2..000000000000
--- a/drivers/tty/sysrq.c
+++ b/drivers/tty/sysrq.c
@@@ -14,8 -14,10 +14,13 @@@
  
  #define pr_fmt(fmt) KBUILD_MODNAME ": " fmt
  
 -#include <linux/sched/signal.h>
 +#include <linux/sched.h>
  #include <linux/sched/rt.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/interrupt.h>
  #include <linux/mm.h>
  #include <linux/fs.h>
diff --cc drivers/tty/tty_io.c
index 32e05fcb7109,e6d1a6510886..000000000000
--- a/drivers/tty/tty_io.c
+++ b/drivers/tty/tty_io.c
@@@ -69,7 -69,8 +69,12 @@@
  #include <linux/errno.h>
  #include <linux/signal.h>
  #include <linux/fcntl.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/interrupt.h>
  #include <linux/tty.h>
  #include <linux/tty_driver.h>
diff --cc fs/exec.c
index 25871b5322aa,65145a3df065..000000000000
--- a/fs/exec.c
+++ b/fs/exec.c
@@@ -31,6 -32,11 +31,14 @@@
  #include <linux/swap.h>
  #include <linux/string.h>
  #include <linux/init.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/sched/coredump.h>
+ #include <linux/sched/signal.h>
+ #include <linux/sched/numa_balancing.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/pagemap.h>
  #include <linux/perf_event.h>
  #include <linux/highmem.h>
diff --cc fs/fs_struct.c
index 03e2b6c348fd,be0250788b73..000000000000
--- a/fs/fs_struct.c
+++ b/fs/fs_struct.c
@@@ -1,5 -1,6 +1,10 @@@
  #include <linux/export.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/fs.h>
  #include <linux/path.h>
  #include <linux/slab.h>
diff --cc fs/proc/array.c
index d7c97e89352e,f3169b58af38..000000000000
--- a/fs/proc/array.c
+++ b/fs/proc/array.c
@@@ -60,6 -60,9 +60,12 @@@
  #include <linux/tty.h>
  #include <linux/string.h>
  #include <linux/mman.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/sched/numa_balancing.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/proc_fs.h>
  #include <linux/ioport.h>
  #include <linux/uaccess.h>
diff --cc init/main.c
index 085c9c599e87,47956b22add1..000000000000
--- a/init/main.c
+++ b/init/main.c
@@@ -70,15 -72,19 +70,21 @@@
  #include <linux/shmem_fs.h>
  #include <linux/slab.h>
  #include <linux/perf_event.h>
 +#include <linux/file.h>
  #include <linux/ptrace.h>
 +#include <linux/kaiser.h>
  #include <linux/blkdev.h>
  #include <linux/elevator.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched_clock.h>
+ #include <linux/sched/task.h>
+ #include <linux/context_tracking.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/random.h>
 +#include <linux/context_tracking.h>
  #include <linux/list.h>
 -#include <linux/integrity.h>
 -#include <linux/proc_ns.h>
  #include <linux/io.h>
 -#include <linux/cache.h>
 -#include <linux/rodata_test.h>
  
  #include <asm/io.h>
  #include <asm/bugs.h>
diff --cc kernel/cpu.c
index 0d9e250d0ea0,f7c063239fa5..000000000000
--- a/kernel/cpu.c
+++ b/kernel/cpu.c
@@@ -7,7 -7,9 +7,13 @@@
  #include <linux/smp.h>
  #include <linux/init.h>
  #include <linux/notifier.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/hotplug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/unistd.h>
  #include <linux/cpu.h>
  #include <linux/oom.h>
diff --cc kernel/exit.c
index 1afa79930cfc,e53408d156df..000000000000
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@@ -6,6 -6,10 +6,13 @@@
  
  #include <linux/mm.h>
  #include <linux/slab.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/autogroup.h>
+ #include <linux/sched/mm.h>
+ #include <linux/sched/stat.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/interrupt.h>
  #include <linux/module.h>
  #include <linux/capability.h>
diff --cc kernel/fork.c
index c75422b783bf,0af64d5d8b73..000000000000
--- a/kernel/fork.c
+++ b/kernel/fork.c
@@@ -12,6 -12,14 +12,17 @@@
   */
  
  #include <linux/slab.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/autogroup.h>
+ #include <linux/sched/mm.h>
+ #include <linux/sched/coredump.h>
+ #include <linux/sched/user.h>
+ #include <linux/sched/numa_balancing.h>
+ #include <linux/sched/stat.h>
+ #include <linux/sched/task.h>
+ #include <linux/rtmutex.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/init.h>
  #include <linux/unistd.h>
  #include <linux/module.h>
diff --cc kernel/lockdep.c
index afa5a3e0029b,12e38c213b70..000000000000
--- a/kernel/lockdep.c
+++ b/kernel/lockdep.c
@@@ -28,6 -28,8 +28,11 @@@
  #define DISABLE_BRANCH_PROFILING
  #include <linux/mutex.h>
  #include <linux/sched.h>
++<<<<<<< HEAD:kernel/lockdep.c
++=======
+ #include <linux/sched/clock.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>):kernel/locking/lockdep.c
  #include <linux/delay.h>
  #include <linux/module.h>
  #include <linux/proc_fs.h>
diff --cc kernel/power/process.c
index 9c28982657d8,c7209f060eeb..000000000000
--- a/kernel/power/process.c
+++ b/kernel/power/process.c
@@@ -12,6 -12,8 +12,11 @@@
  #include <linux/oom.h>
  #include <linux/suspend.h>
  #include <linux/module.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/syscalls.h>
  #include <linux/freezer.h>
  #include <linux/delay.h>
diff --cc kernel/ptrace.c
index 8eee8a263730,0af928712174..000000000000
--- a/kernel/ptrace.c
+++ b/kernel/ptrace.c
@@@ -10,6 -10,9 +10,12 @@@
  #include <linux/capability.h>
  #include <linux/export.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/sched/coredump.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/errno.h>
  #include <linux/mm.h>
  #include <linux/highmem.h>
diff --cc kernel/sched/sched.h
index d6fd5ead3b99,6b7155ae5c33..000000000000
--- a/kernel/sched/sched.h
+++ b/kernel/sched/sched.h
@@@ -1,9 -1,24 +1,21 @@@
  
  #include <linux/sched.h>
  #include <linux/sched/sysctl.h>
 -#include <linux/sched/topology.h>
  #include <linux/sched/rt.h>
  #include <linux/sched/deadline.h>
 -#include <linux/sched/clock.h>
 -#include <linux/sched/wake_q.h>
 -#include <linux/sched/signal.h>
 -#include <linux/sched/numa_balancing.h>
 -#include <linux/sched/mm.h>
  #include <linux/sched/cpufreq.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/stat.h>
+ #include <linux/sched/nohz.h>
+ #include <linux/sched/debug.h>
+ #include <linux/sched/hotplug.h>
+ #include <linux/sched/task.h>
+ 
+ #include <linux/u64_stats_sync.h>
+ #include <linux/kernel_stat.h>
+ #include <linux/binfmts.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/mutex.h>
  #include <linux/spinlock.h>
  #include <linux/stop_machine.h>
diff --cc kernel/signal.c
index a984c4bc8864,25d099fd80f7..000000000000
--- a/kernel/signal.c
+++ b/kernel/signal.c
@@@ -14,6 -14,9 +14,12 @@@
  #include <linux/export.h>
  #include <linux/init.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/user.h>
+ #include <linux/sched/debug.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/fs.h>
  #include <linux/tty.h>
  #include <linux/binfmts.h>
diff --cc kernel/sys.c
index 113961cf6711,7f1ecd2e41c1..000000000000
--- a/kernel/sys.c
+++ b/kernel/sys.c
@@@ -50,6 -49,12 +50,15 @@@
  #include <linux/binfmts.h>
  
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/autogroup.h>
+ #include <linux/sched/loadavg.h>
+ #include <linux/sched/stat.h>
+ #include <linux/sched/mm.h>
+ #include <linux/sched/coredump.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/rcupdate.h>
  #include <linux/uidgid.h>
  #include <linux/cred.h>
diff --cc kernel/tracepoint.c
index 7a37babb8e61,685c50ae6300..000000000000
--- a/kernel/tracepoint.c
+++ b/kernel/tracepoint.c
@@@ -24,7 -24,8 +24,12 @@@
  #include <linux/tracepoint.h>
  #include <linux/err.h>
  #include <linux/slab.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/static_key.h>
  
  extern struct tracepoint * const __start___tracepoints_ptrs[];
diff --cc mm/kmemleak.c
index 89dde7e2548c,a3970573359e..000000000000
--- a/mm/kmemleak.c
+++ b/mm/kmemleak.c
@@@ -66,7 -73,8 +66,12 @@@
  #include <linux/init.h>
  #include <linux/kernel.h>
  #include <linux/list.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/jiffies.h>
  #include <linux/delay.h>
  #include <linux/export.h>
diff --cc mm/memory-failure.c
index e377f767503f,27f7210e7fab..000000000000
--- a/mm/memory-failure.c
+++ b/mm/memory-failure.c
@@@ -39,7 -40,8 +39,12 @@@
  #include <linux/mm.h>
  #include <linux/page-flags.h>
  #include <linux/kernel-page-flags.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/ksm.h>
  #include <linux/rmap.h>
  #include <linux/export.h>
diff --cc mm/memory.c
index 41eaf1c61cf6,a97a4cec2e1f..000000000000
--- a/mm/memory.c
+++ b/mm/memory.c
@@@ -40,6 -40,10 +40,13 @@@
  
  #include <linux/kernel_stat.h>
  #include <linux/mm.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/sched/coredump.h>
+ #include <linux/sched/numa_balancing.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/hugetlb.h>
  #include <linux/mman.h>
  #include <linux/swap.h>
diff --cc mm/oom_kill.c
index 287e96813fc2,d083714a2bb9..000000000000
--- a/mm/oom_kill.c
+++ b/mm/oom_kill.c
@@@ -22,6 -22,9 +22,12 @@@
  #include <linux/err.h>
  #include <linux/gfp.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/sched/coredump.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/swap.h>
  #include <linux/timex.h>
  #include <linux/jiffies.h>
diff --cc mm/rmap.c
index 794c49685fc7,2da487d6cea8..000000000000
--- a/mm/rmap.c
+++ b/mm/rmap.c
@@@ -46,6 -46,8 +46,11 @@@
   */
  
  #include <linux/mm.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/pagemap.h>
  #include <linux/swap.h>
  #include <linux/swapops.h>
diff --cc mm/swapfile.c
index 4de479344eb4,521ef9b6064f..000000000000
--- a/mm/swapfile.c
+++ b/mm/swapfile.c
@@@ -6,6 -6,8 +6,11 @@@
   */
  
  #include <linux/mm.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/sched/task.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/hugetlb.h>
  #include <linux/mman.h>
  #include <linux/slab.h>
diff --cc security/selinux/hooks.c
index fe0d2b1b58b3,57ff53696144..000000000000
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@@ -29,8 -28,9 +29,14 @@@
  #include <linux/kernel.h>
  #include <linux/tracehook.h>
  #include <linux/errno.h>
++<<<<<<< HEAD
 +#include <linux/sched.h>
 +#include <linux/security.h>
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/task.h>
+ #include <linux/lsm_hooks.h>
++>>>>>>> 299300258d1b (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>)
  #include <linux/xattr.h>
  #include <linux/capability.h>
  #include <linux/unistd.h>
* Unmerged path arch/nios2/kernel/process.c
* Unmerged path arch/tile/kernel/unaligned.c
* Unmerged path arch/x86/kernel/fpu/init.c
* Unmerged path kernel/cgroup/cgroup.c
* Unmerged path mm/usercopy.c
* Unmerged path arch/alpha/kernel/process.c
diff --git a/arch/arc/kernel/process.c b/arch/arc/kernel/process.c
index cad66851e0c4..0023c5b322b6 100644
--- a/arch/arc/kernel/process.c
+++ b/arch/arc/kernel/process.c
@@ -11,6 +11,8 @@
 #include <linux/errno.h>
 #include <linux/module.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
+
 #include <linux/mm.h>
 #include <linux/fs.h>
 #include <linux/unistd.h>
* Unmerged path arch/arm/kernel/process.c
* Unmerged path arch/arm/mm/init.c
* Unmerged path arch/arm64/kernel/process.c
* Unmerged path arch/avr32/kernel/process.c
* Unmerged path arch/blackfin/kernel/process.c
* Unmerged path arch/blackfin/kernel/trace.c
diff --git a/arch/c6x/kernel/process.c b/arch/c6x/kernel/process.c
index 57d2ea8d1977..1c3f9df7ff44 100644
--- a/arch/c6x/kernel/process.c
+++ b/arch/c6x/kernel/process.c
@@ -17,6 +17,7 @@
 #include <linux/mqueue.h>
 #include <linux/syscalls.h>
 #include <linux/reboot.h>
+#include <linux/sched/task.h>
 
 #include <asm/syscalls.h>
 
* Unmerged path arch/cris/arch-v10/kernel/process.c
* Unmerged path arch/cris/arch-v32/kernel/process.c
diff --git a/arch/cris/kernel/process.c b/arch/cris/kernel/process.c
index b78498eb079b..1d7c0edae58f 100644
--- a/arch/cris/kernel/process.c
+++ b/arch/cris/kernel/process.c
@@ -20,6 +20,7 @@
 #include <linux/spinlock.h>
 #include <linux/init_task.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/fs.h>
 #include <linux/user.h>
 #include <linux/elfcore.h>
* Unmerged path arch/frv/kernel/process.c
* Unmerged path arch/frv/mm/mmu-context.c
* Unmerged path arch/h8300/kernel/process.c
* Unmerged path arch/hexagon/kernel/process.c
* Unmerged path arch/ia64/kernel/mca.c
diff --git a/arch/ia64/kernel/perfmon.c b/arch/ia64/kernel/perfmon.c
index 4334a96b9db2..5c411bd4073f 100644
--- a/arch/ia64/kernel/perfmon.c
+++ b/arch/ia64/kernel/perfmon.c
@@ -22,6 +22,7 @@
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/interrupt.h>
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
* Unmerged path arch/ia64/kernel/process.c
diff --git a/arch/ia64/kernel/ptrace.c b/arch/ia64/kernel/ptrace.c
index b7a5fffe0924..e1185db5a4e0 100644
--- a/arch/ia64/kernel/ptrace.c
+++ b/arch/ia64/kernel/ptrace.c
@@ -11,6 +11,7 @@
  */
 #include <linux/kernel.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/mm.h>
 #include <linux/errno.h>
 #include <linux/ptrace.h>
* Unmerged path arch/m32r/kernel/process.c
diff --git a/arch/m32r/kernel/smpboot.c b/arch/m32r/kernel/smpboot.c
index 0ac558adc605..f5111309e108 100644
--- a/arch/m32r/kernel/smpboot.c
+++ b/arch/m32r/kernel/smpboot.c
@@ -45,6 +45,7 @@
 #include <linux/kernel.h>
 #include <linux/mm.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/err.h>
 #include <linux/irq.h>
 #include <linux/bootmem.h>
* Unmerged path arch/m68k/kernel/process.c
* Unmerged path arch/metag/kernel/process.c
* Unmerged path arch/metag/kernel/traps.c
* Unmerged path arch/microblaze/kernel/process.c
* Unmerged path arch/mips/kernel/mips-mt-fpaff.c
* Unmerged path arch/mips/kernel/process.c
* Unmerged path arch/mn10300/kernel/process.c
diff --git a/arch/mn10300/kernel/smp.c b/arch/mn10300/kernel/smp.c
index a17f9c9c14c9..3484a76f0ba2 100644
--- a/arch/mn10300/kernel/smp.c
+++ b/arch/mn10300/kernel/smp.c
@@ -22,6 +22,7 @@
 #include <linux/kernel.h>
 #include <linux/delay.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/profile.h>
 #include <linux/smp.h>
 #include <linux/cpu.h>
* Unmerged path arch/nios2/kernel/process.c
* Unmerged path arch/openrisc/kernel/process.c
* Unmerged path arch/parisc/kernel/process.c
* Unmerged path arch/powerpc/kernel/process.c
* Unmerged path arch/s390/kernel/process.c
diff --git a/arch/s390/kernel/setup.c b/arch/s390/kernel/setup.c
index d6e8e87b465f..dbc0e19f83bb 100644
--- a/arch/s390/kernel/setup.c
+++ b/arch/s390/kernel/setup.c
@@ -18,6 +18,7 @@
 #include <linux/errno.h>
 #include <linux/export.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/kernel.h>
 #include <linux/memblock.h>
 #include <linux/mm.h>
diff --git a/arch/score/kernel/process.c b/arch/score/kernel/process.c
index f4c6d02421d3..34205ec2bf4e 100644
--- a/arch/score/kernel/process.c
+++ b/arch/score/kernel/process.c
@@ -28,6 +28,7 @@
 #include <linux/elfcore.h>
 #include <linux/pm.h>
 #include <linux/rcupdate.h>
+#include <linux/sched/task.h>
 
 void (*pm_power_off)(void);
 EXPORT_SYMBOL(pm_power_off);
* Unmerged path arch/sh/kernel/cpu/fpu.c
* Unmerged path arch/sh/kernel/process_32.c
* Unmerged path arch/sh/kernel/process_64.c
* Unmerged path arch/sh/mm/asids-debugfs.c
* Unmerged path arch/sparc/kernel/process_32.c
* Unmerged path arch/sparc/kernel/process_64.c
* Unmerged path arch/tile/kernel/process.c
diff --git a/arch/tile/kernel/smpboot.c b/arch/tile/kernel/smpboot.c
index 44bab29bf2f3..d267a745323c 100644
--- a/arch/tile/kernel/smpboot.c
+++ b/arch/tile/kernel/smpboot.c
@@ -17,6 +17,7 @@
 #include <linux/kernel.h>
 #include <linux/mm.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/kernel_stat.h>
 #include <linux/bootmem.h>
 #include <linux/notifier.h>
* Unmerged path arch/tile/kernel/unaligned.c
* Unmerged path arch/tile/mm/fault.c
diff --git a/arch/um/kernel/exec.c b/arch/um/kernel/exec.c
index 0d7103c9eff3..44d25589fba9 100644
--- a/arch/um/kernel/exec.c
+++ b/arch/um/kernel/exec.c
@@ -8,6 +8,7 @@
 #include <linux/fs.h>
 #include <linux/ptrace.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/slab.h>
 #include <asm/current.h>
 #include <asm/processor.h>
* Unmerged path arch/um/kernel/process.c
* Unmerged path arch/um/kernel/reboot.c
* Unmerged path arch/unicore32/kernel/process.c
* Unmerged path arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
* Unmerged path arch/x86/kernel/fpu/init.c
* Unmerged path arch/x86/kernel/process.c
diff --git a/arch/x86/kernel/process_32.c b/arch/x86/kernel/process_32.c
index 30d446884ae0..cdaf78541862 100644
--- a/arch/x86/kernel/process_32.c
+++ b/arch/x86/kernel/process_32.c
@@ -12,6 +12,7 @@
 #include <linux/cpu.h>
 #include <linux/errno.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/fs.h>
 #include <linux/kernel.h>
 #include <linux/mm.h>
diff --git a/arch/x86/kernel/process_64.c b/arch/x86/kernel/process_64.c
index fb066fe1e019..0563daf4fde7 100644
--- a/arch/x86/kernel/process_64.c
+++ b/arch/x86/kernel/process_64.c
@@ -17,6 +17,7 @@
 #include <linux/cpu.h>
 #include <linux/errno.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/fs.h>
 #include <linux/kernel.h>
 #include <linux/mm.h>
diff --git a/arch/x86/kernel/unwind_frame.c b/arch/x86/kernel/unwind_frame.c
index e74cb1cceda2..af144aad8c41 100644
--- a/arch/x86/kernel/unwind_frame.c
+++ b/arch/x86/kernel/unwind_frame.c
@@ -1,4 +1,5 @@
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <asm/ptrace.h>
 #include <asm/bitops.h>
 #include <asm/stacktrace.h>
* Unmerged path arch/xtensa/kernel/process.c
diff --git a/drivers/misc/kgdbts.c b/drivers/misc/kgdbts.c
index 36f5d52775a9..226f3d5be840 100644
--- a/drivers/misc/kgdbts.c
+++ b/drivers/misc/kgdbts.c
@@ -103,6 +103,8 @@
 #include <linux/delay.h>
 #include <linux/kthread.h>
 #include <linux/module.h>
+#include <linux/sched/task.h>
+
 #include <asm/sections.h>
 
 #define v1printk(a...) do { \
* Unmerged path drivers/tty/sysrq.c
* Unmerged path drivers/tty/tty_io.c
* Unmerged path fs/exec.c
diff --git a/fs/fcntl.c b/fs/fcntl.c
index 5c030954e9f9..121a4c474d79 100644
--- a/fs/fcntl.c
+++ b/fs/fcntl.c
@@ -7,6 +7,7 @@
 #include <linux/syscalls.h>
 #include <linux/init.h>
 #include <linux/mm.h>
+#include <linux/sched/task.h>
 #include <linux/fs.h>
 #include <linux/file.h>
 #include <linux/fdtable.h>
* Unmerged path fs/fs_struct.c
* Unmerged path fs/proc/array.c
diff --git a/fs/proc/kcore.c b/fs/proc/kcore.c
index c0c1611aea95..39082124f03d 100644
--- a/fs/proc/kcore.c
+++ b/fs/proc/kcore.c
@@ -28,6 +28,7 @@
 #include <linux/list.h>
 #include <linux/ioport.h>
 #include <linux/memory.h>
+#include <linux/sched/task.h>
 #include <asm/sections.h>
 #include "internal.h"
 
diff --git a/include/linux/sched/task.h b/include/linux/sched/task.h
new file mode 100644
index 000000000000..0023c91ff821
--- /dev/null
+++ b/include/linux/sched/task.h
@@ -0,0 +1,6 @@
+#ifndef _LINUX_SCHED_TASK_H
+#define _LINUX_SCHED_TASK_H
+
+#include <linux/sched.h>
+
+#endif /* _LINUX_SCHED_TASK_H */
* Unmerged path init/main.c
* Unmerged path kernel/cgroup/cgroup.c
* Unmerged path kernel/cpu.c
* Unmerged path kernel/exit.c
* Unmerged path kernel/fork.c
diff --git a/kernel/kmod.c b/kernel/kmod.c
index 86ab754f50c5..23f76746c83a 100644
--- a/kernel/kmod.c
+++ b/kernel/kmod.c
@@ -20,6 +20,7 @@
 */
 #include <linux/module.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/syscalls.h>
 #include <linux/unistd.h>
 #include <linux/kmod.h>
diff --git a/kernel/kthread.c b/kernel/kthread.c
index 703d91082618..530b67b491fe 100644
--- a/kernel/kthread.c
+++ b/kernel/kthread.c
@@ -6,6 +6,7 @@
  * etc.).
  */
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/kthread.h>
 #include <linux/completion.h>
 #include <linux/err.h>
* Unmerged path kernel/lockdep.c
diff --git a/kernel/pid.c b/kernel/pid.c
index f48427ae1285..489b660a717a 100644
--- a/kernel/pid.c
+++ b/kernel/pid.c
@@ -38,6 +38,7 @@
 #include <linux/syscalls.h>
 #include <linux/proc_ns.h>
 #include <linux/proc_fs.h>
+#include <linux/sched/task.h>
 
 #define pid_hashfn(nr, ns)	\
 	hash_long((unsigned long)nr + (unsigned long)ns, pidhash_shift)
diff --git a/kernel/pid_namespace.c b/kernel/pid_namespace.c
index 1d86f6406f89..8f0f9f67df13 100644
--- a/kernel/pid_namespace.c
+++ b/kernel/pid_namespace.c
@@ -18,6 +18,7 @@
 #include <linux/proc_ns.h>
 #include <linux/reboot.h>
 #include <linux/export.h>
+#include <linux/sched/task.h>
 
 struct pid_cache {
 	int nr_ids;
* Unmerged path kernel/power/process.c
* Unmerged path kernel/ptrace.c
* Unmerged path kernel/sched/sched.h
* Unmerged path kernel/signal.c
diff --git a/kernel/smpboot.c b/kernel/smpboot.c
index 7c434c39f02a..8673d2982895 100644
--- a/kernel/smpboot.c
+++ b/kernel/smpboot.c
@@ -9,6 +9,7 @@
 #include <linux/list.h>
 #include <linux/slab.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/export.h>
 #include <linux/percpu.h>
 #include <linux/kthread.h>
* Unmerged path kernel/sys.c
diff --git a/kernel/trace/ftrace.c b/kernel/trace/ftrace.c
index c77d05ffc8c9..307dd8869142 100644
--- a/kernel/trace/ftrace.c
+++ b/kernel/trace/ftrace.c
@@ -15,6 +15,7 @@
 
 #include <linux/stop_machine.h>
 #include <linux/clocksource.h>
+#include <linux/sched/task.h>
 #include <linux/kallsyms.h>
 #include <linux/seq_file.h>
 #include <linux/suspend.h>
* Unmerged path kernel/tracepoint.c
diff --git a/lib/dma-debug.c b/lib/dma-debug.c
index 4ead8d6d6811..a86593b1f1e9 100644
--- a/lib/dma-debug.c
+++ b/lib/dma-debug.c
@@ -19,6 +19,7 @@
 
 #include <linux/scatterlist.h>
 #include <linux/dma-mapping.h>
+#include <linux/sched/task.h>
 #include <linux/stacktrace.h>
 #include <linux/dma-debug.h>
 #include <linux/spinlock.h>
* Unmerged path mm/kmemleak.c
* Unmerged path mm/memory-failure.c
* Unmerged path mm/memory.c
* Unmerged path mm/oom_kill.c
* Unmerged path mm/rmap.c
* Unmerged path mm/swapfile.c
* Unmerged path mm/usercopy.c
diff --git a/security/keys/keyctl.c b/security/keys/keyctl.c
index 6f75010a2e76..f456ffd3fb48 100644
--- a/security/keys/keyctl.c
+++ b/security/keys/keyctl.c
@@ -12,6 +12,7 @@
 #include <linux/module.h>
 #include <linux/init.h>
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/slab.h>
 #include <linux/syscalls.h>
 #include <linux/key.h>
* Unmerged path security/selinux/hooks.c
