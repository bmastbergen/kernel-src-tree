nvme-rdma: fix sysfs invoked reset_ctrl error flow

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Nitzan Carmi <nitzanc@mellanox.com>
commit 8000d1fdb07e365e6565c2415aefdfed15413794
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/8000d1fd.failed

When reset_controller that is invoked by sysfs fails,
it enters an error flow which practically removes the
nvme ctrl entirely (similar to delete_ctrl flow). It
causes the system to hang, since a sysfs attribute cannot
be unregistered by one of its own methods.

This can be fixed by calling delete_ctrl as a work rather
than sequential code. In addition, it should give the ctrl
a chance to recover using reconnection mechanism (consistant
with FC reset_ctrl error flow). Also, while we're here, return
suitable errno in case the reset ended with non live ctrl.

	Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
	Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit 8000d1fdb07e365e6565c2415aefdfed15413794)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/rdma.c
diff --cc drivers/nvme/host/rdma.c
index 2e9ce2cbb1eb,3a51ed50eff2..000000000000
--- a/drivers/nvme/host/rdma.c
+++ b/drivers/nvme/host/rdma.c
@@@ -1796,10 -1783,9 +1796,16 @@@ static void nvme_rdma_reset_ctrl_work(s
  
  	return;
  
++<<<<<<< HEAD
 +del_dead_ctrl:
 +	/* Deleting this dead controller... */
 +	dev_warn(ctrl->ctrl.device, "Removing after reset failure\n");
 +	WARN_ON(!queue_work(nvme_wq, &ctrl->delete_work));
++=======
+ out_fail:
+ 	++ctrl->ctrl.nr_reconnects;
+ 	nvme_rdma_reconnect_or_remove(ctrl);
++>>>>>>> 8000d1fdb07e (nvme-rdma: fix sysfs invoked reset_ctrl error flow)
  }
  
  static const struct nvme_ctrl_ops nvme_rdma_ctrl_ops = {
diff --git a/drivers/nvme/host/core.c b/drivers/nvme/host/core.c
index e00444b9c8c7..10776dddf80a 100644
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@ -95,8 +95,12 @@ static int nvme_reset_ctrl_sync(struct nvme_ctrl *ctrl)
 	int ret;
 
 	ret = nvme_reset_ctrl(ctrl);
-	if (!ret)
+	if (!ret) {
 		flush_work(&ctrl->reset_work);
+		if (ctrl->state != NVME_CTRL_LIVE)
+			ret = -ENETRESET;
+	}
+
 	return ret;
 }
 
* Unmerged path drivers/nvme/host/rdma.c
