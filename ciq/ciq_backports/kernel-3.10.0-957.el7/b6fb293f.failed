mm: Define MAP_SYNC and VM_SYNC flags

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jan Kara <jack@suse.cz>
commit b6fb293f2497a9841d94f6b57bd2bb2cd222da43
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b6fb293f.failed

Define new MAP_SYNC flag and corresponding VMA VM_SYNC flag. As the
MAP_SYNC flag is not part of LEGACY_MAP_MASK, currently it will be
refused by all MAP_SHARED_VALIDATE map attempts and silently ignored for
everything else.

	Reviewed-by: Ross Zwisler <ross.zwisler@linux.intel.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jan Kara <jack@suse.cz>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit b6fb293f2497a9841d94f6b57bd2bb2cd222da43)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/proc/task_mmu.c
#	include/linux/mm.h
diff --cc fs/proc/task_mmu.c
index 2a2e2958ee0d,ea78b37deeaa..000000000000
--- a/fs/proc/task_mmu.c
+++ b/fs/proc/task_mmu.c
@@@ -625,8 -664,9 +625,12 @@@ static void show_smap_vma_flags(struct 
  		[ilog2(VM_ACCOUNT)]	= "ac",
  		[ilog2(VM_NORESERVE)]	= "nr",
  		[ilog2(VM_HUGETLB)]	= "ht",
++<<<<<<< HEAD
 +		[ilog2(VM_NONLINEAR)]	= "nl",
++=======
+ 		[ilog2(VM_SYNC)]	= "sf",
++>>>>>>> b6fb293f2497 (mm: Define MAP_SYNC and VM_SYNC flags)
  		[ilog2(VM_ARCH_1)]	= "ar",
 -		[ilog2(VM_WIPEONFORK)]	= "wf",
  		[ilog2(VM_DONTDUMP)]	= "dd",
  #ifdef CONFIG_MEM_SOFT_DIRTY
  		[ilog2(VM_SOFTDIRTY)]	= "sd",
diff --cc include/linux/mm.h
index a228f1a787bf,5411cb7442de..000000000000
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@@ -140,9 -189,9 +140,13 @@@ extern unsigned int kobjsize(const voi
  #define VM_ACCOUNT	0x00100000	/* Is a VM accounted object */
  #define VM_NORESERVE	0x00200000	/* should the VM suppress accounting */
  #define VM_HUGETLB	0x00400000	/* Huge TLB Page VM */
++<<<<<<< HEAD
 +#define VM_NONLINEAR	0x00800000	/* Is non-linear (remap_file_pages) */
++=======
+ #define VM_SYNC		0x00800000	/* Synchronous page faults */
++>>>>>>> b6fb293f2497 (mm: Define MAP_SYNC and VM_SYNC flags)
  #define VM_ARCH_1	0x01000000	/* Architecture-specific flag */
 -#define VM_WIPEONFORK	0x02000000	/* Wipe VMA contents in child. */
 +#define VM_ARCH_2	0x02000000
  #define VM_DONTDUMP	0x04000000	/* Do not include in the core dump */
  
  #ifdef CONFIG_MEM_SOFT_DIRTY
* Unmerged path fs/proc/task_mmu.c
* Unmerged path include/linux/mm.h
diff --git a/include/linux/mman.h b/include/linux/mman.h
index 6649eb13f4dd..ecdb48180986 100644
--- a/include/linux/mman.h
+++ b/include/linux/mman.h
@@ -9,7 +9,7 @@
 
 /*
  * Arrange for legacy / undefined architecture specific flags to be
- * ignored by default in LEGACY_MAP_MASK.
+ * ignored by mmap handling code.
  */
 #ifndef MAP_32BIT
 #define MAP_32BIT 0
@@ -23,6 +23,9 @@
 #ifndef MAP_UNINITIALIZED
 #define MAP_UNINITIALIZED 0
 #endif
+#ifndef MAP_SYNC
+#define MAP_SYNC 0
+#endif
 
 /*
  * The historical set of flags that all mmap implementations implicitly
@@ -119,7 +122,8 @@ calc_vm_flag_bits(unsigned long flags)
 {
 	return _calc_vm_trans(flags, MAP_GROWSDOWN,  VM_GROWSDOWN ) |
 	       _calc_vm_trans(flags, MAP_DENYWRITE,  VM_DENYWRITE ) |
-	       _calc_vm_trans(flags, MAP_LOCKED,     VM_LOCKED    );
+	       _calc_vm_trans(flags, MAP_LOCKED,     VM_LOCKED    ) |
+	       _calc_vm_trans(flags, MAP_SYNC,	     VM_SYNC      );
 }
 
 unsigned long vm_commit_limit(void);
diff --git a/include/uapi/asm-generic/mman.h b/include/uapi/asm-generic/mman.h
index e9fe6fd2a074..2b72f66f4d47 100644
--- a/include/uapi/asm-generic/mman.h
+++ b/include/uapi/asm-generic/mman.h
@@ -12,6 +12,7 @@
 #define MAP_NONBLOCK	0x10000		/* do not block on IO */
 #define MAP_STACK	0x20000		/* give out an address that is best suited for process/thread stacks */
 #define MAP_HUGETLB	0x40000		/* create a huge page mapping */
+#define MAP_SYNC	0x80000		/* perform synchronous page faults for the mapping */
 
 /* Bits [26:31] are reserved, see mman-common.h for MAP_HUGETLB usage */
 
