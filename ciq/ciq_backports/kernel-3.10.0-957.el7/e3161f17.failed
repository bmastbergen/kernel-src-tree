ceph: quota: cache inode pointer in ceph_snap_realm

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Luis Henriques <lhenriques@suse.com>
commit e3161f17d92699ce6ca3b7988131b10ad4035cf9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e3161f17.failed

Keep a pointer to the inode in struct ceph_snap_realm.  This allows to
optimize functions that walk the realms hierarchy (e.g. in quotas).

	Signed-off-by: Luis Henriques <lhenriques@suse.com>
	Reviewed-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit e3161f17d92699ce6ca3b7988131b10ad4035cf9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/quota.c
* Unmerged path fs/ceph/quota.c
diff --git a/fs/ceph/caps.c b/fs/ceph/caps.c
index 18838e531007..8a9447afab29 100644
--- a/fs/ceph/caps.c
+++ b/fs/ceph/caps.c
@@ -700,9 +700,11 @@ void ceph_add_cap(struct inode *inode,
 			}
 
 			spin_lock(&realm->inodes_with_caps_lock);
-			ci->i_snap_realm = realm;
 			list_add(&ci->i_snap_realm_item,
 				 &realm->inodes_with_caps);
+			ci->i_snap_realm = realm;
+			if (realm->ino == ci->i_vino.ino)
+				realm->inode = inode;
 			spin_unlock(&realm->inodes_with_caps_lock);
 
 			if (oldrealm)
diff --git a/fs/ceph/inode.c b/fs/ceph/inode.c
index 89fde4d86e99..7bd7d415d830 100644
--- a/fs/ceph/inode.c
+++ b/fs/ceph/inode.c
@@ -543,6 +543,9 @@ void ceph_destroy_inode(struct inode *inode)
 		dout(" dropping residual ref to snap realm %p\n", realm);
 		spin_lock(&realm->inodes_with_caps_lock);
 		list_del_init(&ci->i_snap_realm_item);
+		ci->i_snap_realm = NULL;
+		if (realm->ino == ci->i_vino.ino)
+			realm->inode = NULL;
 		spin_unlock(&realm->inodes_with_caps_lock);
 		ceph_put_snap_realm(mdsc, realm);
 	}
* Unmerged path fs/ceph/quota.c
diff --git a/fs/ceph/snap.c b/fs/ceph/snap.c
index 712d55f78833..3360a131490f 100644
--- a/fs/ceph/snap.c
+++ b/fs/ceph/snap.c
@@ -933,6 +933,8 @@ void ceph_handle_snap(struct ceph_mds_client *mdsc,
 			list_add(&ci->i_snap_realm_item,
 				 &realm->inodes_with_caps);
 			ci->i_snap_realm = realm;
+			if (realm->ino == ci->i_vino.ino)
+                                realm->inode = inode;
 			spin_unlock(&realm->inodes_with_caps_lock);
 
 			spin_unlock(&ci->i_ceph_lock);
diff --git a/fs/ceph/super.h b/fs/ceph/super.h
index 2ea6359d8d08..de25aa471fc5 100644
--- a/fs/ceph/super.h
+++ b/fs/ceph/super.h
@@ -688,6 +688,7 @@ struct ceph_readdir_cache_control {
  */
 struct ceph_snap_realm {
 	u64 ino;
+	struct inode *inode;
 	atomic_t nref;
 	struct rb_node node;
 
