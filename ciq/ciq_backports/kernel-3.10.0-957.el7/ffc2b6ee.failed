ip_gre: fix IFLA_MTU ignored on NEWLINK

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Xin Long <lucien.xin@gmail.com>
commit ffc2b6ee417435605ee8bb1eb4c8f02e9ff4b4a5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ffc2b6ee.failed

It's safe to remove the setting of dev's needed_headroom and mtu in
__gre_tunnel_init, as discussed in [1], ip_tunnel_newlink can do it
properly.

Now Eric noticed that it could cover the mtu value set in do_setlink
when creating a ip_gre dev. It makes IFLA_MTU param not take effect.

So this patch is to remove them to make IFLA_MTU work, as in other
ipv4 tunnels.

  [1]: https://patchwork.ozlabs.org/patch/823504/

Fixes: c54419321455 ("GRE: Refactor GRE tunneling code.")
	Reported-by: Eric Garver <e@erig.me>
	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ffc2b6ee417435605ee8bb1eb4c8f02e9ff4b4a5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ip_gre.c
diff --cc net/ipv4/ip_gre.c
index 35872faba784,0901de42ed85..000000000000
--- a/net/ipv4/ip_gre.c
+++ b/net/ipv4/ip_gre.c
@@@ -936,7 -1270,38 +933,42 @@@ static const struct net_device_ops gre_
  	.ndo_start_xmit		= gre_tap_xmit,
  	.ndo_set_mac_address 	= eth_mac_addr,
  	.ndo_validate_addr	= eth_validate_addr,
++<<<<<<< HEAD
 +	.ndo_change_mtu_rh74	= ip_tunnel_change_mtu,
++=======
+ 	.ndo_change_mtu		= ip_tunnel_change_mtu,
+ 	.ndo_get_stats64	= ip_tunnel_get_stats64,
+ 	.ndo_get_iflink		= ip_tunnel_get_iflink,
+ 	.ndo_fill_metadata_dst	= gre_fill_metadata_dst,
+ };
+ 
+ static int erspan_tunnel_init(struct net_device *dev)
+ {
+ 	struct ip_tunnel *tunnel = netdev_priv(dev);
+ 	int t_hlen;
+ 
+ 	tunnel->tun_hlen = 8;
+ 	tunnel->parms.iph.protocol = IPPROTO_GRE;
+ 	tunnel->hlen = tunnel->tun_hlen + tunnel->encap_hlen +
+ 		       erspan_hdr_len(tunnel->erspan_ver);
+ 	t_hlen = tunnel->hlen + sizeof(struct iphdr);
+ 
+ 	dev->features		|= GRE_FEATURES;
+ 	dev->hw_features	|= GRE_FEATURES;
+ 	dev->priv_flags		|= IFF_LIVE_ADDR_CHANGE;
+ 	netif_keep_dst(dev);
+ 
+ 	return ip_tunnel_init(dev);
+ }
+ 
+ static const struct net_device_ops erspan_netdev_ops = {
+ 	.ndo_init		= erspan_tunnel_init,
+ 	.ndo_uninit		= ip_tunnel_uninit,
+ 	.ndo_start_xmit		= erspan_xmit,
+ 	.ndo_set_mac_address	= eth_mac_addr,
+ 	.ndo_validate_addr	= eth_validate_addr,
+ 	.ndo_change_mtu		= ip_tunnel_change_mtu,
++>>>>>>> ffc2b6ee4174 (ip_gre: fix IFLA_MTU ignored on NEWLINK)
  	.ndo_get_stats64	= ip_tunnel_get_stats64,
  	.ndo_get_iflink		= ip_tunnel_get_iflink,
  	.ndo_fill_metadata_dst	= gre_fill_metadata_dst,
* Unmerged path net/ipv4/ip_gre.c
