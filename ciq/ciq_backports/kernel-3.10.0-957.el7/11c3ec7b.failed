bnxt_en: Need to include RDMA rings in bnxt_check_rings().

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] bnxt_en: Need to include RDMA rings in bnxt_check_rings() (Jonathan Toppins) [1526120]
Rebuild_FUZZ: 99.13%
commit-author Michael Chan <michael.chan@broadcom.com>
commit 11c3ec7bb940b6fa3f87f05f01b7f45eef08dfbb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/11c3ec7b.failed

With recent changes to reserve both L2 and RDMA rings, we need to include
the RDMA rings in bnxt_check_rings().  Otherwise we will under-estimate
the rings we need during ethtool -L and may lead to failure.

Fixes: fbcfc8e46741 ("bnxt_en: Reserve completion rings and MSIX for bnxt_re RDMA driver.")
	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 11c3ec7bb940b6fa3f87f05f01b7f45eef08dfbb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index ce115696763b,9cb8b4bd7312..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -7523,6 -7656,42 +7523,45 @@@ static void bnxt_sp_task(struct work_st
  	clear_bit(BNXT_STATE_IN_SP_TASK, &bp->state);
  }
  
++<<<<<<< HEAD
++=======
+ /* Under rtnl_lock */
+ int bnxt_check_rings(struct bnxt *bp, int tx, int rx, bool sh, int tcs,
+ 		     int tx_xdp)
+ {
+ 	int max_rx, max_tx, tx_sets = 1;
+ 	int tx_rings_needed;
+ 	int rx_rings = rx;
+ 	int cp, vnics, rc;
+ 
+ 	if (tcs)
+ 		tx_sets = tcs;
+ 
+ 	rc = bnxt_get_max_rings(bp, &max_rx, &max_tx, sh);
+ 	if (rc)
+ 		return rc;
+ 
+ 	if (max_rx < rx)
+ 		return -ENOMEM;
+ 
+ 	tx_rings_needed = tx * tx_sets + tx_xdp;
+ 	if (max_tx < tx_rings_needed)
+ 		return -ENOMEM;
+ 
+ 	vnics = 1;
+ 	if (bp->flags & BNXT_FLAG_RFS)
+ 		vnics += rx_rings;
+ 
+ 	if (bp->flags & BNXT_FLAG_AGG_RINGS)
+ 		rx_rings <<= 1;
+ 	cp = sh ? max_t(int, tx_rings_needed, rx) : tx_rings_needed + rx;
+ 	if (bp->flags & BNXT_FLAG_NEW_RM)
+ 		cp += bnxt_get_ulp_msix_num(bp);
+ 	return bnxt_hwrm_check_rings(bp, tx_rings_needed, rx_rings, rx, cp,
+ 				     vnics);
+ }
+ 
++>>>>>>> 11c3ec7bb940 (bnxt_en: Need to include RDMA rings in bnxt_check_rings().)
  static void bnxt_unmap_bars(struct bnxt *bp, struct pci_dev *pdev)
  {
  	if (bp->bar2) {
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
