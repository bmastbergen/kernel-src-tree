i40e: move I40E_FLAG_UDP_FILTER_SYNC to the state field

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit 41898c66ef02628326827e503c4fd78e71bc13f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/41898c66.failed

This flag is modified during run time, possibly even when the RTNL lock
is not held. Additionally it has a few places which should be using
test_and_set or test_and_clear atomic bit operations.

Create a new state bit __I40E_UDP_SYNC_PENDING and use it instead of the
ole I40E_FLAG_UDP_FILTER_SYNC flag.

This is part of a larger effort to remove the need for using cmpxchg64
in i40e_set_priv_flags.

	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 41898c66ef02628326827e503c4fd78e71bc13f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e.h
diff --cc drivers/net/ethernet/intel/i40e/i40e.h
index 1d5305235e57,f557c3c36080..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e.h
+++ b/drivers/net/ethernet/intel/i40e/i40e.h
@@@ -159,6 -162,8 +159,11 @@@ enum i40e_state_t 
  	__I40E_RESET_FAILED,
  	__I40E_PORT_SUSPENDED,
  	__I40E_VF_DISABLE,
++<<<<<<< HEAD
++=======
+ 	__I40E_MACVLAN_SYNC_PENDING,
+ 	__I40E_UDP_FILTER_SYNC_PENDING,
++>>>>>>> 41898c66ef02 (i40e: move I40E_FLAG_UDP_FILTER_SYNC to the state field)
  	/* This must be last as it determines the size of the BITMAP */
  	__I40E_STATE_SIZE__,
  };
@@@ -461,37 -512,40 +466,74 @@@ struct i40e_pf 
  #define I40E_HW_RESTART_AUTONEG			BIT(18)
  #define I40E_HW_STOPPABLE_FW_LLDP		BIT(19)
  
++<<<<<<< HEAD
 +	u32 flags;
 +#define I40E_FLAG_RX_CSUM_ENABLED		BIT(0)
 +#define I40E_FLAG_MSI_ENABLED			BIT(1)
 +#define I40E_FLAG_MSIX_ENABLED			BIT(2)
 +#define I40E_FLAG_RSS_ENABLED			BIT(3)
 +#define I40E_FLAG_VMDQ_ENABLED			BIT(4)
 +#define I40E_FLAG_FILTER_SYNC			BIT(5)
 +#define I40E_FLAG_SRIOV_ENABLED			BIT(6)
 +#define I40E_FLAG_DCB_CAPABLE			BIT(7)
 +#define I40E_FLAG_DCB_ENABLED			BIT(8)
 +#define I40E_FLAG_FD_SB_ENABLED			BIT(9)
 +#define I40E_FLAG_FD_ATR_ENABLED		BIT(10)
 +#define I40E_FLAG_FD_SB_AUTO_DISABLED		BIT(11)
 +#define I40E_FLAG_FD_ATR_AUTO_DISABLED		BIT(12)
 +#define I40E_FLAG_MFP_ENABLED			BIT(13)
 +#define I40E_FLAG_UDP_FILTER_SYNC		BIT(14)
 +#define I40E_FLAG_HW_ATR_EVICT_ENABLED		BIT(15)
 +#define I40E_FLAG_VEB_MODE_ENABLED		BIT(16)
 +#define I40E_FLAG_VEB_STATS_ENABLED		BIT(17)
 +#define I40E_FLAG_LINK_POLLING_ENABLED		BIT(18)
 +#define I40E_FLAG_TRUE_PROMISC_SUPPORT		BIT(19)
 +#define I40E_FLAG_TEMP_LINK_POLLING		BIT(20)
 +#define I40E_FLAG_LEGACY_RX			BIT(21)
 +#define I40E_FLAG_PTP				BIT(22)
 +#define I40E_FLAG_IWARP_ENABLED			BIT(23)
 +#define I40E_FLAG_SERVICE_CLIENT_REQUESTED	BIT(24)
 +#define I40E_FLAG_CLIENT_L2_CHANGE		BIT(25)
 +#define I40E_FLAG_CLIENT_RESET			BIT(26)
 +#define I40E_FLAG_LINK_DOWN_ON_CLOSE_ENABLED	BIT(27)
 +#define I40E_FLAG_SOURCE_PRUNING_DISABLED	BIT(28)
 +#define I40E_FLAG_TC_MQPRIO			BIT(29)
++=======
+ 	u64 flags;
+ #define I40E_FLAG_RX_CSUM_ENABLED		BIT_ULL(0)
+ #define I40E_FLAG_MSI_ENABLED			BIT_ULL(1)
+ #define I40E_FLAG_MSIX_ENABLED			BIT_ULL(2)
+ #define I40E_FLAG_RSS_ENABLED			BIT_ULL(3)
+ #define I40E_FLAG_VMDQ_ENABLED			BIT_ULL(4)
+ /* Gap for BIT_ULL(5) */
+ #define I40E_FLAG_SRIOV_ENABLED			BIT_ULL(6)
+ #define I40E_FLAG_DCB_CAPABLE			BIT_ULL(7)
+ #define I40E_FLAG_DCB_ENABLED			BIT_ULL(8)
+ #define I40E_FLAG_FD_SB_ENABLED			BIT_ULL(9)
+ #define I40E_FLAG_FD_ATR_ENABLED		BIT_ULL(10)
+ #define I40E_FLAG_FD_SB_AUTO_DISABLED		BIT_ULL(11)
+ #define I40E_FLAG_FD_ATR_AUTO_DISABLED		BIT_ULL(12)
+ #define I40E_FLAG_MFP_ENABLED			BIT_ULL(13)
+ /* Gap for BIT_ULL(14) */
+ #define I40E_FLAG_HW_ATR_EVICT_ENABLED		BIT_ULL(15)
+ #define I40E_FLAG_VEB_MODE_ENABLED		BIT_ULL(16)
+ #define I40E_FLAG_VEB_STATS_ENABLED		BIT_ULL(17)
+ #define I40E_FLAG_LINK_POLLING_ENABLED		BIT_ULL(18)
+ #define I40E_FLAG_TRUE_PROMISC_SUPPORT		BIT_ULL(19)
+ #define I40E_FLAG_TEMP_LINK_POLLING		BIT_ULL(20)
+ #define I40E_FLAG_LEGACY_RX			BIT_ULL(21)
+ #define I40E_FLAG_PTP				BIT_ULL(22)
+ #define I40E_FLAG_IWARP_ENABLED			BIT_ULL(23)
+ #define I40E_FLAG_SERVICE_CLIENT_REQUESTED	BIT_ULL(24)
+ #define I40E_FLAG_CLIENT_L2_CHANGE		BIT_ULL(25)
+ #define I40E_FLAG_CLIENT_RESET			BIT_ULL(26)
+ #define I40E_FLAG_LINK_DOWN_ON_CLOSE_ENABLED	BIT_ULL(27)
+ #define I40E_FLAG_SOURCE_PRUNING_DISABLED	BIT_ULL(28)
+ #define I40E_FLAG_TC_MQPRIO			BIT_ULL(29)
+ #define I40E_FLAG_FD_SB_INACTIVE		BIT_ULL(30)
+ #define I40E_FLAG_FD_SB_TO_CLOUD_FILTER		BIT_ULL(31)
+ #define I40E_FLAG_DISABLE_FW_LLDP		BIT_ULL(32)
++>>>>>>> 41898c66ef02 (i40e: move I40E_FLAG_UDP_FILTER_SYNC to the state field)
  
  	struct i40e_client_instance *cinst;
  	bool stat_offsets_loaded;
* Unmerged path drivers/net/ethernet/intel/i40e/i40e.h
diff --git a/drivers/net/ethernet/intel/i40e/i40e_main.c b/drivers/net/ethernet/intel/i40e/i40e_main.c
index 9299aa15ffea..d85809adbc70 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@ -8822,7 +8822,7 @@ static void i40e_sync_udp_filters(struct i40e_pf *pf)
 			pf->pending_udp_bitmap |= BIT_ULL(i);
 	}
 
-	pf->flags |= I40E_FLAG_UDP_FILTER_SYNC;
+	set_bit(__I40E_UDP_FILTER_SYNC_PENDING, pf->state);
 }
 
 /**
@@ -8836,11 +8836,9 @@ static void i40e_sync_udp_filters_subtask(struct i40e_pf *pf)
 	u16 port;
 	int i;
 
-	if (!(pf->flags & I40E_FLAG_UDP_FILTER_SYNC))
+	if (!test_and_clear_bit(__I40E_UDP_FILTER_SYNC_PENDING, pf->state))
 		return;
 
-	pf->flags &= ~I40E_FLAG_UDP_FILTER_SYNC;
-
 	for (i = 0; i < I40E_MAX_PF_UDP_OFFLOAD_PORTS; i++) {
 		if (pf->pending_udp_bitmap & BIT_ULL(i)) {
 			pf->pending_udp_bitmap &= ~BIT_ULL(i);
@@ -10501,7 +10499,7 @@ static void i40e_udp_tunnel_add(struct net_device *netdev,
 	/* New port: add it and mark its index in the bitmap */
 	pf->udp_ports[next_idx].port = port;
 	pf->pending_udp_bitmap |= BIT_ULL(next_idx);
-	pf->flags |= I40E_FLAG_UDP_FILTER_SYNC;
+	set_bit(__I40E_UDP_FILTER_SYNC_PENDING, pf->state);
 }
 
 /**
@@ -10542,7 +10540,7 @@ static void i40e_udp_tunnel_del(struct net_device *netdev,
 	 */
 	pf->udp_ports[idx].port = 0;
 	pf->pending_udp_bitmap |= BIT_ULL(idx);
-	pf->flags |= I40E_FLAG_UDP_FILTER_SYNC;
+	set_bit(__I40E_UDP_FILTER_SYNC_PENDING, pf->state);
 
 	return;
 not_found:
