net: ipmr: make ip_mroute_getsockopt more understandable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] ipmr: make ip_mroute_getsockopt more understandable (Ivan Vecera) [1584232]
Rebuild_FUZZ: 95.33%
commit-author Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
commit fe9ef3ce395d06e4f17e5995ab8455b9627f3306
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/fe9ef3ce.failed

Use a switch to determine if optname is correct and set val accordingly.
This produces a much more straight-forward and readable code.

	Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fe9ef3ce395d06e4f17e5995ab8455b9627f3306)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ipmr.c
diff --cc net/ipv4/ipmr.c
index cacb0d4bd4b6,694fecf7838e..000000000000
--- a/net/ipv4/ipmr.c
+++ b/net/ipv4/ipmr.c
@@@ -1445,33 -1440,32 +1445,59 @@@ int ip_mroute_getsockopt(struct sock *s
  		return -EOPNOTSUPP;
  
  	mrt = ipmr_get_table(net, raw_sk(sk)->ipmr_table ? : RT_TABLE_DEFAULT);
 -	if (!mrt)
 +	if (mrt == NULL)
  		return -ENOENT;
  
++<<<<<<< HEAD
 +	if (optname != MRT_VERSION &&
 +#ifdef CONFIG_IP_PIMSM
 +	   optname != MRT_PIM &&
 +#endif
 +	   optname != MRT_ASSERT)
 +		return -ENOPROTOOPT;
 +
 +	if (get_user(olr, optlen))
 +		return -EFAULT;
 +
 +	olr = min_t(unsigned int, olr, sizeof(int));
 +	if (olr < 0)
 +		return -EINVAL;
 +
 +	if (put_user(olr, optlen))
 +		return -EFAULT;
 +	if (optname == MRT_VERSION)
 +		val = 0x0305;
 +#ifdef CONFIG_IP_PIMSM
 +	else if (optname == MRT_PIM)
 +		val = mrt->mroute_do_pim;
 +#endif
 +	else
 +		val = mrt->mroute_do_assert;
++=======
+ 	switch (optname) {
+ 	case MRT_VERSION:
+ 		val = 0x0305;
+ 		break;
+ 	case MRT_PIM:
+ 		if (!pimsm_enabled())
+ 			return -ENOPROTOOPT;
+ 		val = mrt->mroute_do_pim;
+ 		break;
+ 	case MRT_ASSERT:
+ 		val = mrt->mroute_do_assert;
+ 		break;
+ 	default:
+ 		return -ENOPROTOOPT;
+ 	}
+ 
+ 	if (get_user(olr, optlen))
+ 		return -EFAULT;
+ 	olr = min_t(unsigned int, olr, sizeof(int));
+ 	if (olr < 0)
+ 		return -EINVAL;
+ 	if (put_user(olr, optlen))
+ 		return -EFAULT;
++>>>>>>> fe9ef3ce395d (net: ipmr: make ip_mroute_getsockopt more understandable)
  	if (copy_to_user(optval, &val, olr))
  		return -EFAULT;
  	return 0;
* Unmerged path net/ipv4/ipmr.c
