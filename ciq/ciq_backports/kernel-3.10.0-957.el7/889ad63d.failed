drm/qxl: Call qxl_bo_unref outside atomic context

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jeremy Cline <jcline@redhat.com>
commit 889ad63d41eea20184b0483e7e585e5b20fb6cfe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/889ad63d.failed

"qxl_bo_unref" may sleep, but calling "qxl_release_map" causes
"preempt_disable()" to be called and "preempt_enable()" isn't called
until "qxl_release_unmap" is used. Move the call to "qxl_bo_unref" out
from in between the two to avoid sleeping from an atomic context.

This issue can be demonstrated on a kernel with CONFIG_LOCKDEP=y by
creating a VM using QXL, using a desktop environment using Xorg, then
moving the cursor on or off a window.

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1571128
Fixes: 9428088c90b6 ("drm/qxl: reapply cursor after resetting primary")
	Cc: stable@vger.kernel.org
	Signed-off-by: Jeremy Cline <jcline@redhat.com>
Link: http://patchwork.freedesktop.org/patch/msgid/20180601200532.13619-1-jcline@redhat.com
	Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
(cherry picked from commit 889ad63d41eea20184b0483e7e585e5b20fb6cfe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/qxl/qxl_display.c
diff --cc drivers/gpu/drm/qxl/qxl_display.c
index 4756b3c9bf2c,61e51516fec5..000000000000
--- a/drivers/gpu/drm/qxl/qxl_display.c
+++ b/drivers/gpu/drm/qxl/qxl_display.c
@@@ -575,7 -630,7 +575,11 @@@ static void qxl_cursor_atomic_update(st
  	struct qxl_cursor_cmd *cmd;
  	struct qxl_cursor *cursor;
  	struct drm_gem_object *obj;
++<<<<<<< HEAD
 +	struct qxl_bo *cursor_bo, *user_bo = NULL;
++=======
+ 	struct qxl_bo *cursor_bo = NULL, *user_bo = NULL, *old_cursor_bo = NULL;
++>>>>>>> 889ad63d41ee (drm/qxl: Call qxl_bo_unref outside atomic context)
  	int ret;
  	void *user_ptr;
  	int size = 64*64*4;
@@@ -628,6 -683,10 +632,13 @@@
  		cmd->u.set.shape = qxl_bo_physical_address(qdev,
  							   cursor_bo, 0);
  		cmd->type = QXL_CURSOR_SET;
++<<<<<<< HEAD
++=======
+ 
+ 		old_cursor_bo = qcrtc->cursor_bo;
+ 		qcrtc->cursor_bo = cursor_bo;
+ 		cursor_bo = NULL;
++>>>>>>> 889ad63d41ee (drm/qxl: Call qxl_bo_unref outside atomic context)
  	} else {
  
  		ret = qxl_release_reserve_list(release, true);
@@@ -645,6 -704,11 +656,14 @@@
  	qxl_push_cursor_ring_release(qdev, release, QXL_CMD_CURSOR, false);
  	qxl_release_fence_buffer_objects(release);
  
++<<<<<<< HEAD
++=======
+ 	if (old_cursor_bo)
+ 		qxl_bo_unref(&old_cursor_bo);
+ 
+ 	qxl_bo_unref(&cursor_bo);
+ 
++>>>>>>> 889ad63d41ee (drm/qxl: Call qxl_bo_unref outside atomic context)
  	return;
  
  out_backoff:
* Unmerged path drivers/gpu/drm/qxl/qxl_display.c
