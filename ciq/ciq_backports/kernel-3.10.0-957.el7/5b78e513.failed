iio:kfifo: Empty buffer on update

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [iio] kfifo: Empty buffer on update (Tony Camuso) [1559170]
Rebuild_FUZZ: 93.55%
commit-author Lars-Peter Clausen <lars@metafoo.de>
commit 5b78e5138e6a636d00fea08514bfc5a2ff5dfb15
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/5b78e513.failed

The kfifo's request_update callback will free the current buffer and allocate a
new one if the size has changed. This will remove any samples that might still
be left in the buffer. If the size has not changed the buffer content is
left untouched though. This is a bit inconsistent and might cause an application
to see data from a previous capture. This patch inserts a call to
kfifo_reset_out() when the size did not change. This makes sure that any pending
samples are removed from the buffer.

Note, due to a different bug the buffer is currently always re-allocated, even
if the size did not change. So this patch will not change the behavior. In the
next patch the bug will be fixed and this patch makes sure that the current
behavior is kept.

	Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
	Signed-off-by: Jonathan Cameron <jic23@kernel.org>
(cherry picked from commit 5b78e5138e6a636d00fea08514bfc5a2ff5dfb15)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iio/kfifo_buf.c
diff --cc drivers/iio/kfifo_buf.c
index 1bea41bcbdc6,d654f42e16aa..000000000000
--- a/drivers/iio/kfifo_buf.c
+++ b/drivers/iio/kfifo_buf.c
@@@ -32,13 -33,17 +32,28 @@@ static int iio_request_update_kfifo(str
  	int ret = 0;
  	struct iio_kfifo *buf = iio_to_kfifo(r);
  
++<<<<<<< HEAD
 +	if (!buf->update_needed)
 +		goto error_ret;
 +	kfifo_free(&buf->kf);
 +	ret = __iio_allocate_kfifo(buf, buf->buffer.bytes_per_datum,
++=======
+ 	mutex_lock(&buf->user_lock);
+ 	if (buf->update_needed) {
+ 		kfifo_free(&buf->kf);
+ 		ret = __iio_allocate_kfifo(buf, buf->buffer.bytes_per_datum,
++>>>>>>> 5b78e5138e6a (iio:kfifo: Empty buffer on update)
  				   buf->buffer.length);
+ 	} else {
+ 		kfifo_reset_out(&buf->kf);
+ 	}
  	r->stufftoread = false;
++<<<<<<< HEAD
 +error_ret:
++=======
+ 	mutex_unlock(&buf->user_lock);
+ 
++>>>>>>> 5b78e5138e6a (iio:kfifo: Empty buffer on update)
  	return ret;
  }
  
* Unmerged path drivers/iio/kfifo_buf.c
