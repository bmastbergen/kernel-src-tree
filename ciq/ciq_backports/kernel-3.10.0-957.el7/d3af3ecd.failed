nvme: allocate nvme_queue in correct node

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] allocate nvme_queue in correct node (David Milburn) [1515584]
Rebuild_FUZZ: 92.11%
commit-author Shaohua Li <shli@fb.com>
commit d3af3ecdc62c46fa67ce7a681f173acb1d750e33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d3af3ecd.failed

nvme_queue is per-cpu queue (mostly). Allocating it in node where blk-mq
will use it.

	Signed-off-by: Shaohua Li <shli@fb.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit d3af3ecdc62c46fa67ce7a681f173acb1d750e33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index fa50cb022418,eee8f8426ff2..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -1388,8 -1310,10 +1390,15 @@@ static int nvme_create_io_queues(struc
  	unsigned i, max;
  	int ret = 0;
  
++<<<<<<< HEAD
 +	for (i = dev->ctrl.queue_count; i <= dev->max_qid; i++) {
 +		if (!nvme_alloc_queue(dev, i, dev->q_depth)) {
++=======
+ 	for (i = dev->queue_count; i <= dev->max_qid; i++) {
+ 		/* vector == qid - 1, match nvme_create_queue */
+ 		if (!nvme_alloc_queue(dev, i, dev->q_depth,
+ 		     pci_irq_get_node(to_pci_dev(dev->dev), i - 1))) {
++>>>>>>> d3af3ecdc62c (nvme: allocate nvme_queue in correct node)
  			ret = -ENOMEM;
  			break;
  		}
* Unmerged path drivers/nvme/host/pci.c
