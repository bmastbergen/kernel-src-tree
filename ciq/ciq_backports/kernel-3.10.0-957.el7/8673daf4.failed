qedf: Add get_generic_tlv_data handler.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] qedf: Add get_generic_tlv_data handler (Chad Dupuis) [1590824]
Rebuild_FUZZ: 98.70%
commit-author Chad Dupuis <chad.dupuis@cavium.com>
commit 8673daf4f55bf3b918dec78aee2132d191225106
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/8673daf4.failed

	Signed-off-by: Chad Dupuis <chad.dupuis@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8673daf4f55bf3b918dec78aee2132d191225106)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qedf/qedf.h
diff --cc drivers/scsi/qedf/qedf.h
index 69cc65914b53,cabb6af60fb8..000000000000
--- a/drivers/scsi/qedf/qedf.h
+++ b/drivers/scsi/qedf/qedf.h
@@@ -506,7 -503,7 +506,11 @@@ extern void qedf_process_seq_cleanup_co
  extern int qedf_send_flogi(struct qedf_ctx *qedf);
  extern void qedf_get_protocol_tlv_data(void *dev, void *data);
  extern void qedf_fp_io_handler(struct work_struct *work);
++<<<<<<< HEAD
 +extern void qedf_wq_grcdump(struct work_struct *work);
++=======
+ extern void qedf_get_generic_tlv_data(void *dev, struct qed_generic_tlvs *data);
++>>>>>>> 8673daf4f55b (qedf: Add get_generic_tlv_data handler.)
  
  #define FCOE_WORD_TO_BYTE  4
  #define QEDF_MAX_TASK_NUM	0xFFFF
* Unmerged path drivers/scsi/qedf/qedf.h
diff --git a/drivers/scsi/qedf/qedf_main.c b/drivers/scsi/qedf/qedf_main.c
index 1d42afadae5c..8c2a89f0dd55 100644
--- a/drivers/scsi/qedf/qedf_main.c
+++ b/drivers/scsi/qedf/qedf_main.c
@@ -598,6 +598,7 @@ static struct qed_fcoe_cb_ops qedf_cb_ops = {
 	{
 		.link_update = qedf_link_update,
 		.dcbx_aen = qedf_dcbx_handler,
+		.get_generic_tlv_data = qedf_get_generic_tlv_data,
 		.get_protocol_tlv_data = qedf_get_protocol_tlv_data,
 	}
 };
@@ -3550,6 +3551,22 @@ void qedf_get_protocol_tlv_data(void *dev, void *data)
 	fcoe->scsi_tsk_full = qedf->task_set_fulls;
 }
 
+/* Generic TLV data callback */
+void qedf_get_generic_tlv_data(void *dev, struct qed_generic_tlvs *data)
+{
+	struct qedf_ctx *qedf;
+
+	if (!dev) {
+		QEDF_INFO(NULL, QEDF_LOG_EVT,
+			  "dev is NULL so ignoring get_generic_tlv_data request.\n");
+		return;
+	}
+	qedf = (struct qedf_ctx *)dev;
+
+	memset(data, 0, sizeof(struct qed_generic_tlvs));
+	ether_addr_copy(data->mac[0], qedf->mac);
+}
+
 /*
  * Module Init/Remove
  */
