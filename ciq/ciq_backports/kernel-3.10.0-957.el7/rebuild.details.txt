Rebuild_History BUILDABLE
Rebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v3.10~1..master: 848130
Number of commits in rpm: 10138
Number of commits matched with upstream: 9728 (95.96%)
Number of commits in upstream but not in rpm: 838578
Number of commits NOT found in upstream: 410 (4.04%)

Rebuilding Kernel on Branch centos7_rebuild_kernel-3.10.0-957.el7 for kernel-3.10.0-957.el7
Clean Cherry Picks: 5867 (60.31%)
Empty Cherry Picks: 3570 (36.70%)
_______________________________

__EMPTY COMMITS__________________________
da4ae6c4a0b8dee5a5377a385545d2250fa8cddb x86/tsc: Future-proof native_calibrate_tsc()
4b5b2127238e689ee18aa6752959751dd61c4c73 x86/tsc: Print tsc_khz, when it differs from cpu_khz
b511203093489eb1829cb4de86e8214752205ac6 x86/tsc: Fix erroneous TSC rate on Skylake Xeon
ce279cdc04aafd5c41ae49f941ee2c3342e35e3e x86/apic: Split out restore_boot_irq_mode() from disable_IO_APIC()
3c9e76dbea004b2c7c3ce872022ceaf5ff0dae79 x86/apic: Split disable_IO_APIC() into two functions to fix CONFIG_KEXEC_JUMP=y
50374b96d2d30c03c8d42b3f8846d8938748d454 x86/apic: Remove the (now) unused disable_IO_APIC() function
295cc7eb314eb3321fb6d67ca6f7305f5c50d10f x86/smpboot: Fix uncore_pci_remove() indexing bug when hot-removing a physical CPU
191eccb1580939fb0d47deb405b82a85b0379070 powerpc/pseries: Add H_GET_CPU_CHARACTERISTICS flags & wrapper
582605a429e20ae68fd0b041b2e840af296edd08 powerpc/pseries: Support firmware disable of RFI flush
b4b591c87f2b0f4ebaf3a68d4f13873b241aa584 nvme-rdma: don't suppress send completions
2f122e4f5107cf8ab0e592d63ed816a00110b4fe nvme-rdma: wait for local invalidation before completing a request
3ef0279bb0031f67537bd8972899a6a23d3064d7 nvme-rdma: Check remotely invalidated rkey matches our expected rkey
c4f24df942a181699c5bab01b8e5e82b925f77f3 NFS: Fix unstable write completion
7374fbd9e167ddc4f380d056ca74518be5d45518 RDMA/bnxt_re: Avoid system hang during device un-reg
942c9b6ca8de5b7ad675e9b2e0e964449c10c18a RDMA/bnxt_re: Avoid Hard lockup during error CQE processing
2956f36c954ee6e31068a02cf2ca551efa5235f1 crypto: chelsio - Remove allocation of sg list to implement 2K limit of dsgl header
238501027abf0386fa5f5dcaf589f406eb187bc3 bcache: remove unused parameter
2f47d58043110b0aeac1952494db668fc0fc7c0a crypto: chelsio - Move DMA un/mapping to chcr from lld cxgb4 driver
9e429d564926d3bca49907fa03031da705ad6f2c HID: wacom: generic: Send BTN_STYLUS3 when both barrel switches are set
403c0f681c1964ff1db8c2fb8de8c4067779d081 HID: wacom: Fix reporting of touch toggle (WACOM_HID_WD_MUTE_DEVICE) events
d5078193e56bb24f4593f00102a3b5e07bb84ee0 ALSA: hda - Fix a wrong FIXUP for alc289 on Dell machines
79aa801e899417a56863d6713f76c4e108856000 PCI: hv: Use effective affinity mask
9c3b2689d01ff03e2b8e8d47538881dbff756d78 drm/i915/cnl: Map VBT DDC Pin to BSpec DDC Pin.
fb1f5f79ae96331a0201b4080d34f3bc3b5c0b1d net: Introduce NETIF_F_GRO_HW.
d61d072e87c8ee4938b2517818e7b6498923d6a4 net-gro: avoid reorders
b00f543240b9423eda73ad06c57becdd5478bc26 ip6_tunnel: process toobig in a better way
77552cfa39c48e695c39d0553afc8c6018e411ce ip6_tunnel: clean up ip4ip6 and ip6ip6's err_handlers
7892032cfe67f4bde6fc2ee967e45a8fbaf33756 ip6_gre: fix ip6gre_err() invalid reads
929fc0327569aa745c9c3cb68a213c22fad3f3f9 ip6_gre: add the process for redirect in ip6gre_err
a6aa80446234ec0ad38eecdb8efc59e91daae565 ip6_tunnel: fix IFLA_MTU ignored on NEWLINK
b6dc01a43aaca24e6e6928e24d9b37ba599f1e3c l2tp: do data sequence number handling in a separate func
8a1631d588a39e826f4248e60310498d5266c6fa l2tp: make datapath sequence number support RFC-compliant
a0dbd822273ce7660bf35525d61d7a8ac5e679a3 l2tp: make datapath resilient to packet loss when sequence numbers enabled
9ff97fa8db94caeab59a3c5401e975df468b4d8e scsi: megaraid_sas: Do not use 32-bit atomic request descriptor for Ventura controllers
40114bde9773ccaf9ad77233ac2cc9039f0f2941 scsi: mpt3sas: Do not use 32-bit atomic request descriptor for Ventura controllers.
f660174e8bcdb2bf99129f9f7c86e5fc0e830f85 blk-mq: use the introduced blk_mq_unquiesce_queue()
f4560ffe8cec1361b1021d81aca6a4173f8e7c87 blk-mq: use QUEUE_FLAG_QUIESCED to quiesce queue
1d9e9bc6b56e1bb7e33e7e2e1b99d7088356c006 blk-mq: don't stop queue for quiescing
39a70c76b89b81db91a72a86b6c6a9b239013417 blk-mq: clarify dispatch may not be drained/blocked by stopping queue
852ec80983d682dc08a0573d37eeaa9814c4f6b1 blk-mq: Make it safe to quiesce and unquiesce from an interrupt handler
f9c5af5f8ff14a31468546b9b1a876d537019e9a nvme-fc: quiesce/unquiesce admin_q instead of start/stop its hw queues
7db814465395f3196ee98c8bd40d214d63e4f708 nvme-rdma: fix possible hang when issuing commands during ctrl removal
48832f8d58cfedb2f9bee11bbfbb657efb42e7e7 nvme-fabrics: introduce init command check for a queue that is not alive
9e0ed16ab9a9aaf670b81c9cd05b5e50defed654 nvme-fc: check if queue is ready in queue_rq
0fd997d3f77296522e836f7002e8a0636c9886aa nvme-fc: correct hang in nvme_ns_remove()
abebfbe2f7315dd3ec9a0c69596a76e32beb5749 dm: add ->flush() dax operation support
6e0c90d691cd5d90569f5918ab03eb76c81f9c6e libnvdimm, pmem, dax: export a cache control attribute
4e4f00a9b51a1c52ebdd728a1caeb3b9fe48c39d x86, dax, libnvdimm: remove wb_cache_pmem() indirection
c3ca015fab6df124c933b91902f3f2a3473f9da5 dax: remove the pmem_dax_ops->flush abstraction
f5705aa8cfed142d980ecac12bee0d81b756479e dax, xfs, ext4: compile out iomap-dax paths in the FS_DAX=n case
78f35473508118df5ea04b9515ac3f1aaec0a980 dax: introduce a fs_dax_get_by_bdev() helper
486aff5e04823bb1e60c4045226eb244024b8420 xfs: perform dax_device lookup at mount
5e405595e5bf4c09fab9ca1e7dbe5b62872757b5 ext4: perform dax_device lookup at mount
26f2f4de0bd93cbe891e11307d9e4906253bfda8 dax: fix FS_DAX=n BLOCK=y compilation
2a38e12053b760a8f5e85030eb89512660077c15 [SMB3] Remove ifdef since SMB3 (and later) now STRONGLY preferred
9764c02fcbad40001fd3f63558d918e4d519bb75 SMB3: Add support for multidialect negotiate (SMB2.1 and later)
590d08d3da45e9fed423b08ab38d71886c07abc8 SMB3: Fix endian warning
06e2290844fa408d3295ac03a1647f0798518ebe Fix encryption labels and lengths for SMB3.1.1
41f53350a0f36a7b8e31bec0d0ca907e028ab4cd nfsd: special case truncates some more
187372a3b9faff68ed61c291d0135e6739e0dbdf direct-io: always call ->end_io if non-NULL
74c66bcb7eda551f3b8588659c58fe29184af903 ext4: Fix data exposure after failed AIO DIO
28f26ac7a963901106b64307bc1c93068331a008 ipmi: Dynamically fetch GUID periodically
b2cfd8ab4add53c2070367bfee2f5b738f51698d ipmi: Rework device id and guid handling to catch changing BMCs
c0734bd594d43a28afcbe476bbf0d35a5bbffa4c ipmi: Retry BMC registration on a failure
31b0b0730ad2a813bf6b01c5f1f3629c09c73466 ipmi: Rescan channel list on BMC changes
3fd32f9ec84f57ff6d86e762012d7626a9b31124 ipmi: Convert IPMI GUID over to Linux guid_t
910840f24bb7f9ea80fce4073445329becfdcb58 ipmi_si: Move some platform data into the io structure
4f3e8199c34dda46b6554191fe7a444dd6fa911f ipmi_si: Move irq setup handling into the io struct
e1eeb7f8620733fe9f6640eef48d449b925b3c23 ipmi_si: Move io setup into io structure
bb398a4cb09a0ed96cf0fc2e90012cf6bf13a824 ipmi_si: Change ipmi_si_add_smi() to take just I/O info
44814ec982d2905d50fe4d0cdaf693b76afe7f64 ipmi_si: Move the hotmod handling to another file.
7a4533087ccbf736396bcbf816e0e45266c4313b ipmi_si: Move hardcode handling to a separate file.
9d70029edbbf23474e022ac77700269807d64b0d ipmi_si: Move platform device handling to another file
13d0b35c5c201e8e6ee520b223c88f58d022a37f ipmi_si: Move PCI setup to another file
c6f85a753df858018b063f5ab89b277179c3387f ipmi_si: Move PARISC handling to another file
d1a6791323b810ce9136a58d95c6e0e455313388 ipmi_si: Get rid of unused spacing and port fields
58e2763553cb837b879d4a2934094e152e7daf27 ipmi_si: Move port and mem I/O handling to their own files
67f4fb025d8e2189f91f6ccfc8f62f76f56f889d ipmi_si: remove ipmi_smi_alloc() function
3dd377b5b07707c1a37e9129b36eaa1a86ccf9cf ipmi_si: Add device attrs for the things in proc
55f91cb6f1dfc873359674f35a8ffb1e78429d22 ipmi: Make the IPMI proc interface configurable
95e300c052fd9dbb05f289a912c138ed03320ec5 ipmi: Make the DMI probe into a generic platform probe
106a846102b86a55359afaeec9b424928db7259c ipmi: Clean up some print operations
4f7f5551a760eb0124267be65763008169db7087 ipmi: Stop timers before cleaning up the module
1ac8aa8d0568606485451ea860a6c6c3fad0d42d ipmi_si: Fix oops with PCI devices
51614b26a029515dd3bc43a8c0e16a9ee51bbf52 ipmi_si: fix crash on parisc
4147c2fd9b12ae1e0bdbb2dbb9a9163c94a10a22 PCI: Open-code the two pass loop when scanning bridges
1c02ea81006548a5cd55f7ac6df77cf8d7b08e00 PCI: Distribute available buses to hotplug-capable bridges
89ee9f7680031d7df91a1a27abac69e034c2e892 PCI: Add device disconnected state
451ef1caa8698511bb7766344ccec9f08d5d294b init.h: Update initcall_sync variants to fix build errors
538d7eb86d58b3d7d73f3bb3ff960c4bdf411c1a drivers/platform/x86/wmi.c: use generic UUID library
844af950da946cfab227a04b950614da04cb6275 platform/x86: wmi: Turn WMI into a bus driver
a1c31bcd5772b13b39b028126fa9de918c36cf26 platform/x86: wmi: Fix error handling when creating devices
d79b10740210c6c686a9256b801e08f7679e04e2 platform/x86: wmi: Split devices into types and add basic sysfs attributes
d4fc91adfde11c41295d1cf001bdbec5d6879016 platform/x86: wmi: Probe data objects for read and write capabilities
6ee50aaa9a20c7c11c964c249440857ab58ece36 platform/x86: wmi: Instantiate all devices before adding them
1686f5444546c3b53547aa8736afcf05833ed31a platform/x86: wmi: Incorporate acpi_install_notify_handler
56a370259db4f6204d3514431d1629e0a7135b53 platform/x86: wmi: Add a new interface to read block data
9599ed919f9bc42ea0bdd49745bc8451019e0447 platform/x86: wmi: Bind the platform device, not the ACPI node
f63019861cd1192e546397b13f926876a93450fd platform/x86: wmi: Add an interface for subdrivers to access sibling devices
fd70da6a6267c91fbdda9c560f098cfd52fba00f platform/x86: wmi: Require query for data blocks, rename writable to setable
2c9c56645f46c6be4e3303cf1dd25d69c674d293 platform/x86: wmi*: Add recent copyright statements
972777171f33f9932f51feebe42dbcc1b475d01a platform/x86: wmi: Fix error handling in acpi_wmi_init()
303d1fcc0bf07129bc05a61632fad9f7064b671f platform/x86: wmi: Cleanup exit routine in reverse order of init
7b11e8989618581bc0226ad313264cdc05d48d86 platform/x86: wmi: Destroy on cleanup rather than unregister
722c856d46c6ca74a246b54a72f14751fec01aae platform/x86: wmi: Add new method wmidev_evaluate_method
f97e058cfe8032504e310bd5c20e35d640ef2858 platform/x86: wmi: Don't allow drivers to get each other's GUIDs
44b6b7661132b1b0e5fd3147ded66f1e4a817ca9 platform/x86: wmi: create userspace interface for drivers
5e3e22971fb0b0d7d03286f1a619d0348748a243 platform/x86: wmi: release mutex on module acquistion failure
6e1d8ea90932f77843730ada0bfea63093b7212a platform/x86: wmi: fix off-by-one write in wmi_dev_probe()
501f7e52de8a7b910154740958ce8d902258bf72 platform/x86: wmi: Fix misuse of vsprintf extension %pULL
bff589be59c50924a9715951160578e570cba5c6 platform/x86: dell-wmi: Convert to the WMI bus infrastructure
baa5480b0509d8af06c37fff03edbb5a6815cef1 platform/x86: dell-wmi: Fix driver interface version query
00ebbeb39b70072cc0d0acad32c47e4660eb84e7 platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model
d0bf42d83e9492ffc80108b0913f596dbbd220c0 platform/x86: dell-wmi: increase severity of some failures
7e6dcbebcbc5d8cd7d9e564d9cfbf523c2fbcb68 platform/x86: dell-wmi: clean up wmi descriptor check
fa9f924c7ff95f9299e11657c4441288d7f01dbd platform/x86: dell-wmi: don't check length returned
92b8c540bce7b1662212dff35f503f5b1266725b platform/x86: dell-wmi-descriptor: split WMI descriptor into it's own driver
8b9528a6d9a901b9f933231505fef5630e80ce5a platform/x86: dell-wmi-descriptor: check if memory was allocated
842b854459462a6065d3595f8485601800bbf5d3 platform/x86: dell-wmi: Add an event created by Dell Latitude 5495
7a7415659144a4636a2f04f432393fa36dcc1b80 nfp: implement firmware flashing
3c8b3efc061a745d888869dc3462ac4f7dd582d9 vmxnet3: allow variable length transmit data ring buffer
50a5ce3e7116a70edb7a1d1d209e3bc537752427 vmxnet3: add receive data ring support
7475908fbe5d9e669c40d9a4ceee6d4c4fedbbdc vmxnet3: increase default rx ring sizes
7a4c003d6921e2af215f4790aa43a292bdc78be0 vmxnet3: avoid xmit reset due to a race in vmxnet3
034f405793897a3c8f642935f5494b86c340cde7 vmxnet3: use correct flag to indicate LRO feature
f10b09ef687f3134c26027d2a38a9d4cd3bb9cb7 ibmvnic: Handle TSO backing device errata
6cf08d1c50872acb6c8400567b1df2d02a03e58d e1000e: Cleanup to fix checkpatch missing blank lines
b701cacdbcfb65a5ba38d9d4121c12a0a4eaa01a e1000e: Set HTHRESH when PTHRESH is used
745d0bd3af99ccc8c5f5822f808cd133eadad6ac e1000e: Remove Other from EIAC
1f0ea19722ef9dfa229a9540f70b8d1c34a98a6a Partial revert "e1000e: Avoid receiver overrun interrupt bursts"
361a954e6a7215de11a6179ad9bdc07d7e394b04 e1000e: Fix queue interrupt re-raising in Other interrupt
116f4a640b3197401bc93b8adc6c35040308ceff e1000e: Avoid missed interrupts following ICR read
183dea5818315c0a172d21ecbcd2554894bf01e3 openvswitch: do not propagate headroom updates to internal port
07f2c7ab6f8d0a7e7c5764c4e6cc9c52951b9d9c sctp: verify size of a new chunk in _sctp_make_chunk()
b84f78782052ee4516903e5d0566a5eee365b771 net: Initialize flow flags in input path
4cfc86f3dae6ca38ed49cdd78f458a03d4d87992 ipv4: initialize flowi4_flags before calling fib_lookup()
ccc7f4968a18b980994e622006b84e0195754390 net: print net_device reg_state in netdev_* unless it's registered
e1cfe3d0eb0430f4fb849ef606fb095b6e149853 net: No line break on netdev_WARN* formatting
b2504a5dbef3305ef41988ad270b0e8ec289331c net: reduce skb_warn_bad_offload() noise
2cb5c8e378d10a57aa1c9eaee36bea46c27dd2b9 sctp: Add peeloff-flags socket option
b1f5bfc27a19f214006b9b4db7b9126df2dfdf5a sctp: don't dereference ptr before leaving _sctp_walk_{params, errors}()
6b84202c946cd3da3a8daa92c682510e9ed80321 sctp: fix the check for _sctp_walk_params and _sctp_walk_errors
8c7c19a55e41ae69d1cd18ab56e6e9b66a679a7c sctp: do not mark sk dumped when inet_sctp_diag_fill returns err
e5f612969c6f965e3bd1158598e0a3b1c4f389b9 sctp: abandon the whole msg if one part of a fragmented message is abandoned
779edd7348878a7376c0e3d0f96485c30b5f1b7d sctp: do not abandon the other frags in unsent outq if one msg has outstanding frags
121d57af308d0cf943f08f4738d24d3966c38cd9 gso: validate gso_type in GSO handlers
bf2ae2e4bf9360e07c0cdfa166bcdc0afd92f4ce sock_diag: request _diag module only when the family or proto has been registered
c6741fbed6dc0f183d26c4b6bca4517672f92e6c vti6: Properly adjust vti6 MTU from MTU of lower device
734d2725db879f3f6fcdc2b1d2a5deae105f5e95 ipv4: raise IP_MAX_MTU to theoretical limit
c680e41b3a2e944185c74bf60531e3d316d3ecc4 eventpoll: fix uninitialized variable in epoll_ctl
400ac52e805bb6852e743817bc05a136e85042a9 gfs2: clear journal live bit in\tgfs2_log_flush
b327a717e506980399464e304e363f94f95eb7a1 CIFS: make IPC a regular tcon
83998ccd9bfff881f04ce03f6964f8a83e6c5b54 gfs2: Dirty source inode during rename
4df0f7f145f2ac143039e2c569d17a25354f411d xfs: fix transaction allocation deadlock in IO path
b3dce6a2f0601be9b6781b394fdf6ceb63009a44 pnfs/blocklayout: handle transient devices
850eb9fba3711e98bafebde26675d9c082c0ff48 x86/cpu: Add Cannonlake to Intel family
c25d99d20ba69824a1e2cc118e04b877cd427afc x86/platform/UV: Fix GAM Range Table entries less than 1GB
1046d304900cf9d4b2c730c6860b8e03cc704377 virtio_blk: fix incorrect message when disk is resized
daf2a5016983a1a533417bcdc729bd2b19af1b68 virtio_blk: print capacity at probe time
afaed6d3e4aa56e939b496aafa5c97852e223122 tools: Adopt __printf from kernel sources
3ee350fb8a2b30fe47dd9e3b299dff0178fc8c88 tools: Adopt __scanf from kernel sources
5c97cac63ac24c78c8126958a453774e49e706dd tools: Adopt __aligned from kernel sources
55b9b50811ca459e4688543b688b7b2b85ec5ea8 perf script: Support -F brstack,dso and brstacksym,dso
106dacd86f042968e0bb974490fcb9cd017cd03a perf script: Support -F brstackoff,dso
2157f6ee18ce5224eea2b27582368b60d940bef6 perf evsel: Adopt find_process()
b211d79ac1ad43d6d8d82e7f1a5c26055a249135 perf tools: Remove warning()
62d94b00f80b0ecb7fa9eea0539c59e9f82b0fcd perf tools: Replace error() with pr_err()
fef2a735167a827a65bbdf1791abe0dd070ce372 perf tools: Kill die()
47e780848e6229b102e601deeb1ce571dc69a84a perf script: Add 'synth' field for synthesized event payloads
65c5e18f9df078f40abd22a3f6983eb9804b6d02 perf script: Add synthesized Intel PT power and ptwrite events
fc7ce9c74c3ad232b084d80148654f926d01ece7 perf/core, x86: Add PERF_SAMPLE_PHYS_ADDR
49d58f04eb6cdc18b3747fc4243a7114364f5420 perf script: Support physical address
dbdc468f35ee827cab2753caa1c660bdb832243a cpupower : Fix cpupower working when cpu0 is offline
b8789ec482bbbf52f62631e25b6c8648fa834efc mmc: host: Include interrupt.h in mmc host drivers that depends on it
c1ada71fb78ed885f2d403f8d18ae43656cf4e86 mmc: slot-gpio: Don't override con_id when request descriptor
066185d690631478b16045d152b163a51a5e4847 mmc: core: First step in cleaning up private mmc header files
55244c5659b5e73a969b285a2e763223d8aab979 mmc: core: Move public functions from core.h to private headers
4facdde11394d44b3869807841042d059f074a07 mmc: core: Move public functions from card.h to private headers
5857b29b96dcf208e4903ec6f20d132e6a77cac2 mmc: core: Move public functions from host.h to private headers
4e1f780032c56894e8d7b6685b029b718588f483 mmc: block: break out mmc_blk_rw_cmd_abort()
efb5a05e70dfa79fe26133be9a239cbca8ea08c3 mmc: block: break out mmc_blk_rw_start_new()
df0615889651321712b0b429780617d35c1ed963 mmc: block: stop passing around pointless return values
e13934bdf45935f51243515c275629922dc43839 mmc: core/mmci: restore pre/post_req behaviour
db435505b561c1ca7b72c646dbc060f0c674360c mmc: block: inline the command abort and start new goto:s
acd8dbd64a2adcd950c31261247cda6f847f57eb mmc: block: rename rqc and req
c3399ef55d8e8295293808eba32e3f7056526324 mmc: core: rename mmc_start_req() to *areq()
b2928e1049e1d96ac794293d18168c721dbfdb24 mmc: block: refactor mmc_blk_rw_try_restart()
74f5ba357c7cd63c664e65fb7a116dbc0538a2ec mmc: block: rename mmc_active to areq
9491be5ff06ff08d61e6a8d767382ea0037a6f38 mmc: queue: turn queue flags into bools
0e65f10cf1774a27acf9e933e006f1e55a4ef642 mmc: block: respect bool returned from blk_end_request()
37dac0681e2be4f3c32b090a8c0591d4ce57e6f0 mmc: core: start to break apart mmc_start_areq()
28fc64af63488d701184977481b263f31d856984 mmc: core: change quirks.c to be a header file
884f38607897cb4a963ea8a65296f0973a2828d0 mmc: core: move some sdio IDs out of quirks file
2602b740e45cc64feb55d5a9ee8db744ab3becbb mmc: block: Fix is_waiting_last_req set incorrectly
8ecc34448e24e9e8a8f3a9b37be70b43c6af5288 mmc: block: Fix cmd error reset failure path
8bcd37d8b21de13d068414c018c9599281294a01 mmc: core: mmc_blk_rw_cmd_err - remove unused variable
027fb89e61054b4aedd962adb3e2003dec78a716 mmc: sdhci-pci: Do not disable interrupts in sdhci_intel_set_power
d38dcad4e7b48f3d68d5d058f8f4f52a99862e6e mmc: sdhci: Let drivers decide whether to use mmc_retune_needed() with pm
d1e4f74f911daee4d69b5fd0c81902f7d37de579 mmc: sdhci: Do not use spin lock in set_ios paths
30cf2803b268f2bcce91fbaa19cee6d04b14bd86 mmc: sdhci-pci: Let suspend/resume callbacks replace default callbacks
966d696a622b47663ae866df08d54a4a1d3ec39c mmc: sdhci-pci: Add runtime suspend/resume callbacks
8cc35289227c5cbb8811048519c1703e2137d421 mmc: sdhci: clarify the get_timeout_clock callback
c2c49a2e2bf3758ac429c5ac9941a855b75b5e22 mmc: sdhci-pci: Set MMC_CAP_AGGRESSIVE_PM for BYT-related Intel controllers
8ddfe07e18c9c82f7567d3cfbd68d8b59764d015 mmc: block: Use local var for mqrq_cur
cdf8a6fb48882651049e468e6b16956fb83db86c mmc: block: Introduce queue semantics
7b410d074b253a44624497a18e73f666a9574f37 mmc: queue: Share mmc request array between partitions
b658af718465cd1e8011c8da281befdfc2debefd mmc: mmc: Add functions to enable / disable the Command Queue
9d4579a85c84340044b10ffa6cd576397f59dc93 mmc: mmc_test: Disable Command Queue while mmc_test is used
ca5717f7ceef3c0aa76e2f77acb95ec3a93470c8 mmc: block: Factor out data preparation
5744d50d2d9e7efdae4b5d13cd71f49256ada6ba mmc: core: move some code in mmc_start_areq()
0e72f95bf329dea7985f0f4ac81cc888e8b79797 mmc: core: refactor asynchronous request finalization
33e6d74d65c358270f00d228877178964aab84b3 mmc: core: Export API to allow hosts to get the card address
abf110f3e1cea40f5ea15e85f5d67c39c14568a7 powerpc/rfi-flush: Make it possible to call setup_rfi_flush() again
84749a58b6e382f109abf1e734bc4dd43c2c25bb powerpc/rfi-flush: Always enable fallback flush on pseries
0063d61ccfc011f379a31acaeba6de7c926fed2c powerpc/rfi-flush: Differentiate enabled and patched flush types
921bc6cf807ceb2ab8005319cf39f33494d6b100 powerpc/rfi-flush: Call setup_rfi_flush() after LPM migration
c4bc36628d7f8b664657d8bd6ad1c44c177880b7 powerpc/pseries: Add new H_GET_CPU_CHARACTERISTICS flags
9a868f634349e62922c226834aa23e3d1329ae7f powerpc: Add security feature flags for Spectre/Meltdown
f636c14790ead6cc22cf62279b1f8d7e11a67116 powerpc/pseries: Set or clear security feature flags
8ad33041563a10b34988800c682ada14b2612533 powerpc/64s: Move cpu_show_meltdown()
ff348355e9c72493947be337bb4fae4fc1a41eba powerpc/64s: Enhance the information in cpu_show_meltdown()
2e4a16161fcd324b1f9bf6cb6856529f7eaf0689 powerpc/pseries: Use the security flags in pseries_setup_rfi_flush()
56986016cb8cd9050e601831fe89f332b4e3c46e powerpc/64s: Wire up cpu_show_spectre_v1()
d6fbe1c55c55c6937cbea3531af7da84ab7473c3 powerpc/64s: Wire up cpu_show_spectre_v2()
0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524 powerpc/pseries: Fix clearing of security feature flags
e7347a86830f38dc3e40c8f7e28c04412b12a2e7 powerpc: Move default security feature flags
6232774f1599028a15418179d17f7df47ede770a powerpc/pseries: Restore default security feature flags on setup
4388c9b3a6ee7d6afc36c8a0bb5579b1606229b5 powerpc: Do not send system reset request through the oops path
4552d128c26e0f0f27a5bd2fadc24092b8f6c1d7 powerpc: System reset avoid interleaving oops using die synchronisation
fa73c3b25bd8d0d393dc6109a1dba3c2aef0451e KVM: PPC: Book3s PR: Allow access to unprivileged MMCR2 register
8d59d5bd8f088be1366f69590729aaef2f8cb17b fw_cfg: fix sparse warnings in fw_cfg_sel_endianness()
d174ea7d38bccb6a10aca036014ec74ea8f73d1c fw_cfg: fix sparse warnings with fw_cfg_file
f295c8dba71841f007e2154143109d1517670a08 fw_cfg: fix sparse warning reading FW_CFG_ID
3d47a34ba6761a64b78a8b89f6bbe93b4e8455f1 fw_cfg: fix sparse warnings around FW_CFG_FILE_DIR read
59ecab182faf84e76f4a07fee904d41e41f4780c fw_cfg: remove inline from fw_cfg_read_blob()
b1cc4097d15c29725060f86ecec20a1e635a541f fw_cfg: handle fw_cfg_read_blob() error
1f57bc12d87dda2d56b564d35f21b9e6bdb2bb2c fw_cfg: add a public uapi header
971888c46993f871f20d02d1fe43486a924fad11 dm: hold DM table for duration of ioctl rather than use blkdev_get
5bd5e8d891c1fd2d966a7e2c26f0452d22410683 dm: remove fmode_t argument from .prepare_ioctl hook
12d41a023efb01b846457ccdbbcbe2b65a87d530 crypto: dh - Fix double free of ctx->p
79e886599e6416d0de26e8562e4464577d081c3d crypto: algif - add and use sock_kzfree_s() instead of memzero_explicit()
493b2ed3f7603a15ff738553384d5a4510ffeb95 crypto: algif_hash - Handle NULL hashes correctly
a8348bca2944d397a528772f5c0ccb47a8b58af4 crypto: algif_hash - Fix NULL hash crash with shash
8acf7a106326eb94e143552de81f34308149121c crypto: algif_hash - Fix result clobbering in recvmsg
626b9740fa73cad043e136bfb3b6fca68a4f8a7c selinux:  Report permissive mode in avc: denied messages.
671a2781ff01abf4fdc8904881fc3abd3a8279af security: add ioctl specific auditing to lsm_audit
fa1aa143ac4a682c7f5fd52a3cf05f5a6fe44a0a selinux: extended permissions for ioctls
1d2a168a085f1c65b895f258ee11a52813d25af6 selinux: ioctl_has_perm should be static
f3bef67992e8698897b584616535803887c4a73e selinux: fix bug in conditional rules handling
4c8bb609d304df72858aa2e5e74abab5246bd24b net: aquantia: Limit number of MSIX irqs to the number of cpus
5b97b0d10eddeeec258b807f009a2cb2764653c7 net: aquantia: Simplify dependencies between pci modules
db5506156443409955d5689d4a2a49b08fb54d86 net: aquantia: Eliminate aq_nic structure abstraction
efe779b749cc9da0f36a01fba38c98864e6b8748 net: aquantia: Introduce new device ids and constants
4948293ff963e5451a8f0c21be8f1dfc2c7f65f5 net: aquantia: Introduce new AQC devices and capabilities
8fcb98f462e6504e6d1ab2dab87c6db803c206b6 net: aquantia: Convert hw and caps structures to const static pointers
23ee07ad3c2fd5adf6e9ef21afb9aec489dc3b4e net: aquantia: Cleanup pci functions module
ef24175d9fd2457e20c4122a1904a4b1ccfb661a net: aquantia: Remove create/destroy from hw ops
76c19c6cfa8f7e4f8c7d5407f77237b80095e5d9 net: aquantia: Change confusing no_ff_addr to more meaningful name
0c58c35f02c2e99bb10137b32e8ec96dcbdcc705 net: aquantia: Introduce firmware ops callbacks
a57d3929b838204efd026e0f6d5eaed5bb65cce7 net: aquantia: Introduce support for new firmware on AQC cards
c8c82eb387abcfa9a362f3e75106a9d2c7d2b67f net: aquantia: Introduce global AQC hardware reset sequence
f03e4f8aadc84deb8f3dddcbf0032bac75051e7a net: aquantia: Fix error return code in aq_pci_probe()
e8a22b5f079449f1803d37ce2b5d09acaa68368d net: aquantia: make symbol hw_atl_boards static
370c10522e96bf1b2e7fd9e906dbe8fb5be895d2 net: aquantia: Fix error handling in aq_pci_probe()
1bf9a7520fadaebfb8891284b046dd3fa6a2dc32 net: aquantia: Fix hardware reset when SPI may rarely hangup
d0f0fb25d6c7a7c299d9bdaa2a11e96e4102e944 net: aquantia: Fix a regression with reset on old firmware
02cea3958664723a5d2236f0f0058de97c7e4693 genirq: Provide disable_hardirq()
1f2f83f838489d386ecad9d0c77c3d6ec983102c e1000: call ndo_stop() instead of dev_close() when running offline selftest
163f1511520386c74a86a2ce2b1dbef07a227713 thunderbolt: Add documentation how Thunderbolt bus can be used
ce6a90027c10f970f872de5db0294f9e3e969f1c platform/x86: Add driver to force WMI Thunderbolt controller power status
12933ea2b8c1e1f87a5dfece947325ee9e6d65b0 platform/x86: intel-wmi-thunderbolt: Silence error cases
3b3d9f4da96493e4f68d0a80ab210763a24f8b33 thunderbolt: Export ring handling functions to modules
2a91ec63f8a11e70d4b958dd4df867fec0247179 thunderbolt: Move ring descriptor flags to thunderbolt.h
22b7de1000e66d739c431d6be4e7e97c69fa7c98 thunderbolt: Use spinlock in ring serialization
59120e06101db72442acf4c8b364a0c76d8faa68 thunderbolt: Use spinlock in NHI serialization
4ffe722eefcb07c76701f03e0d759fbaecedf79f thunderbolt: Add polling mode for rings
9a01c7c26cf7cbd1f58d06319e798833e85ff550 thunderbolt: Allocate ring HopID automatically if requested
a78ec0d4f0eada03378413d51c92d0c1253133fa thunderbolt: Drop sequence number check from tb_xdomain_match()
74657181e7c449351d1ad28cf43941bc333e1bd6 thunderbolt: Mask ring interrupt properly when polling starts
3304559e353f098d7e0ed5ca981e26c406513e12 thunderbolt: Add function to retrieve DMA device for the ring
79fae987518a3aa6c3c7b2e3ad5fe1e4080c12bc thunderbolt: Handle connecting device in place of host properly
ee487dd2447a43dd318bd7ba2c54e59e707ad851 thunderbolt: Factor common ICM add and update operations out
484cb153fe5ffcd0b7cf423cf29aaeadd0e862b1 thunderbolt: Add tb_xdomain_find_by_route()
9aaa3b8b4c56d24210acef37b7c800ca218c3d40 thunderbolt: Add support for preboot ACL
6fc14e1a44e53c472865252b47398346a27d600e thunderbolt: Introduce USB only (SL4) security level
e69b6c02b4c3b8d03be7136f90dd9551ad5a5a5e net: Add support for networking over Thunderbolt cable
fa31f0c98d64212b2b2b4a1e6d887208b6acb2d9 thunderbolt: Right shifting to zero bug in tbnet_handle_packet()
86dabda426ac33f4782854ef71f0c9adafd24134 net: thunderbolt: Clear finished Tx frame bus address in tbnet_tx_callback()
540c11159dcece5c4a8157a7b39336316085470f net: thunderbolt: Stop using zero to mean no valid DMA mapping
8e021a14d908475fea89ef85b5421865f7ad650d net: thunderbolt: Tear down connection properly on suspend
027d351c541744c0c780dd5801c63e4b90750b90 net: thunderbolt: Run disconnect flow asynchronously when logout is received
931bc0d91639f8fbf336332aa443705004ecf61d IB: Move PCI dependency from root KConfig to HW's KConfigs
c0348eb069687a2f27c0cd23dafb35918edf9e75 IB: Let ib_core resolve destination mac address
fec99ededf6be46178d7f571b34dae80fc05f090 RDMA/umem: Avoid partial declaration of non-static function
cb9fd89f91337aaca9c96d265930f22b31462e5e RDMA/core: avoid uninitialized variable warning in create_udata
db0acbc475f06c775682ba969ab338e1efa2ae96 IB: INFINIBAND should depend on HAS_DMA
cee687b68dbc718b5e10f2181102dc0bc3e4f006 IB/srp: Cache global rkey
63fb9cb51da257e48af9db6bbfe4ace8ade04ff3 mfd: Remove duplicate includes
02d8883f520ee91c4c40c0a31892eb25ea2df2c9 RDMA/restrack: Add general infrastructure to track RDMA resources
bf3c5a93c52368410a521af34ed3bff91a99df44 RDMA/nldev: Provide global resource utilization
b5fa635aab8f0d39a824c01991266a6d06f007fb RDMA/nldev: Provide detailed QP information
074b5abbf7a1f5d847df96e6b951d767f3a29a43 RDMA/netlink: Hide unimplemented NLDEV commands
f34727a1351362c8f349d29efcd0e72702571e6a RDMA/nldev: missing error code in nldev_res_get_doit()
415bb699d793f7ad9c67c04a766d1e655fa6b203 RDMA/restrack: Remove unimplemented XRCD object
6c976c30ad1c205bd6e34182c5ba9a1267d752ca IB/uverbs: Use inline data transfer for UHW_IN
2f36028ce98ef8e9c04809cc20b9dc498cc1a508 IB/uverbs: Use u64_to_user_ptr() not a union
2f08ee363fe097bc6dc01aac53e1798b16c00986 RDMA/restrack: don't use uaccess_kernel()
103140eccbd2e3d56bcd366eba3e657f5d358bf5 RDMA/restrack: Move restrack_clean to be symmetrical to restrack_init
c5efb62148a4bf2865d76c43c012a3329f5b5b8c IB/srpt: Add P_Key support
a11253142e6d317c25215ddb3029f9c754baefef IB/srpt: Rework multi-channel support
f97f43c9ed1dd9d1f7afc758fc31a619752d08f3 RDMA/srpt: Fix RCU debug build error
db7683d7deb25d6edc9c59ac45c56c6a48a45514 IB/srpt: Fix login-related race conditions
e28a547da6e9c6dd5ba64b978d361222db3592e7 IB/srpt: Fix a race condition related to wait list processing
fcf589364f2a106544d79594dcf722d97528031b IB/srpt: Don't allow reordering of commands on wait list
090fa24bf239ce1ec58f2b90c5ba54feca456cb0 IB/srpt: Preparations for adding RDMA/CM support
2ffcf04263832557dc55d5a7339d8f29428b679a IB/srpt: Move the code for parsing struct ib_cm_req_event_param
19f313438c7754e6cc2bceddeebeaa5132e2e0a1 IB/srp: Add RDMA/CM support
b0780ee56ee264cfdfee46023e02386282041aad IB/srp: Add target_can_queue login parameter
487f6683f1b738e40aca2386b9f73da4ebb8223d IB/mthca: Fix gup usage in mthca_map_user_db()
5793b46521553774d66653993cfdc132846bb23d IB/rxe: remove unnecessary skb_clone in xmit
0812ed13217827d3c84cb7e5cb267c787d94d0a4 IB/rxe: Change RDMA_RXE kconfig to use select
79c48ccf2fec7c10105bd635d3bb1128167b1258 nvme-pci: serialize pci resets
8edd11c9ad3a6205eea6de9d02eaf64c681a0658 nvme-fabrics: Allow 0 as KATO value
dbf86b39005d26b21c52a23720e15fb850d71cdc nvme: add support for NVMe 1.3 Timestamp Feature
90af35123d3be8b011a8a3f69ce46fd431c55b25 nvme-rdma: move nvme_rdma_configure_admin_queue code location
34b6c2315eb66e6411261aa440f6e3c4cded3506 nvme: Add admin_tagset pointer to nvme_ctrl
b28a308ee7774341312de28405e53a4a30cb7d31 nvme-rdma: move tagset allocation to a dedicated routine
18398af2dcca3044c74fd2697f1d5b624b7848fe nvme-rdma: disable the controller on resets
3f02fffb74ae7486232fef6ca4341c5e9719c759 nvme-rdma: don't free tagset on resets
31fdf18401703df246e20fc0382ed3594e6cf8d8 nvme-rdma: reuse configure/destroy_admin_queue
a57bd54122232b32414748fc8b14634bfd74a7ff nvme-rdma: introduce configure/destroy io queues
148b4e7ff31e4bb90cf7851ad1bcd305c292be2c nvme-rdma: stop queues instead of simply flipping their state
41e8cfa117cee46a732436dd303de4772c60965c nvme-rdma: rename nvme_rdma_init_queue to nvme_rdma_alloc_queue
68e16fcfaf9bbde573e89f783cf1ca60acb49cf5 nvme-rdma: introduce nvme_rdma_start_queue
370ae6e450260c8bd3e1ea75c1390f746d3c71ee nvme-rdma: cleanup error path in controller reset
09fdc23b29618127709711606d4fa439a6839852 nvme-rdma: call ops->reg_read64 instead of nvmf_reg_read64
9b483da15dd0c94b62ae4e789b37dfff4410f45e nvme-fabrics: log a warning if hostid is invalid
caaa15c5097d58545075a8bbdf208078b87d5f28 nvme: fix identify namespace logging
a7b7c7a105a528e6c2a0a2581b814a5acacb4c38 nvme-rdma: Use unlikely macro in the fast path
1cad65620fecfb24cdeefa5533628a4f293783e7 nvme: factor metadata handling out of __nvme_submit_user_cmd
007a61ae2f35c7fcf767313285c4924e81f11983 nvme: fix visibility of "uuid" ns attribute
bd9f07590a17f3158b51fb869dca723f1f606bdc nvme-rdma: Fix possible double free in reconnect flow
f04b9cc87b5fc466b1b7231ba7b078e885956c5b nvme-rdma: Fix error status return in tagset allocation failure
60070c78ef7b624680ffdde30bca55e515504585 nvme-rdma: pass tagset to directly nvme_rdma_free_tagset
5e1fe61d4170b1f498e20de92c7ce4cd5e40c3c5 nvme-rdma: teardown admin/io queues once on error recovery
5013e98b5e8db50144e8f1ca5a96aed95d4d48a0 nvme-rdma: change queue flag semantics DELETING -> ALLOCATED
94f29d4f7808e3a495fda8c5d337fc4ac4037ce7 nvme-rdma: Add BLK_MQ_F_NO_SCHED flag to admin tag set
d22524a4782a943bb02a9cf6885ac470210aabfc nvme: switch controller refcounting to use struct device
a6a5149b10ec8ab8b4a9479a8230265c1b573be0 nvme: get rid of nvme_ctrl_list
999ada28713d7bcf4a2c70cbab47b08cd95f2cf8 nvme: check for a live controller in nvme_dev_open
c5017e85705bfea721732e153305d1988ff965c2 nvme: move controller deletion to common code
e9bc25874c0bde47b65c58ccd01e339a603a7f40 nvme-rdma: remove nvme_rdma_remove_ctrl
6cd53d14aaa006b5543f06fbf5e1680ce61c6c6e nvme: consolidate common code from ->reset_work
12fa1304badde26c5cf495d5af48df22a31c3a52 nvme-rdma: reuse nvme_delete_ctrl when reconnect attempts expire
4054637c9b4fbe9feef0cf6f2516ef00d8053560 nvme: flush reset_work before safely continuing with delete operation
b0c407ec503b8e97bbffd65cc4bed39e008c192f bpf: Remove unused headers
c627c487ec727350c6aaa1cf217b666099e83ee2 nvme: factor get log into a helper
84fef62d135b6e47b52f4e9280b5dbc5bb0050ba nvme: check admin passthru command effects
ab083b11f6f43af071f9b507e48d212bfbb2beb3 nvme: fix eui_show() print format
38dabe210fbab4e7e8a03670ab3ba42f247ea08f nvme: centralize AEN defines
08e1507544839b98fc3732aea935e70ed9c209ec nvme-fc: remove unused "queue_size" field
ad22c355b707a8d8d48e282aadc01c0b0604b2e9 nvme: remove handling of multiple AEN requests
d99ca609a1b55f87a5e62a11ed70e4d091d815f0 nvme: unexport starting async event work
e3d7874dcf175cca2dca7795d6453f637ad8ba9b nvme: send uevent for some asynchronous events
5e62d5c993e6889cd314d5b5de6b670152109a0e nvmet: better data length validation
cce75291ffd82eb5bac56b051f46f89e8c0d2918 nvmet_fc: fix better length checking
26c0a26d78bc7c2943d55121a32cb85a4594f8ea nvme-fc: don't use bit masks for set/test_bit() numbers
eb1bd249ba016284ed762d87c1989dd822500773 nvme-rdma: fix memory leak during queue allocation
bd9f5d65769b9fe5e72110d4cbc9097b53b01613 nvme: call blk_integrity_unregister after queue is cleaned up
d41bb33ba33b8f8debe54ed36be6925eb496e354 ip6_tunnel: update mtu properly for ARPHRD_ETHER tunnel device in tx path
dd9d598c6657e2d2eed4497ff2c5d744015201dc ip_gre: add the support for i/o_flags update via netlink
1cc5954f44150bb70cac07c3cc5df7cf0dfb61ec ip_gre: clear feature flags when incompatible o_flags are set
4e8b86c062695454df0b76f3fee4fab8dc4bb716 mqprio: Introduce new hardware offload mode and shaper in mqprio
22ce97fe49b5522e0f97b7c2282ed71a1abd7410 mqprio: fix potential null pointer dereference on opt
3fb07daff8e99243366a081e5129560734de4ada ipv4: add reference counting to metrics
187e5b3ac84d3421d2de3aca949b2791fbcad554 ipv4: fix NULL dereference in free_fib_info_rcu()
10b8a3de603df7b96004179b1b33b1708c76d144 ipv6: the entire IPv6 header chain must fit the first fragment
d9fc880723321dbf16b2981e3f3e916b73942210 of: fix memory leak related to safe_name()
549b4930f057658dc50d8010e66219233119a4d8 platform/x86: dell-smbios: Introduce dispatcher for SMM calls
1a258e670434f404a4500b65ba1afea2c2b29bba platform/x86: dell-smbios-wmi: Add new WMI dispatcher driver
da1f607ed6e6a904463396bb6a28bf96584c61cc platform/x86: dell-smbios-smm: test for WSMT
1f8543a5d602b816b9b64a62cafd6caae2af4ca6 platform/x86: dell-smbios: Add filtering support
f2645fa317b8905b8934f06a0601d5b7fa66aba0 platform/x86: dell-smbios-wmi: introduce userspace interface
307ab2a99d190d3a7949258b8551b66887ce8cf4 platform/x86: dell-smbios-wmi: release mutex lock on WMI call failure
868b8d33f91e431b1961a35baa6b5022639067f3 platform/x86: dell-*wmi*: Relay failed initial probe to dependent drivers
4255c30fe88ee3cc99bbeac7974db27e4217a497 platform/x86: dell-smbios-wmi: Disable userspace interface if missing hotfix
91c73e809233e8f93278458b2818fd577c3deb02 platform/x86: dell-wmi: check for kmalloc() errors
e52f6d9fcb254a382bcea11ad1b88b3bb467a4cc platform/x86: dell-laptop: make some local functions static
9862b43624a5450a097cc4122732857b869dbbca platform/x86: dell-laptop: Allocate buffer on heap rather than globally
eca39e7f0cdb9bde4003a29149fa695e876c6f73 platform/x86: dell-laptop: fix kbd_get_state's request value
7dc5ff66c2c1d42ea55800548e0e28cc0d206c98 platform/x86: dell-smbios: Correct notation for filtering
98c76a3904261a7b7612821de8b99f0e3b41677c platform/x86: dell-smbios: Correct some style warnings
ec34fe385984b447f62ef6763638874e6fbd1f43 platform/x86: dell-smbios: Rename dell-smbios source to dell-smbios-base
41e36f2f85af758fd2f4be76112ebe649d07a801 platform/x86: dell-smbios: Link all dell-smbios-* modules together
9d64fc08f6fe59a7d71e84f650dd2c0f080254dd tools/wmi: add a sample for dell smbios communication over WMI
7ed1c1901fe52e6c5828deb155920b44b0adabb1 tools: fix cross-compile var clobbering
907565337ebf998a68cb5c5b2174ce5e5da065eb Fix: Disable sys_membarrier when nohz_full is enabled
22e4ebb975822833b083533035233d128b30e98f membarrier: Provide expedited private command
a961e40917fb14614d368d8bc9782ca4d6a8cd11 membarrier: Provide register expedited private command
541676078b52f365f53d46ee5517d305cd1b6350 membarrier: Disable preemption when calling smp_call_function_many()
306e060435d7a3aef8f6f033e43b0f581638adce membarrier: Document scheduler barrier requirements
b6096755f43c443101e6f5d3acc74efa746cb4ec parisc: allocate sys_membarrier system call number
3ccfebedd8cf54e291c809c838d8ad5cc00f5688 powerpc, membarrier: Skip memory barrier in switch_mm()
150593bf869393d10a79f6bd3df2585ecc20a9bb sched/api: Introduce task_rcu_dereference() and try_get_task_struct()
c5f58bd58f432be5d92df33c5458e0bcbee3aadf membarrier: Provide GLOBAL_EXPEDITED command
ac1ab12a3e6e878274e7107c8c6f326694a1c1f3 lockin/x86: Implement sync_core_before_usermode()
70216e18e519a54a2f13569e8caff99a092a92d6 membarrier: Provide core serializing command, *_SYNC_CORE
10bcc80e9dbced128e3b4aa86e4737e5486a45d0 membarrier/x86: Provide core serializing command
df3735c5b40fad8d0d28eb8ab065fe955b3347ee x86,mpx: make mpx depend on x86-64 to free up VMA flag
d2cd9ede6e193dd7d88b6d27399e96229a551b19 mm,fork: introduce MADV_WIPEONFORK
d64e38ae690e3337db0d38d9b149a193a1646c4b hv_netvsc: fix race in napi poll when rescheduling
bee9d41b37ea6b1f860e5bc0989cf1cf1d7e6ab3 hv_netvsc: propagate rx filters to VF
35a57b7fef136fa3d5b735ba773f191b95110fa0 hv_netvsc: fix locking for rx_mode
b0dee7910317f41f398838992516af6a3b981d86 hv_netvsc: fix locking during VF setup
02400fcee2542ee334a2394e0d9f6efd969fe782 hv_netvsc: use RCU to fix concurrent rx and queue changes
0ef58b0a05c127762f975c3dfe8b922e4aa87a29 hv_netvsc: change GPAD teardown order on older versions
7b2ee50c0cd513a176a26a71f2989facdd75bfea hv_netvsc: common detach logic
c5d24bdd29cc6373331967b5034da21c12805f72 hv_netvsc: Add range checking for rx packet offset and length
3be9b5fdc6379faf6f23cd8539ef9a6235396c5f hv_netvsc: Clean up extra parameter from rndis_filter_receive_data()
2afc5d61a7197de25a61f54ea4ecfb4cb62b1d42 hv_netvsc: Use Windows version instead of NVSP version on GPAD teardown
a56d99d714665591fed8527b90eef21530ea61e0 hv_netvsc: Ensure correct teardown message sequence order
3f076effb9adad6a16fafd3cfe33fe530c5d428d hv_netvsc: Pass net_device parameter to revoke and teardown functions
0c564a538aa934ad15b2145aaf8b64f3feb0be63 tracing: Add TRACE_DEFINE_ENUM() macro to map enums to their values
a54f9aebaa9f0ea2ce6b01f12b65062fb2e74e6c include/linux/mmdebug.h: add VM_WARN which maps to WARN()
63489f8e821144000e0bdca7e65a8d1cc23a7ee7 hugetlbfs: check for pgoff value overflow
eb0baf8a0d9259d168523b8e7c436b55ade7c546 perf/core: Define the common branch type classification
d5c7f9dc58edcfb6b45f557bb0023173a0dabde6 perf/x86/intel: Record branch type
a5df70c354c26e20d5fd8eb64517f724e97ef0b2 perf/x86: Only show format attributes when supported
b00233b5306512a09e339d69ef5e390a77f2d302 perf/x86: Export some PMU attributes in caps/ directory
8d4e6c4caa12dafbcba138e5450b7af17b0b2194 perf/core, pt, bts: Get rid of itrace_started
5da382eb6ea37e2c49ef521c636d73f6ecc3fa81 perf/x86: Fix caps/ for !Intel
9cb7cf86440229fd6e6ad1718712742c344653d8 perf trace beauty: Mask ignored fcntl 'arg' parameter
2c2b1623d46ce1f9c0ef5d21ff64a2c3f960e489 perf trace beauty: Export the "int" and "hex" syscall arg formatters
5dde91edbf6776daba0981c5bc47f1240427e05c perf trace beauty: Introduce syscall arg beautifier for long integers
9c47f66748381ecbaa3a5eb301b81fd2fd0a282d perf trace beauty fcntl: Basic 'arg' beautifier
89e8524abe1c584942e6b05744946877e87dd478 perf trace beauty fcntl: Beautify F_GETFL return value
12c0c0cef9a64ee30825122ec9d620ed29fcf5ba perf trace beauty fcntl flags: Beautify F_SETFL arg
c2e539d287a2e7c633ad6ecb0cb6b6f13ea05125 perf trace beauty fcntl: Beautify F_[GS]ETFD arg/return value
7ee5743404e3641f3c11792761632a5a7d583587 perf trace beauty: Give syscall return beautifier more context
fc65eb8213a437b43e9de7776699aaa25dfa00df perf trace beauty: Export the fd beautifier for use in more places
07a0572439450e2631f90d595965c379de105bab perf trace beauty fcntl: Augment the return of F_DUPFD(_CLOEXEC)
ff2f1b2d35aeb672200af4772db1847fdcdfd77b perf trace beauty: Export the pid beautifier for use in more places
1a4ad26393bc73d3294bb7919cb4cd2dfffbe57c perf trace beauty fcntl: Beautify F_GETOWN and F_SETOWN
65dfa1e7799edd114fbd3949f2783f4e69fd0305 perf trace beauty fcntl: Beautify F_GETLEASE and F_SETLEASE arg/return
82d4a1109fc302795a184a328f60ad28bf7b5989 perf trace: Group per syscall arg formatter info into one struct
d47737d524174a81b80c487fe07de3ee2458ee32 perf trace: Allow syscall arg formatters to request non suppression of zeros
39cc355b0486d89cef335e35edde26c14b462126 perf trace beauty fcntl: Do not suppress 'cmd' when zero, should be DUPFD
befecc810c95994774439baeedc8a03fe8d51e8f perf trace beauty fcntl: Beautify the 'arg' for DUPFD
1f63139c3f8af1d6a09de5dd355c8b5695407c79 perf trace beauty: Simplify syscall return formatting
114f709e01e62760a6d03de1358188293dfefdda perf tool: Add show_feature_header to perf_tool
6f8fe61ee583f1b75fef81d9c9434b7496a01881 perf trace: Add missing ' = ' in the default formatting of syscall returns
5e58fcfaf4c60795c241be739ad55c519d7f2aaa perf trace: Allow allocating sc->arg_fmt even without the syscall tracepoint
d032d79e2dcb56e13678bf2cc7b36957ef827c32 perf trace: Use the syscall_fmt formatters without a tracepoint
325f5091b0da5a7d8d190262661af17d75bee262 perf trace: Ditch __syscall__arg_val() variant, not needed anymore
332337dafc98d88561bf3730f80c59cc93f089e1 perf trace: Allow specifying number of syscall args for tracepointless syscalls
c51bdfecd782eec710237c53137e0fefd032d287 perf trace: Allow specifying names to syscall arguments formatters
33396a3a6a6b16784291ac19708e3a6cf85db6c5 perf trace beauty clone: Beautify syscall arguments
15bed2742a8d60210b958963ca1091d3cfc4f332 perf trace beauty clone: Suppress unused args according to 'flags' arg
8e99b6d4533cf3f49dcd813155a513a5b572baef tools include: Adopt strstarts() from the kernel
cf6383f73cf2be45d566fdb2b15b799675669de0 perf report: Fix kernel symbol adjustment for s390x
b49a821ed9e05fa0ccbaec2555052b2a920be517 perf report: Make --branch-history work without callgraphs(-g) option in perf record
470de0f39e901611c366fc3d584307ba5d13406a tools perf: Do not check spaces/blank lines when checking header file copy drift
1cc47f2d46206d67285aea0ca7e8450af571da13 perf trace beauty ioctl: Improve 'cmd' beautifier
c1737f2b7810cf4cd353f3931d2d23e81b591f90 tools include uapi: Grab copies of drm/{drm,i915_drm}.h
ef9811f0933967c4ee4cf0e1a88678d2607dca07 perf trace beauty ioctl: Beautify DRM ioctl cmds
2c3e96291164d46e58ea064b778d5f8f747d6c6a perf trace beautify ioctl: Beautify sound ioctl's 'cmd' arg
45717b7fb7e59285927170cf7fff233e0bbeeaca perf trace beautify ioctl: Beautify KVM ioctl's 'cmd' arg
8ff69577075e0321ef25d3afcb293db39a31342a perf trace beauty ioctl: Pass _IOC_DIR to the per _IOC_TYPE scnprintf
ec6dd85f6e39bf516f4420d62270380b96bbee57 perf trace beautify ioctl: Beautify vhost virtio ioctl's 'cmd' arg
81e3d8b2af2e7417f1d5164aab5c1a75955e8a5d perf trace beautify ioctl: Beautify perf ioctl's 'cmd' arg
e8c6d500447c577e669c24ec04cd4173fe9f9afb perf test: Print result for each LLVM subtest
81f17c90f14122123cc52d1609f567834e56b122 perf test: Add 'struct test *' to the test functions
1209b273a25ee60a267b606bea77e068b8556a8d perf test: Add infrastructure to run shell based tests
6d02acc1918094de12f885b35db9477e579b6bd0 perf test: Make 'list' use same filtering code as main 'perf test'
4a084ecfc8217bca1ab074feb4bc8a2c0f828960 perf report: Fix module symbol adjustment for s390x
07806a1df1ccbdd2fa5ba56d01bb77d11c828331 perf events parse: Remove some needless local variables
5d369a75eda5855d64981668a1d60cfac00d52e9 perf events parse: Rename parsing state struct to clearer name
d17d0878f456c8227345b6c76b918ec068fa0abd perf events parse: Use just one parse events state struct
5d9cdc1181c34f959e9fb8e24624223172071871 perf events parse: Rename parse_events_parse arguments
ac0bb6b72f4bbab08f270a919406d971e73698b5 perf: Fix documentation for sysctls perf_event_paranoid and perf_event_mlock_kb
83bc9c371eaf21466f43b12d942b66c3f0d60ae5 perf trace beauty: Beautify pkey_{alloc,free,mprotect} arguments
63ce8449bc1081711eef1add68909e9bd758de62 perf stat: Only auto-merge events that are PMU aliases
259d40775ee11dbeba022514815df08c57994ef3 tools include linux: Guard against redefinition of some macros
0e1eed80885fdb09993bffb16f5662f4b53c1a08 perf tools: Get all of tools/{arch,include}/ in the MANIFEST
b28503a3fe6400757817e4460090f96bc1b9d6e7 perf test: Fix vmlinux failure on s390x
5357413f5c067f60933e4b8d79d483fbe62b2bb5 perf test: Fix vmlinux failure on s390x part 2
e9516c0813aeb89ebd19ec0ed39fbfcd78b6ef3a perf script: Add missing separator for "-F ip,brstack" (and brstackoff)
66ec11919a0f96e936bb731fdbc2851316077d26 perf pmu: Unbreak perf record for arm/arm64 with events with explicit PMU
33974a414ce2324554f75dbd204ff0868f499e32 perf trace: Call machine__exit() at exit
90869ddfefebb1a79bd7bebfa4f28baa9f8c82cd net: aquantia: Implement pci shutdown callback
9a11aff25fd43d5bd2660ababdc9f564b0ba183a net: aquantia: oops when shutdown on already stopped device
6a91ded32d6c8a6d0aee1928bb741e31577af24f net: aquantia: Make function hw_atl_utils_mpi_set_speed() static
cce96d1883dae4b79f44890e5118243d806da286 net: aquantia: Regression on reset with 1.x firmware
d18e4f6834451dbc12407c26acd5fae4da14c489 net: ena: fix race condition between device reset and link up setup
62f1e84e4680e96423a610261d2310482d5cacd3 IB/opa_vnic: Mark unused Ethernet MTU fields as reserved
b209a368eb72cacce290e327d3f783e9cdee040c IB/opa_vnic: Add routing control information
88a69b65f36fd5d8bcba712dd2bd8c689463ccbd IB/hfi1: Refactor get_user() IOCTLs
ecf799852bde85ae9c1713b2a68dce4a03054f1b IB/hfi1: Refactor reset_ctxt() IOCTL
08df477434754629303c9e2bfa8d67ecb44f9c20 mm/ksm: Remove now-redundant smp_read_barrier_depends()
3d0bd028ffb4a4915cb64cfa0d2cee1578cc0321 net/sched: Add support for HW offloading for CBS
2392debc2be721a7d5b907cbcbc0ebb858dead01 ipv4: consider TOS in fib_select_default
3ce58d84358c7b477811b5100152fad848f936fc net: Refactor path selection in __ip_route_output_key_hash
bf4e0a3db97eb882368fd82980b3b1fa0b5b9778 net: ipv4: add support for ECMP hash policy choice
71563f3414e917c62acd8e0fb0edf8ed6af63e4b ipvs: skb_orphan in case of forwarding
b3f55bdda8df55a563005e00b1b71212d8546541 net: sched: introduce per-egress action device callbacks
717503b9cf57c0bb7ea4d3a9f5699c9a04adf988 net: sched: convert cls_flower->egress_dev users to tc_setup_cb_egdev infra
7578d7b45ed870b13a8ace57e32feaed623c2a94 net: sched: remove unused tcf_exts_get_dev helper and cls_flower->egress_dev
9d452cebd7d69e9eb22b4c0482fdbb6fc762167f net/sched: Fix actions list corruption when adding offloaded tc flows
0843c092ee75bb375fbbb6b97a7c55e0069ae099 net/sched: Set the net-device for egress device instance
3bdb376e6944134d0f4d6d65497054a54ef273c9 cxgb4: introduce SMT ops to prepare for SMAC rewrite support
12b276fbf6e092adca08a8125afcc4e7f530a0b6 cxgb4: add support to create hash filters
3b0b3bee56dd4e5cd1976a046f391a1435d727b2 cxgb4: add support to delete hash filter
cacd2b3fb9815ec29b778342a8aaa80edc0f98d3 chelsio: Convert timers to use timer_setup()
3eb8b62d5a260fcd9683b0ce89beb3b28b12a304 cxgb4: add support to create hash-filters via tc-flower offload
a882d20cdb7775ff8b4aac880255eff6a2c1c85e cxgb4: fix error return code in cxgb4_set_hash_filter()
846eac3fccec85d464211ecb7aa53b3a33c69c4c cxgb4: implement udp tunnel callbacks
d0a1299c6bf7d80c8bb8e181f36a7c407a4cabca cxgb4: add support for vxlan segmentation offload
4621ffd604f935bd3c5d989364ef586c5ff79c98 cxgb4: implement ndo_features_check
c746fc0e8b2d144e2ee9122e4efd72326ff3cd1b cxgb4: add geneve offload support for T6
a9add1944eb1432c28087eba2b5637657a90daa3 cxgb4: use CLIP with LIP6 on T6 for TCAM filters
baf5086840ab1815003e6ece5a51c1a803f81f47 cxgb4: restructure VF mgmt code
24949304c9ed7a409ac42ec63e19835519ffc44a cxgb4: IPv6 filter takes 2 tids
c4e43e14cd4617d57babc7a9f251bf3e9ad360a0 cxgb4: free up resources of pf 0-3
ad0bff0570727620840c4005992946cce1dff693 cxgb4: remove dead code when allocating filter
016764de8b0d17e946832d7b6530434daa82df0e cxgb4: copy adap index to PF0-3 adapter instances
b06ef18a4c255609388ed6e068a1c69c797545e0 cxgb4: do not set needs_free_netdev for mgmt dev's
a6ec572bfa7d529be78afbb703f8d9381954cdff cxgb4: Add support for Inline IPSec Tx
9d5fd927d20b38d9785f510b93b3f0f8e19aba5f cxgb4/cxgb4vf: add support for ndo_set_vf_vlan
e47094751ddc117c686c399af9810d57367922c9 cxgb4: Add support to initialise/read SRQ entries
c68644ef16103a2462c34e0691343d8985466eab cxgb4: Add support to query HW SRQ parameters
43db92964039d409c8e76613f607b79f6e93ee38 cxgb4: Support firmware rdma write with immediate work request.
f3910c6278f380d87f8bf8e46a8db46b2d0cff27 cxgb4: Support firmware rdma write completion work request.
3af229f2071f5b5cb31664be6109561fbe19c861 powerpc/numa: Reset node_possible_map to only node_online_map
a346137e9142b039fd13af2e59696e3d40c487ef powerpc/numa: Use ibm,max-associativity-domains to discover possible nodes
ea05ba7c559c8e5a5946c3a94a2a266e9a6680a6 powerpc/numa: Ensure nodes initialized for hotplug
e67e02a544e9a0d24b99eb383e808bb3433b048d powerpc/pseries: Fix cpu hotplug crash with memoryless nodes
cf11372949434fc4a6194b1ed9eb861d08032d08 x86/vmware: Read tsc_khz only once at boot time
91d1e54ebd1615d216b7f57324a5e69166a344e0 x86/vmware: Add basic paravirt ops support
80e9a4f21fd7ccce7e9b8439986fd028c9946dda x86/vmware: Add paravirt sched clock
aa5ec3f715d576353c7d8f4f8085634bd845b73f x86/vmware: Remove duplicate inclusion of asm/timer.h
d40342a2ac035444897e5952ea72a50440a2a028 vmware: set cpu capabilities during platform initialization
a511e7935378ef1f321456a90beae2a2632d3d83 x86/intel_rdt: Enumerate L2 Code and Data Prioritization (CDP) feature
31516de306c0c9235156cdc7acb976ea21f1f646 x86/intel_rdt: Add command line parameter to control L2_CDP
36b6f9fcb8928c06b6638a4cf91bc9d69bb49aa2 x86/intel_rdt: Fix potential deadlock during resctrl unmount
87943db7dfb0c5ee5aa74a9ac06346fadd9695c8 x86/intel_rdt: Fix potential deadlock during resctrl mount
11e142701609546632ba1fda586252d391026a3f acpi, nfit: add support for NVDIMM_FAMILY_INTEL v1.6 DSMs
79ab67ede21f536851a99ea68ee6fc1f5435e055 acpi, nfit: add 'Enable Latch System Shutdown Status' command support
4226ff69a3dff78bead7d9a270423cd21f8d40b8 vmbus: simplify hv_ringbuffer_read
8dd45f2ab005a1f3301296059b23b03ec3dbf79b vmbus: refactor hv_signal_on_read
05d00bc94ac27d220d8a78e365d7fa3a26dcca17 vmbus: eliminate duplicate cached index
03bad714a1619c0074eb44d6f217c505fe27030f vmbus: more host signalling avoidance
c2e5df616e1ae6c2a074cb241ebb65a318ebaf7c vmbus: add per-channel sysfs info
6981fbf3780366093858c5d2dcdaadcd1fbb04be Drivers: hv: vmbus: Expose per-channel interrupts and events counters
991f8f1c6eb634688952fa6a03cc0ce949b6e363 hyper-v: trace channel events
4a5f3cde4d51c7afce859aed9d74d197751896d5 Drivers: hv: vmbus: Remove x86-isms from arch independent drivers
875c362b69b9e238cf1c2c5c454d5ab9469b20e9 vmbus: make channel attributes static
f0fa297404c3f8ab90f1d89405a72edaff988825 vmbus: add monitor_id and subchannel_id to sysfs per channel
655296c8bbeffcf020558c4455305d597a73bde1 Drivers: hv: vmbus: Fix ring buffer signaling
267a4c76bbdb950688d3aeb020976c2918064584 tmpfs: fix shmem_evict_inode() warnings on i_blocks
75a6f82a0d10ef8f13cd8fe7212911a0252ab99e freeing unlinked file indefinitely delayed
d7fc6cfdf1efaafbd708c08f0be44d71bb9f7fde crypto: chelsio - remove redundant assignments to reqctx and dst_size
7814f552ff826fefa5e1b24083c7a06a9378e9ef crypto: chelsio - Fix an error code in chcr_hash_dma_map()
6dad4e8ab3ec65c3b948ad79e83751cf0f04cbdf chcr: Add support for Inline IPSec
8579e0767c230f25f8abc71d4e99eba6754d3766 crypto: chelsio - make arrays sgl_ent_len and dsgl_ent_len static
267469ea65fd2ef5412177b3269811adfde5a29d chcr: remove unused variables net_device, pi, adap and cntrl
df807a19957c2917fd5a4f5812e240a250066742 chcr: ensure cntrl is initialized to fix bit-wise or'ing of garabage data
d042566d8c704e1ecec370300545d4a409222e39 crypto: chelsio - select CRYPTO_GF128MUL
8f6acb7fbf30da326b58ba092949fcd3ebadb01d crypto: chelsio - Use GCM IV size constant
209c14bfb3b751a537f4af302730e8d9f24cd9cd crypto: chelsio - fix a type cast error
3d64bd670269b1391c924a04722441fc5cb3fc3a crypto: chelsio - Add authenc versions of ctr and sha
e1a018e607a33dc9f987c761daf1792082fb9ca7 crypto: chelsio - Remove dst sg size zero check
5abc8db013174ef6022bf7af81adf210c54e4549 crypto: chelsio - Fix indentation warning
80862bd66a1e933ab9dbed7637c655f8437527ad crypto: chelsio - no csum offload for ipsec path
125d01caae3030451a00a11dbd4e8cecae4efab3 crypto: chelsio - Use kernel round function to align lengths
5fb78dba1667d63ab5ebed19724477a2f1e08717 crypto: chelsio - Update IV before sending request to HW
5110e65536f35e854f5d520b913505dbdbe22787 crypto: chelsio -Split Hash requests for large scatter gather list
6f76672bd65039d68197be12653473cb4529741f crypto: chelsio - Remove declaration of static function from header
b4f210541fc319bd643ad9a4fdbfe2ce31be6cfc i2c: add a protocol parameter to the alert callback
e456cd37bc28abe47dc65189df916ac0510ac1d4 i2c: smbus: add SMBus Host Notify support
7b0ed334b8468dccd3340778bd04c0a8be46b81d i2c: i801: add support of Host Notify
1847bbd709d0f736223cb4762033225cdfafbe5f i2c: i2c-smbus: fix i2c_handle_smbus_host_notify documentation
22e94bd6779e1140350c0792e85c79552ec43673 i2c: i801: store and restore the SLVCMD register at load and unload
9786b1f19ecff36909d3255d5a808012ca3568a6 i2c: i801: minor formatting issues
fe9ba3ec1b6d472c4304728b8193900e7b160ea6 i2c: i801: use BIT() macro for bits definition
f91fba627caa20189185248b771625cf5994813e i2c: i801: use the BIT() macro for FEATURES_* also
c912a25a5a12a497bb47068e3d42d7c9b67bde12 i2c: i801: remove SMBNTFDDAT reads as they always seem to return 0
4d5538f5882a6b67eefbab0f0a3a67ce811621aa i2c: use an IRQ to report Host Notify events, not alert
331c34255293cd02d395b7097008b509ba89e60e i2c: do not enable fall back to Host Notify by default
a086bb8317303dd74725dca933b9b29575159382 i2c: i801: Save register SMBSLVCMD value only once
f7f6d915a10f7f2bce17e3b1b7d3376562395a28 i2c: i801: Restore configuration at shutdown
448c7f3830ca283e485aa943279acea6bde8b270 Input: MT - add support for balanced slot assignment
1f6236bfd7c38d5f9f7648fae7215e65274b9e63 genirq: Add irq_get_trigger_type() to get IRQ flags
290b799c390d77d27effee3ce312203aaa32ee74 Input: psmouse - use IS_ENABLED instead of homegrown code
ad5307715b2d0afed511b2cad9aed530bbbb236b Input: psmouse - fix comment style
5fa75cfe23633edf2fd26abe4a08f22ced4415d1 Input: psmouse - move protocol descriptions around
24a06f3e3ab640490f49c8e8812d9550d6f15e92 Input: psmouse - clean up Cypress probe
c378b5119eb0ea25bfd3348a06b51fca654d9903 Input: psmouse - factor out common protocol probing code
ec6184b1c717b8768122e25fe6d312f609cc1bb4 Input: psmouse - limit protocols that we try on passthrough ports
2b6a321da9a2d8725a1d3dbb0b2e96a7618ebe56 Input: synaptics-rmi4 - add support for Synaptics RMI4 devices
ff8f83708b3e36c050dc3fd7e2f04ea7f1752599 Input: synaptics-rmi4 - add support for 2D sensors and F11
b43d2c1e9353814ce1716fff03d9223f40fa73b5 Input: synaptics-rmi4 - add support for F12
562b42d3ee305472e1b2ea31574c59925e95fd7e Input: synaptics-rmi4 - add support for F30
24672bdfb357b91bed0ea8d432241bf7bdefc8a8 Input: synaptics-rmi4 - using logical instead of bitwise AND
a1376d3de45d3ebc26ecd8f5a57b902f52157082 Input: synaptics-rmi4 - remove check of Non-NULL array
e9000b7978541f73a4bc100117fd417ab08a2a60 Input: synaptics-rmi4 - fix spelling in defines
e21582956005bb1677b0c2f9caf1042020f45408 Input: synaptics-rmi4 - remove pointer to rmi_function in f12_data
546ae1085b2772de47221c8780c000ee9829545d Input: synaptics-rmi4 - remove unneeded variable
345ded8ef489a888f6921c999f872848c96b5af8 Input: synaptics-rmi4 - use the RMI_F11_REL_BYTES define in rmi_f11_rel_pos_report
e4add7b6beaff4061693d0632bc1dcb306edba10 Input: synaptics-rmi4 - fix maximum size check for F12 control register 8
887ec0bfbd146c08e34ccb65a8f4251dc110e52f Input: synaptics-rmi4 - do not check for NULL when calling of_node_put()
3e29d6bb6433ebfa4e187b1164b80baf720d58c3 Input: synaptics-rmi4 - fix register descriptor subpacket map construction
ad338e8b5c8cdb5142380cd6b058dfe24956ee93 Input: synaptics-rmi4 - stop scanning PDT after two empty pages
6bd0dcfacf2875f234483d57acc16b015cd313f3 Input: synaptics-rmi4 - factor out functions from probe
8029a283c4ac100dc4492993633d4c87a7da55d6 Input: synaptics-rmi4 - add a couple of debug lines
3aeed5b573f97b4525841cc07c1e948227af389f Input: synaptics-rmi4 - move IRQ handling to rmi_driver
6d0dbeae71f074c67b081eae45cd58fa39dfda2e Input: synaptics-rmi4 - handle incomplete input data
2775e523246e11c5ce90b69226c5e67aa43e64a5 Input: synaptics-rmi4 - add parameters for dribble packets and palm detect gesture
24f63b1cb05034de74289a684e0938388757085d Input: synaptics-rmi4 - add support for controlling dribble packets in F12
332c3988fe9cbecf9d50f19596b66a34b5eda6de Input: synaptics-rmi4 - set the ABS_MT_TOOL_TYPE bit to report tool type
82264d0cf7aef2247563c031ff2ab96579d5d0cc Input: synaptics-rmi4 - add SMBus support
0d37d63a001202b4932f6b14b05d8d055a0a45b6 Input: synaptics-rmi4 - remove unused fields in struct rmi_driver_data
a64ea311f1e4bc090c89960650637423e86c35c0 Input: synaptics-rmi4 - add rmi_enable/disable_irq
e9dade4106e1c1ff4ae91386b9812ee8f51c3775 Input: synaptics-rmi4 - remove EXPORT_SYMBOL_GPL for internal functions
0a135b88bceac40d0036e401c19cdbda65b38a8f Input: synaptics-rmi4 - have only one struct platform data
c5e8848fc98e363ea51b68de01392366312d9efa Input: synaptics-rmi4 - add support for F03
e621132f934f5922e8a3968edd236f97cdad60cf Input: synaptics-rmi4 - f03 - grab data passed by transport device
b908d3cd812abe3f4a74d7550bbf0a8cbcfbe6ed Input: synaptics-rmi4 - allow to add attention data
ae9979c31007d5366b73640ee7dcbb271357053e Input: synaptics-rmi4 - store the attn data in the driver
5d244f7effafeaa5272ca5daa37d8b7bb17967a8 Input: synaptics-rmi4 - fix debug for sensor clip
d7ddad0acc4add42567f7879b116a0b9eea31860 Input: synaptics-rmi4 - fix F03 build error when serio is module
413d37326700aaf708730b940b04192c36e13ef4 Input: synaptics-rmi4 - select 'SERIO' when needed
b29c139a15b627cd3db803332c89f0ea1b94fc7b Input: synaptics-rmi4 - use Kconfig "if" to express dependency
3a11c0e1f1394e9d871dd8e68f9ce01d7c96e28d Input: synaptics-rmi4 - remove redundant null check on rmi_dev
630a7fa0480bec63e0a300b8485642630340efcf Input: synaptics-rmi4 - correctly swap clip values if axes are swapped
ed77bdf4e4bea810014cdf68b771bcbe3d47163f Input: synaptics-rmi4 - use local variables consistently
05e0be7c900797e9164976a6014d534ce3035909 Input: synaptics-rmi4 - fix reversed conditions in enable/disable_irq_wake
ce363f0dec73b8ec2209a02a7271a9e67ed61368 Input: synaptics-rmi4 - add sysfs interfaces for hardware IDs
f32361b71ae5c81b8fb96f796ab947ba2ad17aa8 Input: synaptics-rmi4 - add rmi_find_function()
e78395334ba6034b53e21e09ce8a50c303d130a9 Input: synaptics-rmi4 - fix error return code in rmi_probe_interrupts()
bf3e8502eefdbb7ac1b8163e5c3acdcb505ae745 Input: synaptics-rmi4 - clean up F30 implementation
81dec809aa728798c3ebff18c3d2d678237273aa Input: synaptics-rmi4 - forward upper mechanical buttons to PS/2 guest
522214d9be9c9f00f34ed89cb95e901b7ac31c59 Input: rmi4 - f30: detect INPUT_PROP_BUTTONPAD from the button count
b6573da139ecbee6f2c77392b51266d4521d50ac Input: synaptics-rmi4 - prevent null pointer dereference in f30
8cf0adf2f8c3f9f30ba4f1b79e051993aea158d7 Input: synaptics-rmi4 - fix handling failures from rmi_enable_sensor
2593cd1189a2a38a17c97abcd847f28f8a4617be Input: synaptics-rmi4 - fix endianness issue in SMBus transport
8a7c71ae38844948f1e42b3d85ab59868287e413 Input: synaptics-rmi4 - cleanup SMbus mapping handling
54bf08946a4ba0567f6ec063f0e42b276c478bcf Input: synaptics-rmi4 - when registering sensors do not call them "drivers"
72fe38704c92e63459dd362cd27f9b32a63bbb48 Input: synaptics-rmi4 - use dev_driver_string when registering interrupt
25670fb0373013ad9cdb2676afb468e4d88e1d53 Input: synaptics-rmi4 - change F12 clip to inactive border debug
a0897d5f2c2d884d20840c82aea517e8a7801441 Input: synaptics-rmi4 - register F03 port as pass-through serio
0d4b8e36b9861d678c454d6bb4c4849827071ebd Input: synaptics-rmi4 - constify attribute_group structures in F01
3e64fcbdbd10e46dede502d507dbcc104837cd59 Input: synaptics-rmi4 - limit the range of what GPIOs are buttons
26dd633e437dca218547ccbeacc71fe8a620b6f6 Input: synaptics-rmi4 - RMI4 can also use SMBUS version 3
b6492b091784ac4052952e43c7cdb0be12b07fee Input: synaptics_rmi4 - remove unneeded MODULE_VERSION() usage
a1ab69021a584d952e6548a44b93760547b1b6b5 Input: synaptics-rmi4 - do not delete interrupt memory too early
6abe534f0776d2437c8302f58d8eb5abd483e926 Input: synaptics-rmi4 - unmask F03 interrupts when port is opened
9f87b9fc369f7719ccdac5077855c5c03b625571 Input: synaptics-rmi4 - log when we create a guest serio port
6c53694fb2223746738d1d0cea71456ca88c8fb2 Input: synaptics - split device info into a separate structure
0ab3fa57425023f42e8822a293d9b87a3ad4e2b3 Input: psmouse - implement fast reconnect option
085fa80dfdd60ac58137a5b5d231e70456126fda Input: psmouse - store pointer to current protocol
c774326a219536ab615d68a22875673f6f608b62 Input: psmouse - introduce notion of SMBus companions
8eb92e5c91338eb19f86ffb2232258337ebf905b Input: psmouse - add support for SMBus companions
e839ffab028981ac77f650faf8c84f16e1719738 Input: synaptics - add support for Intertouch devices
f6f08c55cced6885f1e1448cd0806098e836c5f5 Input: psmouse - fix cleaning up SMBus companions
2755551188d240f0098cdc6f1a2984f8a1785689 Input: synaptics - clear device info before filling in
f4947d79a7080b25829997eeee38d4d65137c161 Input: synaptics - keep PS/2 around when RMI4_SMB is not enabled
3f9db52dc87b003a1732f3e03f7f5fc8701ef4ad Input: synaptics - fix device info appearing different on reconnect
2b30297d481ad305134252557768c22391e0fed6 Input: synaptics - disable kernel tracking on SMBus devices
2bc4298f59d2f15175bb568e2d356b5912d0cdd9 Input: psmouse - fix Synaptics detection when protocol is disabled
2c6ecbba90d4e909bdc8982b4a2318e99d7fc4f2 Input: synaptics - add synaptics_query_int()
991d29fe02a767d13275b38d774cf7c35a4f4a44 Input: synaptics - use BIT() and GENMASK() macros
ad56814fccfba3fe3613fa4d9accff3816786f3c Input: mouse - use local variables consistently
293b915fd9bebf33cdc906516fb28d54649a25ac Input: trackpoint - assume 3 buttons when buttons detection fails
f5d07b9e98022d50720e38aa936fc11c67868ece Input: trackpoint - force 3 buttons if 0 button is reported
2a924d71794c530e55e73d0ce2cc77233307eaa9 Input: trackpoint - only expose supported controls for Elan, ALPS and NXP
1ef8580539d0b9282b726a2c9b7aa25057040cfe Input: psmouse - create helper for reporting standard buttons/motion
08be954b7a7de6742d3d47e4dc20e3b086410761 Input: psmouse - move sliced command implementation to libps2
147b903da65daedc90dbeb66a75dd608a6a41ef2 Input: libps2 - add debugging statements
b99e1f2a1a3f4158bed9b9e9e97ac46678d8c2ac Input: libps2 - support retransmission of command data
29acc42e8e10a4721757af9ed8aec569d30ce39b Input: libps2 - relax command byte ACK handling
3aceaa34d7723c2556555b05ad04a89ce2d66374 Input: trackpoint - combine calls to ps2_command()
ad8fb554f04e38f155c9bc34bbf521fc592ceee7 Input: synaptics - add Lenovo 80 series ids to SMBus
174134ac760275457bb0d1560a0dbe6cf8a12ad6 ipmi_si: Fix error handling of platform device
cc095f0ac1f7c200e51a5c2a78a43c9f42049dbb ipmi: Fix some error cleanup issues
bcb24f6577b9461267f350d11e1bb6dda470f241 scsi: lpfc: Adjust default value of lpfc_nvmet_mrq
411de511c6943554cdc4173c3f522029db2f75c7 scsi: lpfc: Fix RQ empty firmware trap
45cc807291d5fde7a6691a06c0ca9f472fa3fb15 lpfc: Update driver version to 11.1.0.0
205e8240a1b42d32c08b0fae5778cbaa336c9c7f scsi: lpfc: Code cleanup for 128byte wqe data type
bd3061bab3328db40d5d27491fa07a030a12e153 scsi: lpfc: Streamline NVME Targe6t WQE setup
cb942d8e50d31ef9fa883c26b07a49916f0c190b scsi: lpfc: update driver version to 12.0.0.1
fab2e466e9dfe47371b54a54b86f6630feced80e scsi: lpfc: make several unions static, fix non-ANSI prototype
40e4a2e15c563c5663df19fa40cb638c29203ed8 scsi: lpfc: update driver version to 12.0.0.2
6b1f8376dc34fb3b728672ed6e06751f26b3b225 scsi: netvsc: Use the vmbus function to calculate ring buffer percentage
63273cb40101b6f303a5493f1bdf629d4ab3746b scsi: vmbus: Add function to report available ring buffer to write in total ring size percentage
d8ba61ba58c88d5207c1ba2f7d9a2280e7d03be9 x86/entry/64: Don't use IST entry for #BP stack
ddc1c9453550eabd6284021b167f708982df3ca9 s390/dasd: configurable IFCC handling
5d27a2bf6e14f5c7d1033ad1e993fcd0eba43e83 s390/dasd: fix IO error for newly defined devices
cf1489984641369611556bf00c48f945c77bcf02 s390/alternative: use a copy of the facility bit mask
7041d28115e91f2144f811ffe8a195c696b1e1d0 s390: scrub registers on kernel entry and KVM exit
d3f468963cd6fd6d2aa5e26aed8b24232096d0e1 s390/entry.S: fix spurious zeroing of r0
e2dd833389cc4069a96b57bdd24227b5f52288f5 s390: add optimized array_index_mask_nospec
6b73044b2b0081ee3dd1cd6eaab7dee552601efb s390: run user space and KVM guests with modified branch prediction
f19fbd5ed642dc31c809596412dab1ed56f2f156 s390: introduce execute-trampolines for branches
2cb370d615e9fbed9e95ed222c2c8f337181aa90 s390: Replace IS_ENABLED(EXPOLINE_*) with IS_ENABLED(CONFIG_EXPOLINE_*)
d5feec04fe578c8dbd9e2e1439afc2f0af761ed4 s390: do not bypass BPENTER for interrupt system calls
b2e2f43a01bace1a25bdbae04c9f9846882b727a s390: move nobp parameter functions to nospec-branch.c
6e179d64126b909f0b288fa63cdbf07c531e9b1d s390: add automatic detection of the spectre defense
bc035599718412cfba9249aa713f90ef13f13ee9 s390: report spectre mitigation via syslog
d424986f1d6b16079b3231db0314923f4f8deed1 s390: add sysfs attributes for spectre
6a3d1e81a434fc311f224b8be77258bafc18ccc6 s390: correct nospec auto detection init order
33352244706369ea6736781ae41fe41692eb69bb jump_label: Explicitly disable jump labels in __init code
578ae447e7e5d78c90ac40a06406c1741f79ba96 jump_label: Disable jump labels in __exit code
20cb6cab52a21b46e3c0dc7bd23f004f810fb421 mm/hwpoison: fix traversal of hugetlbfs pages to avoid printk flood
8bcb74de764aaa261d6af3ce5ac723e435f00ff4 mm: hwpoison: call shake_page() unconditionally
31286a8484a85e8b4e91ddb0f5415aee8a416827 mm: hwpoison: disable memory error handling on 1GB hugepage
8ac0d9a81edf2ef4a2268b65b802a6b856dc77e6 elevator: allow name aliases
fcf38cdf332a81b20a59e3ebaea81f6b316bbe0c kyber: fix another domain token wait queue hang
105976f517791aed3b11f8f53b308a2069d42055 blk-mq: don't call io sched's .requeue_request when requeueing rq to ->dispatch
ba989a01469d027861e55c8f1121edadef757797 block: kyber: fix domain token leak during requeue
152c1c8d60ebedce8cc912c12f9be9ceca6c6671 s390/cpacf: Introduce kma instruction
bf7fa038707c4c7a51a8f3fc1872a7c0d2adf1d3 s390/crypto: add s390 platform specific aes gcm support.
21214b042d51b056b4eaa332b4cf426250d0e9e2 s390/zcrypt: CEX6S exploitation
9a5641080bf433e195730e47a13de58dcd70f47f s390/zcrypt: Introduce QACT support for AP bus devices.
0de5cd367c6aa2a31a1c931628f778f79f8ef22e nvme-fabrics: protect against module unload during create_ctrl
2b1b7e784a63f5ded4dda804e05e3f34b3880b25 nvme-pci: fix NULL pointer reference in nvme_alloc_ns
85088c4a0f65f0be25a98164ec6bca02ac5cad04 nvme: take refcount on transport module
d3af3ecdc62c46fa67ce7a681f173acb1d750e33 nvme: allocate nvme_queue in correct node
147b27e4bd08406a6abebedbb478b431ec197be1 nvme-pci: allocate device queues storage space at probe
b227c59b9b5b8ae52639c8980af853d2f654f90a nvme: host delete_work and reset_work on separate workqueues
df351ef73789345b4b6c00434c5fd1fca7175643 nvme-fabrics: fix memory leak when parsing host ID option
ee9aebb27cbdac677525e0e56e8844cf4bf46461 nvme-pci: Suspend queues after deleting them
6e49412016f5f28ae36c3eaa5a36ec787b788951 nvme: don't free uuid pointer before printing it
1dad3a67fbb03d88c68ca20a4f89296e50600710 nvme-rdma: remove redundant boolean for inline_data
ad70062cdb4002c74db4fbed4e2b34daffccacc2 nvme-pci: introduce RECONNECTING state to mark initializing procedure
ad6a0a52e6de3d1161b7999c7903db906ba4cf79 nvme: rename NVME_CTRL_RECONNECTING state to NVME_CTRL_CONNECTING
b754a32c66772e6510acd92237aadd4cf227ae39 nvme-rdma: use NVME_CTRL_CONNECTING state to mark init process
3096a739d2ccbfd6a626e388228a16558f76d79d nvme: delete NVME_CTRL_LIVE --> NVME_CTRL_CONNECTING transition
3efd6e8ebe19f0774c82de582849539b60cc4d97 nvme_fc: correct abort race condition on resets
c3aedd225f8bcc3b3e61df074bc045b80542b38a nvme_fc: cleanup io completion
3fd176b754e992e1cdf1693ea8184626d1ed7671 nvme: fix the deadlock in nvme_update_formats
8000d1fdb07e365e6565c2415aefdfed15413794 nvme-rdma: fix sysfs invoked reset_ctrl error flow
d157e5343cb360a525e6b3e7924612a9a90df3b7 nvme_fc: rework sqsize handling
9a915a5be7dc320743034a17394e08eb438baf33 nvme-pci: quiesce IO queues prior to disabling device HMB accesses
6f8e0d787e3727ed70116e3523f4ecb86887c000 nvme: fix the dangerous reference of namespaces list
765cc031cddde40bdc279e8e2697571c7956c54e nvme: change namespaces_mutext to namespaces_rwsem
70da6094a646f0f2d823e077614840cf21055580 nvme: implement log page low/high offset and dwords
77d0612da0e61cb2903ecd0be02444e4c958c672 nvme: centralize ctrl removal prints
187c0832ee80250036adb386b5ffa8f4bcb0ff1e nvme-rdma: Allow DELETING state change failure in error_recovery
b435ecea2a4d0b5cd5be2c5497c3461435f3f3a7 nvme: Add .stop_ctrl to nvme ctrl ops
e929f06d9eaab4dba14e730ef18aa85b76465db9 nvmet: constify struct nvmet_fabrics_ops
d558fb51ad3dc7d5f1287d55d0f2e0646af36253 nvme: make nvme_get_log_ext non-static
7ec6074ff005e5f6cd2cf186a9ec7496c3db04f9 nvme: enforce 64bit offset for nvme_get_log_ext fn
11d9ea6f2ca69237d35d6c55755beba3e006b106 nvme-loop: fix kernel oops in case of unhandled command
64ee0ac0527704c47170316fa58dbde50edaaf70 nvme-pci: Skip queue deletion if there are no queues
a6ff7262c26c190f2480721703211cb12d66d45a nvme-pci: Remove unused queue parameter
62843c2e4226057c83f520c74fe9c81a1891c331 nvme: Use admin command effects for admin commands
12cb5ce101abfaf74421f8cc9f196e708209eb79 libata: use blk taging
98bd4be1ba95f2fe7f543910792b7163a5de06eb libata: move sas ata tag allocation to libata-scsi.c
5067c0469c643512f24786990e315f9c15cc7d24 ata: Add a new flag to destinguish sas controller
3a02824396c1df1db422d067b0fdcac724f44dd6 libata: remove ATA_FLAG_LOWTAG
9b3d028f34686f16a2eb58ea4ad345d4c080b9a6 scsi: megaraid_sas: Pre-allocate frequently used DMA buffers
9ad18a9c0c972b618ef68ca8c4a3ff7e7d0b49eb scsi: megaraid_sas: remove instance->ctrl_info
7535f27d1f1408c25176af86feda846fa3d3d307 scsi: megaraid_sas: Move initialization of instance parameters inside newly created function megasas_init_ctrl_params
e5d65b4b81af41e3d6b8e25f7aabc5256f647d87 scsi: megaraid_sas: Move controller memory allocations and DMA mask settings from probe to megasas_init_fw
107a60dd71b5f536a68437514f7c15a5dd3a4a9d scsi: megaraid_sas: Add support for 64bit consistent DMA
149c5751e672ca0a4892c1e5fd6b87535e81268d scsi: megaraid_sas: Avoid firing DCMDs while OCR is in progress
619831f23bf76e7d420991df3baefc8e24cc5432 scsi: megaraid_sas: Use megasas_wait_for_adapter_operational to detect controller state in IOCTL path
b45093dd76bed88ac72330c08338ea329c94d20c scsi: megaraid: use ktime_get_real for firmware time
f870bcbe9a991264f424ad937916695b2f3de133 scsi: megaraid_sas: NVMe passthrough command support
fad119b707f8cc01b259b8585af4f9688e57c9a7 scsi: megaraid_sas: switch to pci_alloc_irq_vectors
adbe552349f2d1e48357a00e564d26135e586634 scsi: megaraid_sas: fix selection of reply queue
3c6c122cfcbc2264d8414d292ebe2803b7e20215 scsi: megaraid_sas: Use zeroing memory allocator than allocator/memset
18fe6a23e3114a6737471570753b708ff293b9de NFS: Set FATTR4_WORD0_TYPE for . and .. entries
58ba4d5a25579e5c7e312bd359c95f3a9a0a242c perf/x86/intel: Hide TSX events when RTM is not supported
a47ba4d77e1236d214e5116b5631bc4c2d6e6369 perf/x86: Enable free running PEBS for REGS_USER/INTR
7ad1437d6ace0e450a6c1167720608ad660b191d perf/x86/intel: Plug memory leak in intel_pmu_init()
fd48aad9b0f3f7654433dfae3a72ceda36e2de28 perf stat: Support duration_time for metrics
b1491ace8eb2e92677cd9ee966763f8f53d29d16 perf script: Support user regs
80f873557112fc163f011cd131d4cfe4959100a6 perf tools: Add python-clean target
ecdad24d7a4480c9af0ff6dbe00ac8bbae720d19 perf tools: Use scandir() to replace readdir()
c23c2a0f236601c635d9a9d18d7993641e72aa8c perf tools: Make copyfile_offset() static
5c9295bfe6f5f59f3f2eee78f58b0523d117897e perf tests: Remove Intel CQM perf test
5a54c2f5e1717264f6e24687f703937eaca5f55d perf trace beauty madvise: Generate 'behavior' string table from kernel headers
0a7c74eae307894c6c95316c382f118aef8481e8 perf tools: Provide mutex wrappers for pthreads rwlocks
b32ee9e522f7ba26339856a047cfe9efc0be0ff3 perf tools: Lock to protect namespaces and comm list
340b47f510bbe55a76b7309107276f02ea11f117 perf top: Implement multithreading for perf_event__synthesize_threads
0c6b499495e928777c41ca2de4fbb58788269690 perf top: Add option to set the number of thread for event synthesize
1695849735752d2ace22d8c424ba579e33df691c perf mmap: Move perf_mmap and methods to separate mmap.[ch] files
73c17d815000e425aea108226bcb57491a04f534 perf mmap: Adopt push method from builtin-record.c
923d0c9ae570c3f33a0b5a9517c23ccc816d9b75 perf tools: Introduce binary__fprintf()
a1a587073ccdc6ffae414259f65d0a94cadd0a72 perf script: Use fprintf like printing uniformly
69c71252298acad7a25e9499929f723790f48e26 perf script: Add a few missing conversions to fprintf style
894f3f1732cb4ae543d406e4fca1585e8c303a1c perf script: Use event_format__fprintf()
a14390fde64e862c4fe8b92ecb293ee4b12d5bfe perf script: Allow creating per-event dump files
d688d0376c6eb452565c16c95b26cd2c95aa8a82 perf trace beauty prctl: Generate 'option' string table from kernel headers
642ee1c6df4c8571d8a6846a2623fb54f925ef92 perf script: Print information about per-event-dump files
8ceb41d7e305f186543c58178d2e1fe34f708948 perf tools: Rename struct perf_data_file to perf_data
eae8ad8042d82775da1ddf3faa915b32854d9cf4 perf tools: Add struct perf_data_file
e268687bfb73bb7bfe65f23f5cba5c8a0e5bb050 perf tools: Add perf_data_file__write function
cbd5c1787bab4643e5959522275b46de94eba5ac perf trace: Fix an exit code of trace__symbols_init
fa48c892645dfd3159e5aa6eb9cefd00d5cb347a perf script: Fix --per-event-dump for auxtrace synth evsels
2f0af8600e82e9f950fc32908386b9c639f88d48 perf help: Fix a bug during strstart() conversion
a9fc2db0a8abf51c81122799c5ae4808f2324b6d s390/perf: define common DWARF register string table
de9954b75e992d26a67d83990e6219dcb6edc3bf s390/perf: add perf register support for floating-point registers
f971e511cb7d6f1b3730248cf2967d3ccdd8874c tools/perf: Convert ACCESS_ONCE() to READ_ONCE()
7d9285e82db5defca4d9674ba089429eeca0c697 perf/bpf: Extend the perf_event_read_local() interface, a.k.a. "bpf: perf event change needed for subsequent bpf helpers"
451d24d1e5f40bad000fa9abe36ddb16fc9928cb perf/core: Fix crash in perf_event_read()
0c1cbc18df9e38182a0604b15535699c84d7342a perf/core: Fix perf_event_read()
0d3d73aac2ff05c78387aa9dcc2c8aa3804405e7 perf/core: Rewrite event timekeeping
8e1a2031e4b556b01ca53cd1fb2d83d811a6605b perf/cor: Use RB trees for pinned/flexible groups
161c85fab7875f306eee9655dee71068feeb14ce perf/core: Cleanup the rb-tree code
1cac7b1ae3579457200213303fc28ca13b75592f perf/core: Fix event schedule order
6668128a9e25f7a11d25359e46df2541e6b43fc9 perf/core: Optimize ctx_sched_out()
6e6804d2fa0eff6520f3a2b48ff52bcb9dc25a9d perf/core: Simpify perf_event_groups_for_each()
8703a7cfe148f73062c568e9a8549ce692104864 perf/core: Fix tree based event rotation
8d5bce0c37fa10f21dbdd6a6d8fcba85202fe24e perf/core: Optimize perf_rotate_context() event scheduling
e9fa1495d738e34fcec88a3d2ec9101a9ee5b310 ipv6: Reflect MTU changes on PMTU of exceptions for MTU-less routes
aecd67b60722dd24353b0bc50e78a55b30707dcd xdp: base API for new XDP rx-queue info concept
84a1d9c4820080bebcbd413a845076dcb62f45fa net: ethtool: extend RXNFC API to support RSS spreading of filter matches
428604fb118facce1309670779a35baf27ad044c ipv6: do not set routes if disable_ipv6 has been enabled
c6f15047dd8681f1a6387b044188ef028306c4bf mailbox: Convert timers to use timer_setup()
c0752f2bd6ee77aa9334da4f69e8f54a325d282b net/mlx5e: Introduce stats group API
fd8dcdb8d2e72f6ab7caf63392bece01344b4b47 net/mlx5e: Switch Q counters to use the stats group API
40cab9f16cc378f61f5cff0710cdd6caa7db549b net/mlx5e: Switch vport counters to use the stats group API
6e6ef814d27b1fb3cd30fe62d700208065656401 net/mlx5e: Switch IEEE 802.3 counters to use stats group API
fc8e64a3118ee13bc4cafa6a31ea74daf2d644d9 net/mlx5e: Switch RFC 2863 counters to use stats group API
e0e0def9e2a8c6320b5d8cb5b79b795a5a7df732 net/mlx5e: Switch RFC 2819 counters to use stats group API
2e4df0b2415744548f612f26a33c701bd2ce37d8 net/mlx5e: Switch physical statistical counters to use stats group API
3488bd4c3549ea805c48de522a8ede1edc902e4b net/mlx5e: Switch ethernet extended counters to use stats group API
9fd2b5f137f5f723c03f5018acb822dcebfba8f0 net/mlx5e: Switch pcie counters to use stats group API
e6000651cf009280fedee6cbf951747a0beaffb4 net/mlx5e: Switch per prio traffic counters to use stats group API
4377bea27696f45834d77b8e3c7206874d5a66e6 net/mlx5e: Switch per prio pfc counters to use stats group API
0e6f01a49d9c006e3ee3104ca5d4ccf722e154db net/mlx5e: Switch pme counters to use stats group API
e185d43f59ccde68dff474f1f2b38b62f915d74c net/mlx5e: Switch ipsec counters to use stats group API
1fe850062c9ee15a3bea1ae90aef386a492a1c5e net/mlx5e: Switch channels counters to use stats group API
2a5e7a1344f4dff71bb921ee0c9ecf7f5932e570 net/mlx5e: Add dcbnl dscp to priority support
fbcb127e89ba8a4ccbec609a27f8d110474044c8 net/mlx5e: Support DSCP trust state to Ethernet's IP packet on SQ
7d92d580334a18800aaf66aaf2e103271c48bafb net/mlx5e: Add 802.1ad VLAN filter steering rules
f24686e878914c260331b1067898a3925b598c6e net/mlx5e: Add VLAN offloads statistics
e556f6dd47eda62cbb046fa92e03265245a1537f net/mlx5e: Keep updating ethtool statistics when the interface is down
16c1975f1032330d54979fbc83c5f767afce67a9 IB/mlx5: Create profile infrastructure to add and remove stages
c11a226a1e023508a663a07ff822f6ff33e7868c IB/mlx5: Move RoCE/ETH initialization to the corresponding stage
07321b3c674bc2f4d1e47431e38365af523fe34f IB/mlx5: Move ODP initialization to the corresponding stage
5e1e76125152c9e4a963188ff66e773086fb54d2 IB/mlx5: Move hardware counters initialization to the corresponding stage
c8b8992446a945c103ac74ebd5e05672d9b3c48a IB/mlx5: Move loopback initialization to the corresponding stage
3cc297db970762024109f75ce289078f8479a2f8 IB/mlx5: Move locks initialization to the corresponding stage
508562d6f708888b10127c2892513f76ea8b22ba IB/mlx5: Reduce the use of num_port capability
7fd8aefb7ce202dd9d97f752bf249be6215f1004 IB/mlx5: Make netdev notifications multiport capable
32f69e4be269739c3850cd20f1a3322e95c1145f {net, IB}/mlx5: Manage port association for multiport RoCE
d69a24e036596877ce08c25ab8e63a202412fd9e IB/mlx5: Move IB event processing onto a workqueue
a9e546e73ace1ebfb80dc9b55b46ace306f684cd IB/mlx5: Change debugfs to have per port contents
40817cdbb695de49fb1bfe857b0f440541cb22d8 net/mlx5: Add hairpin definitions to the FW API
08437c572c0873a696ceae92aff29f0ae334aeab net/mlx5e: IPoIB, Add PTP ioctl support for child interface
b9c872f2316d27e2a323ffb410d706d680508093 net/mlx5e: Move generic functions to new file
9a31742531018c0b6ab1bccff97109c8020ad86e net/mlx5e: Change Mellanox references in DIM code
4c4dbb4a7363ce56c77cf8eb2090f67c1b0aa2cc net/mlx5e: Move dynamic interrupt coalescing code to include/linux
8115b750dbcbeb3aa412f18b7a8b0aee4d35b079 net/dim: use struct net_dim_sample as arg to net_dim
f97c3dc3c0e8d23a5c4357d182afeef4c67f5c33 net/dim: Fix int overflow
10bea9c8730477ab97ec2e1f590aff52cf8e4e0e RDMA/mlx5: Remove redundant allocation warning print
4d533e0f86952eb97f66f2c9548313f6e51066c0 net/mlx5: Enable setting hairpin queue size
57d689a8ca7b360f902328da95e8b441c24823ca net/mlx5e: Add per-channel counters infrastructure, use it upon TX timeout
a89842811ea98a0452893d83aac07d0b46854636 net/mlx5e: Merge per priority stats groups
193861773534a5711aa439d97eba3515310bb586 net/mlx5e: Extend the stats group API to have update_stats()
aba462134634b502d720e15b23154f21cfa277e5 {net, IB}/mlx5: Raise fatal IB event when sys error occurs
210b1f78076f88cad25b333fffafbac6ae870fcc IB/mlx5: When not in dual port RoCE mode, use provided port as native
42cea83f952499f31e2671c4917be8627617db81 IB/mlx5: Fix cleanup order on unload
a117f73dc2430443f23e18367fa545981129c1a6 net/mlx5e: Sync netdev vxlan ports at open
5dad61b83840d7eceaba5bf316419be11bbb993a net/mlx4_en: Replace netdev parameter with priv in XDP xmit function
f6f0aa97413a420606aabe8142f8a5c0f15b9246 net/mlx4_en: Obsolete call to generic write_desc in XDP xmit flow
f025fd6061e120713d6c11c92983804c6805d6cb net/mlx4_en: XDP_TX, assign constant values of TX descs on ring creaion
68bb399e656f244d3d173a20a8280c167632fca8 sfc: use flow dissector helpers for aRFS
faf8dcc12c2780bfec61eb95e5ad74af2ff4f82f sfc: Track RPS flow IDs per channel instead of per function
8e4881aa1d5d2f9c7ebfd0fe5e138f0cc345832c net: mdio: add mdio45_ethtool_ksettings_get
5227ecccea2d645d253d243ad287169335a4ae64 sfc: remove tx and MCDI handling from NAPI budget consideration
b9b603d46d5aad1fb66fa007759193e82a50c680 sfc: handle TX timestamps in the normal data path
9c3afb33ae587723d2acda044a352670ec8d5b82 sfc: add function to determine which TX timestamping method to use
c1d0d33946725775be1c68515c07d0ff8237d222 sfc: MAC TX timestamp handling on the 8000 series
2935e3c38228ad9bf073eeb0eedff5849eea63db sfc: on 8000 series use TX queues for TX timestamps
04796f4c4dc4ac4c4f405c22e20dc9ae1068eea5 sfc: support separate PTP and general timestamping
1280c0f8aafc4c09c59c576c8d50f367070b2619 sfc: support second + quarter ns time format for receive datapath
5b09179e7fa2849a0c95d14bb69416693e0ed0c3 sfc: add suffix to large constant in ptp
e7345ba352d15c88cf9d8698a6f5bff9c25670eb sfc: mark some unexported symbols as static
3af0f34290f6192756ee1d9c2d5fe27222267035 sfc: replace asynchronous filter operations
c2bebe37c6b686817f795b6b63599ed4472775fa sfc: give ef10 its own rwsem in the filter table instead of filter_lock
fc7a6c287ff395eb64745292b4d398e64152cfb6 sfc: use a semaphore to lock farch filters too
31b842955211f427a099f78a6a63d18a6bbc8d55 sfc: return a better error if filter insertion collides with MC reboot
e0a65e3c5e3b7b11ec9320524b8fcc210f2026e9 sfc: protect list of RSS contexts under a mutex
76bd11c23aaa5c4bed504bfc4cf690240759598d x86/microcode/amd: Move private inlines to .c and mark local functions static
5dedade6dfa243c130b85d1e4daba6f027805033 x86/CPU: Add native CPUID variants returning a single datum
4167709bbf826512a52ebd6aafda2be104adaec9 x86/microcode/intel: Add a helper which gives the microcode revision
dac6ca243c4c49a9ca7507d3d66140ebfac8b04b x86/microcode/AMD: Change load_microcode_amd()'s param to bool to fix preemptibility bug
3f1f576a195aa266813cbd4ca70291deb61e0129 x86/microcode: Propagate return value from updating functions
1008c52c09dcb23d93f8e0ea83a6246265d2cce0 x86/CPU: Add a microcode loader callback
854857f5944c59a881ff607b37ed9ed41d031a3b x86/microcode: Get rid of struct apply_microcode_ctx
c182d2b7d0ca48e0d6ff16f7d883161238c447ed x86/microcode/intel: Check microcode revision before updating sibling threads
91df9fdf51492aec9fed6b4cbd33160886740f47 x86/microcode/intel: Writeback and invalidate caches before updating microcode
30ec26da9967d0d785abc24073129a34c3211777 x86/microcode: Do not upload microcode if CPUs are offline
cfb52a5a09c8ae3a1dafb44ce549fde5b69e8117 x86/microcode: Request microcode on the BSP
a5321aec6412b20b5ad15db2d6b916c05349dbff x86/microcode: Synchronize late microcode loading
2613f36ed965d0e5a595a1d931fd3b480e82d6fd x86/microcode: Attempt late loading only when new microcode is present
bb8c13d61a629276a162c1d2b1a20a815cbcfbb7 x86/microcode: Fix CPU synchronization routine
821b85366284542e00dd834062144c637e818ee0 platform/x86: intel-hid: Power button suspend on Dell Latitude 7275
28e8ed2a01bba317aab9bca1c5609924cbbf6cdc intel-hid: clean up and sort header files
bd1b27e2c8ade686b0e9f6295b5cbe7c27ca01a4 platform/x86: intel-vbtn: Remove redundant inclusions
027d50ccd6a01c6ca8969b49e69f26d64a8f94b2 platform/x86: intel-vbtn: Only activate tablet mode switch on 2-in-1's
db17160dce4ffe4d5bd70b58ee94f398ef9cabb1 s390/cpum_cf: cleanup event/counter validation
ee699f329a239bc3cc8a8c336b9615166993bffc s390/cpum_cf: add support for the MT-diagnostic counter set (z13)
451239eb3d397bd197a79cc3aab943da41ba0905 s390: add support for IBM z14 Model ZR1
543691a4e1e040300ce6598a6ce6527d3144e5db s390/dasd: remove casts to dasd_*_private
45f186becfcfa12a98acdfa2af513018d8b086e0 s390/dasd: Refactor prefix_LRE() and related functions
9d2be0c1d461520578a7634f09527515f51e2267 s390/dasd: Make raw I/O usable without prefix support
577777359e1f47d0cb7dfc23aac0da867a14af00 qeth: repair SBAL elements calculation
0824c5920b16fe11034f3b5d2d48456d282d83f9 iommu/vt-d: avoid dev iotlb logic for domains with no dev iotlbs
757c370f036e1f9f9a816cd481a13cdbcb346eb9 iommu/iova: Sort out rbtree limit_pfn handling
42f87e71c3df12d8f29ec1bb7b47772ffaeaf1ee iommu/iova: Add flush-queue data structures
1928210107edd4fa786199fef6b875d3af3bef88 iommu/iova: Implement Flush-Queue ring buffer
fb418dab8a4f01dde0c025d15145c589ec02796b iommu/iova: Add flush counters to Flush-Queue implementation
8109c2a2f8463852dddd6a1c3fcf262047c0c124 iommu/iova: Add locking to Flush-Queues
9a005a800ae817c2c90ef117d7cd77614d866777 iommu/iova: Add flush timer
13cf01744608e1dc3f13dd316c95cb7a1fdaf740 iommu/vt-d: Make use of iova deferred flushing
fd3ec3663718e5f89fbcbc18a67885203fd914a1 tpm: move tpm_eventlog.h outside of drivers folder
aad887f6641145fec2a801da2ce4ed36cf99c6a5 tpm: use struct tpm_chip for tpm_chip_find_get()
6e592a065d51d26f9d62b8b7501a5114076af8b4 tpm: Move Linux RNG connection to hwrng
e821303c428eedcc20746224d590b11c7000a7e5 iw_cxgb4: Use dsgl by default
7810e09bfba56bc0f2aff705ca7086e6c1f103f6 rdma/cxgb4: Remove a set-but-not-used variable
a9346abed52f08e3e0ceb66d51f527ea11698d3c RDMA/cxgb4: Convert timers to use timer_setup()
18c602dee47268248c95bc0032006e2633e480b7 qede: Use NETIF_F_GRO_HW.
e65f30e0cb29694c4241bd9c96ea9413938fcec5 s390: hypfs: Move diag implementation and data definitions
e435dc31398e63b992639cf62024d959219db191 s390: Make cpc_name accessible
a011eeb2a3d6cd778eb63bea0bf149ebbe658ab5 KVM: s390: Add operation exception interception handler
a2d57b35c0226102b1f2ffdc2f719fcc30c99bf5 KVM: s390: Extend diag 204 fields
95ca2cb57985b07f5b136405f80a5106f5b06641 KVM: s390: Add sthyi emulation
7d0a5e62411a9223512c6af2e4c08a2d7c00fa2e KVM: s390: Limit sthyi execution
45c7ee43a5184ddbff652ee0d2e826f86f1b616b KVM: s390: Fix STHYI buffer alignment for diag224
4a4eefcd0e49f9f339933324c1bde431186a0a7d KVM: s390: sthyi: fix sthyi inline assembly
b7c92f1a4e131e459bcf53a570e7265e5ce64455 s390/sthyi: reorganize sthyi implementation
9fb6c9b3fea1b1d1c6f14178373e8f7235f3b681 s390/sthyi: add cache to store hypervisor info
3d8757b87d7fc15a87928bc970f060bc9c6dc618 s390/sthyi: add s390_sthyi system call
1340ccfa9a9afefdbab90d7935d4ed19817e37c2 x86,sched: Allow topologies where NUMA nodes share an LLC
e9ca267096674eadd1fd479279bcb58df1486049 sched/debug: Adjust newlines for better alignment
449e14bfdb83bf772200840a7ac4dcc1d7cacf54 bpf: Fix unused variable warning
a6c24733d29315fd2d8dd7140f83e834658c62d5 watchdog: hpwdt: condition early return of NMI handler on iLO5
62290a5c194b30a096cbcc6bb8680a5a1e627714 watchdog: hpwdt: Claim NMIs generated by iLO5
bb9f7dd3d95add6f502acab797165ec51cee75c4 skd: Bump driver version
c424be1cbbf852e46acc84d73162af3066cd2c86 mm: munlock: fix a bug where THP tail page is encountered
01cc2e58697e34c6ee9a40fb6cebc18bf5a1923f mm: munlock: fix potential race with THP page split
84d33df279e0380995b0e03fb8aad04cef2bc29f mm: rename FOLL_MLOCK to FOLL_POPULATE
acc3c8d15eed6b68c7edf5bfaea884753aaa8e85 mm: move mm_populate()-related code to mm/gup.c
1674448345cdb56e724483a2a26622771f4e3a10 mm: extract code to fault in a page from __get_user_pages()
1aab92ec3de552362397b718744872ea2d17add2 mm: mlock: refactor mlock, munlock, and munlockall code
a8ca5d0ecbdde5cc3d7accacbd69968b0c98764e mm: mlock: add new mlock system call
de60f5f10c58d4f34b68622442c0e04180367f3f mm: introduce VM_LOCKONFAULT
b0f205c2a3082dd9081f9a94e50658c5fa906ff1 mm: mlock: add mlock flags to enable VM_LOCKONFAULT usage
70feee0e1ef331b22cc51f383d532a0d043fbdcc mlock: fix mlock count can not decrease in race condition
65ec0bd1c7c14522670a5294de35710fb577a7fd vmxnet3: fix incorrect dereference when rxvlan is disabled
87a7c4b3c3570feed2edb9478c3bdd474f43a239 liquidio: fix ndo_change_mtu to always return correct status to the caller
f2d254fac13cc7c86871ea607c4ab1afa7f13e2e liquidio: Added support for trusted VF
ccdd0b4c35f2adb7434ed69a89bc68bb6e9089ea liquidio: prevent rx queues from getting stalled
f605005a50fc1443a14b4e8c9c1727881f8f96ae net: liquidio: clean up Makefile for simpler composite object handling
f058ca6b06d4c4685201de3760b1962641aad445 liquidio: move a couple of functions to lio_core.c
80002347d6f51c45e49eb545ec7ae7077d46faf8 liquidio: add support for ndo_get_stats64 instead of ndo_get_stats
592a4cebc2bccb23880087a21c0626ab7481626d liquidio: Moved common function if_cfg_callback to lio_core.c
fd311f1e7548cf45a273d46aa9c9c8d8330d803c liquidio: Moved common function delete_glists to lio_core.c
a72b2c8ced35315e4f0fdd6f2c4c12f96bb0dc2e liquidio: Moved common definition octnic_gather to octeon_network.h
128ea39439341d4f60bda1740a59ce34bcc19e4c liquidio: Moved common function setup_glists to lio_core.c
c33c997346c34ea7b89aec99524ad9632a2f1e0c liquidio: enhanced ethtool --set-channels feature
18b338f5f9539512e76fd9ebd4c6ca1a0e159e2b liquidio: support use of ethtool to set link speed of CN23XX-225 cards
1207107c7168f779643c91e30f8d6c2f8a4afd4d crypto: testmgr - add testvector for pkcs1pad(rsa)
333e18c5cc74438f8940c7f3a8b3573748a371f9 crypto: testmgr - Fix incorrect values in PKCS#1 test vector
50d2b643ea6675927435743633a57c2a9cfd8d83 crypto: testmgr - Allow leading zeros in RSA
273dda76f757108bc2b29d30a9595b6dd3bdf3a1 xfs: don't use ioends for direct write completions
42e1cca7e91e1a7502694cfd18857ed243f54174 NFS: Change nfs4_setup_sequence() to take an nfs_client structure
6de7e12f53a154d35d9aceae718b764ada23e430 NFS: Use nfs4_setup_sequence() everywhere
7981c8a659143173882dda43b3056a777faeeb7b NFS: Create a single nfs4_setup_sequence() function
9dd9107f330c5d371c62b460975a32d8bd5712b4 NFS: Move slot-already-allocated check into nfs_setup_sequence()
6994cdd798568a0ddb8e0a85e2af24dbe655c341 NFS: Lock the slot table from a single place during setup sequence
0dcee8bb749e5de43b180ccfcb0c5005aa529c92 NFS: Handle setup sequence task rescheduling in a single place
76ee03540f316948c3bc89fc76ded86c88e887a5 NFS: Check if the slot table is draining from nfs4_setup_sequence()
3d35808b1de48e0c478668b3177fcd3360aae543 NFS: Merge the remaining setup_sequence functions
ad05cc0f04341216923895c05e2c364ef34f1bb4 NFS: Make trace_nfs4_setup_sequence() available to NFS v4.0
3be0f80b5fe9c16eca2d538f799b94ca8aa59433 NFSv4.1: Fix up replays of interrupted requests
dac2707227bf35c19f7771e5f19b61bc334b6cd1 nfsd: make nfsd4_scsi_identify_device retry with a larger buffer
248d4fe95f232010846bc648ce92e40b07544c5d scsi: export 'wwid' to sysfs
69d78ef25c7b0058674145500efb12255738ba8a net: sched: store Qdisc pointer in struct block
855319becbcffec6988a4e781a861b69a71c5b58 net: sched: store net pointer in block and introduce qdisc_net helper
8c4083b30e56fc71b0e94c26374b32d95d5ea461 net: sched: add block bind/unbind notif. and extended block_get/put
6e40cf2d4dee9dc22ff398041ce876bef8172dea net: sched: use extended variants of block_get/put in ingress and clsact qdiscs
acb674428c3d57bccbe3f4a1a7a009f6d73e9f41 net: sched: introduce per-block callbacks
208c0f4b5237f1d6611b2c679a8022d6901577d6 net: sched: use tc_setup_cb_call to call per-block callbacks
2447a96f88ee3c082603c2dd38ae51f66977c11d net: sched: cls_matchall: call block callbacks for offload
245dc5121a9bf6a0a12ac1e72f47822fc3fa8cae net: sched: cls_u32: call block callbacks for offload
d6c862baaf9fb27a385a101c7e86b6112bfd8f07 mlx5e: Convert ndo_setup_tc offloads to block callbacks
fa71212e91811ac67014ad19d4fc3b3c3446ccf7 net: sched: remove unused is_classid_clsact_ingress/egress helpers
7612fb0387d6ffcfc3173527466fe3f596657c58 net: sched: remove tc_can_offload check from egdev call
70b5aee46782208c14d93b715e9f62f7fec844f1 net: sched: remove ndo_setup_tc check from tc_can_offload
4bb1b116b7f37a64c08d28213a2e6f87fcef2d8b net: sched: move block offload unbind after all chains are flushed
8f918d3ff4a1283a1693afe2b4c8e1844674ca15 net_sched: check NULL in tcf_block_put()
0f04d057515275099c6e4f767b95a278be4681bf net: sched: cls_u32: use bitwise & rather than logical && on n->flags
c7eb7d7230509ec862d4144f7a831f995bc5d028 net: sched: introduce chain_head_change callback
46209401f8f6116bd0b2c2d14a63958e83ffca0b net: core: introduce mini_Qdisc and eliminate usage of tp->q for clsact fastpath
343723dd51ef1025a860e54df9472b5ba21ee3d9 net: sched: fix clsact init error path
b59e6979a86384e68b0ab6ffeab11f0034fba82d net: sched: fix static key imbalance in case of ingress/clsact_init error
4853f128c13ed2731625dff2410b7fdbe540fb26 net: sched: fix possible null pointer deref in tcf_block_put
b2fb01f426883a794ed80be9110675a2d8356347 net_sched: fix a missing rcu barrier in mini_qdisc_pair_swap()
81d947e2b8dd2394586c3eaffdd2357797d3bf59 net, sched: fix panic when updating miniq {b,q}stats
8c2c2358b236530bc2c79b4c2a447cbdbc3d96d7 net: tcp_memcontrol: properly detect ancestor socket pressure
931f3f4beb031cd483c1c8ab159ef1f8bdbe8888 net: tcp_memcontrol: remove bogus hierarchy pressure propagation
af95d7df4059cfeab7e7c244f3564214aada7dad net: tcp_memcontrol: remove dead per-memcg count of allocated sockets
a0f28dc754bb6e78158eb41bf729342f7c2bcd70 netfilter: ipset: Fix sparse warnings due to missing rcu annotations
a04d8b6bd9113f3e7f0c216dcaa3c1ad498f2a96 netfilter: ipset: Prepare ipset to support multiple networks for hash types
ca134ce86451f3f5ac45ffbf1494a1f42110bf93 netfilter: ipset: Move extension data to set structure
03c8b234e61a9a3aab8d970b3bf681934ecfe443 netfilter: ipset: Generalize extensions support
40cd63bf33b21ef4d43776b1d49c605f876fe32c netfilter: ipset: Support extensions which need a per data destroy function
b91b396d5e35eef9938a56e781cb0171a53907ca netfilter: ipset: list:set: make sure all elements are checked by the gc
ea53ac5b630e813aec20c7cdcfe511daca70dee4 netfilter: ipset: Add hash:net,net module to kernel.
68b63f08d22f23161c43cd2417104aa213ff877f netfilter: ipset: Support comments for ipset entries in the core.
b90cb8ba19dac9b98add5e64adb583fccbf63f94 netfilter: ipset: Support comments in bitmap-type ipsets.
81b10bb4bd16ea975c007f9bb2c2676cef6ade10 netfilter: ipset: Support comments in the list-type ipset.
fda75c6d9e31a901e25b922e86c8fd505c899873 netfilter: ipset: Support comments in hash-type ipsets.
80571a9ea4ca9b6fee7ef0c13d3f31e774e0533b netfilter: ipset: Fix hash resizing with comments
8ec81f9a4db94fa5638c55793365b896dd9daecc netfilter: ipset: For set:list types, replaced elements must be zeroed out
3fd986b3d99e3847f1cce6fc36043d0f16508e1d netfilter: ipset: Use a common function at listing the extensions
7c3ad056ef79fd10f5f111c807ccbd9fa9068c7f netfilter: ipset: Add hash:net,port,net module to kernel.
93302880d8a3e5dc6b7da3f9825beb839152c940 netfilter: ipset: Use netlink callback dump args only
1a869205c75cb222263fa04f200485ffbe9eaadf netfilter: ipset: The unnamed union initialization may lead to compilation error
b49faea7655ec10ade15d7d007e4218ca578a513 netfilter: ipset: fix incorret comparison in hash_netnet4_data_equal()
9562cf28d1b48d0545d7b5dd2995d00b45e1cb53 netfilter: ipset: Add hash: fix coccinelle warnings
4d0e5c076d01d3fb4767a502a9517923fb9a080e netfilter: ipset: add markmask for hash:ip,mark data type
004088768b78f69002f03a341597217eb608fb2c netfilter: ipset: kernel: uapi: fix MARKMASK attr ABI breakage
af284ece87365f3a69723f5bcc1bcdb505b5eb5d netfilter: ipset: Prepare the kernel for create option flags when no extension is needed
07cf8f5ae2657ac495b906c68ff3441ff8ba80ba netfilter: ipset: add forceadd kernel support for hash set types
ecc245c2bd5dcee91e6818fd3e7fb6454ad2ca06 netfilter: ipset: Removed invalid IPSET_ATTR_MARKMASK validation
6e41ee684ea0c338e7d83fc88725581027856595 netfilter: ipset: netnet,netportnet: Fix value range support for IPv4
94729f8a1e9d38c8df6c83799fde8d2eaef2ff54 netfilter: ipset: Resolve missing-field-initializer warnings
1b05756c48ea07ced9604ef01d11194d936da163 netfilter: ipset: Fix warn: integer overflows 'sizeof(*map) + size * set->dsize'
b167a37c7bbc6f7589f439ba7d9a49af5ad37ff5 netfilter: Convert pr_warning to pr_warn
0e9871e3f79fd17c691b50a9669220c54ff084a2 netfilter: ipset: Add skbinfo extension kernel support in the ipset core.
39d1ecf1ad0e19145e1f3a6cd838b7354ef71bf7 netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.
af331419d34e2fc0e2d0c629734f8d160f95a3ec netfilter: ipset: Add skbinfo extension kernel support for the hash set types.
cbee93d7b71bf9d73382e503a4f60848eec60ea8 netfilter: ipset: Add skbinfo extension kernel support for the list set type.
aef96193fe7b2791c4a3b19fe75426b929769471 netfilter: ipset: send nonzero skbinfo extensions only
07034aeae152de52c29f032ca995bf9dafbe24e2 netfilter: ipset: hash:mac type added to ipset
86ac79c7bea1543423f96f388b7ac2e3acca66b3 netfilter: ipset: Support updating extensions when the set is full
59de79cf5706b2ad19598fac6c071a5490cb49d8 netfilter: ipset: Indicate when /0 networks are supported
25a76f3463e0424fdf85773afb4be4972b1c0a29 netfilter: ipset: Simplify cidr handling for hash:*net* types
cac3763967362ace7996532ad3933f493a928a1b netfilter: ipset: Explicitly add padding elements to hash:net, net and hash:net, port, net
2006aa4a8c3571e861070b4524dc554e302924bd netfilter: ipset: Fix sparse warning
caed0ed35b1e3f3f05dfcb386bcb26df7d47f0ae netfilter: ipset: Properly calculate extensions offsets and total length
2b67d6e01de1fa220e3f6a4ee63d7ee07d959f55 netfilter: ipset: No need to make nomatch bitfield
43ef29c91a247e9e0cc4d4538c1d1f5b8ca728c1 netfilter: ipset: Preprocessor directices cleanup
8e55d2e5903e4698a964163e0cf81261eee086ee netfilter: ipset: Return ipset error instead of bool
d25472e4706329f595377aca38ccb664bdd14531 netfilter: ipset: Check IPSET_ATTR_PORT only once
728a7e6903af6f901eeff9a2d9ffb06d55e9b1e4 netfilter: ipset: Return bool values instead of int
037261866c8dd164c426580160973eb2d68f688c netfilter: ipset: Check for comment netlink attribute length
275e2bc0f25d5eb99c99ebb7293fc3722533124b netfilter: ipset: Fix ext_*() macros
1823fb79e5b6e3950fd24d2990b3b5c45283f15c netfilter: ipset: Improve preprocessor macros checks
a3b1c1eb50f9b3e0c73c37157d0c61b2e90ae580 netfilter: ipset: deinline ip_set_put_extensions()
edda0791743eafc36382fb893d91547f36edaf7d netfilter: ipset: Use SET_WITH_*() helpers to test set extensions
7dd37bc8e605d3ce14e6a1bc88ebbfae7ef43b9f netfilter: ipset: Check extensions attributes before getting extensions.
2c227f278a92ca3a1515373cdf9cce3766433e40 netfilter: ipset: Permit CIDR equal to the host address CIDR in IPv6
a212e08e8e0a5c689e61dd175b6e99223dda835c netfilter: ipset: Make sure we always return line number on batch
aff227581ed1ac299e3a50eef4bb1cef944e1404 netfilter: ipset: Check CIDR value only when attribute is given
f690cbaed9fe4d77592e24139db7ad790641c4fd netfilter: ipset: Fix cidr handling for hash:*net* types
c4c997839cf92cb1037e43a85cdb4cbf44ed39a5 netfilter: ipset: Fix parallel resizing and listing of the same set
bd55389cc34b75948c2876c821175a976bbac5b1 netfilter:ipset Remove rbtree from hash:net,iface
b57b2d1fa53fe8563bdfc66a33b844463b9af285 netfilter: ipset: Prepare the ipset core to use RCU at set level
96f51428c43de20723630f0d756a7a9a42cbd974 netfilter: ipset: Introduce RCU locking in bitmap:* types
18f84d41d34fa35d0d64bbaea01fe664553ecc06 netfilter: ipset: Introduce RCU locking in hash:* types
00590fdd5be0d763631ef10e6a3e2ce8fc2d9ec3 netfilter: ipset: Introduce RCU locking in list type
ca0f6a5cd99e0c6ba4bb78dc402817f636370f26 netfilter: ipset: Fix coding styles reported by checkpatch.pl
6fe7ccfd77415a6ba250c10c580eb3f9acf79753 netfilter: ipset: Out of bound access in hash:net* types fixed
96be5f2806cd65a2ebced3bfcdf7df0116e6c4a6 netfilter: ipset: Fixing unnamed union init
00db674bedd68ff8b5afae9030ff5e04d45d1b4a netfilter: ipset: Fix sleeping memory allocation in atomic context
95ad1f4a9358dff1dcf84bf5c9cc84caa9215f7f netfilter: ipset: Fix extension alignment
e9dfdc052d018268926ab769d5b7598226713d5a netfilter: ipset: Fix hash:* type expiration
0aae24eb409fc429f54ca3809f904f1b91e295e0 netfilter: ipset: Fix hash type expire: release empty hash bucket block
45040978c8994d1401baf5cc5ac71c1495d4e120 netfilter: ipset: Fix set:list type crash when flush/dump set in parallel
d8aacd87180141ff6b812b53de77a4336e87c91a netfilter: ipset: Check IPSET_ATTR_ETHER netlink attribute length
2da16a6948ca8f025e2c226ea4fc32baa6b90f27 netfilter: ipset: Remove extra whitespaces in ip_set.h
da9fbfa76f32a031cb70b11e9fa650e30c85d040 netfilter: ipset: Mark some helper args as const.
7ffea37957b900422ce8b82e9651f7a0a6fac733 netfilter: ipset: Headers file cleanup
bec810d973003b30bc477146904af6bd93fd2df8 netfilter: ipset: Improve skbinfo get/init helpers
1d0d6bd61d495d271b9774a15fbea93e4875474b netfilter: ipset: Use kmalloc() in comment extension helper
57982edc2739b4473868e7579c0185270468bae1 netfilter: ipset: Split extensions into separate files
722a94519a683d8ba5a8e75dec9622cc906273c1 netfilter: ipset: Separate memsize calculation code into dedicated function
837a90eab67edfa464dcc0ddef193449d23da408 netfilter: ipset: Regroup ip_set_put_extensions and add extern
a54dad51a83ba08e951191ce3e1e9eb44750c0bb netfilter: ipset: Add element count to hash headers
702b71e7c666a1c9be9d49e8cd173f0d4d1e859f netfilter: ipset: Add element count to all set types header
9e41f26a505cca04b7122e65053cf6447007ea79 netfilter: ipset: Count non-static extension memory for userspace
5fdb5f6938cf241d574f0ff5504d753c801dc4ae netfilter: ipset: Remove redundant mtype_expire() arguments
509debc97587629dd5a6dca337afa57cb874b418 netfilter: ipset: Simplify mtype_expire() for hash types
cee8b97b6c13b1331aa3a89a1aab2ca6a7bd06d0 netfilter: ipset: Make NLEN compile time constant for hash types
5a902e6d4b61de33f4a9d3fc5fbc9d339fee7ed3 netfilter: ipset: Make sure element data size is a multiple of u32
961509ac183ec1069616541938728fcb822f5dff netfilter: ipset: Optimize hash creation routine
21956ab290f7f3f9203eb89adc0a1331e59b7f0f netfilter: ipset: Make struct htype per ipset family
9be37d2acdc4fa452a9e250341cbb77668ab94e7 netfilter: ipset: Collapse same condition body to a single one
a71bdbfa99272f0beb92b669d2bbc626871e00e5 netfilter: ipset: Fix reported memory size for hash:* types
c0db95c7bcca956d444f233aee5c2b124392ef9a netfilter: ipset: hash:ipmac type support added to ipset
fcb58a033271e448c3e49a3b3d3e9e0c0bcf61d9 netfilter: ipset: use setup_timer() and mod_timer().
737d387b75ec79d62b12fd8996c634b4635cc98f netfilter: ipset: hash: fix boolreturn.cocci warnings
50054a9223aaf79985c55ef7dd090ced15581567 Fix bug: sometimes valid entries in hash:* types of sets were evicted
40b446a1d8af17274746ff7079aa0a618dffbac3 netfilter: ipset: Null pointer exception in ipset list:set
68ad546aefddb4dacdb78074df9dddb51424c427 netfilter: Remove unnecessary cast on void pointer
d4ef38354120d873f5db14ca6e13d051ef4ab068 netfilter: Remove exceptional & on function name
7f4f7dd4417d9efd038b14d39c70170db2e0baa0 netfilter: ipset: ipset list may return wrong member count for set with timeout
48596a8ddc46f96afb6a2cd72787cb15d6bb01fc netfilter: ipset: Fix adding an IPv4 range containing more than 2^31 addresses
522e89d60b62d16075a7bc96dd5eb2f3eb813635 netfilter: ipset: Compress return logic
8851e799ffde0d85fab6716075975200c9b5094c netfilter: ipset: Fix sparse warnings
e8542dcec002b31339f7771441fd5dffb42223ae netfilter: mark expected switch fall-throughs
49971b8853f576f4252cbc8fc3df8173d7a56de3 netfilter: ipset: use nfnl_mutex_is_locked
a778a15fa5cf5f632cd55845f548189a29e9b57b netfilter: ipset: add resched points during set listing
4750005a85f76b3df1e5df19c283dde96b071515 netfilter: ipset: Fix "don\'t update counters" mode when counters used at the matching
0b8d9073539e217f79ec1bff65eb205ac796723d netfilter: ipset: Fix wraparound in hash:*net* types
c82b31c5f5608f7f069c584ac169f5691a92d3f5 netfilter: xt_set: use pr ratelimiting
26c97c5d8dac6bc56d4360561a286f52543ac07e netfilter: ipset: Use is_zero_ether_addr instead of static and memcmp
65d88fd0baaa5c9def9383ac696097911d4ceb73 bpf, nfp: add meta data support
8afd9c961e95b1529cbc2b2b9c063a488659b337 nfp: add more white space to the instruction defines
995e101ffa71eff6ae5f5d5bf1ca8ec757b4ed21 nfp: bpf: encode extended LM pointer operands
363fc53b8b5803ce43debc1e66cebaaf509fd20a nfp: flower: Convert ndo_setup_tc offloads to block callbacks
90d97315b3e774450f06c035903fed246781fe35 nfp: bpf: Convert ndo_setup_tc offloads to block callbacks
8d26d5636dff9fca30816579910aaa9a55b4d96d net: sched: avoid ndo_setup_tc calls for TC_SETUP_CLS*
2df03a50f14ab6d888c212aa332536933ded040a nfp: bpf: support accessing the stack beyond 64 bytes
b14157eeed4eff2b293e0ca7738f6a3dbfff51cc nfp: bpf: support stack accesses via non-constant pointers
44ae12a768b7212976a362c590075716a77e8f28 net: sched: move the can_offload check from binding phase to rule insertion phase
2df7b2d20622f98bca2f001bb0e8d8bee01782ac nfp: flower: app should use struct nfp_repr
f449657f83532807f388b9b99cf0c3f7be65eda9 nfp: bpf: reject TC offload if XDP loaded
012bb8a8b5a2688590f829884acc83697d68a96d nfp: bpf: drop support for cls_bpf with legacy actions
94508438e8ea4391696c5171527678e9dbd08789 nfp: bpf: remove the register renumbering leftovers
9ce7a956327ad6c14e1a7eb9f4cb5300c8b61db6 nfp: bpf: refactor offload logic
e4a91cd565e2c4e299abe9eb906c506ecc01032a nfp: bpf: require seamless reload for program replace
c1c88eae8a8155c55dbbc7363f1f127c43e1b5d1 nfp: bpf: move program prepare and free into offload.c
9314c442d7ddf749d29c09ab48ffa5333d2bf48e nfp: bpf: move translation prepare to offload.c
c6c580d7bc390f864488c66153a487057e76d9d8 nfp: bpf: move to new BPF program offload infrastructure
453f85d43fa9ee243f0fc3ac4e1be45615301e3f mm: remove __GFP_COLD
1a24d4f9c07cc5b9d2207cd84236dff3048438e5 nfp: register flower reprs for egress dev offload
0115552eac14a2d6db66da5f26bd67d0f2a5d79b nfp: remove false positive offloads in flower vxlan
288b3de55aace830f13280985ec9e6bcbff33b1b bpf: offload: move offload device validation out to the drivers
102740bd9436a3a6ba129af3a48271d794009fa5 cls_bpf: fix offload assumptions after callback conversion
d3f89b98e391475419ae2d8834813d3ecbb48f67 nfp: bpf: keep track of the offloaded program
5b674140addc3c863efa227946ad7328f016a7a3 nfp: bpf: record jump destination to simplify jump fixup
a09d5c52c42129adbac2d1e39bd0e49a92729e3e nfp: bpf: flag jump destination to guide insn combine optimizations
3239e7bb28a8a4a96c36beeaa6439666e1ed4f8b nfp: bpf: correct the encoding for No-Dest immed
5468a8b929e6276e139405d525c963a56890b5e0 nfp: bpf: encode indirect commands
5e4d6d20939f8e77b7734c0cea6886dff60c99de nfp: bpf: factor out is_mbpf_load & is_mbpf_store
9879a3814beb3b1350755475e67a8d92ba1f7e4b nfp: bpf: implement memory bulk copy for length within 32-bytes
8c90053858fce1ca60fab7be03bb61d314ea5c1c nfp: bpf: implement memory bulk copy for length bigger than 32-bytes
bd0b2e7fe611953470ec7c533b455fb2abd382cd net: xdp: make the stack take care of the tear down
77a844ee650cdafd82d13c40f587892c79e77c77 nfp: bpf: prepare for parsing BPF FW capabilities
0d49eaf4db2ad18489ff1cfceba17006c1d17b7e nfp: bpf: add basic support for adjust head call
8231f8444110c346a7d28756abbca11c956d5803 nfp: bpf: optimize the adjust_head calls in trivial cases
0bce7c9a607f1dbf8d83dd2865e1657096dbce59 nfp: bpf: correct printk formats for size_t
bedeca15afd8f0a2d3ad3a76830b3f6525a2aeeb nfp: flower: compile Geneve match fields
4f83435ad777358d9cdc138868feebbe2a23f577 nfp: bpf: allocate vNIC priv for keeping track of the offloaded program
cae1927c0b4a93ae15de824faca1f6f611a44fcd bpf: offload: allow netdev to disappear while verifier is running
0f08479143854257a8e7b38f296b1fd17bc91091 nfp: add repr_preclean callback
d2c2928d861e26cdbffec72e7451d25977d5e783 nfp: flower: implement the PORT_REIFY message
8c6a6d98044dca7e54bcc108da1d8e47b409ec6a nfp: fix incumbent kdoc warnings
c4f7730be580f8c39decc058246a83ddf7d7b3cb nfp: bpf: round up the size of the stack
ccbdc596f4f6f6795956d46bb4b5f58c7e4bc3c8 nfp: bpf: don't allow changing MTU above BPF offload limit when active
1549921da3e8efb6c95e39444c67ed1729a0ccaf nfp: bpf: move jump resolution to jit.c
488feeaf6d2f9189bdb65f31094a8cff5fcd6c58 nfp: bpf: add helpers for modifying branch addresses
2314fe9ed0a1760ceab96b81e6b7181963c93254 nfp: bpf: relocate jump targets just before the load
44a12ecc1cab7dcf4647dfef7d94f5c559c01407 nfp: bpf: don't depend on high order allocations for program image
e84797fe159c8f849edd96ab72cc21eb890656fe nfp: bpf: use a large constant in unresolved branches
af93d15ac6c40d097b08c18a65a0414f94110401 nfp: hand over to BPF offload app at coarser granularity
ff627e3d07a07f7ed1105f459ee9586d4be7818e nfp: bpf: reuse verifier log for debug messages
0a9c1991f285f829fd786fa2a9c824c2a3f87bc6 bpf: rename bpf_dev_offload -> bpf_prog_offload
4da98eea7903670d7b1d9ac83bbc6502a60bf0fd nfp: bpf: add map data structure
d48ae231c5e13d98e3664443c6342c2011f5df2b nfp: bpf: add basic control channel communication
ff3d43f7568c82b335d7df2d40a31447c3fce10c nfp: bpf: implement helpers for FW map ops
9d080d5da959ac4b64954f47b5ffd35a752d268e nfp: bpf: parse function call and map capabilities
ce4ebfd859c33ea098bfa2e1b4623128046f59c8 nfp: bpf: add helpers for updating immediate instructions
77a3d3113ba2aa5919af2335c05bf9505f4241db nfp: bpf: add verification and codegen for map lookups
3dd43c3319cb0ba17cec9a989124176b409da326 nfp: bpf: add support for reading map memory
1bba4c413a328bfd216d59a212bec371e032391b nfp: bpf: implement bpf map offload
7dfa4d87cfc48f3d4171f4a1b886bbbe4faf5c07 nfp: bpf: print map lookup problems into verifier log
74801e50d5b89329e6c02b8bd924a41234f76316 nfp: bpf: reject program on instructions unknown to the JIT compiler
eb1d7db927a9653f1402473c777839e0456a7836 nfp: bpf: set new jit info fields
7a0ef6939548b9eb74bf464daf55ad68a23602a2 bpf: offload: allow array map offload
ca027a1c45e30d89c5cc6dcacbdcea74e1ff65fc nfp: bpf: add short busy wait for FW replies
bcc93a23ca595fb1d7d7540bec68196a3715da13 nfp: register devlink after app is created
3eb47dfca0b245d88a4c30b8e41204036e0882e4 nfp: protect each repr pointer individually with RCU
78a0a65f409a604430e4e8dc413d6e72ef29288e nfp: allow apps to disable ctrl vNIC capabilities
81bd5ded60c8a369fee6c4d94a0bcb84ad9ce56a nfp: bpf: disable all ctrl vNIC capabilities
acc2abbbb1b9fb8a018706055794feb4bb9bcdbc nfp: bpf: plumb extack into functions related to XDP offload
52be9a7cde1fd26e43a01ac06d5c2558c563a7cb nfp: bpf: use extack support to improve debugging
703f578a353d0735961b7fd7e2589532dfa9bf11 nfp: fix kdoc warnings on nested structures
b7d99235473ad3a550f8eb05bd4469edadf1c8e6 nfp: bpf: fix immed relocation for larger offsets
e3ac6c0737e2b17bf11210e3fd66565e9b818b87 nfp: bpf: require ETH table
d692403e5cf8008f31f5664a6f3ce3e65d54f458 nfp: forbid disabling hw-tc-offload on representors while offload active
87be98927eb0bfa5484dfbe5ba2f6b7f91dd9187 fm10k: prefer %s and __func__ for diagnostic prints
53db86adc2c9b3ce0454bece4487e8eca96e2614 x86/PCI: VMD: Eliminate vmd_vector member from list type
b31822277abcd7c83d1c1c0af876da9ccdf3b7d6 x86/PCI: VMD: Eliminate index member from IRQ list
3906b91844d603153c094f636205ec9aa5454b2f PCI: vmd: Use SRCU as a local RCU to prevent delaying global RCU
3eefa790c9681a2dcbc923542dcd85b6989e8855 PCI: host: Mark PCIe/PCI (MSI) cascade ISR as IRQF_NO_THREAD
09f7298100ea9767324298ab0c7979f6d7463183 userfaultfd: register uapi generic syscall (aarch64)
b740d2e9233cb33626d3b62210bcfc6a34baa839 platform/x86: Add PMC Driver for Intel Core SoC
70e0d117f2502f19517be03a64b3c513f31b3cdb x86/pmc_core: Use Intel family name macros for pmc_core driver
df2294fb64285d2d793cf50c682ac4bfddf56c4c intel_pmc_core: Convert to DEFINE_DEBUGFS_ATTRIBUTE
127595ed21c1bb24e20d488914b70ca7a643f7a4 platform/x86: intel_pmc_core: avoid boot time warning for !CONFIG_DEBUGFS_FS
8434709ba71473f75572245c247d3c1e92509cf3 platform/x86: intel_pmc_core: Fix PWRMBASE mask and mmio reg len
0bdfaf429d1da662742708153bf8cc945bf4904b platform/x86: intel_pmc_core: Add PCH IP Power Gating Status
173943b3dae570d705e3f5237110a64a28c0bf74 platform/x86: intel_pmc_core: ModPhy core lanes pg status
fe748227570107abaa4767c39be3eff934bdaf5c platform/x86: intel_pmc_core: Add MPHY PLL clock gating status
9c2ee19987ef02fe3dbe507d81ff5c7dd5bb4f21 platform/x86: intel_pmc_core: Add LTR IGNORE debug feature
daf5d1433d6697ec8786604c30f69b2f9d4c7978 platform/x86: intel_pmc_core: Add KBL CPUID support
4f24ecff0153047a4a8b53c31d8001ee79e1cab7 platform/x86: intel_pmc_core: fix out-of-bounds accesses on stack
c977b98bbef5898ed3d30b08ea67622e9e82082a platform/x86: intel_pmc_core: Make the driver PCH family agnostic
12d614a0dcaee9668c641fcaa9f524da861a765e platform/x86: intel_pmc_core: Remove unused EXPORTED API
8c9180dd2c2a5f1356121cd87b373d9881b41c65 platform/x86: intel_pmc_core: Remove unused variable
7fc658923a599f3ad68dbccec59b6631c6352455 platform/x86: intel_pmc_core: Fix kernel doc for pmc_dev
25789f95a8834d154e5c1f0c9df9a7faedeae98e platform/x86: Drop duplicate dependencies on X86
2854a0aa822c11ea8538ebfe94a62e20ab570e2b platform/x86: intel_pmc_core: Change driver to a module
1f644da7e920cb83403818efa88ebfb6d1528264 platform/x86: intel_pmc_core: Fix file permission warnings
750e0f570b7145870d40f07337f3356c18e0abd4 platform/x86: intel_pmc_core: Refactor debugfs entries
21ae43570940f8393a80369f62a3880bd64daad8 platform/x86: intel_pmc_core: Substitute PCI with CPUID enumeration
00f8b2fce4da2296bafc1de6a46510a13ef60938 platform/x86: intel_pmc_core: Convert to ICPU macro
941691ef2197944a202d7870dcd7da3fb0391c65 platform/x86: intel_pmc_core: Remove unused header file
eeb2d80d502af28e5660ff4bbe00f90ceb82c2db ACPI / LPIT: Add Low Power Idle Table (LPIT) support
9383bbadfe29fe8319e2245b75a508db9abd7b87 ACPI / LPIT: Export lpit_read_residency_count_address()
745698c37c08f48fb5ad3c0cb7ee955bd5701d4a platform/x86: intel_pmc_core: Read base address from LPIT
291101f6a73566f5d1ab597784288c5bc85906fd platform/x86: intel_pmc_core: Add CannonLake PCH support
661405bd817b209ac9bd4812c63d90873a7f2993 platform/x86: intel_pmc_core: Special case for Coffeelake
04ced159cec863f9bc27015d6b970bb13cfa6176 blk-mq: move hctx lock/unlock into a helper
08b5a6e2a769f720977b245431b45134c0bdd377 blk-mq: silence false positive warnings in hctx_unlock()
b7435db8b8d11df94453708295c2ea5b09caff5f blk-mq: Add locking annotations to hctx_lock() and hctx_unlock()
c27d53fb445f2d93a1918c3dd7344770b0cd865b blk-mq: Reduce the number of if-statements in blk_mq_mark_tag_wait()
0f95549c0ea1e8075ae049202088b2c6a0cb40ad blk-mq: factor out a few helpers from __blk_mq_try_issue_directly
396eaf21ee17c476e8f66249fb1f4a39003d0ab4 blk-mq: improve DM's blk-mq IO merging via blk_insert_cloned_request feedback
9e97d2951a7e6ee6e204f87f6bda4ff754a8cede blk-mq-sched: remove unused 'can_block' arg from blk_mq_sched_insert_request
23d4ee19e789ae3dce3e04bd24e3d1537965475f blk-mq: don't dispatch request in blk_mq_request_direct_issue if queue is busy
c77ff7fd03ddca8face268c4cf093c0edf4bcf1f blk-mq: Rename blk_mq_request_direct_issue() into blk_mq_request_issue_directly()
15fe8a90bb45b953ca36f074194fcb519a05fdec blk-mq: remove blk_mq_delay_queue()
818cd1cbaa7b00bbc35452a76bebc681a65f1912 block: add kblock_mod_delayed_work_on()
ae943d20624de0a6aac7dd0597616dce2c498029 blk-mq: Avoid that blk_mq_delay_run_hw_queue() introduces unintended delays
86ff7c2a80cd357f6156a53b354f6a0b357dc0c9 blk-mq: introduce BLK_STS_DEV_RESOURCE
5ea708d15a928f7a479987704203616d3274c03b block: simplify blk_init_allocated_queue
5ee0524ba137fe928a88b440d014e3c8451fb32c block: Add 'lock' as third argument to blk_alloc_queue_node()
498f6650aec864e331cae7575fec5f07781d0bf3 block: Fix a race between the cgroup code and request queue initialization
a063057d7c731cffa7d10740e8ebc2970df8dbb3 block: Fix a race between request queue removal and the block cgroup controller
37f9579f4c31a6d698dbf3016d7bf132f9288d30 blk-mq: Avoid that submitting a bio concurrently with device removal triggers a crash
f23f5bece686a76598335141a091934f7eb0998c blk-mq: Allow PCI vector offset for mapping queues
22b5560195bd66bc43359b71821dc78cc9de56c6 nvme-pci: Separate IO and admin queue IRQ vectors
b337a9380f7effd60d082569dd7e0b97a7549730 timer: Allocate per-cpu tvec_base's statically
8def906044c02edcedac79aa3d6310ab4d90c4d8 timer: Don't initialize 'tvec_base' on hotplug
3650b57fdf208bc0e36cbe7b5e0744bd0e0cf34d timer: Further simplify the SMP and HOTPLUG logic
6201b4d61fbf194df6371fb3376c5026cb8f5eec timer: Remove code redundancy while calling get_nohz_timer_target()
bc7a34b8b9ebfb0f4b8a35a72a0b134fd6c5ef50 timer: Reduce timer migration overhead if disabled
683be13a284720205228e29207ef11a1c3c322b9 timer: Minimize nohz off overhead
4e75e1d7dac9d7c95c57eceb451d01f2afcc8626 driver core: add helper to reuse a device-tree node
324c54fab707921d6c68a05e5829b9d87cc5d884 usb: host: Remove remaining pci_pool in comments
ce594e9824ab6ed41ac86f672203f1832b87de79 r8152: simply the arguments
2c93e790e8253552227bf9b46a8d49dca3f71b06 usb: add CONFIG_USB_PCI for system have both PCI HW and non-PCI based USB HW
5095cb89c62acc78b4cfaeb9a4072979d010510a usb: of: add functions to bind a companion controller
aeb9dd1de98c1a5f2007ea5d2a154c1244caf8a0 usb/early: Add driver for xhci debug capability
4c39d4b949d36faffbc726525b469886cf311d1c usb: xhci: use bus->sysdev for DMA configuration
07814246dd5530860ef758fd9b2b5f2e26472aa2 USB: serial: allow subdrivers to modify port-endpoint mapping
a794499b261b8487a984783ccc864975e1bcc7bf USB: serial: add calc_num_ports callback to generic driver
6538808c5619850cfedc9bee6d64d3793b31923d USB: serial: relax generic driver bulk-endpoint requirement
da2befa6d57e9dc04060207d98b130a59e2448cd USB: serial: visor: clean up clie_5 endpoint hack
ea3c6ebdcb4e6f9e1b16d9ced983a8f9131abd01 USB: serial: visor: clean up treo endpoint hack
c8b5d129ee293bcf972e7279ac996bb8a138505c net: usbnet: support 64bit stats
6ffa770e311a11e760777b8a527a8d9562628b20 usbnet: kaweth: Use net_device_stats from struct net_device
69307ccb9ad7ccb653e332de68effdeaaab6907d usb: xhci: bInterval quirk for TI TUSB73x0
21470e32ca7f976bf131aa3c7b54019d07f7d821 usb: fix some references for /proc/bus/usb
77d45b4500967de674b8f75a9a91f58d57d5704d xhci: switch to pci_alloc_irq_vectors
d852ed98f62e0d44f594adb850b3d6cedb5c9292 usb: host: xhci: remove #ifdef around PM functions
aeca3a77b1e0ed06a095933b89c86aed007383eb net: cdc_ncm: Fix TX zero padding
a0c16630d35a874e82bdf2088f58ecaca1024315 xhci: apply PME_STUCK_QUIRK and MISSING_CAS quirk for Denverton
fa72e6afa795dbb35d0cc6332606e83e4415e45e usb: Make use of ktime_* comparison functions
befb2de18195d1ab6b843dd6ca921a222a32a588 r8152: move the initialization to reset_resume function
dff3565b8e1c0be6fc83ba47dcab45c149dcab5b usbip: vhci-hcd: Rework vhci_hcd_init
1c9de5bf428612458427943b724bea51abde520a usbip: vhci-hcd: Add USB3 SuperSpeed support
b891245bff79583b9c69b14b4429362a5d54096e usbip: vhci-hcd: Clean up the code by adding a new macro
d3be974a9c4eac83c1af15c966857d123a8436ba usb/early: Remove trace_printk() callers in xhci-dbc
c27b32c2a4e6adc09323262d5b38b06979f063ab r8152: support new chip 8050
65b82d696b9e84fda6dd7df61801b57d3e7fb976 r8152: support RTL8153B
21cbd0ecad7943bbd4f7d10efaade0380637d4a0 r8152: split rtl8152_resume function
59ae1d127ac0ae404baf414c434ba2651b793f46 networking: introduce and use skb_put_data()
634fef61076d644b989b86abc2f560d81a089a31 networking: add and use skb_put_u8()
57129044f5044dcd73c22d91491906104bd331fd mfd: intel_soc_pmic_bxtwc: Use chained IRQs for second level IRQ chips
dec08194ffeccfa1cf085906b53d301930eae18f xhci: Limit USB2 port wake support for AMD Promontory hosts
e1069bbfcf3bcf4feb264397f3451184fd66b907 net: cdc_ncm: Reduce memory use when kernel memory low
c35c376fb1be1fc7c96e944898f92ee45158f8b1 USB: misc: remove unneeded MODULE_VERSION() usage
22889dbbd98a0e3390e9120074c39c6e5a3fea5e asix: Add rx->ax_skb = NULL after usbnet_skb_return()
9b4355fb039a4c4b77c3ed92c049b012b92dd36b net: usb: r8152: constify usb_device_id
a9081a008f84819ab2f3da596bf89afa16beea94 usb: phy: Add USB charger support
a49c3feeb84e4b44d3022b8b1a303ea2e4eeeab9 mux: make device_type const
a38711a88b7e3fd0c0d292a35693e0f608263759 usbip: auto retry for concurrent attach
eb3c74de28b24f5a36d12d6c84f1fceb25d12c4f usb: phy: Avoid unchecked dereference warning
3a161913990e9052bf0ce32443871a95cd88f3fd usbip: vhci-hcd: make vhci_hc_driver const
4b4e02c83167dca260e6bf974809979d44694e19 typec: tcpm: Move out of staging
76f0c53d08b933b4708be0d775ba57a0fb4d858a usb: typec: fusb302: Move out of staging
4c87b3e58d0204d31eb00c76f323ecffd1960a91 staging: typec: tcpm: Rewrite comparison to NULL pointer
bcd6a7aa13800afc1418e6b29d944d882214939a Revert "xhci: Limit USB2 port wake support for AMD Promontory hosts"
3c4fb9f169214290ec9a943907321e6265b36f65 usb: typec: wcove: start using tcpm for USB PD support
4750bc78efdb126ddc40f1b34dbae7ce319344cb usb: host: xhci support option to disable the xHCI USB2 HW LPM
a6d5d230e0c2dbc710d473105d5652d3980da673 usb: typec: tcpm: reset the port on removal
707a123d7affbf1e98f08d1962d81a0d64f83191 usb: typec: wcove: fix uninitialized usbc_irq1 and usbc_irq2
fd30b717b86dc30ffe25596f8de6542a02ae9401 rcu: Convert timers to use timer_setup()
32bf9fd50ff439184ddcf925cfb3c6bc0138f7c5 usb-storage: make use of srb local variable
2bb80de74d76095c4ef5e1ad9d5223ab990534d8 usb: Kconfig: clarify use of USB_PCI
6f52b16c5b29b89d92c0e7236f4655dc8491ad70 License cleanup: add SPDX license identifier to uapi header files with no license
e2be04c7f9958dde770eeb8b30e829ca969b37bb License cleanup: add SPDX license identifier to uapi header files with a license
5fd54ace4721fc5ce2bb5aef6318fcf17f421460 USB: add SPDX identifiers to all remaining files in drivers/usb/
4793f2ebff1c890386a514998606205a2948011c tty: serial: Remove redundant license text
7cb2d993c4617c842230949f901d1cfe8c0b2f11 USB: storage: Remove redundant license text
5d62afbe9572138a25d67b8468d27ec65777824d USB: misc: Remove redundant license text
c67678ec78eff9cf1e7e997fe6c37c9fcccfc5b8 USB: early: Use new USB product ID and strings for DbC device
e5656d43dce828bfcacbecd614e22355073e918b tty: Remove redundant license text
3e08b64f665838a818ec656c8a6396dd58d67e45 USB: early: Remove redundant license text
9ed64195e35efa8901d20a0cd8ff3668ae68e7d6 USB: host: xhci: Remove redundant license text
d214109875b419c85c596d39b032692133bf58ba USB: host: ehci: Remove redundant license text
3efe891f61479a98edc5c3c7b91b92b69d99e592 USB: add SPDX identifiers to all remaining Makefiles
956c36c297a232f33f608886a504d47216338fc6 USB: typec: add SPDX identifiers to some files
0c3b34a569f83b281c4c0ef4542cf59d7b186a88 USB: typec: Remove remaining redundant license text
53460c53b7619c14e8564a3ba2c60fc27f303f6b [media] au0828: Add timer to restart TS stream if no data arrives on bulk endpoint
b9eaf18722221ef8b2bd6a67240ebe668622152a treewide: init_timer() -> setup_timer()
cf140a3569714be6db8f3db56ba68c8554c108c9 typec: fusb302: Use dev_err during probe
ab69f61321140ff632d560775bc226259a78dfa2 typec: tcpm: fusb302: Resolve out of order messaging events
1a7e3948cb9f5bb9241112706267b8fbc7812c7a USB: add device-tree support for interfaces
7739376eb1ed68593805e5b4ed359123d0718549 USB: of: clean up device-node helper
a7c42106ead7041b99662a125b408deb68a3e6aa usb: add user selectable option for the whole USB Type-C Support
770b2edece42fa55bbe7d4cbe53347a07b8968d4 usbip: Fix USB device hang due to wrong enabling of scatter-gather
fb345a66060d9631cf12e64af3cac037b6ae10d1 usb: typec: remove duplicate includes
92335ad9e895d453707ff3d9896e252980c314c5 uas: Remove US_FL_NO_ATA_1X unusual device entries for Seagate devices
4bda35a06560509a0f85c5963edb6b066795a69b usb: early: Correct the endpoint type value for bulk in endpoint
5007e1b5db736e76360047a6974c5cf7beb2d40e typec: tcpm: Validate source and sink caps
57e6f0d7b8042cb0f2da61f280c56e5ac0db18e5 typec: tcpm: Only request matching pdos
62354454625741f0569c2cbe45b2d192f8fd258e USB: uas and storage: Add US_FL_BROKEN_FUA for another JMicron JMS567 ID
2f2d0088eb93db5c649d2a5e34a3800a8a935fc5 usbip: prevent vhci_hcd driver from leaking a socket pointer address
67d2ea9fde2aa96f36af0537e4004efb123319fb usb: xhci: Make some static functions global
ab725cbec3e83dc29cc00b733bd26063b588fa98 usb: xhci: allow imod-interval to be configurable
aa15d3d257f9edcb8d15ed27e228d1c0080cb919 USB: remove the URB_NO_FSBR flag
8272d099d05f7ab2776cf56a2ab9f9443be18907 usbip: vhci: stop printing kernel pointer addresses in messages
90120d15f4c397272aaf41077960a157fc4212bf usbip: prevent leaking socket pointer address in messages
3df613ec12f71f00dad545a9df75573951e5c59f usb: pd: fix the offset for SVID specific commands
2b80a29bf83d2baed1a22193647bafcc6a0426af USB: host: Use zeroing memory allocator rather than allocator/memset
cb48326493146b1022702b9b8f15460f7e9dbfc1 usbip: vhci: fix spelling mistake: "synchronuously" -> "synchronously"
928afc85270753657b5543e052cc270c279a3fe9 uas: ignore UAS for Norelsys NS1068(X) chips
0b1655143df00ac5349f27b765b2ed13a3ac40ca r8152: disable RX aggregation on Dell TB16 dock
5468099c747240ed97dbb34340fece8ca87be34f usbip: vhci_hcd: update 'status' file header and format
077af794d9ab016b52cd3dd90bd8b1709a61710f USB: storage: remove invalid URL from drivers
ed5bd7a47fd77166860e39f857ae8e3fe25c836c USB: move many drivers to use DEVICE_ATTR_RW
7f26ee4b56496f1bec4672cfe4e1c4808fb7e81f USB: move many drivers to use DEVICE_ATTR_RO
ca35910a1ba21e45368640ac4d884536649966d9 USB: move many drivers to use DEVICE_ATTR_WO
4ff02f099f68f1e6be5956849180eaa326c37248 usb: typec: wcove: fix the sink capabilities
37dd9255b2f6201195946014600a8d857f846cf4 vlan: Pass ethtool get_ts_info queries to real device.
384c181e3780ddc45e70483e29d84495b484730d net: sched: Identify hardware traffic classes using classid
9994bb8e1e05833e627d54147acb64952efcb713 xfrm4: Remove xfrm_tunnel_notifier
4b519bb493e0866de7659b88dd22dc2cd89dd628 NFC: Convert timers to use timer_setup()
494bef4c2a087876e75f3e95f7f63b06d6a65921 sfc: insert ARFS filters with replace_equal=true
a7f80189e41c96c0c6210e9198a31859c91eb3e5 sfc: pass the correctly bogus filter_id to rps_may_expire_flow()
f993740ee05821307eca03d23d468895740450f8 sfc: limit ARFS workitems in flight per channel
f8d6203780b73c07dc49ee421fedae8edb76b6e4 sfc: ARFS filter IDs
ded8b9c761c50d147b20d7de18766fcdb8f5b621 sfc: Use filter index rather than ID for rps_flow_id table
987c658a61f432804c4662b736dbd5fc5939af1f sfc: fix ARFS expiry check on EF10
9a657b4c4a9073037121331bb54663bf11f08342 RDMA/i40iw: Move uapi header to include/uapi
1eb38023ddb480276c6b75e0db6463c47251eb7b s390/dasd: fix failing path verification
a048a07d7f4535baa4cbad6bc024f175317ab938 powerpc/64s: Add support for a store forwarding barrier at kernel entry/exit
a76cf66e948afbaeda8e3ecc861f29c47a026c27 x86/uaccess: Tell the compiler that uaccess is unlikely to fault
11f1a4b9755f5dbc3e822a96502ebe9b044b14d8 x86: reorganize SMAP handling in user space accesses
b3bbfb3fb5d25776b8e3f361d2eedaabb0b496cd x86: Introduce __uaccess_begin_nospec() and uaccess_try_nospec
80b1f41c0957a9da3bab4fb9ae76dc886753a59b mm: split deferred_init_range into initializing and freeing parts
c9e97a1997fbf3a1d18d4065c2ca381f0704d7e5 mm: initialize pages on demand during boot
12310e3437554328bcd75186cf331bc712cb30b2 kprobes: Propagate error from arm_kprobe_ftrace()
297f9233b53a08fd457815e19f1d6f2c3389857b kprobes: Propagate error from disarm_kprobe_ftrace()
2c34d59916bd82efe6544f39ec162e8c9236009d watchdog: core: Make dt "timeout-sec" property work on drivers w/out min/max
020af89a41c41fd2c92d0da524968dfaba6269f0 PM / sleep: Add macro to define common noirq system PM callbacks
760d280084f8805e5de73e3591912d5db9da9dbe watchdog: include: add units for timeout values in kerneldoc
32ecc6392654a0db34b310e8924b5b2c3b8bf503 watchdog: Create watchdog device in watchdog_dev.c
b4ffb1909843b28f3b1b60197d517b123b7a9b66 watchdog: Separate and maintain variables based on variable lifetime
62cd1c40ce1c7c16835b599751c7a002eb5bbdf5 watchdog: kill unref/ref ops
faa584757b63aad42d19f1c6a6eac2c848618f83 watchdog: Add support for creating driver specific sysfs attributes
0254e953537c92df3e7d0176f401a211e944fd61 watchdog: Drop pointer to watchdog device from struct watchdog_device
664a39236e718f9f03fa73fc01006da9ced04efc watchdog: Introduce hardware maximum heartbeat in watchdog core
15013ad813f6544be8e79afc23672745950d59bc watchdog: Add support for minimum time between heartbeats
d1ed3ba4e3d76b4ebec239c64f990c26d7935700 watchdog: Ensure that wdd is not dereferenced if NULL
966681c9f029afd5decee069b7658bb58ad0a863 CIFS: fix circular locking dependency
83fbae5a148cc1cd53e5be1a28edb3b6701b7af2 watchdog: Add a device managed API for watchdog_register_device()
f9f535c1b76128f94dae7a4bb41464aacd4c10ec watchdog: Improve description of min_hw_heartbeat_ms
90b826f17a4e1c4ff2b3ef69512a6409e94f4d64 watchdog: Implement status function in watchdog core
138913cb632be12344982e54ccd12f6f15971bf7 watchdog: core: Fix error handling of watchdog_dev_init()
3c10bbde10fe4dca52726e246cefa6b0a1dfbd3e watchdog: core: Clear WDOG_HW_RUNNING before calling the stop function
2e91838bf7ffdedabdb29e091207d6531d04ef4f watchdog: core: Fix devres_alloc() allocation size
058dfc7670086edda8d34f0dbe93c596db5d4a6b ACPI / watchdog: Add support for WDAT hardware watchdog
356ed043517dbceb646a9353831abde91062a395 watchdog: wdat_wdt: fix return value check in wdat_wdt_probe()
cda3b9178510297ac968b7e129e20caaaa66c581 watchdog: wdat_wdt: Fix warning for using 0 as NULL
ff84136cb6a4943f489ad037fe93f43be0573c23 watchdog: add watchdog pretimeout governor framework
f77710c4cda01ad9c3672fb2f97bdea9a94da92a watchdog: pretimeout: add noop pretimeout governor
da0d12ff2b829a35e9921918e925d79497b82bef watchdog: pretimeout: add panic pretimeout governor
53f96cee1aff74c8ee3c5f7a25df0c01d7117eeb watchdog: pretimeout: add option to select a pretimeout governor in runtime
89873a711dd20b614abb6e4038fb4b5462f4c701 watchdog: pretimeout: add pretimeout_available_governors attribute
28e3d7002ba9f773662b2cf75d28cadfa29dc442 watchdog: wdat_wdt: Ping the watchdog on resume
bb292ac1c6028344013309a309b44dc691581825 watchdog: Introduce watchdog_stop_on_unregister helper
2501b015313fe2fa40ed11fa4dd1748e09b7c773 watchdog: core: add option to avoid early handling of watchdog
c013b65ad8a1e132f733404809afc72f7d00e768 watchdog: introduce watchdog_worker_should_ping helper
4bcd615fad6adddc68b058d498b30a9e0e0db77a watchdog: Fix potential kref imbalance when opening watchdog
914d65f3f013ba2556c7beec5d3baac7b3292504 watchdog: Fix kref imbalance seen if handle_boot_enabled=0
b1abf6fc49829d89660c961fafe3f90f3d843c55 ACPI / watchdog: Fix off-by-one error at resource assignment
e39758e0ea769e632e5e3c9f314160e55c2153ff PCI: Use helper functions to access fields in struct msi_desc
0170591bb06788034ae72bfa56e42f283ab3de5a PCI/MSI: Skip disabling disconnected devices
169b38373fd4a7d47cac0e5fdeeae90b8c076f32 mailbox: pcc: Don't access an unmapped memory address space
aca314efb177274b458f7e72c5ff375c80a5c2d0 mailbox: pcc: Support HW-Reduced Communication Subspace type 2
8f8027c5f935bf02bdc8806c109ddbb0e402283c mailbox: PCC: erroneous error message when parsing ACPI PCCT
a91d66129fb9bcead12af3ed2008d6ddbf179509 ALSA: hda - Fix incorrect TLV callback check introduced during set_fs() removal
d6c0615f510bc1ee26cfb2b9a3343ac99b9c46fb ALSA: hda - Fix yet remaining issue with vmaster 0dB initialization
9226665159f0367ad08bc7d5dd194aeadb90316f ALSA: hda/realtek - Fix Dell AIO LineOut issue
f0ba9d699e5ca2bcd07f70185d18720c4f1b597c ALSA: hda/realtek - Fix Dell headset Mic can't record
3ce0d5aa265bcc0a4b281cb0cabf92491276101b ALSA: hda/realtek - set PINCFG_HEADSET_MIC to parse_flags
28d1d6d2f314ff395ff67565d1145742614b21c8 ALSA: hda - Add model string for Intel reference board quirk
79223bf190919199652441d9f455cb0deabc75f5 ASoC: rt5645/rt5677: replace codec to component
7fb59e940f6225beed0b24cd09e9fad9aebb7565 ASoC: codecs: dmic: Make number of channels configurable
35b84bf0614a7da98bfbbac70ed3d01c3b5b6c58 ASoC: dmic: Fix check of return value from read of 'num-channels'
6d6c3946d877adf1e73c6292f947bbb687452ed5 ASoC: dmic: replace codec to component
05c9b302eda71083840392d74ce62dd1e1f30621 ASoC: dmic: Add optional wakeup delay
15b7c5de7c0c4f55d529ca71a5a0feca4cf03ab3 ASoC: dmic: don't use codec anymore
4c66b9d165e0994b9be1ff3233037e614fae22af ASoC: max98090: replace codec to component
38a5882e4292d135cebabad0b56c9420dfdd80a5 ASoC: Intel: kbl_rt5663_max98927: Map BTN_0 to KEY_PLAYPAUSE
4510112217116d97df02121d3e1442858efb4897 ASoC: hdac_hdmi/nau8825/rt286/rt298/rt5663/da7219: replace codec to component
fc8f7ea2d6c074baaad202c9187962bfa493ef13 ASoC: da7219: Add common clock usage for providing DAI clks
0f9d0e355d7c3fa5756313765a77961074017845 ASoC: da7219: clkdev_drop usage depends on CONFIG_COMMON_CLK
1d37ce929c71f430389db3042a8b23536cede1e5 ASoC: da7219: make structure da7219_dai_clks_ops static
0ed6f15701efa0d62b4556900cd67a726578389e ASoC: codecs: make snd_soc_platform_driver const
9fe3b2bac02c6d06724d526b0245568bca49349f ASoC: rt5514-spi: replace platform to component
7feb2f786a46d34cac760d5e246dfbdafafa0e96 ASoC: move ACPI common code out of Intel/sst tree
928c8a8f1188dd59065e22bcedae57cb6156d836 ASoC: Intel: common: use c99 syntax for ACPI/machine tables
6004640638a2cb81c00c17ddf21ad572af964bbe ASoC: Intel: move all ACPI match tables to common module
752c93aa72e60ba573bbcfcd508b9cc550db0b94 ASoC: Intel: Skylake: Ensure dai and dailink registration happens in sequence.
fc9fdd61c4809b14faa9b84fe3d8f4167a836326 ASoC: Intel: Skylake: Disable clock and power gating during FW/LIB download
ea2851bd82f8a319741a90a847b615c66fd6693b ASoC: Intel: move machine drivers to dedicated KConfig
cb1f904d91c52bc4e03e11eb161288c40c655095 ASoC: Intel: Skylake: Refine skl widget type check
c1a8ed6930e4df1de24546e41b55530985170718 ASoC: Intel: add SOF firmare/topology file information
d4d86b86e1ffa6be16b287ee34b0090ef79a0fbb ASoC: Intel: reorder boards Kconfig by chronological order
f6a118a800e35af2c63f90cbcc23093f4b53b3a2 ASoC: Intel: clarify Kconfig dependencies
468663a36a3e67bed1c32f46b2d1d0a69811da99 ASoC: Intel: Add depends on X86
f7a88db6fffdd193d792de5dae7890528b995cc0 ASoC: Intel: fix Kconfig dependencies
326c4aa27a801918136df15d507f74968c7093fb ASoC: Intel: improve DMADEVICES dependency
20a52c059be2eb470db75076d55e1d932173fcc3 ASoC: Intel: Add help text for SND_SOC_INTEL_SST_TOPLEVEL
960115b842886999a64a87d8baadb81dce4293b4 ASoC: Intel: improve SND_SOC_INTEL_MACH dependencies
c6059879be298cccda52f77bf019a7a99eb13e78 ASoC: Intel: Fix Kconfig with top-level selector
4772c16ede522d46219a59646503d2020841a6f4 ASoC: Intel: Kconfig: Simplify-clarify ACPI/PCI dependencies
043f5a0b8d6e4b9cb373978ca1883fe16287abfd ASoC: Intel: boards: align Kconfig dependencies for Haswell/Broadwell
99644597d71333866070f0223bffa62c03f36587 ASoC: Intel: boards: align Kconfig configurations for HiFi2
969eaef7710400e39be13190bace40910555d426 ASoC: Intel: boards: align/fix SKL/BXT/KBL Kconfigs
89671061116f83bd8b8b01d1c9620a26b221725f ASoC: Intel: kconfig: add some comments for if symbols
8fca15839ce5c473c57356abe36e166367e6c6ef ASoC: Intel: kconfig: drop boiler plate text from config items
05f4434bc13030ca67f229b8defd37f12a05d1fa ASoC: Intel: remove mfld_machine
987da3fe175933c28aab2293505c3597052ff0e2 ASoC: sn95031: remove this code
e0b9f3aa45fcfce1873503e5ff85d919697427cb ASoC: sn95031: remove dead makefile about sn95031
3c22a73fb87366851dcf48d852357a6d808921cc ASoC: Intel: bytcht_es8316: fix HID handling
2be2d57986431626e905ee344086affa44c5bb9b ASoC: acpi: remove hard-coded i2c-device name length
8a880a2014e3ab50e66252335bd71d61b0487a30 ASoC: Intel: bytcr_rt5651: Add support for Bay Trail CR / SSP0 using boards
b4b6377e07727df8292539062d9a56e6bd83ba89 ASoC: Intel: bytcr_rt5651: Change defaults to enable jack-detect, analog mics
f7f61e08fe5840ca43baa49355b40d3aede1ac97 ASoC: Intel: kbl: Enable mclk and ssp sclk early
e39cacc1b7de2a6d72ce49043c9cfd7dd129135a ASoC: Intel: bytcr_rt5651: Not being able to find the codec ACPI-dev is an error
5b00ce63e07fac692400db80d3e1fbd1f1f65701 ASoC: Intel: add nau8824 sound card
dfeabded04962ed2de9dca489de228801df25de6 ASoC: nau8824: new driver
25535f7e0b418fe8b2251008cfcb05d272c2e8e0 ASoC: nau8824: rename controls to match DAPM controls
c869ce5aaf8f470c8cf32638e7cd498f57118fa5 ASoC: nau8824: leave Class D gain at chip default
fa1014302791a1e436387e93a90f38717d7f9b03 ASoC: nau8824: TDM support
cf6b68d192138d67b49002b499eb507af0c8c56d ASoC: nau8824: move key irq after jd done
a2eb62edbd01064cee0c4c00854a25f04237605b ASoC: nau8824: condition for clock disable
080f773d226a9c2b0fa0d8f02107518c560f8b77 ASoC: nau8824: change FVCO maximum threshold
12a72f91a28eb302e1431ef0bb68b5f83e35a891 ASoC: nau8824: replace codec to component
b53117c0b881d78d5d66a7e1be11d62a077c1e25 ASoC: nau8824: recover system clock when device changes
a08f06bb7a0743a7fc8d571899c93d882468096e seq_file: Introduce DEFINE_SHOW_ATTRIBUTE() helper macro
976b5a0ee9c49c3c0112596d2e26bd6aa77c5cd5 ASoC: ACPI: add new fields for SOF support
4fa183455988adaa7f6565ca06bceecafb527820 scsi: qla2xxx: Utilize pci_alloc_irq_vectors/pci_free_irq_vectors calls.
17e5fc58588b5e3df8220c90a9d8af55201d6b45 scsi: qla2xxx: fix MSI-X vector affinity
98624c4fed0abd848b291fbd3da18c2251b79429 scsi: qla2xxx: remove irq_affinity_notifier
67f2db8792f96d8f7521461635d25f9c80245d80 scsi: qla2xxx: Fix Regression introduced by pci_alloc_irq_vectors_affinity call.
27873de99f2fecca0f6b257316489ef2a1d86ffd scsi: qla2xxx: Fix a recently introduced memory leak
5f572526a18418258bfa137e3353656c25439500 qla2xxx: Fix incorrect tcm_qla2xxx_free_cmd use during TMR ABORT
55dd8cf2163e1866d9497c4f361d6ed42b3a192b Revert "qla2xxx: Fix incorrect tcm_qla2xxx_free_cmd use during TMR ABORT"
6bcbb3174caa5f1ccc894f8ae077631659d5a629 qla2xxx: Fix incorrect tcm_qla2xxx_free_cmd use during TMR ABORT (v2)
a084fd68e1d26174c4cc1a13fbb0112f468ff7f4 scsi: qla2xxx: Fix re-login for Nport Handle in use
2d73ac6102d943c4be4945735a338005359c6abc scsi: qla2xxx: Serialize GPNID for multiple RSCN
a07fc0a42e9ae76e93235f59b089986dc1b751c8 scsi: qla2xxx: Recheck session state after RSCN
5ef696aa9f3ccf999552d924c4e21a348f2bbea9 scsi: qla2xxx: Relogin to target port on a cable swap
23c645595dab7b414f23639d0a428a07515807df scsi: qla2xxx: Fix PRLI state check
2853192e154b813fe34a6cbee5e34dfef50d29d0 scsi: qla2xxx: Use IOCB path to submit Control VP MBX command
3407fc373d8ad794e94fc50b9c085f7451b502f8 scsi: qla2xxx: Use chip reset to bring down laser on unload.
d1e3635a5ef2523e517068d0acb25533e739bf10 scsi: qla2xxx: Add boundary checks for exchanges to be offloaded
bbead493a3b98dd11372cbdb5405ae9017cab367 scsi: qla2xxx: Chip reset uses wrong lock during IO flush.
ad0a0b01f088f676d4e1f511a18d2f1469420635 scsi: qla2xxx: Fix Firmware dump size for Extended login and Exchange Offload
f13515acdcb5a40c6e324cb00b4a1ce269a94e1f scsi: qla2xxx: Replace GPDB with async ADISC command
9b3e0f4d4147c9718756f420875dd667dd07e050 scsi: qla2xxx: Move work element processing out of DPC thread
d2b292c3f6fdef5819a276acd64915bae6384a7f scsi: qla2xxx: Enable ATIO interrupt handshake for ISP27XX
11aea16ab3f5404895146e7aa722e2e9b5bc3b76 scsi: qla2xxx: Add ability to send PRLO
82abdcaf3ededf5ad18644ac7a416f5e4f95a7fe scsi: qla2xxx: Allow target mode to accept PRLI in dual mode
9cd883f07a54e5301d51e259acd250bb035996be scsi: qla2xxx: Fix session cleanup for N2N
94d83e3641765e08076efc93632eab579c0397e2 scsi: qla2xxx: Tweak resource count dump
a4239945b8ad112fb914d0605c8f6c5fd3330f61 scsi: qla2xxx: Add switch command to simplify fabric discovery
e374f9f592815f937ad1d8312f5f1424bc24f758 scsi: qla2xxx: Migrate switch registration commands away from mailbox interface
fb35265b12bb9ba4946e146e0c7090a446a9b081 scsi: qla2xxx: Remove session creation redundant code
cf055fb0b709d56da122a498a141212b511dad80 scsi: qla2xxx: Fix GPNFT/GNNFT error handling
0616e9658aca6990394cf255ad2f655194049881 scsi: qla2xxx: Properly extract ADISC error codes
f352eeb75419d2b693df7cc5957f7427c2b9b3ea scsi: qla2xxx: Add ability to use GPNFT/GNNFT for RSCN handling
bf12b4162d0014a4aeb873a8196eacd5a7faef09 scsi: qla2xxx: Allow relogin and session creation after reset
040036bb0bc142c8262236e8d17ff053c635328f scsi: qla2xxx: Delay loop id allocation at login
6944dccbb7c9dbcd25f9e8f8308a384ff5a464e0 scsi: qla2xxx: Add retry limit for fabric scan logic
3dbec59bdf63f3c82323bd6ab8a4bd2946abaaec scsi: qla2xxx: Prevent multiple active discovery commands per session
94cff6e114df56d0df74cdabe3481df38d9b0c1e scsi: qla2xxx: Remove unused argument from qlt_schedule_sess_for_deletion()
d8630bb95f46ea118dede63bd75533faa64f9612 scsi: qla2xxx: Serialize session deletion by using work_lock
8b56918082794e088291d3d08dac643596be5e63 scsi: qla2xxx: remove redundant assignment of d
c2dd0e1d9da89fa13bc9e2aa58f2a24c9797a359 scsi: qla2xxx: Fix warning during port_name debug print
8a7eac2fd19edd30f922bde56aaa499d5516b2d8 scsi: qla2xxx: Fix warning for code intentation in __qla24xx_handle_gpdb_event()
92d71570b66a5d09cc6e50e88671a6828168857a scsi: qla2xxx: Add XCB counters to debugfs
6d67492764b39ad6efb6822816ad73dc141752f4 scsi: qla2xxx: Prevent relogin trigger from sending too many commands
eaf75d1815dad230dac2f1e8f1dc0349b2d50071 scsi: qla2xxx: Fix double free bug after firmware timeout
1c6cacf4ea6c04a58a0e3057f5ed60c24a4ffeff scsi: qla2xxx: Fixup locking for session deletion
07ea4b6026ee8b8dfaf9bbe83a09b3ba905d20fd scsi: qla2xxx: do not check login_state if no loop id is assigned
fa83e65885b9147e2f2b89fdd4ecf7b4ff91571d scsi: qla2xxx: ensure async flags are reset correctly
2b5b96473efceb755d7700d47982370d49e8815f scsi: qla2xxx: Fix FC-NVMe LUN discovery
6a2cf8d3663e13e19af636c2a8d92e766261dc45 scsi: qla2xxx: Fix crashes in qla2x00_probe_one on probe failure
14bc1dff74277408f08661d03e785710a46e0699 scsi: qla2xxx: Remove FC_NO_LOOP_ID for FCP and FC-NVMe Discovery
8d7d7775268546972b62a11fe09d48493f824f41 scsi: qla2xxx: Restore ZIO threshold setting
1d4614e1e6cbaeac1fdbf4aef3cca222320d3d92 scsi: qla2xxx: Remove unneeded message and minor cleanup for FC-NVMe
dbe18018e3ad60fc5abfe999b49c4b37f8e7bb32 scsi: qla2xxx: Set IIDMA and fcport state before qla_nvme_register_remote()
9dd9686b14199a1c3e668e1cca124cd1c74b77e1 scsi: qla2xxx: Add changes for devloss timeout in driver
e473b3074104ee09227cfbba5f872e3ea15dd280 scsi: qla2xxx: Add FC-NVMe abort processing
1763c1fd76d8e26c5e6d5a3e415e7deeeda3c5da scsi: qla2xxx: Fix n2n_ae flag to prevent dev_loss on PDB change
870fe24f3c0b2cf40998f8ab21d4cf4e4e9cf619 scsi: qla2xxx: Return busy if rport going away
2e4c5d2ef76b6f04a3cb7a15bc0fee0ab029dedf scsi: qla2xxx: Remove nvme_done_list
1cbc0efcd9bee74670d0b637f53e67c47373f544 scsi: qla2xxx: Fix retry for PRLI RJT with reason of BUSY
623ee824e579d234b9f68c7b28ff5ab43f7c78e5 scsi: qla2xxx: Fix FC-NVMe IO abort during driver reset
60dd6e8e42077a4c25f221cf124e8ba038b86e2e scsi: qla2xxx: Cleanup code to improve FC-NVMe error handling
33b28357dd0033ef0e146861cd575a9c5ed2fb5e scsi: qla2xxx: Fix Async GPN_FT for FCP and FC-NVMe scan
f7e59e994fc69ace89f828686d82d528529ea025 scsi: qla2xxx: fix error message on <qla2400
6d6340672ba3a99c4cf7af79c2edf7aa25595c84 scsi: qla2xxx: Fix small memory leak in qla2x00_probe_one on probe failure
e74e7d95878d7993cf56c801d55d78f16ea58d1d scsi: qla2xxx: Fix race condition between iocb timeout and initialisation
e65d8c3411f7255964994d97d69ce6fc5e838341 scsi: lpfc: update driver version to 12.0.0.3
dc19e3b4a80e0bb1e5f080473fffa0ac8c0694a6 scsi: lpfc: Fix MDS diagnostics failure (Rx < Tx)
1b5c2cb196684f1418fe82257a1b0a8cb0aabc9d scsi: lpfc: update driver version to 12.0.0.4
22d11759a4e7018f8cd7914e4e706ca2c96d6c01 target: make ->shutdown_session optional
291e3e51a34d2f546608bfd31f185151621135b7 target: fix spelling mistake: "limitiation" -> "limitation"
1b4c59b7a1d0b9d8019254a5f2e35b2663f49a9e target: fix potential race window in target_sess_cmd_list_waiting()
f5045724578babc7bd3460087f34cc787a8b0e20 target/user: Add an #include directive
f94fd098f674b78c29f482da1999d8de0c93c74e target: check for XCOPY parameter truncation
87156518da94a696f2b27ab8945d531af2f1d339 target: support XCOPY requests without parameters
01d4d673558985d9a118e1e05026633c3e2ade9b target: Fix multi-session dynamic se_node_acl double free OOPs
a04e54f2c35823ca32d56afcd5cea5b783e2f51a target/pscsi: Fix TYPE_TAPE + TYPE_MEDIMUM_CHANGER export
5981c245a890db6a6e16fb6d3838cc9fc9fdf0ff target/iblock: convert iblock_req.pending from atomic_t to refcount_t
5d68fb72d3780555752bcf2526f759f953e08bc3 target: Improve size determinations in two functions
984a9d4c40bed351a92ed31f0723a710444295da Revert "target: Fix VERIFY and WRITE VERIFY command parsing"
eeb64d239ea664592ff8f1bce5546209a6593df5 target: Add support for TMR percpu reference counting
a85d667e58bddf73be84d1981b41eaac985ed216 target: Use {get,put}_unaligned_be*() instead of open coding these functions
d877d7275be34ad70ce92bcbb4bb36cec77ed004 target: Fix a deadlock between the XCOPY code and iSCSI session shutdown
c82ff239ecf27dd5eddc91540f50321547a2d311 target: make device_mutex and device_list static
e5dc9a7055c98bcd7b03f9735d5f2ec2b7f0d897 target: Use macro for WRITE_VERIFY_32 operation codes
388fe6996bf658146e70c0df986981eae4be0385 target: Fix cmd size for PR-OUT in passthrough_parse_cdb
138d351eefb727ab9e41a3dc5f112ceb4f6e59f2 iscsi-target: Add login_keys_workaround attribute for non RFC initiators
6f48655facfd7f7ccfe6d252ac0fe319ab02e4dd target: Fix node_acl demo-mode + uncached dynamic shutdown regression
c58a252beb04cf0e02d6a746b2ed7ea89b6deb71 target: fix buffer offset in core_scsi3_pri_read_full_status
13cacea7bb20fbbd3cb400953b3142cde139abaa cifs: remove rfc1002 header from smb2_negotiate_req
525488520ac69a3612dbceefa573b255a83005e9 xfs: rmap btree requires more reserved free space
4fd29ec47212c8cbf98916af519019ccc5e58e49 xfs: check return value of _trans_reserve_quota_nblks
65c5f419788d623a0410eca1866134f5e4628594 xfs: remove prev argument to xfs_bmapi_reserve_delalloc
6edc977f775e5ac10655b03607ef091d2b06f2f6 xfs: remove xfs_bmap_search_extents
974ae922efd93b07b6cdf989ae959883f6f05fd8 xfs: track preallocation separately in xfs_bmapi_reserve_delalloc()
f782088c9e5d08e9494c63e68b4e85716df3e5f8 xfs: pass post-eof speculative prealloc blocks to bmapi
d2a047f31e86941fa896e0e3271536d50aba415e xfs: forbid AG btrees with level == 0
11ef38afe98cc7ad1a46ef24945232ec1760d5e2 xfs: make xfs btree stats less huge
6031e73a5b3f85ec45cac08ef90995b2d3f941c7 xfs: use rhashtable to track buffer cache
9875258ca7ab238a08bb9ad17e0c9b9984eac7df xfs: nuke unused tracepoint definitions
5149fd327f16e393c1d04fa5325ab072c32472bf xfs: bump up reserved blocks in xfs_alloc_set_aside
54fee133ad59c87ab01dd84ab3e9397134b32acb xfs: adjust allocation length in xfs_alloc_space_available
12ef830198b0d71668eb9b59f9ba69d32951a48a xfs: don't rely on ->total in xfs_alloc_space_available
d2b3964a0780d2d2994eba57f950d6c9fe489ed8 xfs: fix COW writeback race
f88ae46b09e93ef07ac9efaf85df62adb5ba58e6 xfs: glean crc status from mp not flags in xfs_btree_init_block_int
b6f41e448277ff080fea734b93121e6cd7513f0c xfs: remove boilerplate around xfs_btree_init_block
64f61ab6040c9f04ba181cca7580212f23b89f74 xfs: remove unused struct declarations
05a630d76bd3f39baf0eecfa305bed2820796dee xfs: allow unwritten extents in the CoW fork
b20fe4730ea5c037c16631fb0df659c7b6d4b3b1 xfs: correct null checks and error processing in xfs_initialize_perag
ebf55872616c7d4754db5a318591a72a8d5e6896 xfs: improve handling of busy extents in the low-level allocator
787eb485509f9d58962bd8b4dbc6a5ac6e2034fe xfs: fix and streamline error handling in xfs_end_io
6d04558f9fa9d16c4aba7243030f22ef0c1bbf32 xfs: pass individual arguments to xfs_bmap_add_extent_hole_real
42bf9dba40086e3d18dc29eb379f13df219d3f22 xfs: remove the trailing newline used in the fmt parameter of TP_printk
4f1adf3373f072246c14119b2aa6dfb4d6510a43 xfs: more do_div cleanups
0c1d9e4a61590c2a4d657d1deddd1674f1565097 xfs: simplify validation of the unwritten extent bit
c4cf1acdb186436b88cc9aeaf08322bc49fec183 xfs: better log intent item refcount checking
6eadbf4c8ba816c10d1c97bed9aa861d9fd17809 xfs: BMAPX shouldn't barf on inline-format directories
61d819e7bcb7f33da710bf3f5dcb2bcf1e48203c xfs: don't allow bmap on rt files
d205a7d0ec47d11977882b5e910ad35f7be912b4 xfs: refactor dir2 leaf readahead shadow buffer cleverness
c8ce540db5f67d254aafb14b5d76422c62a906df xfs: remove double-underscore integer types
38dee376d67047e9877a34e408013852c9729eb8 xfs: always compile the btree inorder check functions
2678809799e6e37db0800725157f5ebfc03a9df7 xfs: export various function for the online scrubber
e7f5d5ca36e29fa3c9702f236b0ab73f63336080 xfs: refactor the ifork block counting function
acb9553cab552cf17154814f079f54401eefa474 xfs: pass along transaction context when reading directory block buffers
5da8f2f8908aabcfa4113d37d470039c79962ba9 xfs: allow reading of already-locked remote symbolic link
9e24cfd044853e0e46e7149b91b7bb09effb0a79 xfs: remove unneeded parameter from XFS_TEST_ERROR
f8c47250ba46eb221d1ac537266ac65bcf2866d5 xfs: convert drop_writes to use the errortag mechanism
3e88a0078ba8ef61816c85d33131827b4a307852 xfs: replace log_badcrc_factor knob with error injection tag
6eb0b8df9f74f33d1a69100117630a7a87a9cc96 xfs: rename MAXPATHLEN to XFS_SYMLINK_MAXLEN
5b094d6dac0451ad89b1dc088395c7b399b7e9e8 xfs: fix multi-AG deadlock in xfs_bunmapi
56bdf855e676f1f2ed7033f288f57dfd315725ba xfs: Fix per-inode DAX flag inheritance
b072d774664b690768bdf7e068ee95a161e5f107 ceph: remove stale check in ceph_invalidatepage()
1f934b00e907527cddb83984d0783cc4a029952a ceph: properly get capsnap's size in get_oldest_context()
05455e1177f76849e0a6450e8710dcb2c361f337 ceph: make writepage_nounlock() invalidate page that beyonds EOF
0713e5f24b7deb88579dc312cf818b1a0809f02e ceph: optimize pagevec iterating in ceph_writepages_start()
0e5ecac7168366500af1fa9a70fa9ce573f891f3 ceph: cleanup local variables in ceph_writepages_start()
590e9d9861f5f21fbbb0266e40e6a17bc5084dd0 ceph: fix "range cyclic" mode writepages
2a2d927e35dd8dc4faf8fbc211533cf5f8840f5b ceph: ignore wbc->range_{start,end} when write back snapshot data
f275635ee0b6641151dfaf07b901d7c8d4d8e987 ceph: wait on writeback after writing snapshot data
77478715ba9242017976fd01de189e77fa072f51 ceph: use get_user_pages_fast()
c6db84723363790160a89dee4554ad2f0687a0c5 ceph: make lock_to_ceph_filelock() static
933ad2c9c8bbb1623c2d3c5753ad340152e15d9d ceph: disable cached readdir after dropping positive dentry
7c084289795bc0f3b9ab315ac3c8d269dd4d0215 rbd: set discard_alignment to zero
d19a0b540182a742338d88f6501e4f29a30d7541 ceph: voluntarily drop Lx cap for link/rename requests
97aeb6bf988e0830fd80dca724fd89526b3f35e4 ceph: use atomic_t for ceph_inode_info::i_shared_gen
5495c2d04f85da09512f5f346ed24dc0261d905d ceph: avoid dereferencing invalid pointer during cached readdir
5d988308283ecf062fa88f20ae05c52cce0bcdca ceph: track read contexts in ceph_file_info
314c4737a45dd4447eac6d313e3715b25785f58b ceph: fix un-balanced fsc->writeback_count update
6ef0bc6ddee1f62310877a1d53b1ea1d0d8e51a2 ceph: flush dirty caps of unlinked inode ASAP
937441f3a3158d5510ca8cc78a82453f57a96365 libceph, ceph: avoid memory leak when specifying same option several times
7627151ea30bce2051e3cb27d7bb2c30083f86a5 libceph: define new ceph_file_layout structure
db2196a58939c0b75b9b7ea5ab1fec4081d48661 libceph: eliminate overflows in ceph_calc_file_object_mapping()
dccbf08005df800f5c8e948ab6132ed5536134bc libceph, ceph: change ceph_calc_file_object_mapping() signature
4c069a5821ddc568e9509f49fcc9481c8a43712f ceph: add newline to end of debug message format
73737682e0598ae73bd4c481e478a0d75884aa8a ceph: change variable name to follow common rule
af9cc401ce7452f9d965ba4553d8ffe7f0ed42ee ceph: invalidate pages that beyond EOF in ceph_writepages_start()
1582af2eaaf17cbcd7864172347c1db10b6b2210 ceph: don't wait on writeback when there is no more dirty pages
57a35dfb522c8bbac622d49f5217906f9b5eceb0 libceph, ceph: add __init attribution to init funcitons
bb48bd4dc45f9ee1e44d8e9fcb01023e0d0ba80d ceph: optimize memory usage
fb18a57568c2b84cd611e242c0f6fa97b45e4907 ceph: quota: add initial infrastructure to support cephfs quotas
b7a2921765cf796280baf653a52b22b52e0ba266 ceph: quota: support for ceph.quota.max_files
cafe21a4fb3075fb2980caba8fdb533a1bdb52b0 ceph: quota: don't allow cross-quota renames
2b83845f8bd711e66e1c367a9bd56c9df3410236 ceph: quota: support for ceph.quota.max_bytes
1ab302a0cb1455631646aa66b7fc02afd617ea4f ceph: quota: update MDS when max_bytes is approaching
2596366907f872de7be0557720bb55bccf7489d9 ceph: don't check quota for snap inode
0eb6bbe4d9cf02f639d661edf7c02defc3453a69 ceph: fix root quota realm check
e3161f17d92699ce6ca3b7988131b10ad4035cf9 ceph: quota: cache inode pointer in ceph_snap_realm
d557c48db730eaab6b75d4af332c135309b7a6a4 ceph: quota: add counter for snaprealms with quota
9122eed5281e89bdb02162a8ecb3cc13ffc8985e ceph: quota: report root dir quota usage in statfs
d93605407af34eb0b7eb8aff6b1eae2cde3cdd22 rbd: notrim map option
f1919826896c82b6af9c46f69e02f2bc04df4be7 ceph: check if mds create snaprealm when setting quota
19957a181608d25c8f4136652d0ea00b3738972d xfs: Correctly invert xfs_buftarg LRU isolation logic
45d8ec4d9fd5468c08f2ef0b2b132bb62dc81a3d ext4: update i_disksize if direct write past ondisk size
73fdad00b208b139cf43f3163fbc0f67e4c6047c ext4: protect i_disksize update by i_data_sem in direct write path
6cf09958f32b9667bb3ebadf74367c791112771b s390: correct module section names for expoline code revert
6dd85fbb87d1d6b87a3b1f02ca28d7b2abd2e7ba s390: move expoline assembler macros to a header
97489e0663fa700d6e7febddc43b58df98d7bcda s390/lib: use expoline for indirect branches
23a4d7fd34856da8218c4cfc23dba7a6ec0a423a s390/ftrace: use expoline for indirect branches
c50c84c3ac4d5db683904bdb3257798b6ef980ae s390/kernel: use expoline for indirect branches
4253b0e0627ee3461e64c2495c616f1c8f6b127b s390: move spectre sysfs attribute code
9f18fff63cfd6f559daa1eaae60640372c65f84b s390: remove indirect branch from do_softirq_own_stack
de5cb6eb514ebe241e3edeb290cb41deb380b81d s390: use expoline thunks in the BPF JIT
8cb63b78791eef67ea95831c6ef5e6039c572b14 s390/pci_dma: simplify dma address calculation
ee877b81c6b92c190e7186c1ffd054804b426c02 s390/pci_dma: improve map_sg
1f166e9e5c7cd5d1fe2a5da7c97c1688d4c93fbb s390/pci_dma: split dma_update_trans
13954fd6913acff8f8b8c21612074b57051ba457 s390/pci_dma: improve lazy flush for unmap
6b7df3ce92ac82ec3f4a2953b6fed77da7b38aaa s390/pci: fix dma address calculation in map_sg
4f5359e94bbfbe349fd1ae00516dfe749d53fe22 s390/pci_dma: make lazy flush independent from the tlb_refresh bit
a5f1005517534aeb1fac20180badfbf0896c183c s390/pci: handle insufficient resources during dma tlb flush
5c420fcb100d5074cd983b0107f4f78c3503c9e2 Kconfig: Remove HAS_IOMEM dependency for Graphics support
258400304225a219a2d98f29fe957df98789a843 s390/setup: enable display support for KVM guest
44debe7a123cc760fc90ccbe253210798c917fa7 vgacon: dummy implementation for vgacon_text_force
e9d764f803964a54ca7da4a67d124fe824ebd80a powerpc/pseries: Enable kernel CPU dlpar from sysfs
4145f358644b970fcff293c09fdcc7939e8527d2 powernv/kdump: Fix cases where the kdump kernel can get HMI's
910961754572a2f4c83ad7e610d180e3e6c29bda powerpc/kdump: Fix powernv build break when KEXEC_CORE=n
ff987fcf011d20c53b3a613edf6e2055ea48e26e x86/microcode: Make the late update update_lock a raw lock for RT
694617474e33b8603fc76e090ed7d09376514b1a slab_common: fix the check for duplicate slab names
5d1904204c99596b50a700f092fe49d78edba400 mremap: fix race between mremap() and page cleanning
a2ce2666aa3509ac31fac0f540a3502372b7b630 mremap: move_ptes: check pte dirty after its removal
73dbd4a4230216b6a5540a362edceae0c9b4876b iommu/amd: Fix incorrect error handling in amd_iommu_bind_pasid()
2d097c50212e137e7b53ffe3b37561153eeba87d sr: get/drop reference to device in revalidate and check_events
e2f747b1f42a2f6b0cf5416be1684c1b94a42f0f EDAC, sb_edac: Assign EDAC memory controller per h/w controller
6696522957a192130dc42d80ea34796ec7ba0c2b EDAC, sb_edac: Carve out dimm-populating loop
4d475dde79b561bbd843d7deb7100f9e75596487 EDAC, sb_edac: Check if ECC enabled when at least one DIMM is present
d14e3a201f06c85527e176f7ebfd967b405b6185 EDAC, sb_edac: Bump driver version and do some cleanups
039d7af651ba414b468bbb22d5d1a76169f81c0d EDAC, sb_edac: Classify memory mirroring modes
3dfb7d8cdbc7ea0c2970450e60818bb3eefbad69 security: let security modules use PTRACE_MODE_* with bitmasks
ec9f2006fc020c58f32f01b9d68fdb5f7374ffce crypto: cryptd - Fix AEAD request context corruption
81760ea6a95ad4c41273a71052f61b9f087b5753 crypto: cryptd - Add helpers to check whether a tfm is queued
4f0414e54e4d1893c6f08260693f8ef84c929293 crypto: algif_skcipher - Load TX SG list after waiting
f8a5b12247fe18f7fed801ad262a7ab190e1f848 blk-mq: make mq_ops a const pointer
b9f28d863594c429e1df35a0474d2663ca28b307 sd, mmc, virtio_blk, string_helpers: fix block size units
d6296d39e90c9075bc2fc15f1e86dac44930d4b5 blk-mq: update ->init_request and ->exit_request prototypes
c959a6b00ff589c652373e27bced5a700bd450f2 mmc: sdhci-pci: Don't re-tune with runtime pm for some Intel devices
51ced59cc02e0d08f61772c888480b9b1749cef1 mmc: sdhci-pci: Use ACPI DSM to get driver strength for some Intel devices
682696605c7093d2800c498c04166831e5aedf87 mmc: sdio: Add API to manage SDIO IRQs from a workqueue
c3dccb74be28a345a2ebcc224e41b774529b8b8f mmc: core: Delete bounce buffer Kconfig option
304419d8a7e9204c5d19b704467b814df8c8f5b1 mmc: core: Allocate per-request data using the block layer core
614f0388f580c436d2cf6dc0855de91d13ddc23d mmc: block: move single ioctl() commands to block requests
3ecd8cf23f88d5df1c545a5c04217987abb28575 mmc: block: move multi-ioctl() to use block layer
67e69d5220c904238f94bb2e6001d7c590f5a0bb mmc: block: remove req back pointer
02166a01f8113c6374d6f1512befa9233c837fa0 mmc: block: Tag DRV_OPs with a driver operation type
5ec1239694c74e8feebe967bf467081445622004 mmc: block: Move DRV OP issue function
0493f6fe5bdee8ac101a1a0c449971c2d4665e99 mmc: block: Move boot partition locking into a driver op
4760257cb54e29e9a90e0ce849f4efcd67718816 mmc: sdio: Keep card runtime resumed while adding function devices
1cf8f7e5af3910781a21b84f13a34851aa228fe3 mmc: core: Move mmc bkops functions from core.c to mmc_ops.c
0f2c05125ef98f062c256c6d150ff372125bf523 mmc: core: Move mmc_interrupt_hpi() from core.c to mmc_ops.c
d9df1737583ed34bf470d87dbb6f9d0a42718b40 mmc: core: Move mmc_flush_cache() from core.c to mmc_ops.c
88bed3a6a00a33b4b0c71efeb4523a694c3fe47b mmc: core: Make mmc_can_reset() static
6cf4156c0988fe9ee14f24144dcfcac35b177d85 mmc: sdhci-pci: Enable card detect wake for Intel BYT-related SD controllers
8298912bb6de7e3c9f86ad19d6488ac88cd0e940 mmc/block: remove a call to blk_queue_bounce_limit
7432b49b54cd931743f0b6e9f652bc329e4a242a mmc: block: Initialize ret in mmc_blk_issue_drv_op() for MMC_DRV_OP_IOCTL
bbdc74dc19e09ac4e71bfb219596b3d5bc786720 mmc: block: Prevent new req entering queue after its cleanup
7c84b8b43d3d550fa6f0b57277d03f2e1bafb357 mmc: block: bypass the queue even if usage is present for hotplug
3f8b23a09a87aa65df3e13129cb2d9cffcb394db mmc: block: fix lockdep splat when removing mmc_block module
292876ef567518cbfc45b446298458c8b9ce7cb7 mmc: block: remove unused struct mmc_card *card
0d638a07d3a1e98a7598eb2812a6236324e4c55f of: Convert to using %pOF instead of full_name
dc8d68bb6c6f7d7fb1aeb3450c0654598e4f4e52 mmc: core: Remove unused MMC_CAP2_PACKED_CMD
d3bf68ae04c7e29ed3c30b7f4b1f0c6a4a11c7f1 mmc: host: Add CQE interface
69f7599e6c55b80aa34fee18217a67d16703b906 mmc: block: Anonymize the drv op data pointer
627c3ccfb46ada2583eac434127ad5d75e1ac33c mmc: debugfs: Move block debugfs into block module
1f797edc62da59ad9b319a6b3f7c73a58047c896 mmc: block: Refactor mmc_blk_part_switch()
2fe20baec46caeaf1076a7f3d7cfd3e75c40205c mmc: block: Reparametrize mmc_blk_ioctl_[multi]_cmd()
01f5bbd17a8066b58dba9b5049fad504bce67322 mmc: block: Fix incorrectly initialized requests
6ae033689d7b1a419def78e8e990b0eab8bb6419 mmc: sdhci-pci: Fix voltage switch for some Intel host controllers
de3ee99b097dd51938276e3af388cd4ad0f2750a mmc: Delete bounce buffer handling
97548575bef38abd06690a5a6f6816200c7e77f7 mmc: block: Convert RPMB to a character device
14f4ca7e4d2825f9f71e22905ae177b899959f1d mmc: block: Delete mmc_access_rpmb()
1c87f73578497a6c3cc77bcbfd2e5bf15fe753c7 mmc: block: Fix bug when removing RPMB chardev
9ca28c5cd967e07e708a407eec59894e2e643670 mmc: core: Remove unnecessary host claim
6c0cedd1ef9527ef13e66875746570e76a3188a7 mmc: core: Introduce host claiming by context
72a5af554df837e373efb0d6c8fc68c568f9a7ac mmc: core: Add support for handling CQE requests
98d4f7809d99bbf456f93816ef9895616cdd1b2d mmc: mmc: Enable Command Queuing
d3377c012f4d7a0a822e289f1effba997da3e295 mmc: block: Use local variables in mmc_blk_data_prep()
93482b3d70c2120aadb0f1d1281a59199866e70a mmc: block: Prepare CQE data
c8b5fd031a3004dc382e201f69ea9a44ec62c04f mmc: block: Factor out mmc_setup_queue()
cb39f61e9b1e675c8df86df69d53f08334b34077 mmc: core: Export a few functions needed for blkmq support
34c089e806793a66e450b11bd167db6047399fcd mmc: block: Fix missing blk_put_request()
fb8e456e547ed2c699f64665bd8a3b9bde7b9728 mmc: block: Check return value of blk_get_request()
f9f0da98819503b06b35e61869d18cf3a8cd3323 mmc: block: Ensure that debugfs files are removed
c892b0d81705c566f575e489efc3c50762db1bde mmc: core: prepend 0x to OCR entry in sysfs
be17f1ce8572d6e15559897421fb7041360bb64a mmc: core: properly init drv_type
41e3efd07d5a02c80f503e29d755aa1bbb4245de mmc: block: Simplify cleaning up the queue
afab1bb8b40c61458e009fdc323c9740f95fcd5b mmc: core: Make mmc_pre_req() and mmc_post_req() available
6d3898a6a517d0effa1d1e337c03b16bafb6fc96 mmc: block: Add error-handling comments
c3d53d0da69d127f488dc85638e9440220b268e8 mmc: core: Add parameter use_blk_mq
81196976ed946cbf36bb41ddda402853c7df7cfa mmc: block: Add blk-mq support
1e8e55b67030c6a2fef893d428bdcd611f73705c mmc: block: Add CQE support
a4080225f51dcea129d26185a35acfbb3770a32d mmc: cqhci: support for command queue enabled host
8ee82bda230fc972c7ee3bb15ce1260eefb4721c mmc: sdhci-pci: Add CQHCI support for Intel GLK
10f21df4a23540b5da8e88d1030ff8c37818e04f mmc: block: blk-mq: Add support for direct completion
88a516461ee07a994c0e7016faf85f3466de1d09 mmc: block: blk-mq: Separate card polling from recovery
c89b4851c67fb7354862850ae181de883269487d mmc: block: Make card_busy_detect() accumulate all response error bits
f47a1fe346b1568df0e9b158574b2939432313df mmc: block: blk-mq: Check error bits and save the exception bit when polling card busy
92c0a0cc9483c6b9cc1b61273d30a0a601cb5e15 mmc: block: Add timeout_clks when calculating timeout
7eb43d537166c7d767af450901acd0ecbf94625c mmc: block: blk-mq: Stop using legacy recovery
42f532da3a44843668dbacc1838a028b0a9b7373 mmc: mmc_test: Do not use mmc_start_areq() anymore
aa95014445769f3ac204f85ff85efe11bbd0bc8c mmc: block: blk-mq: fix boolreturn.cocci warnings
15ff2946b3c9661b14fc5123902dad28e1f13f3e mmc: block: make function mmc_cqe_issue_type static
1bec43a3b181baebdf8a4cd739b480a9132601d7 mmc: core: Remove option not to use blk-mq
0fbfd12518303e9b32ac9fd231439459eac848f9 mmc: block: Remove code no longer needed after the switch to blk-mq
126b62700386da782f83579e9b0431ea76c2da3d mmc: core: Remove code no longer needed after the switch to blk-mq
0562315b86372d2cdd9cc8924b92cfab37049fbc mmc: cqhci: Ensure macro parameters are wrapped in parentheses
2361bfb055f948eac6583fa3c75a014da84fe554 mmc: block: blk-mq: Potential NULL deref on mmc_blk_alloc_req() failure
6e2e490080c8a7bb2062705f4c78205dbf4b67e9 scsi: zfcp: add port speed capabilities
6cbd2171e89b13377261d15e64384df60ecb530e x86/cpufeatures: Make CPU bugs sticky
1b86883ccb8d5d9506529d42dbe1a5257cb30b18 x86/bugs: Read SPEC_CTRL MSR during boot and re-use reserved bits
c456442cd3a59eeb1d60293c26cbe2ff2c4e42cf x86/bugs: Expose /sys/../spec_store_bypass
24f7fc83b9204d20f878c57cb77d261ae825e033 x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation
764f3c21588a059cd783c6ba0734d4db2d72822d x86/bugs/AMD: Add support to disable RDS on Fam[15,16,17]h if requested
da39556f66f5cfe8f9c989206974f1cb16ca5d7c x86/KVM/VMX: Expose SPEC_CTRL Bit(2) to the guest
b617cfc858161140d69cc0b5cc211996b557a1c7 prctl: Add speculation control prctls
885f82bfbc6fefb6664ea27965c3ab9ac4194b8c x86/process: Allow runtime control of Speculative Store Bypass
a73ec77ee17ec556fe7f165d00314cb7c047b1ac x86/speculation: Add prctl for Speculative Store Bypass mitigation
7bbf1373e228840bb0295a2ca26d548ef37f448e nospec: Allow getting/setting on non-current task
fae1fa0fc6cca8beee3ab8ed71d54f9a78fa3f64 proc: Provide details on speculation flaw mitigations
5c3070890d06ff82eecb808d02d2ca39169533ef seccomp: Enable speculation flaw mitigations
9f65fb29374ee37856dbad847b4e121aab72b510 x86/bugs: Rename _RDS to _SSBD
e96f46ee8587607a828f783daa6eb5b44d25004d proc: Use underscores for SSBD in 'status'
faecd8dd852d4e4a63a1b8ad43e5df8e41ee0336 mm/rmap: factor lock function out of rmap_walk_anon()
051ac83adf69eea4f57a97356e4282e395a5fa6d mm/rmap: make rmap_walk to get the rmap_walk_control argument
0dd1c7bbce8d1d142bb25aefaa50262dfd77cb78 mm/rmap: extend rmap_walk_xxx() to cope with different cases
52629506420ce32997f1fba0a1ab2f1aaa9a4f79 mm/rmap: use rmap_walk() in try_to_unmap()
e8351ac9bfa7f4412d5d196b6742309473ca506d mm/rmap: use rmap_walk() in try_to_munlock()
9f32624be943538983eb0f18b73a9052d1493c80 mm/rmap: use rmap_walk() in page_referenced()
9853a407b97d8d066b5a865173a4859a3e69fd8a mm/rmap: use rmap_walk() in page_mkclean()
fafaa4264eba49fd10695c193a82760558d093f4 pagewalk: improve vma handling
48684a65b4e3ff544d62532c1b78962c9677b632 mm: pagewalk: fix misbehavior of walk_page_range for vma(VM_PFNMAP)
f683739539e819e9b821a197d80e52258510837b mm/pagewalk.c: prevent positive return value of walk_page_test() from being passed to callers
f7e2355f0f8635ddcfd26858f58732b7bf85f9f4 mm: pagewalk: fix the comment for test_walk
ea606cf5d8df370e7932460dfd960b21f20e7c6d mm: move max_map_count bits into mm.h
854e9ed09dedf0c19ac8640e91bcc74bc3f9e5c9 mm: support madvise(MADV_FREE)
263630e8d176d87308481ebdcd78ef9426739c6b mm/madvise.c: fix freeing of locked page with MADV_FREE
64b42bc1cfdf6e2c3ab7315f2ff56c31cd257370 mm/madvise.c: free swp_entry in madvise_free
def5efe0376501ef7bd6b53ed061512c142e59aa mm, madvise: fail with ENOMEM when splitting vma will hit max_map_count
51afb12ba809db664682a31154c11e720e2c363c mm: page migration fix PageMlocked on migrated pages
cc5993bd7b8cff4a3e37042ee1358d1d5eafa70c mm: rename deactivate_page to deactivate_file_page
10853a039208c4afaa322a7d802456c8dca222f4 mm: move lazily freed pages to inactive list
25eedabe019851bc513abd601ed514df524cb482 vm: fix incorrect unlock error path in madvise_free_huge_pmd
20f664aabeb88d582b623a625f83b0454fa34f07 mm: pmd dirty emulation in page fault handler
bbf29ffc7f963bb894f84f0580c70cfea01c3892 thp, mm: fix crash due race in MADV_FREE handling
395e5df79a9588abf1099ea746f11872c9086252 scsi: aacraid: Remove reference to Series-9
6c92f7dbf25c36f35320e4ae0b508676410bac04 scsi: aacraid: Fix 2T+ drives on SmartIOC-2000
45348de2c8a7a1e64c5be27b22c9786b4152dd41 scsi: aacraid: Fix controller initialization failure
8ebaa67fc23a09bcf2b285ae4130508256b31923 scsi: aacraid: Use hotplug handling function in place of scsi_scan_host
a1367e4adee207fee7f14fdf2166022461fe76c4 scsi: aacraid: Reschedule host scan in case of failure
8a30e50b72ca08c78474db514531ce5d9ae00fa4 scsi: aacraid: Fix hang while scanning in eh recovery
fe5237590bb033ad6b7312b0ef62a2d7d5c4141f scsi: aacraid: Skip schedule rescan in case of kdump
75be67cd155d95658507b15ffe905c36243526ae scsi: aacraid: Remove unused rescan variable
cfc350ab0efb932f456436d65db65f0e77993148 scsi: aacraid: Delay for rescan worker needs to be 10 seconds
8f0009a225171cc1b76a6b443de5137b26e1374b dm crypt: optionally support larger encryption sector size
ff3af92b4461be773337111daea80bb91b2cd545 dm crypt: use shifts instead of sector_div
783874b050768d361239e444ba0fa396bb6d463f dm crypt: reject sector_size feature if device length is not aligned to it
0440d5c0ca9744b92a07aeb6df0a9a75db6f4280 dm crypt: allow unaligned bv_offset
f1705ec197e705b79ea40fe7a2cc5acfa1d3bfac net: ipv6: Make address flushing on ifdown optional
4f25a1110cd4f5746b750a9567303c7ef6826b7c net: ipv6/l3mdev: Move host route on saved address if necessary
70af921db6f8835f4b11c65731116560adb00c14 net: ipv6: Do not keep linklocal and loopback addresses
38bd10c447f8e8980753149a8a65108159871df5 net: ipv6: Delete host routes on an ifdown
bc561632dddd5af0c4444d919f01cbf6d553aa0a net: ipv6: Do not keep IPv6 addresses when IPv6 is disabled
c882219ae43ed8d2a06583d24d2ed42d09ca93cf net: ipv6: use list_move instead of list_del/list_add
a2d6cbb0670d54806f18192cb0db266b4a6d285a ipv6: Fix idev->addr_list corruption
8048ced9beb21a52e3305f3332ae82020619f24e net: ipv6: regenerate host route if moved to gc list
6d717134a1a6e1b34a7d0d70e953037bc2642046 net: ipv6: Do not duplicate DAD on link up
fc882fcff1ee774cb6be9d3c714ae5ab9eec5aa4 ipv6: Regenerate host route according to node pointer upon interface up
e669b86945478b3d90d2d87e3793a6eed06d332f ipv6: addrconf: increment ifp refcount before ipv6_del_addr()
0aef78aa7b39829a2a46c1c0e6e96276d744e07a ipv6: addrconf: don't evaluate keep_addr_on_down twice
814abfabef3ceed390c10d06a0cc69a86454b6cf xdp: add bpf_redirect helper function
5acaee0a8964c9bab7775ab8bedcd1f66a2a1011 xdp: add trace event for xdp redirect
11393cc9b9be2a1f61559e6fb9c27bc8fa20b1ff xdp: Add batching support to redirect map
c0124f327e5cabd844a10d7e1fc5aa2a81e796a9 xdp/qede: setup xdp_rxq_info and intro xdp_rxq_info_is_reg
5ab073ffd326480a6185d096e9703f62ef92b86c xdp: introduce xdp_return_frame API and use in cpumap
c0048cff8abb69c956ce1277d17a3f7a14e41522 xdp: introduce a new xdp_frame type
106ca27f2922e8de820d1bd3d79b1cbdf2d78eea xdp: move struct xdp_buff from filter.h to xdp.h
d1b2a6c4bed99fc7e8a11e7abcff19293d1974f5 net: GRE: Add is_gretap_dev, is_ip6gretap_dev
b0066da52ea53bae2b4ceed3f47d488df27dab66 ip_tunnel: Rename & publish init_tunnel_flow
602f3baf22188aad24b9a58be3209ab774b97d74 net_sch: red: Add offload ability to RED qdisc
575ed7d39e2fbe602a3894bc766a8cb49af83bd3 net_sch: mqprio: Change TC_SETUP_MQPRIO to TC_SETUP_QDISC_MQPRIO
ee9d3429c0e47a57e3e73b638785cafa33773639 net/sched/sch_red.c: work around gcc-4.4.4 anon union initializer issue
428a68af3a7c3a3380ff1f750a24d213f370f89f net: sched: Move to new offload indication in RED
8234af2db3614d78b49e77ef46ea8cfab6586568 net_sch: red: Fix the new offload indication
44edf2f89791d162f4dc5ec3718d21f3d6644403 net: sched: Move offload check till after dump call
f34b4aac46b2c7b76d3313c94efe02a64ac8f24a net: sch: red: Change the name of the stats struct to be generic
7fdb61b44c0c95d00f6c856d9fb61a9f647bc85f net: sch: prio: Add offload ability to PRIO qdisc
ef58ca38dbda0642e293bcaa2e05edc79677c617 net/sched/sch_prio.c: work around gcc-4.4.4 union initializer issues
a9b19443edbaac97c5c094f3cc903c1f1548b3f5 net: sched: introduce support for multiple filter chain pointers registration
4861738775d70e0165d04fe014f32b41bcb5414a net: sched: introduce shared filter blocks infrastructure
f36fe1c498c8959812415c57b683abaa4527dec5 net: sched: introduce block mechanism to handle netif_keep_dst calls
caa7260156eb3a1496348a2c69fa68e85183d5d7 net: sched: keep track of offloaded filters and check tc offload feature
7960d1daf278cbe23bb48974fe6ae6a1e44c3c15 net: sched: use block index as a handle instead of qdisc when block is shared
d47a6b0e7c492a4ba4524d557db388e34fd0a47a net: sched: introduce ingress/egress block index attributes for qdisc
51ab2994c387c80b45caf8b8067b3f3b97771d25 net: sched: allow ingress and clsact qdiscs to share filter blocks
d680b3524cd2b9c4f1dc2ba1823c538988bb85e2 net: sched: silence uninitialized parent variable warning in tc_dump_tfilter
bb047ddd145860ff24820320a21f03cf8c071b22 net: sched: don't set q pointer for shared blocks
3ae6ec08292f01c6782d1a80be0b2cc675e0ecfc ipv4: Send a netevent whenever multipath hash policy is changed
3192dac64c73d8c0eb4274a3da23d829fb5177af net: Rename NETEVENT_MULTIPATH_HASH_UPDATE
5165674ff5022d8a76f3147d75cab1fecd529497 net/dim: Fix fixpoint divide exception in net_dim_stats_compare
8f23d638b36b4ff0fe5785cf01f9bdc41afb9c06 bnxt_en: Expand bnxt_check_rings() to check all resources.
92abef361bd233ea2a99db9e9a637626f523f82e bnxt_en: Add BCM5745X NPAR device IDs
312324f1248b47a2640469039811a04ab2f5be34 bnxt: use tc_cls_can_offload_and_chain0()
6fc2ffdf1001ae4fb485b3ba95ff757ae54565c9 bnxt_en: Fix vnic accounting in the bnxt_check_rings() path.
4e41dc5deb6e5c36ac5f2e49575485920037b2aa bnxt_en: Refactor bnxt_need_reserve_rings().
fbcfc8e4674156cb7eb3d8054bd4332142d2cc58 bnxt_en: Reserve completion rings and MSIX for bnxt_re RDMA driver.
ec86f14ea5064e36ee111297bdb376dda4cba264 bnxt_en: Add ULP calls to stop and restart IRQs.
11c3ec7bb940b6fa3f87f05f01b7f45eef08dfbb bnxt_en: Need to include RDMA rings in bnxt_check_rings().
026a807c2de37aa826748c2ffa1969fc778406b2 net/dim: Rename *_get_profile() functions to *_get_rx_moderation()
623ad755226c2b4fb312772bae9cdeccd8219ee3 net/dim: Support adaptive TX moderation
0558f33c06bb910e2879e355192227a8e8f0219d scsi: libsas: direct call probe and destruct
442486ec1096781c50227b73f721a63974b0fdda mm: replace __access_remote_vm() write parameter with gup_flags
6347e8d5bcce33fc36e651901efefbe2c93a43ef mm: replace access_remote_vm() write parameter with gup_flags
f307ab6dcea03f9d8e4d70508fd7d1ca57cfa7f9 mm: replace access_process_vm() write parameter with gup_flags
7f7ccc2ccc2e70c6054685f5e3522efa81556830 proc: do not access cmdline nor environ from file-backed areas
bb06ec31452fb2da1594f88035c2ecea4e0652f4 nvme: expand nvmf_check_if_ready checks
90fcaf5d54c57037e9f879f17b58497db7156c3e nvme-fc: remove setting DNR on exception conditions
ffecb0b452d5cbdd2ac3614bdf6cd39ba47b0cb8 nvme-fabrics: remove unnecessary controller subnqn validation
6716d289c437ad42dee455d241b29b71a816fbff pci: use device_remove_file_self() instead of device_schedule_callback()
9148a3a10e0b74c5722174a0bbef16d821f8a48b sched/debug: Add SCHED_WARN_ON()
6d3aed3d8a0573d0a6eb1160ccd0a0713f4dbc2f sched/debug: Fix SCHED_WARN_ON() to return a value on !CONFIG_SCHED_DEBUG as well
da0c1e65b51a289540159663aa4b90ba2366bc21 sched: Add wrapper for checking task_struct::on_rq
cca26e8009d1939a6a5bf0200d276fa26f03e536 sched: Teach scheduler to understand TASK_ON_RQ_MIGRATING state
1de64443d755f83af8ba8b558fded0c61afaef47 sched/core: Fix task and run queue sched_info::run_delay inconsistencies
c58d25f371f5e4b2dfbec3a7bd6f3c24dd79095b sched/fair: Move record_wakee()
59efa0bac9cf8b2ef8d08f7632826c6d90f6a9bb sched/core: Kill sched_class::task_waking to clean up the migration logic
b5179ac70de85ef477cedf8b026a57913754cf1e sched/fair: Prepare to fix fairness problems on migration
b7e7ade34e6188bee2e3b0d42b51d25137d9e2a5 sched/core: Fix remote wakeups
98b0a857805080db04f50b8c71438c9c369ef0b3 sched/deadline: Remove useless parameter from setup_new_dl_entity()
209a0cbda7a01d2ea32a8b631d35e873bee498e9 sched/deadline: Improve the tracking of active utilization
387e31300b5760169e6d3f7a9e1eeed12cc5a30b sched/deadline: Fix the update of the total -deadline utilization
4da3abcefe178c650033f371e94fa10e80bce167 sched/deadline: Do not reclaim the whole CPU bandwidth
8fd27231c3302e0c7e1907df1252db97b65eb241 sched/deadline: Track the "total rq utilization" too
9f0d1a5077399143aad7e1244bb031e29116074e sched/deadline: Base GRUB reclaiming on the inactive utilization
daec5798367012951cdb54fdb5c006e4379c9ae9 sched/deadline: Reclaim bandwidth not used by dl tasks
7506dc7989933235e6fc23f3d0516bdbf0f7d1a8 PCI: Add wrappers for dev_printk()
02bfeb484230dfd073148a17253aeb1717ce769c PCI/portdrv: Simplify PCIe feature permission checking
842b447f0074b93e9f7db60039fdc72ec14bef9a PCI/portdrv: Encapsulate pcie_ports_auto inside the port driver
4c0fd7648d880d98add62552cffdf993bde65cf8 PCI/portdrv: Remove unnecessary "pcie_ports=auto" parameter
d850882b726f6db01b0792151e72e69b234aa461 PCI/portdrv: Rename and reverse sense of pcie_ports_auto
9310f0dc1c6430ca9e370a8341bea9f5dc85f40b PCI: pciehp: Rename host->native_hotplug to host->native_pcie_hotplug
5352a44a561d708f1a975a90f5ce16a054fe265c PCI: pciehp: Make pciehp_is_native() stricter
1df81a6d6e01ff3f351c614c5bc35b49847e1dc5 PCI: shpchp: Request SHPC control via _OSC when adding host bridge
6f77fa4941aac0fa721eef5fe61820a4c314fffb PCI: shpchp: Remove acpi_get_hp_hw_control_from_firmware() flags
96a621e01a42dc53848e2e4915fd807ebc1fc82f PCI: shpchp: Remove get_hp_hw_control_from_firmware() wrapper
90cc0c3cc7092ea4c7871fdd5fb00a9ba62842e3 PCI: shpchp: Add shpchp_is_native()
3374c545c27c5350b954d1ab03c880d5502e5eba PCI: Account for all bridges on bus when distributing bus numbers
70f7880d2d3175cecc73b0b41fd07e58e6df5fff PCI: Improve pci_scan_bridge() and pci_scan_bridge_extend() doc
c4860ad60564838994b74e7ee7dd12ceeda0f520 lib/scatterlist: Fix offset type in sg_alloc_table_from_pages
c125906b839b794c580a5de911de65bd2c63aaee lib/scatterlist: Avoid potential scatterlist entry overflow
276b738deb5bf856b9f6049fcd92a967f52643d7 PCI: Add resizable BAR infrastructure
430a23689dea2e36ae5a0fc75a67301fd46b18bf PCI: Add pci_enable_atomic_ops_to_root()
6b1d174b0c27b5de421eda55c2731f32b6bd9852 ratelimit: extend to print suppressed messages on release
299300258d1bc4e997b7db340a2e06636757fe2e sched/headers: Prepare for new header dependencies before moving code to <linux/sched/task.h>
b5f515735bea4ae71c248aea3e049073f8852889 ext4: avoid Y2038 overflow in recently_deleted()
a51805efae5dda0da66f79268ffcf0715f9dbea4 lockdep: Introduce lock_acquire_exclusive()/shared() helper macros
89d8589cd72c6f48b19c370517d16f3ee23909df lib/scatterlist: Introduce and export __sg_alloc_table_from_pages
5846ff54e87d8bab4f1e330af0b5407747a0a57e vfio/pci: Intel IGD OpRegion support
9dfbd7319909a948146f5c3438f7bd86c2c53cb6 drm/nouveau: nouveau: use larger buffer in nvif_vmm_map
8531f57027136fa63ddae91821ca89b32b571fe2 drm/nouveau/disp/nv50-: merge handling of pio and dma channels
4a8621a24a8f68ecba6e59dccad2b252fa90ba59 drm/nouveau/disp/nv50-: add channel interfaces to determine the user area
a9c44a88ca2f957c755bcb2ce8b9d2e031d65f64 drm/nouveau/disp/nv50-: add channel interfaces to control error interrupts
f5650478ab07c0921127a6a0735253b64073e978 drm/nouveau/disp/nv50-: pass nvkm_memory objects for channel push buffers
cc36205085bb6e3a4eed1edbe413fd2235cadb27 drm/nouveau/fifo/gk104-: support querying engines available on each runlist
a7cf01809bf23b95413d8047bd91cdc3cedd1ca1 drm/nouveau/fifo/gk104-: require explicit runlist selection for channel allocation
334cc26d4db10ae7d8f18de27869b95fe84c7d28 drm/nouveau/fifo/gp100-: force individual channels into a channel group
1246f1dc224a2c4ab61a1454cff669918b92e9da drm/nouveau/gr/gf100-: virtualise init_gpc_mmu + apply fixes from traces
8b058ca5186535163bdcc55d81a9f341c71139f6 drm/nouveau/gr/gf100-: virtualise r405a14
cd9662f89e2cd953ce9b2fcf02fdaae847592bd1 drm/nouveau/gr/gf100-: support clkgate_pack everywhere
a37279e94c91e3b30ee50dfd96f8f33f3be43f17 drm/nouveau/gr/gf100-: virtualise init_bios
2fe5ff6371350ce224dc2cc1da0e01888a1f9999 drm/nouveau/gr/gf100-: virtualise init_vsc_stream_master
02917aa39d56f504b47354135120000da1efa760 drm/nouveau/gr/gf100-: virtualise init_zcull
bfd27f39b5419724883bbd04910c4c35e57b6154 drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs
429412e231a27d48cb492dc1c647e857677240b3 drm/nouveau/gr/gf100-: virtualise init_rop_active_fbps
0f78acc86bbfc60cdaffd4eb03e4a35b28397cbb drm/nouveau/gr/gf100-: implement another chunk of bios-provided init
dff30dbd1d9336687ae1aa0b13e326c44f879c4e drm/nouveau/gr/gf100-: virtualise init_swdx_pes_mask
2585a1b1312e96c6a28f3008029408b5feca3ff4 drm/nouveau/gr/gf100-: virtualise init_fecs_exceptions + apply fixes from traces
3ac72e98b40ead6225eb38bcf78ec540357106c0 drm/nouveau/gr/gf100-: virtualise init_ds_hww_esr_2
2b297b0d6d33aee99254b43c3e41100fc75ea4ab drm/nouveau/gr/gf100-: virtualise init_40601c
0a5b97304b9e2cd07c78a399c5395d5fb0118341 drm/nouveau/gr/gf100-: virtualise init_sked_hww_esr
0feab0250d34c7114b442f49b1ce18a9906b543d drm/nouveau/gr/gf100-: virtualise init_419cc0 + apply fixes from traces
0a84a51334b5d75decd23b735aab00ff4698eeb2 drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces
778f18c607e30206c1a791a4d356f1ed32bc1947 drm/nouveau/gr/gf100-: virtualise init_419c9c + apply fixes from traces
f3ef80c0c491bd1a5ae4c02acbdabb8c9cedb315 drm/nouveau/gr/gf100-: virtualise init_tex_hww_esr
ab4d49a349653dcd902be8974c4f7927cd49b11d drm/nouveau/gr/gf100-: virtualise init_504430
4615e9b4387f142e4ff495dc61525249a6926e91 drm/nouveau/gr/gf100-: virtualise init_shader_exceptions
04547482aed8c77b823de9427c3f0a7b481a351a drm/nouveau/gr/gf100-: virtualise init_400054
525230cb204db5edb0ffc42e324612809c663c75 drm/nouveau/gr/gf100-: delete duplicated init code
74b6068bd660a806e801ae039dbab58dc284301e drm/nouveau/gr/gf100-: add missing reset sequence before golden context init
5c05a589856ad5f79c22b0500340291c591c3050 drm/nouveau/gr/gf100-: virtualise trap_mp
5f6474a4e6ce3291abb1843b279a23a0bb050d37 drm/nouveau/gr/gf100-: port tile mapping calculations from NVGPU
d00ffc0c403784c9f88d8da357f9f33f855289a4 drm/nouveau/gr/gf100-: port zcull tile mapping calculations from NVGPU
068cae743c2ad08a082d6fef007e6b38f5fb3b16 drm/nouveau/gr/gf100-: calculate and use sm mapping table
7a058a900ccb010c32ca1f29f6f9728a3654a519 drm/nouveau/gr/gp100-: fix attrib cb setup
e9d03335f604a1123b8de3103ce8e06db4ad777a drm/nouveau/gr/gp100-: use correct registers for zbc colour/depth setup
4b2c71edf0d7832ef4d2fe5b17402d1130b415dc drm/nouveau/gr/gp102-: setup stencil zbc
19ca10d82e33bcfe92412c461fc3534ec1e14747 drm/nouveau/gem: lookup VMAs for buffers referenced by pushbuf ioctl
0db912af8f5ad4fa4dc08a9c8e411a10953c5403 drm/nouveau/gem: attach fences to VMAs to track GPU usage
470db8b78186efe840b6452c6c4934178058059e drm/nouveau/gem: tie deferred unmapping of buffers to VMA fence completion
11e451e74050d9e9030581ce40337838acfcea5b drm/nouveau: remove fence wait code from deferred client work handler
92b4eaaf9a84a7bd35db6f903c0ecbda4f9594ee drm/nouveau: no need to create ctxdma for push buffers on fermi and up
0d4a2c5767dc6136079b11ed45934143d309026e drm/nouveau/kms: move display class instantiation to library
5bca1621c07c3ad37b5a4943450a892e18984df0 drm/nouveau/kms/nv50-: move fb ctxdma tracking into windows
a97c530eb968bad8d945d4f64fb550fa37a9d362 drm/nouveau/kms/nv50-: modify overlay allocation so the code can be split
b97ace4072267ea44a254ef2c3b001d2122313dc drm/nouveau/kms/nv50-: modify cursor allocation so the code can be split
d7c6e97a32329032ba7af1f53cab2767832fed77 drm/nouveau/kms/nv50-: modify base allocation so the code can be split
9ca6f1ebba10240ad02f7c659481899a28220fbc drm/nouveau/kms/nv50: modify core allocation so the code can be split
10ffe0fad53308ff54da0c6b1c5befca4e6915a1 drm/nouveau/kms/nv50-: abstract head interfaces so the code can be split
2ca7fb5c1cc69ee7fc1a3c048c6f2b75cf842df9 drm/nouveau/kms/nv50: handle SetControlOutputResource from head
0a3687716bb0a53a363b63cb5ba2bddc14c3bd2a drm/nouveau/kms/nv50: abstract OR interfaces so the code can be split
1590700d94ac53772491ed3103a4e8b8de01640a drm/nouveau/kms/nv50-: split each resource type into their own source files
09e1b78aab5715eacab02e4047c7a47d72f6a1e9 drm/nouveau/kms/nv50-: split core implementation by hardware class
ccd27db8c731817ef36e75de2b5fdc2e79550213 drm/nouveau/kms/nv50-: split base implementation by hardware class
9d6c2fe1917fc5ba6a9e8586ca16d007410baf42 drm/nouveau/kms/nv50-: allow specification of valid heads for a window
f88bc9d3ecca5ddc29642269f4624d07265c1bf5 drm/nouveau/kms/nv50-: unify set/clr masks
43c181e9deb5f4215d4ef0cb227fde509da7cc5e drm/nouveau/kms/nv50-: move drm format->hw conversion into common code
261fcfa96991d6652b061262c1879cc0bdd1aa3a drm/nouveau/kms/nv50-: extend window image data for stereo/planar formats
34508f9d260cbd7b91f988c858f50ad956750ee3 drm/nouveau/kms/nv50-: determine MST support from DP Info Table
53e0a3e70de69dc9f498d26c6b5495b2771ee374 drm/nouveau/kms/nv50-: simplify tracking of channel interlocks
04fc14be7726edbb34404f69297e74061a8a9563 drm/nouveau/kms/nv50-: decouple window state changes, and update method submisssion
45a2945a3759479c08a4aceaee181639c92f9d48 drm/nouveau/kms/nv50-: simplify swap interval handling
859b456b6b19a19761883cf52993dec645a36152 drm/nouveau/kms/nv50-: store window visibility in state
e349a05dc8faad6b27700383945a1783612cbae6 drm/nouveau/kms/nv50-: plane updates don't always require image_set()
119608a7f3f1ef899f1f98d05306340b92834836 drm/nouveau/kms/nv50-: handle degamma LUT from window channels
b05d873808c77fedd25130b0355acc0da1c11e19 drm/nouveau/kms/nv50-: separate blocklinear vs linear pitch
01d380ab4f702fffa6da60c4b006547b8dd66de8 drm/nouveau/kms/gk104-: support additional cursor sizes
88b600d421a5550cd56e13f2eda34cbefe417c28 drm/nouveau/kms/gk104-: add support for [XA]2R10G10B10 formats
2ce7f38629891eeaf3e5d406add102a3fa6f6632 drm/nouveau/kms/nv50-: initial overlay support
3582942c2820a4dfcd64585140bc6e1ad72c1130 drm/nouveau/fb/gv100: initial support
edf50395c7c5e8563843eb586aae57c7ac1214ed drm/nouveau/mmu/gv100: initial support
8b811951c604e417b4511e3d17a75bb8c84b8f08 drm/nouveau/fault/gv100: initial support
290ffeafcc1a953aa287c8a7bf7f6d9af25b7e77 drm/nouveau/disp/gv100: initial support
facaed62b4cba3a6334fc1798fa8f51ea6a1962d drm/nouveau/kms/gv100: initial support
37e1c45a58b5c1f699d583483f612462418dd2ee drm/nouveau/fifo/gv100: initial support
6e1f34e33c17f633ebbd383cab429c820ec0c7b0 drm/nouveau/ce/gv100: initial support
d521097f58bdfdc9966b8d10754074c8524133dd drm/nouveau/gr/gv100: initial support
dd3b89be3eafd1c9977e350e81c5556230319101 drm/nouveau/clk: Use list_for_each_entry_from_reverse
6c46d01f25bcf74608d09645c27c35c3f3940ebe drm/nouveau/gr/gf100-: insert some WFIs during gr init
c37406e05d1e541df40b8b81c4bd40753fcaf414 PCI: Allow release of resources that were never assigned
8521db4c7e155d12fb280686c0552e47f77e9110 net_sch: cbs: Change TC_SETUP_CBS to TC_SETUP_QDISC_CBS
efbaa828330aed8cfa9529451abfea4a465303ec amd-xgbe: Add support to handle device renaming
85f9feb64bd5cfd6412258be15f90b517b4b40fc amd-xgbe: Convert to using the new link mode settings
1a510ccf5869a95c0ff324c61518e42e95712844 amd-xgbe: Add support for VXLAN offload capabilities
3010608d033c7cae73d1662493c85b4c3b27015a amd-xgbe: Add additional ethtool statistics
8376d3c1f98988ae7f9e9bc2d1eeeb7d61fd206c md: Convert timers to use timer_setup()
96f4d430c507ed4856048c2dc9c1a2ea5b5e74e4 amd-xgbe: Improve KR auto-negotiation and training
53a1024abf3e4cb3310a54b08c48323649158c13 amd-xgbe: Add ethtool support to retrieve SFP module info
bab748de986d786cbbef31d550bea3bc616304cb amd-xgbe: Add ethtool show/set ring parameter support
2244753409f5bc3e2eae4e2ec6f4ced239993f33 amd-xgbe: Prepare for ethtool set-channel support
01b5277fc9984d9fb9156afa0b1be70b3b475825 amd-xgbe: Add ethtool show/set channels support
eca282b8418b0b5a55b70e42f684e882d3fb9654 amd-xgbe: Always attempt link training in KR mode
0e249898cac811f833bdb4701b32385c1c272da5 cxgb4: Fix {vxlan/geneve}_port initialization
c50ae55e41ee226b96cf204cd1409bc0057b484e cxgb4: enable inner header checksum calculation
443e2dab32a59b99730b999909718ed83fee4725 cxgb4: avoid schedule while atomic
a6076fcd187a1cb4900cf970a04401957b4b4ab8 cxgb4: copy the length of cpl_tx_pkt_core to fw_wr
7cfac881660ac7b7229950e0a942201be63c15d1 cxgb4: do not fail vf instatiation in slave mode
a09bd81b5413d1b4d705c6c5303b5d311069da22 net: aquantia: Limit number of vectors to actually allocated irqs
58d813afbe89658a5972747460a5fe19dec4dbcb net: aquantia: fix unsigned numvecs comparison with less than zero
e99e88a9d2b067465adaa9c111ada99a041bef9a treewide: setup_timer() -> timer_setup()
d3757ba4c1421d2ad00d2bf97119005e37ad2902 ethernet: Use octal not symbolic permissions
26b9906612c3553189d7d1673ee116ffac474d53 RDMA: Change all uapi headers to use __aligned_u64 instead of __u64
219354d4897fe06cb10d68308c14128a1e3fc074 ixgbe: fix build err, num_rx_queues is only available with CONFIG_RPS
9247080816297de4e31abb684939c0e53e3a8a67 ixgbe: add XDP support for pass and drop actions
33fdc82f08835de4c39a00657742f5b11db00d32 ixgbe: add support for XDP_TX action
7379f97a4fce3c1aa3b80a85cb8440453bf30411 ixgbe: delay tail write to every 'n' packets
4792093edd032a1bc8ab6cac8abd877bbd8c53b2 bpf: ixgbe: Report bpf_prog ID during XDP_QUERY_PROG
8e679021c5b9465ac5b0d7efd26baab9b10a2dbd ixgbe: incorrect XDP ring accounting in ethtool tx_frame param
f4e63525ee35f9c02e9f51f90571718363e9a9a9 net: bpf: rename ndo_xdp to ndo_bpf
99ffc5ade4e8703c3bc56fa6bb8e25437da09ee9 ixgbe: setup xdp_rxq_info
2af62c56146d4be8bddc522ca75dae8234f5ac32 ixgbe: Add support for macvlan offload RSS on X550 and clean-up pool handling
ff815fb2cf638e0906764c9e0f66bc93703626f1 ixgbe: There is no need to update num_rx_pools in L2 fwd offload
51f3773bdeecf6ec48647dbfea335be4e507da0b ixgbe: deleting dfwd stations out of order can cause null ptr deref
4e039c1675d4ecfb8ef25a20ac686b38490b36fd ixgbe: Fix limitations on macvlan so we can support up to 63 offloaded devices
0efbf12b954b75ba4e5fa2926b2185a6e077ba52 ixgbe: Don't assume dev->num_tc is equal to hardware TC config
16be45bca8d10ba2f9400bbc97958a437c3439de ixgbe: Do not manipulate macvlan Tx queues when performing macvlan offload
b5f69ccf6765804b550dfd6c165b0c35d07bbc65 ixgbe: avoid bringing rings up/down as macvlans are added/removed
9cfbfa701b55868cda4d638164887d5c74c7bfdd ixgbe: cleanup sparse warnings
4c66df01f5a46b191df0d036fc76cc9350280bc3 net/mlx5: E-Switch, Simplify representor load/unload callback API
5ed99fb421d4d5cd4cba613c1ab115585aa277d2 net/mlx5e: Move ethernet representors data into separate struct
a4b97ab4211fd0cf1011623c79fe2204dc023b96 net/mlx5: E-Switch, Create generic header struct to be used by representors
2c47bf80e8b70a284b6926f3379109eed7d03ac7 net/mlx5e: E-Switch, Move send-to-vport rule struct to en_rep
9ab88e83fd1e07f18990dc12b8960638a64c02ef mlx5: use tc_cls_can_offload_and_chain0()
0c06897a9ac7e2db9ad2df15bc6511e8ab88378f net/mlx5: Add core support for vlan push/pop steering action
60bd4af814fec164c42bdd2efd7984b85d6b1e1e net/mlx5e: Add ingress/egress indication for offloaded TC flows
655dc3d2b91bf241f5baca5eb2bc2b1e22a561ff net/mlx5e: Use shared table for offloaded TC eswitch flows
8f8ae8953fb34ac01723f1dae5b231f64a3c526b net/mlx5e: Ignore attempts to offload multiple times a TC flow
d7fad4c840f33a6bd333dd7fbb3006edbcf0017a virtio_net: fix adding vids on big-endian
136cd3450af8092f30d0e289806f08ac2aeee38f powerpc/module: Only try to generate the ftrace_caller() stub once
336a7b5dd80a2a7b463dc8ede4862425940edeb5 powerpc/module: Create a special stub for ftrace_caller()
8c50b72a3b4f1f7cdfdfebd233b1cbd121262e65 powerpc/ftrace: Add Kconfig & Make glue for mprofile-kernel
04cf31a759ef575f750a63777cee95500e410994 ftrace: Make ftrace_location_range() global
5d31a96e6c0187f2c5d7004e005fd094a1277e9e powerpc/livepatch: Add livepatch stack to struct thread_info
85baa095497f3e590df9f6c8932121f123efca5c powerpc/livepatch: Add live patching support on ppc64le
aa137a6d302b5989ed205b7dfb7fe40a8851babc s390/livepatch: Implement reliable stack tracing for the consistency model
c0a80c0c27e5e65b180a25e6c4c2f7ef9e386cd3 ftrace: allow architectures to specify ftrace compile options
e36a82ee4c514a2f4f8fa30c780ad059282f5d64 powerpc/livepatch: Fix livepatch stack access
81f2f7ce4c5bb688ad691cb3ee37e81ca26a8a3b opal: Remove events notifier
25642e1459ace29f6ce5a171efc8b7b59a52a2d4 powerpc/opal-irqchip: Fix double endian conversion
ecf08dad723d3e000aecff6c396f54772d124733 KVM: x86: remove APIC Timer periodic/oneshot spikes
fbe7193aa4787f27c84216d130ab877efc310d57 x86/mm/pat: Export pat_enabled()
66aad4fdf2bf0af29c7decb4433dc5ec6c7c5451 x86/mm: Add support for gbpages to kernel_ident_mapping_init()
cf769bd86bccf210e4063540634a7abf2b99581f pinctrl: intel: Make offset to interrupt status register configurable
a60eac3239f01838bdd34eaac8c486c4c6e84551 pinctrl: intel: Allow custom GPIO base for pad groups
96368701e1c89057bbf39222e965161c68a85b4b audit: force seccomp event logging to honor the audit_enabled flag
13aa72f0fd0a9f98a41cefb662487269e2f1ad65 seccomp: Refactor the filter callback and the API
8112c4f140fa03f9ee68aad2cc79afa7df5418d3 seccomp: remove 2-phase API
b25e67161c295c98acda92123b2dd1e7d8642901 seccomp: dump core when using SECCOMP_RET_KILL
d7276e321ff8a53106a59c85ca46d03e34288893 seccomp: Only dump core when single-threaded
131b63515932d18a3b1a60db3958f3c0dd5462bc seccomp: Clean up core dump logic
0b5fa2290637a3235898d18dc0e7a136783f1bd2 seccomp: Switch from atomic_t to recount_t
8e5f1ad116df6b0de65eac458d5e7c318d1c05af seccomp: Sysctl to display available actions
d612b1fd8010d0d67b5287fe146b8b55bcbb8655 seccomp: Operation for checking if an action is available
0ddec0fc8900201c0897b87b762b7c420436662f seccomp: Sysctl to configure actions that are allowed to be logged
c21a6970ae727839a2f300cd8dd957de0d0238c3 ipc/shm: introduce shmctl(SHM_STAT_ANY)
a280d6dc77eb6002f269d58cd47c7c7e69b617b6 ipc/sem: introduce semctl(SEM_STAT_ANY)
23c8cec8cf679b10997a512abb1e86f0cedc42ba ipc/msg: introduce msgctl(MSG_STAT_ANY)
3f44a5c62be2f2b15317942fa7bc4a810d2420aa tools/power turbostat: add --enable Time_Of_Day_Seconds
e29dc460d6c5ec43967ea69cb28120a93a20e904 tools/power turbostat: Don't make man pages executable
be0e54c4ebbf106571292ee97b445fd25bc3525b tools/power turbostat: Build-in "Low Power Idle" counters support
4bd1f8f21aceae12484a6b2cf3b935a715c75dec tools/power turbostat: Fix --hide Pk%pc10
023fe0ac975e4dff592ce90bbd12747dedf7c598 tools/power turbostat: if --num_iterations, print for specific number of iterations
012350411b09a57e0f15eb438e3c9b877cdc66a1 tools/power turbostat: Add Node in output
833a950882d33a7dfc319d5e152fdf35028936eb ext4: factor out helper ext4_sample_last_mounted()
db6516a5e7ddb6dc72d167b920f2f272596ea22d ext4: do not update s_last_mounted of a frozen fs
71493b839e294065ba63bd6f8d07263f3afee8c6 xfs: move inode fork verifiers to xfs_dinode_verify
b42db0860e13067fcc7cbfba3966c9e652668bbc xfs: enhance dinode verifier
15a8b93fd5690de017ce665382ea45e5d61811a4 sunrpc: use constant time memory comparison for mac
eebe53e87f97975ee58a21693e44797608bf679c net: sunrpc: svcsock: fix NULL-pointer exception
b688741cb06695312f18b730653d6611e1bad28d NFS: revalidate "." etc correctly on "open".
9c6376ebddad585da4238532dd6d90ae23ffee67 pNFS: Prevent the layout header refcount going to zero in pnfs_roc()
ad86f605c59500da82d196ac312cfbac3daba31d nfs: system crashes after NFS4ERR_MOVED recovery
30c156d9951e0aa88202707d80c583b0a09d3167 libceph: rados pool namespace support
cd08e0a274ba6215b79c83809b331e8af17196ba libceph: make sure redirect does not change namespace
779fe0fb8e1883d5c479ac6bd85fbd237deed1f7 ceph: rados pool namespace support
6b6dddbe11b13bb00e0f9a1af2021e266811be85 rbd: destroy header_oloc in rbd_dev_release()
3890dce1d3a8b9fe3bc36de99496792e468cd079 libceph: fix legacy layout decode with pool 0
e30331ff05f689f8f2faeb51664299c4d7841f15 dax: relocate some dax functions
91d25ba8a6b0d810dc844cebeedc53029118ce3e dax: use common 4k zero page for dax mmap reads
d01ad197ac3b50a99ea668697acefe12e73c5fea dax: remove DAX code from page_cache_tree_insert()
527b19d0808e75fbba896beb2435c2b4d6bcd32a dax: move all DAX radix tree defs to fs/dax.c
e7647fb49167809502724eb3c402cea77716fc67 iomap: return VM_FAULT_* codes from iomap_page_mkwrite
d522d569d6adf72ceda90153a086e089e6c2fbc6 xfs: consolidate the various page fault handlers
31a6f1a6e5a4a26040b67d8fa4256539b36f5893 dax: Simplify arguments of dax_insert_mapping()
5e161e4066d3ebeaff95a4b979b42f8bf00494d5 dax: Factor out getting of pfn out of iomap
a0987ad5c576626fdb40547f5ac99b4f90608dda dax: Create local variable for VMA in dax_iomap_pte_fault()
d2c43ef13327478b299db0f58193495367c6d4ae dax: Create local variable for vmf->flags & FAULT_FLAG_WRITE test
1b5a1cb21e0cdfb001050c76dc31039cdece1a63 dax: Inline dax_insert_mapping() into the callsite
302a5e312b3a106fec49ba08da3f6545c9b7ee18 dax: Inline dax_pmd_insert_mapping() into the callsite
9a0dd42251439de635088b97533109a935864a84 dax: Allow dax_iomap_fault() to return pfn
f5b7b74876cff5664ea8b2ef7f002c54cd6e7c90 dax: Allow tuning whether dax_insert_mapping_entry() dirties entry
b6fb293f2497a9841d94f6b57bd2bb2cd222da43 mm: Define MAP_SYNC and VM_SYNC flags
caa51d26f85c248f1c4f43a870ad3ef84bf9eb8f dax, iomap: Add support for synchronous faults
71eab6dfd91eabf06fe782a590c07e8a0795f5ea dax: Implement dax_finish_sync_fault()
497f6926d880c57f65bf7c3f1086526fa774c55e ext4: Simplify error handling in ext4_dax_huge_fault()
b8a6176c214cf9aa2679131ed7e4515cddaadc33 ext4: Support for synchronous DAX faults
7b565c9f965bac269cc6a1f25c819f77044abf9d xfs: Implement xfs_filemap_pfn_mkwrite() using __xfs_filemap_fault()
a39e596baa07cb1dc19c2ead14c9fd2a30f22352 xfs: support for synchronous DAX faults
a2e050f5a9a9bd2b632d67bd06d87088e6a02dae dax: explain how read(2)/write(2) addresses are validated
aaa422c4c3f6ee958ea9d6c9260ac40f90a3f4e9 fs, dax: unify IOMAP_F_DIRTY read vs write handling policy in the dax core
c0b24625979284dd212423320fe1c84fe244ed7f dax: pass detailed error code from dax_iomap_fault()
22446423108f3687167c9fdc080e6f21dd784d18 ext4: fix ENOSPC handling in DAX page fault handler
24f3478d664b1eaa6f8860d3aa521aebe51b2a62 ext4: auto disable dax instead of failing mount
3fe0791c295cfd3cd735de7a32cc0780949c009f dax: store pfns in the radix
f44c77630d26ca2c2a60b20c47dd9ce07c4361b3 fs, dax: prepare for dax-specific address_space_operations
6e2608dfd93464bb26ba868b301ad5336c8c1df8 xfs, dax: introduce xfs_dax_aops
5f0663bb4a64f588f0a2dd6d1be68d40f9af0086 ext4, dax: introduce ext4_dax_aops
d2c997c0f14535eff68d8ed9c2f1c5e100625751 fs, dax: use page->mapping to warn if truncate collides with a busy page
32785c0539b7e96f77a14a4f4ab225712665a5a4 fs/dcache.c: add cond_resched() in shrink_dentry_list()
6539e7f3727ab9d1c3810ecda040bb4d8c12a238 cifs: show the "w" bit for writeable /proc/fs/cifs/* files
a27ba2607e60312554cbcd43fc660b2c7f29dc9c xfs: detect agfl count corruption and reset agfl
0dd50d1b0c003ab4f17597fe1198bb57a2fadc06 random32: add prandom_seed_full_state helper
897ece56e714a2cc64e6914cb89a362d7021b36e random32: add prandom_init_once helper for own rngs
516fb7f2e73dcc303fb97fc3593209fcacf2d982 /proc/module: use the same logic as /proc/kallsyms for address exposure
e4a8ca3baa5557fa54557d42b5910ed0d3316922 /proc/module: fix building without kallsyms
e27f4a942a0ee4b84567a3c6cfa84f273e55cbb7 bpf: Use mount_nodev not mount_ns to mount the bpf filesystem
612bacad78ba6d0a91166fc4487af114bac172a8 bpf, inode: disallow userns mounts
e03e7ee34fdd1c3ef494949a75cb8c61c7265fa9 perf/bpf: Convert perf_event_array to use struct file
a43eec304259a6c637f4014a6d4767159b6a3aa3 bpf: introduce bpf_perf_event_output() helper
30743837dd204d2b04fd4e9d3db78cc7b118c81a net: filter: make register naming more comprehensible
3274f52073d88b62f3c5ace82ae9d48546232e72 bpf: add 'flags' attribute to BPF_MAP_UPDATE_ELEM command
04fd61ab36ec065e194ab5e74ae34a5240d992bb bpf: allow bpf programs to tail-call other bpf programs
2a36f0b92eb638dd023870574eb471b1c56be9ad bpf: Make the bpf_prog_array_map more generic
17a5267067f3c372fec9ffb798d6eaba6b5e6a4c bpf: verifier (add verifier core)
3ad0040573b0c00f88488bc31958acd07a55ee2e bpf: split state from prandom_u32() and consolidate {c, e}BPF prngs
60a3b2253c413cf601783b070507d7dd6620c954 net: bpf: make eBPF interpreter images read-only
738cbe72adc5c8f2016c4c68aa5162631d4f27e1 net: bpf: consolidate JIT binary allocator
9f12fbe603f7ae346b2b46008e325f0c9a68e55d net: filter: move load_pointer() into filter.h
b2197755b2633e164a439682fb05a9b5ea48f706 bpf: add support for persistent maps/progs
daedfb22451dd02b35c0549566cbb7cc06bdd53b net: filter: split filter.h and expose eBPF to user space
c15952dc18d8a293d976ac6c06d44d9d98023b45 net: filter: move common defines into bpf_common.h
f89b7755f517cdbb755d7543eef986ee9d54e654 bpf: split eBPF out of NET
e93735be6a1898dd9f8de8f55254cc76309777ce perf: remove unused __addr variable
de7b2973903c6cc50b31ee5682a69b2219b9919d tracepoint: Use struct pointer instead of name hash for reg/unreg tracepoints
72cbbc8994242b5b43753738c01bf07bf29cb70d tracing: Add kprobe flag
2541517c32be2531e0da59dfd7efc1ce844644f5 tracing, perf: Implement BPF programs attached to kprobes
dead9f29ddcc69551f35529a252d2704047870d3 perf: Fix race in BPF program unregister
04a22fae4cbc1f7d3f7471e9b36359f98bd3f043 tracing, perf: Implement BPF programs attached to uprobes
a31d82d85afdcbdb8c4128dfd6146992dc6b3576 bpf_trace: Make dependent on PERF_EVENTS
cf5f5cea270655dd49370760576c64b228583b79 bpf: add support for sys_enter_* and sys_exit_* tracepoints
9fd82b610ba3351f05a59c3e9117cfefe82f7751 bpf: register BPF_PROG_TYPE_TRACEPOINT program type
0515e5999a466dfe6e1924f460da599bb6821487 bpf: introduce BPF_PROG_TYPE_PERF_EVENT program type
f4324551489e8781d838f941b7aee4208e52e8bf bpf: add BPF_PROG_ATTACH and BPF_PROG_DETACH commands
824bd0ce6c7c43a9e1e210abf124958e54d88342 bpf: introduce BPF_MAP_TYPE_PERCPU_HASH map
a10423b87a7eae75da79ce80a8d9475047a674ee bpf: introduce BPF_MAP_TYPE_PERCPU_ARRAY map
15a07b33814d14ca817887dbea8530728dc0fbe4 bpf: add lookup/update support for per-cpu hash and array maps
6bbd9a05a1f9839873a9290b5b7c6fafde8447ba bpf: grab rcu read lock for bpf_percpu_hash_update
d5a3b1f691865be576c2bffa708549b8cdccda19 bpf: introduce BPF_MAP_TYPE_STACK_TRACE
8e2fe1d9f1a20924f98ea46931a1d7fb092aa876 bpf: add new arg_type that allows for 0 sized stack buffer
39853cc0cdcf1b11f00f7f81e2f515a4d68ed209 bpf: Mark __bpf_prog_run() stack frame as non-standard
b121d1e74d1f24654bdc3165d3db1ca149501356 bpf: prevent kprobe+bpf deadlocks
e19494edab82f55a633911f25094581891bdc351 bpf: introduce percpu_freelist
6c90598174322b8888029e40dd84a4eb01f56afe bpf: pre-allocate hash map elements
823707b68d6e6c4b1be619b039c7045fef1740e6 bpf: check for reserved flag bits in array and stack maps
557c0c6e7df8e14a46bd7560d193fa5bbc00a858 bpf: convert stackmap to pre-allocation
b8cdc05173f05d212627b7aba7ec47fa334a79f2 bpf: bpf_stackmap_copy depends on CONFIG_PERF_EVENTS
cdc4e47da8f4c32eeb6b2061a8a834f4362a12b7 bpf: avoid copying junk bytes in bpf_get_current_comm()
322cea2f41adb62c975f46a3242f4e3b43226fa1 bpf: add missing map_flags to bpf_map_show_fdinfo
0c93b7d85d40b690f04786ea0f18798b73182e4f bpf: reject invalid names right in ->lookup()
9940d67c93b5bb7ddcf862b41b1847cb728186c4 bpf: support bpf_get_stackid() and bpf_perf_event_output() in tracepoint programs
32bbe0078afe86a8bf4c67c6b3477781b15e94dc bpf: sanitize bpf tracepoint access
07016151a446d25397b24588df4ed5cf777a69bb bpf, verifier: further improve search pruning
4923ec0b10d998349c2ac4b38aa4674e539e6f92 bpf: simplify verifier register state assignments
d82bccc69041a51f7b7b9b4a36db0772f4cdba21 bpf/verifier: reject invalid LD_ABS | BPF_DW instruction
33ff9823c569f3aceb071071914919177a6bed6a bpf, verifier: add bpf_call_arg_meta for passing meta data
435faee1aae9c1ac231f89e4faf0437bfe29f425 bpf, verifier: add ARG_PTR_TO_RAW_STACK type
074f528eed408b467516e142fa4c45e5b0d2ba16 bpf: convert relevant helper args to ARG_PTR_TO_RAW_STACK
1e33759c788c78f31d4d6f65bac647b23624734c bpf, trace: add BPF_F_CURRENT_CPU flag for bpf_perf_event_output
bd570ff970a54df653b48ed0cfb373f2ebed083d bpf: add event output helper for notifications/sampling/logging
8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7 bpf: fix double-fdput in replace_map_fd_with_map_ptr()
92117d8443bc5afacc8d5ba82e541946310f106e bpf: fix refcnt overflow
6aff67c85c9e5a4bc99e5211c1bac547936626ca bpf: fix check_map_func_compatibility logic
1a0dc1ac1d2928e25739ee82d7e04423b01da563 bpf: cleanup verifier code
735b433397ea2f97d59240cbe4ea770aa7c88eef bpf: improve verifier state equivalence
4936e3528e3e272c567fe4ff0abb7ce3e1500575 bpf: minor cleanups in ebpf code
93a73d442d370e20ed1009cd79cb29c4d7c0ee86 bpf, x86/arm64: remove useless checks on prog
c237ee5eb33bf19fe0591c04ff8db19da7323a83 bpf: add bpf_patch_insn_single helper
d1c55ab5e41fcd72cb0a8bef86d3f652ad9ad9f5 bpf: prepare bpf_int_jit_compile/bpf_prog_select_runtime apis
4f3446bb809f20ad56cadf712e6006815ae7a8f9 bpf: add generic constant blinding for use in jits
959a7579160349d222cc5da30db3b138139b6fbc bpf, x86: add support for constant blinding
6077776b5908e0493a3946f7d3bc63871b201e87 bpf: split HAVE_BPF_JIT into cBPF and eBPF variant
b7552e1bccbe3da9c8e7386c6188e8ea4667c8e7 bpf: rather use get_random_int for randomizations
002245cc6407c8ff65b8024554080eb6de1a8e2c bpf: fix missing header inclusion
969bf05eb3cedd5a8d4b7c346a85c2ede87a6d6d bpf: direct packet access
d91b28ed42de99217efb2e8cb0357263d6fb737c bpf: support decreasing order in direct packet access
1b9b69ecb3a5236d4d3da0f0fa11af916371841e bpf: teach verifier to recognize imm += ptr pattern
19de99f70b87fcc3338da52a89c439b088cbff71 bpf: fix matching of data/data_end in verifier
61d1b6a42fec61c5065f54cc62cef02b483c69fb bpf, maps: add release callback
d056a788765e67773124f520159185bc89f5d1ad bpf, maps: extend map_fd_get_ptr arguments
3b1efb196eee45b2f0c4994e0c43edb5e367f620 bpf, maps: flush own entries on perf map release
ceb56070359b7329b5678b5d95a376fcb24767be bpf, perf: delay release of BPF prog after grace period
1ca1cc98bf7418c680415bfce05699f67510a7fd bpf: minor cleanups on fd maps and helpers
6816a7ffce32e999601825ddfd887f36d3052932 bpf, trace: add BPF_F_CURRENT_CPU flag for bpf_perf_event_read
80b48c445797a634d869c7e5a53e182ba2688931 bpf: don't use raw processor id in generic helper
1aacde3d22c42281236155c1ef6d7a5aa32a826b bpf: generally move prog destruction to RCU deferral
113214be7f6c98dd6d0435e4765aea8dea91662c bpf: refactor bpf_prog_get and type check into helper
606274c5abd8e245add01bc7145a8cbb92b69ba8 bpf: introduce bpf_get_current_task() helper
a536a6e13ecd0d6eb0ffc36c5d56555896617282 bpf: make inode code explicitly non-modular
7e3f977edd0bd9ea6104156feba95bb5ae9bdd38 perf, events: add non-linear data support for raw records
8e7a3920ac277dd4e690c0e70c9750176e3acb83 bpf, perf: split bpf_perf_event_output
555c8a8623a3a87b3c990ba30b7fd2e5914e41d2 bpf: avoid stack copy and use skb ctx for event output
858d68f10238fdd1ebdd0096f912f063e97c6766 bpf: bpf_event_entry_gen's alloc needs to be in atomic context
183fc1537ec39be242dc8b619f71fc11b393d295 kernel/trace/bpf_trace.c: work around gcc-4.4.4 anon union initialization bug
4ed8ec521ed57c4e207ad464ca0388776de74d4b cgroup: bpf: Add BPF_MAP_TYPE_CGROUP_ARRAY
59d3656d5bf504f771fc44fdbc7a9a8590795f22 bpf: add bpf_prog_add api for bulk prog refcnt
4acf6c0b84c91243c705303cd9ff16421914150d bpf: enable direct packet data write for xdp progs
cc2e0b3fbcdd9667d7b7ecdf36d7b4d3647681d6 bpf: fix implicit declaration of bpf_prog_add
aa7145c16d6bf086538ad7eb20c807513bfa5efc bpf, events: fix offset in skb copy handler
96ae52279594470622ff0585621a13e96b700600 bpf: Add bpf_probe_write_user BPF helper to be called in tracers
a6ed3ea65d9868fdf9eff84e6fe4f666b8d14b02 bpf: restore behavior of bpf_map_update_elem
6841de8b0d03cc9a4e0e928453623c13ee754f77 bpf: allow helpers access the packet directly
8937bd80fce64a25be23c7790459d93f7b1e9b79 bpf: allow bpf_get_prandom_u32() to be used in tracing
ea2e7ce5d0fc878463ba39deb46cf2ab20398fd2 bpf: support 8-byte metafield access
fdc15d388d600d5a1599e14c700af105a5b60761 bpf: perf_event progs should only use preallocated maps
aa6a5f3cb2b2edc5b9aab0b4fdfdfa9c3b5096a8 perf, bpf: add perf events core support for BPF_PROG_TYPE_PERF_EVENT programs
6088b5823b4cb132a838878747384cbfb5ce6646 bpf: minor cleanups in helpers
f035a51536af9802f55d8c79bd87f184ebffb093 bpf: add BPF_SIZEOF and BPF_FIELD_SIZEOF macros
f3694e00123802d688180e7ae90b240669910e3c bpf: add BPF_CALL_x macros for declaring helpers
1f415a74b0ca64b5bfacbb12d71ed2ec050a8cfb bpf: fix method of PTR_TO_PACKET reg id generation
2d2be8cab26ed918e94d2deae89580003242a123 bpf: fix range propagation on direct packet access
b399cf64e318ac8c5f10d36bb911e61c746b8788 bpf, verifier: enforce larger zero range for pkt on overloading stack buffs
36bbef52c7eb646ed6247055a2acd3851e317857 bpf: direct packet write and access for helpers for clsact progs
3df126f35f88dc76eea33769f85a3c3bb8ce6c6b bpf: don't (ab)use instructions to store state
58e2af8b3a6b587e4ac8414343581da4349d3c0f bpf: expose internal verfier structures
13a27dfc669724564aafa2699976ee756029fed2 bpf: enable non-core use of the verfier
6b17387307bafc71624b9890b9239b6a438e2e89 bpf: recognize 64bit immediate loads as consts
1955351da41caa1dbf4139191358fed84909d64b bpf: Set register type according to is_valid_access()
b761fe226be61eba6ae20a424b288559b8a606b5 bpf: clean up put_cpu_var usage
484611357c19f9e19ef742ebef4505a07d243cc9 bpf: allow access into map value arrays
57a09bf0a416700676e77102c28f9cfcb48267e0 bpf: Detect identical PTR_TO_MAP_VALUE_OR_NULL registers
2d0e30c30f84d08dc16f0f2af41f1b8a85f0755e bpf: add helper for retrieving current numa node id
ebb676daa1a340ccef25eb769aefc09b79c01f8a bpf: Print function name in addition to function id
483bed2b0ddd12ec33fc9407e0c6e1088e77a97c bpf: fix htab map destruction when extra reserve is in use
20b2b24f91f70e7d3f0918c077546cb21bd73a87 bpf: fix map not being uncharged during map creation failure
de464375daf0d10f04fa5add2e889f42328d2ade bpf: Remove unused but set variables
535e7b4b5ef220be374b895684f274872aebd0f8 bpf: Use u64_to_user_ptr()
3a08c2fd763450a927d1130de078d6f9e74944fb bpf: LRU List
961578b63474d13ad0e2f615fcc2901c5197dda6 bpf: Add percpu LRU list
fd91de7b3c69a7f108b92521e1115df3e058af55 bpf: Refactor codes handling percpu map
29ba732acbeece1e34c68483d1ec1f3720fa1bb3 bpf: Add BPF_MAP_TYPE_LRU_HASH
8f8449384ec364ba2a654f11f94e754e4ff719e0 bpf: Add BPF_MAP_TYPE_LRU_PERCPU_HASH
2874aa2e467dbc0b4f7cb0ee5dc872e98e000a47 bpf: Fix compilation warning in __bpf_lru_list_rotate_inactive
f23cc643f9baec7f71f2b74692da3cf03abbbfda bpf: fix range arithmetic for bpf map access
6d67942dd0ebc3dddc86edf9208169d064a9b3d7 bpf: add __must_check attributes to refcount manipulating helpers
21116b7068b9b66ac16b2fe3675469f459968c3f bpf: add owner_prog_type and accounted mem to array map's fdinfo
a3af5f80010625a9ffbe8edd4bae615a7516b6bc bpf: allow for mount options to specify permissions
e2d2afe15ed452f91797a80dbc0a17838ba03ed4 bpf: fix states equal logic for varlen access
3a0af8fd61f90920f6fa04e4f1e9a6a73c1b4fd2 bpf: BPF for lightweight tunnel infrastructure
61023658760032e97869b07d54be9681d2529e77 bpf: Add new cgroup attach type to enable sock modifications
3c839744b33782b930c5c61df35511ede5e5a574 bpf: Preserve const register type on const OR alu ops
ef0915cacd04c9e35be5f9d62a4e4b5b4b9bcfd1 bpf: fix loading of BPF_MAXINSNS sized programs
d2a4dd37f6b41fbcad76efbf63124eb3126c66fe bpf: fix state equivalence
a08dd0da5307ba01295c8383923e51e7997c3576 bpf: fix regression on verifier pruning wrt map lookups
7bd509e311f408f7a5132fcdde2069af65fa05ae bpf: add prog_digest and expose it via fdinfo/netlink
aafe6ae9cee32df85eb5e8bb6dd1d918e6807b09 bpf: dynamically allocate digest scratch buffer
5ccb071e97fbd9ffe623a0d3977cc6d013bee93c bpf: fix overflow in prog accounting
6760bf2ddde8ad64f8205a651223a93de3a35494 bpf: fix mark_reg_unknown_value for spilled regs on map value marking
9d5ecb09d525469abd1a10c096cb5a17206523f2 bpf: change back to orig prog on too many passes
dbcfe5f76dd5266b8f308b5a8f9ef52f74b2d6e7 bpf: split check_mem_access logic for map values
5722569bb9c3bd922c4f10b5b2912fe88c255312 bpf: allow helpers access to map element values
f0318d01b694485af9678a4e120328ae3555be6d bpf: allow adjusted map element values to spill
06c1c049721a995dee2829ad13b24aaf5d7c5cce bpf: allow helpers access to variable memory
39f19ebbf57b403695f7b5f9cf322fe1ddb5d7fb bpf: rename ARG_PTR_TO_STACK
a5ef01aaac245d37edf113d65b0c146e96d841d1 bpf: Remove unused but set variable in __bpf_lru_list_shrink_inactive()
3bf003335ba356aac5a43e28640159d4ae8a2a60 bpf: Make unnecessarily global functions static
7984c27c2c5cd3298de8afdba3e1bd46f884e934 bpf: do not use KMALLOC_SHIFT_MAX
6b8cc1d11ef75c5b9c530b3d0d148f3c2dd25f93 bpf: pass original insn directly to convert_ctx_access
62c7989b24dbd348c2507ee6458ebf5637d6ddb5 bpf: allow b/h/w/dw access for bpf's cb in ctx
f1f7714ea51c56b7163fb1a5acf39c6a204dd758 bpf: rework prog_digest into prog_tag
2d071c643f1cd15a24172de4b5b7ae2adb93abbb bpf, trace: make ctx access checks more robust
d407bd25a204bd66b7346dde24bd3d37ef0e0b05 bpf: don't trigger OOM killer under pressure with map alloc
a5e8c07059d0f0b31737408711d44794928ac218 bpf: add bpf_probe_read_str helper
b95a5c4db09bc7c253636cb84dc9b12c577fd5a0 bpf: add a longest prefix match trie map implementation
d140199af510ad4749dc5e38b7922135258ba5fd bpf, lpm: fix kfree of im_node in trie_update_elem
3fadc80115837b86f989d17c4aa92bb5cb7bc1b6 bpf: enable verifier to better track const alu ops
2acae0d5b0f73a8fb4b180bd13491feb96e55fc6 trace: add variant without spacing in trace_print_hex_seq
63dfef75ed75364901d7caa52c6420cec3e73519 bpf: enable verifier to add 0 to packet ptr
c502faf94153bd0fedc5389a936f728a659cc6ab bpf, lpm: fix overflows in trie_alloc checks
7f677633379b4abb3281cdbe7e7006f049305c03 bpf: introduce BPF_F_ALLOW_OVERRIDE flag
7e57fbb2a341b5d44d30e71a6d782c5e6dbc429c bpf: reduce compiler warnings by adding fallthrough comments
9383191da4e40360a5d880fbe6bb03911c61621b bpf: remove stubs for cBPF from arch code
bc1750f366902449f36f15f4a692a495fe6bcdfe bpf: fix spelling mistake: "proccessed" -> "processed"
f38837b08d23e66de17d46d030e0d9ac5172ad1f bpf: add get_next_key callback to LPM map
9f691549f76d488a0c74397b3e51e943865ea01f bpf: fix struct htab_elem layout
4fe8435909fddc97b81472026aa954e06dd192a5 bpf: convert htab map to hlist_nulls
e245c5c6a5656e4d61aa7bb08e9694fd6e5b2b9d bpf: move fixup_bpf_calls() function
79741b3bdec01a8628368fbcfccc7d189ed606cb bpf: refactor fixup_bpf_calls()
8041902dae5299c1f194ba42d14383f734631009 bpf: adjust insn_aux_data when patching insns
81ed18ab3098b6519274545e80a29caacb77d160 bpf: add helper inlining infra and optimize map_array lookup
9015d2f5953590e8273392b44c2b0f864350b427 bpf: inline htab_map_lookup_elem()
8c290e60fa2a51806159522331c9ed41252a8fb3 bpf: fix hashmap extra_elems logic
fad73a1a35ea61f13607a391aca669caad8c04ca bpf: Fix and simplifications on inline map lookup
56f668dfe00dcf086734f1c42ea999398fad6572 bpf: Add array of maps support
bcc6b1b7ebf857a9fe56202e2be3361131588c15 bpf: Add hash of maps support
b1977682a3858b5584ffea7cfb7bd863f68db18d bpf: improve verifier packet range checks
fce366a9dd0ddc47e7ce05611c266e8574a45116 bpf, verifier: fix alu ops against map_value{, _adj} register types
79adffcd6489ef43bda2dfded3d637d7fb4fac80 bpf, verifier: fix rejection of unaligned access checks for map_value_adj
1cf1cae963c2e6032aebe1637e995bc2f5d330f4 bpf: introduce BPF_PROG_TEST_RUN command
96a94cc5158859943b7e4e72ae69e572815f5413 bpf: reference may_access_skb() from __bpf_prog_run()
be9370a7d8614d1fa54649c75de14458e79b91ec bpf: remove struct bpf_prog_type_list
40077e0cf62206ac3c315b6991d8dcddb3703286 bpf: remove struct bpf_map_type_list
695ba2651a2ecbb336145f9cc033c85b9c6a5cee bpf: lru: Lower the PERCPU_NR_SCANS from 16 to 4
8fe45924387be6b5c1be59a7eb330790c61d5d10 bpf: map_get_next_key to return first key on NULL
7e56fbd27b4bd6ab7d641f45bf23d2af654412f6 bpf, x86_64/arm64: remove old ldimm64 artifacts from jits
332270fdc8b6fba07d059a9ad44df9e1a2ad4529 bpf: enhance verifier to understand stack pointer arithmetic
0d0e57697f162da4aa218b5feafe614fb666db07 bpf: don't let ldimm64 leak map addresses on unprivileged
dc4bb0e2356149aee4cdae061936f3bbdd45595c bpf: Introduce bpf_prog ID
f3f1c054c288bb6e503005e6d73611151ed20e91 bpf: Introduce bpf_map ID
34ad5580f8f9c86cb273ebea25c149613cd1667e bpf: Add BPF_(PROG|MAP)_GET_NEXT_ID command
b16d9aa4c2b90af8d2c3201e245150f8c430c3bc bpf: Add BPF_PROG_GET_FD_BY_ID
bd5f5f4ecb78e2698dad655645b6d6a2f7012a8c bpf: Add BPF_MAP_GET_FD_BY_ID
783d28dd11f68fb25d1f2e0de7c42336394ef128 bpf: Add jited_len to struct bpf_prog
1e270976908686ec25fb91b8a34145be54137976 bpf: Add BPF_OBJ_GET_INFO_BY_FD
d1174416747d790d750742d0514915deeed93acf bpf: Track alignment of register values in the verifier.
c5fc9692d101d1318b0f53f9f691cd88ac029317 bpf: Do per-instruction state dumping in verifier when log_level > 1.
e07b98d9bffe410019dfcf62c3428d4a96c56a2c bpf: Add strict alignment flag for BPF_PROG_LOAD.
cb4d2b3f03d8eed90be3a194e5b54b734ec4bbe9 bpf: Add name, load_time, uid and map_ids to bpf_prog_info
546ac1ffb70d25b56c1126940e5ec639c4dd7413 bpf: add devmap, a map for storing net device references
96eabe7a40aa17e613cf3db2c742ee8b1fc764d0 bpf: Allow selecting numa node during map creation
ad5b177bd73f5107d97c36f56395c4281fb6f089 bpf: Add map_name to bpf_map_info
3c2ce60bdd3d57051bf85615deec04a694473840 bpf: adjust verifier heuristics
e7bf8249e8f1bac64885eeccb55bcf6111901a81 bpf: encapsulate verifier log state into a structure
6832a333ed4a7cc4fcb170c045d1d96d0976fdd4 bpf: Handle multiple variable additions into packet pointers in verifier.
e4eda884db7930cee434828759064b4711604078 net: Make IP alignment calulations clearer.
1ad2f5838d345e1c102bd1cd27c4f4c1349b0dc8 bpf: fix incorrect pruning decision when alignment must be tracked
a9789ef9afcb4fb0193f8dd94f2665ba3ad71e79 bpf: properly reset caller saved regs after helper call and ld_abs/ind
a316338cb71a3260201490e615f2f6d5c0d8fb2c bpf: fix wrong exposure of map_flags into fdinfo for lpm
71189fa9b092ef125ee741eccb2f5fa916798afd bpf: free up BPF_JMP | BPF_CALL | BPF_X opcode
f696b8f471ec987e987e38206b8eb23c39ee5a86 bpf: split bpf core interpreter
8726679a0fa317f8e83d0843b266453f31bff092 bpf: teach verifier to track stack depth
b870aa901f4be1d32c13faf9e8f40bf2a8562e19 bpf: use different interpreter depending on required stack size
177366bf7ceb35860281a6ebe824e42bf96fd95d bpf: change x86 JITed program stack layout
2960ae48c4636778761610dd49187691c3774465 bpf: take advantage of stack_depth tracking in x64 JIT
80b7d81912d807f161d55e9c2c9cc81061666f83 bpf: Remove the capability check for cgroup skb eBPF program
b7d3ed5be9bd7e0689eee0f0f36702937cd8f7c8 bpf: update perf event helper functions documentation
d25da6caa2a1d6644360c40d7c5fd7c057551360 bpf: don't check spilled reg state for non-STACK_SPILLed type slots
4a2ff55aa4946b036b87572976cbfc6ab244c497 bpf: reset id on CONST_IMM transition
36e24c003091a11ec847291c9a1d36d2ec92b155 bpf: reset id on spilled regs in clear_all_pkt_pointers
31fd85816dbe3a714bcc3f67c17c3dd87011f79e bpf: permits narrower load from bpf program context fields
239946314e57711d7da546b67964d0b387a3ee42 bpf: possibly avoid extra masking for narrower load in verifier
14dc6f04f49dc12614d7e90928b495b8d73cd471 bpf: Add syscall lookup support for fd array and htab
8007e40a24e12d35189203370268c7278f29ab74 bpf: Fix out-of-bound access on interpreters[]
6bdf6abc56b53103324dfd270a86580306e1a232 bpf: prevent leaking pointer via xadd on unpriviledged
e4448ed87ccdbacb74871736f63220642242b32f bpf: don't open-code memdup_user()
40304b2a1567fecc321f640ee4239556dd0f3ee0 bpf: BPF support for sock_ops
f96da09473b52c09125cc9bf7d7d4576ae8229e0 bpf: simplify narrower ctx access
43188702b3d98d2792969a3377a30957f05695e6 bpf, verifier: add additional patterns to evaluate_reg_imm_alu
4cc7c1864bbd4cf80f6bdc8ba3217de5aa5f4688 bpf: Implement show_options
4cabc5b186b5427b9ee5a7495172542af105f02b bpf: fix mixed signed/unsigned derived min/max value bounds
9305706c2e808ae59f1eb201867f82f1ddf6d7a6 bpf/verifier: fix min/max handling in BPF_SUB
89b096898a8450b0a5b97d521e000ae9f94f81f9 bpf: don't indicate success when copy_from_user fails
9975a54b3c9ecf029cbf5dd7a8c9701b1d74029e bpf: fix bpf_prog_get_info_by_fd to dump correct xlated_prog_len
f1174f77b50c94eecaa658fdc56fa69b421de4b8 bpf/verifier: rework value tracking
b03c9f9fdc37dab81ea04d5dacdc5995d4c224c2 bpf/verifier: track signed and unsigned min/max values
7d1238f21026e277936fff408b73bc19e89239a8 bpf/verifier: more concise register state logs for constant var_off
8e17c1b16277cba0e9426de6fe78817df378f45c bpf/verifier: increase complexity limit to 128k
58291a7465f6b88248c9f34807c16705bd5698f8 bpf: Move check_uarg_tail_zero() upward
752ba56fb130b27c32c2ae6c82c8ef246b22106c bpf: Extend check_uarg_tail_zero() checks
92b31a9af73b3a3fc801899335d6c47966351830 bpf: add BPF_J{LT,LE,SLT,SLE} instructions
52afc51e94b1c7a52d7e04fd81ea8b1c177436d0 bpf, x86: implement jiting of BPF_J{LT,LE,SLT,SLE}
b4e432f1000a171d901e42551459059831925770 bpf: enable BPF_J{LT, LE, SLT, SLE} opcodes in verifier
dc503a8ad98474ea0073a1c5c4d9f18cb8dd0dbf bpf/verifier: track liveness for pruning
a6f6df69c48b86cd84f36c70593eb4968fceb34a bpf: export bpf_prog_inc_not_zero
cf9d01405925e3f8144c99d7bf7b184449794066 bpf: devmap: remove unnecessary value size check
1ab2de2bfed3ab2073ed1e7afa2b1134930d2b70 bpf: fix liveness propagation to parent in spilled stack slots
cd36c3a21a400cac9c457394b9adf94e0027c136 bpf: fix map value attribute for hash of maps
89c63074c2bc25874e4e72406ff15a9a8e3df750 bpf: make htab inlining more robust wrt assumptions
7b0c2a0508b90fce79d3782b2e55d0e8bf6a283e bpf: inline map in map lookup functions for array and htab
63f45f840634ab5fd71bbc07acff915277764068 bpf/verifier: when pruning a branch, ignore its write marks
1b688a19a92223cf2d1892c9d05d64dc397b33e3 bpf/verifier: remove varlen_map_value_access flag
8e9cd9ce90d48369b2c5ddd79fe3d4a4cb1ccb56 bpf/verifier: document liveness analysis
84ccac6e7854ebbfb56d2fc6d5bef9be49bb304c x86: bpf_jit: small optimization in emit_bpf_tail_call()
cc555421bc118edd070f41258d6f55f1ccfc2558 bpf: Inline LRU map lookup
bb9b9f8802212d98e70c63045b1734162945eaa5 bpf: Only set node->ref = 1 if it has not been set
e67b8a685c7c984e834e3181ef4619cd7025a136 bpf/verifier: reject BPF_ALU64|BPF_END
e454cf5958538666635488030046b6a84a22d447 bpf: Implement map_delete_elem for BPF_MAP_TYPE_LPM_TRIE
930651a75bf1ba6893a8b8475270664ebdb6cf4a bpf: do not disable/enable BH in bpf_map_free_id()
b5d7388f9db78f19e6af7b56a469ca8d1860329d bpf: Optimize lpm trie delete
de8f3a83b0a0fddb2cf56e7a718127e9619ea3da bpf: add meta pointer for direct access
2b7c6ba945fd3c10ca3e030be402098aff2f89d3 bpf/verifier: improve disassembly of BPF_END instructions
73c864b38383f4abc9b559025cd663f4a81afa89 bpf/verifier: improve disassembly of BPF_NEG instructions
90caccdd8cc0215705f18b92771b449b01e2474a bpf: fix bpf_tail_call() x64 JIT
390ee7e29fc8e6e90d3065b00afb047c4ee552f9 bpf: enforce return code for cgroup-bpf programs
97562633bcbac4a07d605ae628d7655fa71caaf5 bpf: perf event change needed for subsequent bpf helpers
908432ca84fc229e906ba164219e9ad0fe56f755 bpf: add helper bpf_perf_event_read_value for perf event array map
4bebdc7a85aa400c0222b5329861e4ad9252f1e5 bpf: add helper bpf_perf_prog_read_value
8fe2d6ccd52b086268f2f36e5e2fc0fe3aeffa80 bpf: fix liveness marking
473d97343f94ff20f5196078314e4dd83156d3a2 bpf: Change bpf_obj_name_cpy() to better ensure map's name is init by 0
98589a0998b8b13c4a8fa1ccb0e62751a019faa5 netfilter: xt_bpf: Fix XT_BPF_MODE_FD_PINNED mode of 'xt_bpf_info_v1'
067cae47771c864604969fd902efe10916e0d79c bpf: Use char in prog and map name
61bd5218eef349fcacc4976a251bc83a4748b4af bpf: move global verifier log into verifier environment
f4ac7e0b5cc8d16004ac57ff679266d573f30f77 bpf: move instruction printing into a separate file
a2a7d5701052542cd2260e7659b12443e0a74733 bpf: write back the verifier log buffer as it gets filled
db58ba45920255e967cc1d62a430cebd634b5046 bpf: wire in data and data_end for cls_act_bpf
1bdec44955edc22fb840f5965987d2972307dcc9 bpf: verifier: set reg_type on context accesses in second pass
28e33f9d78eefe98ea86673ab31e988b37a9a738 bpf: disallow arithmetic operations on context pointer
7de16e3a35578f4f5accc6f5f23970310483d0a2 bpf: split verifier and program ops
00176a34d9e27ab1e77db75fe13abc005cffe0ca bpf: remove the verifier ops from program structure
4f9218aaf8a463f76cac40aa08d859d065f8cc9e bpf: move knowledge about post-translation offsets out of verifier
bc6d5031b43a2291de638ab9304320b4cae61689 bpf: do not test for PCPU_MIN_UNIT_SIZE before percpu allocations
9ef2a8cd5c0dcb8e1f1534615c56eb13b630c363 bpf: require CAP_NET_ADMIN when using devmap
6e71b04a82248ccf13a94b85cbc674a9fefe53f5 bpf: Add file mode configuration into bpf maps
fb2a311a31d3457fe8c3ee16f5609877e2ead9f7 bpf: fix off by one for range markings with L{T, E} patterns
9c3997601d51069ec08d7d06cf31a17884056cc2 bpf: reduce verifier memory consumption
1969db47f8d0e800397abd4ee4e8d27d2b578587 bpf: fix verifier memory leaks
b06723da824af1e979eb1699623881b5f45a783c bpf: minor cleanups after merge
5beca081be9195b4316ac5f32921df0234ee8e0e bpf: also improve pattern matches for meta access
eba0c929d1d0f16c4b03628b7bf8ce363b9e5c9a bpf: fix out-of-bounds access warning in bpf_check
8c01c4f896aa3404af948880dcb29a2d51c833dc bpf: fix verifier NULL pointer dereference
9fd29c08e52023252f0480ab8f6906a1ecc9a8d5 bpf: improve verifier ARG_CONST_SIZE_OR_ZERO semantics
9c019e2bc4b2bd8223c8c0d4b6962478b479834d bpf: change helper bpf_probe_read arg2 type to ARG_CONST_SIZE_OR_ZERO
eb33f2cca49ec49a1b893b5af546e7c042ca6365 bpf: remove explicit handling of 0 for arg2 in bpf_probe_read
5c4e1201740ceae9bd6f622851a9bf7c66debe3a bpf: change bpf_probe_read_str arg2 type to ARG_CONST_SIZE_OR_ZERO
a60dd35d2e39209fa7645945e1192bf9769872c6 bpf: change bpf_perf_event_output arg5 type to ARG_CONST_SIZE_OR_ZERO
db1ac4964fa172803a0fea83033cd35d380a8a77 bpf: introduce ARG_PTR_TO_MEM_OR_NULL
c131187db2d3fa2f8bf32fdf4e9a4ef805168467 bpf: fix branch pruning logic
12a3cc8424fe1237aaeb982dec4f0914ddd22f3e bpf: fix stack state printing in verifier log
4e92024a48ecbd06fba3ccfb2174abd3d2f54a83 bpf: print liveness info to verifier log
19ceb4178d31e543479d75e20c2f9df08f16632f bpf: don't mark FP reg as uninit
2f18f62ee1648b2c93e6ab4a58d548010b0a67e4 bpf: improve verifier liveness marks
3bf15921c58df982f9b15d64754c483785bf66f3 bpf: improve JEQ/JNE path walking
914cb781ee1a35f4c7a5173a668d6ba2c4734b91 bpf: cleanup register_is_null()
c895f6f703ad7dd2f99e751d9884b0aa5d0eea25 bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type
9147efcbe0b7cc96b18eb64b1a3f0d4bba81443c bpf: add schedule points to map alloc/free
cc8b0b92a1699bc32f7fec71daa2bfc90de43a4d bpf: introduce function calls (function boundaries)
f4d7e40a5b7157e1329c3c5b10f60d8289fc2941 bpf: introduce function calls (verification)
cc2b14d51053eb055c06f45e1a5cdbfcf2b79e94 bpf: teach verifier to recognize zero initialized stack
1ea47e01ad6ea0fe99697c54c2413d81dd21fe32 bpf: add support for bpf_call to interpreter
60b58afc96c9df71871df2dbad42037757ceef26 bpf: fix net.core.bpf_jit_enable race
1c2a088a6626d4f51d2f2c97b0cbedbfbf3637f6 bpf: x64: add JIT support for multi-function programs
fa2d41adb953235c4acaa98f6c980fd9eabe0062 bpf: make function skip_callee static and return NULL rather than 0
4374f256ce8182019353c0c639bb8d0695b4c941 bpf/verifier: fix bounds calculation on BPF_RSH
95a762e2c8c942780948091f8f2a4f32fce1ac6f bpf: fix incorrect sign extension in check_alu_op()
0c17d1d2c61936401f4702e1846e2c19b200f958 bpf: fix incorrect tracking of register size truncation
468f6eafa6c44cb2c5d8aad35e12f06c240a812a bpf: fix 32-bit ALU op verification
ea25f914dc164c8d56b36147ecc86bc65f83c469 bpf: fix missing error return in check_stack_boundary()
a5ec6ae161d72f01411169a938fa5f8baea16e8f bpf: force strict alignment checks for stack pointers
179d1c5602997fef5a940c6ddcf31212cbfebd14 bpf: don't prune branches when a scalar is replaced with a pointer
bb7f0f989ca7de1153bd128a40a71709e339fa03 bpf: fix integer overflows
82abbf8d2fc46d79611ab58daa7c608df14bb3ee bpf: do not allow root to mangle valid pointers
7105e828c087de970fcb5a9509db51bfe6bd7894 bpf: allow for correlation of maps and helpers in dump
fd05e57bb35ad5eb7e261b64e5cf46445250f842 bpf: fix stacksafe exploration when comparing states
70a87ffea8acc390ae315fa1930e849f656bdb88 bpf: fix maximum stack depth tracking logic
aada9ce644e53410954daa6beb1f7c4ca158abd7 bpf: fix max call depth check
5896351ea9360072f8bdd9eee186861a9d13db6d bpf: fix verifier GPF in kmalloc failure path
b2157399cc9898260d6031c5bfe45fe137c1fbe7 bpf: prevent out-of-bounds speculation
290af86629b25ffd1ed6232c4e9107da031705cb bpf: introduce BPF_JIT_ALWAYS_ON config
430e68d10baf55e4c40d4dd1de8201c1caf5dddd bpf: export function to write into verifier log buffer
40950343932879247861ae152dcb55e4555afdff bpf: fix spelling mistake: "obusing" -> "abusing"
7891a87efc7116590eaba57acc3c422487802c6f bpf: arsh is not supported in 32 bit alu thus reject it
bbeb6e4323dad9b5e0ee9f60c223dd532e2403b1 bpf, array: fix overflow in max_entries and undefined behavior in index_mask
c366287ebd698ef5e3de300d90cd62ee9ee7373e bpf: fix divides by zero
68fda450a7df51cff9e5a4d4a4d9d0d5f2589153 bpf: fix 32-bit divide by zero
1110f3a9bcf394c06b81a98206aee9b6860653c8 bpf: add map_alloc_check callback
daffc5a2e6f4bf4f99b00e183117920e321b6763 bpf: hashtab: move attribute validation before allocation
9328e0d1bc09e96bd7dc85374f5c2a1e0e04e539 bpf: hashtab: move checks out of alloc function
bd475643d74e8ed78bfd36d941053b0e45974e8e bpf: add helper for copying attrs to struct bpf_map
f37a8cb84cce18762e8f86a70bd6a49a66ab964c bpf: reject stores into ctx via st and xadd
6f16101e6a8b4324c36e58a29d9e0dbb287cdedb bpf: mark dst unknown on inconsistent {s, u}bounds adjustments
ad46061fca87c0ab6670af3a44e03237f99d7a1f bpf: arraymap: move checks out of alloc function
32852649ba3f74aab10025f2e59ca2b49d5cccfa bpf: arraymap: use bpf_map_init_from_attr()
b471f2f1de8b816f1e799b80aa92588f3566e4bd bpf: implement MAP_GET_NEXT_KEY command for LPM_TRIE map
901334159419afc8c1b8556243fc53e9617472d2 bpf, verifier: detect misconfigured mem, size argument pair
de0a444ddae61b77683c27cd390e518e33858d20 bpf, x86: small optimization in alu ops with imm
4bd95f4b99e921f51783bfddcd9738e9d3eef2b5 bpf: add upper complexity limit to verifier log
2310035fa03f651dd5b03f19a26a97512aa8842c bpf: fix incorrect kmalloc usage in lpm_trie MAP_GET_NEXT_KEY rcu region
9c147b56fc7165856da9c510463fafc2f0d58d5f bpf: Use the IS_FD_ARRAY() macro in map_update_elem()
2a5418a13fcfbb1f13a847eedb9a8e30a9ead765 bpf: improve dead code sanitizing
5e581dad4fec0e6d062740dc35b8dc248b39d224 bpf: make unknown opcode handling more robust
f6b1b3bf0d5f681631a293cfe1ca934b81716f1e bpf: fix subprog verifier bypass by div/mod by 0 exception
3e5b1a39d7cfaa3c023c17f5d12b3f22af046929 bpf, x86_64: remove obsolete exception handling from div/mod
6dd1ec6c7a2c304e9e2e2edd9e7ccb8e8791d36a bpf: fix kernel page fault in lpm map trie_get_next_key
9a3efb6b661f71d5675369ace9257833f0e78ef3 bpf: fix memory leak in lpm_trie map_free callback function
544bdebc6fcb68c2e8075bc2d3b68e39789d4165 bpf: Remove unused callee_saved array
a493a87f38cfa48caaa95c9347be2d914c6fdf29 bpf, x64: implement retpoline for tail call
88e69a1fcc1e67dec3025af64736a84532528242 bpf, x64: save one byte per shl/shr/sar when imm is 1
6fe8b9c1f41dfe3209dabc5bd0726e003a065288 bpf, x64: save several bytes by using mov over movabsq when possible
d806a0cf2a1ddb97c91d902ef1c8219e1e2b2c4c bpf, x64: save several bytes when mul dest is r0/r3 anyway
4c38e2f386b4fc5fd95d1203c74819948e2e903d bpf, x64: save few bytes when mul is in alu32
7b36f92934e40d1ee24e5617ddedb852e10086ca bpf: provide helper that indicates eBPF was migrated
0869175220b339b81de48872c8198c3ed75782e3 bpf, x64: save 5 bytes in prologue when ebpf insns came from cbpf
71d22d58b6e507147a9008ce2fd690cf311c97f9 bpf, x64: remove bpf_flush_icache
6c5f61023c5b0edb0c8a64c902fe97c6453b1852 bpf: fix rcu lockdep warning for lpm_trie map_free callback
ca36960211eb228bcbc7aaebfa0d027368a94c60 bpf: allow xadd only on aligned memory
6007b080d2e2adb7af22bf29165f0594ea12b34c bpf, x64: increase number of passes
1612a981b76688c598dc944bbfbe29a2b33e3973 bpf, x64: fix JIT emission for dead code
3aab8884c9eb99189a3569ac4e6b205371c9ac0b bpf, x64: fix memleak when not converging after image
39f56ca945af86112753646316c4c92dcd4acd82 bpf, x64: fix memleak when not converging on calls
b85fab0e67b162014cd328cb4e2a8e8ae382cb8a bpf: Add gpl_compatible flag to struct bpf_prog_info
749730ce42a2121e1c88350d69478bff3994b10a bpf: enable bpf syscall on x64 and i386
72ab55e96ebc00d68501f5cda59478ed7cf7e484 tools: bpftool: silence 'missing initializer' warnings
9b984a20ca84337af81cdab92d1e8ae37007894a tools, bpftool: Display license GPL compatible in prog show/list
720f228e8d3128b7ab1d39f51fdd8da07a7640c9 bpf: fix broken BPF selftest build
62750d040bd137fd6f541e216502d9158e07d348 fs: copy BTRFS_IOC_[SG]ET_FSLABEL to vfs
f7664b31975bd893190708e76b2c424328f0c49b xfs: implement online get/set fs label
89c2e71123badc1e75316ccd969ee8a5c6fd921a xfs: use xfs_trans_getsb in xfs_sync_sb_buf
4bb8b65a04273c5acd6d1e08e08b757b4e6f4913 xfs: fix string handling in label get/set functions
0b277961f4484fb3f142caaa1dd1748cb0b2cbee libnvdimm, pmem: disable dax flushing when pmem is fronting a volatile region
06e8ccdab15f46dfd31292e2b75d744bc5fc2a7c acpi: nfit: Add support for detect platform CPU cache flush on power loss
30e6d7bf29daa79d80711d35211c9b60894dbc44 acpi: nfit: add persistent memory control flag for nd_region
5fdf8e5ba5666fe153bd61f851a40078a6347822 libnvdimm: re-enable deep flush for pmem devices via fsync()
fe9a552e715dfe5167d52deb74ea16335896bdaf libnvdimm, nfit: fix persistence domain reporting
d6dd77ebcd22ca226171e3ff7bce7e6025ed0595 EDAC: Drop duplicated array of strings for memory type names
001f86137d3fca3c9002beaa7609c666715ebc70 EDAC: Add new memory type for non-volatile DIMMs
58ca9ac1463d07d24b9fa8befe065192abca6f76 EDAC, skx_edac: Detect non-volatile DIMMs
80fef315a74d79d765dbf58d9481843a364c50d6 KVM: Expose new cpu features to guest
3522c2a6a4f341058b8291326a945e2a2d2aaf55 x86/cpufeature: Add User-Mode Instruction Prevention definitions
ae3e61e1c28338d077b704505570fa181df1e41f KVM: x86: add support for UMIP
ab22d2604c86ceb01bb2725c9860b88a7dd383bb tcmu: Fix possible overwrite of t_data_sg's last iov[]
a5d68ba85801a78c892a0eb8efb711e293ed314b tcmu: Skip Data-Out blocks before gathering Data-In buffer for BIDI case
141685a39151aea95eb56562d2953e919c6c73da tcmu: Add dynamic growing data area feature support
b6df4b79a5514a9c6c53533436704129ef45bf76 tcmu: Add global data block pool support
d906d8af28e524bfa62c49cb2315f6ccdb910938 tcmu: fix module removal due to stuck thread
07932a023af3cd728390ffdaeffb78e357123181 tcmu: Fix module removal due to stuck unmap_thread thread again
c542942cb42186f99b6d715a833c7afad359f48f tcmu: Fix possible to/from address overflow when doing the memcpy
bf99ec13327bb5b0f6475aea8735c0ca34cc2a26 tcmu: merge common block release code
89ec9cfd3b644fbc36047e36776509130d2fc1ec tcmu: split unmap_thread_fn
9972cebb59a653cca735178a70c8ab09a5f4de1a tcmu: fix unmap thread race
c1c390ba53195aef36e94b2354bc0e603057c293 tcmu: prevent corruption when invalid data page requested
810b8153c4243d2012a6ec002ddd3bbc9a9ae8c2 tcmu: release blocks for partially setup cmds
1a1fc0b88e9019cb3b2f291bdcb2d03d38614690 tcmu: simplify scatter_data_area error handling
daf78c305148c5a52f75a7fd88461ffa7066aec6 tcmu: clean up the code and with one small fix
3e60913579b2fefa74eeb3269426e864f4afa7e7 tcmu: clean up the scatter helper
85fae482a9dd3560b9dcd35136fb29ccab6fae48 tcmu: Fix trailing semicolon
f3cdbe39b2ab0636dec0d5d43b54f1061ce7566c tcmu: fix crash during device removal
b849b4567549d5a54ab34ffacfd48fca05e8b34e target: Add netlink command reply supported option for each device
9a8bb60650b3d6994bd19a3200941f029c95a7a0 tcmu: Support emulate_write_cache
ee01825220f01c0befea25f08325962fa9374ee2 tcmu: Make dev_config configurable
531283ff7593f7059ced43c725d90cec3e5af549 tcmu: drop configured check in destroy
9260695d65590f4711d1166eadbfcb0acfa0625a tcmu: fix multiple uio open/close sequences
de8c5221aa003935d6d31becf5850b247dff14a1 tcmu: Fix dev_config_store
0d44374c1aaec7c81b470d3b5f955bc270711f9c tcmu: fix double se_cmd completion
16b932770417b1bc304d87c48aa0bb8a3c1164e1 tcmu: Fix some memory corruption
97488c73190bb785cba818bf31e7361a27aded41 tcmu: Add a missing unlock on an error path
488ebe4c355fdead39dbb3f6a51329c16cbfcc60 tcmu: move expired command completion to unmap thread
6fddcb775477bb2213bd76ab62145645eb570f33 tcmu: remove commands_lock
6fd0ce79724dabe2cd0bd8aed111cbe94755bf88 tcmu: prep queue_cmd_ring to be used by unmap wq
3c0f26ff9d040c6193b33689bbc03103854dba4d tcmu: fix free block calculation
f890f5799a6628fe006ae524e625900186074cdb tcmu: simplify dbi thresh handling
af1dd7ff46824a94da1d90443bd07db2796bd545 tcmu: don't block submitting context for block waits
892782caf19a97ccc95df51b3bb659ecacff986a tcmu: allow userspace to reset ring
45dc488c0ee19ba5cba7a67be473aeaf88a7447e tcmu: fix cmd user after free
ffc2b6ee417435605ee8bb1eb4c8f02e9ff4b4a5 ip_gre: fix IFLA_MTU ignored on NEWLINK
dc6455a71c7fc5117977e197f67f71b49f27baba vhost: correctly remove wait queue during poll failure
ddd3d4081ffa806ffef28eaeefde757ba2b6812a vhost: return bool from *_access_ok() functions
54951194656e4853e441266fd095f880bc0398f3 net: Fix NETDEV_CHANGE notifier usage causing spurious arp flush
c8e6ad0829a723a74cd2fea9996a3392d2579a18 ipv6: honor IPV6_PKTINFO with v4 mapped addresses on sendmsg
5337b5b75cd9bd3624a6820e3c2a084d2480061c ipv6: fix IPV6_PKTINFO with v4 mapped
4f4bbf7c4e3d4bd14987a13041c6b5b1ea59e21f devlink: Perform cleanup of resource_set cb
145307460ba9c11489807de7acd3f4c7395f60b7 devlink: Remove top_hierarchy arg to devlink_resource_register
fc56be47da8cb111add373c36230b0139139898f devlink: convert occ_get op to separate registration
fa50d974d104113630d68b7d03233a6686230d0c ipv4: Namespaceify ip_default_ttl sysctl knob
29421198c3a860092e27c2ad8499dfe603398817 netfilter: ipv4: fix NULL dereference
9f8a739e72f1546fb0f8c518af1193522c45be12 act_mirred: get rid of tcfm_ifindex from struct tcf_mirred
b1d2e4e03f92734ff524f96c4b2287133de7a4a3 ifb: fix packets checksum
b4331a681822b420511b3258f1c3db35001fde48 vti6: Change minimum MTU to IPV4_MIN_MTU, vti6 can carry IPv4 too
5960cefab9df76600a1a7d4ff592c59e14616e88 sctp: add a ceiling to optlen in some sockopts
74608d17fe29b2cddceea609033019b32e8a0650 i40e: add support for XDP_TX action
6aa7de059173a986114ac43b8f50b297a86f09a8 locking/atomics: COCCINELLE/treewide: Convert trivial ACCESS_ONCE() patterns to READ_ONCE()/WRITE_ONCE()
79f04a3aba91531a3b979f6ebd846367a664638f i40e: convert i40e_get_settings_link_up to new API
80752a98a0a0f666b263fecea327d4018b3f36f9 i40e: Fix reporting incorrect error codes
871288248de23d5c87433dcd94910ff813495588 i40e: setup xdp_rxq_info
64e711ca59ef9b7873d77ef06bc174aa01af9115 i40e: Remove UDP support for big buffer
bc4244c6e33f96b48c4986ce4653df4673c6a08e i40e: flower: Fix return value for unsupported offload
b7051cb8dadd69f85da5989017af2bb35b418950 i40e: flower: check if TC offload is enabled on a netdev
a0d8637f0f59c4028b73ef1f319eca4f8b5beb53 i40e: use tc_cls_can_offload_and_chain0()
60f481b9703867330dc6010868054f68f6d52f7a i40e: change flags to use 64 bits
e284fc280473bed23f2e1ed324e102a48f7d17e1 i40e: Add and delete cloud filter
46345b38e917bd2f27b3730adaa67e4160e1d94d i40e: check that pointer VSI is not null before dereferencing it
5dd3691c9828abd2e479cc9339d964d76e318c3b i40e: remove some stray indenting
1f71e2b11ceed122343a0ec5c3c10fefb91c2838 i40e: remove i40e_fcoe files
85925cd0b84eb16cf2dfd730758c3266a243569c i40e: Fix incorrect return types
bfe040c3851ad09e0944de7b0973a71323610e23 i40e: move I40E_FLAG_FILTER_SYNC to a state bit
41898c66ef02628326827e503c4fd78e71bc13f7 i40e: move I40E_FLAG_UDP_FILTER_SYNC to the state field
134201aeadf3109ac9982ea81a79ec68442a07d1 i40e: move AUTO_DISABLED flags into the state field
0605c45ce5f33a51e0b23e1d36f2e56db3c95f58 i40e: move I40E_FLAG_TEMP_LINK_POLLING to state field
5f76a704b8df9b4da898a230ac40d143eaca9cd8 i40e: move client flags into state bits
886ff146a73627c287262a7d92ddfb50baa29552 i40e: stop using cmpxchg flow in i40e_set_priv_flags()
8f769dd14a4364bdce1f5afda267cf2f758f8a47 i40e: re-number feature flags to remove gaps
b411ef11020d012790839a5414040283d9335386 i40e: convert to use generic xdp_frame and xdp_return_frame API
d9314c474d4fc1985e836b92fba4c40dd84885a7 i40e: add support for XDP_REDIRECT
039930945a72d9af5ff04ae9b9e60658a52e0770 xdp: transition into using xdp_frame for return API
44fa2dbd475996ddc8f3a0e6113dee983e0ee3aa xdp: transition into using xdp_frame for ndo_xdp_xmit
5305d0fe2f22ec42b19f5ed205faad9b26955e5c i40e: Fix multiple issues with UDP tunnel offload filter configuration
830e0dd9996c4644e42412aa6c46ed8f8eab0cca i40e: avoid overflow in i40e_ptp_adjfreq()
d0fda04d7e31e52f19ad7a21fb8d6700db55a6e9 i40e/i40evf: take into account queue map from vf when handling queues
bf1099b5ea853bddaa0dc4b1c594a2fdbebaf4c9 i40e: use %pI4b instead of byte swapping before dev_err
b8312365097ca854a03231bd58a284491aaa8ef7 i40e: always return all queue stat strings
019b9cd44d5aa457d9e45c85847f86ced40c852d i40e: split i40e_get_strings() into smaller functions
9b10df596bd4d38f2a58cf87e0780510acc53d8d i40e: use WARN_ONCE to replace the commented BUG_ON size check
bf1c39e64016c2c29991f20f29a91a76272b043a i40e: fold prefix strings directly into stat names
e08696dcd988dbe5fe8e51753e23d16ee7e75f3e i40e: update data pointer directly when copying to the buffer
ec29bbf8abaca7b295abd4a4204461ca9f82c3f5 i40e: add function doc headers for ethtool stats functions
3f76bdb437c6a9a4621ee64f1c877b7532efa7d3 i40e: use the more traditional 'i' loop variable
40588ca6513729e4de60e49896aab0a7ee09df19 i40e/i40evf: Only track one ITR setting per ring instead of Tx/Rx
71dc371993625b4b1ae26214af74427765bfa3a2 i40e/i40evf: Clean up logic for adaptive ITR
8b99b1179c27958f51ecfc489af5f459f9408d96 i40e/i40evf: Clean-up of bits related to using q_vector->reg_idx
92418fb14750c2baeebddf5903e3105cd11da90c i40e/i40evf: Use usec value instead of reg value for ITR defines
556fdfd6e6ffcab9d03c942df06a5591c84ca637 i40e/i40evf: Split container ITR into current_itr and target_itr
a0073a4b8b5906b2a7eab5e9d4a91759b56bc96f i40e/i40evf: Add support for new mechanism of updating adaptive ITR
51dce24bcdbdc493a87a17bcaf898b1f1d2fa600 net: intel: Cleanup the copyright/license headers
e691b771aa7f660c42697c15b86ada2180e68280 i40evf: Fix client header define
82c01a84d5a9bd3b9347bb03eed2f05bbccef933 net/{mii, smsc}: Make mii_ethtool_get_link_ksettings and smc_netdev_get_ecmd return void
3e79202b11526f6662d73501877cc18cf95b2ff8 atmel: Convert timers to use timer_setup()
d89e588ca4081615216cc25f2489b0281ac0bfe9 locking: Introduce smp_mb__after_spinlock()
0b1a989ef5a751b5992842d1934e22de861a848e nfp: flower: move route ack control messages out of the workqueue
97028037a38ae40c0e06789b71038d3a6045a413 drm/amdgpu: Grab/put runtime PM references in atomic_commit_tail()
fe2a19652918a5247418aed48a247414a5e45fe2 drm/amdgpu: Count disabled CRTCs in commit tail earlier
1264f8325e9b8c004f36f1ae7bacd2a46a7ed771 drm/nouveau/kms/nv50-: cursors always use core channel vram ctxdma
4c5717da1d021cf368eabb3cb1adcaead56c0d1e x86/mce: Check for alternate indication of machine check recovery on Skylake
3fe3d6193e7cd7b4dd2bde10772f048bdefea4ee tracing/kprobes: Kill probe_enable_lock
b04d52e368e2cf526abb2bab61f304eaea126af2 tracing/kprobes: Turn trace_probe->files into list_head
c31ffb3ff633109e8b7b438a9e1815b919f5e32d tracing/kprobes: Factor out struct trace_probe
14577c39927f86e3dba967f9b511f4a876b7f8bb tracing/uprobes: Convert to struct trace_probe
5bf652aaf46ca6ae477ea0d162e68d577cf244aa tracing/probes: Integrate duplicate set_print_fmt()
dcad1a204f72624796ae83359403898d10393b9c tracing/uprobes: Fetch args before reserving a ring buffer
a43b97043048eac1686f409af7ad3bb8071b9d83 tracing/uprobes: Rename uprobe_{trace,perf}_print() functions
dd9fa555d7bbfcc7dbc63eb744806e9f6cb62e9f tracing/uprobes: Move argument fetching to uprobe_dispatcher()
e6fc46498784e799d3eb95d83079180e413c4e7d blk-mq: avoid starving tag allocation after allocating process migrates
c62adb7def71d7e0b4ba44f8da81a448eb53d6d5 IB/srp: Fix IPv6 address parsing
d560168b5d0fb4a70c74b386564072a819d9bf71 hwmon: (core) New hwmon registration API
00d616cf872bb552a6853df288efcdb9f937a489 hwmon: (core) Add voltage attribute support to new API
9b26947ce5b6a6d5f260d9564195e8971cc9713d hwmon: (core) Add current attribute support to new API
b308f5c744522de020da4706718de9076adeada7 hwmon: (core) Add power attribute support to new API
6bfcca44a6e7b0a6d92eab39c4cb830516b9568c hwmon: (core) Add energy and humidity attribute support to new API
8faee73f92cd4dd4928e6860001315a0cc834c99 hwmon: (core) Add fan attribute support to new API
f9f7bb3a0efafb662a4c639bc62df1df2b7321f9 hwmon: (core) Add basic pwm attribute support to new API
70cb4a4526d4d3ad901a979a5f26917149408f8d ipmr: Replace comma with semicolon
44f49dd8b5a606870a1f21101522a0f9c4414784 ipmr: fix possible race resulting from improper usage of IP_INC_STATS_BH() in preemptible context.
1113ebbcf9e43c80fe5ef05c48b4cd1c25b306b2 net: ipmr: move the tbl id check in ipmr_new_table
c316c629f12e01e5d7710e456248a1ebef8426ef net: ipmr: remove some pimsm ifdefs and simplify
7ef8f65df976369588fa1b6466668b1b6a26eb3c net: ipmr: fix code and comment style
fe9ef3ce395d06e4f17e5995ab8455b9627f3306 net: ipmr: make ip_mroute_getsockopt more understandable
29c3f19739421cf749991cb8c693093b4ac58ad1 net: ipmr: drop an instance of CONFIG_IP_MROUTE_MULTIPLE_TABLES
29e97d214509ef4977838e073d30f6b16f75c6d5 net: ipmr: rearrange and cleanup setsockopt
a0b477366a9550ae46f78caa9e55de34fac4ba9c net: ipmr: factor out common vif init code
5ea1f13299d8b8edcb2969eda4c81f8e3264b706 net: ipmr: move struct mr_table and VIF_EXISTS to mroute.h
1973a4ea6ceaa47671227c3077f90508ea30897b net: ipmr: move pimsm_enabled to pim.h and rename
42e6b89ce4e8a4f02a1e906694d81acf60db6f4d net: ipmr: fix setsockopt error return
8fb472c09b9df478a062eacc7841448e40fc3c17 ipmr: improve hash scalability
310ebbba3b7396b00bce08a33f1d2de2c74fa257 ipmr: Add reference count to MFC entries
4d65b9487831170e699b2fc64a91b839d729bd78 ipmr: Add FIB notification access functions
b362053a7cc0fcc09b92642ba5dd1ca7fddc9004 ipmr: Send FIB notifications on MFC and VIF entries
478e4c2f0067d57d7c17059caafab026ca32084a net: mroute: Check if rule is a default rule
abf4bb6b63d0a54266f8e7eff3720c1974063971 skbuff: Add the offload_mr_fwd_mark field
a5bc9294d70fe85729bb343eef281ccbe78ff119 ipv4: ipmr: Don't forward packets already forwarded by hardware
66fb33254f45df4b049f487aff1cbde1ef919390 ipmr: properly check rhltable_init() return value
d08c4f355403840fad98d9918db51a7113f38ee8 net: Refactor rtable initialization
d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221 ipv4: lock mtu in fnhe when received PMTU < net.ipv4.route.min_pmtu
f6cc9c054e77b9a28d4594bcc201697edb21dfd2 ip_tunnel: Emit events for post-register MTU changes
82612de1c98e610d194e34178bde3cca7dedce41 ip_tunnel: restore binding to ifaces with a large mtu
508f8ccdab0ef530dbc0ef8bb526ee11acc409ed netfilter: nf_tables: introduce nft_chain_parse_hook()
6133740d6e80d969ff7d41098a9db1091d0f9c94 netfilter: nf_tables: reject hook configuration updates on existing chains
b9c7a7acc749f3d0667a2ab44ea38110d5a1f286 net: sch: prio: Add offload ability for grafting a child
c30f5d012edf755959c44d71757fbf4648ad75a8 mlxsw: spectrum: Move netdevice NB to struct mlxsw_sp
a875a2ee2db8970dd93b8d287e35b8eba72f0a89 mlxsw: spectrum: Better represent KVDL partitions
d672aec45fd4a1e060109fbce6739ef91c3bd135 mlxsw: spectrum: Add ability to query KVDL allocation size
330e2cc65d5f2c0545230e00f8f50b35a3e5995b mlxsw: spectrum: Add another partition to KVD linear
1f279233affe115dd3f65c89716a4f4315bb4cfe mlxsw: spectrum_router: Return extack message on abort due to fib rules
b24413180f5600bcb3bb70fbed5cf186b60864bd License cleanup: add SPDX GPL-2.0 license identifier to files with no license
7e75af6366b90bbd0cfb62c9c5aeb5e3ec37bcd4 mlxsw: spectrum: Propagate extack for tunnel events
65a6121b30a65bb4b61322c895bf835fedd6e315 mlxsw: spectrum_router: Extract __mlxsw_sp_ipip_entry_update_tunnel()
0c5f1cd5ba8c03567c67910816a7a0fb9fee5746 mlxsw: spectrum_router: Generalize __mlxsw_sp_ipip_entry_update_tunnel()
af641713e97da4126439c3fb1dee031f7e497654 mlxsw: spectrum_router: Onload conflicting tunnels
61481f2fcea9112944330b34767192d7f1696fca mlxsw: spectrum: Support IPIP underlay VRF migration
4cf04f3ff4da9dd536d9f70127868908a03aaf0a mlxsw: spectrum: Handle NETDEV_CHANGE on L3 tunnels
89c2b7dabaafee2220e516d314c9b7757fc8176e mlxsw: spectrum_ipip: Handle underlay device change
44b0fff1d8a461a5cd66cfc3a15ff05959d77df5 mlxsw: spectrum_router: Handle down of tunnel underlay
cab43d9c877456d2d8feb77335327316d3de9871 mlxsw: spectrum_router: Demote tunnels on VRF migration
d97cda5f465bacc82659263a885703d73759ea04 mlxsw: spectrum_router: Handle encap to demoted tunnels
09dbf6297fa8bb4433d9293623b464750d874685 mlxsw: spectrum_router: Update nexthop RIF on update
9454d9307e05989bc5dd50c023acd51d632fe6f9 mlxsw: spectrum: handle NETIF_F_HW_TC changes correctly
371b437a325172fb009c1919a84d0af38f9b4fce mlxsw: spectrum: qdiscs: Move qdisc's declarations to its designated file
f8253df553537518e9f87fa2eb599d68a2df092b net: sch: red: Change offloaded xstats to be incremental
4d1a4b8473a18babd6b29efdc12b93d7bbd2a097 mlxsw: spectrum: qdiscs: Clean qdisc statistics structs
c2ed6db76519902b39598ee5cde2f2f6d855e528 mlxsw: spectrum: qdiscs: Make the clean stats function to be for RED only
d56c89550bd0da43bfe9f91ade469ab3f233c62b mlxsw: spectrum: qdiscs: Add tclass number to the mlxsw_sp_qdisc
cba7158ff1600f4ca8d752f41046d97800d9508e mlxsw: spectrum: qdiscs: Unite all handle checks
562ffbc4b3eb2fa8cd8eac1f22bc264dbbeb9a16 mlxsw: spectrum: qdiscs: Add an ops struct
9a37a59f715256cea75cbdbcacd21e9e9dd4b72f mlxsw: spectrum: qdiscs: Create a generic destroy function
9cf6c9c7585446f1a532d218ae9be8653f4d7a82 mlxsw: spectrum: qdiscs: Create a generic replace function
56202ca4eddf9c3b2cda98095e0f2aa4196ec2ed mlxsw: spectrum: qdiscs: Remove qdisc before setting a new one
46a3615be43631fc804b179cbfeabded8c3a7a5d mlxsw: spectrum: qdiscs: Support PRIO qdisc offload
93d8a4c1b5f55855ae3ef7063ce79af13212f96f mlxsw: spectrum: qdiscs: Support stats for PRIO qdisc
416ef9b15c688b91edbf654ebe7bc349c9151147 net: sched: red: don't reset the backlog on every stat dump
afadc26b3aa3e94d1cedf9472889b4c32aecc6ac mlxsw: spectrum: Add support for getting kvdl occupancy
e02f08a07098887733f92d8c5631432a3d94de6c mlxsw: spectrum: qdiscs: Make function mlxsw_sp_qdisc_prio_unoffload static
8df1d08bf255155f0624b5780905ccc0bb66a740 mlxsw: spectrum: Make function mlxsw_sp_kvdl_part_occ() static
3aaff323044e221b7233eddcc2fe094c662df3b0 mlxsw: spectrum_acl: Implement TC block sharing
4b23258d6a1b0040c1e7d2d997800cfd09294b7f mlxsw: spectrum_acl: Pass mlxsw_sp_port down to ruleset bind/unbind ops
2b52ce02e1d17986ad7da8bc6e96c632dfa73219 mlxsw: spectrum_router: Remove unnecessary prefix lengths from LPM tree
15f4edb3d9c60a0934b133aae9c915807138cb4d mlxsw: use tc_cls_can_offload_and_chain0()
0f2d2b2736b08dafa3bde31d048750fbc8df3a31 mlxsw: spectrum_router: Fix error path in mlxsw_sp_vr_create
e437f3b62d0844c4073c9e13263413748fa69093 mlxsw: spectrum: Distinguish between IPv4/6 tunnels
51d3c08e33712e4867970fc5bafc73df3265ed04 mlxsw: spectrum_kvdl: Add support for linear division resources
887839e6960ddae0f34e2dd1b631d41e5672c738 mlxsw: spectrum_kvdl: Add support for dynamic partition set
7f47b19bd744c7945ad554fc00665fdbd13794bc mlxsw: spectrum_kvdl: Add support for per part occupancy
65b53bfd497b052277f89afb3839ace38190974c mlxsw: spectrum_switchdev: Allow port enslavement to a VLAN-unaware bridge
b89c7695b14f58686ac89d5add861f1f6d3fd4da mlxsw: spectrum_kvdl: use div_u64() for 64-bit division
ed2da6270ed9ea37d39e9ab597fc5b3b4215ae2a mlxsw: spectrum_kvdl: avoid uninitialized variable warning
8897207c89156a5d05dc5bf1a80dede21e768f0a mlxsw: spectrum_ipip: Support decoding IPv6 tunnel addresses
98977089d8eef337608272699f4197c631d447b8 mlxsw: span: Remove span_entry by span_id
079c9f393b8d467995516c4716557373edefaa89 mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry
169b5d95c15e01e08e1665bd8ceaff9bf8331c33 mlxsw: spectrum_span: Generalize SPAN support
803335acbe3371f1c0e9dd02f318b16f5abc22f4 mlxsw: Handle config changes pertinent to SPAN
52a6444cda7d1b6fc6f6ff84e2d23cdb71c84102 mlxsw: Move a mirroring check to mlxsw_sp_span_entry_create
27cf76fe60ec6fbe2ba8844261b90a6aecbc42f0 mlxsw: spectrum_span: Support mirror to gretap
8f08a528de5eaded034c5480588722e7dc167540 mlxsw: spectrum_span: Support mirror to ip6gretap
eed4baeb040aa41323d0091c18d36cc5a895792d mlxsw: spectrum: qdiscs: Support qdisc per tclass
1631ab2e8d31577d65f4cf857f609ef3131ff61e mlxsw: spectrum: qdiscs: Add priority map per qdisc
04cc0bf5d6ceb0ff19e8636fb39695620e587b06 mlxsw: spectrum: qdiscs: Collect stats for sch_red based on priomap
cc6e5c13af8b592cfed49f4854eddddbb58c6949 mlxsw: spectrum: qdiscs: Update backlog handling of a child qdiscs
23f2b4048cc49d786c452f681dd5d8920ca095a7 mlxsw: spectrum: Update sch_prio stats to include sch_red related drops
98ceb7b6d64552f995973be1a0ee9af0bf85fb3d mlxsw: spectrum: qdiscs: prio: Delete child qdiscs when removing bands
32dc5efc6cb40dea9ee0797b7c237efc470e0c35 mlxsw: spectrum: qdiscs: prio: Handle graft command
663f1b26f9c129aa2912c1a1d3359e3ecd88e814 mlxsw: spectrum: Prevent duplicate mirrors
36a1c3bd4a1503ee5561d7c2714b6f0fce049089 mlxsw: spectrum: Move mlxsw_sp_span_gretap4_route()
99db5229db81e2b12d213ff7533fcaee1206e2f0 mlxsw: spectrum: Don't depend on ip_gre and ip6_gre
808be37ae323ed5585a3e6257ccb5b435bd1a4b9 mlxsw: spectrum_acl: Adapt ACL configuration to new firmware versions
68c3cd925597842c4744fd93d61f8cd2496cdfc8 mlxsw: spectrum_router: Handle MTU change of GRE netdevs
885b0d4375a102d002bc654b4b68da46ba060032 mlxsw: spectrum_span: Fix initialization of struct mlxsw_sp_span_parms
c8276dd250e9a9833f8ff1da1cd53e6f7e6825e2 mlxsw: spectrum_kvdl: Fix handling of resource_size_param
4f8768befdea9d8004361f180ca559f22ce5346d mlxsw: spectrum: Change KVD linear parts from list to array
88d2fbcda145f5b256a254635c7420a2a645eca0 mlxsw: spectrum: Pass mlxsw_core as arg of mlxsw_sp_kvdl_resources_register()
8597538712ebd90bc83dfb0b3b40398a0c53ad5b powerpc/fadump: Do not use hugepages when fadump is active
06b45f00a46621e0766e37a02a9676b9143261a2 ALSA: firewire: Convert to snd_card_new() with a device pointer
167cebeffadd45ce1e786889ab9346c15d64389b nfp: modify app MTU setting callbacks
29a5dcae2790ba7fb26ea7128cbe61ecf906ab0a nfp: flower: offload phys port MTU change
df13c59b54a9f8d3e20a2fb565d54eee8dac8768 nfp: flower: remove headroom from max MTU calculation
6b18dd1c03e07262ea0866084856b2a3c5ba8d09 race of lockd inetaddr notifiers vs nlmsvc_rqst change
79f546a696bff2590169fb5684e23d65f4d9f591 fs: don't scan the inode cache before SB_BORN is set
995891006ccbb73c0c9c3923cf9d25c4d07ec16b NFSv4: Fix a typo in nfs41_sequence_process
5d1baf3b63bfc8c709dc44df85ff1475c7ef489d exec: introduce exec_binprm() for "depth == 0" code
9beb266f2d7e5362c5bb9f999255aa1af5318aef exec: proc_exec_connector() should be called only once
52f14282bb0c3d3e5ba2a9eaacb12ff37a033e7e exec: move allow_write_access/fput to exec_binprm()
cb7b6b1cbc20a970c7124efae1c2478155604b54 exec: cleanup the CONFIG_MODULES logic
19d860a140beac48a1377f179e693abe86a9dac9 handle suicide on late failure exits in execve() in search_binary_handler()
10c64cea04d3c75c306b3f990586ffb343b63287 atomic_open(): fix the handling of create_error
6be687395b3124f002a653c1a50b3260222b3cd7 s390/qeth: free netdevice when removing a card
cdf6b7362108708cea83dea347b9acf81a652d5f PCI: pciehp: Always enable occupied slot on probe
5de2755c8c8b3a6b8414870e2c284914a2b42e4d hrtimer: Allow concurrent hrtimer_start() for self restarting timers
24e3a7fb60a9187e5df90e5fa655ffc94b9c4f77 libnvdimm, btt: Fix an incompatibility in the log layout
d86bd1bece6fc41d59253002db5441fe960a37f6 mm/slub: support left redzone
0f60a8efe4005ab5e65ce000724b04d4ca04a199 mm: Implement stack frame object validation
f5509cc18daa7f82bcc553be70df2117c8eedc16 mm: Hardened usercopy
6040e57658eee6eb1315a26119101ca832d1f854 Make the hardened user-copy code depend on having a hardened allocator
5b710f34e194c6b7710f69fdb5d798fdf35b98c1 x86/uaccess: Enable hardened usercopy
ed18adc1cdd00a5c55a20fbdaed4804660772281 mm: SLUB hardened usercopy support
2fefc97b2180518bac923fba3f79fdca1f41dc15 HAVE_ARCH_HARDENED_USERCOPY is unconditional now
94cd97af690dd9537818dc9841d0ec68bb1dd877 usercopy: fix overlap check for kernel text
8e1f74ea02cf4562404c48c6882214821552c13f usercopy: remove page-spanning test for now
96dc4f9fb64690fc34410415fd1fc609cf803f61 usercopy: Move enum for arch_within_stack_frames()
22ec1a2aea73b9dfe340dff7945bd85af4cc6280 /dev/mem: Add bounce buffer for copy-out
b5b38200ebe54879a7264cb6f33821f61c586a7e /dev/mem: Avoid overwriting "err" in read_mem()
595dd46ebfc10be041a365d0a3fa99df50b6ba73 vfs/proc/kcore, x86/mm/kcore: Fix SMAP fault when dumping vsyscall user page
512857a795cbbda5980efa4cdb3c0b6602330408 scsi: zfcp: fix misleading REC trigger trace where erp_action setup failed
d70aab55924b44f213fec2b900b095430b33eec6 scsi: zfcp: fix missing REC trigger trace on terminate_rport_io for ERP_FAILED
8c3d20aada70042a39c6a6625be037c1472ca610 scsi: zfcp: fix missing REC trigger trace for all objects in ERP_FAILED
6a76550841d412330bd86aed3238d1888ba70f0e scsi: zfcp: fix missing REC trigger trace on enqueue without ERP thread
f44fa88745eda1530083b361e300e1ca4e15a6c5 s390/archrandom: Reconsider s390 arch random implementation
3376d98021e915196f4894d835325a884e635a04 s390/archrandom: Rework arch random implementation.
8566ac8b8e7cac5814fb744ff5159d1797a1a6bd KVM: SVM: Implement pause loop exit logic in SVM
4a58139b8493624c6c6223b58a9e70ebbdf56338 bnxt: Add PCIe device IDs for bcm58802/bcm58808
8ed693b7bbd179949f6947adaae5eff2e386a534 bnxt_en: Add PCIe device ID for bcm58804
26bff1bd74a4f7417509a83295614e9dab995b2a RDMA/cxgb4: release hw resources on device removal
335bcc4a2600f56ec3c28cf93dd9070df2576891 crypt: chelsio - Send IV as Immediate for cipher algo
4262c98aab95119ec0810b5ec4be521dda1b28b2 crypto: chelsio - Remove separate buffer used for DMA map B0 block in CCM
f620d1d7afc7db57ab59f35000752840c91f67e7 media: uvcvideo: Support realtek's UVC 1.5 device
6143e2cecb9ef9c7d3392c9c2583f231705413a5 raid5-cache: use bio chaining
3bddb7f8f264ec58dc86e11ca97341c24f9d38f6 md/r5cache: handle FLUSH and FUA
bb5f1ed70bc3bbbce510907da3432dab267ff508 md/raid10: Refactor raid10_make_request
03a9e24ef2aaa5f1f9837356aed79c860521407a md linear: fix a race between linear_add() and linear_congested()
765d704db1f583630d52dc14c1ea573db6783459 raid5: only dispatch IO from raid5d for harddisk raid
03b047f45c29dff02f913a0234ca0cc1ca51966f md/r5cache: enable chunk_aligned_read with write back cache
e33fbb9cc73d6502e69eaf1c178e0c39059763ea md/raid5-cache: exclude reclaiming stripes in reclaim check
26483819f89c5cf9d27620d70c95afeeeb9bece5 md: disable WRITE SAME if it fails in underlayer disks
d939cdfde34f50b95254b375f498447c82190b3e md/linear: shutup lockdep warnning
99b3d74ec05c4a4c57766a90d65b53d78ab06404 md: delete dead code
84890c03b6c5d7e8d76ea5e20b6aaf7e7ad410f0 md/raid5-cache: bump flush stripe batch size
aaf9f12ebfafd1ea603d61ead6dbcf456a86e0f3 md/raid5: sort bios
effe6ee7523aa50d0517bd7da141e112b44d89fa md/r5cache: improve recovery with read ahead page pool
ea17481fb48888fa11f412766bde36be9171247e md/r5cache: generate R5LOG_PAYLOAD_FLUSH
bd83d0a28c68bacba88a3193a1bd6a083bb8d9f5 md/raid5: call bio_endio() directly rather than queueing for later.
016c76ac76e4c678b01a75a602dc6be0282f5b29 md/raid5: use bio_inc_remaining() instead of repurposing bi_phys_segments as a counter
0472a42ba1f89ec85f070c731f4440d7cc38c44c md/raid5: remove over-loading of ->bi_phys_segments.
fd16f2e8489100eb8005483ff630856bce51f803 md/raid10: stop using bi_phys_segments
27f26a0f3767b6688b9a88b9becb6f8e760421f3 md/raid10: refactor some codes from raid10_write_request
3560741e316b3ea52cfb27901ae284921445180f md: fix several trivial typos in comments
d8e29fbc3bed181f2653fb89ac8c34e40db39c30 md: move two macros into md.h
513e2faa0138462ce014e1b0e226ca45c83bc6c1 md: prepare for managing resync I/O pages in clean way
98d30c5812c343c970b5997369b4f6b197c29b3d md: raid1: don't use bio's vec table to manage resync pages
44cf0f4dc76b5e44e6a9c727be6902434f99a9bd md: raid1: retrieve page from pre-allocated resync page array
60928a91b0b3beca4a1cf2739118f967c783f79a md: raid1: use bio helper in process_checks()
81fa152008ac903877b59bcc7d16777c3292c206 md: raid10: refactor code of read reshape's .bi_end_io
f0250618361db1447d66c494c6dd2df815f42c87 md: raid10: don't use bio's vec table to manage resync pages
cdb76be31568604f389f951bd0efadd3f530f2dd md: raid10: retrieve page from preallocated resync page array
2d06e3b7145bb08705615e6e7400024d8e36a5c0 md: raid10: avoid direct access to bvec table in handle_reshape_read_error
8fc04e6ea02d631fd344f462002078b8067793de md: raid1: kill warning on powerpc_pseries
a9ae93c8cc0b63d8283f335604362f903d2244e2 md/raid10: abort delayed writes when device fails.
5e2c7a3611977b69ae0531e8fbdeab5dad17925a md/raid1: abort delayed writes when device fails.
673ca68d93879b9ffbbed874c9e70ca6e37cab15 md/raid1: factor out flush_bio_list()
bb3338d3474e0329918fda9dae2c52751731eb58 md/raid5-cache: in r5l_do_submit_io(), submit io->split_bio first
23b245c04d0ef408087430dd4d1b214a5da1eb78 md/raid1/10: avoid unnecessary locking
70d466f760b351fe30b5f8c956354ddf29aa676b md/r5cache: gracefully handle journal device errors for writeback mode
5ddf0440a1a28f00f69ed2e093476bab3b60c2c3 md/r5cache: handle sync with data in write back cache
9c573de3283af007ea11c17bde1e4568d9417328 MD: make bio mergeable
1cdd1257949c85c5ddff8313fe3b1e39c5bee8b8 md/raid10: fix FailFast test for wrong device
5a85071c2cbcc7d8d8f764b33bf64c76e47d268d md: use a separate bio_set for synchronous IO.
7f053a6a745557b3f3ad63e9d28ba85c3c0b1563 MD: fix a null dereference
7184ef8bab0cb865c3cea9dd1a675771145df0af MD: fix sleep in atomic
022e510fcbda79183fd2cdc01abb01b4be80d03f md: remove 'idx' from 'struct resync_pages'
a9501d742127e613d744e29814e9532bacb147e8 md/r5cache: fix io_unit handling in r5l_log_endio()
208410b546207cfc4c832635fa46419cfa86b4cd md/raid1/10: reset bio allocated from mempool
584ed9fa9532f8b9d5955628ff87ee3b2ab9f5a9 md: raid10: remove VLAIS
935fe0983e09f4f7331ebf5ea4ae2124f6e9f9e8 md: rename some drivers/md/ files to have an "md-" prefix
a0e764c54382be8da96f83bcecc9cf26de3846dc md: raid10: remove a couple of redundant variables and initializations
b03e0ccb5ab9df3efbe51c87843a1ffbecbafa1f md: remove special meaning of ->quiesce(.., 2)
db0505d320660b6ad92418847e7eca6b61b246ac md: be cautious about using ->curr_resync_completed for ->recovery_offset
0202ce8a90efdc81600e7bf9712d8c324081a924 md: release allocated bitset sync_set
18022a1bd3709b74ca31ef0b28fccd52bcd6c504 md/raid1/10: add missed blk plug
d5d885fd514fcebc9da5503c88aa0112df7514ef md: introduce new personality funciton start()
474beb575c03e0e7f1a704ac428916898f81b3cd md/raid1,raid10: silence warning about wait-within-wait
92e6245deab80f0934a102ba969d8b891b8ba5bf md/r5cache: print more info of log recovery
565e0450129647df5112bff3df3ffd02b0c08e32 md/raid5: simplify uninitialization of shrinker
b126194cbb799f9980b92a77e58db6ad794c8082 MD: Free bioset when md_run fails
4b6c1060eaa6495aa5b0032e8f2d51dd936b1257 md: fix md_write_start() deadlock w/o metadata devices
8c2425932398a160f687534efe71f0ec4b92833e md/raid1: exit sync request if MD_RECOVERY_INTR is set
eb81b328267b2d97d11441483f5ac9dccb505818 raid10: check bio in r10buf_pool_free to void NULL pointer dereference
579ed34f7b751b8add233cba4cf755258dbdd60a RAID10: ignore discard error
afff0d2321ea2beb6f4dcd029d4667acf73dec25 scsi: lpfc: Add Buffer overflow check, when nvme_info larger than PAGE_SIZE
414abe0ab66f951efe743a3293cb36ac3255214a scsi: lpfc: Make PBDE optimizations configurable
6871e8144f935a1f08e7fc6269c894861ce494aa scsi: lpfc: Fix NVME Target crash in defer rcv logic
3e1ebadd889f2670ecef77157d84261d09a5ca41 scsi: lpfc: update driver version to 12.0.0.5
b5f3bc39a0e815a30005da246dd4ad47fd2f88ff scsi: qla2xxx: Fix inconsistent DMA mem alloc/free
f2b612578e163b49661ece2fe01dfafb0e78f545 x86, libnvdimm, pmem: move arch_invalidate_pmem() to libnvdimm
ca6a4657e5420dec727256717e905ebc3c751352 x86, libnvdimm, pmem: remove global pmem api
66a86cc10945648cf506ef314b98deeb7af06419 dax: quiet bdev_dax_supported()
6a21586a637e624ae736f94aeb0839f6a1dd0411 dax: stop requiring a live device for dax_flush()
41fce90f26333c4fa82e8e43b9ace86c4e8a0120 libnvdimm, dax: fix 1GB-aligned namespaces vs physical misalignment
b814735f5ca477a6d4f446f00d16da4a18e33bf5 acpi, nfit: remove redundant __func__ in dev_dbg
6daaca522ab464d32419aea61dd1b41dc1c71dba device-dax: remove redundant __func__ in dev_dbg
05ea88608d4e135695571727f5d7f22967d2a3bf mm, hugetlbfs: introduce ->pagesize() to vm_operations_struct
bc6ba8085842164f2a8dc2e78e23a7167872abbe nfit, address-range-scrub: rework and simplify ARS state machine
bca811a7fd5a5c1c0644926161c2843322ab74b3 nfit, address-range-scrub: add module option to skip initial ars
d9b67e1e499b056a83d2db6046d74652cf836998 NFS: Fix inconsistent indentation in nfs4proc.c
820bf85ce249ec5b4da9f6aaefa3f5491b23b587 NFS: Remove nfs4_wait_for_completion_rpc_task()
2dbf8dffbf35fd8f611083b9d9fe74fdccf912a3 pNFS: Always free the session slot on error in nfs4_layoutget_handle_exception
9efc160f4bbd69b17b48edec53067537d04e62b7 block: Introduce queue flag QUEUE_FLAG_SCSI_PASSTHROUGH
8163496e78db100a6b5cfbdaece385686ae50129 nfsd: don't advertise a SCSI layout for an unsupported request_queue
4a7727725dc7d73769c5ab24c566df454093285f GFS2: Fix recovery issues for spectators
ec27c3568a34c7fe5fcf4ac0a354eda77687f7eb selinux: bpf: Add selinux check for eBPF syscall operations
afdb09c720b62b8090584c11151d856df330e57d security: bpf: Add LSM hooks for bpf object related syscall
f66e448cfda021b0bcd884f26709796fe19c7cc1 selinux: bpf: Add addtional check for bpf object file receive
181303d03525ea52d2d002fb8ee04e769aaa4ce4 nvme-fabrics: allow duplicate connections to the discovery controller
cc456b65b739e17e8b1e6b61cc2f014f225ba466 nvme-fabrics: allow internal passthrough command on deleting controllers
4c984154efa13175bbb1e2aeb1de9fb2960ca28c nvme-fc: change controllers first connect to use reconnect path
587331f71e2748371526597cafc72e5732c67e88 nvme-fc: remove reinit_request routine
3e493c00cedb457c0731399a835f7ba1c6df172b nvme-fc: fix nulling of queue data on reconnect
3bc32bb1186ccaf3177cbf29caa6cc14dc510b7b nvme-fabrics: refactor queue ready check
278ab3799a2588f97423180947f09ec5b576e79e nvme-fabrics: handle the admin-only case properly in nvmf_check_ready
35897b920c8ab5e23331ad429e0aa235528c63ba nvme-fabrics: fix and refine state checks in __nvmf_check_ready
02d62a8bc48e92171c46540722e2d52ce77d87af nvme-fc: release io queues to allow fast fail
d48cc67cd4406d589fdbfa8c7d51c86532f86feb scsi: qla2xxx: Fix kernel crash due to late workqueue allocation
f74b9d3a1ac2b9c3ae1475f474ca0e6644746fbf perf evlist: Remove 'overwrite' parameter from perf_evlist__mmap
7a276ff6c3202697c3c15cad757dec3bb07d14bf perf evlist: Remove 'overwrite' parameter from perf_evlist__mmap_ex
144b9a4fc53039c09007b71a06640560a6e62140 perf evlist: Remove evlist->overwrite
ca6a9a05391960be5e8161a59a9854b32325d901 perf mmap: Remove overwrite from arguments list of perf_mmap__push
8eb7a1fe31612fd3e8ae8042dd2ebaf7575504cb perf mmap: Remove overwrite and check_messup from mmap read
71f566a34986f4a86a8c546c7a36f70f0132b8a9 perf mmap: Fix perf backward recording
7fb4b407a1242dbc85ea3ed1be065dca8f9a6f5b perf mmap: Don't discard prev in backward mode
0b72d69a542873ee098867deeb37d27ad4629c64 perf tools: Rename 'backward' to 'overwrite' in evlist, mmap and record
6888ff66c44ffa3077ed69e978902d0ff4b84ae1 perf evlist: Remove stale mmap read for backward
dc6c35c679e96987dc83a003f30bc2cc33c84c00 perf mmap: Recalculate size for overwrite mode
f92c8cbe597a5a2ccec702dff824f3fe0f3623eb perf mmap: Cleanup perf_mmap__push()
8872481bd04850b19e053dc579de5a11b83b16fc perf mmap: Introduce perf_mmap__read_init()
189f2cc91f9f2efef5d5f4dde43684c01b5f6f2f perf mmap: Add new return value logic for perf_mmap__read_init()
b4b036b4c76341a5034e872aca3727c4988a7304 perf mmap: Discard 'prev' in perf_mmap__read()
ee023de05f35484691f7d9e5c1f92195ac4d64d2 perf mmap: Introduce perf_mmap__read_done()
7bb45972952db9298fe5cc440160dcad1a66bfbc perf mmap: Introduce perf_mmap__read_event()
600a7cfe88de2c6e44e23d61dd721b996b790eb2 perf test: Update mmap read functions for backward-ring-buffer test
3effc2f165a842d640873e29d4c5cc1650143aef perf mmap: Discard legacy interface for mmap read
6afad54d2f0ddebacfcf3b829147d7fed8dab298 perf mmap: Discard legacy interfaces for mmap read forward
2c5f6d876b4edda8740f5a2826cf9b1a67fa76fb perf evlist: Store 'overwrite' in struct perf_mmap
4fda3459e3c2e5ca35d304646aeeb811242537b2 perf mmap: Store mmap scope in struct perf_mmap()
07a9461da67292ffdf3f4a02522caf475b1151d7 perf mmap: Use the stored scope data in perf_mmap__push()
b9de0f6e507b2f0ee305aba338b79941deb5a461 perf mmap: Use the stored data in perf_mmap__read_event()
bdec8b2f7eed4f16b764ca258487d26f8079f5ff perf mmap: Use stored 'overwrite' in perf_mmap__consume()
d6ace3df43049a46aa1f5596c0c8d75433321437 perf mmap: Simplify perf_mmap__consume()
0019dc87b928380e2c85fcd8694e512079d7b580 perf mmap: Simplify perf_mmap__read_event()
b9bae2c841b73eac6bfed510bc24a3051754ff51 perf mmap: Simplify perf_mmap__read_init()
699db111058798bcc9f92a93767062905a561bef perf mmap: Discard head in overwrite_rb_find_range()
f58385f629c87a9e210108b39c1f4950d0363ad2 perf mmap: Fix accessing unmapped mmap in perf_mmap__read_done()
895e3b06fc2ce438adc62cb13d31ea001dcfda16 perf mmap: Be consistent when checking for an unmaped ring buffer
00483690552c5fb6aa30bf3acb75b0ee89b4c0fd tcp: Add mark for TIMEWAIT sockets
4e48ed883c72e78c5a910f8831ffe90c9b18f0ec netlink: reset network header before passing to taps
191cdb3822e5df6b3c8b9f8cb8c4bf93f6cc90c7 veth: Be more robust on network device creation when no attributes
c9fefa08190fc879fb2e681035d7774e0a8c5170 ip6_tunnel: get the min mtu properly in ip6_tnl_xmit
829eb05365ff06e8adc23f2541597d0cc3c18348 sfc: make function efx_rps_hash_bucket static
193f20033c54db0dc9563f722fbafbcd5fa0e80d sfc: hold filter_sem consistently during reset
94b3b542303f3055c326df74ef144a8a790d7d7f net: aquantia: vlan unicast address list correct handling
8673daf4f55bf3b918dec78aee2132d191225106 qedf: Add get_generic_tlv_data handler.
22215908d81f61d293e8b128e819a8437f37cc20 net/mlx5: E-Switch, Add callback to get representor device
57cbd893c4c575a24594fa6c0835247506ce26e2 net/mlx5: E-Switch, Move representors definition to a global scope
0efc8562491b7d36f6bbc4fbc8f3348cb6641e9c net/mlx5: E-Switch, Avoid setup attempt if not being e-switch manager
a8d70a054a718b63058b3d3ac58b6181815e4289 net/mlx5: E-Switch, Disallow vlan/spoofcheck setup if not being esw manager
aca06eafd09f48ca4d97f3c0b2a12c8d631116f0 cxgb4: copy mbox log size to PF0-3 adap instances
849a742c59a3d597473c0232f9c2506c69eeef14 cxgb4: Correct ntuple mask validation for hash filters
b04f50ab8a74129b3041a2836c33c916be3c6667 blk-mq: only attempt to merge bio if there is rq in sw queue
1f57f8d442f8017587eeebd8617913bfc3661d3d blk-mq: don't queue more if we get a busy return
6e768717304bdbe8d2897ca8298f6b58863fdc41 blk-mq: dequeue request one by one from sw queue if hctx is busy
fec9434a12f38d3aeafeb75711b71d8a1fdef621 x86/pti: Do not enable PTI on CPUs which are not vulnerable to Meltdown
356e4bfff2c5489e016fdb925adbf12a1e3950ee prctl: Add force disable speculation
b849a812f7eb92e96d1c8239b06581b2cfd8b275 seccomp: Use PR_SPEC_FORCE_DISABLE
00a02d0c502a06d15e07b857f8ff921e3e402675 seccomp: Add filter flag to opt-out of SSB mitigation
8bf37d8c067bb7eb8e7c381bdadf9bd89182b6bc seccomp: Move speculation migitation control to arch code
f21b53b20c754021935ea43364dbf53778eeba32 x86/speculation: Make "seccomp" the default mode for Speculative Store Bypass
dd0792699c4058e63c0715d9a7c2d40226fcdddc Documentation/spec_ctrl: Do some minor cleanups
e7c587da125291db39ddf1f49b18e5970adbac17 x86/speculation: Use synthetic bits for IBRS/IBPB/STIBP
7eb8956a7fec3c1f0abc2a5517dada99ccc8a961 x86/cpufeatures: Disentangle MSR_SPEC_CTRL enumeration from IBRS
52817587e706686fcdb27f14c1b000c92f266c96 x86/cpufeatures: Disentangle SSBD enumeration
d1035d971829dcf80e8686ccde26f94b0a069472 x86/cpufeatures: Add FEATURE_ZEN
1f50ddb4f4189243c05926b842dc1a0332195f31 x86/speculation: Handle HT correctly on AMD
ccbcd2674472a978b48c91c1fbfb66c0ff959f24 x86/bugs, KVM: Extend speculation control for VIRT_SPEC_CTRL
11fb0683493b2da112cd64c9dada221b52463bf7 x86/speculation: Add virtualized speculative store bypass disable support
0270be3e34efb05a88bc4c422572ece038ef3608 x86/speculation: Rework speculative_store_bypass_update()
cc69b34989210f067b2c51d5539b5f96ebcc3a01 x86/bugs: Unify x86_spec_ctrl_{set_guest,restore_host}
be6fcb5478e95bb1c91f489121238deb3abca46a x86/bugs: Rework spec_ctrl base and mask logic
47c61b3955cf712cadfc25635bf9bc174af030ea x86/speculation, KVM: Implement support for VIRT_SPEC_CTRL/LS_CFG
bc226f07dcd3c9ef0b7f6236fe356ea4a9cb4769 KVM: SVM: Implement VIRT_SPEC_CTRL support for SSBD
28c1c9fabf48d6ad596273a11c46e0d0da3e14cd KVM/VMX: Emulate MSR_IA32_ARCH_CAPABILITIES
772439717dbf703b39990be58d8d4e3e4ad0598a x86/bugs/intel: Set proper CPU features and setup RDS
24809860012e0130fbafe536709e08a22b3e959e x86/bugs: Add AMD's variant of SSB_NO
6ac2f49edb1ef5446089c7c660017732886d62d6 x86/bugs: Add AMD's SPEC_CTRL MSR usage
108fab4b5c8f12064ef86e02cb0459992affb30f x86/bugs: Switch the selection of mitigation from CPU vendor to CPU features
3553ae5690a84a5baae5baa329467b3df2d99f72 x86/kvm: Don't use pvqspinlock code if only 1 vCPU
686c97ee29c886ee07d17987d0059874c5c3b5af s390/qeth: fix error handling in adapter command callbacks
af4a72276d49da117dbc99799afee740a26f8f10 s390/zcrypt: Support up to 256 crypto adapters.
4c86d77743a54fb2d8a4d18a037a074c892bb3be xfrm: Don't use sk_family for socket policy lookups
ddc47e4404b58f03e98345398fb12d38fe291512 xfrm: Fix stack-out-of-bounds read on socket policy lookup.
8b7008620b8452728cadead460a36f64ed78c460 net: Don't copy pfmemalloc flag in __copy_skb_header()
e78bfb0751d4e312699106ba7efbed2bab1a53ca skbuff: Unconditionally copy pfmemalloc in __skb_clone()
6ce3dd6eec114930cf2035a8bcb1e80477ed79a8 blk-mq: issue directly if hw queue isn't busy in case of 'none'
3228691ffec134353cb5bf6fb4342283e0243412 scsi: tcmu: track nl commands
9de3a1ef032a5ad5d7b642d625b6bd362b1989d6 scsi: tcmu: simplify nl interface
bdaeedc1bea9e833196b5c7eb0ffd74edf9c863e scsi: tcmu: add module wide block/reset_netlink support
e2607484370ea1b3595a3c51485e66e0cbd17341 scsi: target: remove target_find_device
0c218e16a8501cfda30f498217b434976cb62fc5 scsi: tcmu: Don't pass KERN_ERR to pr_err
1f6dbb022bd477239bfbb52ef868f694b5f1d36a i2c: i801: Do not create iTCO watchdog when WDAT table exists
1d200c078d0e3e49e2995b9d25fef8926d491f4f x86/CPU: Rename intel_cacheinfo.c to cacheinfo.c
3986a0a805e668a63fac0ca2cdfa8db951f87c4b x86/CPU/AMD: Derive CPU topology from CPUID function 0xB when available
818b7587b4d34e989ea6c042eeb8d50ffa5be13e x86: irq_remapping: Move irq remapping mode enum
90fcffd9cf5e7cc593169f529799f3e3c5437e75 iommu/amd: Add support for IOMMU XT mode
a908f5de3b10d1a684d4fc3cb55ee0a7662ff293 selftests/powerpc: Rename TARGETS in powerpc selftests makefile
4c6315f8f9387d638ccb1cc3a46a28a82a109928 selftests/powerpc: Add test for system wide DSCR default
1554f21a9890301d1b6586474396e7c9de586204 selftests/powerpc: Add test for explicitly changing DSCR value
cc6a93f1c3d6923ebf2f305416d080e9afc7ee95 selftests/powerpc: Add test for DSCR SPR numbers
cf9c4a5ecf806348940ee26b7ff0ff59f5530059 selftests/powerpc: Add test for DSCR value inheritence across fork
6f844261e16b3a66ccec29667b2713ce0bb8adc7 selftests/powerpc: Add test for DSCR inheritence across fork & exec
ebd5858c904b1c795f1511758a7ac043afd44438 selftests/powerpc: Add test for all DSCR sysfs interfaces
af0be08ee6ab83666f2cb3c56285cf7a312eaeab selftests/powerpc: Add thread based stress test for DSCR sysfs interfaces
db1231dcdb4dc6cdcbdef0babe641a9162c0dc98 powerpc: Fix DSCR inheritance over fork()
9dcb8b685fc30813b35ab4b4bf39244430753190 mm: remove per-zone hashtable of bitlock waitqueues
6b2bb7265f0b62605e8caee3613449ed0db270b9 sched/wait: Introduce wait_var_event()
2bb6d2837083de722bfdc369cb0d76ce188dd9b4 mm: introduce get_user_pages_longterm
b7f0554a56f21fb3e636a627450a9add030889be mm: fail get_vaddr_frames() for filesystem-dax mappings
b70131de648c2b997d22f4653934438013f407a1 v4l2: disable filesystem-dax mapping support
5f1d43de54164dcfb9bfa542fcc92c1e1a1b6c1d IB/core: disable memory registration of filesystem-dax vmas
8e37d00a850160bbfadbb3bf4ce49539770c5d2c memremap: provide stubs for vmem_altmap_offset and vmem_altmap_free
24e6d5a59ac7d31adc0322de2d0117dfa370936f mm: pass the vmem_altmap to arch_add_memory and __add_pages
7b73d978a5d0d2a3637bdd57191cb6ffbad3feca mm: pass the vmem_altmap to vmemmap_populate
da024512a1fa5c979257e442130ee1d468285057 mm: pass the vmem_altmap to arch_remove_memory and __remove_pages
24b6d4164348370c6b6a58b4248babd85ff9e982 mm: pass the vmem_altmap to vmemmap_free
a99583e780c751003ac9c0105eec9a3b23ec3bc4 mm: pass the vmem_altmap to memmap_init_zone
a8fc357b2875da8732c91eb085862a0648d82767 mm: split altmap memory map allocation from normal case
eb8045335c70ef8b272d2888a225b81344423139 mm: merge vmem_altmap_alloc into altmap_alloc_block_buf
0822acb86cf340cd45b3af6436cec7e3bb24ebd2 mm: move get_dev_pagemap out of line
832d7aa051106c927cae05ced29d3fd31459ed21 mm: optimize dev_pagemap reference counting around get_dev_pagemap
0628b8c650718f4dfedfcdc9ed136bf7e394aae7 memremap: remove to_vmem_altmap
e7744aa25cffe26d3767c9ffcf4e130cca1dff00 memremap: drop private struct page_map
e8d5134833006a46fcbefc5f4a84d0b62bd520e7 memremap: change devm_memremap_pages interface to use struct dev_pagemap
e697c5b90e97792187e45f8d78fb2bfa62eb0496 memremap: merge find_dev_pagemap into get_dev_pagemap
5981690ddb8f72f9546a2d017a914cf56095fc1f memremap: split devm_memremap_pages() and memremap() infrastructure
e7638488434415aa478e78435cac8f0365737638 mm: introduce MEMORY_DEVICE_FS_DAX and CONFIG_DEV_PAGEMAP_OPS
a9b6de77b1a3ff729f7bfc54b2e17711776a416c mm: fix __gup_device_huge vs unmap
5fac7408d828719db6d3fdba63e3c3726a6d1ee5 mm, fs, dax: handle layout changes to pinned dax mappings
c63a8eae63d3859c9c7067aa239a4cfd7423a665 xfs: prepare xfs_break_layouts() to be called with XFS_MMAPLOCK_EXCL
69eb5fa10eb283e9fcae3ce6f8aaf103b8f0c28d xfs: prepare xfs_break_layouts() for another layout type
d6dc57e251a43c428a9ee3adb7665543a1a584f0 xfs, dax: introduce xfs_break_dax_layouts()
a7e6c7015bf3e0cb467a2f6c0e1de985ee1a0ecb x86, memremap: fix altmap accounting at free
b3fc5c9bb373661224906bf434c09ca0de032e82 sched/wait: Improve __var_waitqueue() code generation
230f5a8969d8345fc9bbe3683f068246cf1be4b8 dax: fix vma_is_fsdax() helper
77dd66a3c67c93ab401ccc15efff25578be281fd mm: Fix devm_memremap_pages() collision handling
167f5594b5efa20a26ff03b3424f793887e6b448 kernel/memremap: Remove stale devres_free() call
ce7f11a230d5b7165480b96c0cc7a90358b5b5e2 libnvdimm, pmem: Unconditionally deep flush on *sync
546eb0317cfa3c4f9e1d9ab892766d65d7f78fad libnvdimm, pmem: Do not flush power-fail protected CPU caches
ba23cba9b3bdc967aabdc6ff1e3e9b11ce05bb4f fs: allow per-device dax status checking for filesystems
80660f20252d6f76c9f203874ad7c7a4a8508cf8 dax: change bdev_dax_supported() to support boolean returns
4557641b4c7046625c026fb809c47ef0d43ae595 pmem: only set QUEUE_FLAG_DAX for fsdax mode
15256f6cc4b44f2e70503758150267fd2a53c0d6 dax: check for QUEUE_FLAG_DAX in bdev_dax_supported()
ad3793fc3945173f64d82d05d3ecde41f6c0435c dm: set QUEUE_FLAG_DAX accordingly in dm_table_set_restrictions()
dbc626597c39b24cefce09fbd8e9dea85869a801 dm: prevent DAX mounts if not supported
273752c9ff03eb83856601b2a3458218bb949e46 dm, dax: Make sure dm_dax_flush() is called if device supports it
94db151dc89262bfa82922c44e8320cea2334667 vfio: disable filesystem-dax page pinning
bb94b55af3461e26b32f0e23d455abeae0cfca5d vfio: Use get_user_pages_longterm correctly
5b812ea536da6ae88f79b48fbde1df8ad1e32ff2 iio: hid-sensor-als: add module alias for autoload
d536321df392ee0db6a5e92d98f0303020315f40 iio: trigger: implement devm_iio_trigger_alloc/devm_iio_triger_free
5902fde19a3b3e51a0a246e98d337f291bbc07b0 HID: hid-sensor-hub: fix indentation accross the code
7b0692f1c60a9551f8ad5fe706b79a23720a196c HID: hid-sensor-hub: change kmalloc + memcpy by kmemdup
899d90bdf4d4ef4c3ac0b33cd337c9b3e999ec2d iio: Add INT_TIME (integration time) channel info attribute
3704432fb1fd8ab2df114bad6df752381246b609 iio: refactor info mask and ext_info attribute creation.
c006ec838414d910bdd63ba8d919e602425e194e iio: add info_mask_[shared_by_dir/shared_by_all]
8c60c7e75de79fe429afea3c7300d010c091bc4e iio: Remove unnecessary casts for iio_push_to_buffers()
cadc2125e140f7122bf1b59d42486cfc778c7286 iio: fix: Keep a reference to the IIO device for open file descriptors
d66e0452bf6b0d98cd1a478918c92f2baffcb413 iio: Fix crash when scan_bytes is computed with active_scan_mask == NULL
9e69c935fad9fd5f0550c51e3bd251cd30033136 iio: Add reference counting for buffers
f6c23f483937b8be53f313ec31068acdca91a25d iio:kfifo: Fix memory leak
0894d80dfddaeb9f95904ceab623460c1bfdab06 iio:kfifo: Protect against concurrent access from userspace
5b78e5138e6a636d00fea08514bfc5a2ff5dfb15 iio:kfifo: Empty buffer on update
cb6fbfa1387f47e5ef4ab2fac5ed71f3c1175f75 iio:kfifo: Set update_needed to false after allocating a new buffer
64528d03d7233800ec77f1acb9222cf090f926ca iio: hid-sensors: accelerometer: Add sensitivity
8caa07c0e565a15f49f290ca4c6a3adf968ddd38 iio: core: Implement devm_iio_device_{register,unregister}
a7e57dce02ceb8212f106191fdfbc0fcb61ce9e0 iio: core: Move kernel doc to the right location
355c1a14d4009a43e4d1f9cb42a382f0a94d01c4 iio: kfifo_buf: Implement data_available() callback
098d3beccfb6d678a926c4cc4f5e70c3b752fd5e iio: hid-sensors: Added Inclinometer 3D
cb955852a48c29ef7bd847ce993102e2b58295d4 iio: Remove support for the legacy event config interface
875e36f8a2ce6cfc2010af6c91fb5351bd530d48 HID: hid-sensor-hub: Fix buggy report descriptors
218eb9ed840c6279686ed6b0c3e31a083e241ff9 HID: hid-sensor-hub: quirk for STM Sensor hub
e02cee4819ae51f26333471c8eed50678b08572a HID: hid-sensor-hub: Add selector api
ca2ed12f163bf430a425ec725ef76df5254b9f45 HID: hid-sensor-hub: Processing for duplicate physical ids
92825ff97411f0121166485798cdaf2deb6b5952 iio get rid of unneccessary error_ret
7bbcf7e13695c70f13b2cae59392016c0fa2e7a6 iio: Avoid unnecessary kasprintf
39a3a0138f6113805dc9e0813214cd4b03bd8ac0 iio: hid-sensors: Added Proximity Sensor Driver
f64a799b8a49e3e26497b26ea78af01fc6302874 iio: hid-sensors: Added Pressure Sensor driver
b91accafbb1031b80d22ad83576877ff2f8b4774 iio:event: Fix and cleanup locking
ef4b4856593fc3d9d169bededdaf7acf62f83a52 iio:core: Fix bug in length of event info_mask and catch unhandled bits set in masks.
9fbfb4b37ed23f71aa9484484266381c6c6964cb IIO: core: Introduce read_raw_multi
fc18dddc0625cd1fdf6a823e85138ff05848a85f iio: hid-sensors: Added device rotation support
5d02edfc3957446fd625c0b018e14c6631a791f4 iio: hid-sensors: Convert units and exponent
73a24988201f1bc82143ad183c79206052ef2fe8 iio: hid-sensors: Accelerometer 3D: adjust scale and offset
be8e48d67ecdb1cc1234ff4f32a6e5d0002e4672 iio: hid-sensors: Inclinometer 3D: adjust scale and offset
6fe588e59935f3cb3a1e1cd3d49fa756f28cb2b3 iio: hid-sensors: Inclinometer 3D: Raw read support
a269b9a0a27675c34c62c4e20c4ffb62054cd51a iio: hid-sensors: Pressure: adjust scale and offset
cd5b700f998d9e1d8e6dbc62aeb0351bb2216e22 iio: hid-sensors: Pressure: Raw read support
1eef062042751822e9f9de418b0f712c6f9b93e8 iio: hid-sensors: Proximity: Raw read support
bf7f5204abdba94032ff7cae1c9c8c9e7671d246 iio: hid-sensors: typo leads to potential forever loop
0ccf091d1fbc1f99bb7f93bff8cf346769a9b0cd HID: sensor-hub: make dyn_callback_lock IRQ-safe
c7a8be08da50eb5e30eaa6555079c10b8e23521a iio:triggers:interrupt trigger - move out of staging.
398fd22b6b94cb15c1c299bceecd63644a1b17b4 iio: Remove timestamp argument from iio_trigger_poll() and iio_trigger_poll_chained()
ceec634076b91bea57107541a46e92d765c69488 HID: sensor-hub: fix potential memory leak
6c3d8d4f05ec477f68615dc6120c46fec64a2268 iio: hid-sensor-press: Fix return values
4ff9f633c35e2d94eb92f92c48ae0d9172242889 iio: hid-sensor-prox: Fix return values
a034234277d2f51104deadd559dd9584ba00a8cc iio: hid-sensors: Fix compilation warning
fb123a6b6b893e8461c17a6d068fd6e1671cf0de iio: hid-sensors: make hid_sensor_get_reporting_interval static
2a96540a5c0d136c3c412ec650fad301aaf12bf7 iio: hid-sensor-magn-3d: Scan for usage attributes before setting up iio channels
03d795589d4e5adf83af0623ac5bac93ae2ce2a9 iio: hid-sensor-magn-3d: Fix build warning
5be5db24fc0883d9e38df378c1de9a00f8933999 HID: hid-sensor-hub: use devm_ functions consistently
1843c2f3def16740eb6d129a9790c32dd21aa5ea iio: core: Introduce IIO_EV_DIR_NONE
a88bfe78583026eb9f21d4014ba481b22b66cee3 iio: core: Introduce STEPS channel, ENABLE mask and INSTANCE event
bcdf28fb1b8badf3cdba18d349f6251057e36a45 iio: core: Introduce IIO_CHAN_INFO_CALIBHEIGHT
3e1b6c95b990c93f4aa3b17e9f66221e2fa44bee iio: Move buffer registration to the core
616dde2a1ea3df9398b1fcc7d6d6516c5fab6183 iio: Remove get_bytes_per_datum() from iio_buffer_access_funcs
d967cb6bd4e79c0cd7b150f1382d3d04e00408a0 iio: buffer: Move iio_buffer_alloc_sysfs and iio_buffer_free_sysfs
08e7e0adaa17205f86894157d86c4bee3c714330 iio: buffer: Allocate standard attributes in the core
8d92db2827b68206f6930e79132243416183e083 iio: buffer: Make length attribute read only for buffers without set_length
374956600ecbedf5ca29c76bde114160eb805091 iio: buffer: Drop get_length callback
7ab374a053a43050117eb452306b6cd9dcb58cfd iio: kfifo: Remove unused argument in iio_kfifo_allocate
780103fef5c88a97fb9c8d0079bf326ed6147f1f iio: kfifo: Add resource management devm_iio_kfifo_allocate/free
88f4c6c468b86c58adddc56bb2ff768d6dc0c890 iio: accel: Annotate Kconfig entries with module name information
4f51c9ada76811d344d52deccf9014d329300858 iio: light: Annotate Kconfig entry with module name information
65de7654d39c70c2b942f801cea01590cf7e3458 iio: iio: Fix iio_channel_read return if channel havn't info
66ad1fd025c7cb9d0d4d01de965c80871226f422 iio: buffer: fix custom buffer attributes copy
cbbcc937090b0d3137eac58759480b13d73f159d iio: hid-sensor-accel-3d: Introduce PM
27ce4239367793f1f008d2f3dac10e3987b9ecd4 iio: hid-sensor-gyro-3d: Introduce PM
2c615aff1a8d3264610f1b4825452d49fcfc5cfb iio: hid-sensor-als: Introduce PM
a357b9b0c5e7ac8276aebd366297d6441e697a27 iio: hid-sensor-prox: Introduce PM
0ef809cf9956c156220155203b0df934f2b2fc14 iio: hid-sensor-magn-3d: Introduce PM
feb2b06d630922c62ee72ebe207d4cde2f1cfa22 iio: hid-sensor-incl-3d: Introduce PM
a77945fd4f9af5298196345d89905d604d1fa884 iio: hid-sensor-press: Introduce PM
72c66644673a61ad85d293de7a61e54b9bdc9682 iio: core: Introduce ENERGY channel type
cc3c9eecaed65b26ee0661e9e9491fd8d48e3907 iio: core: Introduce DISTANCE channel type
5a1a932981415661827f7edd9e99943a2a3b7b67 iio: core: Introduce IIO_VELOCITY and IIO_MOD_ROOT_SUM_SQUARED_X_Y_Z
d37f6836fa285882450e28d1cbc5a9b624911e7e iio: core: Introduce IIO_CHAN_INFO_CALIBWEIGHT
27be84236d75c13a83c45d850390f40b58401d97 iio: core: Introduce CHANGE event type
17a2cbc27981b85a09a48425c2614ae0cb7be8cd iio: core: Remove IIO_EV_TYPE_INSTANCE
2f0ecb7c6563d711bec15268d56adf1c630e77d1 iio: core: Introduce IIO_CHAN_INFO_DEBOUNCE_COUNT and _TIME
6da9b382bd2b6e1b910d7e3512a8a115c8c5f113 iio: buffer: refactor buffer attributes setup
293487c8ecc1103f4625cea5e90e1ba0cc89660f iio: Export userspace IIO headers
ed1197709504c3641cbad32843667539cc912ea1 HID: sensor-hub: correct dyn_callback_lock IRQ-safe change
e651a1da442ae02a50081e38309dea5e89da2d41 HID: hid-sensor-hub: Allow parallel synchronous reads
cb67126f32f008b9abe97fbfca9b23a797b2458a HID: hid-sensor-hub: Add support for application collection
b3f4737d00de317d1549d5cb5b1dad90e19f5cec HID: hid-sensor-hub: Extend API for async reads
817020cfb3a2649064a1e14e083934234e2c208d iio: Move iio userspace applications out of staging
c1b03ab5e886760bdd38c9c7a27af149046ffe01 iio: core: Fix double free.
eb96483349e946f10d41c2a5674922e1d86603d9 HID: hid-sensor-hub: fix attribute read for logical usage id
37d3455672732b29a477732a94abfe95e199f0ce iio: add watermark logic to iio read and poll
f4f4673b7535eff4ee1a8cfb1685fa1e1a0cb79d iio: add support for hardware fifo
964e2255f1d73fc0136bc206a78a1f86bdad72a7 iio: pressure: hid-sensor-press: Fix modifier
e5f1efb9ae71bbb79629d660dc19b51ce7b95439 iio: kfifo: Set update_needed to false only if a buffer was allocated
c8a8585431efba0faaf41167f8f7c27c48307ca6 iio: core: Introduce IIO_CHAN_INFO_CALIBEMISSIVITY
faaa44955dedc661f083636d816af90975a359ee iio: core: Introduce IIO_CHAN_INFO_OVERSAMPLING_RATIO
4e617fc1b6ce543e71c9aeb60b81ad55d2fefe91 iio: light: hid-sensor-als: Constify platform_device_id
4205086119a70e9eb57330755b62680802e325b9 iio: light: hid-sensor-prox: Constify platform_device_id
5dd86df009064b4ba25eabc78ea97d5c92154d13 iio: hid-sensor-incl-3d: Constify platform_device_id
6b490c6c6702b1404d3ae93a9d0ace211d40c094 iio: hid-sensor-rotation: Constify platform_device_id
85b4ba7055d4cf624b6a608125e3d0c57768cc10 iio: hid-sensor-press: Constify platform_device_id
2d94e5224e81c58986a8cf44a3bf4830ce5cb96e HID: hid-sensor-hub: Fix debug lock warning
f0828ba96d02d4d4b197c531b34c662ee3c928df iio: light: hid-sensor-prox: Fix memory leak in probe()
32ee56e306b09568619466efe109ab9722e89245 iio: orientation: hid-sensor-incl-3d: Fix memory leak in probe()
2bd04628435ff57a2fefa71e7d3e5c005db5c978 iio: orientation: hid-sensor-rotation: Fix memory leak in probe()
c24e7daf823256c83ce3efe6fa9b9b8ab5b78480 iio: pressure: hid-sensor-press: Fix memory leak in probe()
63223c5f5c11b832586edca28cfc7d2850bc3e44 iio: Replace printk in __iio_update_buffers with dev_dbg
248be5aafc7cfe860b8f310bfc3f433e51f9fb11 iio: __iio_update_buffers: Slightly refactor scan mask memory management
fcc1b2f57d89142acf6173a8e6ffb19f5f5ec876 iio: __iio_update_buffers: Perform request_update() only for new buffers
6e509c4d91632b6f8f05f0bee3a20fd50ca2263b iio: __iio_update_buffers: Verify configuration before starting to apply it
623d74e37f12c9276b15c2c0540b438e684af0d2 iio: __iio_update_buffers: Split enable and disable path into helper functions
1250186a936a169a32f5101392deec18788877b9 iio: __iio_update_buffers: Leave device in sane state on error
ff7d4f5981a8a139ead70adef3c1d0ed574bca01 iio: buffer: remove unneeded test
629bc02331f7aae6ef775fb4c15e6d8aa58722f1 iio: Always compute masklength
225d59adf1c899176cce0fc80e42b1d1c12f109f iio: Specify supported modes for buffers
1e1ec2861e0d4307267096c3f74c17298c1cde98 iio: Require strict scan mask matching in hardware mode
1ca0259b18478b2bab6d5c81ca1de52dd519ae5e iio: light: hid-sensor-prox: Fit assignment in one line
c6f67a1f55a7f8a8373068ca07553bd2b2731949 iio: allow userspace to flush the hwfifo with non-blocking reads
fcc577dd55db193926537e0e4de98492d665446b iio: Fix parameters in iio_triggered_buffer_setup
2498dcf6e09b3ecce2b32ed6434bd02fc4219d5b iio: core: Add function params for kernel docs
050ee2f16e245b42c9ba30640bb91b309b424c48 iio: Move callback buffer to its own module
8548a63b37be4891e7972ba058b785d9468e8907 iio: Move generic buffer implementations to sub-directory
735ad074ffa72ccc4fdba8e54eb024df95545e7d iio: Support triggered events
8ff6b3bc9493089247e012a9fcba7198e194b4a5 iio: chemical: Add IIO_CONCENTRATION channel type
d38d54692d454e4dded125677e39f53514dc4277 iio: resistance: add IIO_RESISTANCE channel type
f0566c0c405de543efb6fb8b8988cc7743d85ea6 iio: Set device watermark based on watermark of all attached buffers
4a60535726d90bfad16b5c52dcffaeede9fb84a9 iio:iio_buffer_init(): Only set watermark if not already set
670b19ae9bfdbcb4ce2c2ffb2ec1659a7f4a2074 iio: Add generic DMA buffer infrastructure
2d6ca60f328450ff5c7802d0857d12e3711348ce iio: Add a DMAengine framework based buffer
b440655b896b2d5a2fb5f918801fb0e281a537cd iio: Add support for indicating fixed watermarks
e18a2ad45caeb11226e49c25068d0f2efe2adf6c iio: Add buffer enable/disable callbacks
54f32fd5dff96a903f838de1efcdfb9831c5b207 HID: Make report_descriptor available for all devices
231bfe53c57e89857753c940192acba933cba56c iio: fix some warning messages
33bd2dd03dd0bfa1130d11062a9e5f40d0cf1d3f USB: quirks: Apply ALWAYS_POLL to all ELAN devices
5cf6a51e6062afe7cc507f32f1e5f7e6497ae844 configfs: allow dynamic group creation
8261d961d1f397925d7a470864c14663d01ed714 iio: core: Introduce IIO configfs support
b662f809d41009749a9ee6f9a4db3d9af579e171 iio: core: Introduce IIO software triggers
ac5006a2a558a2441a840c7be1e0e717839d5e07 iio: trigger: Introduce IIO hrtimer based trigger
8d6c16dd7213fa43702416e3dd1059e9e36bc758 iio:configfs: Introduce iio/configfs.h to provide a location for the configfs_subsystem
f9ed89e17ee7d1f5f25615bb0080b9a3ff1bb5f0 iio: core: fix ptr_ret.cocci warnings
ecb3a7ccc653fc8007edd0591d32d839386673f1 iio: ph: add IIO_PH channel type
182b49058e036573ccea37619d90fcaddc983536 iio: Add helper function for calculating scan index storage size
9d452184fc9d9c3a0e6df5910857c6017865e3c0 iio: buffer-dmaengine: Use dmaengine_terminate_sync()
08a33805518e7845486f88287e8aace6f8439391 iio: core: implement iio_device_{claim|release}_direct_mode()
1bef2c1d4e4fd92bdf8219b13ba97ba861618254 iio: fix config watermark initial value
d409404cf6e201c2980c7148484c350f33a7912e iio: Add channel for UV index
dfc57732ad38f93ae6232a3b4e64fd077383a0f1 iio:core: mounting matrix support
0f3a8c3f34f728e7c96651bb7271e1c388c9aac2 iio: Add support for creating IIO devices via configfs
4b9d2090a444d44f16788b9ad60180011d133f97 iio: electricalconductivity: add IIO_ELECTRICALCONDUCTIVITY type
99543823357966ac938d9a310947e731b67338e6 iio: Fix error handling in iio_trigger_attach_poll_func
29e3e06d893105febb9c9ccaff856fcdcbe3f712 iio: buffer-dma: Use ARRAY_SIZE in for loop range
fcf68f3c0bb2a541aa47a2a38b8939edf84fd529 iio: fix sched WARNING "do not call blocking ops when !TASK_RUNNING"
e21a294d1e35e890c1b5f0a29df15f75c8934a73 iio: Add resource managed APIs devm_iio_channel_{get,release) in devres
9083325f1197a6956db17809d74dbe3578dc1005 iio:trigger: add resource managed (un)register
70e483487db787b152da756d4be0fef917378142 iio: add resource managed triggered buffer init helpers
5dba4b14bafe801083d01e1f400816df7e5a8f2e iio: ensure ret is initialized to zero before entering do loop
702a7b8e064a93df0b63e9d718b666a9851088fc iio: trigger: helpers to determine own trigger
43ece27e70b2c756e45306791955507f0533e248 iio:trigger: Add helper function to verify that a trigger belongs to the same device
1a8f324aa1f2237caef1c6633734785bbdcffeed iio: Implement counter channel type and info constants
8af644a7d6846f48d6b72be5d4a3c6eb16bd33c8 iio: orientation: hid-sensor-rotation: Add PM function (fix non working driver)
36afb176d3c9580651d7f410ed7f000ec48b5137 iio: fix pressure data output unit in hid-sensor-attributes
6f77199e9e4b84340c751c585691d7642a47d226 iio: hid-sensors: Increase the precision of scale to fix wrong reading interpretation.
51239600074bc9979b0a0e83b72c726d7dcc3132 iio:core: add a callback to allow drivers to provide _available attributes
6f771d0b338d59c492699814b0fe554f9d1ee27c iio: magnetometer: separate the values of attributes based on their usage type for HID compass sensor
9f4667776c138df33c4107fcd8811aa9cb6cdcbe iio:buffer: Introduced a function to assign the buffer specific attrs.
a96cd0f901eecd9589477cc2cd46bdb4f1f3e49a iio: accel: hid-sensor-accel-3d: Add timestamp
abea9c62c32fabb9f712f01cbf12ce24694eca88 iio: hid-sensor-magn-3d: Add support for rotation from north
6e2059b53f9885f202b086d7b4ca10a98926e974 ipv4/igmp: init group mode as INCLUDE when join source group
0ae0d60a379c11d6f3b11d9b9e8dbdd1fc683a1a multicast: remove useless parameter for group add
08d3ffcc0cfaba36f6b86fd568cc3bc773061fa6 multicast: do not restore deleted record source filter mode to new one
2fa771be953a17f8e0a9c39103464c2574444c62 ip6_tunnel: allow ip6gre dev mtu to be set below 1280
a9f9b30e1748252d158f78a0c0affdc949671dd1 MAINTAINERS: Update Xe driver maintainers
5e7ba042fd05043416babace5a4a953e29cf2826 qed: Fix reading stale configuration information
49d7bd36813ea8e6b4c97b640d24e7fbd44c84f0 scsi: qla2xxx: Spinlock recursion in qla_target
36eb8ff672faee83ccce60c191f0fef07c6adce6 scsi: qla2xxx: Fix NULL pointer dereference for fcport search
efa93f48fa9d423fda166bc3b6c0cbb09682492e scsi: qla2xxx: Fix NPIV deletion by calling wait_for_sess_deletion
45235022da9925b2b070c0139629233173e50089 scsi: qla2xxx: Fix driver unload by shutting down chip
6cdefc6e2ad52170f89a8d0e8b1a1339f91834dc nvme: if_ready checks to fail io to deleting controller
c0cb1c6d39060ce04470b10347b7b6f1df77bef5 blk-mq-debugfs: Show atomic request flags
8ef1a191038c138d5675933cd69d47747d0d396b blk-mq-debugfs: Show requeue list
22d538213ec4fa65b08b1edbf610066d8aab7bbb blk-mq-debugfs: Add names for recently added flags
8824f62246bef288173a6624a363352f0d4d3b09 blk-mq: fail the request in case issue failure
190bd6e98afc512fb16d4a471acd488e36141637 EDAC, sb_edac: Add support for systems with segmented PCI buses
20d4ac659c76034586a3ab79489b0940631a65de drm/amd/display: Fix BUG_ON during CRTC atomic check update
a9e8d27574f26700575473011cb607d4abdbda5f drm/amd/display: Make atomic-check validate underscan changes
bc13f2f88eae63af943ab967cb14bb602f8f2eeb drm/amd/display: Update color props when modeset is required
5326c4525d1b2d5f1519268dd305e19c9bd4ef56 drm/amd/display: Clear connector's edid pointer
be1c63c8017bb00a4041abace6cc1e9f0bf26aa9 drm/i915/dp: Send DPCD ON for MST before phy_up
889ad63d41eea20184b0483e7e585e5b20fb6cfe drm/qxl: Call qxl_bo_unref outside atomic context
d9fda248046ac035f18a6e663f2f9245b4bf9470 drm/amdgpu: Don't default to DC support for Kaveri and older
34d6d59986abb1d2cb5415a49b6c50f51ba1d2e4 drm/amdgpu: Update pin_size values before unpinning BO
38e624a18f9a05b8c894409be6b14709a7206c7c drm/amdgpu: GPU vs CPU page size fixes in amdgpu_vm_bo_split_mapping
4de9f38bb2cce3a4821ffb8a83d6b08f6e37d905 drm/amd/display: release spinlock before committing updates to stream
e4dd27aadd205417a2e9ea9902b698a0252ec3a0 drm/i915: Allow DBLSCAN user modes with eDP/LVDS/DSI
132c27c97cb958f637dc05adc35a61b47779bcd8 drm/i915: Fix PIPESTAT irq ack on i965/g4x
929168c5f3df5d9ea0ef426c33e971157d045eab drm/i915: Disallow interlaced modes on g4x DP outputs
51a9f6dfc00d35f927ecfaf6f0ae8ebaba39b3fe drm/i915: Turn off g4x DP port in .post_disable()
2cd5fe22d9a45cdf11c62bbe8db3ce9101207510 drm/amdgpu: Make struct amdgpu_atif private to amdgpu_acpi.c
f9ff68521a5541e1fdaeb0ef11871c035b30e409 drm/amdgpu: Dynamically probe for ATIF handle (v2)
e6789cd3dfb553077606ccafeb05e0043f072481 uio: Simplify uio error path by using devres functions
a087146c72bad795bcab80e5987c5b80fa225000 uio: Request/free irq separate from dev lifecycle
9ff2c132345cab8972a2bd29069aa52a3cadbbcc uio: don't free irq that was not requested
0320a278b9ef80cfa44f74b7f9bb36781695f3ee uio: add missing error codes
0d83539092ddb1ab79b4d65bccb866bf07ea2ccd uio: fix incorrect memory leak cleanup
a93e7b331568227500186a465fee3c2cb5dffd1f uio: Prevent device destruction while fds are open
9421e45f5ff3d558cf8b75a8cc0824530caf3453 uio: use request_threaded_irq instead
543af5861f41af0a5d2432f6fb5976af50f9cee5 uio: change to use the mutex lock instead of the spin lock
57c5f4df0a5a0ee83df799991251e2ee93a5e4e9 uio: fix crash after the device is unregistered
d0c21d43a5a12aaebb1e42e10cf78e6491fc9e5a bonding: Send ALB learning packets using the right source
b3208b2024c9089106df52ae25ebf39068d6f9fc net: bonding: Flip to the new dev walk API
b952f4dff2751252db073c27c0f8a16a416a2ddc net: manual clean code which call skb_put_[data:zero]
0825a6f98689d847ab8058c51b3a55f0abcc6563 mm: use octal not symbolic permissions
f44aa9ef7950a56daa3a5b41f069761f945f1a1f net: include hash policy in LAG changeupper info
942a656f1f228f06a37adad0e6c347773cfe7bd6 cxgb4: Added missing break in ndo_udp_tunnel_{add/del}
1f71addd34f4c442bec7d7c749acc1beb58126f2 tick/sched: Do not mess with an enqueued hrtimer
d082dc1562a2ff0947b214796f12faaa87e816a9 nvmet-fc: fix target sgl list on large transfers
1ea4ff3e9f0b8d53e680a2bb9e8e644bf03aeb4d cfg80211: support reloading regulatory database
c8c240e284b3d821011b4f680b3eaa99569b3756 cfg80211: reg: remove support for built-in regdb
90a53e4432b12288316efaa5f308adafb8d304b0 cfg80211: implement regdb signature checking
88230ef1f31bf2d8fcf42c20e5743ff4b3618a29 cfg80211: fix CFG80211_EXTRA_REGDB_KEYDIR typo
d7be102f2945a626f55e0501e52bb31ba3e77b81 cfg80211: initialize regulatory keys/database later
77e30e10ee28a53c8af95809866ee8493583e29a iwlwifi: mvm: query regdb for wmm rule if needed
532182cd610782db8c18230c2747626562032205 tcp: increment sk_drops for dropped rx packets
36a6503feddadbbad415fb3891e80f94c10a9b21 tcp: refine tcp_prune_ofo_queue() to not drop all packets
9f5afeae51526b3ad7b7cb21ee8b145ce6ea7a7a tcp: use an RB tree for ooo receive queue
76f0dcbb5ae1a7c3dbeec13dd98233b8e6b0b32a tcp: fix a stale ooo_last_skb after a replace
18a4c0eab2623cc95be98a1e6af1ad18e7695977 net: add rb_to_skb() and other rb tree helpers
72cd43ba64fc172a443410ce01645895850844c8 tcp: free batches of packets in tcp_prune_ofo_queue()
3d4bf93ac12003f9b8e1e2de37fe27983deebdcf tcp: detect malicious patterns in tcp_collapse_ofo_queue()
8541b21e781a22dce52a74fef0b9bed00404a1cd tcp: call tcp_drop() from tcp_data_queue_ofo()
58152ecbbcc6a0ce7fddd5bf5f6ee535834ece0c tcp: add tcp_ooo_try_coalesce() helper
304ec1b050310548db33063e567123fae8fd0301 x86/uaccess: Use __uaccess_begin_nospec() and uaccess_try_nospec
babdde2698d482b6c0de1eab4f697cf5856c5859 x86: Implement array_index_mask_nospec
eab6870fee877258122a042bfd99ee7908c40280 x86/spectre_v1: Disable compiler optimizations over array_index_mask_nospec()
b3d7ad85b80bbc404635dca80f5b129f6242bc7a x86: Introduce barrier_nospec
ddf35cf3764b5a182b178105f57515b42e2634f8 powerpc: Use barrier_nospec in copy_from_user()
2fbd7af5af8665d18bcefae3e9700be07e22b681 x86/syscall: Sanitize syscall table de-references under speculation
56c30ba7b348b90484969054d561f711ba196507 vfs, fdtable: Prevent bounds-check bypass via speculative execution
085331dfc6bbe3501fb936e657331ca943827600 x86/kvm: Update spectre-v1 mitigation
2be147f7459db5bbf292e0a6f135037b55e20b39 atm: zatm: Fix potential Spectre v1
a24e6348e5a0e8562ad64d760c25907ed088611c media: dvb_ca_en50221: sanity check slot number from userspace
4f5ab5d7a5e765ad231a132f82cec71de88b9aad media: dvb_ca_en50221: prevent using slot_info for Spectre attacs
088e861edffb84879cf0c0d1b02eda078c3a0ffe ALSA: control: Hardening for potential Spectre v1
ec67aaa46dce26d671b46c94ac674ad0b67d044c sysvipc/sem: mitigate semnum index against spectre v1
354d7793070611b4df5a79fbb0f12752d0ed0cc5 sched/autogroup: Fix possible Spectre-v1 indexing for sched_prio_to_weight[]
23d6aef74da86a33fa6bb75f79565e0a16ee97c2 kernel/sys.c: fix potential Spectre v1 issue
19b558db12f9f4e45a22012bae7b4783e62224da posix-timers: Protect posix clock array access against speculation
f9d94b57e30fd1575b4935045b32d738668aa74b ALSA: asihpi: Hardening for potential Spectre v1
2f22b4cd45b67b3496f4aa4c7180a1271c6452f6 x86/speculation/l1tf: Protect swap entries against L1TF
6b28baca9b1f0d4a42b865da7a05b1c81424bd5c x86/speculation/l1tf: Protect PROT_NONE PTEs against speculation
17dbca119312b4e8173d4e25ff64262119fcef38 x86/speculation/l1tf: Add sysfs reporting for l1tf
42e4089c7890725fcd329999252dc489b72f2921 x86/speculation/l1tf: Disallow non privileged high MMIO PROT_NONE mappings
cc1fe215e1efa406b03aa4389e6269b61342dec5 cpu/hotplug: Split do_cpu_down()
55e6d279abd92cfd7576bba031e7589be8475edb x86/cpu: Remove the pointless CPU printout
545401f4448a807b963ff17b575e0a393e68b523 x86/cpu/common: Provide detect_ht_early()
95f3d39ccf7aaea79d1ffdac1c887c2e100ec1b6 x86/cpu/topology: Provide detect_extended_topology_early()
119bff8a9c9bb00116a844ec68be7bc4b1c768f5 x86/CPU/AMD: Do not check CPUID max ext level before parsing SMP info
1e1d7e25fd759eddf96d8ab39d0a90a1979b2d8c x86/cpu/AMD: Evaluate smp_num_siblings early
2207def700f902f169fc237b717252c326f9e464 x86/apic: Ignore secondary threads if nosmt=force
6a4d2657e048f096c7ffcad254010bd94891c8c0 x86/smp: Provide topology_is_primary_thread()
f048c399e0f7490ab7296bc2c255d37eb14a9675 x86/topology: Provide topology_smt_supported()
05736e4ac13c08a4a9b1ef2de26dd31a32cbee57 cpu/hotplug: Provide knobs to control SMT
56563f53d3066afa9e63d6c997bf67e76a8b05c0 x86/bugs: Move the l1tf function and define pr_fmt properly
7ce2f0393ea2396142b7faf6ee9b1f3676d08a5f x86/CPU/AMD: Move TOPOEXT reenablement before reading smp_num_siblings
e14d7dfb41f5807a0c1c26a13f2b8ef16af24935 x86/speculation/l1tf: Fix up pte->pfn conversion for PAE
506a66f374891ff08e064a058c446b336c5ac760 Revert "x86/apic: Ignore secondary threads if nosmt=force"
0cc3cd21657be04cb0559fe8063f2130493f92cf cpu/hotplug: Boot HT siblings at least once
26acfb666a473d960f0fd971fe68f3e3ad16c70b x86/KVM: Warn user if KVM is loaded SMT and L1TF CPU bug being present
33966dd6b2d2c352fae55412db2ea8cfff5df13a x86/KVM/VMX: Split the VMX MSR LOAD structures to have an host/guest numbers
ca83b4a7f2d068da79a029d323024aa45decb250 x86/KVM/VMX: Add find_msr() helper function
3190709335dd31fe1aeeebfe4ffb6c7624ef971f x86/KVM/VMX: Separate the VMX AUTOLOAD guest/host number accounting
989e3992d2eca32c3f1404f2bc91acda3aa122d8 x86/KVM/VMX: Extend add_atomic_switch_msr() to allow VMENTER only MSRs
390d975e0c4e60ce70d4157e0dd91ede37824603 x86/KVM/VMX: Use MSR save list for IA32_FLUSH_CMD if required
215af5499d9e2b55f111d2431ea20218115f29b3 cpu/hotplug: Online siblings when SMT control is turned on
d1059518b4789cabe34bb4b714d07e6089c82ca1 x86/bugs: Concentrate bug reporting into a separate function
7bb4d366cba992904bffa4820d24e70a3de93e76 x86/bugs: Make cpu_show_common() static
72c6d2db64fa18c996ece8f06e499509e6c9a37e x86/litf: Introduce vmx status variable
2f055947ae5e2741fb2dc5bba1033c417ccf4faa x86/kvm: Drop L1TF MSR list approach
a7b9020b06ec6d7c3f3b0d4ef1a9eba12654f4f7 x86/l1tf: Handle EPT disabled state proper
7db92e165ac814487264632ab2624e832f20ae38 x86/kvm: Move l1tf setup function
4c6523ec59fe895ea352a650218a6be0653910b1 x86/kvm: Add static key for flush always
dd4bfa739a72508b75760b393d129ed7b431daab x86/kvm: Serialize L1D flush parameter setter
895ae47f9918833c3a880fbccd41e0692b37e7d9 x86/kvm: Allow runtime control of L1D flush
8e1b706b6e819bed215c0db16345568864660393 cpu/hotplug: Expose SMT control init function
fee0aede6f4739c87179eca76136f83210953b86 cpu/hotplug: Set CPU_SMT_NOT_SUPPORTED early
d90a7a0ec83fb86622cd7dae23255d3c50a99ec8 x86/bugs, kvm: Introduce boot-time control of L1TF mitigations
3ec8ce5d866ec6a08a9cfab82b62acf4a830b35f Documentation: Add section about CPU vulnerabilities
6c26fcd2abfe0a56bbd95271fce02df2896cfd24 x86/speculation/l1tf: Unbreak !__HAVE_ARCH_PFN_MODIFY_ALLOWED architectures
288d152c23dcf3c09da46c5c481903ca10ebfef7 x86/KVM/VMX: Initialize the vmx_l1d_flush_pages' content
73d5e2b472640b1fcdb61ae8be389912ef211bda cpu/hotplug: detect SMT disabled by BIOS
f005afede992e265bb98534b86912bb669ccd0d2 trace/bpf: remove helper bpf_perf_prog_read_value from tracepoint type programs
e95489010b7abf6d360dfb7d88a41dfa9e0cc802 bpf: add test for the verifier equal logic bug
89ad2fa3f043a1e8daae193bcb5fe34d5f8caf28 bpf: fix lockdep splat
96e5ae4e76f1ea950d493f510399b49308bea731 bpf: fix numa_node validation
32fff239de37ef226d5b66329dd133f64d63b22d bpf: add schedule points in percpu arrays management
9c2d63b843a5c8a8d0559cc067b5398aa5ec3ffc bpf: fix mlock precharge on arraymaps
f1e4ba5b6a6555d1f6b174d4fd0a96a9363bb57f perf, bpf: fix conditional call to bpf_overflow_handler
be95a845cc4402272994ce290e3ad928aff06cb9 bpf: avoid false sharing of map refcount with max_entries
6d8cb045cde681e64a5ed80a2ab70be831a7f9b0 bpf: comment why dots in filenames under BPF virtual FS are not allowed
098d2164e3441c252eaa28906d45e16b7bf1bd2b bpf: Use correct #ifdef controller for trace_call_bpf()
eba38a968258b5ad9d70722ab8c584e1753f4b16 bpf: update the comment about the length of analysis
035226b964c820f65e201cdf123705a8f1d7c670 bpf: remove tail_call and get_stackid helper declarations from bpf.h
241a974ba2c0d98e2104012cb80ed4494c0e66a7 bpf: dev_map_alloc() shouldn't return NULL
6b1bb01bcc5be91452bd3b5bda4300f179fd4053 bpf: fix cb access in socket filter programs on tail calls
fa9dd599b4dae841924b022768354cfde9affecb bpf: get rid of pure_initcall dependency to enable jits
9780c0ab1a4e64ef6998c4d83f9df5be806a02dc bpf: export whether tail call has jited owner
80a58d02559465b0ea403ff91c8bca9a733b1b0d bpf: reconcile bpf_tail_call and stack_depth
b9193c1b61ddb97da4713155b0d580e41fb544ac bpf: Rename bpf_verifer_log
c93552c443ebc63b14e26e46d2e76941c88e0d71 bpf: properly enforce index mask to prevent out-of-bounds speculation
af86ca4e3088fe5eacf2f7e58c01fa68ca067672 bpf: Prevent memory disambiguation attack
b76354cdfefb68bc017065850a34d486887a4f7b bpf: follow idr code convention
050fad7c4534c13c8eb1d9c2ba66012e014773cb bpf: fix truncated jump targets on heavy expansions
ab3f0063c48c26c927851b6767824e35a716d878 bpf: offload: add infrastructure for loading programs for a specific netdev
1f6f4cb7ba219b00a3fa9afe8049fa16444d8b52 bpf: offload: rename the ifindex field
5e43f899b03a3492ce5fc44e8900becb04dae9c0 bpf: Check attach type at prog load time
33491588c1fb2c76ed114a211ad0ee76c16b5a0c kernel/bpf/syscall: fix warning defined but not used
9ef09e35e521bf0df5325cc9cffa726a8f5f3c1b bpf: fix possible spectre-v1 in find_and_alloc_map()
d0f1a451e33d9ca834422622da30aa68daade56b bpf: use array_index_nospec in find_prog_type
615755a77b2461ed78dfafb8a6649456201949c7 bpf: extend stackmap to save binary_build_id+offset instead of address
16f07c551e3ac433874031433231140d38e69ccd bpf: implement syscall command BPF_MAP_GET_NEXT_KEY for stacktrace map
324bda9e6c5add86ba2e1066476481c48132aca0 bpf: multi program support for cgroup+bpf
98b5c2c65c2951772a8fc661f50d675e450e8bce perf, bpf: allow bpf programs attach to tracepoints
85b67bcb7e4a23ced05e7020bf5843b9857f6881 perf, bpf: minimize the size of perf_trace_() tracepoint handler
0b4c6841fee03e096b735074a0c4aab3a8e92986 bpf: use the same condition in perf event set/free bpf handler
e87c6bc3852b981e71c757be20771546ce9f76f3 bpf: permit multiple bpf attachments for a single perf event
468e2f64d220fe2dc11caa2bcb9b3a1e50fc7321 bpf: introduce BPF_PROG_QUERY command
f371b304f12e31fe30207c41ca7754564e0ea4dc bpf/tracing: allow user space to query prog array on the same tp
f4e2298e63d24bb7f5cf0f56f72867973cb7e652 bpf/tracing: fix kernel/events/core.c compilation error
0911287ce32b14fbc8aab0083151d9b54254091c bpf: fix bpf_prog_array_copy_to_user() issues
07c41a295c5f25928a7cb689fdec816bd0089fe8 bpf: avoid rcu_dereference inside bpf_event_mutex lock region
c8c088ba0edf65044c254b96fc438c91914aaab0 bpf: set maximum number of attached progs to 64 for a single perf tp
9c481b908b011398b1491752271cd1e2c9ad5758 bpf: fix bpf_prog_array_copy_to_user warning from perf event prog query
3a38bb98d9abdc3856f26b5ed4332803065cd7cf bpf/tracing: fix a deadlock in perf_event_detach_bpf_prog
4d220ed0f8140c478ab7b0a14d96821da639b646 bpf: remove tracepoints from bpf core
3193899d4dd54056f8c2e0b1e40dd6e2f0009f28 tracing: Fix possible out of bounds memory access when parsing enums
f91840a32deef5cb1bf73338bc5010f843b01426 perf, bpf: Add BPF support to all perf_event types
e12f03d7031a977356e3d7b75a68c2185ff8d155 perf/core: Implement the 'perf_kprobe' PMU
33ea4b24277b06dbc55d7f5772a46f029600255e perf/core: Implement the 'perf_uprobe' PMU
5da13ab8b0dcaa984c45ae43edf5a4d148603d42 perf/core: Fix perf_kprobe_init()
0eadcc7a7bc03e991d2da1cf88143fb7cc0342c1 perf/core: Fix perf_uprobe_init()
0fc8c3581dd42bc8f530314ca86db2d861485731 tracing/kprobe: Release kprobe print_fmt properly
3f705dfdf85a6416f5f12e52b7610144a99cbedc x86, selftests: Add sigreturn selftest
0a15584d72760a3b83d97af85d37ffaa2c42068d x86, selftests: Add single_step_syscall test
f9ea4a333c5f9f9d5133218f5c96643c207cc776 selftest/x86: build both bitnesses
1872d01ab4be0567ad6145070d9a5bee0f923b2f selftest/x86: have no dependency on all when cross building
07620abec867209a02aa51c424dbd35980480438 selftests/x86: install tests
c1e6e5cb941b54c2e7e84d9a796c1ad8377f44da selftests, x86: Remove useless run_tests rule
e9886ace222eb48bb57bd541320056ca334bd3a0 selftests, x86: Rework x86 target architecture detection
390db010c96091bd3bd0c5d6c0b667d22290ef41 selftest, x86: fix incorrect comment
c2affbf9a50882572e04645d5946ab0a921f061f x86/asm/entry/32, selftests: Add a selftest for kernel entries from VM86 mode
f2a50f8b7da45ff2de93a71393e715a2ab9f3b68 x86/selftests, x86/vm86: Improve entry_from_vm86 selftest
e800eb39e3f586e46a2007f72d3b609f6e3b888d selftests/x86/vm86: Fix entry_from_vm86 test on 64-bit kernels
34273f41d57ee8d854dcd2a1d754cbb546cb548f x86, espfix: Make it possible to disable 16-bit support
37868fe113ff2ba814b3b4eb12df214df555f8dc x86/ldt: Make modify_ldt synchronous
0d430e3fb3f7cdc13c0d22078b820f682821b45a x86/LDT: Print the real LDT base address
136d9d83c07c5e30ac49fc83b27e8c4842f108fc x86/ldt: Correct LDT access in single stepping logic
f454b478861325f067fd58ba7ee9f1b5c4a9d6a0 x86/ldt: Fix small LDT allocation for Xen
226f1f729ce277720fab60c91dd1b12574cfe66c selftests/x86: Add a fork() to entry_from_vm86 to catch fork bugs
296dc5806de57dc84fce000d60fc201ba40f96e8 x86/ldt: Make a size argument unsigned
990e9dc381e6999a0eba8ebaf8747daaa8c58337 x86/ldt: Make all size computations unsigned
a632375764aa25c97b78beb56c71b0ba59d1cf83 x86/ldt/64: Refresh DS and ES when modify_ldt changes an entry
da20ab35180780e4a6eadc804544f1fa967f3567 x86/entry: Use SYSCALL_DEFINE() macros for sys_modify_ldt()
1067f030994c69ca1fba8c607437c8895dcf8509 x86/mm: Relocate page fault error codes to traps.h
b0ce5b8c95c83a7b98c679b117e3d6ae6f97154b x86/boot: Relocate definition of the initial state of CR0
e27c310af5c05cf876d9cad006928076c27f54d4 ptrace,x86: Make user_64bit_mode() available to 32-bit builds
f98db6013c557c216da5038d9c52045be55cd039 sched/core: Add switch_mm_irqs_off() and use it in the scheduler
252d2a4117bc181b287eeddf848863788da733ae sched/core: Idle_task_exit() shouldn't use switch_mm_irqs_off()
aa35f896979d9610bb11df485cf7bb6ca241febb x86/umip: Enable User-Mode Instruction Prevention at runtime
6fc9dc81bff0ea461db534e2672acfdaf76f3e4e x86/traps: Fix up general protection faults caused by UMIP
9390afebe1d3f5a0be18b1afdd0ce09d67cebf9e selftests/x86: Add tests for User-Mode Instruction Prevention
a9e017d5619eb371460c8e516f4684def62bef3a selftests/x86: Add tests for the STR and SLDT instructions
796ebc81b9931bfa293b4ca38ae28c21a363f4d0 x86/umip: Select X86_INTEL_UMIP by default
770c77557757873808a474016a3cae4b37690cb2 x86/umip: Print a line in the boot log that UMIP has been enabled
1d9a090783bef19fe8cdec878620d22f05191316 powerpc/numa: Invalidate numa_cpu_lookup_table on cpu remove
c1e150ceb61e4a585bad156da15c33bfe89f5858 powerpc/pseries: Add empty update_numa_cpu_lookup_table() for NUMA=n
ce28867fd20c23cd769e78b4d619c4755bf71a1c s390/qeth: don't clobber buffer on async TX completion
e6ab3b776d848abce88b5b6bf59577025780b7ed ACPICA: Tables: Add WSMT support
ae1093be5a0ef997833e200a0dafb9ed0b1ff4fe dm snapshot: use mutex instead of rw_semaphore
3db2776d9fca45305e6c2065905d9a0e7b2c8212 dm snapshot: improve performance by switching out_of_order_list to rbtree
08ca1b52f69b4dfa8703d54e26e2c6e11aa453eb vfio/pci: Make IGD support a configurable option
86a2b2043af79deff5cf000c5a08847faa4f2ee0 iwlwifi: add shared clock PHY config flag for some devices
9e5053ad9d590e095829a8bb07adbbdbd893f0f9 iwlwifi: add a bunch of new 9000 PCI IDs
0a5257bc6d89c2ae69b9bf955679cb4f89261874 iwlwifi: add more card IDs for 9000 series
2e8e70d249e8c5c79bf88bbb36bb68154ab15471 net/mlx5e: Set port trust mode to PCP as default
adc176c5472214971d77c1a61c83db9b01e9cdc7 ipv6 addrconf: Implemented enhanced DAD (RFC7527)
1f372c7bfb23286d2bf4ce0423ab488e86b74bb2 net: ipv6: send NS for DAD when link operationally up
c76fe2d98c726224a975a0d0198c3fb50406d325 net: ipv6: send unsolicited NA after DAD
e66515999b627368892ccc9b3a13a506f2ea1357 ipv6: make DAD fail with enhanced DAD when nonce length differs
5369a762c882c0b6e9599e4ebbb3a9ba9eee7e2d ext4: add corruption check in ext4_xattr_set_entry()
513f86d73855ce556ea9522b6bfd79f87356dc3a ext4: always verify the magic number in xattr blocks
819b23f1c501b17b9694325471789e6b5cc2d0d2 ext4: always check block group bounds in ext4_init_block_bitmap()
044e6e3d74a3d7103a0c8a9305dfd94d64000660 ext4: don't update checksum of new initialized bitmaps
8844618d8aa7a9973e7b527d038a2a589665002c ext4: only look at the bg_flags field if it is valid
bdbd6ce01a70f02e9373a584d0ae9538dcf0a121 ext4: include the illegal physical block in the bad map ext4_error msg
c37e9e013469521d9adb932d17a1795c139b36db ext4: add more inode number paranoia checks
44de022c4382541cebdd6de4465d1f4f465ff1dd ext4: fix false negatives *and* false positives in ext4_check_descriptors()
8d5a803c6a6ce4ec258e31f76059ea5153ba46ef ext4: check for allocation block validity with block group locked
e09463f220ca9a1a1ecfda84fcda658f99a1f12a jbd2: don't mark block as modified if the handle is out of credits
8bc1379b82b8e809eef77a9fedbb75c6c297be19 ext4: avoid running out of journal credits when appending to an inline file
f29507ce66701084c39aeb1b0ae71690cbff3554 fscache: Fix reference overput in fscache_attach_object() error handling
5ce83d4bb7d8e11e8c1c687d09f4b5ae67ef3ce3 cachefiles: Fix missing clear of the CACHEFILES_OBJECT_ACTIVE flag
bbbd2b51a2aa0d76b3676271e216cf3647773397 x86/platform/UV: Use new set memory block size function
d7609f4210cb716c11abfe2bfb5997191095d00b x86/platform/UV: Add kernel parameter to set memory block size
ee35624e1e4e4e9a26a30d56c25a07ba9cdd8ecb scsi: libfc: Add lockdep annotations
9a26653b9525c08bc3d0a2c5c65721e4de3a5f6d scsi: libfc: fixup lockdep annotations
bc3d12b75491c0e844a8a7ce05e84de8f7d94822 scsi: libfc: hold disc_mutex in fc_disc_stop_rports()
07d981ad4cf1e78361c6db1c28ee5ba105f96cc1 x86/microcode: Allow late microcode loading with SMT disabled
d976441f44bc5d48635d081d277aa76556ffbf8b compiler, atomics, kasan: Provide READ_ONCE_NOCHECK()
76ebbe78f7390aee075a7f3768af197ded1bdfbb locking/barriers: Add implicit smp_read_barrier_depends() to READ_ONCE()
d71962f3e627b5941804036755c844fabfb65ff5 bpf: allow map helpers access to map values directly
5f90dd6aaea48abc02b5ba0c4530f5c71bc1ab15 tools/bpf: add verifier tests for accesses to map values
93731ef086cee90af594e62874bb98ae6d6eee91 bpf: migrate ebpf ld_abs/ld_ind tests to test_verifier
78e5227237cae9172dd50c3ebb08d4fb31530676 bpf: Do not dereference user pointer in bpf_test_finish().
586f8525979ad9574bf61637fd58c98d5077f29d bpf: Align packet data properly in program testing framework.
6e6fddc78323533be570873abb728b7e0ba7e024 bpf: fix panic due to oob in bpf_prog_test_run_skb
2ffbb22406079fec2c3a6ad6ee1dc99fede740ac tools/power turbostat: Fix logical node enumeration to allow for non-sequential physical nodes
c947657b15379505a9bba36a02005882b66abe57 nvme-rdma: Fix command completion race at error recovery
38e01b30563a5b5ade7b54e5d739d16a2b02fe82 dev: advertise the new ifindex when the netns iface changes
7132e2d669bd42c3783327f301aaac5f4463299b ftrace: Match dot symbols when searching functions on ppc64
db2173198b9513f7add8009f225afa1f1c79bcc6 powerpc/powernv/pci: Work around races in PCI bridge enabling
c96b9e508f3d06ddb601dcc9792d62c044ab359e mm/compaction: cleanup isolate_freepages()
be9765722e6b7ece8263cbab857490332339bd6f mm, compaction: properly signal and act upon lock and need_sched() contention
98b8cd7f75643e0a442d7a4c1cef2c9d53b7e92b powerpc/fadump: Return error when fadump registration fails
7e026c8c0a4200da86bc51edeaad79dcdccf78ca dm: add ->copy_from_iter() dax operation support
7efb367320f56fc4d549875b6f3a6940018ef2e5 dm log writes: fix bug with too large bios
976431b02c2ef92ae3f8b6a7d699fc554025e118 dax, dm: allow device-mapper to operate without dax support
e5c4cb9b1b78edb5bd42a9bd7315a0d7b842ac71 dm log writes: record metadata flag for better flags record
fec53774fd043038e57ac737d90e8d58975d6e92 filesystem-dax: convert to dax_copy_from_iter()
5d61e43b3975c0582003329d9de9d5e85abf5d33 dax: remove default copy_from_iter fallback
b3a9a0c36e1f7b9e2e6cf965c2bb973624f2b3b9 dax: Introduce a ->copy_to_iter dax operation
da7bc9c57eb0e91e048d05f7dbe5014a8b81ccfa x86/asm/memcpy_mcsafe: Remove loop unrolling
bd131544aa7e318a5735cbcbad46c4a5ee6b9d42 x86/asm/memcpy_mcsafe: Add labels for __memcpy_mcsafe() write fault handling
60622d68227d6d71fdfba5fb39f7f3d44cdd8815 x86/asm/memcpy_mcsafe: Return bytes remaining
12c89130a56ae8e8d85db753d70333c4ee0ea835 x86/asm/memcpy_mcsafe: Add write-protection-fault handling
8780356ef630aa577fd4daa49e49b79674711fae x86/asm/memcpy_mcsafe: Define copy_to_iter_mcsafe()
522239b445a2de988edb81672963708a6aaf9046 uio, lib: Fix CONFIG_ARCH_HAS_UACCESS_MCSAFE compilation
a77d478642f12ade58fdfac335ae464df1944a1e dax: Report bytes remaining in dax_iomap_actor()
6dfdb2b6d877d654c8c7b59d7166f4d672fba4e8 pmem: Switch to copy_to_iter_mcsafe()
674d8bdec770d40288574534eab27d82bdf16b0e libnvdimm/nfit_test: adding support for unit testing enable LSS status
0fb5c8df609eaca3cb7c24e7f91470f8dd5984ec tools/testing/nvdimm: force nfit_test to depend on instrumented modules
5d8beee20d89e34ff1dcb0da84adf7607858c59d x86, nfit_test: Add unit test for memcpy_mcsafe()
b62cc6fdd793eaac50e4191c8637ffff9e9574d6 libnvdimm, pmem: Fix memcpy_mcsafe() return code handling in nsio_rw_bytes()
092b31aa2048cf7561a39697974adcd147fbb27b x86/asm/memcpy_mcsafe: Fix copy_to_user_mcsafe() exception handling
33cc2c9667561b224215e6dfb5bf98e8fa17914e acpi, nfit: Fix scrub idle detection
1fdcce6e16c54facc4f0688630d3b9ecfcaa411f memremap: add scheduling point to devm_memremap_pages
949b93250a566cc7a578b4f829cf76b70d19a62c memremap: fix softlockup reports at teardown
15d36fecd0bdc7510b70a0e5ec6671140b3fce0c mm: disallow mappings that conflict for devm_memremap_pages()
2d2917f7747805a1f4188672f308d82a8ba01700 PCI: Export pcie_has_flr()
ffb0863426eb91a14101376051cfafa5527e665d PCI: Disable Samsung SM961/PM961 NVMe before FLR
51ba09452d11b17248d80c740c2fd14c9fdc2c99 PCI: Delay after FLR of Intel DC P3700 NVMe
24d86f59093b0bcb3756cdf47f2db10ff4e90dbb x86/unwind: Ensure stack grows down
5292221d6ddfed75e5b46cd42237a677094b99f3 Revert "drm/amd/display: Don\'t return ddc result and read_bytes in same return value"
68fe23a626b67b56c912c496ea43ed537ea9708f drm/nouveau: Remove bogus crtc check in pmops_runtime_idle
22b76bbe089cd901f5260ecb9a3dc41f9edb97a0 drm/nouveau: Use drm_connector_list_iter_* for iterating connectors
37afe55b4ae0600deafe7c0e0e658593c4754f1b drm/nouveau: Avoid looping through fake MST connectors
eb493fbc150f4a28151ae1ee84f24395989f3600 drm/nouveau: Set DRIVER_ATOMIC cap earlier to fix debugfs
4ea7fc09539bd2399c1fa7acea14529406120d9e drm/amd/display: Do not program interrupt status on disabled crtc
a2a330ad66313084c9432b32862aa7e1255da9b4 drm/amd/display: remove need of modeset flag for overlay planes (V2)
84ffa80123f56f80145dc638f21dfcbedda5610d drm/amd/display: Fix dim display on DCE11
6e08e0995b8f339fd2a7ee4fa11f17396405ef60 drm/amdgpu: Avoid reclaim while holding locks taken in MMU notifier
603ba2dfb338b307aebe95fe344c479a59b3a175 drm/atomic: Check old_plane_state->crtc in drm_atomic_helper_async_check()
de2d8db395c32d121d02871819444b631f73e0b6 drm/atomic: Initialize variables in drm_atomic_helper_async_check() to make gcc happy
363a3d3fb7d478d7dd49b8c6294436b8ba5984cc drm/amd/powerplay: correct vega12 thermal support as true
8d4235f71513cdccd9dc52b674323c3591552bc1 amd/dc/dce100: On dce100, set clocks to 0 on suspend
cdbf8897cb09b7baf2b8a7e78051a35a872b01d5 dax: dax_layout_busy_page() warn on !exceptional
430657b6be896db57d974375cc499ca212c7f01d ext4: handle layout changes to pinned DAX mappings
e25ff835af89a80aa6a4de58f413e494b2b96bd1 xfs: Close race between direct IO and xfs_break_layouts()
b1f382178d150f256c1cf95b9341fda6eb764459 ext4: close race between direct IO and ext4_break_layouts()
729c0c9dd55204f0c9a823ac8a7bfa83d36c7e78 cifs: Fix stack out-of-bounds in smb{2,3}_create_lease_buf()
1e38da300e1e395a15048b0af1e5305bd91402f6 timerfd: Protect the might cancel mechanism proper
a3650d53ba16ec412185abb98f231e9ba6bcdc65 resource: Handle resource flags properly
35d98e93fe6a7ab612f6b389ce42c1dc135d6eef arch: Set IORESOURCE_SYSTEM_RAM flag for System RAM
072f58c6ce29cf6cf429480fcd1b1e87d1d5ed18 x86/mm: Use encrypted access of boot related data with SEV
1379edd5967346a1fa79b8dc3e9ca261576c6bc9 x86/efi: Access EFI data as encrypted when SEV is active
4ac2aed837cbdbb21c12a28c04718e34c1dc225f resource: Consolidate resource walking code
1d2e733b13b450e5854f4a8f8efcd77fa7362d62 resource: Provide resource struct in resource walk callback
0e4c12b45aa88e74fdda117896d2b61c4e510cb9 x86/mm, resource: Use PAGE_KERNEL protection for ioremap of memory pages
1958b5fc401067662ec11a6fcbe0daa26c813603 x86/boot: Add early boot support when running with SEV active
606b21d4a6498c23632a4693c81b7b24feedd038 x86/io: Unroll string I/O when SEV is active
819aeee065e5d1b417ecd633897427c89f3253ec X86/KVM: Clear encryption attribute when SEV is active
9275b933d409d3a4efa08102ca813557b93fb0b9 resource: Fix resource_size.cocci warnings
ac5292e9a294618cecb31109d1ba265e3d027ba2 x86/boot: Fix boot failure when SMP MP-table is based at 0
9b788f32bee6b0b293a4bdfca4ad4bb0206407fb x86/efi: Access EFI MMIO data as unencrypted when SEV is active
9fc12023d6f51551d6ca9ed7e02ecc19d79caf17 ipv4: remove BUG_ON() from fib_compute_spec_dst
d05f0cdcbe6388723f1900c549b4850360545201 mm: fix crashes from mbind() merging vmas
b34e9a15b37b8ddbf06a4da142b0c39c74211eb4 uio: fix possible circular locking dependency
3d27c4de8d4fb2d4099ff324671792aa2578c6f9 Revert "uio: use request_threaded_irq instead"
07f3701387dcab3a4fb0166098fb2754a1b927e1 i40e: fix condition of WARN_ONCE for stat strings
472a1e44b3495df01c83e048667ef93dd2ea1ca0 net/mlx5e: Save MTU in channels params
250a42b6a764a7954a7a7a137bc71883f05657cb net/mlx5e: Support configurable MTU for vport representors
eacecf2760e321bf1c99b981d44a14bd05721f15 net/mlx5e: Fix null pointer access when setting MTU of vport representor
36d2f761b5aa688567b6aebdc6d68e73682275d4 cxgb4: update 1.20.8.0 as the latest firmware supported
31fb4c0d7b88f036edb96a6a3bd791289ea2f931 perf mmap: Store real cpu number in 'struct perf_mmap'
721f0dfc3ce821c6a32820ab63edfb48ed4af075 perf python: Fix pyrf_evlist__read_on_cpu() interface
c86ba91be75702c013bbf7379542920b6920e98f ipmi: Move BT capabilities detection to the detect call
6b81b193b83e87da1ea13217d684b54fccf8ee8a hv_netvsc: Fix napi reschedule while receive completion is busy
706d51681d636a0c4a5ef53395ec3b803e45ed4d x86/speculation: Support Enhanced IBRS on future CPUs
5eda25b10297684c1f46a14199ec00210f3c346e s390/lib: use expoline for all bcr instructions
aeaf7002a76c8da60c0f503badcbddc07650678c s390: detect etoken facility
2f958e8240be28acee26085ba1686b4321ba4306 drm/nouveau/fb/gp100-: disable address remapper
d00ddd9da79a868264997e192f9404aef1e46ba8 drm/nouveau/kms/nv50-: allocate push buffers in vidmem on pascal
b9be78531d2710f4302545aa80e0678ed0a3dd09 drm/i915/whl: Introducing Whiskey Lake platform
e364672477a105029346f0888bfa797b1ec3eee4 drm/i915/aml: Introducing Amber Lake platform
d0e062ebb3a44b56a7e672da568334c76f763552 drm/i915/cfl: Add a new CFL PCI ID.
38b0bd0cda07d34ad6f145fce675ead74739c44e dm raid: fix reshape race on small devices
36a240a706d43383bbdd377522501ddd2e5771f6 dm raid: fix RAID leg rebuild errors
6712cc9c22117a8af9f3df272b4a44fd2e4201cd vmbus: don't return values for uninitalized channels
b38c395f16562423f438065ad8d88c20ad92cab3 iwlwifi: mvm: remove division by size of sizeof(struct ieee80211_wmm_rule)
439cd39ea136d2c026805264d58a91f36b6b64ca netfilter: ipset: list:set: Decrease refcount synchronously on deletion and replace
8d74e9f88d65af8bb2e095aff506aa6eac755ada net: avoid skb_warn_bad_offload on IS_ERR
7c90584c66cc4b033a3b684b0e0950f79e7b7166 net: speed up skb_rbtree_purge()
7969e5c40dfd04799d4341f1b7cd266b6e47f227 ip: discard IPv4 datagrams with overlapping segments.
385114dec8a49b5e5945e77ba7de6356106713f4 net: modify skb_rbtree_purge to return the truesize of all purged skbs.
fa0f527358bd900ef92f925878ed6bfbd51305cc ip: use rb trees for IP frag queue.
0ed4229b08c13c84a3c301a08defdc9e7f4467e6 ipv6: defrag: drop non-last frags smaller than min mtu
a4fd284a1f8fd4b6c59aa59db2185b1e17c5c11c ip: process in-order fragments efficiently
df0c97e2c7d06b4f3cc5855604af79fd1a964619 drm/nouveau/kms/nv50-: ensure window updates are submitted when flushing mst disables
611ce855420a6e8b9ff47af5f47431d52c7709f8 drm/nouveau: Remove duplicate poll_enable() in pmops_runtime_suspend()
7fec8f5379fb6eddabc0aaef6d2304c366808f97 drm/nouveau/drm/nouveau: Fix deadlock with fb_helper with async RPM requests
1282278ee00b41f314d1bce058a6b28b1bd49c21 efi-bgrt: Add error handling; inform the user when ignoring the BGRT
248fbcd5aee00f6519a12c5ed3bc3dc0f5e84de5 x86/efi-bgrt: Switch pr_err() to pr_debug() for invalid BGRT
66dbe99cfe30e113d2e571e68b9b6a1a8985a157 x86/efi/bgrt: Don't ignore the BGRT if the 'valid' bit is 0
7f9b474c92713067237c8188f32791cc4007b5da x86/efi-bgrt: Switch all pr_err() to pr_notice() for invalid BGRT
f0e89aae609bebd430ce7a96d2f642917d89ca57 scsi: target_core_user: fix double unlock
ff07e4a414d963d5b1ee1446f05a451e591256de scsi: tcmu: initialize list head
cb0f32e12cded06e12ff19104eaf90c6f8310558 scsi: target: add helper to check if dev is configured
63d5be0f6a8053ba0c084dd6e2d5538e9376e7da scsi: tcmu: use lio core se_device configuration helper
a30b0473b62652f9b8ccb1e4f4a3a3c31d2b72b3 scsi: tcmu: check if dev is configured before block/reset
dc335a995527fb1ee9ec5649162b22cd1ce728ee scsi: tcmu: unmap if dev is configured
c97840c84f5a4362a596a2751e9245a979377a16 scsi: tcmu: do not set max_blocks if data_bitmap has been setup
b60cb1f80157689d206b09affc43c2dc1cafcbc8 scsi: tcmu: use match_int for dev params
0e0d75267107e6a557ea9314d55bcff05a6ede44 scsi: tcmu: use u64 for dev_size
bbf8ff6b1d2ae749d962fd9ff743164fe13abf5d ALSA: hda/realtek - Fixup for HP x360 laptops with B&O speakers
8a328ac1f9ebfc7621f76bbb27aa0382cc5b393d ALSA: hda/realtek - Fix HP Headset Mic can't record
cef31d9af908243421258f1df35a4a644604efbe posix-timer: Properly check sigevent->sigev_notify
8e0b2b916662e09dd4d09e5271cdf214c6b80e62 x86/speculation: Use ARCH_CAPABILITIES to skip L1D flush on vmentry
0027ff2a75f9dcf0537ac0a65c5840b0e21a4950 KVM: VMX: fixes for vmentry_l1d_flush module parameter
610b15c50e86eb1e4b77274fabcaea29ac72d6a8 overflow.h: Add allocation size calculation helpers
6ea8d958a2c95a1d514015d4e29ba21a8c0a1a91 mm/madvise.c: fix madvise() infinite loop under special circumstances
ecde0f3e7f9edf8629f56b2354385dc8d0a6a24d mm, memory_hotplug: remove timeout from __offline_memory
72b39cfc4d750e5b8c633a7a6fdd7d07927995ad mm, memory_hotplug: do not fail offlining too early
078eb6aa50dc50cd85f09a22226b7e238b3397ce x86/mm/memory_hotplug: determine block size based on the end of boot memory
43c75f933be26422f166d6d869a19997312f4732 x86/mm: Streamline and restore probe_memory_block_size()
bdee237c0343a5d1a6cf72c7ea68e88338b26e08 x86: mm: Use 2GB memory block size on large-memory x86-64 systems
f642fb5864a6e3645edce6f85ffe7b44d5e9b990 x86/platform/UV: Add adjustable set memory block size function
efb6d7a20c856e8714d17f5a4ce509df893c4f01 net/mlx5e: Use bool as return type for mlx5e_xdp_handle
05909babce5328f468f7ac3a1033431c895f97a5 net/mlx5e: Avoid reset netdev stats on configuration changes
8bfaf07f780683948a3183d3b14a76dfd50bf899 net/mlx5e: Present SW stats when state is not opened
6dae6f06f0fc0096213dde2203c335938d3bde99 net/mlx5e: IPoIB, Initialize max_opened_tc in mlx5i_init flow
d62e26b3ffd28f16ddae85a1babd0303a1a6dfb6 block: pass in queue to inflight accounting
0609e0efc5e15195ecf8c6d2f2e890d98760e337 block: make part_in_flight() take an array of two ints
f299b7c7a9dee64425e5965bd4f56dc024c1befc blk-mq: provide internal in-flight variant
b8d62b3a9c25d64d8de4a272314dac0c957982f2 blk-mq: enable checking two part inflight counts at the same time
f5c156c4c29a3d87176dd6e5c099388e187ec29b block: fix a crash caused by wrong API
6131837b1de66116459ef4413e26fdbc70d066dc blk-mq: count allocated but not started requests in iostats inflight
bf0ddaba65ddbb2715af97041da8e7a45b2d8628 blk-mq: fix sysfs inflight counter
7d4901a90d02500c8011472a060f9b2e60e6e605 blk-mq: avoid to map CPU into stale hw queue
036592fbbe753d236402a0ae68148e7c143a0f0e powerpc/opal-irqchip: Fix deadlock introduced by "Fix double endian conversion"
02b6505c8f84cbb4be459c9bf8ebbb7b0754e764 powerpc/powernv: Increase opal-irqchip initcall priority
96e023e7534c16ab54e236c114340e2447c36d2f powerpc/powernv: Reorder OPAL subsystem initialisation
9f0fd0499d30dbd61632463f293e2e826fa363b1 powerpc/powernv: Add a virtual irqchip for opal events
051f3ca02e46432c0965e8948f00c07d8a2f09c0 sched/topology: Introduce NUMA identity node sched domain
db73ee0d463799223244e96e7b7eea73b4a6ec31 mm, vmscan: do not loop on too_many_isolated for ever
99beaa22f11152e128861f1c681744ca4749e9f8 net/mlx5e: Fix traffic between VF and representor
8e1d162d8e81838119de18b4ca1e302ce906f2a6 net/mlx5e: IPoIB, Set the netdevice sw mtu in ipoib enhanced flow

__CHANGES NOT IN UPSTREAM________________
Apply debranding changes'
Sign with new secureboot key'
blk-mq: fix hctx debugfs entry related race between update hw queues and cpu hotplug
revert "opal: Remove events notifier"
revert "opal-irqchip: Fix double endian conversion"
Mark Intel Cascade Lake supported
cifs: add a check for session expiry
xfs: completely disable per-inode DAX behavior
fix 'allow faster resync only on non-rotational media' underneath dm
Revert "allow faster resync only on non-rotational media"
ip_tunnel: clean the GSO bits properly
kvm: Take out __exit annotation in vmx_exit()
mark coffeelake-s 8+2 as supported
set IORESOURCE_SYSTEM_RAM to system RAM to fix memory hot-add failure
efivars: Protect DataSize and Data in efivar_entry.var
arch: Set IORESOURCE_SYSTEM_RAM flag for resources
partially revert: remove per-zone hashtable of bitlock waitqueues
selinux: mark unsupported policy capabilities as reserved
intel_rdt: Fix MBA resource initialization
ipv4: fix incorrectly registered callback for sysctl_fib_multipath_hash_policy
cfg80211: let's wmm_rule be part of reg_rule structure
kernel error swap_info_get: Bad swap offset entry
spec_ctrl: Don't turn off IBRS on idle with enhanced IBRS
hv_netvsc: remove unneeded netvsc_napi_complete_done()
bpf: Additional changes
bpf: Add v4.16 sources
virtio-net: set netdevice mtu correctly
allow faster resync only on non-rotational media
memcg: delay memcg id freeing
exec.c: Add missing 'audit_bprm()' call in 'exec_binprm()'
gfs2: fix memory leak in rgrp lvbs
gfs2: Fix MAGIC check in LVBs
makefile: bump drm backport version
power turbostat: Allow for broken ACPI LPIT tables
mlx5-core: Mark unsupported devices
Mark NVMe/FC initiator mode usage as technology preview
Take NVMe/FC initiator out of technology preview
inode: avoid softlockup in prune_icache_sb
compaction: reschedule immediately if need_resched() is set
entry/64: Restore TRACE_IRQS_IRETQ in paranoid_exit
tc: ensure that offloading callback is called for MQPRIO qdisc
move tb3 to full support status
bpf selftest: Disable unsupported verifier tests
dax: use __pagevec_lookup in dax_layout_busy_page
aio: properly check iovec sizes
cifs: fix up section mismatch
netfilter: nf_conntrack: don't resize NULL or freed hashtable
Fix policy restore in suspend/resume
cxgb4: Add missing ndo_size param to mgmtm net_device_ops struct
sfc: fix backport of replace asynchronous filter operations
tracing: Make alloc_rh_data/destroy_rh_data public
bpftool: Add RHEL7 related note to bpftool-cgroup man page
Update bpf uapi headers
cpu/hotplug: Fix 'online' sysfs entry with 'nosmt'
cpu/hotplug: Enable 'nosmt' as late as possible
kvm: remove extra newline in 'vmentry_l1d_flush' sysfs file
kvm: x86: mitigation for l1 cache terminal fault vulnerabilities, part 3
speculation/l1tf: fix typo in l1tf mitigation string
x86, l1tf: protect _page_file ptes against speculation
l1tf: fix build for config_numa_balancing=n
x86, l1tf: sync with latest l1tf patches
l1tf: protect _page_numa ptes and pmds against speculation
l1tf: report if too much memory for l1tf workaround
spec_ctrl: sync with upstream cpu_set_bug_bits()
add support for l1d flush msr
kvm: mitigation for L1 cache terminal fault vulnerabilities
add missing barrier_nospec() in __get_user64_nocheck()
nospec: Introduce barrier_nospec for other arches
always enable eager FPU by default on non-AMD processors
atlantic: remove tech preview from driver
bonding: use skb_put_data()
mark whiskey-lake processor supported
fix memory leak
makefile: bump drm backport version
drm/ttm: fix backport problem with invalid dma attr
dell_rbu: make firmware payload memory uncachable
fix btt partition scanning on boot
move tech preview warning to nvmet_fc_register_targetport call
move tech preview warning to nvme_fc_register_localport call
iio: add IIO_ATTR_(RO, WO, RW) and IIO_DEVICE_ATTR_(RO, WO, RW) macros
iio: Add missing kernel doc field
iio: Fix function parameter name in kernel doc
Add I/Q modifiers
sca3000: hide stufftoread logic
iio_push_to_buffers(): Change type of 'data' to const void arch block configs COPYING CREDITS crypto Documentation drivers firmware fs include init ipc Kbuild Kconfig kernel lib MAINTAINERS
devres: add IIO device alloc/free functions to list
revert "hid-sensor-hub: fix report size"
revert "hid-sensor-hub: Add ISH quirk"
crash driver: update for CONFIG_HARDENED_USERCOPY
tcp: add RCU protection to ipv6 opt dereference
uapi: mark wmi.h to be included in kernel-headers
sched/debug: fix schedstats-induced sched domain corruption
perf: read the FREEZE_WHILE_SMM bit during boot
spec_ctrl: Fix VM guest SSBD problems
spec_ctrl: Eliminate TIF_SSBD checks in IBRS on/off functions
spec_ctrl: Disable SSBD update from scheduler if not user settable
spec_ctrl: Make ssbd_enabled writtable
spec_ctrl: Remove thread_info check in __wrmsr_on_cpu()
spec_ctrl: Write per-thread SSBD state to spec_ctrl_pcp
spec_ctrl: Add a read-only ssbd_enabled debugfs file
spec_ctrl: Rework SPEC_CTRL update after late microcode loading
spec_ctrl: Make sync_all_cpus_ibrs() write spec_ctrl_pcp value
kvm: Rename KVM SPEC_CTRL MSR functions to match upstream
spectre_v2: No mitigation if CPU not affected and no command override
bug: Add X86_BUG_CPU_MELTDOWN and X86_BUG_SPECTRE_V(12)
pti: Rename CONFIG_KAISER to CONFIG_PAGE_TABLE_ISOLATION
spec_ctrl: Sync up naming of SPEC_CTRL MSR bits with upstream
Support binding swap device to a node
leds: fix out of bound access
leds: skip unnamed LEDs
sfc: avoid recursive use of the filter_sem
core: remove WARN_ON from skb_try_coalesce
rhel: get rid of FS_HAS_FO_EXTEND
rhel: switch get_fo_extend over to using the registered ops
rhel: have file systems register their fo_extend structs
rhel: add a file_operations_extend registration function
handle node hole when initializing numa_meminfo
make memblock_overlaps_region() return bool
raid10 set default value for max_sectors
md rhel-only: Fix backport errors for ff875738
chelsio: request to HW should wrap
dm thin: remove merge_bvec hooks
add param that allows bootline control of hardened usercopy
Grammar
pci: support multiple IRQ actions per MSI
pci: do not report the relative IRQ number
pci: avoid an MSI vector number of zero
sched: prio: Delete child qdiscs when removing bands
Adding cmd_type REQ_TYPE_DRV_PRIV to mmc code path
Revert 2nd application of "Fix a memory leak in scsi_host_dev_release()"
Revert location change of pci_(read, write)_config_(byte, word, dword) routines
csiostor: Add a soft dep on cxgb4 driver
bpf: Set default value for bpf_jit_harden
generalize napi_complete_done()
devlink: Fix handling of resource_size_param
Fix vhost_copy_to_user()
revert "tcmu: use idr for se_device dev index"
tcmu: allow global max blocks to be settable
xfs: move growfs core to libxfs (partial)
bpf selftest: Disable unprivilidged user tests
bpf selftest: Disable unsupported verifier tests
bpf selftest: Disable unsupported maps tests
bpf selftest: Disable unsupported object tests
bpf selftest: Add missing instructions
bpf selftest: Additional changes to compile bpf selftest
bpf selftest: Add v4.16 sources
bpftool: Additional changes to compile bpftool
bpftool: Add v4.16 sources
libbpf: Additional changes to compile libbpf
libbpf: Add v4.16 sources
Enable bpf feature check
Update filter.h header
Update perf_event.h uapi header
Update bpf uapi headers
bpf: Add tech preview taint for syscall
bpf: Disable non root access to BPF
Ignore bpf syscall
bpf: Add missing functions
bpf: Allow additional program types for testing
bpf: Limit the prog types in syscall
bpf: Add merge fixes
bpf: Add sched cls/act type
bpf: Add socket filter type
bpf: Enable code compilation
kernel tracing: Add struct ftrace_event_data
bpf: Add CONFIG_BPF_EVENTS into Kconfig
bpf: Sync enum bpf_func_id with v4.5 code
bpf: Sync enums to v4.5 code in uapi bpf.h
bpf: Add bpf load syscall header bits
bpf: Adding filter block macros
bpf: Add missing macros to filter.h/bpf.h
bpf: Sync struct bpf_prog with v4.5 code and add related declarations
bpf: Sync needed bpf.h structs with v4.5 code
bpf: Add convert_ctx_access callback
bpf: Add verifier prototypes for helper functions
bpf: Add missing members to enum bpf_arg_type
bpf: Split functions under CONFIG_BPF_SYSCALL in bpf.h
bpf: Add trace_bpf* jit functions
asm/bpf: Change sk_load prefix to trace_sk_load for jit
asm/bpf: Additional changes for trace_bpf_jit.S
bpf: Additional changes for trace_bpf_jit_comp.c
asm/bpf: Add v4.5 trace_bpf_jit.S
bpf: Add v4.5 trace_bpf_jit_comp.c
bpf: Additional changes for network drivers
bpf: Additional changes for core.c
bpf: Additional changes for bpf_trace.c
bpf: Additional changes for syscall.c
bpf: Add v4.5 Makefile
bpf: Add v4.5 inode.c
bpf: Add v4.5 bpf_trace.c
bpf: Add v4.5 arraymap.c
bpf: Add v4.5 hashtab.c
bpf: Add v4.5 helpers.c
bpf: Add v4.5 verifier.c
bpf: Add v4.5 syscall.c
bpf: Add v4.5 core.c
bpf: Fix BPF_PROG_TYPE_XDP enum
bio: fix __bio_map_user_iov()
dax: remove extra put_dax call
Remove VM_FOP_EXTEND mm flag
random: Wake up writers when random pools are zapped
seccomp: Remove nr parameter from secure_computing
redhat: fix kABI for -mprofile-kernel
redhat: fix kABI for dynamic ftrace on powerpc
livepatch: send a fake signal to all blocking tasks (powerpc bits)
Bump version for RHEL-7.6
Bump version number for RHEL-7.6
remove AMD xgbe mark_hardware_unsupported quirk
amd-xgbe: mark driver as tech preview
add missing interrupt.h include
amd-xgbe: use centralized core mtu check
configs: enable build of amd xgbe network driver
drm: backport from v4.17-rc7
media: make symlink path relative
Handle NULL boot ACL entries properly
compaction: release zone irqlock in isolate_freepages_block
introduce get_user_pages_remote_flags() for __access_remote_vm()
add _TIF_UPROBE to _TIF_DO_NOTIFY_MASK
dm crypt: factor out crypt_ctr_optional
avoid NULL dereference to queue pointer
don't split THP page when MADV_FREE syscall is called
pti: Fix kexec warning on debug kernel
spec_ctrl: Fix late microcode problem with AMD
spec_ctrl: Clean up entry code & remove unused APIs
spec_ctrl: Mask off SPEC_CTRL MSR bits that are managed by kernel
spec_ctrl: add support for SSBD to RHEL IBRS entry/exit macros
spec_ctrl: Sync up RDS setting with IBRS code
spec_ctrl: Use separate PCP variables for IBRS entry and exit
arm: 7805/1: mm: change max*pfn
arm: 7797/1: mmc: Use dma_max_pfn(dev)
mmc: Enable CQE's
core: Add members to
block: allow specifying
acpi: bus: add stub
block: allocate request
asm-generic: io: implement
submit splitted bio via generic_make_request
Don't split write discard/same/erase bio in md linear/faulty/multipath
pseries: enable CPU hotplug interrupt source and sysfs
i2c-core: Fix compilation on s390x
ceph: don't set read_ahead_kb to 0 by default
Fix non-immediate TMR reference leak
Make TASK_REASSIGN use proper se_cmd->cmd_kref
Inline transport_put_cmd()
fix memory leak in lio_target_tiqn_addtpg()
remove g_device_list
Kill left-over iscsi_target_do_cleanup
Fix transport_init_se_cmd()
Remove se_device.dev_list
Add WRITE_VERIFY_16
Use kcalloc() in iscsit_allocate_iovecs()
use generic inet_pton_with_scope
Drop work-around for legacy GlobalSAN initiator
Fix early login failure statistics misses
graceful disconnect on invalid mapping to iovec
Remove se_tmr_req.tmr_lun
Add an #include directive
Fix second argument of percpu_ida_alloc()
make close_session optional
remove acl_stop
qla2xxx: Move #include qla_nvme.h to fix compile errors on RHEL 7
qla2xxx: Allow SCSI-MQ to be enabled selectively
qla2xxx: Remove cpumask variable for qla2xxx_create_qpair()
alsa: asoc: config: update the rhel configurations for the recent changes
alsa: asoc: rt5663: do not use regmap_get_device() in rt5663_irq()
alsa: asoc: da7219: change CONFIG_COMMON_CLK to CONFIG_COMMON_CLK_DA7219
alsa: asoc: add missing includes for linux/module.h
pcc: optimized pcc_send_data
add pretimeout support to the core
change watchdog_need_worker logic
Make stop function optional
Introduce WDOG_HW_RUNNING flag
Make set_timeout function optional
core: add reboot notifier support
watchdog_core: Fix a trivial typo
locking/barriers: Add nospec_barrier()
64s: Move the data access exception out-of-line
64s: Move the hdecrementer exception out-of-line
64s: Move the decrementer exception out-of-line
kdump: System memory overlap during standalone kdump
ipv4: Fix graylist symbol change when edit fib_table
nf_reset: also clear nfctinfo bits
usb: hcd: use setup_timer() helper
media annotate fall-through
core: replace p with pK
usb: early: remove unused code
Better document the hardlockup_panic sysctl
Add document of L2_CDP command line parameter
Add document of rdt command line options
membarrier: fix up sys_membarrier registration number
nfp: remove unneeded RHEL-specific block comments
netfilter: fix errors in printk
netfilter: ipset: use rbtree postorder iteration instead of opencoding
netfilter: Fix typo in Kconfig
netfilter: Fix common typo in "identify"
microcode: Load microcode on all cpus
xfs: move misplaced error check in direct write completion
rhel-only: Add null function for task_stack_vm_area() to simplify backports
mlock: wire up mlock2 system call on powerpc
mlock: wire up mlock2 system call on s390
hpwdt: Remove legacy NMI sourcing
hpwdt: Check source of NMI
hpwdt: SMBIOS check
Make diag224 public
cxgb4: use ktime_get for timestamps
iw_cxgb4: introduce __skb_put_(zero, data, u8)
iw_cxgb4: make skb_put & friends return void pointers
iw_cxgb4: convert many more places to skb_put_zero()
mlx4: use setup_timer() helper
mlx4: add XDP missing code
mlx5: use setup_timer() helper
af_iucv: enable control sends in case of SEND_SHUTDOWN
bpf: add bpf_prog_sub
bpf: rename netdev_xdp to netdev_bpf
hpsa: cleanup whitespace
hpsa: Use DEVICE_ATTR_RO
hpsa: Fix configured_logical_drive_count check
libata: enable host-wide tags
input: Fix KEY_BRIGHTNESS_MIN definition
elevator: mark parameter of elevator_aux_find() as const
elevator: move elevator_aux_find() to front of the file
sched: Enable SCHED_DEADLINE
align and prepare spectre mitigation for upstream commits
spec_ctrl: Always clear SPEC_CTRL MSRs when disabling IBRS
ipmi: retain ipmi_si for ipmi platform_device.name
psmouse - clean up code
synaptics - prevent top button pad from creating smbus device
chelsio - Remove unwanted initialization
chelsio - check for sg null
chelsio - Fix Indentation
fix memory leak for ata_link_init
vmbus: do not mark HV_PCIE as perf_device
vmbus: Make panic reporting to be more useful
kpti/kexec: fix wrong page address in clear_page
cxgb4vf: Use dev_consume_skb_any() in place of consume_skb()
cxgb4: Fix conversion of (dev_)kfree_skb to dev_kfree/consume_skb_any
cxgb4: Initialize FR_NSMR_TPTE_WR support properly
cxgb4: introduce __skb_put_(zero, data, u8)
rdma/bnxt_re: use BIT_ULL() for 64-bit bit masks
rdma/bnxt_re: qplib_fp: fix pointer cast
hw/qib/qib_init.c: use kmalloc_array_node()
sw/rdmavt/qp.c: use kmalloc_array_node()
mlx5e: Add missing XDP hunks
Update uapi/linux/fcntl.h copy from the kernel
hugetlb.c: clean up VM_WARN usage
include/linux/mmdebug.h: fix VM_WARN(_*)() with CONFIG_DEBUG_VM=n
revert "hv_netvsc: Change GPADL teardown order according to Hyper-V version"
wire up sys_membarrier()
membarrier: system-wide memory barrier
x86: Fix dell driver init order
Re-add missing SCF_ACK_KREF assignment in
tcp/dccp: Re-arm TIME_WAIT reaping hangman timer if thread slot quota is exceeded
simplify nvme_open
define NVME_NSID_ALL
fix sw/rdmavt/* kernel-doc notation
fix core/fmr_pool.c kernel-doc notation
fix core/verbs.c kernel-doc notation
drop unknown function from core_priv.h
add MMU dependency for user_mem
Add support for Intel Titan Ridge
Add 'boot' attribute for devices
Move driver ready handling to struct icm
Add constant for approval timeout
Add tb_switch_find_by_route()
Add tb_switch_get()
Correct function name in kernel-doc comment
Handle rejected Thunderbolt devices
Fix a couple right shifting to zero bugs
Initialize Thunderbolt bus earlier
Add support for frame mode
Add support for XDomain discovery protocol
Remove __packed from ICM message structures
atlantic: fix spelling error in Kconfig file
atlantic: re-enabled mark_tech_preview
aquantia: call set_irq_affinity_hint before free_irq
aquantia: atlantic: remove tech preview
testmgr: Enable DH/ECDH in FIPS mode
algif - zeroize IV buffer
vmbus: Fix a rescind issue
dh - fix memleak in setkey
Fix memory leaks in scsi_alloc_sdev()
platform: Do not reallocate device_rh
Fix device_rh leak in scsi_alloc_target()
revert "fw_cfg: add DMA register"
revert "fw_cfg: do DMA read operation"
lib: seq: Add seq_buf_printf()
libata: Fix memory leak of device_rh struct
spec_ctrl: disable IBRS in idle, part 2
pnfs/blocklayout: RHEL remove tech preview warning for SCSI layout
gfs2: Ignore trunc_dealloc requests that require more height
x86: wmi: Sort include list
x86: wmi: Clean up acpi_wmi_add
Move pci_hp_add_bridge() to pci/probe.c
dax: convert to dax_flush()
gfs2: Prevent stopping kthreads twice in gfs2_make_fs_ro
fix merge error
lpfc: Fix regression error message displayed on boot
megaraid_sas: driver version 07.702.06.00-rh3
Mark TC HW offloading as Tech Preview
kexec/64: Clear control page after PGD init
pti: Rework the UEFI data corruption fix
i40e: fix incorrect UP-TC mapping
amd: Add NULL sanity check for struct irq_2_irte.ir_data
chelsio: Fix src buffer dma length
chelsio: introduce __skb_put_zero()
rdma/bnxt_re: Add helper functions to handle async FW events
support to split big bio
introduce bio_split2() and bio_pair2_release()
fixup nvme_sysfs_delete()
rdma: Use mr pool
