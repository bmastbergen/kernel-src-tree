sfc: mark some unexported symbols as static

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author kbuild test robot <fengguang.wu@intel.com>
commit e7345ba352d15c88cf9d8698a6f5bff9c25670eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e7345ba3.failed

efx_default_channel_want_txqs() is only used in efx.c, while
 efx_ptp_want_txqs() and efx_ptp_channel_type (a struct) are only used
 in ptp.c.  In all cases these symbols should be static.

Fixes: 2935e3c38228 ("sfc: on 8000 series use TX queues for TX timestamps")
	Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
[ecree@solarflare.com: rewrote commit message]
	Signed-off-by: Edward Cree <ecree@solarflare.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e7345ba352d15c88cf9d8698a6f5bff9c25670eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/sfc/efx.c
#	drivers/net/ethernet/sfc/ptp.c
diff --cc drivers/net/ethernet/sfc/efx.c
index f8a7c1e80cda,16757cfc5b29..000000000000
--- a/drivers/net/ethernet/sfc/efx.c
+++ b/drivers/net/ethernet/sfc/efx.c
@@@ -898,6 -896,12 +898,15 @@@ void efx_schedule_slow_fill(struct efx_
  	mod_timer(&rx_queue->slow_fill, jiffies + msecs_to_jiffies(100));
  }
  
++<<<<<<< HEAD
++=======
+ static bool efx_default_channel_want_txqs(struct efx_channel *channel)
+ {
+ 	return channel->channel - channel->efx->tx_channel_offset <
+ 		channel->efx->n_tx_channels;
+ }
+ 
++>>>>>>> e7345ba352d1 (sfc: mark some unexported symbols as static)
  static const struct efx_channel_type efx_default_channel_type = {
  	.pre_probe		= efx_channel_dummy_op_int,
  	.post_remove		= efx_channel_dummy_op_void,
diff --cc drivers/net/ethernet/sfc/ptp.c
index 2147a1c1ab7b,f21661532ed3..000000000000
--- a/drivers/net/ethernet/sfc/ptp.c
+++ b/drivers/net/ethernet/sfc/ptp.c
@@@ -331,6 -353,24 +331,27 @@@ static int efx_phc_settime(struct ptp_c
  static int efx_phc_enable(struct ptp_clock_info *ptp,
  			  struct ptp_clock_request *request, int on);
  
++<<<<<<< HEAD
++=======
+ bool efx_ptp_use_mac_tx_timestamps(struct efx_nic *efx)
+ {
+ 	struct efx_ef10_nic_data *nic_data = efx->nic_data;
+ 
+ 	return ((efx_nic_rev(efx) >= EFX_REV_HUNT_A0) &&
+ 		(nic_data->datapath_caps2 &
+ 		 (1 << MC_CMD_GET_CAPABILITIES_V2_OUT_TX_MAC_TIMESTAMPING_LBN)
+ 		));
+ }
+ 
+ /* PTP 'extra' channel is still a traffic channel, but we only create TX queues
+  * if PTP uses MAC TX timestamps, not if PTP uses the MC directly to transmit.
+  */
+ static bool efx_ptp_want_txqs(struct efx_channel *channel)
+ {
+ 	return efx_ptp_use_mac_tx_timestamps(channel->efx);
+ }
+ 
++>>>>>>> e7345ba352d1 (sfc: mark some unexported symbols as static)
  #define PTP_SW_STAT(ext_name, field_name)				\
  	{ #ext_name, 0, offsetof(struct efx_ptp_data, field_name) }
  #define PTP_MC_STAT(ext_name, mcdi_name)				\
* Unmerged path drivers/net/ethernet/sfc/efx.c
* Unmerged path drivers/net/ethernet/sfc/ptp.c
