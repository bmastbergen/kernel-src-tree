pNFS: Always free the session slot on error in nfs4_layoutget_handle_exception

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 2dbf8dffbf35fd8f611083b9d9fe74fdccf912a3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2dbf8dff.failed

Right now, we can call nfs_commit_inode() while holding the session slot,
which could lead to NFSv4 deadlocks. Ensure we only keep the slot if
the server returned a layout that we have to process.

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 2dbf8dffbf35fd8f611083b9d9fe74fdccf912a3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4proc.c
diff --cc fs/nfs/nfs4proc.c
index 46d09b9774b6,2c8c2696415e..000000000000
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@@ -8571,12 -8786,17 +8572,22 @@@ nfs4_proc_layoutget(struct nfs4_layoutg
  	task = rpc_run_task(&task_setup_data);
  	if (IS_ERR(task))
  		return ERR_CAST(task);
++<<<<<<< HEAD
 +	status = nfs4_wait_for_completion_rpc_task(task);
 +	if (status == 0) {
++=======
+ 	status = rpc_wait_for_completion_task(task);
+ 	if (status != 0)
+ 		goto out;
+ 
+ 	/* if layoutp->len is 0, nfs4_layoutget_prepare called rpc_exit */
+ 	if (task->tk_status < 0 || lgp->res.layoutp->len == 0) {
++>>>>>>> 2dbf8dffbf35 (pNFS: Always free the session slot on error in nfs4_layoutget_handle_exception)
  		status = nfs4_layoutget_handle_exception(task, lgp, &exception);
  		*timeout = exception.timeout;
- 	}
- 
+ 	} else
+ 		lseg = pnfs_layout_process(lgp);
+ out:
  	trace_nfs4_layoutget(lgp->args.ctx,
  			&lgp->args.range,
  			&lgp->res.range,
* Unmerged path fs/nfs/nfs4proc.c
