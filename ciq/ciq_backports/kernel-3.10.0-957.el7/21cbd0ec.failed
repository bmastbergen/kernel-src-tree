r8152: split rtl8152_resume function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author hayeswang <hayeswang@realtek.com>
commit 21cbd0ecad7943bbd4f7d10efaade0380637d4a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/21cbd0ec.failed

Split rtl8152_resume() into rtl8152_runtime_resume() and
rtl8152_system_resume().

Besides, replace GFP_KERNEL with GFP_NOIO for usb_submit_urb().

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 21cbd0ecad7943bbd4f7d10efaade0380637d4a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index 5ad8e798f84c,c7663e10707c..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -3780,48 -4442,14 +3835,59 @@@ static int rtl8152_suspend(struct usb_i
  static int rtl8152_resume(struct usb_interface *intf)
  {
  	struct r8152 *tp = usb_get_intfdata(intf);
++<<<<<<< HEAD
 +
 +	mutex_lock(&tp->control);
 +
 +	if (!test_bit(SELECTIVE_SUSPEND, &tp->flags)) {
 +		tp->rtl_ops.init(tp);
 +		queue_delayed_work(system_long_wq, &tp->hw_phy_work, 0);
 +		netif_device_attach(tp->netdev);
 +	}
 +
 +	if (netif_running(tp->netdev) && tp->netdev->flags & IFF_UP) {
 +		if (test_bit(SELECTIVE_SUSPEND, &tp->flags)) {
 +			tp->rtl_ops.autosuspend_en(tp, false);
 +			napi_disable(&tp->napi);
 +			set_bit(WORK_ENABLE, &tp->flags);
 +
 +			if (netif_carrier_ok(tp->netdev)) {
 +				if (rtl8152_get_speed(tp) & LINK_STATUS) {
 +					rtl_start_rx(tp);
 +				} else {
 +					netif_carrier_off(tp->netdev);
 +					tp->rtl_ops.disable(tp);
 +					netif_info(tp, link, tp->netdev,
 +						   "linking down\n");
 +				}
 +			}
 +
 +			napi_enable(&tp->napi);
 +			clear_bit(SELECTIVE_SUSPEND, &tp->flags);
 +			smp_mb__after_atomic();
 +			if (!list_empty(&tp->rx_done))
 +				napi_schedule(&tp->napi);
 +		} else {
 +			tp->rtl_ops.up(tp);
 +			netif_carrier_off(tp->netdev);
 +			set_bit(WORK_ENABLE, &tp->flags);
 +		}
 +		usb_submit_urb(tp->intr_urb, GFP_KERNEL);
 +	} else if (test_bit(SELECTIVE_SUSPEND, &tp->flags)) {
 +		if (tp->netdev->flags & IFF_UP)
 +			tp->rtl_ops.autosuspend_en(tp, false);
 +		clear_bit(SELECTIVE_SUSPEND, &tp->flags);
 +	}
++=======
+ 	int ret;
+ 
+ 	mutex_lock(&tp->control);
+ 
+ 	if (test_bit(SELECTIVE_SUSPEND, &tp->flags))
+ 		ret = rtl8152_runtime_resume(tp);
+ 	else
+ 		ret = rtl8152_system_resume(tp);
++>>>>>>> 21cbd0ecad79 (r8152: split rtl8152_resume function)
  
  	mutex_unlock(&tp->control);
  
* Unmerged path drivers/net/usb/r8152.c
