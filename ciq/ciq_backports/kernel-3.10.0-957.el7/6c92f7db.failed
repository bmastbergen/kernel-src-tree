scsi: aacraid: Fix 2T+ drives on SmartIOC-2000

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] aacraid: Fix 2T+ drives on SmartIOC-2000 (Raghava Aditya Renukunta) [1519664]
Rebuild_FUZZ: 93.02%
commit-author Dave Carroll <david.carroll@microsemi.com>
commit 6c92f7dbf25c36f35320e4ae0b508676410bac04
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6c92f7db.failed

The logic for supporting large drives was previously tied to 4Kn support
for SmartIOC-2000. As SmartIOC-2000 does not support volumes using 4Kn
drives, use the intended option flag AAC_OPT_NEW_COMM_64 to determine
support for volumes greater than 2T.

	Cc: <stable@vger.kernel.org>
	Signed-off-by: Dave Carroll <david.carroll@microsemi.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 6c92f7dbf25c36f35320e4ae0b508676410bac04)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/aacraid/aacraid.h
diff --cc drivers/scsi/aacraid/aacraid.h
index c922d53b406a,403a639574e5..000000000000
--- a/drivers/scsi/aacraid/aacraid.h
+++ b/drivers/scsi/aacraid/aacraid.h
@@@ -2690,6 -2689,23 +2690,26 @@@ int aac_probe_container(struct aac_dev 
  int _aac_rx_init(struct aac_dev *dev);
  int aac_rx_select_comm(struct aac_dev *dev, int comm);
  int aac_rx_deliver_producer(struct fib * fib);
++<<<<<<< HEAD
++=======
+ 
+ static inline int aac_is_src(struct aac_dev *dev)
+ {
+ 	u16 device = dev->pdev->device;
+ 
+ 	if (device == PMC_DEVICE_S6 ||
+ 		device == PMC_DEVICE_S7 ||
+ 		device == PMC_DEVICE_S8)
+ 		return 1;
+ 	return 0;
+ }
+ 
+ static inline int aac_supports_2T(struct aac_dev *dev)
+ {
+ 	return (dev->adapter_info.options & AAC_OPT_NEW_COMM_64);
+ }
+ 
++>>>>>>> 6c92f7dbf25c (scsi: aacraid: Fix 2T+ drives on SmartIOC-2000)
  char * get_container_type(unsigned type);
  extern int numacb;
  extern char aac_driver_version[];
diff --git a/drivers/scsi/aacraid/aachba.c b/drivers/scsi/aacraid/aachba.c
index a64285ab0728..af3e4d3f9735 100644
--- a/drivers/scsi/aacraid/aachba.c
+++ b/drivers/scsi/aacraid/aachba.c
@@ -699,13 +699,13 @@ static void _aac_probe_container1(void * context, struct fib * fibptr)
 	int status;
 
 	dresp = (struct aac_mount *) fib_data(fibptr);
-	if (!(fibptr->dev->supplement_adapter_info.supported_options2 &
-	    AAC_OPTION_VARIABLE_BLOCK_SIZE))
+	if (!aac_supports_2T(fibptr->dev)) {
 		dresp->mnt[0].capacityhigh = 0;
-	if ((le32_to_cpu(dresp->status) != ST_OK) ||
-	    (le32_to_cpu(dresp->mnt[0].vol) != CT_NONE)) {
-		_aac_probe_container2(context, fibptr);
-		return;
+		if ((le32_to_cpu(dresp->status) == ST_OK) &&
+			(le32_to_cpu(dresp->mnt[0].vol) != CT_NONE)) {
+			_aac_probe_container2(context, fibptr);
+			return;
+		}
 	}
 	scsicmd = (struct scsi_cmnd *) context;
 
* Unmerged path drivers/scsi/aacraid/aacraid.h
