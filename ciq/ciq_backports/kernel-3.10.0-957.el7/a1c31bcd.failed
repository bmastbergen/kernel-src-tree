platform/x86: wmi: Fix error handling when creating devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [platform] x86: wmi: Fix error handling when creating devices (Jarod Wilson) [1562200]
Rebuild_FUZZ: 91.74%
commit-author Andy Lutomirski <luto@kernel.org>
commit a1c31bcd5772b13b39b028126fa9de918c36cf26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/a1c31bcd.failed

We have two memory leaks. If guid_already_parsed returned true, we leak
the wmi_block. If wmi_create_device failed, we leak the device.

Simplify the logic and fix both of them.

	Signed-off-by: Andy Lutomirski <luto@kernel.org>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Mario Limonciello <mario_limonciello@dell.com>
	Cc: Pali Roh√°r <pali.rohar@gmail.com>
	Cc: linux-kernel@vger.kernel.org
	Cc: platform-driver-x86@vger.kernel.org
	Cc: linux-acpi@vger.kernel.org
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
(cherry picked from commit a1c31bcd5772b13b39b028126fa9de918c36cf26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/wmi.c
diff --cc drivers/platform/x86/wmi.c
index 84dcc7a04b0a,31c317fb65dc..000000000000
--- a/drivers/platform/x86/wmi.c
+++ b/drivers/platform/x86/wmi.c
@@@ -776,18 -773,12 +785,27 @@@ static int parse_wdg(struct acpi_devic
  		wblock->acpi_device = device;
  		wblock->gblock = gblock[i];
  
++<<<<<<< HEAD
 +		/*
 +		  Some WMI devices, like those for nVidia hooks, have a
 +		  duplicate GUID. It's not clear what we should do in this
 +		  case yet, so for now, we'll just ignore the duplicate
 +		  for device creation.
 +		*/
 +		if (!guid_already_parsed(device, gblock[i].guid)) {
 +			retval = wmi_create_device(&gblock[i], wblock, device);
 +			if (retval) {
 +				wmi_free_devices(device);
 +				goto out_free_pointer;
 +			}
++=======
+ 		retval = wmi_create_device(wmi_bus_dev, &gblock[i],
+ 					   wblock, device);
+ 		if (retval) {
+ 			put_device(&wblock->dev.dev);
+ 			wmi_free_devices(device);
+ 			goto out_free_pointer;
++>>>>>>> a1c31bcd5772 (platform/x86: wmi: Fix error handling when creating devices)
  		}
  
  		list_add_tail(&wblock->list, &wmi_block_list);
* Unmerged path drivers/platform/x86/wmi.c
