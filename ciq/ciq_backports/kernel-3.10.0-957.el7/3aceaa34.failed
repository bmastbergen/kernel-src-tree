Input: trackpoint - combine calls to ps2_command()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [input] trackpoint - combine calls to ps2_command() (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 92.47%
commit-author Dmitry Torokhov <dmitry.torokhov@gmail.com>
commit 3aceaa34d7723c2556555b05ad04a89ce2d66374
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3aceaa34.failed

We do not need to call ps2_command() several times in a row, transmitting
every byte as it were a command byte, we can often pack it all in a single
command.

Also, now that ps2_command() handles retransmission, we do not need to do
it ourselves in trackpoint_power_on_reset().

	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit 3aceaa34d7723c2556555b05ad04a89ce2d66374)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/mouse/trackpoint.c
diff --cc drivers/input/mouse/trackpoint.c
index ce6ff9b301bb,6590d10f166f..000000000000
--- a/drivers/input/mouse/trackpoint.c
+++ b/drivers/input/mouse/trackpoint.c
@@@ -26,19 -33,16 +26,26 @@@
   */
  static int trackpoint_power_on_reset(struct ps2dev *ps2dev)
  {
++<<<<<<< HEAD
 +	unsigned char results[2];
 +	int tries = 0;
++=======
+ 	u8 param[2] = { TP_POR };
+ 	int err;
++>>>>>>> 3aceaa34d772 (Input: trackpoint - combine calls to ps2_command())
  
- 	/* Issue POR command, and repeat up to once if 0xFC00 received */
- 	do {
- 		if (ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, TP_COMMAND)) ||
- 		    ps2_command(ps2dev, results, MAKE_PS2_CMD(0, 2, TP_POR)))
- 			return -1;
- 	} while (results[0] == 0xFC && results[1] == 0x00 && ++tries < 2);
+ 	err = ps2_command(ps2dev, param, MAKE_PS2_CMD(1, 2, TP_COMMAND));
+ 	if (err)
+ 		return err;
  
  	/* Check for success response -- 0xAA00 */
++<<<<<<< HEAD
 +	if (results[0] != 0xAA || results[1] != 0x00)
 +		return -1;
++=======
+ 	if (param[0] != 0xAA || param[1] != 0x00)
+ 		return -ENODEV;
++>>>>>>> 3aceaa34d772 (Input: trackpoint - combine calls to ps2_command())
  
  	return 0;
  }
@@@ -46,54 -50,41 +53,49 @@@
  /*
   * Device IO: read, write and toggle bit
   */
 -static int trackpoint_read(struct ps2dev *ps2dev, u8 loc, u8 *results)
 +static int trackpoint_read(struct ps2dev *ps2dev,
 +			   unsigned char loc, unsigned char *results)
  {
- 	if (ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, TP_COMMAND)) ||
- 	    ps2_command(ps2dev, results, MAKE_PS2_CMD(0, 1, loc))) {
- 		return -1;
- 	}
+ 	results[0] = loc;
  
- 	return 0;
+ 	return ps2_command(ps2dev, results, MAKE_PS2_CMD(1, 1, TP_COMMAND));
  }
  
 -static int trackpoint_write(struct ps2dev *ps2dev, u8 loc, u8 val)
 +static int trackpoint_write(struct ps2dev *ps2dev,
 +			    unsigned char loc, unsigned char val)
  {
- 	if (ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, TP_COMMAND)) ||
- 	    ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, TP_WRITE_MEM)) ||
- 	    ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, loc)) ||
- 	    ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, val))) {
- 		return -1;
- 	}
+ 	u8 param[3] = { TP_WRITE_MEM, loc, val };
  
- 	return 0;
+ 	return ps2_command(ps2dev, param, MAKE_PS2_CMD(3, 0, TP_COMMAND));
  }
  
 -static int trackpoint_toggle_bit(struct ps2dev *ps2dev, u8 loc, u8 mask)
 +static int trackpoint_toggle_bit(struct ps2dev *ps2dev,
 +				 unsigned char loc, unsigned char mask)
  {
+ 	u8 param[3] = { TP_TOGGLE, loc, mask };
+ 
  	/* Bad things will happen if the loc param isn't in this range */
  	if (loc < 0x20 || loc >= 0x2F)
- 		return -1;
- 
- 	if (ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, TP_COMMAND)) ||
- 	    ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, TP_TOGGLE)) ||
- 	    ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, loc)) ||
- 	    ps2_command(ps2dev, NULL, MAKE_PS2_CMD(0, 0, mask))) {
- 		return -1;
- 	}
+ 		return -EINVAL;
  
- 	return 0;
+ 	return ps2_command(ps2dev, param, MAKE_PS2_CMD(3, 0, TP_COMMAND));
  }
  
 -static int trackpoint_update_bit(struct ps2dev *ps2dev,
 -				 u8 loc, u8 mask, u8 value)
 +static int trackpoint_update_bit(struct ps2dev *ps2dev, unsigned char loc,
 +				 unsigned char mask, unsigned char value)
  {
++<<<<<<< HEAD
 +	int retval = 0;
 +	unsigned char data;
++=======
+ 	int retval;
+ 	u8 data;
++>>>>>>> 3aceaa34d772 (Input: trackpoint - combine calls to ps2_command())
+ 
+ 	retval = trackpoint_read(ps2dev, loc, &data);
+ 	if (retval)
+ 		return retval;
  
- 	trackpoint_read(ps2dev, loc, &data);
  	if (((data & mask) == mask) != !!value)
  		retval = trackpoint_toggle_bit(ps2dev, loc, mask);
  
* Unmerged path drivers/input/mouse/trackpoint.c
