mmc: block: Fix is_waiting_last_req set incorrectly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [mmc] block: Fix is_waiting_last_req set incorrectly (Gopal Tiwari) [1549495]
Rebuild_FUZZ: 94.85%
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit 2602b740e45cc64feb55d5a9ee8db744ab3becbb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2602b740.failed

Commit 15520111500c ("mmc: core: Further fix thread wake-up") allowed a
queue to release the host with is_waiting_last_req set to true. A queue
waiting to claim the host will not reset it, which can result in the
queue getting stuck in a loop.

Fixes: 15520111500c ("mmc: core: Further fix thread wake-up")
	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Cc: stable@vger.kernel.org # v4.10+
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 2602b740e45cc64feb55d5a9ee8db744ab3becbb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/block.c
diff --cc drivers/mmc/core/block.c
index 49dc294d6eb1,e59107ca512a..000000000000
--- a/drivers/mmc/core/block.c
+++ b/drivers/mmc/core/block.c
@@@ -1785,9 -1814,10 +1785,14 @@@ int mmc_blk_issue_rq(struct mmc_queue *
  		/* complete ongoing async transfer before issuing flush */
  		if (card->host->areq)
  			mmc_blk_issue_rw_rq(mq, NULL);
 -		mmc_blk_issue_flush(mq, req);
 +		ret = mmc_blk_issue_flush(mq, req);
  	} else {
++<<<<<<< HEAD
 +		ret = mmc_blk_issue_rw_rq(mq, req);
++=======
+ 		mmc_blk_issue_rw_rq(mq, req);
+ 		card->host->context_info.is_waiting_last_req = false;
++>>>>>>> 2602b740e45c (mmc: block: Fix is_waiting_last_req set incorrectly)
  	}
  
  out:
* Unmerged path drivers/mmc/core/block.c
