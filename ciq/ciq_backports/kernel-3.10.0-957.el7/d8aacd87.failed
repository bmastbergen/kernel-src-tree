netfilter: ipset: Check IPSET_ATTR_ETHER netlink attribute length

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
commit d8aacd87180141ff6b812b53de77a4336e87c91a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d8aacd87.failed

Julia Lawall pointed out that IPSET_ATTR_ETHER netlink attribute length
was not checked explicitly, just for the maximum possible size. Malicious
netlink clients could send shorter attribute and thus resulting a kernel
read after the buffer.

The patch adds the explicit length checkings.

	Reported-by: Julia Lawall <julia.lawall@lip6.fr>
	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit d8aacd87180141ff6b812b53de77a4336e87c91a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_bitmap_ipmac.c
#	net/netfilter/ipset/ip_set_hash_mac.c
diff --cc net/netfilter/ipset/ip_set_bitmap_ipmac.c
index b2a7bea3f7b6,9a065f672d3a..000000000000
--- a/net/netfilter/ipset/ip_set_bitmap_ipmac.c
+++ b/net/netfilter/ipset/ip_set_bitmap_ipmac.c
@@@ -268,11 -266,12 +268,20 @@@ bitmap_ipmac_uadt(struct ip_set *set, s
  		return -IPSET_ERR_BITMAP_RANGE;
  
  	e.id = ip_to_id(map, ip);
++<<<<<<< HEAD
 +	if (tb[IPSET_ATTR_ETHER])
 +		e.ether = nla_data(tb[IPSET_ATTR_ETHER]);
 +	else
 +		e.ether = NULL;
 +
++=======
+ 	if (tb[IPSET_ATTR_ETHER]) {
+ 		if (nla_len(tb[IPSET_ATTR_ETHER]) != ETH_ALEN)
+ 			return -IPSET_ERR_PROTOCOL;
+ 		memcpy(e.ether, nla_data(tb[IPSET_ATTR_ETHER]), ETH_ALEN);
+ 		e.add_mac = 1;
+ 	}
++>>>>>>> d8aacd871801 (netfilter: ipset: Check IPSET_ATTR_ETHER netlink attribute length)
  	ret = adtfn(set, &e, &ext, &ext, flags);
  
  	return ip_set_eexist(ret, flags) ? 0 : ret;
* Unmerged path net/netfilter/ipset/ip_set_hash_mac.c
* Unmerged path net/netfilter/ipset/ip_set_bitmap_ipmac.c
* Unmerged path net/netfilter/ipset/ip_set_hash_mac.c
