nvme: fix the dangerous reference of namespaces list

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] fix the dangerous reference of namespaces list (David Milburn) [1515584]
Rebuild_FUZZ: 93.88%
commit-author Jianchao Wang <jianchao.w.wang@oracle.com>
commit 6f8e0d787e3727ed70116e3523f4ecb86887c000
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6f8e0d78.failed

nvme_remove_namespaces and nvme_remove_invalid_namespaces reference
the ctrl->namespaces list w/o holding namespaces_mutext. It is ok
to invoke nvme_ns_remove there, but what if there is others.

To be safer, reference the ctrl->namespaces list under
namespaces_mutext.

	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jianchao Wang <jianchao.w.wang@oracle.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 6f8e0d787e3727ed70116e3523f4ecb86887c000)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index d63d62bfc80f,31f20f4643cf..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -2247,11 -3098,18 +2247,23 @@@ static void nvme_remove_invalid_namespa
  					unsigned nsid)
  {
  	struct nvme_ns *ns, *next;
+ 	LIST_HEAD(rm_list);
  
+ 	mutex_lock(&ctrl->namespaces_mutex);
  	list_for_each_entry_safe(ns, next, &ctrl->namespaces, list) {
++<<<<<<< HEAD
 +		if (ns->ns_id > nsid)
 +			nvme_ns_remove(ns);
++=======
+ 		if (ns->head->ns_id > nsid)
+ 			list_move_tail(&ns->list, &rm_list);
++>>>>>>> 6f8e0d787e37 (nvme: fix the dangerous reference of namespaces list)
  	}
+ 	mutex_unlock(&ctrl->namespaces_mutex);
+ 
+ 	list_for_each_entry_safe(ns, next, &rm_list, list)
+ 		nvme_ns_remove(ns);
+ 
  }
  
  static int nvme_scan_ns_list(struct nvme_ctrl *ctrl, unsigned nn)
* Unmerged path drivers/nvme/host/core.c
