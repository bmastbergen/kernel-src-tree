cfg80211: initialize regulatory keys/database later

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Johannes Berg <johannes.berg@intel.com>
commit d7be102f2945a626f55e0501e52bb31ba3e77b81
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d7be102f.failed

When cfg80211 is built as a module, everything is fine, and we
can keep the code as is; in fact, we have to, because there can
only be a single module_init().

When cfg80211 is built-in, however, it needs to initialize
before drivers (device_initcall/module_init), and thus used to
be at subsys_initcall(). I'd moved it to fs_initcall() earlier,
where it can remain. However, this is still too early because at
that point the key infrastructure hasn't been initialized yet,
so X.509 certificates can't be parsed yet.

To work around this problem, load the regdb keys only later in
a late_initcall(), at which point the necessary infrastructure
has been initialized.

Fixes: 90a53e4432b1 ("cfg80211: implement regdb signature checking")
	Reported-by: Xiaolong Ye <xiaolong.ye@intel.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit d7be102f2945a626f55e0501e52bb31ba3e77b81)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/wireless/reg.c
diff --cc net/wireless/reg.c
index e9aeb05aaf3e,78e71b0390be..000000000000
--- a/net/wireless/reg.c
+++ b/net/wireless/reg.c
@@@ -3528,24 -3644,13 +3528,30 @@@ void regulatory_propagate_dfs_state(str
  	}
  }
  
- int __init regulatory_init(void)
+ static int __init regulatory_init_db(void)
  {
- 	int err = 0;
+ 	int err;
  
++<<<<<<< HEAD
 +	reg_pdev = platform_device_register_simple("regulatory", 0, NULL, 0);
 +	if (IS_ERR(reg_pdev))
 +		return PTR_ERR(reg_pdev);
 +
 +	spin_lock_init(&reg_requests_lock);
 +	spin_lock_init(&reg_pending_beacons_lock);
 +	spin_lock_init(&reg_indoor_lock);
 +
 +	reg_regdb_size_check();
 +
 +	rcu_assign_pointer(cfg80211_regdomain, cfg80211_world_regdom);
 +
 +	user_alpha2[0] = '9';
 +	user_alpha2[1] = '7';
++=======
+ 	err = load_builtin_regdb_keys();
+ 	if (err)
+ 		return err;
++>>>>>>> d7be102f2945 (cfg80211: initialize regulatory keys/database later)
  
  	/* We always try to get an update for the static regdomain */
  	err = regulatory_hint_core(cfg80211_world_regdom->alpha2);
* Unmerged path net/wireless/reg.c
