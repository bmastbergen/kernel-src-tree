netfilter: ipset: Add skbinfo extension kernel support for the hash set types.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] netfilter: ipset: Add skbinfo extension kernel support for the hash set types (Stefano Brivio) [1557599]
Rebuild_FUZZ: 99.35%
commit-author Anton Danilov <littlesmilingcloud@gmail.com>
commit af331419d34e2fc0e2d0c629734f8d160f95a3ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/af331419.failed

Add skbinfo extension kernel support for the hash set types.
Inroduce the new revisions of all hash set types.

	Signed-off-by: Anton Danilov <littlesmilingcloud@gmail.com>
	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit af331419d34e2fc0e2d0c629734f8d160f95a3ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_hash_gen.h
#	net/netfilter/ipset/ip_set_hash_ip.c
#	net/netfilter/ipset/ip_set_hash_ipmark.c
#	net/netfilter/ipset/ip_set_hash_ipport.c
#	net/netfilter/ipset/ip_set_hash_ipportip.c
#	net/netfilter/ipset/ip_set_hash_ipportnet.c
#	net/netfilter/ipset/ip_set_hash_net.c
#	net/netfilter/ipset/ip_set_hash_netiface.c
#	net/netfilter/ipset/ip_set_hash_netnet.c
#	net/netfilter/ipset/ip_set_hash_netport.c
#	net/netfilter/ipset/ip_set_hash_netportnet.c
diff --cc net/netfilter/ipset/ip_set_hash_gen.h
index 72686abe715e,ac3a268287d9..000000000000
--- a/net/netfilter/ipset/ip_set_hash_gen.h
+++ b/net/netfilter/ipset/ip_set_hash_gen.h
@@@ -663,9 -715,13 +663,17 @@@ reuse_slot
  	mtype_data_set_flags(data, flags);
  #endif
  	if (SET_WITH_TIMEOUT(set))
 -		ip_set_timeout_set(ext_timeout(data, set), ext->timeout);
 +		ip_set_timeout_set(ext_timeout(data, h), ext->timeout);
  	if (SET_WITH_COUNTER(set))
++<<<<<<< HEAD
 +		ip_set_init_counter(ext_counter(data, h), ext);
++=======
+ 		ip_set_init_counter(ext_counter(data, set), ext);
+ 	if (SET_WITH_COMMENT(set))
+ 		ip_set_init_comment(ext_comment(data, set), ext);
+ 	if (SET_WITH_SKBINFO(set))
+ 		ip_set_init_skbinfo(ext_skbinfo(data, set), ext);
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  out:
  	rcu_read_unlock_bh();
@@@ -728,9 -797,11 +736,12 @@@ mtype_data_match(struct mtype_elem *dat
  		 struct ip_set_ext *mext, struct ip_set *set, u32 flags)
  {
  	if (SET_WITH_COUNTER(set))
 -		ip_set_update_counter(ext_counter(data, set),
 +		ip_set_update_counter(ext_counter(data,
 +						  (struct htype *)(set->data)),
  				      ext, mext, flags);
+ 	if (SET_WITH_SKBINFO(set))
+ 		ip_set_get_skbinfo(ext_skbinfo(data, set),
+ 				   ext, mext, flags);
  	return mtype_do_data_match(data);
  }
  
diff --cc net/netfilter/ipset/ip_set_hash_ip.c
index 260c9a80d8a5,76959d79e9d1..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ip.c
+++ b/net/netfilter/ipset/ip_set_hash_ip.c
@@@ -24,7 -24,10 +24,14 @@@
  #include <linux/netfilter/ipset/ip_set_hash.h>
  
  #define IPSET_TYPE_REV_MIN	0
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	1	/* Counters support */
++=======
+ /*				1	   Counters support */
+ /*				2	   Comments support */
+ /*				3	   Forceadd support */
+ #define IPSET_TYPE_REV_MAX	4	/* skbinfo support  */
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -324,6 -301,10 +337,13 @@@ static struct ip_set_type hash_ip_type 
  		[IPSET_ATTR_LINENO]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  	},
  	.me		= THIS_MODULE,
  };
diff --cc net/netfilter/ipset/ip_set_hash_ipmark.c
index e56c0d916fac,7abf9788cfa8..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipmark.c
+++ b/net/netfilter/ipset/ip_set_hash_ipmark.c
@@@ -25,7 -25,8 +25,12 @@@
  #include <linux/netfilter/ipset/ip_set_hash.h>
  
  #define IPSET_TYPE_REV_MIN	0
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	0
++=======
+ /*				1	   Forceadd support */
+ #define IPSET_TYPE_REV_MAX	2	/* skbinfo support  */
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Vytas Dauksa <vytas.dauksa@smoothwall.net>");
diff --cc net/netfilter/ipset/ip_set_hash_ipport.c
index 64caad35a391,dcbcceb9a52f..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipport.c
+++ b/net/netfilter/ipset/ip_set_hash_ipport.c
@@@ -26,7 -26,10 +26,14 @@@
  
  #define IPSET_TYPE_REV_MIN	0
  /*				1    SCTP and UDPLITE support added */
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	2 /* Counters support added */
++=======
+ /*				2    Counters support added */
+ /*				3    Comments support added */
+ /*				4    Forceadd support added */
+ #define IPSET_TYPE_REV_MAX	5 /* skbinfo support added */
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -419,6 -376,10 +432,13 @@@ static struct ip_set_type hash_ipport_t
  		[IPSET_ATTR_LINENO]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  	},
  	.me		= THIS_MODULE,
  };
diff --cc net/netfilter/ipset/ip_set_hash_ipportip.c
index 2873bbc20d7a,7ef93fc887a1..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipportip.c
+++ b/net/netfilter/ipset/ip_set_hash_ipportip.c
@@@ -26,7 -26,10 +26,14 @@@
  
  #define IPSET_TYPE_REV_MIN	0
  /*				1    SCTP and UDPLITE support added */
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	2 /* Counters support added */
++=======
+ /*				2    Counters support added */
+ /*				3    Comments support added */
+ /*				4    Forceadd support added */
+ #define IPSET_TYPE_REV_MAX	5 /* skbinfo support added */
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -437,6 -388,10 +450,13 @@@ static struct ip_set_type hash_ipportip
  		[IPSET_ATTR_LINENO]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  	},
  	.me		= THIS_MODULE,
  };
diff --cc net/netfilter/ipset/ip_set_hash_ipportnet.c
index f111558c4597,b6012ad92781..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipportnet.c
+++ b/net/netfilter/ipset/ip_set_hash_ipportnet.c
@@@ -28,7 -28,10 +28,14 @@@
  /*				1    SCTP and UDPLITE support added */
  /*				2    Range as input support for IPv4 added */
  /*				3    nomatch flag support added */
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	4 /* Counters support added */
++=======
+ /*				4    Counters support added */
+ /*				5    Comments support added */
+ /*				6    Forceadd support added */
+ #define IPSET_TYPE_REV_MAX	7 /* skbinfo support added */
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -600,6 -547,10 +613,13 @@@ static struct ip_set_type hash_ipportne
  		[IPSET_ATTR_LINENO]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  	},
  	.me		= THIS_MODULE,
  };
diff --cc net/netfilter/ipset/ip_set_hash_net.c
index 0a64dad156d9,6b3ac10ac2f1..000000000000
--- a/net/netfilter/ipset/ip_set_hash_net.c
+++ b/net/netfilter/ipset/ip_set_hash_net.c
@@@ -25,7 -25,10 +25,14 @@@
  #define IPSET_TYPE_REV_MIN	0
  /*				1    Range as input support for IPv4 added */
  /*				2    nomatch flag support added */
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	3 /* Counters support added */
++=======
+ /*				3    Counters support added */
+ /*				4    Comments support added */
+ /*				5    Forceadd support added */
+ #define IPSET_TYPE_REV_MAX	6 /* skbinfo mapping support added */
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -425,6 -383,10 +438,13 @@@ static struct ip_set_type hash_net_typ
  		[IPSET_ATTR_CADT_FLAGS]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  	},
  	.me		= THIS_MODULE,
  };
diff --cc net/netfilter/ipset/ip_set_hash_netiface.c
index 8bdeb0791689,03cdb69ac9bf..000000000000
--- a/net/netfilter/ipset/ip_set_hash_netiface.c
+++ b/net/netfilter/ipset/ip_set_hash_netiface.c
@@@ -27,7 -26,10 +27,14 @@@
  #define IPSET_TYPE_REV_MIN	0
  /*				1    nomatch flag support added */
  /*				2    /0 support added */
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	3 /* Counters support added */
++=======
+ /*				3    Counters support added */
+ /*				4    Comments support added */
+ /*				5    Forceadd support added */
+ #define IPSET_TYPE_REV_MAX	6 /* skbinfo support added */
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -684,6 -596,10 +697,13 @@@ static struct ip_set_type hash_netiface
  		[IPSET_ATTR_LINENO]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  	},
  	.me		= THIS_MODULE,
  };
diff --cc net/netfilter/ipset/ip_set_hash_netport.c
index d98a685cd916,c0ddb58d19dc..000000000000
--- a/net/netfilter/ipset/ip_set_hash_netport.c
+++ b/net/netfilter/ipset/ip_set_hash_netport.c
@@@ -27,7 -27,10 +27,14 @@@
  /*				1    SCTP and UDPLITE support added */
  /*				2    Range as input support for IPv4 added */
  /*				3    nomatch flag support added */
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	4 /* Counters support added */
++=======
+ /*				4    Counters support added */
+ /*				5    Comments support added */
+ /*				6    Forceadd support added */
+ #define IPSET_TYPE_REV_MAX	7 /* skbinfo support added */
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -542,6 -495,10 +555,13 @@@ static struct ip_set_type hash_netport_
  		[IPSET_ATTR_CADT_FLAGS]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> af331419d34e (netfilter: ipset: Add skbinfo extension kernel support for the hash set types.)
  	},
  	.me		= THIS_MODULE,
  };
* Unmerged path net/netfilter/ipset/ip_set_hash_netnet.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netportnet.c
* Unmerged path net/netfilter/ipset/ip_set_hash_gen.h
* Unmerged path net/netfilter/ipset/ip_set_hash_ip.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipmark.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipport.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipportip.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipportnet.c
* Unmerged path net/netfilter/ipset/ip_set_hash_net.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netiface.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netnet.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netport.c
* Unmerged path net/netfilter/ipset/ip_set_hash_netportnet.c
