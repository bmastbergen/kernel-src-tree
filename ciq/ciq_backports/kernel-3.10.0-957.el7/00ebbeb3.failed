platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [platform] x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model (Jarod Wilson) [1526317]
Rebuild_FUZZ: 93.88%
commit-author Andy Lutomirski <luto@kernel.org>
commit 00ebbeb39b70072cc0d0acad32c47e4660eb84e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/00ebbeb3.failed

This converts dell_wmi_check_descriptor_buffer() to the new driver
model interface and puts the interface version in dell_wmi_priv
where it belongs.

	Signed-off-by: Andy Lutomirski <luto@kernel.org>
	Reviewed-by: Pali Roh√°r <pali.rohar@gmail.com>
	Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
(cherry picked from commit 00ebbeb39b70072cc0d0acad32c47e4660eb84e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/dell-wmi.c
diff --cc drivers/platform/x86/dell-wmi.c
index 91c39b6c1524,28d9f8696081..000000000000
--- a/drivers/platform/x86/dell-wmi.c
+++ b/drivers/platform/x86/dell-wmi.c
@@@ -46,13 -48,16 +46,24 @@@ MODULE_LICENSE("GPL")
  #define DELL_EVENT_GUID "9DBB5994-A997-11DA-B012-B622A1EF5492"
  #define DELL_DESCRIPTOR_GUID "8D9DDCBC-A997-11DA-B012-B622A1EF5492"
  
++<<<<<<< HEAD
 +static int acpi_video;
 +static u32 dell_wmi_interface_version;
++=======
++>>>>>>> 00ebbeb39b70 (platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model)
  static bool wmi_requires_smbios_request;
  
  MODULE_ALIAS("wmi:"DELL_EVENT_GUID);
  MODULE_ALIAS("wmi:"DELL_DESCRIPTOR_GUID);
  
++<<<<<<< HEAD
++=======
+ struct dell_wmi_priv {
+ 	struct input_dev *input_dev;
+ 	u32 interface_version;
+ };
+ 
++>>>>>>> 00ebbeb39b70 (platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model)
  static int __init dmi_matched(const struct dmi_system_id *dmi)
  {
  	wmi_requires_smbios_request = 1;
@@@ -333,33 -338,23 +344,38 @@@ static void dell_wmi_process_key(int ty
  	if (type == 0x0000 && code == 0xe025 && !wmi_requires_smbios_request)
  		return;
  
 -	if (key->keycode == KEY_KBDILLUMTOGGLE)
 -		dell_laptop_call_notifier(
 -			DELL_LAPTOP_KBD_BACKLIGHT_BRIGHTNESS_CHANGED, NULL);
 -
 -	sparse_keymap_report_entry(priv->input_dev, key, 1, true);
 +	sparse_keymap_report_entry(dell_wmi_input_dev, key, 1, true);
  }
  
 -static void dell_wmi_notify(struct wmi_device *wdev,
 -			    union acpi_object *obj)
 +static void dell_wmi_notify(u32 value, void *context)
  {
++<<<<<<< HEAD
 +	struct acpi_buffer response = { ACPI_ALLOCATE_BUFFER, NULL };
 +	union acpi_object *obj;
 +	acpi_status status;
++=======
+ 	struct dell_wmi_priv *priv = dev_get_drvdata(&wdev->dev);
+ 	u16 *buffer_entry, *buffer_end;
++>>>>>>> 00ebbeb39b70 (platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model)
  	acpi_size buffer_size;
 +	u16 *buffer_entry, *buffer_end;
  	int len, i;
  
 +	status = wmi_get_event_data(value, &response);
 +	if (status != AE_OK) {
 +		pr_warn("bad event status 0x%x\n", status);
 +		return;
 +	}
 +
 +	obj = (union acpi_object *)response.pointer;
 +	if (!obj) {
 +		pr_warn("no response\n");
 +		return;
 +	}
 +
  	if (obj->type != ACPI_TYPE_BUFFER) {
  		pr_warn("bad response type %x\n", obj->type);
 +		kfree(obj);
  		return;
  	}
  
@@@ -626,23 -627,25 +642,29 @@@ static int __init dell_wmi_input_setup(
   * WMI Interface Version     8       4    <version>
   * WMI buffer length        12       4    4096
   */
++<<<<<<< HEAD
 +static int __init dell_wmi_check_descriptor_buffer(void)
++=======
+ static int dell_wmi_check_descriptor_buffer(struct wmi_device *wdev)
++>>>>>>> 00ebbeb39b70 (platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model)
  {
- 	struct acpi_buffer out = { ACPI_ALLOCATE_BUFFER, NULL };
- 	union acpi_object *obj;
- 	acpi_status status;
+ 	struct dell_wmi_priv *priv = dev_get_drvdata(&wdev->dev);
+ 	union acpi_object *obj = NULL;
+ 	struct wmi_device *desc_dev;
  	u32 *buffer;
+ 	int ret;
  
- 	status = wmi_query_block(DELL_DESCRIPTOR_GUID, 0, &out);
- 	if (ACPI_FAILURE(status)) {
- 		pr_err("Cannot read Dell descriptor buffer - %d\n", status);
- 		return status;
+ 	desc_dev = wmidev_get_other_guid(wdev, DELL_DESCRIPTOR_GUID);
+ 	if (!desc_dev) {
+ 		dev_err(&wdev->dev, "Dell WMI descriptor does not exist\n");
+ 		return -ENODEV;
  	}
  
- 	obj = (union acpi_object *)out.pointer;
+ 	obj = wmidev_block_query(desc_dev, 0);
  	if (!obj) {
- 		pr_err("Dell descriptor buffer is empty\n");
- 		return -EINVAL;
+ 		dev_err(&wdev->dev, "failed to read Dell WMI descriptor\n");
+ 		ret = -EIO;
+ 		goto out;
  	}
  
  	if (obj->type != ACPI_TYPE_BUFFER) {
@@@ -715,34 -722,47 +741,48 @@@ static int dell_wmi_events_set_enabled(
  	return dell_smbios_error(ret);
  }
  
 -static int dell_wmi_probe(struct wmi_device *wdev)
 +static int __init dell_wmi_init(void)
  {
+ 	struct dell_wmi_priv *priv;
  	int err;
 +	acpi_status status;
  
++<<<<<<< HEAD
 +	if (!wmi_has_guid(DELL_EVENT_GUID) ||
 +	    !wmi_has_guid(DELL_DESCRIPTOR_GUID)) {
 +		pr_warn("Dell WMI GUID were not found\n");
 +		return -ENODEV;
 +	}
++=======
+ 	priv = devm_kzalloc(
+ 		&wdev->dev, sizeof(struct dell_wmi_priv), GFP_KERNEL);
+ 	if (!priv)
+ 		return -ENOMEM;
+ 	dev_set_drvdata(&wdev->dev, priv);
++>>>>>>> 00ebbeb39b70 (platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model)
  
- 	err = dell_wmi_check_descriptor_buffer();
+ 	err = dell_wmi_check_descriptor_buffer(wdev);
  	if (err)
  		return err;
  
 -	return dell_wmi_input_setup(wdev);
 -}
++<<<<<<< HEAD
 +	acpi_video = acpi_video_backlight_support();
  
 -static int dell_wmi_remove(struct wmi_device *wdev)
 -{
 -	dell_wmi_input_destroy(wdev);
 -	return 0;
 +	err = dell_wmi_input_setup();
 +	if (err)
 +		return err;
++=======
++	return dell_wmi_input_setup(wdev);
+ }
 -static const struct wmi_device_id dell_wmi_id_table[] = {
 -	{ .guid_string = DELL_EVENT_GUID },
 -	{ },
 -};
++>>>>>>> 00ebbeb39b70 (platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model)
  
 -static struct wmi_driver dell_wmi_driver = {
 -	.driver = {
 -		.name = "dell-wmi",
 -	},
 -	.id_table = dell_wmi_id_table,
 -	.probe = dell_wmi_probe,
 -	.remove = dell_wmi_remove,
 -	.notify = dell_wmi_notify,
 -};
 -
 -static int __init dell_wmi_init(void)
 -{
 -	int err;
 +	status = wmi_install_notify_handler(DELL_EVENT_GUID,
 +					 dell_wmi_notify, NULL);
 +	if (ACPI_FAILURE(status)) {
 +		input_unregister_device(dell_wmi_input_dev);
 +		pr_err("Unable to register notify handler - %d\n", status);
 +		return -ENODEV;
 +	}
  
  	dmi_check_system(dell_wmi_smbios_list);
  
* Unmerged path drivers/platform/x86/dell-wmi.c
