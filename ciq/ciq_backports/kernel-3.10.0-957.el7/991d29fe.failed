Input: synaptics - use BIT() and GENMASK() macros

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [input] synaptics - use BIT() and GENMASK() macros (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 92.31%
commit-author Dmitry Torokhov <dmitry.torokhov@gmail.com>
commit 991d29fe02a767d13275b38d774cf7c35a4f4a44
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/991d29fe.failed

Use standard infrastructure, such as BIT and GENMASK, instead of rolling
bitmasks by hand.

	Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit 991d29fe02a767d13275b38d774cf7c35a4f4a44)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/mouse/synaptics.c
#	drivers/input/mouse/synaptics.h
diff --cc drivers/input/mouse/synaptics.c
index 5f5887ef5b0a,26f4520f1903..000000000000
--- a/drivers/input/mouse/synaptics.c
+++ b/drivers/input/mouse/synaptics.c
@@@ -818,12 -902,12 +818,12 @@@ static void synaptics_report_ext_button
  	    !((psmouse->packet[0] ^ psmouse->packet[3]) & 0x02))
  		return;
  
 -	if (!SYN_CAP_EXT_BUTTONS_STICK(priv->info.ext_cap_10)) {
 +	if (!SYN_CAP_EXT_BUTTONS_STICK(priv->ext_cap_10)) {
  		for (i = 0; i < ext_bits; i++) {
  			input_report_key(dev, BTN_0 + 2 * i,
- 				hw->ext_buttons & (1 << i));
+ 				hw->ext_buttons & BIT(i));
  			input_report_key(dev, BTN_1 + 2 * i,
- 				hw->ext_buttons & (1 << (i + ext_bits)));
+ 				hw->ext_buttons & BIT(i + ext_bits));
  		}
  		return;
  	}
@@@ -1722,15 -1515,16 +1722,24 @@@ static int __synaptics_init(struct psmo
  		goto init_fail;
  	}
  
 -	priv->pkt_type = SYN_MODEL_NEWABS(info->model_id) ?
 -					SYN_NEWABS : SYN_OLDABS;
 +	priv->pkt_type = SYN_MODEL_NEWABS(priv->model_id) ? SYN_NEWABS : SYN_OLDABS;
  
  	psmouse_info(psmouse,
++<<<<<<< HEAD
 +		     "Touchpad model: %ld, fw: %ld.%ld, id: %#lx, caps: %#lx/%#lx/%#lx/%#lx, board id: %lu, fw id: %lu\n",
 +		     SYN_ID_MODEL(priv->identity),
 +		     SYN_ID_MAJOR(priv->identity), SYN_ID_MINOR(priv->identity),
 +		     priv->model_id,
 +		     priv->capabilities, priv->ext_cap, priv->ext_cap_0c,
 +		     priv->ext_cap_10, priv->board_id, priv->firmware_id);
++=======
+ 		     "Touchpad model: %lu, fw: %lu.%lu, id: %#x, caps: %#x/%#x/%#x/%#x, board id: %u, fw id: %u\n",
+ 		     SYN_ID_MODEL(info->identity),
+ 		     SYN_ID_MAJOR(info->identity), SYN_ID_MINOR(info->identity),
+ 		     info->model_id,
+ 		     info->capabilities, info->ext_cap, info->ext_cap_0c,
+ 		     info->ext_cap_10, info->board_id, info->firmware_id);
++>>>>>>> 991d29fe02a7 (Input: synaptics - use BIT() and GENMASK() macros)
  
  	set_input_params(psmouse, priv);
  
diff --cc drivers/input/mouse/synaptics.h
index 1b0e490b1040,7a998fbfa6b0..000000000000
--- a/drivers/input/mouse/synaptics.h
+++ b/drivers/input/mouse/synaptics.h
@@@ -25,36 -25,37 +25,52 @@@
  #define SYN_QUE_MEXT_CAPAB_10		0x10
  
  /* synatics modes */
- #define SYN_BIT_ABSOLUTE_MODE		(1 << 7)
- #define SYN_BIT_HIGH_RATE		(1 << 6)
- #define SYN_BIT_SLEEP_MODE		(1 << 3)
- #define SYN_BIT_DISABLE_GESTURE		(1 << 2)
- #define SYN_BIT_FOUR_BYTE_CLIENT	(1 << 1)
- #define SYN_BIT_W_MODE			(1 << 0)
+ #define SYN_BIT_ABSOLUTE_MODE		BIT(7)
+ #define SYN_BIT_HIGH_RATE		BIT(6)
+ #define SYN_BIT_SLEEP_MODE		BIT(3)
+ #define SYN_BIT_DISABLE_GESTURE		BIT(2)
+ #define SYN_BIT_FOUR_BYTE_CLIENT	BIT(1)
+ #define SYN_BIT_W_MODE			BIT(0)
  
  /* synaptics model ID bits */
- #define SYN_MODEL_ROT180(m)		((m) & (1 << 23))
- #define SYN_MODEL_PORTRAIT(m)		((m) & (1 << 22))
- #define SYN_MODEL_SENSOR(m)		(((m) >> 16) & 0x3f)
- #define SYN_MODEL_HARDWARE(m)		(((m) >> 9) & 0x7f)
- #define SYN_MODEL_NEWABS(m)		((m) & (1 << 7))
- #define SYN_MODEL_PEN(m)		((m) & (1 << 6))
- #define SYN_MODEL_SIMPLIC(m)		((m) & (1 << 5))
- #define SYN_MODEL_GEOMETRY(m)		((m) & 0x0f)
+ #define SYN_MODEL_ROT180(m)		((m) & BIT(23))
+ #define SYN_MODEL_PORTRAIT(m)		((m) & BIT(22))
+ #define SYN_MODEL_SENSOR(m)		(((m) & GENMASK(21, 16)) >> 16)
+ #define SYN_MODEL_HARDWARE(m)		(((m) & GENMASK(15, 9)) >> 9)
+ #define SYN_MODEL_NEWABS(m)		((m) & BIT(7))
+ #define SYN_MODEL_PEN(m)		((m) & BIT(6))
+ #define SYN_MODEL_SIMPLIC(m)		((m) & BIT(5))
+ #define SYN_MODEL_GEOMETRY(m)		((m) & GENMASK(3, 0))
  
  /* synaptics capability bits */
++<<<<<<< HEAD
 +#define SYN_CAP_EXTENDED(c)		((c) & (1 << 23))
 +#define SYN_CAP_MIDDLE_BUTTON(c)	((c) & (1 << 18))
 +#define SYN_CAP_PASS_THROUGH(c)		((c) & (1 << 7))
 +#define SYN_CAP_SLEEP(c)		((c) & (1 << 4))
 +#define SYN_CAP_FOUR_BUTTON(c)		((c) & (1 << 3))
 +#define SYN_CAP_MULTIFINGER(c)		((c) & (1 << 1))
 +#define SYN_CAP_PALMDETECT(c)		((c) & (1 << 0))
 +#define SYN_CAP_SUBMODEL_ID(c)		(((c) & 0x00ff00) >> 8)
 +#define SYN_EXT_CAP_REQUESTS(c)		(((c) & 0x700000) >> 20)
 +#define SYN_CAP_MULTI_BUTTON_NO(ec)	(((ec) & 0x00f000) >> 12)
 +#define SYN_CAP_PRODUCT_ID(ec)		(((ec) & 0xff0000) >> 16)
 +#define SYN_MEXT_CAP_BIT(m)		((m) & (1 << 1))
++=======
+ #define SYN_CAP_EXTENDED(c)		((c) & BIT(23))
+ #define SYN_CAP_MIDDLE_BUTTON(c)	((c) & BIT(18))
+ #define SYN_CAP_PASS_THROUGH(c)		((c) & BIT(7))
+ #define SYN_CAP_SLEEP(c)		((c) & BIT(4))
+ #define SYN_CAP_FOUR_BUTTON(c)		((c) & BIT(3))
+ #define SYN_CAP_MULTIFINGER(c)		((c) & BIT(1))
+ #define SYN_CAP_PALMDETECT(c)		((c) & BIT(0))
+ #define SYN_CAP_SUBMODEL_ID(c)		(((c) & GENMASK(15, 8)) >> 8)
+ #define SYN_EXT_CAP_REQUESTS(c)		(((c) & GENMASK(22, 20)) >> 20)
+ #define SYN_CAP_MB_MASK			GENMASK(15, 12)
+ #define SYN_CAP_MULTI_BUTTON_NO(ec)	(((ec) & SYN_CAP_MB_MASK) >> 12)
+ #define SYN_CAP_PRODUCT_ID(ec)		(((ec) & GENMASK(23, 16)) >> 16)
+ #define SYN_MEXT_CAP_BIT(m)		((m) & BIT(1))
++>>>>>>> 991d29fe02a7 (Input: synaptics - use BIT() and GENMASK() macros)
  
  /*
   * The following describes response for the 0x0c query.
@@@ -79,15 -80,18 +95,26 @@@
   *					for noise.
   * 2	0x08	image sensor		image sensor tracks 5 fingers, but only
   *					reports 2.
 - * 2	0x01	uniform clickpad	whole clickpad moves instead of being
 - *					hinged at the top.
   * 2	0x20	report min		query 0x0f gives min coord reported
   */
++<<<<<<< HEAD
 +#define SYN_CAP_CLICKPAD(ex0c)		((ex0c) & 0x100000) /* 1-button ClickPad */
 +#define SYN_CAP_CLICKPAD2BTN(ex0c)	((ex0c) & 0x000100) /* 2-button ClickPad */
 +#define SYN_CAP_MAX_DIMENSIONS(ex0c)	((ex0c) & 0x020000)
 +#define SYN_CAP_MIN_DIMENSIONS(ex0c)	((ex0c) & 0x002000)
 +#define SYN_CAP_ADV_GESTURE(ex0c)	((ex0c) & 0x080000)
 +#define SYN_CAP_REDUCED_FILTERING(ex0c)	((ex0c) & 0x000400)
 +#define SYN_CAP_IMAGE_SENSOR(ex0c)	((ex0c) & 0x000800)
++=======
+ #define SYN_CAP_CLICKPAD(ex0c)		((ex0c) & BIT(20)) /* 1-button ClickPad */
+ #define SYN_CAP_CLICKPAD2BTN(ex0c)	((ex0c) & BIT(8))  /* 2-button ClickPad */
+ #define SYN_CAP_MAX_DIMENSIONS(ex0c)	((ex0c) & BIT(17))
+ #define SYN_CAP_MIN_DIMENSIONS(ex0c)	((ex0c) & BIT(13))
+ #define SYN_CAP_ADV_GESTURE(ex0c)	((ex0c) & BIT(19))
+ #define SYN_CAP_REDUCED_FILTERING(ex0c)	((ex0c) & BIT(10))
+ #define SYN_CAP_IMAGE_SENSOR(ex0c)	((ex0c) & BIT(11))
+ #define SYN_CAP_INTERTOUCH(ex0c)	((ex0c) & BIT(14))
++>>>>>>> 991d29fe02a7 (Input: synaptics - use BIT() and GENMASK() macros)
  
  /*
   * The following descibes response for the 0x10 query.
* Unmerged path drivers/input/mouse/synaptics.c
* Unmerged path drivers/input/mouse/synaptics.h
