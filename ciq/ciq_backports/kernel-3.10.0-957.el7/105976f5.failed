blk-mq: don't call io sched's .requeue_request when requeueing rq to ->dispatch

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ming Lei <ming.lei@redhat.com>
commit 105976f517791aed3b11f8f53b308a2069d42055
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/105976f5.failed

__blk_mq_requeue_request() covers two cases:

- one is that the requeued request is added to hctx->dispatch, such as
blk_mq_dispatch_rq_list()

- another case is that the request is requeued to io scheduler, such as
blk_mq_requeue_request().

We should call io sched's .requeue_request callback only for the 2nd
case.

	Cc: Paolo Valente <paolo.valente@linaro.org>
	Cc: Omar Sandoval <osandov@fb.com>
Fixes: bd166ef183c2 ("blk-mq-sched: add framework for MQ capable IO schedulers")
	Cc: stable@vger.kernel.org
	Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
	Acked-by: Paolo Valente <paolo.valente@linaro.org>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 105976f517791aed3b11f8f53b308a2069d42055)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 1eaa154c3ecb,16e83e6df404..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -562,9 -711,10 +562,13 @@@ static void __blk_mq_requeue_request(st
  	blk_mq_put_driver_tag(rq);
  
  	trace_block_rq_requeue(q, rq);
++<<<<<<< HEAD
 +	blk_mq_sched_requeue_request(rq);
++=======
+ 	wbt_requeue(q->rq_wb, &rq->issue_stat);
++>>>>>>> 105976f51779 (blk-mq: don't call io sched's .requeue_request when requeueing rq to ->dispatch)
  
 -	if (blk_mq_rq_state(rq) != MQ_RQ_IDLE) {
 -		blk_mq_rq_update_state(rq, MQ_RQ_IDLE);
 +	if (test_and_clear_bit(REQ_ATOM_STARTED, &rq->atomic_flags)) {
  		if (q->dma_drain_size && blk_rq_bytes(rq))
  			rq->nr_phys_segments--;
  	}
* Unmerged path block/blk-mq.c
