mmc: mmc: Enable Command Queuing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [mmc] mmc: Enable Command Queuing (Gopal Tiwari) [1456570]
Rebuild_FUZZ: 91.53%
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit 98d4f7809d99bbf456f93816ef9895616cdd1b2d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/98d4f780.failed

Enable the Command Queue if the host controller supports a command queue
engine. It is not compatible with Packed Commands, so make a note of that in the
comment.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 98d4f7809d99bbf456f93816ef9895616cdd1b2d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/mmc.c
diff --cc drivers/mmc/core/mmc.c
index a75c5dcb0492,8e11526c5092..000000000000
--- a/drivers/mmc/core/mmc.c
+++ b/drivers/mmc/core/mmc.c
@@@ -1773,27 -1786,28 +1773,50 @@@ static int mmc_init_card(struct mmc_hos
  	}
  
  	/*
++<<<<<<< HEAD
 +	 * The mandatory minimum values are defined for packed command.
 +	 * read: 5, write: 3
++=======
+ 	 * Enable Command Queue if supported. Note that Packed Commands cannot
+ 	 * be used with Command Queue.
+ 	 */
+ 	card->ext_csd.cmdq_en = false;
+ 	if (card->ext_csd.cmdq_support && host->caps2 & MMC_CAP2_CQE) {
+ 		err = mmc_cmdq_enable(card);
+ 		if (err && err != -EBADMSG)
+ 			goto free_card;
+ 		if (err) {
+ 			pr_warn("%s: Enabling CMDQ failed\n",
+ 				mmc_hostname(card->host));
+ 			card->ext_csd.cmdq_support = false;
+ 			card->ext_csd.cmdq_depth = 0;
+ 			err = 0;
+ 		}
+ 	}
+ 	/*
+ 	 * In some cases (e.g. RPMB or mmc_test), the Command Queue must be
+ 	 * disabled for a time, so a flag is needed to indicate to re-enable the
+ 	 * Command Queue.
++>>>>>>> 98d4f7809d99 (mmc: mmc: Enable Command Queuing)
  	 */
 -	card->reenable_cmdq = card->ext_csd.cmdq_en;
 +	if (card->ext_csd.max_packed_writes >= 3 &&
 +	    card->ext_csd.max_packed_reads >= 5 &&
 +	    host->caps2 & MMC_CAP2_PACKED_CMD) {
 +		err = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,
 +				EXT_CSD_EXP_EVENTS_CTRL,
 +				EXT_CSD_PACKED_EVENT_EN,
 +				card->ext_csd.generic_cmd6_time);
 +		if (err && err != -EBADMSG)
 +			goto free_card;
 +		if (err) {
 +			pr_warn("%s: Enabling packed event failed\n",
 +				mmc_hostname(card->host));
 +			card->ext_csd.packed_event_en = 0;
 +			err = 0;
 +		} else {
 +			card->ext_csd.packed_event_en = 1;
 +		}
 +	}
  
  	if (!oldcard)
  		host->card = card;
* Unmerged path drivers/mmc/core/mmc.c
