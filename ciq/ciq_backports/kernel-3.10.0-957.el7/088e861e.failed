ALSA: control: Hardening for potential Spectre v1

jira LE-1907
cve CVE-2018-3693
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [sound] control: Hardening for potential Spectre v1 (Lauro Ramos Venancio) [1589035] {CVE-2018-3693}
Rebuild_FUZZ: 93.48%
commit-author Takashi Iwai <tiwai@suse.de>
commit 088e861edffb84879cf0c0d1b02eda078c3a0ffe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/088e861e.failed

As recently Smatch suggested, a few places in ALSA control core codes
may expand the array directly from the user-space value with
speculation:

  sound/core/control.c:1003 snd_ctl_elem_lock() warn: potential spectre issue 'kctl->vd'
  sound/core/control.c:1031 snd_ctl_elem_unlock() warn: potential spectre issue 'kctl->vd'
  sound/core/control.c:844 snd_ctl_elem_info() warn: potential spectre issue 'kctl->vd'
  sound/core/control.c:891 snd_ctl_elem_read() warn: potential spectre issue 'kctl->vd'
  sound/core/control.c:939 snd_ctl_elem_write() warn: potential spectre issue 'kctl->vd'

Although all these seem doing only the first load without further
reference, we may want to stay in a safer side, so hardening with
array_index_nospec() would still make sense.

In this patch, we put array_index_nospec() to the common
snd_ctl_get_ioff*() helpers instead of each caller.  These helpers are
also referred from some drivers, too, and basically all usages are to
calculate the array index from the user-space value, hence it's better
to cover there.

BugLink: https://marc.info/?l=linux-kernel&m=152411496503418&w=2
	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 088e861edffb84879cf0c0d1b02eda078c3a0ffe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/sound/control.h
diff --cc include/sound/control.h
index 21d047f229a1,6011a58d3e20..000000000000
--- a/include/sound/control.h
+++ b/include/sound/control.h
@@@ -22,6 -22,8 +22,11 @@@
   *
   */
  
++<<<<<<< HEAD
++=======
+ #include <linux/wait.h>
+ #include <linux/nospec.h>
++>>>>>>> 088e861edffb (ALSA: control: Hardening for potential Spectre v1)
  #include <sound/asound.h>
  
  #define snd_kcontrol_chip(kcontrol) ((kcontrol)->private_data)
* Unmerged path include/sound/control.h
