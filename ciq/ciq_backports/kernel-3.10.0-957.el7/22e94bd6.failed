i2c: i801: store and restore the SLVCMD register at load and unload

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [i2c] i801: store and restore the SLVCMD register at load and unload (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 96.12%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit 22e94bd6779e1140350c0792e85c79552ec43673
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/22e94bd6.failed

Also do not override any other configuration in this register.

	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
(cherry picked from commit 22e94bd6779e1140350c0792e85c79552ec43673)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/busses/i2c-i801.c
diff --cc drivers/i2c/busses/i2c-i801.c
index cb34b050a17d,750c4753e2bc..000000000000
--- a/drivers/i2c/busses/i2c-i801.c
+++ b/drivers/i2c/busses/i2c-i801.c
@@@ -857,7 -946,41 +858,45 @@@ static u32 i801_func(struct i2c_adapte
  	       I2C_FUNC_SMBUS_BLOCK_DATA | I2C_FUNC_SMBUS_WRITE_I2C_BLOCK |
  	       ((priv->features & FEATURE_SMBUS_PEC) ? I2C_FUNC_SMBUS_PEC : 0) |
  	       ((priv->features & FEATURE_I2C_BLOCK_READ) ?
++<<<<<<< HEAD
 +		I2C_FUNC_SMBUS_READ_I2C_BLOCK : 0);
++=======
+ 		I2C_FUNC_SMBUS_READ_I2C_BLOCK : 0) |
+ 	       ((priv->features & FEATURE_HOST_NOTIFY) ?
+ 		I2C_FUNC_SMBUS_HOST_NOTIFY : 0);
+ }
+ 
+ static int i801_enable_host_notify(struct i2c_adapter *adapter)
+ {
+ 	struct i801_priv *priv = i2c_get_adapdata(adapter);
+ 
+ 	if (!(priv->features & FEATURE_HOST_NOTIFY))
+ 		return -ENOTSUPP;
+ 
+ 	if (!priv->host_notify)
+ 		priv->host_notify = i2c_setup_smbus_host_notify(adapter);
+ 	if (!priv->host_notify)
+ 		return -ENOMEM;
+ 
+ 	priv->original_slvcmd = inb_p(SMBSLVCMD(priv));
+ 
+ 	if (!(SMBSLVCMD_HST_NTFY_INTREN & priv->original_slvcmd))
+ 		outb_p(SMBSLVCMD_HST_NTFY_INTREN | priv->original_slvcmd,
+ 		       SMBSLVCMD(priv));
+ 
+ 	/* clear Host Notify bit to allow a new notification */
+ 	outb_p(SMBSLVSTS_HST_NTFY_STS, SMBSLVSTS(priv));
+ 
+ 	return 0;
++>>>>>>> 22e94bd6779e (i2c: i801: store and restore the SLVCMD register at load and unload)
+ }
+ 
+ static void i801_disable_host_notify(struct i801_priv *priv)
+ {
+ 	if (!(priv->features & FEATURE_HOST_NOTIFY))
+ 		return;
+ 
+ 	outb_p(priv->original_slvcmd, SMBSLVCMD(priv));
  }
  
  static const struct i2c_algorithm smbus_algorithm = {
* Unmerged path drivers/i2c/busses/i2c-i801.c
