x86/syscall: Sanitize syscall table de-references under speculation

jira LE-1907
cve CVE-2018-3693
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] syscall: Sanitize syscall table de-references under speculation (Lauro Ramos Venancio) [1589035] {CVE-2018-3693}
Rebuild_FUZZ: 96.92%
commit-author Dan Williams <dan.j.williams@intel.com>
commit 2fbd7af5af8665d18bcefae3e9700be07e22b681
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2fbd7af5.failed

The syscall table base is a user controlled function pointer in kernel
space. Use array_index_nospec() to prevent any out of bounds speculation.

While retpoline prevents speculating into a userspace directed target it
does not stop the pointer de-reference, the concern is leaking memory
relative to the syscall table base, by observing instruction cache
behavior.

	Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-arch@vger.kernel.org
	Cc: kernel-hardening@lists.openwall.com
	Cc: gregkh@linuxfoundation.org
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: alan@linux.intel.com
Link: https://lkml.kernel.org/r/151727417984.33451.1216731042505722161.stgit@dwillia2-desk3.amr.corp.intel.com

(cherry picked from commit 2fbd7af5af8665d18bcefae3e9700be07e22b681)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/entry/common.c
* Unmerged path arch/x86/entry/common.c
* Unmerged path arch/x86/entry/common.c
