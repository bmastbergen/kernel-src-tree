netfilter: ipset: Improve preprocessor macros checks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Sergey Popovich <popovich_sergei@mail.ua>
commit 1823fb79e5b6e3950fd24d2990b3b5c45283f15c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/1823fb79.failed

Check if mandatory MTYPE, HTYPE and HOST_MASK macros
defined.

	Signed-off-by: Sergey Popovich <popovich_sergei@mail.ua>
	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 1823fb79e5b6e3950fd24d2990b3b5c45283f15c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_hash_ipmark.c
#	net/netfilter/ipset/ip_set_hash_ipport.c
diff --cc net/netfilter/ipset/ip_set_hash_ipmark.c
index 50389697a53a,d231248eb3e2..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipmark.c
+++ b/net/netfilter/ipset/ip_set_hash_ipmark.c
@@@ -74,9 -76,8 +74,14 @@@ hash_ipmark4_data_next(struct hash_ipma
  	next->ip = d->ip;
  }
  
++<<<<<<< HEAD
 +#define MTYPE           hash_ipmark4
 +#define PF              4
 +#define HOST_MASK       32
++=======
+ #define MTYPE		hash_ipmark4
+ #define HOST_MASK	32
++>>>>>>> 1823fb79e5b6 (netfilter: ipset: Improve preprocessor macros checks)
  #include "ip_set_hash_gen.h"
  
  static int
@@@ -199,9 -208,8 +204,9 @@@ hash_ipmark6_data_next(struct hash_ipma
  #undef HOST_MASK
  
  #define MTYPE		hash_ipmark6
 +#define PF		6
  #define HOST_MASK	128
- #define	IP_SET_EMIT_CREATE
+ #define IP_SET_EMIT_CREATE
  #include "ip_set_hash_gen.h"
  
  
diff --cc net/netfilter/ipset/ip_set_hash_ipport.c
index 5e57c86de14d,a47c29f12090..000000000000
--- a/net/netfilter/ipset/ip_set_hash_ipport.c
+++ b/net/netfilter/ipset/ip_set_hash_ipport.c
@@@ -105,9 -83,8 +105,14 @@@ hash_ipport4_data_next(struct hash_ippo
  	next->port = d->port;
  }
  
++<<<<<<< HEAD
 +#define MTYPE           hash_ipport4
 +#define PF              4
 +#define HOST_MASK       32
++=======
+ #define MTYPE		hash_ipport4
+ #define HOST_MASK	32
++>>>>>>> 1823fb79e5b6 (netfilter: ipset: Improve preprocessor macros checks)
  #include "ip_set_hash_gen.h"
  
  static int
@@@ -293,9 -246,8 +298,9 @@@ hash_ipport6_data_next(struct hash_ippo
  #undef HOST_MASK
  
  #define MTYPE		hash_ipport6
 +#define PF		6
  #define HOST_MASK	128
- #define	IP_SET_EMIT_CREATE
+ #define IP_SET_EMIT_CREATE
  #include "ip_set_hash_gen.h"
  
  static int
diff --git a/net/netfilter/ipset/ip_set_hash_gen.h b/net/netfilter/ipset/ip_set_hash_gen.h
index 9ce28af662bf..7d55c4f81e2e 100644
--- a/net/netfilter/ipset/ip_set_hash_gen.h
+++ b/net/netfilter/ipset/ip_set_hash_gen.h
@@ -254,6 +254,14 @@ hbucket_elem_add(struct hbucket *n, u8 ahash_max, size_t dsize)
 #define mtype_variant		IPSET_TOKEN(MTYPE, _variant)
 #define mtype_data_match	IPSET_TOKEN(MTYPE, _data_match)
 
+#ifndef MTYPE
+#error "MTYPE is not defined!"
+#endif
+
+#ifndef HOST_MASK
+#error "HOST_MASK is not defined!"
+#endif
+
 #ifndef HKEY_DATALEN
 #define HKEY_DATALEN		sizeof(struct mtype_elem)
 #endif
@@ -263,6 +271,9 @@ hbucket_elem_add(struct hbucket *n, u8 ahash_max, size_t dsize)
 	& jhash_mask(htable_bits))
 
 #ifndef htype
+#ifndef HTYPE
+#error "HTYPE is not defined!"
+#endif /* HTYPE */
 #define htype			HTYPE
 
 /* The generic hash structure */
@@ -289,7 +300,7 @@ struct htype {
 	struct net_prefixes nets[0]; /* book-keeping of prefixes */
 #endif
 };
-#endif
+#endif /* htype */
 
 #ifdef IP_SET_HASH_WITH_NETS
 /* Network cidr size book keeping when the hash stores different
* Unmerged path net/netfilter/ipset/ip_set_hash_ipmark.c
* Unmerged path net/netfilter/ipset/ip_set_hash_ipport.c
