resource: Consolidate resource walking code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Tom Lendacky <thomas.lendacky@amd.com>
commit 4ac2aed837cbdbb21c12a28c04718e34c1dc225f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/4ac2aed8.failed

The walk_iomem_res_desc(), walk_system_ram_res() and walk_system_ram_range()
functions each have much of the same code.

Create a new function that consolidates the common code from these
functions in one place to reduce the amount of duplicated code.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Borislav Petkov <bp@suse.de>
	Tested-by: Borislav Petkov <bp@suse.de>
	Cc: kvm@vger.kernel.org
	Cc: Borislav Petkov <bp@alien8.de>
Link: https://lkml.kernel.org/r/20171020143059.3291-9-brijesh.singh@amd.com

(cherry picked from commit 4ac2aed837cbdbb21c12a28c04718e34c1dc225f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/resource.c
diff --cc kernel/resource.c
index c6ecc9dca549,7323c1b636cd..000000000000
--- a/kernel/resource.c
+++ b/kernel/resource.c
@@@ -395,33 -424,26 +415,36 @@@ static int __walk_iomem_res_desc(struc
   * Walks through iomem resources and calls func() with matching resource
   * ranges. This walks through whole tree and not just first level children.
   * All the memory ranges which overlap start,end and also match flags and
 - * desc are valid candidates.
 + * name are valid candidates.
   *
 - * @desc: I/O resource descriptor. Use IORES_DESC_NONE to skip @desc check.
 - * @flags: I/O resource flags
 + * @name: name of resource
 + * @flags: resource flags
   * @start: start addr
   * @end: end addr
 - *
 - * NOTE: For a new descriptor search, define a new IORES_DESC in
 - * <linux/ioport.h> and set it in 'desc' of a target resource entry.
   */
 -int walk_iomem_res_desc(unsigned long desc, unsigned long flags, u64 start,
 -		u64 end, void *arg, int (*func)(u64, u64, void *))
 +int walk_iomem_res(char *name, unsigned long flags, u64 start, u64 end,
 +		void *arg, int (*func)(u64, u64, void *))
  {
  	struct resource res;
- 	u64 orig_end;
- 	int ret = -1;
  
  	res.start = start;
  	res.end = end;
  	res.flags = flags;
++<<<<<<< HEAD
 +	orig_end = res.end;
 +	while ((res.start < res.end) &&
 +		(!find_next_iomem_res(&res, name, false))) {
 +		ret = (*func)(res.start, res.end, arg);
 +		if (ret)
 +			break;
 +		res.start = res.end + 1;
 +		res.end = orig_end;
 +	}
 +	return ret;
++=======
+ 
+ 	return __walk_iomem_res_desc(&res, desc, false, arg, func);
++>>>>>>> 4ac2aed837cb (resource: Consolidate resource walking code)
  }
  
  /*
@@@ -441,16 -461,9 +462,22 @@@ int walk_system_ram_res(u64 start, u64 
  	res.start = start;
  	res.end = end;
  	res.flags = IORESOURCE_SYSTEM_RAM | IORESOURCE_BUSY;
++<<<<<<< HEAD
 +	orig_end = res.end;
 +	while ((res.start < res.end) &&
 +		(!find_next_iomem_res(&res, NULL, true))) {
 +		ret = (*func)(res.start, res.end, arg);
 +		if (ret)
 +			break;
 +		res.start = res.end + 1;
 +		res.end = orig_end;
 +	}
 +	return ret;
++=======
+ 
+ 	return __walk_iomem_res_desc(&res, IORES_DESC_NONE, true,
+ 				     arg, func);
++>>>>>>> 4ac2aed837cb (resource: Consolidate resource walking code)
  }
  
  #if !defined(CONFIG_ARCH_HAS_WALK_MEMORY)
* Unmerged path kernel/resource.c
