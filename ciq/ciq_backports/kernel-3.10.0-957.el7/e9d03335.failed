drm/nouveau/gr/gp100-: use correct registers for zbc colour/depth setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ben Skeggs <bskeggs@redhat.com>
commit e9d03335f604a1123b8de3103ce8e06db4ad777a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e9d03335.failed

These were missed the first time around due to the driver version I traced
using the older registers still.

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit e9d03335f604a1123b8de3103ce8e06db4ad777a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
index 1031f03e3a1f,d82951ab5ef1..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
@@@ -121,14 -129,38 +121,19 @@@ int gf100_gr_new_(const struct gf100_gr
  		  int, struct nvkm_gr **);
  void *gf100_gr_dtor(struct nvkm_gr *);
  
+ struct gf100_gr_func_zbc {
+ 	void (*clear_color)(struct gf100_gr *, int zbc);
+ 	void (*clear_depth)(struct gf100_gr *, int zbc);
+ };
+ 
  struct gf100_gr_func {
  	void (*dtor)(struct gf100_gr *);
 -	void (*oneinit_tiles)(struct gf100_gr *);
 -	void (*oneinit_sm_id)(struct gf100_gr *);
  	int (*init)(struct gf100_gr *);
  	void (*init_gpc_mmu)(struct gf100_gr *);
 -	void (*init_r405a14)(struct gf100_gr *);
 -	void (*init_bios)(struct gf100_gr *);
 -	void (*init_vsc_stream_master)(struct gf100_gr *);
 -	void (*init_zcull)(struct gf100_gr *);
 -	void (*init_num_active_ltcs)(struct gf100_gr *);
  	void (*init_rop_active_fbps)(struct gf100_gr *);
 -	void (*init_bios_2)(struct gf100_gr *);
 -	void (*init_swdx_pes_mask)(struct gf100_gr *);
 -	void (*init_fecs_exceptions)(struct gf100_gr *);
 -	void (*init_ds_hww_esr_2)(struct gf100_gr *);
 -	void (*init_40601c)(struct gf100_gr *);
 -	void (*init_sked_hww_esr)(struct gf100_gr *);
 -	void (*init_419cc0)(struct gf100_gr *);
 -	void (*init_419eb4)(struct gf100_gr *);
 -	void (*init_419c9c)(struct gf100_gr *);
  	void (*init_ppc_exceptions)(struct gf100_gr *);
 -	void (*init_tex_hww_esr)(struct gf100_gr *, int gpc, int tpc);
 -	void (*init_504430)(struct gf100_gr *, int gpc, int tpc);
 -	void (*init_shader_exceptions)(struct gf100_gr *, int gpc, int tpc);
 -	void (*init_400054)(struct gf100_gr *);
 -	void (*trap_mp)(struct gf100_gr *, int gpc, int tpc);
 +	void (*init_swdx_pes_mask)(struct gf100_gr *);
 +	void (*init_num_active_ltcs)(struct gf100_gr *);
  	void (*set_hww_esr_report_mask)(struct gf100_gr *);
  	const struct gf100_gr_pack *mmio;
  	struct {
@@@ -142,25 -174,59 +147,54 @@@
  	int tpc_nr;
  	int ppc_nr;
  	const struct gf100_grctx_func *grctx;
++<<<<<<< HEAD
++=======
+ 	const struct nvkm_therm_clkgate_pack *clkgate_pack;
+ 	const struct gf100_gr_func_zbc *zbc;
++>>>>>>> e9d03335f604 (drm/nouveau/gr/gp100-: use correct registers for zbc colour/depth setup)
  	struct nvkm_sclass sclass[];
  };
  
 -int gf100_gr_rops(struct gf100_gr *);
 -void gf100_gr_oneinit_tiles(struct gf100_gr *);
 -void gf100_gr_oneinit_sm_id(struct gf100_gr *);
  int gf100_gr_init(struct gf100_gr *);
++<<<<<<< HEAD
 +int gf100_gr_rops(struct gf100_gr *);
++=======
+ void gf100_gr_init_vsc_stream_master(struct gf100_gr *);
+ void gf100_gr_init_zcull(struct gf100_gr *);
+ void gf100_gr_init_num_active_ltcs(struct gf100_gr *);
+ void gf100_gr_init_fecs_exceptions(struct gf100_gr *);
+ void gf100_gr_init_40601c(struct gf100_gr *);
+ void gf100_gr_init_419cc0(struct gf100_gr *);
+ void gf100_gr_init_419eb4(struct gf100_gr *);
+ void gf100_gr_init_tex_hww_esr(struct gf100_gr *, int, int);
+ void gf100_gr_init_shader_exceptions(struct gf100_gr *, int, int);
+ void gf100_gr_init_400054(struct gf100_gr *);
+ extern const struct gf100_gr_func_zbc gf100_gr_zbc;
++>>>>>>> e9d03335f604 (drm/nouveau/gr/gp100-: use correct registers for zbc colour/depth setup)
  
 -void gf117_gr_init_zcull(struct gf100_gr *);
 -
 -void gk104_gr_init_vsc_stream_master(struct gf100_gr *);
 +int gk104_gr_init(struct gf100_gr *);
  void gk104_gr_init_rop_active_fbps(struct gf100_gr *);
  void gk104_gr_init_ppc_exceptions(struct gf100_gr *);
 -void gk104_gr_init_sked_hww_esr(struct gf100_gr *);
 -
 -void gk110_gr_init_419eb4(struct gf100_gr *);
 -
 -void gm107_gr_init_504430(struct gf100_gr *, int, int);
 -void gm107_gr_init_shader_exceptions(struct gf100_gr *, int, int);
 -void gm107_gr_init_400054(struct gf100_gr *);
  
  int gk20a_gr_init(struct gf100_gr *);
  
 -void gm200_gr_oneinit_tiles(struct gf100_gr *);
 -void gm200_gr_oneinit_sm_id(struct gf100_gr *);
 +int gm200_gr_init(struct gf100_gr *);
  int gm200_gr_rops(struct gf100_gr *);
 -void gm200_gr_init_num_active_ltcs(struct gf100_gr *);
 -void gm200_gr_init_ds_hww_esr_2(struct gf100_gr *);
  
 +int gp100_gr_init(struct gf100_gr *);
  void gp100_gr_init_rop_active_fbps(struct gf100_gr *);
++<<<<<<< HEAD
++=======
+ void gp100_gr_init_fecs_exceptions(struct gf100_gr *);
+ void gp100_gr_init_shader_exceptions(struct gf100_gr *, int, int);
+ extern const struct gf100_gr_func_zbc gp100_gr_zbc;
+ void gp100_gr_zbc_clear_color(struct gf100_gr *, int);
+ void gp100_gr_zbc_clear_depth(struct gf100_gr *, int);
+ 
+ void gp102_gr_init_swdx_pes_mask(struct gf100_gr *);
++>>>>>>> e9d03335f604 (drm/nouveau/gr/gp100-: use correct registers for zbc colour/depth setup)
  
  #define gf100_gr_chan(p) container_of((p), struct gf100_gr_chan, object)
 -#include <core/object.h>
  
  struct gf100_gr_chan {
  	struct nvkm_object object;
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
index 2724939198c6,477fee3e3715..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
@@@ -355,6 -478,8 +355,11 @@@ gk104_gr = 
  	.rops = gf100_gr_rops,
  	.ppc_nr = 1,
  	.grctx = &gk104_grctx,
++<<<<<<< HEAD
++=======
+ 	.clkgate_pack = gk104_clkgate_pack,
+ 	.zbc = &gf100_gr_zbc,
++>>>>>>> e9d03335f604 (drm/nouveau/gr/gp100-: use correct registers for zbc colour/depth setup)
  	.sclass = {
  		{ -1, -1, FERMI_TWOD_A },
  		{ -1, -1, KEPLER_INLINE_TO_MEMORY_A },
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
index 5215720fd53a,7cd628c84e07..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
@@@ -192,6 -374,8 +192,11 @@@ gk110_gr = 
  	.rops = gf100_gr_rops,
  	.ppc_nr = 2,
  	.grctx = &gk110_grctx,
++<<<<<<< HEAD
++=======
+ 	.clkgate_pack = gk110_clkgate_pack,
+ 	.zbc = &gf100_gr_zbc,
++>>>>>>> e9d03335f604 (drm/nouveau/gr/gp100-: use correct registers for zbc colour/depth setup)
  	.sclass = {
  		{ -1, -1, FERMI_TWOD_A },
  		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
index 6ca9a01b8988..c761f725b607 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
@@ -90,7 +90,7 @@ gf100_gr_zbc_color_get(struct gf100_gr *gr, int format,
 	memcpy(gr->zbc_color[zbc].l2, l2, sizeof(gr->zbc_color[zbc].l2));
 	gr->zbc_color[zbc].format = format;
 	nvkm_ltc_zbc_color_get(ltc, zbc, l2);
-	gf100_gr_zbc_clear_color(gr, zbc);
+	gr->func->zbc->clear_color(gr, zbc);
 	return zbc;
 }
 
@@ -135,10 +135,16 @@ gf100_gr_zbc_depth_get(struct gf100_gr *gr, int format,
 	gr->zbc_depth[zbc].ds = ds;
 	gr->zbc_depth[zbc].l2 = l2;
 	nvkm_ltc_zbc_depth_get(ltc, zbc, l2);
-	gf100_gr_zbc_clear_depth(gr, zbc);
+	gr->func->zbc->clear_depth(gr, zbc);
 	return zbc;
 }
 
+const struct gf100_gr_func_zbc
+gf100_gr_zbc = {
+	.clear_color = gf100_gr_zbc_clear_color,
+	.clear_depth = gf100_gr_zbc_clear_depth,
+};
+
 /*******************************************************************************
  * Graphics object classes
  ******************************************************************************/
@@ -737,21 +743,21 @@ gf100_gr_zbc_init(struct gf100_gr *gr)
 	const u32 f32_1[] = { 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000,
 			      0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000 };
 	struct nvkm_ltc *ltc = gr->base.engine.subdev.device->ltc;
-	int index;
+	int index, c = ltc->zbc_min, d = ltc->zbc_min;
 
 	if (!gr->zbc_color[0].format) {
-		gf100_gr_zbc_color_get(gr, 1,  & zero[0],   &zero[4]);
-		gf100_gr_zbc_color_get(gr, 2,  &  one[0],    &one[4]);
-		gf100_gr_zbc_color_get(gr, 4,  &f32_0[0],  &f32_0[4]);
-		gf100_gr_zbc_color_get(gr, 4,  &f32_1[0],  &f32_1[4]);
-		gf100_gr_zbc_depth_get(gr, 1, 0x00000000, 0x00000000);
-		gf100_gr_zbc_depth_get(gr, 1, 0x3f800000, 0x3f800000);
-	}
-
-	for (index = ltc->zbc_min; index <= ltc->zbc_max; index++)
-		gf100_gr_zbc_clear_color(gr, index);
-	for (index = ltc->zbc_min; index <= ltc->zbc_max; index++)
-		gf100_gr_zbc_clear_depth(gr, index);
+		gf100_gr_zbc_color_get(gr, 1,  & zero[0],   &zero[4]); c++;
+		gf100_gr_zbc_color_get(gr, 2,  &  one[0],    &one[4]); c++;
+		gf100_gr_zbc_color_get(gr, 4,  &f32_0[0],  &f32_0[4]); c++;
+		gf100_gr_zbc_color_get(gr, 4,  &f32_1[0],  &f32_1[4]); c++;
+		gf100_gr_zbc_depth_get(gr, 1, 0x00000000, 0x00000000); d++;
+		gf100_gr_zbc_depth_get(gr, 1, 0x3f800000, 0x3f800000); d++;
+	}
+
+	for (index = c; index <= ltc->zbc_max; index++)
+		gr->func->zbc->clear_color(gr, index);
+	for (index = d; index <= ltc->zbc_max; index++)
+		gr->func->zbc->clear_depth(gr, index);
 }
 
 /**
@@ -2055,6 +2061,7 @@ gf100_gr = {
 	.gpccs.ucode = &gf100_gr_gpccs_ucode,
 	.rops = gf100_gr_rops,
 	.grctx = &gf100_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, FERMI_MEMORY_TO_MEMORY_FORMAT_A },
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
index d736dcd55ea2..43120fedbef2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
@@ -120,6 +120,7 @@ gf104_gr = {
 	.gpccs.ucode = &gf100_gr_gpccs_ucode,
 	.rops = gf100_gr_rops,
 	.grctx = &gf104_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, FERMI_MEMORY_TO_MEMORY_FORMAT_A },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
index 2f0d24498427..120103037176 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
@@ -111,6 +111,7 @@ gf108_gr = {
 	.gpccs.ucode = &gf100_gr_gpccs_ucode,
 	.rops = gf100_gr_rops,
 	.grctx = &gf108_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, FERMI_MEMORY_TO_MEMORY_FORMAT_A },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
index d1d942eb86af..f6a789f3aa80 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
@@ -92,6 +92,7 @@ gf110_gr = {
 	.gpccs.ucode = &gf100_gr_gpccs_ucode,
 	.rops = gf100_gr_rops,
 	.grctx = &gf110_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, FERMI_MEMORY_TO_MEMORY_FORMAT_A },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
index 0124e468086e..38f081095850 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
@@ -129,6 +129,7 @@ gf117_gr = {
 	.rops = gf100_gr_rops,
 	.ppc_nr = 1,
 	.grctx = &gf117_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, FERMI_MEMORY_TO_MEMORY_FORMAT_A },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
index 8d8e4cafe28f..78cca0102382 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
@@ -183,6 +183,7 @@ gf119_gr = {
 	.gpccs.ucode = &gf100_gr_gpccs_ucode,
 	.rops = gf100_gr_rops,
 	.grctx = &gf119_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, FERMI_MEMORY_TO_MEMORY_FORMAT_A },
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
index ce290e05a9cd..7df146564e77 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
@@ -112,6 +112,7 @@ gk110b_gr = {
 	.rops = gf100_gr_rops,
 	.ppc_nr = 2,
 	.grctx = &gk110b_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
index 4efd6adcf093..f65d0e7bd27e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
@@ -171,6 +171,7 @@ gk208_gr = {
 	.rops = gf100_gr_rops,
 	.ppc_nr = 1,
 	.grctx = &gk208_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk20a.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk20a.c
index de8b806b88fd..335355e1d23e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk20a.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk20a.c
@@ -316,6 +316,7 @@ gk20a_gr = {
 	.rops = gf100_gr_rops,
 	.ppc_nr = 1,
 	.grctx = &gk20a_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_A },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
index 0357f0871944..7f24be27ab5f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
@@ -453,6 +453,7 @@ gm107_gr = {
 	.rops = gf100_gr_rops,
 	.ppc_nr = 2,
 	.grctx = &gm107_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
index c5cca4279a00..8bb7cb1ad882 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
@@ -216,6 +216,7 @@ gm200_gr = {
 	.tpc_nr = 4,
 	.ppc_nr = 2,
 	.grctx = &gm200_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm20b.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm20b.c
index 69479af1d829..9d82e39151fa 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm20b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm20b.c
@@ -71,6 +71,7 @@ gm20b_gr = {
 	.rops = gm200_gr_rops,
 	.ppc_nr = 1,
 	.grctx = &gm20b_grctx,
+	.zbc = &gf100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
index b87d86575036..d37c2646aad4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
@@ -29,6 +29,44 @@
 /*******************************************************************************
  * PGRAPH engine/subdev functions
  ******************************************************************************/
+void
+gp100_gr_zbc_clear_color(struct gf100_gr *gr, int zbc)
+{
+	struct nvkm_device *device = gr->base.engine.subdev.device;
+	const int znum =  zbc - 1;
+	const u32 zoff = znum * 4;
+
+	if (gr->zbc_color[zbc].format) {
+		nvkm_wr32(device, 0x418010 + zoff, gr->zbc_color[zbc].ds[0]);
+		nvkm_wr32(device, 0x41804c + zoff, gr->zbc_color[zbc].ds[1]);
+		nvkm_wr32(device, 0x418088 + zoff, gr->zbc_color[zbc].ds[2]);
+		nvkm_wr32(device, 0x4180c4 + zoff, gr->zbc_color[zbc].ds[3]);
+	}
+
+	nvkm_mask(device, 0x418100 + ((znum / 4) * 4),
+			  0x0000007f << ((znum % 4) * 7),
+			  gr->zbc_color[zbc].format << ((znum % 4) * 7));
+}
+
+void
+gp100_gr_zbc_clear_depth(struct gf100_gr *gr, int zbc)
+{
+	struct nvkm_device *device = gr->base.engine.subdev.device;
+	const int znum =  zbc - 1;
+	const u32 zoff = znum * 4;
+
+	if (gr->zbc_depth[zbc].format)
+		nvkm_wr32(device, 0x418110 + zoff, gr->zbc_depth[zbc].ds);
+	nvkm_mask(device, 0x41814c + ((znum / 4) * 4),
+			  0x0000007f << ((znum % 4) * 7),
+			  gr->zbc_depth[zbc].format << ((znum % 4) * 7));
+}
+
+const struct gf100_gr_func_zbc
+gp100_gr_zbc = {
+	.clear_color = gp100_gr_zbc_clear_color,
+	.clear_depth = gp100_gr_zbc_clear_depth,
+};
 
 void
 gp100_gr_init_rop_active_fbps(struct gf100_gr *gr)
@@ -168,6 +206,7 @@ gp100_gr = {
 	.tpc_nr = 5,
 	.ppc_nr = 2,
 	.grctx = &gp100_grctx,
+	.zbc = &gp100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
index 8d1b09b9c236..0d9b95ceb999 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
@@ -53,6 +53,7 @@ gp102_gr = {
 	.tpc_nr = 5,
 	.ppc_nr = 3,
 	.grctx = &gp102_grctx,
+	.zbc = &gp100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp104.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp104.c
index 289d8b272b42..af5740e3a4bb 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp104.c
@@ -46,6 +46,7 @@ gp104_gr = {
 	.tpc_nr = 5,
 	.ppc_nr = 3,
 	.grctx = &gp104_grctx,
+	.zbc = &gp100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
index 7ca037eda549..8771bd58ba9b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
@@ -39,6 +39,7 @@ gp107_gr = {
 	.tpc_nr = 3,
 	.ppc_nr = 1,
 	.grctx = &gp107_grctx,
+	.zbc = &gp100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
index 775c4cfdeade..fb4ce265d6ec 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
@@ -45,6 +45,7 @@ gp10b_gr = {
 	.tpc_nr = 2,
 	.ppc_nr = 1,
 	.grctx = &gp102_grctx,
+	.zbc = &gp100_gr_zbc,
 	.sclass = {
 		{ -1, -1, FERMI_TWOD_A },
 		{ -1, -1, KEPLER_INLINE_TO_MEMORY_B },
