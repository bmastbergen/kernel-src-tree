drm/atomic: Initialize variables in drm_atomic_helper_async_check() to make gcc happy

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Boris Brezillon <boris.brezillon@bootlin.com>
commit de2d8db395c32d121d02871819444b631f73e0b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/de2d8db3.failed

drm_atomic_helper_async_check() declares the plane, old_plane_state and
new_plane_state variables to iterate over all planes of the atomic
state and make sure only one plane is enabled.

Unfortunately gcc is not smart enough to figure out that the check on
n_planes is enough to guarantee that plane, new_plane_state and
old_plane_state are initialized.

Explicitly initialize those variables to NULL to make gcc happy.

Fixes: fef9df8b5945 ("drm/atomic: initial support for asynchronous plane update")
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
	Reviewed-by: Sean Paul <seanpaul@chromium.org>
Link: https://patchwork.freedesktop.org/patch/msgid/20180724133300.32023-1-boris.brezillon@bootlin.com
(cherry picked from commit de2d8db395c32d121d02871819444b631f73e0b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/drm_atomic_helper.c
diff --cc drivers/gpu/drm/drm_atomic_helper.c
index 1f08d597b87a,81e32199d3ef..000000000000
--- a/drivers/gpu/drm/drm_atomic_helper.c
+++ b/drivers/gpu/drm/drm_atomic_helper.c
@@@ -1388,11 -1510,11 +1388,17 @@@ int drm_atomic_helper_async_check(struc
  {
  	struct drm_crtc *crtc;
  	struct drm_crtc_state *crtc_state;
++<<<<<<< HEAD
 +	struct drm_crtc_commit *commit;
 +	struct drm_plane *__plane, *plane = NULL;
 +	struct drm_plane_state *__plane_state, *plane_state = NULL;
++=======
+ 	struct drm_plane *plane = NULL;
+ 	struct drm_plane_state *old_plane_state = NULL;
+ 	struct drm_plane_state *new_plane_state = NULL;
++>>>>>>> de2d8db395c3 (drm/atomic: Initialize variables in drm_atomic_helper_async_check() to make gcc happy)
  	const struct drm_plane_helper_funcs *funcs;
 -	int i, n_planes = 0;
 +	int i, j, n_planes = 0;
  
  	for_each_new_crtc_in_state(state, crtc, crtc_state, i) {
  		if (drm_atomic_crtc_needs_modeset(crtc_state))
* Unmerged path drivers/gpu/drm/drm_atomic_helper.c
