ceph: optimize pagevec iterating in ceph_writepages_start()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 0713e5f24b7deb88579dc312cf818b1a0809f02e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/0713e5f2.failed

ceph_writepages_start() supports writing non-continuous pages.
If it encounters a non-dirty or non-writeable page in pagevec,
it can continue to check the rest pages in pagevec.

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 0713e5f24b7deb88579dc312cf818b1a0809f02e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/addr.c
diff --cc fs/ceph/addr.c
index 2c8328a70fdb,5ca887bb5cae..000000000000
--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@@ -836,14 -899,9 +834,20 @@@ get_more_pages
  				unlock_page(page);
  				break;
  			}
++<<<<<<< HEAD
 +			if (wbc->sync_mode != WB_SYNC_NONE) {
 +				dout("waiting on writeback %p\n", page);
 +				wait_on_page_writeback(page);
 +			}
 +			if (page_offset(page) >=
 +			    (snap_size == -1 ? i_size : snap_size)) {
 +				dout("%p page eof %llu\n", page,
 +				     (snap_size == -1 ? i_size : snap_size));
++=======
+ 			if (page_offset(page) >= ceph_wbc.i_size) {
+ 				dout("%p page eof %llu\n",
+ 				     page, ceph_wbc.i_size);
++>>>>>>> 0713e5f24b7d (ceph: optimize pagevec iterating in ceph_writepages_start())
  				done = 1;
  				unlock_page(page);
  				break;
@@@ -936,9 -994,11 +940,17 @@@
  						  BLK_RW_ASYNC);
  			}
  
++<<<<<<< HEAD
 +			pages[locked_pages] = page;
 +			locked_pages++;
 +			len += PAGE_CACHE_SIZE;
++=======
+ 
+ 			pages[locked_pages++] = page;
+ 			pvec.pages[i] = NULL;
+ 
+ 			len += PAGE_SIZE;
++>>>>>>> 0713e5f24b7d (ceph: optimize pagevec iterating in ceph_writepages_start())
  		}
  
  		/* did we get anything? */
* Unmerged path fs/ceph/addr.c
