netfilter: ipset: send nonzero skbinfo extensions only

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
commit aef96193fe7b2791c4a3b19fe75426b929769471
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/aef96193.failed

Do not send zero valued skbinfo extensions to userspace at listing.

	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit aef96193fe7b2791c4a3b19fe75426b929769471)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netfilter/ipset/ip_set.h
diff --cc include/linux/netfilter/ipset/ip_set.h
index 3e9c90cf5227,f1606fa6132d..000000000000
--- a/include/linux/netfilter/ipset/ip_set.h
+++ b/include/linux/netfilter/ipset/ip_set.h
@@@ -235,6 -322,43 +235,46 @@@ ip_set_update_counter(struct ip_set_cou
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static inline void
+ ip_set_get_skbinfo(struct ip_set_skbinfo *skbinfo,
+ 		      const struct ip_set_ext *ext,
+ 		      struct ip_set_ext *mext, u32 flags)
+ {
+ 		mext->skbmark = skbinfo->skbmark;
+ 		mext->skbmarkmask = skbinfo->skbmarkmask;
+ 		mext->skbprio = skbinfo->skbprio;
+ 		mext->skbqueue = skbinfo->skbqueue;
+ }
+ static inline bool
+ ip_set_put_skbinfo(struct sk_buff *skb, struct ip_set_skbinfo *skbinfo)
+ {
+ 	/* Send nonzero parameters only */
+ 	return ((skbinfo->skbmark || skbinfo->skbmarkmask) &&
+ 		nla_put_net64(skb, IPSET_ATTR_SKBMARK,
+ 			      cpu_to_be64((u64)skbinfo->skbmark << 32 |
+ 					  skbinfo->skbmarkmask))) ||
+ 	       (skbinfo->skbprio &&
+ 	        nla_put_net32(skb, IPSET_ATTR_SKBPRIO,
+ 			      cpu_to_be32(skbinfo->skbprio))) ||
+ 	       (skbinfo->skbqueue &&
+ 	        nla_put_net16(skb, IPSET_ATTR_SKBQUEUE,
+ 			     cpu_to_be16(skbinfo->skbqueue)));
+ 
+ }
+ 
+ static inline void
+ ip_set_init_skbinfo(struct ip_set_skbinfo *skbinfo,
+ 		    const struct ip_set_ext *ext)
+ {
+ 	skbinfo->skbmark = ext->skbmark;
+ 	skbinfo->skbmarkmask = ext->skbmarkmask;
+ 	skbinfo->skbprio = ext->skbprio;
+ 	skbinfo->skbqueue = ext->skbqueue;
+ }
+ 
++>>>>>>> aef96193fe7b (netfilter: ipset: send nonzero skbinfo extensions only)
  static inline bool
  ip_set_put_counter(struct sk_buff *skb, struct ip_set_counter *counter)
  {
* Unmerged path include/linux/netfilter/ipset/ip_set.h
