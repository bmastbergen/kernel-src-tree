nvme-fabrics: handle the admin-only case properly in nvmf_check_ready

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 278ab3799a2588f97423180947f09ec5b576e79e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/278ab379.failed

In the ADMIN_ONLY state we don't have any I/O queues, but we should accept
all admin commands without further checks.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Reviewed-by:Â James Smart <james.smart@broadcom.com>
(cherry picked from commit 278ab3799a2588f97423180947f09ec5b576e79e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fabrics.h
diff --cc drivers/nvme/host/fabrics.h
index a8a5714322b0,e1818a27aa2d..000000000000
--- a/drivers/nvme/host/fabrics.h
+++ b/drivers/nvme/host/fabrics.h
@@@ -157,5 -162,17 +157,20 @@@ void nvmf_unregister_transport(struct n
  void nvmf_free_options(struct nvmf_ctrl_options *opts);
  int nvmf_get_address(struct nvme_ctrl *ctrl, char *buf, int size);
  bool nvmf_should_reconnect(struct nvme_ctrl *ctrl);
++<<<<<<< HEAD
++=======
+ blk_status_t nvmf_fail_nonready_command(struct request *rq);
+ bool __nvmf_check_ready(struct nvme_ctrl *ctrl, struct request *rq,
+ 		bool queue_live);
+ 
+ static inline bool nvmf_check_ready(struct nvme_ctrl *ctrl, struct request *rq,
+ 		bool queue_live)
+ {
+ 	if (likely(ctrl->state == NVME_CTRL_LIVE ||
+ 		   ctrl->state == NVME_CTRL_ADMIN_ONLY))
+ 		return true;
+ 	return __nvmf_check_ready(ctrl, rq, queue_live);
+ }
++>>>>>>> 278ab3799a25 (nvme-fabrics: handle the admin-only case properly in nvmf_check_ready)
  
  #endif /* _NVME_FABRICS_H */
* Unmerged path drivers/nvme/host/fabrics.h
