perf stat: Only auto-merge events that are PMU aliases

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 63ce8449bc1081711eef1add68909e9bd758de62
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/63ce8449.failed

Peter reported that when he explicitely asked for multiple events with
the same name on the command line it got coalesced into just one line,
i.e.:

   # perf stat -e cycles -e cycles -e cycles usleep 1

   Performance counter stats for 'usleep 1':

         3,269,652      cycles

       0.000884123 seconds time elapsed

  #

And while there is the --no-merges option to disable that auto-merging,
this is a blunt change in behaviour for such explicit request, so change
the code so that this auto merging is done only when handling the multi
PMU aliases with the same name that introduced this coalescing,
restoring the previous behaviour for the explicit case:

  # perf stat -e cycles -e cycles -e cycles usleep 1

   Performance counter stats for 'usleep 1':

         1,472,837      cycles
         1,472,837      cycles
         1,472,837      cycles

       0.001764870 seconds time elapsed

  #

	Reported-by: Peter Zijlstra <peterz@infradead.org>
	Acked-by: Andi Kleen <ak@linux.intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Fixes: 430daf2dc7af ("perf stat: Collapse identically named events")
Link: http://lkml.kernel.org/r/20170831184122.GK4831@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 63ce8449bc1081711eef1add68909e9bd758de62)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel.h
#	tools/perf/util/parse-events.c
diff --cc tools/perf/util/evsel.h
index 61c63f7ff74b,dd2c4b5112a5..000000000000
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@@ -128,6 -130,8 +128,11 @@@ struct perf_evsel 
  	char			*group_name;
  	bool			cmdline_group_boundary;
  	struct list_head	config_terms;
++<<<<<<< HEAD
++=======
+ 	int			bpf_fd;
+ 	bool			auto_merge_stats;
++>>>>>>> 63ce8449bc10 (perf stat: Only auto-merge events that are PMU aliases)
  	bool			merged_stat;
  	const char *		metric_expr;
  	const char *		metric_name;
diff --cc tools/perf/util/parse-events.c
index eb476984ddca,f6257fb4f08c..000000000000
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@@ -975,9 -1210,9 +976,13 @@@ int parse_events_add_numeric(struct par
  			 get_config_name(head_config), &config_terms);
  }
  
++<<<<<<< HEAD
 +int parse_events_add_pmu(struct parse_events_evlist *data,
++=======
+ static int __parse_events_add_pmu(struct parse_events_state *parse_state,
++>>>>>>> 63ce8449bc10 (perf stat: Only auto-merge events that are PMU aliases)
  			 struct list_head *list, char *name,
- 			 struct list_head *head_config)
+ 			 struct list_head *head_config, bool auto_merge_stats)
  {
  	struct perf_event_attr attr;
  	struct perf_pmu_info info;
@@@ -998,7 -1233,7 +1003,11 @@@
  
  	if (!head_config) {
  		attr.type = pmu->type;
++<<<<<<< HEAD
 +		evsel = __add_event(list, &data->idx, &attr, NULL, pmu->cpus, NULL);
++=======
+ 		evsel = __add_event(list, &parse_state->idx, &attr, NULL, pmu->cpus, NULL, auto_merge_stats);
++>>>>>>> 63ce8449bc10 (perf stat: Only auto-merge events that are PMU aliases)
  		return evsel ? 0 : -ENOMEM;
  	}
  
@@@ -1015,12 -1250,12 +1024,12 @@@
  	if (get_config_terms(head_config, &config_terms))
  		return -ENOMEM;
  
 -	if (perf_pmu__config(pmu, &attr, head_config, parse_state->error))
 +	if (perf_pmu__config(pmu, &attr, head_config, data->error))
  		return -EINVAL;
  
 -	evsel = __add_event(list, &parse_state->idx, &attr,
 +	evsel = __add_event(list, &data->idx, &attr,
  			    get_config_name(head_config), pmu->cpus,
- 			    &config_terms);
+ 			    &config_terms, auto_merge_stats);
  	if (evsel) {
  		evsel->unit = info.unit;
  		evsel->scale = info.scale;
@@@ -1033,7 -1268,14 +1042,18 @@@
  	return evsel ? 0 : -ENOMEM;
  }
  
++<<<<<<< HEAD
 +int parse_events_multi_pmu_add(struct parse_events_evlist *data,
++=======
+ int parse_events_add_pmu(struct parse_events_state *parse_state,
+ 			 struct list_head *list, char *name,
+ 			 struct list_head *head_config)
+ {
+ 	return __parse_events_add_pmu(parse_state, list, name, head_config, false);
+ }
+ 
+ int parse_events_multi_pmu_add(struct parse_events_state *parse_state,
++>>>>>>> 63ce8449bc10 (perf stat: Only auto-merge events that are PMU aliases)
  			       char *str, struct list_head **listp)
  {
  	struct list_head *head;
@@@ -1062,8 -1304,8 +1082,13 @@@
  					return -1;
  				list_add_tail(&term->list, head);
  
++<<<<<<< HEAD
 +				if (!parse_events_add_pmu(data, list,
 +						  pmu->name, head)) {
++=======
+ 				if (!__parse_events_add_pmu(parse_state, list,
+ 							    pmu->name, head, true)) {
++>>>>>>> 63ce8449bc10 (perf stat: Only auto-merge events that are PMU aliases)
  					pr_debug("%s -> %s/%s/\n", str,
  						 pmu->name, alias->str);
  					ok++;
diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c
index 4b0d0430c1e7..17c0d66de7d0 100644
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@ -1257,7 +1257,7 @@ static bool collect_data(struct perf_evsel *counter,
 	if (counter->merged_stat)
 		return false;
 	cb(counter, data, true);
-	if (!no_merge)
+	if (!no_merge && counter->auto_merge_stats)
 		collect_all_aliases(counter, cb, data);
 	return true;
 }
* Unmerged path tools/perf/util/evsel.h
* Unmerged path tools/perf/util/parse-events.c
