s390: move spectre sysfs attribute code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [s390] move spectre sysfs attribute code (Hendrik Brueckner) [1583564]
Rebuild_FUZZ: 91.67%
commit-author Martin Schwidefsky <schwidefsky@de.ibm.com>
commit 4253b0e0627ee3461e64c2495c616f1c8f6b127b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/4253b0e0.failed

The nospec-branch.c file is compiled without the gcc options to
generate expoline thunks. The return branch of the sysfs show
functions cpu_show_spectre_v1 and cpu_show_spectre_v2 is an indirect
branch as well. These need to be compiled with expolines.

Move the sysfs functions for spectre reporting to a separate file
and loose an '.' for one of the messages.

	Cc: stable@vger.kernel.org # 4.16
Fixes: d424986f1d ("s390: add sysfs attributes for spectre")
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 4253b0e0627ee3461e64c2495c616f1c8f6b127b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/Makefile
#	arch/s390/kernel/nospec-branch.c
diff --cc arch/s390/kernel/Makefile
index 597a10a12dc4,f92dd8ed3884..000000000000
--- a/arch/s390/kernel/Makefile
+++ b/arch/s390/kernel/Makefile
@@@ -26,35 -55,31 +26,40 @@@ CFLAGS_dumpstack.o	+= -fno-optimize-sib
  #
  CFLAGS_ptrace.o		+= -DUTS_MACHINE='"$(UTS_MACHINE)"'
  
 -obj-y	:= traps.o time.o process.o base.o early.o setup.o idle.o vtime.o
 +CFLAGS_sysinfo.o += -Iinclude/math-emu -Iarch/s390/math-emu -w
 +
 +obj-y	:= bitmap.o traps.o time.o process.o base.o early.o setup.o vtime.o
  obj-y	+= processor.o sys_s390.o ptrace.o signal.o cpcmd.o ebcdic.o nmi.o
 -obj-y	+= debug.o irq.o ipl.o dis.o diag.o vdso.o als.o
 +obj-y	+= debug.o irq.o ipl.o dis.o diag.o sclp.o vdso.o
  obj-y	+= sysinfo.o jump_label.o lgr.o os_info.o machine_kexec.o pgm_check.o
 -obj-y	+= runtime_instr.o cache.o fpu.o dumpstack.o guarded_storage.o sthyi.o
 -obj-y	+= entry.o reipl.o relocate_kernel.o kdebugfs.o alternative.o
 -obj-y	+= nospec-branch.o
 +obj-y	+= dumpstack.o guarded_storage.o alternative.o
  
 -extra-y				+= head.o head64.o vmlinux.lds
 +obj-y	+= $(if $(CONFIG_64BIT),entry64.o,entry.o)
 +obj-y	+= $(if $(CONFIG_64BIT),reipl64.o,reipl.o)
 +obj-y	+= $(if $(CONFIG_64BIT),relocate_kernel64.o,relocate_kernel.o)
  
++<<<<<<< HEAD
 +extra-y				+= head.o vmlinux.lds
 +extra-y				+= $(if $(CONFIG_64BIT),head64.o,head31.o)
++=======
+ obj-$(CONFIG_SYSFS)		+= nospec-sysfs.o
+ CFLAGS_REMOVE_nospec-branch.o	+= $(CC_FLAGS_EXPOLINE)
++>>>>>>> 4253b0e0627e (s390: move spectre sysfs attribute code)
  
 -obj-$(CONFIG_MODULES)		+= module.o
 +obj-$(CONFIG_MODULES)		+= s390_ksyms.o module.o
  obj-$(CONFIG_SMP)		+= smp.o
 -obj-$(CONFIG_SCHED_TOPOLOGY)	+= topology.o
 -obj-$(CONFIG_HIBERNATION)	+= suspend.o swsusp.o
 +obj-$(CONFIG_SCHED_BOOK)	+= topology.o
 +obj-$(CONFIG_HIBERNATION)	+= suspend.o swsusp_asm64.o
  obj-$(CONFIG_AUDIT)		+= audit.o
  compat-obj-$(CONFIG_AUDIT)	+= compat_audit.o
 -obj-$(CONFIG_COMPAT)		+= compat_linux.o compat_signal.o
 -obj-$(CONFIG_COMPAT)		+= compat_wrapper.o $(compat-obj-y)
 -obj-$(CONFIG_EARLY_PRINTK)	+= early_printk.o
 +obj-$(CONFIG_COMPAT)		+= compat_linux.o compat_signal.o \
 +					compat_wrapper.o compat_exec_domain.o \
 +					$(compat-obj-y)
 +
  obj-$(CONFIG_STACKTRACE)	+= stacktrace.o
  obj-$(CONFIG_KPROBES)		+= kprobes.o
 -obj-$(CONFIG_FUNCTION_TRACER)	+= mcount.o ftrace.o
 +obj-$(CONFIG_FUNCTION_TRACER)	+= $(if $(CONFIG_64BIT),mcount64.o,mcount.o)
 +obj-$(CONFIG_FUNCTION_TRACER)	+= ftrace.o
  obj-$(CONFIG_CRASH_DUMP)	+= crash_dump.o
  obj-$(CONFIG_UPROBES)		+= uprobes.o
  
* Unmerged path arch/s390/kernel/nospec-branch.c
* Unmerged path arch/s390/kernel/Makefile
* Unmerged path arch/s390/kernel/nospec-branch.c
diff --git a/arch/s390/kernel/nospec-sysfs.c b/arch/s390/kernel/nospec-sysfs.c
new file mode 100644
index 000000000000..8affad5f18cb
--- /dev/null
+++ b/arch/s390/kernel/nospec-sysfs.c
@@ -0,0 +1,21 @@
+// SPDX-License-Identifier: GPL-2.0
+#include <linux/device.h>
+#include <linux/cpu.h>
+#include <asm/facility.h>
+#include <asm/nospec-branch.h>
+
+ssize_t cpu_show_spectre_v1(struct device *dev,
+			    struct device_attribute *attr, char *buf)
+{
+	return sprintf(buf, "Mitigation: __user pointer sanitization\n");
+}
+
+ssize_t cpu_show_spectre_v2(struct device *dev,
+			    struct device_attribute *attr, char *buf)
+{
+	if (IS_ENABLED(CC_USING_EXPOLINE) && !nospec_disable)
+		return sprintf(buf, "Mitigation: execute trampolines\n");
+	if (__test_facility(82, S390_lowcore.alt_stfle_fac_list))
+		return sprintf(buf, "Mitigation: limited branch prediction\n");
+	return sprintf(buf, "Vulnerable\n");
+}
