net: sched: fix static key imbalance in case of ingress/clsact_init error

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] sched: fix static key imbalance in case of ingress/clsact_init error (Ivan Vecera) [1572720]
Rebuild_FUZZ: 96.45%
commit-author Jiri Pirko <jiri@mellanox.com>
commit b59e6979a86384e68b0ab6ffeab11f0034fba82d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b59e6979.failed

Move static key increments to the beginning of the init function
so they pair 1:1 with decrements in ingress/clsact_destroy,
which is called in case ingress/clsact_init fails.

Fixes: 6529eaba33f0 ("net: sched: introduce tcf block infractructure")
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b59e6979a86384e68b0ab6ffeab11f0034fba82d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_ingress.c
diff --cc net/sched/sch_ingress.c
index 790eb0f81e70,fc1286f499c1..000000000000
--- a/net/sched/sch_ingress.c
+++ b/net/sched/sch_ingress.c
@@@ -59,7 -68,15 +59,19 @@@ static int ingress_init(struct Qdisc *s
  	struct net_device *dev = qdisc_dev(sch);
  	int err;
  
++<<<<<<< HEAD
 +	err = tcf_block_get(&q->block, &dev->ingress_cl_list);
++=======
+ 	net_inc_ingress_queue();
+ 
+ 	mini_qdisc_pair_init(&q->miniqp, sch, &dev->miniq_ingress);
+ 
+ 	q->block_info.binder_type = TCF_BLOCK_BINDER_TYPE_CLSACT_INGRESS;
+ 	q->block_info.chain_head_change = clsact_chain_head_change;
+ 	q->block_info.chain_head_change_priv = &q->miniqp;
+ 
+ 	err = tcf_block_get_ext(&q->block, sch, &q->block_info);
++>>>>>>> b59e6979a863 (net: sched: fix static key imbalance in case of ingress/clsact_init error)
  	if (err)
  		return err;
  
@@@ -153,7 -173,16 +164,20 @@@ static int clsact_init(struct Qdisc *sc
  	struct net_device *dev = qdisc_dev(sch);
  	int err;
  
++<<<<<<< HEAD
 +	err = tcf_block_get(&q->ingress_block, &dev->ingress_cl_list);
++=======
+ 	net_inc_ingress_queue();
+ 	net_inc_egress_queue();
+ 
+ 	mini_qdisc_pair_init(&q->miniqp_ingress, sch, &dev->miniq_ingress);
+ 
+ 	q->ingress_block_info.binder_type = TCF_BLOCK_BINDER_TYPE_CLSACT_INGRESS;
+ 	q->ingress_block_info.chain_head_change = clsact_chain_head_change;
+ 	q->ingress_block_info.chain_head_change_priv = &q->miniqp_ingress;
+ 
+ 	err = tcf_block_get_ext(&q->ingress_block, sch, &q->ingress_block_info);
++>>>>>>> b59e6979a863 (net: sched: fix static key imbalance in case of ingress/clsact_init error)
  	if (err)
  		return err;
  
* Unmerged path net/sched/sch_ingress.c
