/dev/mem: Avoid overwriting "err" in read_mem()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Kees Cook <keescook@chromium.org>
commit b5b38200ebe54879a7264cb6f33821f61c586a7e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b5b38200.failed

Successes in probe_kernel_read() would mask failures in copy_to_user()
during read_mem().

	Reported-by: Brad Spengler <spender@grsecurity.net>
Fixes: 22ec1a2aea73 ("/dev/mem: Add bounce buffer for copy-out")
	Cc: stable@vger.kernel.org
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit b5b38200ebe54879a7264cb6f33821f61c586a7e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/mem.c
diff --cc drivers/char/mem.c
index 0a67d2907a65,ffeb60d3434c..000000000000
--- a/drivers/char/mem.c
+++ b/drivers/char/mem.c
@@@ -128,9 -131,13 +128,9 @@@ static ssize_t read_mem(struct file *fi
  	}
  #endif
  
 -	bounce = kmalloc(PAGE_SIZE, GFP_KERNEL);
 -	if (!bounce)
 -		return -ENOMEM;
 -
  	while (count > 0) {
  		unsigned long remaining;
- 		int allowed;
+ 		int allowed, probe;
  
  		sz = size_inside_page(p, count);
  
@@@ -148,11 -158,14 +148,20 @@@
  			 */
  			ptr = xlate_dev_mem_ptr(p);
  			if (!ptr)
 -				goto failed;
 +				return -EFAULT;
 +
 +			remaining = copy_to_user(buf, ptr, sz);
  
++<<<<<<< HEAD
 +			unxlate_dev_mem_ptr(p, ptr);
++=======
+ 			probe = probe_kernel_read(bounce, ptr, sz);
+ 			unxlate_dev_mem_ptr(p, ptr);
+ 			if (probe)
+ 				goto failed;
+ 
+ 			remaining = copy_to_user(buf, bounce, sz);
++>>>>>>> b5b38200ebe5 (/dev/mem: Avoid overwriting "err" in read_mem())
  		}
  
  		if (remaining)
* Unmerged path drivers/char/mem.c
