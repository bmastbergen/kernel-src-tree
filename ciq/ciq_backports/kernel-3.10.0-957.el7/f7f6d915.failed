i2c: i801: Restore configuration at shutdown

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [i2c] i801: Restore configuration at shutdown (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 93.98%
commit-author Jean Delvare <jdelvare@suse.de>
commit f7f6d915a10f7f2bce17e3b1b7d3376562395a28
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/f7f6d915.failed

On some systems, the BIOS expects certain SMBus register values to
match the hardware defaults. Restore these configuration registers at
shutdown time to avoid confusing the BIOS. This avoids hard-locking
such systems upon reboot.

	Signed-off-by: Jean Delvare <jdelvare@suse.de>
	Tested-by: Jason Andryuk <jandryuk@gmail.com>
	Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
	Cc: stable@vger.kernel.org
(cherry picked from commit f7f6d915a10f7f2bce17e3b1b7d3376562395a28)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/busses/i2c-i801.c
diff --cc drivers/i2c/busses/i2c-i801.c
index cb34b050a17d,e0d59e9ff3c6..000000000000
--- a/drivers/i2c/busses/i2c-i801.c
+++ b/drivers/i2c/busses/i2c-i801.c
@@@ -1568,14 -1701,22 +1568,23 @@@ static void i801_remove(struct pci_dev 
  	 */
  }
  
+ static void i801_shutdown(struct pci_dev *dev)
+ {
+ 	struct i801_priv *priv = pci_get_drvdata(dev);
+ 
+ 	/* Restore config registers to avoid hard hang on some systems */
+ 	i801_disable_host_notify(priv);
+ 	pci_write_config_byte(dev, SMBHSTCFG, priv->original_hstcfg);
+ }
+ 
  #ifdef CONFIG_PM
 -static int i801_suspend(struct device *dev)
 +static int i801_suspend(struct pci_dev *dev, pm_message_t mesg)
  {
 -	struct pci_dev *pci_dev = to_pci_dev(dev);
 -	struct i801_priv *priv = pci_get_drvdata(pci_dev);
 +	struct i801_priv *priv = pci_get_drvdata(dev);
  
 -	pci_write_config_byte(pci_dev, SMBHSTCFG, priv->original_hstcfg);
 +	pci_save_state(dev);
 +	pci_write_config_byte(dev, SMBHSTCFG, priv->original_hstcfg);
 +	pci_set_power_state(dev, pci_choose_state(dev, mesg));
  	return 0;
  }
  
@@@ -1595,8 -1739,10 +1604,15 @@@ static struct pci_driver i801_driver = 
  	.id_table	= i801_ids,
  	.probe		= i801_probe,
  	.remove		= i801_remove,
++<<<<<<< HEAD
 +	.suspend	= i801_suspend,
 +	.resume		= i801_resume,
++=======
+ 	.shutdown	= i801_shutdown,
+ 	.driver		= {
+ 		.pm	= &i801_pm_ops,
+ 	},
++>>>>>>> f7f6d915a10f (i2c: i801: Restore configuration at shutdown)
  };
  
  static int __init i2c_i801_init(void)
* Unmerged path drivers/i2c/busses/i2c-i801.c
