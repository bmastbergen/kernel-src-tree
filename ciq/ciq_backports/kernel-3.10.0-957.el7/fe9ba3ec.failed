i2c: i801: use BIT() macro for bits definition

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [i2c] i801: use BIT() macro for bits definition (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 94.25%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit fe9ba3ec1b6d472c4304728b8193900e7b160ea6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/fe9ba3ec.failed

i801 mixes hexadecimal and decimal values for defining bits. However,
we have a nice BIT() macro for this exact purpose.

No functional changes, cleanup only.

	Reviewed-by: Jean Delvare <jdelvare@suse.de>
	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
(cherry picked from commit fe9ba3ec1b6d472c4304728b8193900e7b160ea6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/busses/i2c-i801.c
diff --cc drivers/i2c/busses/i2c-i801.c
index cb34b050a17d,5ff5c30c2a13..000000000000
--- a/drivers/i2c/busses/i2c-i801.c
+++ b/drivers/i2c/busses/i2c-i801.c
@@@ -133,22 -137,27 +133,36 @@@
  #define SBREG_SMBCTRL		0xc6000c
  
  /* Host status bits for SMBPCISTS */
- #define SMBPCISTS_INTS		0x08
+ #define SMBPCISTS_INTS		BIT(3)
  
  /* Control bits for SMBPCICTL */
- #define SMBPCICTL_INTDIS	0x0400
+ #define SMBPCICTL_INTDIS	BIT(10)
  
  /* Host configuration bits for SMBHSTCFG */
++<<<<<<< HEAD
 +#define SMBHSTCFG_HST_EN	1
 +#define SMBHSTCFG_SMB_SMI_EN	2
 +#define SMBHSTCFG_I2C_EN	4
++=======
+ #define SMBHSTCFG_HST_EN	BIT(0)
+ #define SMBHSTCFG_SMB_SMI_EN	BIT(1)
+ #define SMBHSTCFG_I2C_EN	BIT(2)
+ #define SMBHSTCFG_SPD_WD	BIT(4)
++>>>>>>> fe9ba3ec1b6d (i2c: i801: use BIT() macro for bits definition)
  
  /* TCO configuration bits for TCOCTL */
- #define TCOCTL_EN		0x0100
+ #define TCOCTL_EN		BIT(8)
  
++<<<<<<< HEAD
++=======
+ /* Auxiliary status register bits, ICH4+ only */
+ #define SMBAUXSTS_CRCE		BIT(0)
+ #define SMBAUXSTS_STCO		BIT(1)
+ 
++>>>>>>> fe9ba3ec1b6d (i2c: i801: use BIT() macro for bits definition)
  /* Auxiliary control register bits, ICH4+ only */
- #define SMBAUXCTL_CRC		1
- #define SMBAUXCTL_E32B		2
+ #define SMBAUXCTL_CRC		BIT(0)
+ #define SMBAUXCTL_E32B		BIT(1)
  
  /* Other settings */
  #define MAX_RETRIES		400
@@@ -163,22 -172,28 +177,31 @@@
  #define I801_I2C_BLOCK_DATA	0x18	/* ICH5 and later */
  
  /* I801 Host Control register bits */
- #define SMBHSTCNT_INTREN	0x01
- #define SMBHSTCNT_KILL		0x02
- #define SMBHSTCNT_LAST_BYTE	0x20
- #define SMBHSTCNT_START		0x40
- #define SMBHSTCNT_PEC_EN	0x80	/* ICH3 and later */
+ #define SMBHSTCNT_INTREN	BIT(0)
+ #define SMBHSTCNT_KILL		BIT(1)
+ #define SMBHSTCNT_LAST_BYTE	BIT(5)
+ #define SMBHSTCNT_START		BIT(6)
+ #define SMBHSTCNT_PEC_EN	BIT(7)	/* ICH3 and later */
  
  /* I801 Hosts Status register bits */
- #define SMBHSTSTS_BYTE_DONE	0x80
- #define SMBHSTSTS_INUSE_STS	0x40
- #define SMBHSTSTS_SMBALERT_STS	0x20
- #define SMBHSTSTS_FAILED	0x10
- #define SMBHSTSTS_BUS_ERR	0x08
- #define SMBHSTSTS_DEV_ERR	0x04
- #define SMBHSTSTS_INTR		0x02
- #define SMBHSTSTS_HOST_BUSY	0x01
- 
+ #define SMBHSTSTS_BYTE_DONE	BIT(7)
+ #define SMBHSTSTS_INUSE_STS	BIT(6)
+ #define SMBHSTSTS_SMBALERT_STS	BIT(5)
+ #define SMBHSTSTS_FAILED	BIT(4)
+ #define SMBHSTSTS_BUS_ERR	BIT(3)
+ #define SMBHSTSTS_DEV_ERR	BIT(2)
+ #define SMBHSTSTS_INTR		BIT(1)
+ #define SMBHSTSTS_HOST_BUSY	BIT(0)
+ 
++<<<<<<< HEAD
++=======
+ /* Host Notify Status register bits */
+ #define SMBSLVSTS_HST_NTFY_STS	BIT(0)
+ 
+ /* Host Notify Command register bits */
+ #define SMBSLVCMD_HST_NTFY_INTREN	BIT(0)
+ 
++>>>>>>> fe9ba3ec1b6d (i2c: i801: use BIT() macro for bits definition)
  #define STATUS_ERROR_FLAGS	(SMBHSTSTS_FAILED | SMBHSTSTS_BUS_ERR | \
  				 SMBHSTSTS_DEV_ERR)
  
* Unmerged path drivers/i2c/busses/i2c-i801.c
