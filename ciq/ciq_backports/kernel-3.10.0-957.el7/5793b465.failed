IB/rxe: remove unnecessary skb_clone in xmit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Zhu Yanjun <yanjun.zhu@oracle.com>
commit 5793b46521553774d66653993cfdc132846bb23d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/5793b465.failed

In xmit, there is a skb_clone. This function copies the struct sk_buff.
And some parameters are changed to the new skb. Then the new skb is sent
while the old skb is freed.

While the function skb_clone is removed, the parameter changes are made on
the old skb, then the old skb is sent. It can also work well.

The following tests are made.

 server                       client
---------                    ---------
|1.1.1.1|<----rxe-channel--->|1.1.1.2|
---------                    ---------

On server: rping -s -a 1.1.1.1 -v -C 1000 -S 512
On client: rping -c -a 1.1.1.1 -v -C 1000 -S 512

The kernel config CONFIG_DEBUG_KMEMLEAK is enabled on both server
and client.

This test runs for several hours. There is no memory leak and the whole
system can work well.

As the above network, the following tests are made.

Server: ibv_rc_pingpong -d rxe0 -g 1
Client: ibv_rc_pingpong -d rxe0 -g 1 1.1.1.1

The result on Server.
Before:
8192000 bytes in 0.88 seconds = 74.36 Mbit/sec
1000 iters in 0.88 seconds = 881.30 usec/iter

After:
8192000 bytes in 0.81 seconds = 81.15 Mbit/sec
1000 iters in 0.81 seconds = 807.62 usec/iter

The throughput is enhanced and the latency is reduced.

CC: Srinivas Eeda <srinivas.eeda@oracle.com>
CC: Joe Jin <joe.jin@oracle.com>
CC: Junxiao Bi <junxiao.bi@oracle.com>
	Signed-off-by: Zhu Yanjun <yanjun.zhu@oracle.com>

	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 5793b46521553774d66653993cfdc132846bb23d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rxe/rxe_net.c
diff --cc drivers/infiniband/sw/rxe/rxe_net.c
index c820a9a52d8e,159246b03867..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_net.c
+++ b/drivers/infiniband/sw/rxe/rxe_net.c
@@@ -469,9 -464,9 +464,15 @@@ int rxe_send(struct rxe_dev *rxe, struc
  	atomic_inc(&pkt->qp->skb_out);
  
  	if (av->network_type == RDMA_NETWORK_IPV4) {
++<<<<<<< HEAD
 +		err = ip_local_out(nskb);
 +	} else if (av->network_type == RDMA_NETWORK_IPV6) {
 +		err = ip6_local_out(nskb);
++=======
+ 		err = ip_local_out(dev_net(skb_dst(skb)->dev), skb->sk, skb);
+ 	} else if (av->network_type == RDMA_NETWORK_IPV6) {
+ 		err = ip6_local_out(dev_net(skb_dst(skb)->dev), skb->sk, skb);
++>>>>>>> 5793b4652155 (IB/rxe: remove unnecessary skb_clone in xmit)
  	} else {
  		pr_err("Unknown layer 3 protocol: %d\n", av->network_type);
  		atomic_dec(&pkt->qp->skb_out);
* Unmerged path drivers/infiniband/sw/rxe/rxe_net.c
