libnvdimm: re-enable deep flush for pmem devices via fsync()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Dave Jiang <dave.jiang@intel.com>
commit 5fdf8e5ba5666fe153bd61f851a40078a6347822
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/5fdf8e5b.failed

Re-enable deep flush so that users always have a way to be sure that a
write makes it all the way out to media. Writes from the PMEM driver
always arrive at the NVDIMM since movnt is used to bypass the cache, and
the driver relies on the ADR (Asynchronous DRAM Refresh) mechanism to
flush write buffers on power failure. The Deep Flush mechanism is there
to explicitly write buffers to protect against (rare) ADR failure.  This
change prevents a regression in deep flush behavior so that applications
can continue to depend on fsync() as a mechanism to trigger deep flush
in the filesystem-DAX case.

Fixes: 06e8ccdab15f4 ("acpi: nfit: Add support for detect platform CPU cache...")
	Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
	Signed-off-by: Dave Jiang <dave.jiang@intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 5fdf8e5ba5666fe153bd61f851a40078a6347822)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/pmem.c
diff --cc drivers/nvdimm/pmem.c
index 49eeb1950ba6,06f8dcc52ca6..000000000000
--- a/drivers/nvdimm/pmem.c
+++ b/drivers/nvdimm/pmem.c
@@@ -291,9 -330,12 +291,15 @@@ static int pmem_attach_disk(struct devi
  	dev_set_drvdata(dev, pmem);
  	pmem->phys_addr = res->start;
  	pmem->size = resource_size(res);
 -	fua = nvdimm_has_flush(nd_region);
 -	if (!IS_ENABLED(CONFIG_ARCH_HAS_UACCESS_FLUSHCACHE) || fua < 0) {
 +	if (!IS_ENABLED(CONFIG_ARCH_HAS_UACCESS_FLUSHCACHE)
 +			|| nvdimm_has_flush(nd_region) < 0)
  		dev_warn(dev, "unable to guarantee persistence of writes\n");
++<<<<<<< HEAD
++=======
+ 		fua = 0;
+ 	}
+ 	wbc = nvdimm_has_cache(nd_region);
++>>>>>>> 5fdf8e5ba566 (libnvdimm: re-enable deep flush for pmem devices via fsync())
  
  	if (!devm_request_mem_region(dev, res->start, resource_size(res),
  				dev_name(&ndns->dev))) {
* Unmerged path drivers/nvdimm/pmem.c
