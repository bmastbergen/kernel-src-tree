Revert "uio: use request_threaded_irq instead"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [uio] Revert "use request_threaded_irq instead" (Xiubo Li) [1560418]
Rebuild_FUZZ: 94.25%
commit-author Xiubo Li <xiubli@redhat.com>
commit 3d27c4de8d4fb2d4099ff324671792aa2578c6f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3d27c4de.failed

Since mutex lock in irq hanler is useless currently, here will
remove it together with it.

This reverts commit 9421e45f5ff3d558cf8b75a8cc0824530caf3453.

	Reported-by: james.r.harris@intel.com
CC: Ahsan Atta <ahsan.atta@intel.com>
	Signed-off-by: Xiubo Li <xiubli@redhat.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 3d27c4de8d4fb2d4099ff324671792aa2578c6f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/uio/uio.c
diff --cc drivers/uio/uio.c
index 6a5a7703969f,d7fb49366e78..000000000000
--- a/drivers/uio/uio.c
+++ b/drivers/uio/uio.c
@@@ -399,8 -441,9 +399,12 @@@ EXPORT_SYMBOL_GPL(uio_event_notify)
  static irqreturn_t uio_interrupt(int irq, void *dev_id)
  {
  	struct uio_device *idev = (struct uio_device *)dev_id;
 -	irqreturn_t ret;
 +	irqreturn_t ret = idev->info->handler(irq, idev->info);
  
++<<<<<<< HEAD
++=======
+ 	ret = idev->info->handler(irq, idev->info);
++>>>>>>> 3d27c4de8d4f (Revert "uio: use request_threaded_irq instead")
  	if (ret == IRQ_HANDLED)
  		uio_event_notify(idev->info);
  
@@@ -853,6 -958,14 +857,17 @@@ int __uio_register_device(struct modul
  	info->uio_dev = idev;
  
  	if (info->irq && (info->irq != UIO_IRQ_CUSTOM)) {
++<<<<<<< HEAD
++=======
+ 		/*
+ 		 * Note that we deliberately don't use devm_request_irq
+ 		 * here. The parent module can unregister the UIO device
+ 		 * and call pci_disable_msi, which requires that this
+ 		 * irq has been freed. However, the device may have open
+ 		 * FDs at the time of unregister and therefore may not be
+ 		 * freed until they are released.
+ 		 */
++>>>>>>> 3d27c4de8d4f (Revert "uio: use request_threaded_irq instead")
  		ret = request_irq(info->irq, uio_interrupt,
  				  info->irq_flags, info->name, idev);
  		if (ret)
* Unmerged path drivers/uio/uio.c
