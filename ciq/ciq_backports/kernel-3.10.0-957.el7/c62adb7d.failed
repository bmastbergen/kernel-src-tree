IB/srp: Fix IPv6 address parsing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Bart Van Assche <bart.vanassche@wdc.com>
commit c62adb7def71d7e0b4ba44f8da81a448eb53d6d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/c62adb7d.failed

Split IPv6 addresses at the colon that separates the IPv6 address
and the port number instead of at a colon in the middle of the IPv6
address. Check whether the IPv6 address is surrounded with square
brackets.

Fixes: 19f313438c77 ("IB/srp: Add RDMA/CM support")
	Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit c62adb7def71d7e0b4ba44f8da81a448eb53d6d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srp/ib_srp.c
diff --cc drivers/infiniband/ulp/srp/ib_srp.c
index 208be1d8f5b5,4c52ca922f0b..000000000000
--- a/drivers/infiniband/ulp/srp/ib_srp.c
+++ b/drivers/infiniband/ulp/srp/ib_srp.c
@@@ -3156,7 -3412,44 +3156,46 @@@ static const match_table_t srp_opt_toke
  	{ SRP_OPT_ERR,			NULL 			}
  };
  
++<<<<<<< HEAD
 +static int srp_parse_options(const char *buf, struct srp_target_port *target)
++=======
+ /**
+  * srp_parse_in - parse an IP address and port number combination
+  *
+  * Parse the following address formats:
+  * - IPv4: <ip_address>:<port>, e.g. 1.2.3.4:5.
+  * - IPv6: \[<ipv6_address>\]:<port>, e.g. [1::2:3%4]:5.
+  */
+ static int srp_parse_in(struct net *net, struct sockaddr_storage *sa,
+ 			const char *addr_port_str)
+ {
+ 	char *addr_end, *addr = kstrdup(addr_port_str, GFP_KERNEL);
+ 	char *port_str;
+ 	int ret;
+ 
+ 	if (!addr)
+ 		return -ENOMEM;
+ 	port_str = strrchr(addr, ':');
+ 	if (!port_str)
+ 		return -EINVAL;
+ 	*port_str++ = '\0';
+ 	ret = inet_pton_with_scope(net, AF_INET, addr, port_str, sa);
+ 	if (ret && addr[0]) {
+ 		addr_end = addr + strlen(addr) - 1;
+ 		if (addr[0] == '[' && *addr_end == ']') {
+ 			*addr_end = '\0';
+ 			ret = inet_pton_with_scope(net, AF_INET6, addr + 1,
+ 						   port_str, sa);
+ 		}
+ 	}
+ 	kfree(addr);
+ 	pr_debug("%s -> %pISpfsc\n", addr_port_str, sa);
+ 	return ret;
+ }
+ 
+ static int srp_parse_options(struct net *net, const char *buf,
+ 			     struct srp_target_port *target)
++>>>>>>> c62adb7def71 (IB/srp: Fix IPv6 address parsing)
  {
  	char *options, *sep_opt;
  	char *p;
* Unmerged path drivers/infiniband/ulp/srp/ib_srp.c
