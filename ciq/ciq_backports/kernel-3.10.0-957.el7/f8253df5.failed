net: sch: red: Change offloaded xstats to be incremental

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] sch: red: Change offloaded xstats to be incremental (Ivan Vecera) [1520304]
Rebuild_FUZZ: 95.33%
commit-author Nogah Frankel <nogahf@mellanox.com>
commit f8253df553537518e9f87fa2eb599d68a2df092b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/f8253df5.failed

Change the value of the xstats requested from the driver for offloaded RED
to be incremental, like the normal stats.
It increases consistency - if a qdisc stops being offloaded its xstats
don't change.

	Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
	Reviewed-by: Yuval Mintz <yuvalm@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f8253df553537518e9f87fa2eb599d68a2df092b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_red.c
diff --cc net/sched/sch_red.c
index 5e2e228d6957,0af1c1254e0b..000000000000
--- a/net/sched/sch_red.c
+++ b/net/sched/sch_red.c
@@@ -276,13 -343,26 +276,36 @@@ nla_put_failure
  static int red_dump_stats(struct Qdisc *sch, struct gnet_dump *d)
  {
  	struct red_sched_data *q = qdisc_priv(sch);
++<<<<<<< HEAD
 +	struct tc_red_xstats st = {
 +		.early	= q->stats.prob_drop + q->stats.forced_drop,
 +		.pdrop	= q->stats.pdrop,
 +		.other	= q->stats.other,
 +		.marked	= q->stats.prob_mark + q->stats.forced_mark,
 +	};
 +
++=======
+ 	struct net_device *dev = qdisc_dev(sch);
+ 	struct tc_red_xstats st = {0};
+ 
+ 	if (sch->flags & TCQ_F_OFFLOADED) {
+ 		struct tc_red_qopt_offload hw_stats_request = {
+ 			.command = TC_RED_XSTATS,
+ 			.handle = sch->handle,
+ 			.parent = sch->parent,
+ 			{
+ 				.xstats = &q->stats,
+ 			},
+ 		};
+ 		dev->netdev_ops->ndo_setup_tc(dev, TC_SETUP_QDISC_RED,
+ 					      &hw_stats_request);
+ 	}
+ 	st.early = q->stats.prob_drop + q->stats.forced_drop;
+ 	st.pdrop = q->stats.pdrop;
+ 	st.other = q->stats.other;
+ 	st.marked = q->stats.prob_mark + q->stats.forced_mark;
+ 
++>>>>>>> f8253df55353 (net: sch: red: Change offloaded xstats to be incremental)
  	return gnet_stats_copy_app(d, &st, sizeof(st));
  }
  
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
index b5397da94d7f..da02c51acdec 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
@@ -191,6 +191,7 @@ mlxsw_sp_qdisc_get_red_xstats(struct mlxsw_sp_port *mlxsw_sp_port, u32 handle,
 {
 	struct red_stats *xstats_base = &mlxsw_sp_qdisc->xstats_base;
 	struct mlxsw_sp_port_xstats *xstats;
+	int early_drops, marks, pdrops;
 
 	if (mlxsw_sp_qdisc->handle != handle ||
 	    mlxsw_sp_qdisc->type != MLXSW_SP_QDISC_RED)
@@ -198,9 +199,17 @@ mlxsw_sp_qdisc_get_red_xstats(struct mlxsw_sp_port *mlxsw_sp_port, u32 handle,
 
 	xstats = &mlxsw_sp_port->periodic_hw_stats.xstats;
 
-	res->prob_drop = xstats->wred_drop[tclass_num] - xstats_base->prob_drop;
-	res->prob_mark = xstats->ecn - xstats_base->prob_mark;
-	res->pdrop = xstats->tail_drop[tclass_num] - xstats_base->pdrop;
+	early_drops = xstats->wred_drop[tclass_num] - xstats_base->prob_drop;
+	marks = xstats->ecn - xstats_base->prob_mark;
+	pdrops = xstats->tail_drop[tclass_num] - xstats_base->pdrop;
+
+	res->pdrop += pdrops;
+	res->prob_drop += early_drops;
+	res->prob_mark += marks;
+
+	xstats_base->pdrop += pdrops;
+	xstats_base->prob_drop += early_drops;
+	xstats_base->prob_mark += marks;
 	return 0;
 }
 
* Unmerged path net/sched/sch_red.c
