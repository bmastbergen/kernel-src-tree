x86/bugs: Concentrate bug reporting into a separate function

jira LE-1907
cve CVE-2018-3620
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] bugs: concentrate bug reporting into a separate function (Christoph von Recklinghausen) [1593384] {CVE-2018-3620}
Rebuild_FUZZ: 96.55%
commit-author Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
commit d1059518b4789cabe34bb4b714d07e6089c82ca1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d1059518.failed

Those SysFS functions have a similar preamble, as such make common
code to handle them.

	Suggested-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit d1059518b4789cabe34bb4b714d07e6089c82ca1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/bugs.c
diff --cc arch/x86/kernel/cpu/bugs.c
index 29b8876b1f95,ad613f73d071..000000000000
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@@ -201,25 -314,48 +201,69 @@@ static void __init spectre_v2_select_mi
  #undef pr_fmt
  
  #ifdef CONFIG_SYSFS
++<<<<<<< HEAD
 +ssize_t cpu_show_meltdown(struct device *dev,
 +			  struct device_attribute *attr, char *buf)
 +{
 +	if (boot_cpu_data.x86_vendor == X86_VENDOR_AMD)
 +		return sprintf(buf, "Not affected\n");
 +	if (kaiser_enabled)
 +		return sprintf(buf, "Mitigation: PTI\n");
 +	return sprintf(buf, "Vulnerable\n");
++=======
+ 
+ ssize_t cpu_show_common(struct device *dev, struct device_attribute *attr,
+ 			char *buf, unsigned int bug)
+ {
+ 	if (!boot_cpu_has_bug(bug))
+ 		return sprintf(buf, "Not affected\n");
+ 
+ 	switch (bug) {
+ 	case X86_BUG_CPU_MELTDOWN:
+ 		if (boot_cpu_has(X86_FEATURE_PTI))
+ 			return sprintf(buf, "Mitigation: PTI\n");
+ 
+ 		break;
+ 
+ 	case X86_BUG_SPECTRE_V1:
+ 		return sprintf(buf, "Mitigation: __user pointer sanitization\n");
+ 
+ 	case X86_BUG_SPECTRE_V2:
+ 		return sprintf(buf, "%s%s%s%s\n", spectre_v2_strings[spectre_v2_enabled],
+ 			       boot_cpu_has(X86_FEATURE_USE_IBPB) ? ", IBPB" : "",
+ 			       boot_cpu_has(X86_FEATURE_USE_IBRS_FW) ? ", IBRS_FW" : "",
+ 			       spectre_v2_module_string());
+ 
+ 	default:
+ 		break;
+ 	}
+ 
+ 	return sprintf(buf, "Vulnerable\n");
+ }
+ 
+ ssize_t cpu_show_meltdown(struct device *dev, struct device_attribute *attr, char *buf)
+ {
+ 	return cpu_show_common(dev, attr, buf, X86_BUG_CPU_MELTDOWN);
++>>>>>>> d1059518b478 (x86/bugs: Concentrate bug reporting into a separate function)
  }
  
 -ssize_t cpu_show_spectre_v1(struct device *dev, struct device_attribute *attr, char *buf)
 +ssize_t cpu_show_spectre_v1(struct device *dev,
 +			    struct device_attribute *attr, char *buf)
  {
++<<<<<<< HEAD
 +	return sprintf(buf, "Mitigation: Load fences\n");
++=======
+ 	return cpu_show_common(dev, attr, buf, X86_BUG_SPECTRE_V1);
++>>>>>>> d1059518b478 (x86/bugs: Concentrate bug reporting into a separate function)
  }
  
 -ssize_t cpu_show_spectre_v2(struct device *dev, struct device_attribute *attr, char *buf)
 +ssize_t cpu_show_spectre_v2(struct device *dev,
 +			    struct device_attribute *attr, char *buf)
  {
++<<<<<<< HEAD
 +	return sprintf(buf, "%s\n", spectre_v2_strings[spec_ctrl_get_mitigation()]);
++=======
+ 	return cpu_show_common(dev, attr, buf, X86_BUG_SPECTRE_V2);
++>>>>>>> d1059518b478 (x86/bugs: Concentrate bug reporting into a separate function)
  }
  #endif
* Unmerged path arch/x86/kernel/cpu/bugs.c
