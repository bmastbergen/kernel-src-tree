net/mlx5e: Switch RFC 2863 counters to use stats group API

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Switch RFC 2863 counters to use stats group API (Alaa Hleihel) [1520297]
Rebuild_FUZZ: 96.43%
commit-author Kamal Heib <kamalh@mellanox.com>
commit fc8e64a3118ee13bc4cafa6a31ea74daf2d644d9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/fc8e64a3.failed

Switch the RFC 2863 counters to use the new stats group API.

	Signed-off-by: Kamal Heib <kamalh@mellanox.com>
	Reviewed-by: Gal Pressman <galp@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit fc8e64a3118ee13bc4cafa6a31ea74daf2d644d9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
index 6008820e81eb,58dc22e5ac53..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
@@@ -231,33 -144,6 +228,36 @@@ struct mlx5e_pport_stats 
  	__be64 eth_ext_counters[MLX5_ST_SZ_QW(ppcnt_reg)];
  };
  
++<<<<<<< HEAD
 +static const struct counter_desc pport_802_3_stats_desc[] = {
 +	{ "tx_packets_phy", PPORT_802_3_OFF(a_frames_transmitted_ok) },
 +	{ "rx_packets_phy", PPORT_802_3_OFF(a_frames_received_ok) },
 +	{ "rx_crc_errors_phy", PPORT_802_3_OFF(a_frame_check_sequence_errors) },
 +	{ "tx_bytes_phy", PPORT_802_3_OFF(a_octets_transmitted_ok) },
 +	{ "rx_bytes_phy", PPORT_802_3_OFF(a_octets_received_ok) },
 +	{ "tx_multicast_phy", PPORT_802_3_OFF(a_multicast_frames_xmitted_ok) },
 +	{ "tx_broadcast_phy", PPORT_802_3_OFF(a_broadcast_frames_xmitted_ok) },
 +	{ "rx_multicast_phy", PPORT_802_3_OFF(a_multicast_frames_received_ok) },
 +	{ "rx_broadcast_phy", PPORT_802_3_OFF(a_broadcast_frames_received_ok) },
 +	{ "rx_in_range_len_errors_phy", PPORT_802_3_OFF(a_in_range_length_errors) },
 +	{ "rx_out_of_range_len_phy", PPORT_802_3_OFF(a_out_of_range_length_field) },
 +	{ "rx_oversize_pkts_phy", PPORT_802_3_OFF(a_frame_too_long_errors) },
 +	{ "rx_symbol_err_phy", PPORT_802_3_OFF(a_symbol_error_during_carrier) },
 +	{ "tx_mac_control_phy", PPORT_802_3_OFF(a_mac_control_frames_transmitted) },
 +	{ "rx_mac_control_phy", PPORT_802_3_OFF(a_mac_control_frames_received) },
 +	{ "rx_unsupported_op_phy", PPORT_802_3_OFF(a_unsupported_opcodes_received) },
 +	{ "rx_pause_ctrl_phy", PPORT_802_3_OFF(a_pause_mac_ctrl_frames_received) },
 +	{ "tx_pause_ctrl_phy", PPORT_802_3_OFF(a_pause_mac_ctrl_frames_transmitted) },
 +};
 +
 +static const struct counter_desc pport_2863_stats_desc[] = {
 +	{ "rx_discards_phy", PPORT_2863_OFF(if_in_discards) },
 +	{ "tx_discards_phy", PPORT_2863_OFF(if_out_discards) },
 +	{ "tx_errors_phy", PPORT_2863_OFF(if_out_errors) },
 +};
 +
++=======
++>>>>>>> fc8e64a3118e (net/mlx5e: Switch RFC 2863 counters to use stats group API)
  static const struct counter_desc pport_2819_stats_desc[] = {
  	{ "rx_undersize_pkts_phy", PPORT_2819_OFF(ether_stats_undersize_pkts) },
  	{ "rx_fragments_phy", PPORT_2819_OFF(ether_stats_fragments) },
@@@ -411,11 -303,6 +411,14 @@@ static const struct counter_desc sq_sta
  	{ MLX5E_DECLARE_TX_STAT(struct mlx5e_sq_stats, xmit_more) },
  };
  
++<<<<<<< HEAD
 +#define NUM_SW_COUNTERS			ARRAY_SIZE(sw_stats_desc)
 +#define NUM_Q_COUNTERS			ARRAY_SIZE(q_stats_desc)
 +#define NUM_VPORT_COUNTERS		ARRAY_SIZE(vport_stats_desc)
 +#define NUM_PPORT_802_3_COUNTERS	ARRAY_SIZE(pport_802_3_stats_desc)
 +#define NUM_PPORT_2863_COUNTERS		ARRAY_SIZE(pport_2863_stats_desc)
++=======
++>>>>>>> fc8e64a3118e (net/mlx5e: Switch RFC 2863 counters to use stats group API)
  #define NUM_PPORT_2819_COUNTERS		ARRAY_SIZE(pport_2819_stats_desc)
  #define NUM_PPORT_PHY_STATISTICAL_COUNTERS(priv) \
  	(ARRAY_SIZE(pport_phy_statistical_stats_desc) * \
@@@ -436,9 -323,7 +439,13 @@@
  #define NUM_PPORT_ETH_EXT_COUNTERS(priv) \
  	(ARRAY_SIZE(pport_eth_ext_stats_desc) * \
  	 MLX5_CAP_PCAM_FEATURE((priv)->mdev, rx_buffer_fullness_counters))
++<<<<<<< HEAD
 +#define NUM_PPORT_COUNTERS(priv)	(NUM_PPORT_802_3_COUNTERS + \
 +					 NUM_PPORT_2863_COUNTERS  + \
 +					 NUM_PPORT_2819_COUNTERS  + \
++=======
+ #define NUM_PPORT_COUNTERS(priv)	(NUM_PPORT_2819_COUNTERS  + \
++>>>>>>> fc8e64a3118e (net/mlx5e: Switch RFC 2863 counters to use stats group API)
  					 NUM_PPORT_PHY_STATISTICAL_COUNTERS(priv) + \
  					 NUM_PPORT_PER_PRIO_TRAFFIC_COUNTERS * \
  					 NUM_PPORT_PRIO + \
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index 52759b7e5eaa..98f503a0c358 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@ -229,10 +229,6 @@ static void mlx5e_fill_stats_strings(struct mlx5e_priv *priv, u8 *data)
 		strcpy(data + (idx++) * ETH_GSTRING_LEN,
 		       pport_802_3_stats_desc[i].format);
 
-	for (i = 0; i < NUM_PPORT_2863_COUNTERS; i++)
-		strcpy(data + (idx++) * ETH_GSTRING_LEN,
-		       pport_2863_stats_desc[i].format);
-
 	for (i = 0; i < NUM_PPORT_2819_COUNTERS; i++)
 		strcpy(data + (idx++) * ETH_GSTRING_LEN,
 		       pport_2819_stats_desc[i].format);
@@ -370,10 +366,6 @@ void mlx5e_ethtool_get_ethtool_stats(struct mlx5e_priv *priv,
 		data[idx++] = MLX5E_READ_CTR64_BE(&priv->stats.pport.IEEE_802_3_counters,
 						  pport_802_3_stats_desc, i);
 
-	for (i = 0; i < NUM_PPORT_2863_COUNTERS; i++)
-		data[idx++] = MLX5E_READ_CTR64_BE(&priv->stats.pport.RFC_2863_counters,
-						  pport_2863_stats_desc, i);
-
 	for (i = 0; i < NUM_PPORT_2819_COUNTERS; i++)
 		data[idx++] = MLX5E_READ_CTR64_BE(&priv->stats.pport.RFC_2819_counters,
 						  pport_2819_stats_desc, i);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
