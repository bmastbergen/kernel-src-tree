net: sched: silence uninitialized parent variable warning in tc_dump_tfilter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] sched: silence uninitialized parent variable warning in tc_dump_tfilter (Ivan Vecera) [1584592]
Rebuild_FUZZ: 96.60%
commit-author Jiri Pirko <jiri@mellanox.com>
commit d680b3524cd2b9c4f1dc2ba1823c538988bb85e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d680b352.failed

When tcm->tcm_ifindex == TCM_IFINDEX_MAGIC_BLOCK, parent is still passed
down but the value is never used. Compiler does not recognize it and
issues a warning. Silence it down initializing parent to 0.

Fixes: 7960d1daf278 ("net: sched: use block index as a handle instead of qdisc when block is shared")
	Reported-by: David Miller <davem@davemloft.net>
	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d680b3524cd2b9c4f1dc2ba1823c538988bb85e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_api.c
diff --cc net/sched/cls_api.c
index a56916c8abe9,86d6e9d2cf00..000000000000
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@@ -848,32 -1313,51 +848,46 @@@ static int tc_dump_tfilter(struct sk_bu
  	if (err)
  		return err;
  
++<<<<<<< HEAD
 +	dev = __dev_get_by_index(net, tcm->tcm_ifindex);
 +	if (!dev)
 +		return skb->len;
 +
 +	parent = tcm->tcm_parent;
 +	if (!parent) {
 +		q = dev->qdisc;
 +		parent = q->handle;
++=======
+ 	if (tcm->tcm_ifindex == TCM_IFINDEX_MAGIC_BLOCK) {
+ 		block = tcf_block_lookup(net, tcm->tcm_block_index);
+ 		if (!block)
+ 			goto out;
+ 		/* If we work with block index, q is NULL and parent value
+ 		 * will never be used in the following code. The check
+ 		 * in tcf_fill_node prevents it. However, compiler does not
+ 		 * see that far, so set parent to zero to silence the warning
+ 		 * about parent being uninitialized.
+ 		 */
+ 		parent = 0;
++>>>>>>> d680b3524cd2 (net: sched: silence uninitialized parent variable warning in tc_dump_tfilter)
  	} else {
 -		const struct Qdisc_class_ops *cops;
 -		struct net_device *dev;
 -		unsigned long cl = 0;
 -
 -		dev = __dev_get_by_index(net, tcm->tcm_ifindex);
 -		if (!dev)
 -			return skb->len;
 -
 -		parent = tcm->tcm_parent;
 -		if (!parent) {
 -			q = dev->qdisc;
 -			parent = q->handle;
 -		} else {
 -			q = qdisc_lookup(dev, TC_H_MAJ(tcm->tcm_parent));
 -		}
 -		if (!q)
 -			goto out;
 -		cops = q->ops->cl_ops;
 -		if (!cops)
 -			goto out;
 -		if (!cops->tcf_block)
 -			goto out;
 -		if (TC_H_MIN(tcm->tcm_parent)) {
 -			cl = cops->find(q, tcm->tcm_parent);
 -			if (cl == 0)
 -				goto out;
 -		}
 -		block = cops->tcf_block(q, cl, NULL);
 -		if (!block)
 +		q = qdisc_lookup(dev, TC_H_MAJ(tcm->tcm_parent));
 +	}
 +	if (!q)
 +		goto out;
 +	cops = q->ops->cl_ops;
 +	if (!cops)
 +		goto out;
 +	if (!cops->tcf_block)
 +		goto out;
 +	if (TC_H_MIN(tcm->tcm_parent)) {
 +		cl = cops->find(q, tcm->tcm_parent);
 +		if (cl == 0)
  			goto out;
 -		if (tcf_block_shared(block))
 -			q = NULL;
  	}
 +	block = cops->tcf_block(q, cl);
 +	if (!block)
 +		goto out;
  
  	index_start = cb->args[0];
  	index = 0;
* Unmerged path net/sched/cls_api.c
