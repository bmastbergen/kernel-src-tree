qede: Use NETIF_F_GRO_HW.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] qede: Use NETIF_F_GRO_HW (Chad Dupuis) [1548140]
Rebuild_FUZZ: 97.96%
commit-author Michael Chan <michael.chan@broadcom.com>
commit 18c602dee47268248c95bc0032006e2633e480b7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/18c602de.failed

Advertise NETIF_F_GRO_HW and set edev->gro_disable according to the
feature flag.  Add qede_fix_features() to drop NETIF_F_GRO_HW if
XDP is running or MTU does not support GRO_HW or GRO is not set.
qede_change_mtu() also checks and disables GRO_HW if MTU is not
supported.

	Cc: Ariel Elior <Ariel.Elior@cavium.com>
	Cc: everest-linux-l2@cavium.com
	Acked-by: Manish Chopra <manish.chopra@cavium.com>
	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Acked-by: Manish Chopra <manish.chopra@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 18c602dee47268248c95bc0032006e2633e480b7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qede/qede_main.c
diff --cc drivers/net/ethernet/qlogic/qede/qede_main.c
index 9242e4940a1b,90d79ae2a48f..000000000000
--- a/drivers/net/ethernet/qlogic/qede/qede_main.c
+++ b/drivers/net/ethernet/qlogic/qede/qede_main.c
@@@ -566,14 -570,36 +567,37 @@@ static const struct net_device_ops qede
  	.ndo_set_rx_mode = qede_set_rx_mode,
  	.ndo_set_mac_address = qede_set_mac_addr,
  	.ndo_validate_addr = eth_validate_addr,
 -	.ndo_change_mtu = qede_change_mtu,
 +	.ndo_change_mtu_rh74 = qede_change_mtu,
  	.ndo_vlan_rx_add_vid = qede_vlan_rx_add_vid,
  	.ndo_vlan_rx_kill_vid = qede_vlan_rx_kill_vid,
+ 	.ndo_fix_features = qede_fix_features,
  	.ndo_set_features = qede_set_features,
  	.ndo_get_stats64 = qede_get_stats64,
 -	.ndo_udp_tunnel_add = qede_udp_tunnel_add,
 -	.ndo_udp_tunnel_del = qede_udp_tunnel_del,
  	.ndo_features_check = qede_features_check,
  };
  
++<<<<<<< HEAD
++=======
+ static const struct net_device_ops qede_netdev_vf_xdp_ops = {
+ 	.ndo_open = qede_open,
+ 	.ndo_stop = qede_close,
+ 	.ndo_start_xmit = qede_start_xmit,
+ 	.ndo_set_rx_mode = qede_set_rx_mode,
+ 	.ndo_set_mac_address = qede_set_mac_addr,
+ 	.ndo_validate_addr = eth_validate_addr,
+ 	.ndo_change_mtu = qede_change_mtu,
+ 	.ndo_vlan_rx_add_vid = qede_vlan_rx_add_vid,
+ 	.ndo_vlan_rx_kill_vid = qede_vlan_rx_kill_vid,
+ 	.ndo_fix_features = qede_fix_features,
+ 	.ndo_set_features = qede_set_features,
+ 	.ndo_get_stats64 = qede_get_stats64,
+ 	.ndo_udp_tunnel_add = qede_udp_tunnel_add,
+ 	.ndo_udp_tunnel_del = qede_udp_tunnel_del,
+ 	.ndo_features_check = qede_features_check,
+ 	.ndo_bpf = qede_xdp,
+ };
+ 
++>>>>>>> 18c602dee472 (qede: Use NETIF_F_GRO_HW.)
  /* -------------------------------------------------------------------------
   * START OF PROBE / REMOVE
   * -------------------------------------------------------------------------
diff --git a/drivers/net/ethernet/qlogic/qede/qede.h b/drivers/net/ethernet/qlogic/qede/qede.h
index f3482ff7adb0..1343e9365cc3 100644
--- a/drivers/net/ethernet/qlogic/qede/qede.h
+++ b/drivers/net/ethernet/qlogic/qede/qede.h
@@ -466,6 +466,8 @@ int qede_vlan_rx_kill_vid(struct net_device *dev, __be16 proto, u16 vid);
 void qede_vlan_mark_nonconfigured(struct qede_dev *edev);
 int qede_configure_vlan_filters(struct qede_dev *edev);
 
+netdev_features_t qede_fix_features(struct net_device *dev,
+				    netdev_features_t features);
 int qede_set_features(struct net_device *dev, netdev_features_t features);
 void qede_set_rx_mode(struct net_device *ndev);
 void qede_config_rx_mode(struct net_device *ndev);
diff --git a/drivers/net/ethernet/qlogic/qede/qede_ethtool.c b/drivers/net/ethernet/qlogic/qede/qede_ethtool.c
index 73dddf580bbb..ab0c2355235e 100644
--- a/drivers/net/ethernet/qlogic/qede/qede_ethtool.c
+++ b/drivers/net/ethernet/qlogic/qede/qede_ethtool.c
@@ -925,6 +925,9 @@ int qede_change_mtu(struct net_device *ndev, int new_mtu)
 	DP_VERBOSE(edev, (NETIF_MSG_IFUP | NETIF_MSG_IFDOWN),
 		   "Configuring MTU size of %d\n", new_mtu);
 
+	if (new_mtu > PAGE_SIZE)
+		ndev->features &= ~NETIF_F_GRO_HW;
+
 	/* Set the mtu field and re-start the interface if needed */
 	args.u.mtu = new_mtu;
 	args.func = &qede_update_mtu;
diff --git a/drivers/net/ethernet/qlogic/qede/qede_filter.c b/drivers/net/ethernet/qlogic/qede/qede_filter.c
index de098955b7c1..447c98059585 100644
--- a/drivers/net/ethernet/qlogic/qede/qede_filter.c
+++ b/drivers/net/ethernet/qlogic/qede/qede_filter.c
@@ -895,19 +895,26 @@ static void qede_set_features_reload(struct qede_dev *edev,
 	edev->ndev->features = args->u.features;
 }
 
+netdev_features_t qede_fix_features(struct net_device *dev,
+				    netdev_features_t features)
+{
+	struct qede_dev *edev = netdev_priv(dev);
+
+	if (edev->xdp_prog || edev->ndev->mtu > PAGE_SIZE ||
+	    !(features & NETIF_F_GRO))
+		features &= ~NETIF_F_GRO_HW;
+
+	return features;
+}
+
 int qede_set_features(struct net_device *dev, netdev_features_t features)
 {
 	struct qede_dev *edev = netdev_priv(dev);
 	netdev_features_t changes = features ^ dev->features;
 	bool need_reload = false;
 
-	/* No action needed if hardware GRO is disabled during driver load */
-	if (changes & NETIF_F_GRO) {
-		if (dev->features & NETIF_F_GRO)
-			need_reload = !edev->gro_disable;
-		else
-			need_reload = edev->gro_disable;
-	}
+	if (changes & NETIF_F_GRO_HW)
+		need_reload = true;
 
 	if (need_reload) {
 		struct qede_reload_args args;
* Unmerged path drivers/net/ethernet/qlogic/qede/qede_main.c
