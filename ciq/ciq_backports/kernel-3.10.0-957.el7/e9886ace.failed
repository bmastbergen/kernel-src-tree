selftests, x86: Rework x86 target architecture detection

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Andy Lutomirski <luto@kernel.org>
commit e9886ace222eb48bb57bd541320056ca334bd3a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e9886ace.failed

We currently fail to build on a non-multilib x86_64 target.  We
print a helpful error, but it's nicer to allow the build to succeed.
Fix it and improve cross-compilation support by detecting
architecture support directly and building only the relevant tests.

	Signed-off-by: Andy Lutomirski <luto@kernel.org>
	Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
(cherry picked from commit e9886ace222eb48bb57bd541320056ca334bd3a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/x86/Makefile
#	tools/testing/selftests/x86/trivial_32bit_program.c
* Unmerged path tools/testing/selftests/x86/Makefile
* Unmerged path tools/testing/selftests/x86/trivial_32bit_program.c
* Unmerged path tools/testing/selftests/x86/Makefile
diff --git a/tools/testing/selftests/x86/check_cc.sh b/tools/testing/selftests/x86/check_cc.sh
new file mode 100755
index 000000000000..172d3293fb7b
--- /dev/null
+++ b/tools/testing/selftests/x86/check_cc.sh
@@ -0,0 +1,16 @@
+#!/bin/sh
+# check_cc.sh - Helper to test userspace compilation support
+# Copyright (c) 2015 Andrew Lutomirski
+# GPL v2
+
+CC="$1"
+TESTPROG="$2"
+shift 2
+
+if "$CC" -o /dev/null "$TESTPROG" -O0 "$@" 2>/dev/null; then
+    echo 1
+else
+    echo 0
+fi
+
+exit 0
* Unmerged path tools/testing/selftests/x86/trivial_32bit_program.c
diff --git a/tools/testing/selftests/x86/trivial_64bit_program.c b/tools/testing/selftests/x86/trivial_64bit_program.c
new file mode 100644
index 000000000000..b994946c40fb
--- /dev/null
+++ b/tools/testing/selftests/x86/trivial_64bit_program.c
@@ -0,0 +1,18 @@
+/*
+ * Trivial program to check that we have a valid 32-bit build environment.
+ * Copyright (c) 2015 Andy Lutomirski
+ * GPL v2
+ */
+
+#ifndef __x86_64__
+# error wrong architecture
+#endif
+
+#include <stdio.h>
+
+int main()
+{
+	printf("\n");
+
+	return 0;
+}
