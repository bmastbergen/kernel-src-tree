netfilter: ipset: list:set: make sure all elements are checked by the gc

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
commit b91b396d5e35eef9938a56e781cb0171a53907ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b91b396d.failed

When an element timed out, the next one was skipped by the garbage
collector, fixed.

	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit b91b396d5e35eef9938a56e781cb0171a53907ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_list_set.c
diff --cc net/netfilter/ipset/ip_set_list_set.c
index a9a97c07ecb4,30bf1dd11f04..000000000000
--- a/net/netfilter/ipset/ip_set_list_set.c
+++ b/net/netfilter/ipset/ip_set_list_set.c
@@@ -248,13 -218,16 +248,21 @@@ set_cleanup_entries(struct ip_set *set
  {
  	struct list_set *map = set->data;
  	struct set_elem *e;
- 	u32 i;
+ 	u32 i = 0;
  
++<<<<<<< HEAD
 +	for (i = 0; i < map->size; i++) {
 +		e = list_set_elem(map, i);
++=======
+ 	while (i < map->size) {
+ 		e = list_set_elem(set, map, i);
++>>>>>>> b91b396d5e35 (netfilter: ipset: list:set: make sure all elements are checked by the gc)
  		if (e->id != IPSET_INVALID_ID &&
 -		    ip_set_timeout_expired(ext_timeout(e, set)))
 +		    ip_set_timeout_expired(ext_timeout(e, map)))
  			list_set_del(set, i);
+ 			/* Check element moved to position i in next loop */
+ 		else
+ 			i++;
  	}
  }
  
* Unmerged path net/netfilter/ipset/ip_set_list_set.c
