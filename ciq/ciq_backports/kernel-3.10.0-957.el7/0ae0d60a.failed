multicast: remove useless parameter for group add

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Hangbin Liu <liuhangbin@gmail.com>
commit 0ae0d60a379c11d6f3b11d9b9e8dbdd1fc683a1a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/0ae0d60a.failed

Remove the mode parameter for igmp/igmp6_group_added as we can get it
from first parameter.

Fixes: 6e2059b53f988 (ipv4/igmp: init group mode as INCLUDE when join source group)
Fixes: c7ea20c9da5b9 (ipv6/mcast: init as INCLUDE when join SSM INCLUDE group)
	Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0ae0d60a379c11d6f3b11d9b9e8dbdd1fc683a1a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/igmp.c
diff --cc net/ipv4/igmp.c
index e1c8403127c2,598333b123b9..000000000000
--- a/net/ipv4/igmp.c
+++ b/net/ipv4/igmp.c
@@@ -1229,7 -1317,13 +1229,17 @@@ static void igmp_group_added(struct ip_
  	}
  	/* else, v3 */
  
++<<<<<<< HEAD
 +	im->crcount = in_dev->mr_qrv ?: sysctl_igmp_qrv;
++=======
+ 	/* Based on RFC3376 5.1, for newly added INCLUDE SSM, we should
+ 	 * not send filter-mode change record as the mode should be from
+ 	 * IN() to IN(A).
+ 	 */
+ 	if (im->sfmode == MCAST_EXCLUDE)
+ 		im->crcount = in_dev->mr_qrv ?: net->ipv4.sysctl_igmp_qrv;
+ 
++>>>>>>> 0ae0d60a379c (multicast: remove useless parameter for group add)
  	igmp_ifc_event(in_dev);
  #endif
  }
* Unmerged path net/ipv4/igmp.c
diff --git a/net/ipv6/mcast.c b/net/ipv6/mcast.c
index f87e5b9d260c..81c9d823c1ca 100644
--- a/net/ipv6/mcast.c
+++ b/net/ipv6/mcast.c
@@ -671,7 +671,7 @@ bool inet6_mc_check(struct sock *sk, const struct in6_addr *mc_addr,
 	return rv;
 }
 
-static void igmp6_group_added(struct ifmcaddr6 *mc, unsigned int mode)
+static void igmp6_group_added(struct ifmcaddr6 *mc)
 {
 	struct net_device *dev = mc->idev->dev;
 	char buf[MAX_ADDR_LEN];
@@ -701,7 +701,7 @@ static void igmp6_group_added(struct ifmcaddr6 *mc, unsigned int mode)
 	 * should not send filter-mode change record as the mode
 	 * should be from IN() to IN(A).
 	 */
-	if (mode == MCAST_EXCLUDE)
+	if (mc->mca_sfmode == MCAST_EXCLUDE)
 		mc->mca_crcount = mc->idev->mc_qrv;
 
 	mld_ifc_event(mc->idev);
@@ -943,7 +943,7 @@ static int __ipv6_dev_mc_inc(struct net_device *dev,
 	write_unlock_bh(&idev->lock);
 
 	mld_del_delrec(idev, mc);
-	igmp6_group_added(mc, mode);
+	igmp6_group_added(mc);
 	ma_put(mc);
 	return 0;
 }
@@ -2583,7 +2583,7 @@ void ipv6_mc_up(struct inet6_dev *idev)
 	ipv6_mc_reset(idev);
 	for (i = idev->mc_list; i; i = i->next) {
 		mld_del_delrec(idev, i);
-		igmp6_group_added(i, i->mca_sfmode);
+		igmp6_group_added(i);
 	}
 	read_unlock_bh(&idev->lock);
 }
