net/mlx5: E-Switch, Add callback to get representor device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] mlx5: E-Switch, Add callback to get representor device (Alaa Hleihel) [1595687]
Rebuild_FUZZ: 96.43%
commit-author Mark Bloch <markb@mellanox.com>
commit 22215908d81f61d293e8b128e819a8437f37cc20
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/22215908.failed

Add a callback interface to get a protocol device (per representor type).
The Ethernet representors will expose their netdev via this interface.

This functionality can be later used by IB representor in order to find the
corresponding net device representor.

	Signed-off-by: Mark Bloch <markb@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 22215908d81f61d293e8b128e819a8437f37cc20)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 9495d307b369,ea4b255380a2..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -1158,11 -1173,12 +1167,18 @@@ static void mlx5e_rep_register_vf_vport
  	int vport;
  
  	for (vport = 1; vport < total_vfs; vport++) {
 -		struct mlx5_eswitch_rep_if rep_if = {};
 +		struct mlx5_eswitch_rep rep;
  
++<<<<<<< HEAD
 +		rep.load = mlx5e_vport_rep_load;
 +		rep.unload = mlx5e_vport_rep_unload;
 +		mlx5_eswitch_register_vport_rep(esw, vport, &rep);
++=======
+ 		rep_if.load = mlx5e_vport_rep_load;
+ 		rep_if.unload = mlx5e_vport_rep_unload;
+ 		rep_if.get_proto_dev = mlx5e_vport_rep_get_proto_dev;
+ 		mlx5_eswitch_register_vport_rep(esw, vport, &rep_if, REP_ETH);
++>>>>>>> 22215908d81f (net/mlx5: E-Switch, Add callback to get representor device)
  	}
  }
  
@@@ -1181,12 -1197,18 +1197,24 @@@ void mlx5e_register_vport_reps(struct m
  {
  	struct mlx5_core_dev *mdev = priv->mdev;
  	struct mlx5_eswitch *esw   = mdev->priv.eswitch;
 -	struct mlx5_eswitch_rep_if rep_if;
 -	struct mlx5e_rep_priv *rpriv;
 -
 +	struct mlx5_eswitch_rep rep;
 +
++<<<<<<< HEAD
 +	rep.load = mlx5e_nic_rep_load;
 +	rep.unload = mlx5e_nic_rep_unload;
 +	rep.netdev = priv->netdev;
 +	mlx5_eswitch_register_vport_rep(esw, 0, &rep); /* UPLINK PF vport*/
++=======
+ 	rpriv = priv->ppriv;
+ 	rpriv->netdev = priv->netdev;
+ 
+ 	rep_if.load = mlx5e_nic_rep_load;
+ 	rep_if.unload = mlx5e_nic_rep_unload;
+ 	rep_if.get_proto_dev = mlx5e_vport_rep_get_proto_dev;
+ 	rep_if.priv = rpriv;
+ 	INIT_LIST_HEAD(&rpriv->vport_sqs_list);
+ 	mlx5_eswitch_register_vport_rep(esw, 0, &rep_if, REP_ETH); /* UPLINK PF vport*/
++>>>>>>> 22215908d81f (net/mlx5: E-Switch, Add callback to get representor device)
  
  	mlx5e_rep_register_vf_vports(priv); /* VFs vports */
  }
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
index 52a968f41531,4dfb1da435a4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@@ -141,9 -145,14 +141,20 @@@ struct mlx5_eswitch_fdb 
  	};
  };
  
++<<<<<<< HEAD
 +struct mlx5_esw_sq {
 +	struct mlx5_flow_handle	*send_to_vport_rule;
 +	struct list_head	 list;
++=======
+ struct mlx5_eswitch_rep;
+ struct mlx5_eswitch_rep_if {
+ 	int		       (*load)(struct mlx5_core_dev *dev,
+ 				       struct mlx5_eswitch_rep *rep);
+ 	void		       (*unload)(struct mlx5_eswitch_rep *rep);
+ 	void		       *(*get_proto_dev)(struct mlx5_eswitch_rep *rep);
+ 	void			*priv;
+ 	bool		       valid;
++>>>>>>> 22215908d81f (net/mlx5: E-Switch, Add callback to get representor device)
  };
  
  struct mlx5_eswitch_rep {
@@@ -282,10 -281,16 +293,20 @@@ int mlx5_devlink_eswitch_encap_mode_set
  int mlx5_devlink_eswitch_encap_mode_get(struct devlink *devlink, u8 *encap);
  void mlx5_eswitch_register_vport_rep(struct mlx5_eswitch *esw,
  				     int vport_index,
 -				     struct mlx5_eswitch_rep_if *rep_if,
 -				     u8 rep_type);
 +				     struct mlx5_eswitch_rep *rep);
  void mlx5_eswitch_unregister_vport_rep(struct mlx5_eswitch *esw,
++<<<<<<< HEAD
 +				       int vport_index);
 +struct net_device *mlx5_eswitch_get_uplink_netdev(struct mlx5_eswitch *esw);
++=======
+ 				       int vport_index,
+ 				       u8 rep_type);
+ void *mlx5_eswitch_get_uplink_priv(struct mlx5_eswitch *esw, u8 rep_type);
+ void *mlx5_eswitch_get_proto_dev(struct mlx5_eswitch *esw,
+ 				 int vport,
+ 				 u8 rep_type);
+ void *mlx5_eswitch_uplink_get_proto_dev(struct mlx5_eswitch *esw, u8 rep_type);
++>>>>>>> 22215908d81f (net/mlx5: E-Switch, Add callback to get representor device)
  
  int mlx5_eswitch_add_vlan_action(struct mlx5_eswitch *esw,
  				 struct mlx5_esw_flow_attr *attr);
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index 3c1ae524876d,06623c8e92a2..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -1137,19 -1150,20 +1137,26 @@@ int mlx5_devlink_eswitch_encap_mode_get
  
  void mlx5_eswitch_register_vport_rep(struct mlx5_eswitch *esw,
  				     int vport_index,
 -				     struct mlx5_eswitch_rep_if *__rep_if,
 -				     u8 rep_type)
 +				     struct mlx5_eswitch_rep *__rep)
  {
  	struct mlx5_esw_offload *offloads = &esw->offloads;
 -	struct mlx5_eswitch_rep_if *rep_if;
 +	struct mlx5_eswitch_rep *rep;
  
 -	rep_if = &offloads->vport_reps[vport_index].rep_if[rep_type];
 +	rep = &offloads->vport_reps[vport_index];
  
++<<<<<<< HEAD
 +	rep->load   = __rep->load;
 +	rep->unload = __rep->unload;
 +	rep->netdev = __rep->netdev;
++=======
+ 	rep_if->load   = __rep_if->load;
+ 	rep_if->unload = __rep_if->unload;
+ 	rep_if->get_proto_dev = __rep_if->get_proto_dev;
+ 	rep_if->priv = __rep_if->priv;
++>>>>>>> 22215908d81f (net/mlx5: E-Switch, Add callback to get representor device)
  
 -	rep_if->valid = true;
 +	INIT_LIST_HEAD(&rep->vport_sqs_list);
 +	rep->valid = true;
  }
  
  void mlx5_eswitch_unregister_vport_rep(struct mlx5_eswitch *esw,
@@@ -1173,5 -1187,28 +1180,28 @@@ struct net_device *mlx5_eswitch_get_upl
  	struct mlx5_eswitch_rep *rep;
  
  	rep = &offloads->vport_reps[UPLINK_REP_INDEX];
 -	return rep->rep_if[rep_type].priv;
 +	return rep->netdev;
  }
+ 
+ void *mlx5_eswitch_get_proto_dev(struct mlx5_eswitch *esw,
+ 				 int vport,
+ 				 u8 rep_type)
+ {
+ 	struct mlx5_esw_offload *offloads = &esw->offloads;
+ 	struct mlx5_eswitch_rep *rep;
+ 
+ 	if (vport == FDB_UPLINK_VPORT)
+ 		vport = UPLINK_REP_INDEX;
+ 
+ 	rep = &offloads->vport_reps[vport];
+ 
+ 	if (rep->rep_if[rep_type].valid &&
+ 	    rep->rep_if[rep_type].get_proto_dev)
+ 		return rep->rep_if[rep_type].get_proto_dev(rep);
+ 	return NULL;
+ }
+ 
+ void *mlx5_eswitch_uplink_get_proto_dev(struct mlx5_eswitch *esw, u8 rep_type)
+ {
+ 	return mlx5_eswitch_get_proto_dev(esw, UPLINK_REP_INDEX, rep_type);
+ }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
