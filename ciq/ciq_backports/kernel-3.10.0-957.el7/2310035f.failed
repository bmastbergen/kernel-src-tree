bpf: fix incorrect kmalloc usage in lpm_trie MAP_GET_NEXT_KEY rcu region

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Yonghong Song <yhs@fb.com>
commit 2310035fa03f651dd5b03f19a26a97512aa8842c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2310035f.failed

In commit b471f2f1de8b ("bpf: implement MAP_GET_NEXT_KEY command for LPM_TRIE map"),
the implemented MAP_GET_NEXT_KEY callback function is guarded with rcu read lock.
In the function body, "kmalloc(size, GFP_USER | __GFP_NOWARN)" is used which may
sleep and violate rcu read lock region requirements. This patch fixed the issue
by using GFP_ATOMIC instead to avoid blocking kmalloc. Tested with
CONFIG_DEBUG_ATOMIC_SLEEP=y as suggested by Eric Dumazet.

Fixes: b471f2f1de8b ("bpf: implement MAP_GET_NEXT_KEY command for LPM_TRIE map")
	Signed-off-by: Yonghong Song <yhs@fb.com>
	Reported-by: syzbot <syzkaller@googlegroups.com>
	Reviewed-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 2310035fa03f651dd5b03f19a26a97512aa8842c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/lpm_trie.c
* Unmerged path kernel/bpf/lpm_trie.c
* Unmerged path kernel/bpf/lpm_trie.c
