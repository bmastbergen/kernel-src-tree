mmc: mmc_test: Do not use mmc_start_areq() anymore

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [mmc] mmc_test: Do not use mmc_start_areq() anymore (Gopal Tiwari) [1456570]
Rebuild_FUZZ: 94.74%
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit 42f532da3a44843668dbacc1838a028b0a9b7373
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/42f532da.failed

The block driver's blk-mq paths do not use mmc_start_areq(). In order to
remove mmc_start_areq() entirely, start by removing it from mmc_test.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Acked-by: Linus Walleij <linus.walleij@linaro.org>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
	Tested-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit 42f532da3a44843668dbacc1838a028b0a9b7373)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/mmc_test.c
diff --cc drivers/mmc/core/mmc_test.c
index f50b612459bd,9311c8de2061..000000000000
--- a/drivers/mmc/core/mmc_test.c
+++ b/drivers/mmc/core/mmc_test.c
@@@ -852,33 -859,25 +855,41 @@@ static int mmc_test_nonblock_transfer(s
  		goto err;
  	}
  
- 	cur_areq->mrq = &rq1->mrq;
- 	cur_areq->err_check = mmc_test_check_result_async;
- 	other_areq->mrq = &rq2->mrq;
- 	other_areq->err_check = mmc_test_check_result_async;
+ 	mrq = &rq1->mrq;
+ 	prev_mrq = NULL;
  
  	for (i = 0; i < count; i++) {
++<<<<<<< HEAD
 +		mmc_test_prepare_mrq(test, cur_areq->mrq, sg, sg_len, dev_addr,
 +				     blocks, blksz, write);
 +		done_areq = mmc_start_req(test->card->host, cur_areq, &status);
 +
 +		if (status != MMC_BLK_SUCCESS || (!done_areq && i > 0)) {
 +			ret = RESULT_FAIL;
++=======
+ 		mmc_test_req_reset(container_of(mrq, struct mmc_test_req, mrq));
+ 		mmc_test_prepare_mrq(test, mrq, sg, sg_len, dev_addr, blocks,
+ 				     blksz, write);
+ 		ret = mmc_test_start_areq(test, mrq, prev_mrq);
+ 		if (ret)
++>>>>>>> 42f532da3a44 (mmc: mmc_test: Do not use mmc_start_areq() anymore)
  			goto err;
- 		}
  
- 		if (done_areq)
- 			mmc_test_req_reset(container_of(done_areq->mrq,
- 						struct mmc_test_req, mrq));
+ 		if (!prev_mrq)
+ 			prev_mrq = &rq2->mrq;
  
- 		swap(cur_areq, other_areq);
+ 		swap(mrq, prev_mrq);
  		dev_addr += blocks;
  	}
  
++<<<<<<< HEAD
 +	done_areq = mmc_start_req(test->card->host, NULL, &status);
 +	if (status != MMC_BLK_SUCCESS)
 +		ret = RESULT_FAIL;
 +
++=======
+ 	ret = mmc_test_start_areq(test, NULL, prev_mrq);
++>>>>>>> 42f532da3a44 (mmc: mmc_test: Do not use mmc_start_areq() anymore)
  err:
  	kfree(rq1);
  	kfree(rq2);
@@@ -2384,11 -2378,9 +2390,15 @@@ static int mmc_test_ongoing_transfer(st
  
  	/* Start ongoing data request */
  	if (use_areq) {
++<<<<<<< HEAD
 +		mmc_start_req(host, &test_areq.areq, &blkstat);
 +		if (blkstat != MMC_BLK_SUCCESS) {
 +			ret = RESULT_FAIL;
++=======
+ 		ret = mmc_test_start_areq(test, mrq, NULL);
+ 		if (ret)
++>>>>>>> 42f532da3a44 (mmc: mmc_test: Do not use mmc_start_areq() anymore)
  			goto out_free;
- 		}
  	} else {
  		mmc_wait_for_req(host, mrq);
  	}
@@@ -2422,9 -2414,7 +2432,13 @@@
  
  	/* Wait for data request to complete */
  	if (use_areq) {
++<<<<<<< HEAD
 +		mmc_start_req(host, NULL, &blkstat);
 +		if (blkstat != MMC_BLK_SUCCESS)
 +			ret = RESULT_FAIL;
++=======
+ 		ret = mmc_test_start_areq(test, NULL, mrq);
++>>>>>>> 42f532da3a44 (mmc: mmc_test: Do not use mmc_start_areq() anymore)
  	} else {
  		mmc_wait_for_req_done(test->card->host, mrq);
  	}
* Unmerged path drivers/mmc/core/mmc_test.c
