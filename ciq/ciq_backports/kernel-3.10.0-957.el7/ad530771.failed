Input: psmouse - fix comment style

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [input] psmouse - fix comment style (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 88.52%
commit-author Dmitry Torokhov <dmitry.torokhov@gmail.com>
commit ad5307715b2d0afed511b2cad9aed530bbbb236b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ad530771.failed

The module was using non-standard comment style with comment blocks often
starting at the very beginning of a line instead of being aligned with the
code. Let's switch to standard formatting.

	Reviewed-by: Hans de Goede <hdegoede@redhat.com>
	Reviewed-by: Pali Roh√°r <pali.rohar@gmail.com>
	Tested-by: Marcin Sochacki <msochacki+kernel@gmail.com>
	Tested-by: Till <till2.schaefer@uni-dortmund.de>
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit ad5307715b2d0afed511b2cad9aed530bbbb236b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/mouse/psmouse-base.c
diff --cc drivers/input/mouse/psmouse-base.c
index e63171ffe241,525de2e7c08b..000000000000
--- a/drivers/input/mouse/psmouse-base.c
+++ b/drivers/input/mouse/psmouse-base.c
@@@ -451,9 -441,18 +440,21 @@@ static void psmouse_set_rate(struct psm
  }
  
  /*
-  * psmouse_poll() - default poll handler. Everyone except for ALPS uses it.
++<<<<<<< HEAD
++=======
+  * Here we set the mouse scaling.
   */
+ static void psmouse_set_scale(struct psmouse *psmouse, enum psmouse_scale scale)
+ {
+ 	ps2_command(&psmouse->ps2dev, NULL,
+ 		    scale == PSMOUSE_SCALE21 ? PSMOUSE_CMD_SETSCALE21 :
+ 					       PSMOUSE_CMD_SETSCALE11);
+ }
  
+ /*
++>>>>>>> ad5307715b2d (Input: psmouse - fix comment style)
+  * psmouse_poll() - default poll handler. Everyone except for ALPS uses it.
+  */
  static int psmouse_poll(struct psmouse *psmouse)
  {
  	return ps2_command(&psmouse->ps2dev, psmouse->packet,
@@@ -720,10 -744,31 +719,38 @@@ static int psmouse_extensions(struct ps
  {
  	bool synaptics_hardware = false;
  
++<<<<<<< HEAD
 +/*
 + * We always check for lifebook because it does not disturb mouse
 + * (it only checks DMI information).
 + */
++=======
+ 	/*
+ 	 * Always check for focaltech, this is safe as it uses pnp-id
+ 	 * matching.
+ 	 */
+ 	if (psmouse_do_detect(focaltech_detect, psmouse, set_properties) == 0) {
+ 		if (max_proto > PSMOUSE_IMEX) {
+ 			if (!set_properties || focaltech_init(psmouse) == 0) {
+ 				if (IS_ENABLED(CONFIG_MOUSE_PS2_FOCALTECH))
+ 					return PSMOUSE_FOCALTECH;
+ 				/*
+ 				 * Note that we need to also restrict
+ 				 * psmouse_max_proto so that psmouse_initialize()
+ 				 * does not try to reset rate and resolution,
+ 				 * because even that upsets the device.
+ 				 */
+ 				psmouse_max_proto = PSMOUSE_PS2;
+ 				return PSMOUSE_PS2;
+ 			}
+ 		}
+ 	}
+ 
+ 	/*
+ 	 * We always check for LifeBook because it does not disturb mouse
+ 	 * (it only checks DMI information).
+ 	 */
++>>>>>>> ad5307715b2d (Input: psmouse - fix comment style)
  	if (psmouse_do_detect(lifebook_detect, psmouse, set_properties) == 0) {
  		if (max_proto > PSMOUSE_IMEX) {
  			if (!set_properties || lifebook_init(psmouse) == 0)
@@@ -758,11 -803,12 +785,20 @@@
  		synaptics_hardware = true;
  
  		if (max_proto > PSMOUSE_IMEX) {
++<<<<<<< HEAD
 +/*
 + * Try activating protocol, but check if support is enabled first, since
 + * we try detecting Synaptics even when protocol is disabled.
 + */
 +			if (synaptics_supported() &&
++=======
+ 			/*
+ 			 * Try activating protocol, but check if support is
+ 			 * enabled first, since we try detecting Synaptics
+ 			 * even when protocol is disabled.
+ 			 */
+ 			if (IS_ENABLED(CONFIG_MOUSE_PS2_SYNAPTICS) &&
++>>>>>>> ad5307715b2d (Input: psmouse - fix comment style)
  			    (!set_properties || synaptics_init(psmouse) == 0)) {
  				return PSMOUSE_SYNAPTICS;
  			}
@@@ -780,14 -829,14 +819,14 @@@
  		synaptics_reset(psmouse);
  	}
  
- /*
-  * Try Cypress Trackpad.
-  * Must try it before Finger Sensing Pad because Finger Sensing Pad probe
-  * upsets some modules of Cypress Trackpads.
-  */
+ 	/*
+ 	 * Try Cypress Trackpad. We must try it before Finger Sensing Pad
+ 	 * because Finger Sensing Pad probe upsets some modules of Cypress
+ 	 * Trackpads.
+ 	 */
  	if (max_proto > PSMOUSE_IMEX &&
  			cypress_detect(psmouse, set_properties) == 0) {
 -		if (IS_ENABLED(CONFIG_MOUSE_PS2_CYPRESS)) {
 +		if (cypress_supported()) {
  			if (cypress_init(psmouse) == 0)
  				return PSMOUSE_CYPRESS;
  
* Unmerged path drivers/input/mouse/psmouse-base.c
