amd-xgbe: Add additional ethtool statistics

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Lendacky, Thomas <Thomas.Lendacky@amd.com>
commit 3010608d033c7cae73d1662493c85b4c3b27015a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3010608d.failed

Add some additional statistics for tracking VXLAN packets and checksum
errors.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3010608d033c7cae73d1662493c85b4c3b27015a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-dev.c
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-dev.c
index a9784084202a,671203dbea3d..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-dev.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-dev.c
@@@ -1759,6 -1805,13 +1759,16 @@@ static void xgbe_dev_xmit(struct xgbe_c
  				  packet->length);
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (vxlan) {
+ 		XGMAC_SET_BITS_LE(rdesc->desc3, TX_NORMAL_DESC3, VNP,
+ 				  TX_NORMAL_DESC3_VXLAN_PACKET);
+ 
+ 		pdata->ext_stats.tx_vxlan_packets += packet->tx_packets;
+ 	}
+ 
++>>>>>>> 3010608d033c (amd-xgbe: Add additional ethtool statistics)
  	for (i = cur_index - start_index + 1; i < packet->rdesc_count; i++) {
  		cur_index++;
  		rdata = XGBE_GET_DESC_DATA(ring, cur_index);
@@@ -1920,9 -1973,28 +1930,31 @@@ static int xgbe_dev_read(struct xgbe_ch
  	rdata->rx.len = XGMAC_GET_BITS_LE(rdesc->desc3, RX_NORMAL_DESC3, PL);
  
  	/* Set checksum done indicator as appropriate */
 -	if (netdev->features & NETIF_F_RXCSUM) {
 +	if (netdev->features & NETIF_F_RXCSUM)
  		XGMAC_SET_BITS(packet->attributes, RX_PACKET_ATTRIBUTES,
  			       CSUM_DONE, 1);
++<<<<<<< HEAD
++=======
+ 		XGMAC_SET_BITS(packet->attributes, RX_PACKET_ATTRIBUTES,
+ 			       TNPCSUM_DONE, 1);
+ 	}
+ 
+ 	/* Set the tunneled packet indicator */
+ 	if (XGMAC_GET_BITS_LE(rdesc->desc2, RX_NORMAL_DESC2, TNP)) {
+ 		XGMAC_SET_BITS(packet->attributes, RX_PACKET_ATTRIBUTES,
+ 			       TNP, 1);
+ 		pdata->ext_stats.rx_vxlan_packets++;
+ 
+ 		l34t = XGMAC_GET_BITS_LE(rdesc->desc3, RX_NORMAL_DESC3, L34T);
+ 		switch (l34t) {
+ 		case RX_DESC3_L34T_IPV4_UNKNOWN:
+ 		case RX_DESC3_L34T_IPV6_UNKNOWN:
+ 			XGMAC_SET_BITS(packet->attributes, RX_PACKET_ATTRIBUTES,
+ 				       TNPCSUM_DONE, 0);
+ 			break;
+ 		}
+ 	}
++>>>>>>> 3010608d033c (amd-xgbe: Add additional ethtool statistics)
  
  	/* Check for errors (only valid in last descriptor) */
  	err = XGMAC_GET_BITS_LE(rdesc->desc3, RX_NORMAL_DESC3, ES);
@@@ -1942,12 -2014,25 +1974,25 @@@
  				  packet->vlan_ctag);
  		}
  	} else {
 -		unsigned int tnp = XGMAC_GET_BITS(packet->attributes,
 -						  RX_PACKET_ATTRIBUTES, TNP);
 -
 -		if ((etlt == 0x05) || (etlt == 0x06)) {
 +		if ((etlt == 0x05) || (etlt == 0x06))
  			XGMAC_SET_BITS(packet->attributes, RX_PACKET_ATTRIBUTES,
  				       CSUM_DONE, 0);
++<<<<<<< HEAD
 +		else
++=======
+ 			XGMAC_SET_BITS(packet->attributes, RX_PACKET_ATTRIBUTES,
+ 				       TNPCSUM_DONE, 0);
+ 			pdata->ext_stats.rx_csum_errors++;
+ 		} else if (tnp && ((etlt == 0x09) || (etlt == 0x0a))) {
+ 			XGMAC_SET_BITS(packet->attributes, RX_PACKET_ATTRIBUTES,
+ 				       CSUM_DONE, 0);
+ 			XGMAC_SET_BITS(packet->attributes, RX_PACKET_ATTRIBUTES,
+ 				       TNPCSUM_DONE, 0);
+ 			pdata->ext_stats.rx_vxlan_csum_errors++;
+ 		} else {
++>>>>>>> 3010608d033c (amd-xgbe: Add additional ethtool statistics)
  			XGMAC_SET_BITS(packet->errors, RX_PACKET_ERRORS,
  				       FRAME, 1);
 -		}
  	}
  
  	pdata->ext_stats.rxq_packets[channel->queue_index]++;
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-dev.c
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c b/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
index f80b186779b7..60b58fcc144b 100644
--- a/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
@@ -146,6 +146,7 @@ static const struct xgbe_stats xgbe_gstring_stats[] = {
 	XGMAC_MMC_STAT("tx_broadcast_packets", txbroadcastframes_gb),
 	XGMAC_MMC_STAT("tx_multicast_packets", txmulticastframes_gb),
 	XGMAC_MMC_STAT("tx_vlan_packets", txvlanframes_g),
+	XGMAC_EXT_STAT("tx_vxlan_packets", tx_vxlan_packets),
 	XGMAC_EXT_STAT("tx_tso_packets", tx_tso_packets),
 	XGMAC_MMC_STAT("tx_64_byte_packets", tx64octets_gb),
 	XGMAC_MMC_STAT("tx_65_to_127_byte_packets", tx65to127octets_gb),
@@ -162,6 +163,7 @@ static const struct xgbe_stats xgbe_gstring_stats[] = {
 	XGMAC_MMC_STAT("rx_broadcast_packets", rxbroadcastframes_g),
 	XGMAC_MMC_STAT("rx_multicast_packets", rxmulticastframes_g),
 	XGMAC_MMC_STAT("rx_vlan_packets", rxvlanframes_gb),
+	XGMAC_EXT_STAT("rx_vxlan_packets", rx_vxlan_packets),
 	XGMAC_MMC_STAT("rx_64_byte_packets", rx64octets_gb),
 	XGMAC_MMC_STAT("rx_65_to_127_byte_packets", rx65to127octets_gb),
 	XGMAC_MMC_STAT("rx_128_to_255_byte_packets", rx128to255octets_gb),
@@ -177,6 +179,8 @@ static const struct xgbe_stats xgbe_gstring_stats[] = {
 	XGMAC_MMC_STAT("rx_out_of_range_errors", rxoutofrangetype),
 	XGMAC_MMC_STAT("rx_fifo_overflow_errors", rxfifooverflow),
 	XGMAC_MMC_STAT("rx_watchdog_errors", rxwatchdogerror),
+	XGMAC_EXT_STAT("rx_csum_errors", rx_csum_errors),
+	XGMAC_EXT_STAT("rx_vxlan_csum_errors", rx_vxlan_csum_errors),
 	XGMAC_MMC_STAT("rx_pause_frames", rxpauseframes),
 	XGMAC_EXT_STAT("rx_split_header_packets", rx_split_header_packets),
 	XGMAC_EXT_STAT("rx_buffer_unavailable", rx_buffer_unavailable),
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe.h b/drivers/net/ethernet/amd/xgbe/xgbe.h
index a907c98e68fb..5ed34ad50052 100644
--- a/drivers/net/ethernet/amd/xgbe/xgbe.h
+++ b/drivers/net/ethernet/amd/xgbe/xgbe.h
@@ -671,6 +671,11 @@ struct xgbe_ext_stats {
 	u64 txq_bytes[XGBE_MAX_DMA_CHANNELS];
 	u64 rxq_packets[XGBE_MAX_DMA_CHANNELS];
 	u64 rxq_bytes[XGBE_MAX_DMA_CHANNELS];
+
+	u64 tx_vxlan_packets;
+	u64 rx_vxlan_packets;
+	u64 rx_csum_errors;
+	u64 rx_vxlan_csum_errors;
 };
 
 struct xgbe_hw_if {
