nfp: flower: app should use struct nfp_repr

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author John Hurley <john.hurley@netronome.com>
commit 2df7b2d20622f98bca2f001bb0e8d8bee01782ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2df7b2d2.failed

Ensure priv netdev data in flower app is cast to nfp_repr and not nfp_net
as in other apps.

Fixes: 363fc53b8b58 ("nfp: flower: Convert ndo_setup_tc offloads to block callbacks")
	Signed-off-by: John Hurley <john.hurley@netronome.com>
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2df7b2d20622f98bca2f001bb0e8d8bee01782ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/flower/offload.c
diff --cc drivers/net/ethernet/netronome/nfp/flower/offload.c
index 0e039508dc42,95c2b9284857..000000000000
--- a/drivers/net/ethernet/netronome/nfp/flower/offload.c
+++ b/drivers/net/ethernet/netronome/nfp/flower/offload.c
@@@ -463,6 -465,46 +463,49 @@@ nfp_flower_repr_offload(struct nfp_app 
  	return -EOPNOTSUPP;
  }
  
++<<<<<<< HEAD
++=======
+ static int nfp_flower_setup_tc_block_cb(enum tc_setup_type type,
+ 					void *type_data, void *cb_priv)
+ {
+ 	struct nfp_repr *repr = cb_priv;
+ 
+ 	if (!tc_can_offload(repr->netdev))
+ 		return -EOPNOTSUPP;
+ 
+ 	switch (type) {
+ 	case TC_SETUP_CLSFLOWER:
+ 		return nfp_flower_repr_offload(repr->app, repr->netdev,
+ 					       type_data);
+ 	default:
+ 		return -EOPNOTSUPP;
+ 	}
+ }
+ 
+ static int nfp_flower_setup_tc_block(struct net_device *netdev,
+ 				     struct tc_block_offload *f)
+ {
+ 	struct nfp_repr *repr = netdev_priv(netdev);
+ 
+ 	if (f->binder_type != TCF_BLOCK_BINDER_TYPE_CLSACT_INGRESS)
+ 		return -EOPNOTSUPP;
+ 
+ 	switch (f->command) {
+ 	case TC_BLOCK_BIND:
+ 		return tcf_block_cb_register(f->block,
+ 					     nfp_flower_setup_tc_block_cb,
+ 					     repr, repr);
+ 	case TC_BLOCK_UNBIND:
+ 		tcf_block_cb_unregister(f->block,
+ 					nfp_flower_setup_tc_block_cb,
+ 					repr);
+ 		return 0;
+ 	default:
+ 		return -EOPNOTSUPP;
+ 	}
+ }
+ 
++>>>>>>> 2df7b2d20622 (nfp: flower: app should use struct nfp_repr)
  int nfp_flower_setup_tc(struct nfp_app *app, struct net_device *netdev,
  			enum tc_setup_type type, void *type_data)
  {
* Unmerged path drivers/net/ethernet/netronome/nfp/flower/offload.c
