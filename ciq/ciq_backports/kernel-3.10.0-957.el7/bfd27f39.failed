drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ben Skeggs <bskeggs@redhat.com>
commit bfd27f39b5419724883bbd04910c4c35e57b6154
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/bfd27f39.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit bfd27f39b5419724883bbd04910c4c35e57b6154)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
index 5d64fed84507,d33e531bb1a0..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
@@@ -1908,6 -1919,28 +1908,31 @@@ gf100_gr_init(struct gf100_gr *gr
  {
  	struct nvkm_device *device = gr->base.engine.subdev.device;
  	struct nvkm_fb *fb = device->fb;
++<<<<<<< HEAD
++=======
+ 
+ 	nvkm_wr32(device, 0x418880, nvkm_rd32(device, 0x100c80) & 0x00000001);
+ 	nvkm_wr32(device, 0x4188a4, 0x03000000);
+ 	nvkm_wr32(device, 0x418888, 0x00000000);
+ 	nvkm_wr32(device, 0x41888c, 0x00000000);
+ 	nvkm_wr32(device, 0x418890, 0x00000000);
+ 	nvkm_wr32(device, 0x418894, 0x00000000);
+ 	nvkm_wr32(device, 0x4188b4, nvkm_memory_addr(fb->mmu_wr) >> 8);
+ 	nvkm_wr32(device, 0x4188b8, nvkm_memory_addr(fb->mmu_rd) >> 8);
+ }
+ 
+ void
+ gf100_gr_init_num_active_ltcs(struct gf100_gr *gr)
+ {
+ 	struct nvkm_device *device = gr->base.engine.subdev.device;
+ 	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
+ }
+ 
+ void
+ gf100_gr_init_zcull(struct gf100_gr *gr)
+ {
+ 	struct nvkm_device *device = gr->base.engine.subdev.device;
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	const u32 magicgpc918 = DIV_ROUND_UP(0x00800000, gr->tpc_total);
  	u32 data[TPC_MAX / 8] = {};
  	u8  tpcnr[GPC_MAX];
@@@ -1945,20 -1962,41 +1970,37 @@@
  	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
  	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
  
 -	nvkm_wr32(device, GPC_BCAST(0x1bd4), magicgpc918);
 -}
 -
 -void
 -gf100_gr_init_vsc_stream_master(struct gf100_gr *gr)
 -{
 -	struct nvkm_device *device = gr->base.engine.subdev.device;
 -	nvkm_mask(device, TPC_UNIT(0, 0, 0x05c), 0x00000001, 0x00000001);
 -}
 -
 -int
 -gf100_gr_init(struct gf100_gr *gr)
 -{
 -	struct nvkm_device *device = gr->base.engine.subdev.device;
 -	int gpc, tpc, rop;
 -
 -	gr->func->init_gpc_mmu(gr);
 +	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
 +			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
 +							 gr->tpc_total);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
 +	}
  
 -	if (gr->fuc_sw_nonctx)
 -		gf100_gr_mmio(gr, gr->fuc_sw_nonctx);
 +	if (device->chipset != 0xd7)
 +		nvkm_wr32(device, GPC_BCAST(0x1bd4), magicgpc918);
  	else
++<<<<<<< HEAD
 +		nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
 +
 +	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
++=======
+ 		gf100_gr_mmio(gr, gr->func->mmio);
+ 
+ 	if (gr->func->init_r405a14)
+ 		gr->func->init_r405a14(gr);
+ 
+ 	if (gr->func->clkgate_pack)
+ 		nvkm_therm_clkgate_init(device->therm, gr->func->clkgate_pack);
+ 
+ 	if (gr->func->init_bios)
+ 		gr->func->init_bios(gr);
+ 
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
+ 	gr->func->init_num_active_ltcs(gr);
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  
  	nvkm_wr32(device, 0x400500, 0x00010001);
  
@@@ -2039,6 -2077,10 +2081,13 @@@ gf100_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gf100_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.mmio = gf100_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
index a36e45a4a635,7f6aed873408..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
@@@ -122,6 -122,11 +122,14 @@@ struct gf100_gr_func 
  	void (*dtor)(struct gf100_gr *);
  	int (*init)(struct gf100_gr *);
  	void (*init_gpc_mmu)(struct gf100_gr *);
++<<<<<<< HEAD
++=======
+ 	void (*init_r405a14)(struct gf100_gr *);
+ 	void (*init_bios)(struct gf100_gr *);
+ 	void (*init_vsc_stream_master)(struct gf100_gr *);
+ 	void (*init_zcull)(struct gf100_gr *);
+ 	void (*init_num_active_ltcs)(struct gf100_gr *);
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	void (*init_rop_active_fbps)(struct gf100_gr *);
  	void (*init_ppc_exceptions)(struct gf100_gr *);
  	void (*init_swdx_pes_mask)(struct gf100_gr *);
@@@ -140,17 -144,24 +147,26 @@@
  	struct nvkm_sclass sclass[];
  };
  
 -int gf100_gr_rops(struct gf100_gr *);
  int gf100_gr_init(struct gf100_gr *);
++<<<<<<< HEAD
 +int gf100_gr_rops(struct gf100_gr *);
++=======
+ void gf100_gr_init_vsc_stream_master(struct gf100_gr *);
+ void gf100_gr_init_zcull(struct gf100_gr *);
+ void gf100_gr_init_num_active_ltcs(struct gf100_gr *);
+ 
+ void gf117_gr_init_zcull(struct gf100_gr *);
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  
  int gk104_gr_init(struct gf100_gr *);
 -void gk104_gr_init_vsc_stream_master(struct gf100_gr *);
  void gk104_gr_init_rop_active_fbps(struct gf100_gr *);
  void gk104_gr_init_ppc_exceptions(struct gf100_gr *);
  
  int gk20a_gr_init(struct gf100_gr *);
  
 +int gm200_gr_init(struct gf100_gr *);
  int gm200_gr_rops(struct gf100_gr *);
+ void gm200_gr_init_num_active_ltcs(struct gf100_gr *);
  
  int gp100_gr_init(struct gf100_gr *);
  void gp100_gr_init_rop_active_fbps(struct gf100_gr *);
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
index d736dcd55ea2,b6d67f5e5e71..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
@@@ -115,6 -115,10 +115,13 @@@ gf104_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf104_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.mmio = gf104_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
index 2f0d24498427,9b5796bd1dc0..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
@@@ -106,6 -106,17 +106,14 @@@ gf108_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf108_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_r405a14 = gf108_gr_init_r405a14,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.mmio = gf108_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
index d1d942eb86af,7e346a0e9540..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
@@@ -87,6 -87,10 +87,13 @@@ gf110_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf110_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.mmio = gf110_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
index 0124e468086e,5c68c5f904ce..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
@@@ -123,6 -123,38 +123,13 @@@ gf117_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gf117_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.mmio = gf117_gr_pack_mmio,
  	.fecs.ucode = &gf117_gr_fecs_ucode,
  	.gpccs.ucode = &gf117_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
index 8d8e4cafe28f,b642bd224ecf..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
@@@ -178,6 -178,10 +178,13 @@@ gf119_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf119_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.mmio = gf119_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
index ec22da6c99fc,3f19de24ef69..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
@@@ -207,52 -415,18 +207,58 @@@ in
  gk104_gr_init(struct gf100_gr *gr)
  {
  	struct nvkm_device *device = gr->base.engine.subdev.device;
 +	struct nvkm_fb *fb = device->fb;
 +	const u32 magicgpc918 = DIV_ROUND_UP(0x00800000, gr->tpc_total);
 +	u32 data[TPC_MAX / 8] = {};
 +	u8  tpcnr[GPC_MAX];
  	int gpc, tpc, rop;
 +	int i;
  
 -	gr->func->init_gpc_mmu(gr);
 +	nvkm_wr32(device, GPC_BCAST(0x0880), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x08a4), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0888), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x088c), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0890), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x0894), 0x00000000);
 +	nvkm_wr32(device, GPC_BCAST(0x08b4), nvkm_memory_addr(fb->mmu_wr) >> 8);
 +	nvkm_wr32(device, GPC_BCAST(0x08b8), nvkm_memory_addr(fb->mmu_rd) >> 8);
  
  	gf100_gr_mmio(gr, gr->func->mmio);
 -	if (gr->func->clkgate_pack)
 -		nvkm_therm_clkgate_init(gr->base.engine.subdev.device->therm,
 -					gr->func->clkgate_pack);
  
++<<<<<<< HEAD
 +	nvkm_wr32(device, GPC_UNIT(0, 0x3018), 0x00000001);
 +
 +	memset(data, 0x00, sizeof(data));
 +	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
 +	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
 +		do {
 +			gpc = (gpc + 1) % gr->gpc_nr;
 +		} while (!tpcnr[gpc]);
 +		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
 +
 +		data[i / 8] |= tpc << ((i % 8) * 4);
 +	}
 +
 +	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
 +	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
 +	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
 +	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
 +
 +	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
 +			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
 +							 gr->tpc_total);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
 +	}
 +
 +	nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
 +	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
++=======
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
+ 	gr->func->init_num_active_ltcs(gr);
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  
  	gr->func->init_rop_active_fbps(gr);
  
@@@ -339,6 -513,10 +345,13 @@@ gk104_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gk104_gr = {
  	.init = gk104_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk104_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
index f31b171a4102,9a8428c5df45..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
@@@ -183,6 -337,10 +183,13 @@@ gk110_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gk110_gr = {
  	.init = gk104_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk110_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
index d76dd178007f,08f3f8c2c2bf..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
@@@ -103,6 -103,10 +103,13 @@@ gk110b_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gk110b_gr = {
  	.init = gk104_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk110b_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
index 14bbe6ed02a9,49ee5490c7c2..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
@@@ -162,6 -162,10 +162,13 @@@ gk208_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gk208_gr = {
  	.init = gk104_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk208_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
index 2c67fac576d1,bbb0a28365f5..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
@@@ -324,39 -319,23 +324,45 @@@ gm107_gr_init(struct gf100_gr *gr
  	nvkm_wr32(device, GPC_BCAST(0x0894), 0x00000000);
  	nvkm_wr32(device, GPC_BCAST(0x08b4), nvkm_memory_addr(fb->mmu_wr) >> 8);
  	nvkm_wr32(device, GPC_BCAST(0x08b8), nvkm_memory_addr(fb->mmu_rd) >> 8);
 -}
  
 -static int
 -gm107_gr_init(struct gf100_gr *gr)
 -{
 -	struct nvkm_device *device = gr->base.engine.subdev.device;
 -	int gpc, tpc, rop;
 +	gf100_gr_mmio(gr, gr->func->mmio);
  
 -	gr->func->init_gpc_mmu(gr);
 +	gm107_gr_init_bios(gr);
  
 -	gf100_gr_mmio(gr, gr->func->mmio);
++<<<<<<< HEAD
 +	nvkm_wr32(device, GPC_UNIT(0, 0x3018), 0x00000001);
 +
 +	memset(data, 0x00, sizeof(data));
 +	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
 +	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
 +		do {
 +			gpc = (gpc + 1) % gr->gpc_nr;
 +		} while (!tpcnr[gpc]);
 +		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
 +
 +		data[i / 8] |= tpc << ((i % 8) * 4);
 +	}
 +
 +	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
 +	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
 +	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
 +	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
  
 -	gr->func->init_bios(gr);
 +	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
 +			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
 +							 gr->tpc_total);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
 +	}
  
 +	nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
 +	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
++=======
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
+ 	gr->func->init_num_active_ltcs(gr);
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  
  	gr->func->init_rop_active_fbps(gr);
  
@@@ -442,6 -421,11 +448,14 @@@ gm107_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gm107_gr = {
  	.init = gm107_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gm107_gr_init_gpc_mmu,
+ 	.init_bios = gm107_gr_init_bios,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gm107_gr_pack_mmio,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
index 6435f1257572,5007435e6f7d..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
@@@ -75,37 -79,11 +83,43 @@@ gm200_gr_init(struct gf100_gr *gr
  
  	gf100_gr_mmio(gr, gr->fuc_sw_nonctx);
  
 -	gr->func->init_bios(gr);
 +	gm107_gr_init_bios(gr);
 +
++<<<<<<< HEAD
 +	nvkm_wr32(device, GPC_UNIT(0, 0x3018), 0x00000001);
 +
 +	memset(data, 0x00, sizeof(data));
 +	memcpy(tpcnr, gr->tpc_nr, sizeof(gr->tpc_nr));
 +	for (i = 0, gpc = -1; i < gr->tpc_total; i++) {
 +		do {
 +			gpc = (gpc + 1) % gr->gpc_nr;
 +		} while (!tpcnr[gpc]);
 +		tpc = gr->tpc_nr[gpc] - tpcnr[gpc]--;
 +
 +		data[i / 8] |= tpc << ((i % 8) * 4);
 +	}
 +
 +	nvkm_wr32(device, GPC_BCAST(0x0980), data[0]);
 +	nvkm_wr32(device, GPC_BCAST(0x0984), data[1]);
 +	nvkm_wr32(device, GPC_BCAST(0x0988), data[2]);
 +	nvkm_wr32(device, GPC_BCAST(0x098c), data[3]);
  
 +	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0914),
 +			  gr->screen_tile_row_offset << 8 | gr->tpc_nr[gpc]);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0910), 0x00040000 |
 +							 gr->tpc_total);
 +		nvkm_wr32(device, GPC_UNIT(gpc, 0x0918), magicgpc918);
 +	}
 +
 +	nvkm_wr32(device, GPC_BCAST(0x3fd4), magicgpc918);
 +	nvkm_wr32(device, GPC_BCAST(0x08ac), nvkm_rd32(device, 0x100800));
 +	nvkm_wr32(device, GPC_BCAST(0x033c), nvkm_rd32(device, 0x100804));
++=======
+ 	gr->func->init_vsc_stream_master(gr);
+ 	gr->func->init_zcull(gr);
+ 	gr->func->init_num_active_ltcs(gr);
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  
  	gr->func->init_rop_active_fbps(gr);
  
@@@ -210,6 -188,10 +224,13 @@@ static const struct gf100_gr_fun
  gm200_gr = {
  	.init = gm200_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_bios = gm107_gr_init_bios,
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gm200_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gm200_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.rops = gm200_gr_rops,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
index 867a5f7cc5bc,1e6795956abc..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
@@@ -160,9 -123,11 +151,14 @@@ static const struct gf100_gr_fun
  gp100_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gm200_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
- 	.init_num_active_ltcs = gp100_gr_init_num_active_ltcs,
  	.rops = gm200_gr_rops,
  	.ppc_nr = 2,
  	.grctx = &gp100_grctx,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
index 61e3a0b08559,17bd872b8dc9..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
@@@ -44,6 -44,9 +44,12 @@@ static const struct gf100_gr_fun
  gp102_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gm200_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.init_swdx_pes_mask = gp102_gr_init_swdx_pes_mask,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
index f7272323f694,3fba3af2f5a6..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
@@@ -30,6 -30,9 +30,12 @@@ static const struct gf100_gr_fun
  gp107_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gm200_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.init_swdx_pes_mask = gp102_gr_init_swdx_pes_mask,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
index 5f3d161a0842,97f86677a22c..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
@@@ -37,9 -29,11 +29,14 @@@ static const struct gf100_gr_fun
  gp10b_gr = {
  	.init = gp100_gr_init,
  	.init_gpc_mmu = gm200_gr_init_gpc_mmu,
++<<<<<<< HEAD
++=======
+ 	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
++>>>>>>> bfd27f39b541 (drm/nouveau/gr/gf100-: virtualise init_num_active_ltcs)
  	.init_rop_active_fbps = gp100_gr_init_rop_active_fbps,
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
- 	.init_num_active_ltcs = gp10b_gr_init_num_active_ltcs,
  	.rops = gm200_gr_rops,
  	.ppc_nr = 1,
  	.grctx = &gp102_grctx,
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk208.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gm107.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gm200.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp100.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp102.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp107.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gp10b.c
