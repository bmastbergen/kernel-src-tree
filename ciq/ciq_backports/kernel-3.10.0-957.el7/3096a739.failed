nvme: delete NVME_CTRL_LIVE --> NVME_CTRL_CONNECTING transition

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] delete NVME_CTRL_LIVE --> NVME_CTRL_CONNECTING transition (David Milburn) [1515584]
Rebuild_FUZZ: 95.00%
commit-author Max Gurtovoy <maxg@mellanox.com>
commit 3096a739d2ccbfd6a626e388228a16558f76d79d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3096a739.failed

There is no logical reason to move from live state to connecting
state. In case of initial connection establishment, the transition
should be NVME_CTRL_NEW --> NVME_CTRL_CONNECTING --> NVME_CTRL_LIVE.
In case of error recovery or reset, the transition should be
NVME_CTRL_LIVE --> NVME_CTRL_RESETTING --> NVME_CTRL_CONNECTING -->
NVME_CTRL_LIVE.

	Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
	Reviewed-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit 3096a739d2ccbfd6a626e388228a16558f76d79d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 27174fd02aa2,1f9278364196..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -207,9 -294,9 +207,13 @@@ bool nvme_change_ctrl_state(struct nvme
  			break;
  		}
  		break;
 -	case NVME_CTRL_CONNECTING:
 +	case NVME_CTRL_RECONNECTING:
  		switch (old_state) {
++<<<<<<< HEAD
 +		case NVME_CTRL_LIVE:
++=======
+ 		case NVME_CTRL_NEW:
++>>>>>>> 3096a739d2cc (nvme: delete NVME_CTRL_LIVE --> NVME_CTRL_CONNECTING transition)
  		case NVME_CTRL_RESETTING:
  			changed = true;
  			/* FALLTHRU */
* Unmerged path drivers/nvme/host/core.c
