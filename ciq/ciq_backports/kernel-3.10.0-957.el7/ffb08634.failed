PCI: Disable Samsung SM961/PM961 NVMe before FLR

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [pci] Disable Samsung SM961/PM961 NVMe before FLR (Alex Williamson) [1542494]
Rebuild_FUZZ: 94.51%
commit-author Alex Williamson <alex.williamson@redhat.com>
commit ffb0863426eb91a14101376051cfafa5527e665d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ffb08634.failed

The Samsung SM961/PM961 (960 EVO) sometimes fails to return from FLR with
the PCI config space reading back as -1.  A reproducible instance of this
behavior is resolved by clearing the enable bit in the NVMe configuration
register and waiting for the ready status to clear (disabling the NVMe
controller) prior to FLR.

Link: https://bugzilla.redhat.com/show_bug.cgi?id=1542494
	Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit ffb0863426eb91a14101376051cfafa5527e665d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/quirks.c
diff --cc drivers/pci/quirks.c
index be41b3e1d0dc,e249676fbf04..000000000000
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@@ -29,6 -25,9 +29,12 @@@
  #include <linux/sched.h>
  #include <linux/ktime.h>
  #include <linux/mm.h>
++<<<<<<< HEAD
++=======
+ #include <linux/nvme.h>
+ #include <linux/platform_data/x86/apple.h>
+ #include <linux/pm_runtime.h>
++>>>>>>> ffb0863426eb (PCI: Disable Samsung SM961/PM961 NVMe before FLR)
  #include <asm/dma.h>	/* isa_dma_bridge_buggy */
  #include "pci.h"
  
* Unmerged path drivers/pci/quirks.c
