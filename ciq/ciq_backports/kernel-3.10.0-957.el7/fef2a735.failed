perf tools: Kill die()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit fef2a735167a827a65bbdf1791abe0dd070ce372
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/fef2a735.failed

Finally can nuke this function, no more users.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-eivvvzn8ie6w42gy3batxoy7@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit fef2a735167a827a65bbdf1791abe0dd070ce372)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/tests/attr.c
#	tools/perf/util/usage.c
diff --cc tools/perf/tests/attr.c
index 9a5148dccffe,0e77b2cf61ec..000000000000
--- a/tools/perf/tests/attr.c
+++ b/tools/perf/tests/attr.c
@@@ -35,10 -35,7 +35,8 @@@
  
  #define ENV "PERF_TEST_ATTR"
  
- extern int verbose;
- 
  static char *dir;
 +static bool ready;
  
  void test_attr__init(void)
  {
@@@ -142,8 -136,10 +140,15 @@@ void test_attr__open(struct perf_event_
  {
  	int errno_saved = errno;
  
++<<<<<<< HEAD
 +	if ((fd != -1) && store_event(attr, pid, cpu, fd, group_fd, flags))
 +		die("test attr FAILED");
++=======
+ 	if (store_event(attr, pid, cpu, fd, group_fd, flags)) {
+ 		pr_err("test attr FAILED");
+ 		exit(128);
+ 	}
++>>>>>>> fef2a735167a (perf tools: Kill die())
  
  	errno = errno_saved;
  }
diff --cc tools/perf/util/usage.c
index aacb65e079aa,6cc9d9888ce0..000000000000
--- a/tools/perf/util/usage.c
+++ b/tools/perf/util/usage.c
@@@ -22,22 -15,6 +15,25 @@@ static __noreturn void usage_builtin(co
  	exit(129);
  }
  
++<<<<<<< HEAD
 +static __noreturn void die_builtin(const char *err, va_list params)
 +{
 +	report(" Fatal: ", err, params);
 +	exit(128);
 +}
 +
 +static void error_builtin(const char *err, va_list params)
 +{
 +	report(" Error: ", err, params);
 +}
 +
 +static void warn_builtin(const char *warn, va_list params)
 +{
 +	report(" Warning: ", warn, params);
 +}
 +
++=======
++>>>>>>> fef2a735167a (perf tools: Kill die())
  /* If we are in a dlopen()ed .so write to a global variable would segfault
   * (ugh), so keep things static. */
  static void (*usage_routine)(const char *err) __noreturn = usage_builtin;
@@@ -53,31 -23,3 +49,34 @@@ void usage(const char *err
  {
  	usage_routine(err);
  }
++<<<<<<< HEAD
 +
 +void die(const char *err, ...)
 +{
 +	va_list params;
 +
 +	va_start(params, err);
 +	die_builtin(err, params);
 +	va_end(params);
 +}
 +
 +int error(const char *err, ...)
 +{
 +	va_list params;
 +
 +	va_start(params, err);
 +	error_routine(err, params);
 +	va_end(params);
 +	return -1;
 +}
 +
 +void warning(const char *warn, ...)
 +{
 +	va_list params;
 +
 +	va_start(params, warn);
 +	warn_routine(warn, params);
 +	va_end(params);
 +}
++=======
++>>>>>>> fef2a735167a (perf tools: Kill die())
* Unmerged path tools/perf/tests/attr.c
* Unmerged path tools/perf/util/usage.c
