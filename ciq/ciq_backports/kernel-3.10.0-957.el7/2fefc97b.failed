HAVE_ARCH_HARDENED_USERCOPY is unconditional now

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit 2fefc97b2180518bac923fba3f79fdca1f41dc15
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2fefc97b.failed

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 2fefc97b2180518bac923fba3f79fdca1f41dc15)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm/Kconfig
#	arch/arm64/Kconfig
#	arch/ia64/Kconfig
#	arch/mips/Kconfig
#	arch/powerpc/Kconfig
#	arch/s390/Kconfig
#	arch/sparc/Kconfig
#	arch/x86/Kconfig
#	security/Kconfig
diff --cc arch/arm/Kconfig
index d1387fc4470a,8a7ab5e73af9..000000000000
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@@ -1,36 -1,62 +1,45 @@@
  config ARM
  	bool
  	default y
 -	select ARCH_CLOCKSOURCE_DATA
 -	select ARCH_HAS_DEBUG_VIRTUAL
 -	select ARCH_HAS_DEVMEM_IS_ALLOWED
 -	select ARCH_HAS_ELF_RANDOMIZE
 -	select ARCH_HAS_SET_MEMORY
 -	select ARCH_HAS_STRICT_KERNEL_RWX if MMU && !XIP_KERNEL
 -	select ARCH_HAS_STRICT_MODULE_RWX if MMU
 -	select ARCH_HAS_TICK_BROADCAST if GENERIC_CLOCKEVENTS_BROADCAST
 +	select ARCH_BINFMT_ELF_RANDOMIZE_PIE
 +	select ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE
  	select ARCH_HAVE_CUSTOM_GPIO_H
 -	select ARCH_HAS_GCOV_PROFILE_ALL
 -	select ARCH_MIGHT_HAVE_PC_PARPORT
 -	select ARCH_OPTIONAL_KERNEL_RWX if ARCH_HAS_STRICT_KERNEL_RWX
 -	select ARCH_OPTIONAL_KERNEL_RWX_DEFAULT if CPU_V7
 -	select ARCH_SUPPORTS_ATOMIC_RMW
 -	select ARCH_USE_BUILTIN_BSWAP
 -	select ARCH_USE_CMPXCHG_LOCKREF
 +	select ARCH_HAS_TICK_BROADCAST if GENERIC_CLOCKEVENTS_BROADCAST
  	select ARCH_WANT_IPC_PARSE_VERSION
  	select BUILDTIME_EXTABLE_SORT if MMU
 -	select CLONE_BACKWARDS
  	select CPU_PM if (SUSPEND || CPU_IDLE)
 -	select DCACHE_WORD_ACCESS if HAVE_EFFICIENT_UNALIGNED_ACCESS
 -	select EDAC_SUPPORT
 -	select EDAC_ATOMIC_SCRUB
 -	select GENERIC_ALLOCATOR
 -	select GENERIC_ATOMIC64 if (CPU_V7M || CPU_V6 || !CPU_32v6K || !AEABI)
 +	select DCACHE_WORD_ACCESS if (CPU_V6 || CPU_V6K || CPU_V7) && !CPU_BIG_ENDIAN && MMU
 +	select GENERIC_ATOMIC64 if (CPU_V6 || !CPU_32v6K || !AEABI)
  	select GENERIC_CLOCKEVENTS_BROADCAST if SMP
 -	select GENERIC_EARLY_IOREMAP
 -	select GENERIC_IDLE_POLL_SETUP
  	select GENERIC_IRQ_PROBE
  	select GENERIC_IRQ_SHOW
 -	select GENERIC_IRQ_SHOW_LEVEL
  	select GENERIC_PCI_IOMAP
 -	select GENERIC_SCHED_CLOCK
  	select GENERIC_SMP_IDLE_THREAD
 +	select GENERIC_IDLE_POLL_SETUP
  	select GENERIC_STRNCPY_FROM_USER
  	select GENERIC_STRNLEN_USER
 -	select HANDLE_DOMAIN_IRQ
  	select HARDIRQS_SW_RESEND
++<<<<<<< HEAD
 +	select HAVE_ARCH_JUMP_LABEL if !XIP_KERNEL
 +	select HAVE_ARCH_KGDB
 +	select HAVE_ARCH_SECCOMP_FILTER
++=======
+ 	select HAVE_ARCH_AUDITSYSCALL if (AEABI && !OABI_COMPAT)
+ 	select HAVE_ARCH_BITREVERSE if (CPU_32v7M || CPU_32v7) && !CPU_32v6
+ 	select HAVE_ARCH_JUMP_LABEL if !XIP_KERNEL && !CPU_ENDIAN_BE32 && MMU
+ 	select HAVE_ARCH_KGDB if !CPU_ENDIAN_BE32 && MMU
+ 	select HAVE_ARCH_MMAP_RND_BITS if MMU
+ 	select HAVE_ARCH_SECCOMP_FILTER if (AEABI && !OABI_COMPAT)
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  	select HAVE_ARCH_TRACEHOOK
 -	select HAVE_ARM_SMCCC if CPU_V7
 -	select HAVE_CBPF_JIT
 -	select HAVE_CC_STACKPROTECTOR
 -	select HAVE_CONTEXT_TRACKING
 +	select HAVE_BPF_JIT
  	select HAVE_C_RECORDMCOUNT
 +	select HAVE_CC_STACKPROTECTOR
  	select HAVE_DEBUG_KMEMLEAK
  	select HAVE_DMA_API_DEBUG
 +	select HAVE_DMA_ATTRS
  	select HAVE_DMA_CONTIGUOUS if MMU
 -	select HAVE_DYNAMIC_FTRACE if (!XIP_KERNEL) && !CPU_ENDIAN_BE32 && MMU
 -	select HAVE_EFFICIENT_UNALIGNED_ACCESS if (CPU_V6 || CPU_V6K || CPU_V7) && MMU
 -	select HAVE_EXIT_THREAD
 +	select HAVE_DYNAMIC_FTRACE if (!XIP_KERNEL)
  	select HAVE_FTRACE_MCOUNT_RECORD if (!XIP_KERNEL)
  	select HAVE_FUNCTION_GRAPH_TRACER if (!THUMB2_KERNEL)
  	select HAVE_FUNCTION_TRACER if (!XIP_KERNEL)
diff --cc arch/arm64/Kconfig
index 56b3f6d447ae,b88550ab1a0c..000000000000
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@@ -7,16 -26,56 +7,30 @@@ config ARM6
  	select ARM_AMBA
  	select ARM_ARCH_TIMER
  	select ARM_GIC
 -	select AUDIT_ARCH_COMPAT_GENERIC
 -	select ARM_GIC_V2M if PCI
 -	select ARM_GIC_V3
 -	select ARM_GIC_V3_ITS if PCI
 -	select ARM_PSCI_FW
 -	select BUILDTIME_EXTABLE_SORT
  	select CLONE_BACKWARDS
  	select COMMON_CLK
 -	select CPU_PM if (SUSPEND || CPU_IDLE)
 -	select DCACHE_WORD_ACCESS
 -	select EDAC_SUPPORT
 -	select FRAME_POINTER
 -	select GENERIC_ALLOCATOR
  	select GENERIC_CLOCKEVENTS
 -	select GENERIC_CLOCKEVENTS_BROADCAST
 -	select GENERIC_CPU_AUTOPROBE
 -	select GENERIC_EARLY_IOREMAP
 -	select GENERIC_IDLE_POLL_SETUP
 +	select GENERIC_IOMAP
  	select GENERIC_IRQ_PROBE
  	select GENERIC_IRQ_SHOW
 -	select GENERIC_IRQ_SHOW_LEVEL
 -	select GENERIC_PCI_IOMAP
 -	select GENERIC_SCHED_CLOCK
  	select GENERIC_SMP_IDLE_THREAD
 -	select GENERIC_STRNCPY_FROM_USER
 -	select GENERIC_STRNLEN_USER
  	select GENERIC_TIME_VSYSCALL
 -	select HANDLE_DOMAIN_IRQ
  	select HARDIRQS_SW_RESEND
++<<<<<<< HEAD
++=======
+ 	select HAVE_ACPI_APEI if (ACPI && EFI)
+ 	select HAVE_ALIGNED_STRUCT_PAGE if SLUB
+ 	select HAVE_ARCH_AUDITSYSCALL
+ 	select HAVE_ARCH_BITREVERSE
+ 	select HAVE_ARCH_HUGE_VMAP
+ 	select HAVE_ARCH_JUMP_LABEL
+ 	select HAVE_ARCH_KASAN if SPARSEMEM_VMEMMAP && !(ARM64_16K_PAGES && ARM64_VA_BITS_48)
+ 	select HAVE_ARCH_KGDB
+ 	select HAVE_ARCH_MMAP_RND_BITS
+ 	select HAVE_ARCH_MMAP_RND_COMPAT_BITS if COMPAT
+ 	select HAVE_ARCH_SECCOMP_FILTER
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  	select HAVE_ARCH_TRACEHOOK
 -	select HAVE_ARCH_TRANSPARENT_HUGEPAGE
 -	select HAVE_ARM_SMCCC
 -	select HAVE_EBPF_JIT
 -	select HAVE_C_RECORDMCOUNT
 -	select HAVE_CC_STACKPROTECTOR
 -	select HAVE_CMPXCHG_DOUBLE
 -	select HAVE_CMPXCHG_LOCAL
 -	select HAVE_CONTEXT_TRACKING
  	select HAVE_DEBUG_BUGVERBOSE
  	select HAVE_DEBUG_KMEMLEAK
  	select HAVE_DMA_API_DEBUG
diff --cc arch/ia64/Kconfig
index 77061d9fc360,6a15083cc366..000000000000
--- a/arch/ia64/Kconfig
+++ b/arch/ia64/Kconfig
@@@ -42,6 -50,8 +42,11 @@@ config IA6
  	select SYSCTL_ARCH_UNALIGN_NO_WARN
  	select HAVE_MOD_ARCH_SPECIFIC
  	select MODULES_USE_ELF_RELA
++<<<<<<< HEAD
++=======
+ 	select ARCH_USE_CMPXCHG_LOCKREF
+ 	select HAVE_ARCH_AUDITSYSCALL
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  	default y
  	help
  	  The Itanium Processor Family is Intel's 64-bit successor to
diff --cc arch/mips/Kconfig
index b4969202c59f,81ce5b4b9251..000000000000
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@@ -43,6 -55,19 +43,22 @@@ config MIP
  	select MODULES_USE_ELF_REL if MODULES
  	select MODULES_USE_ELF_RELA if MODULES && 64BIT
  	select CLONE_BACKWARDS
++<<<<<<< HEAD
++=======
+ 	select HAVE_DEBUG_STACKOVERFLOW
+ 	select HAVE_CC_STACKPROTECTOR
+ 	select CPU_PM if CPU_IDLE
+ 	select ARCH_HAS_TICK_BROADCAST if GENERIC_CLOCKEVENTS_BROADCAST
+ 	select ARCH_BINFMT_ELF_STATE
+ 	select SYSCTL_EXCEPTION_TRACE
+ 	select HAVE_VIRT_CPU_ACCOUNTING_GEN
+ 	select HAVE_IRQ_TIME_ACCOUNTING
+ 	select GENERIC_TIME_VSYSCALL
+ 	select ARCH_CLOCKSOURCE_DATA
+ 	select HANDLE_DOMAIN_IRQ
+ 	select HAVE_EXIT_THREAD
+ 	select HAVE_REGS_AND_STACK_ACCESS_API
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  
  menu "Machine selection"
  
diff --cc arch/powerpc/Kconfig
index 32232f9bee79,053382616533..000000000000
--- a/arch/powerpc/Kconfig
+++ b/arch/powerpc/Kconfig
@@@ -126,72 -80,98 +126,136 @@@ config ARCH_HAS_DMA_SET_COHERENT_MAS
  config PPC
  	bool
  	default y
 -	#
 -	# Please keep this list sorted alphabetically.
 -	#
 -	select ARCH_HAS_DEVMEM_IS_ALLOWED
 -	select ARCH_HAS_DMA_SET_COHERENT_MASK
 -	select ARCH_HAS_ELF_RANDOMIZE
 -	select ARCH_HAS_GCOV_PROFILE_ALL
 -	select ARCH_HAS_SCALED_CPUTIME		if VIRT_CPU_ACCOUNTING_NATIVE
 -	select ARCH_HAS_SG_CHAIN
 -	select ARCH_HAS_TICK_BROADCAST		if GENERIC_CLOCKEVENTS_BROADCAST
 -	select ARCH_HAS_UBSAN_SANITIZE_ALL
 -	select ARCH_HAVE_NMI_SAFE_CMPXCHG
  	select ARCH_MIGHT_HAVE_PC_PARPORT
 -	select ARCH_MIGHT_HAVE_PC_SERIO
 -	select ARCH_SUPPORTS_ATOMIC_RMW
 -	select ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT
 -	select ARCH_USE_BUILTIN_BSWAP
 -	select ARCH_USE_CMPXCHG_LOCKREF		if PPC64
 -	select ARCH_WANT_IPC_PARSE_VERSION
  	select BINFMT_ELF
++<<<<<<< HEAD
 +	select ARCH_HAS_ELF_RANDOMIZE
++=======
+ 	select BUILDTIME_EXTABLE_SORT
+ 	select CLONE_BACKWARDS
+ 	select DCACHE_WORD_ACCESS		if PPC64 && CPU_LITTLE_ENDIAN
+ 	select EDAC_ATOMIC_SCRUB
+ 	select EDAC_SUPPORT
+ 	select GENERIC_ATOMIC64			if PPC32
+ 	select GENERIC_CLOCKEVENTS
+ 	select GENERIC_CLOCKEVENTS_BROADCAST	if SMP
+ 	select GENERIC_CMOS_UPDATE
+ 	select GENERIC_CPU_AUTOPROBE
+ 	select GENERIC_IRQ_SHOW
+ 	select GENERIC_IRQ_SHOW_LEVEL
+ 	select GENERIC_SMP_IDLE_THREAD
+ 	select GENERIC_STRNCPY_FROM_USER
+ 	select GENERIC_STRNLEN_USER
+ 	select GENERIC_TIME_VSYSCALL_OLD
+ 	select HAVE_ARCH_AUDITSYSCALL
+ 	select HAVE_ARCH_JUMP_LABEL
+ 	select HAVE_ARCH_KGDB
+ 	select HAVE_ARCH_SECCOMP_FILTER
+ 	select HAVE_ARCH_TRACEHOOK
+ 	select HAVE_CBPF_JIT			if !PPC64
+ 	select HAVE_CONTEXT_TRACKING		if PPC64
+ 	select HAVE_DEBUG_KMEMLEAK
+ 	select HAVE_DEBUG_STACKOVERFLOW
+ 	select HAVE_DMA_API_DEBUG
+ 	select HAVE_DYNAMIC_FTRACE
+ 	select HAVE_DYNAMIC_FTRACE_WITH_REGS	if MPROFILE_KERNEL
+ 	select HAVE_EBPF_JIT			if PPC64
+ 	select HAVE_EFFICIENT_UNALIGNED_ACCESS	if !(CPU_LITTLE_ENDIAN && POWER7_CPU)
+ 	select HAVE_FTRACE_MCOUNT_RECORD
+ 	select HAVE_FUNCTION_GRAPH_TRACER
+ 	select HAVE_FUNCTION_TRACER
+ 	select HAVE_GCC_PLUGINS
+ 	select HAVE_GENERIC_RCU_GUP
+ 	select HAVE_HW_BREAKPOINT		if PERF_EVENTS && (PPC_BOOK3S || PPC_8xx)
+ 	select HAVE_IDE
+ 	select HAVE_IOREMAP_PROT
+ 	select HAVE_IRQ_EXIT_ON_IRQ_STACK
+ 	select HAVE_KERNEL_GZIP
+ 	select HAVE_KPROBES
+ 	select HAVE_KRETPROBES
+ 	select HAVE_LIVEPATCH			if HAVE_DYNAMIC_FTRACE_WITH_REGS
+ 	select HAVE_MEMBLOCK
+ 	select HAVE_MEMBLOCK_NODE_MAP
+ 	select HAVE_MOD_ARCH_SPECIFIC
+ 	select HAVE_NMI				if PERF_EVENTS
+ 	select HAVE_OPROFILE
+ 	select HAVE_OPTPROBES			if PPC64
+ 	select HAVE_PERF_EVENTS
+ 	select HAVE_PERF_EVENTS_NMI		if PPC64
+ 	select HAVE_PERF_REGS
+ 	select HAVE_PERF_USER_STACK_DUMP
+ 	select HAVE_RCU_TABLE_FREE		if SMP
+ 	select HAVE_REGS_AND_STACK_ACCESS_API
+ 	select HAVE_SYSCALL_TRACEPOINTS
+ 	select HAVE_VIRT_CPU_ACCOUNTING
+ 	select IRQ_DOMAIN
+ 	select IRQ_FORCED_THREADING
+ 	select MODULES_USE_ELF_RELA
+ 	select NO_BOOTMEM
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  	select OF
  	select OF_EARLY_FLATTREE
 -	select OF_RESERVED_MEM
 -	select OLD_SIGACTION			if PPC32
 -	select OLD_SIGSUSPEND
 -	select SPARSE_IRQ
 +	select HAVE_FTRACE_MCOUNT_RECORD
 +	select HAVE_ARCH_MMAP_RND_BITS
 +	select HAVE_ARCH_MMAP_RND_COMPAT_BITS	if COMPAT
 +	select HAVE_DYNAMIC_FTRACE
 +	select HAVE_FUNCTION_TRACER
 +	select HAVE_FUNCTION_GRAPH_TRACER
  	select SYSCTL_EXCEPTION_TRACE
 -	select VIRT_TO_BUS			if !PPC64
 -	#
 -	# Please keep this list sorted alphabetically.
 -	#
 +	select ARCH_WANT_OPTIONAL_GPIOLIB
 +	select VIRT_TO_BUS if !PPC64
 +	select HAVE_IDE
 +	select HAVE_IOREMAP_PROT
 +	select HAVE_EFFICIENT_UNALIGNED_ACCESS if !CPU_LITTLE_ENDIAN
 +	select HAVE_KPROBES
 +	select HAVE_ARCH_KGDB
 +	select HAVE_KRETPROBES
 +	select HAVE_ARCH_TRACEHOOK
 +	select HAVE_MEMBLOCK
 +	select HAVE_MEMBLOCK_NODE_MAP
 +	select HAVE_DMA_API_DEBUG
 +	select USE_GENERIC_SMP_HELPERS if SMP
 +	select HAVE_OPROFILE
 +	select HAVE_DEBUG_KMEMLEAK
 +	select GENERIC_ATOMIC64 if PPC32
 +	select ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE
 +	select HAVE_PERF_EVENTS
 +	select HAVE_PERF_REGS
 +	select HAVE_PERF_USER_STACK_DUMP
 +	select HAVE_REGS_AND_STACK_ACCESS_API
 +	select HAVE_HW_BREAKPOINT if PERF_EVENTS && PPC_BOOK3S_64
 +	select HAVE_GENERIC_HARDIRQS
 +	select ARCH_WANT_IPC_PARSE_VERSION
 +	select SPARSE_IRQ
 +	select IRQ_DOMAIN
 +	select GENERIC_IRQ_SHOW
 +	select GENERIC_IRQ_SHOW_LEVEL
 +	select IRQ_FORCED_THREADING
 +	select HAVE_RCU_TABLE_FREE if SMP
 +	select HAVE_SYSCALL_TRACEPOINTS
 +	select HAVE_BPF_JIT if (PPC64 && CPU_BIG_ENDIAN)
 +	select HAVE_ARCH_JUMP_LABEL
 +	select ARCH_HAVE_NMI_SAFE_CMPXCHG
 +	select GENERIC_SMP_IDLE_THREAD
 +	select GENERIC_CMOS_UPDATE
 +	select GENERIC_TIME_VSYSCALL_OLD
 +	select GENERIC_CLOCKEVENTS
 +	select GENERIC_CLOCKEVENTS_BROADCAST if SMP
 +	select ARCH_HAS_TICK_BROADCAST if GENERIC_CLOCKEVENTS_BROADCAST
 +	select GENERIC_STRNCPY_FROM_USER
 +	select GENERIC_STRNLEN_USER
 +	select HAVE_MOD_ARCH_SPECIFIC
 +	select MODULES_USE_ELF_RELA
 +	select CLONE_BACKWARDS
 +	select ARCH_USE_BUILTIN_BSWAP
 +	select OLD_SIGSUSPEND
 +	select OLD_SIGACTION if PPC32
 +	select HAVE_IRQ_EXIT_ON_IRQ_STACK
 +	select ARCH_USE_CMPXCHG_LOCKREF if PPC64
 +	select ARCH_HAS_DMA_SET_COHERENT_MASK
 +	select HAVE_ARCH_SECCOMP_FILTER
 +	select HAVE_PERF_EVENTS_NMI if PPC64
 +	select GENERIC_CPU_VULNERABILITIES	if PPC_BOOK3S_64
  
  config GENERIC_CSUM
  	def_bool n
diff --cc arch/s390/Kconfig
index 6d4676098bd9,b8b143432381..000000000000
--- a/arch/s390/Kconfig
+++ b/arch/s390/Kconfig
@@@ -108,18 -121,27 +108,25 @@@ config S39
  	select GENERIC_SMP_IDLE_THREAD
  	select GENERIC_TIME_VSYSCALL
  	select HAVE_ALIGNED_STRUCT_PAGE if SLUB
++<<<<<<< HEAD
 +	select HAVE_ARCH_JUMP_LABEL if !MARCH_G5
++=======
+ 	select HAVE_ARCH_AUDITSYSCALL
+ 	select HAVE_ARCH_EARLY_PFN_TO_NID
+ 	select HAVE_ARCH_JUMP_LABEL
+ 	select CPU_NO_EFFICIENT_FFS if !HAVE_MARCH_Z9_109_FEATURES
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  	select HAVE_ARCH_SECCOMP_FILTER
 -	select HAVE_ARCH_SOFT_DIRTY
  	select HAVE_ARCH_TRACEHOOK
 -	select HAVE_ARCH_TRANSPARENT_HUGEPAGE
 -	select HAVE_EBPF_JIT if PACK_STACK && HAVE_MARCH_Z196_FEATURES
 +	select HAVE_ARCH_TRANSPARENT_HUGEPAGE if 64BIT
 +	select HAVE_BPF_JIT if 64BIT && PACK_STACK
  	select HAVE_CMPXCHG_DOUBLE
  	select HAVE_CMPXCHG_LOCAL
 -	select HAVE_COPY_THREAD_TLS
 +	select HAVE_C_RECORDMCOUNT
  	select HAVE_DEBUG_KMEMLEAK
  	select HAVE_DMA_API_DEBUG
 -	select HAVE_DMA_CONTIGUOUS
 -	select DMA_NOOP_OPS
  	select HAVE_DYNAMIC_FTRACE
 -	select HAVE_DYNAMIC_FTRACE_WITH_REGS
 -	select HAVE_EFFICIENT_UNALIGNED_ACCESS
 -	select HAVE_EXIT_THREAD
 +	select HAVE_DYNAMIC_FTRACE_WITH_REGS if 64BIT
  	select HAVE_FTRACE_MCOUNT_RECORD
  	select HAVE_FUNCTION_GRAPH_TRACER
  	select HAVE_FUNCTION_TRACER
diff --cc arch/sparc/Kconfig
index 82bf6d789310,b577dbff5efb..000000000000
--- a/arch/sparc/Kconfig
+++ b/arch/sparc/Kconfig
@@@ -42,6 -40,10 +42,13 @@@ config SPAR
  	select MODULES_USE_ELF_RELA
  	select ODD_RT_SIGACTION
  	select OLD_SIGSUSPEND
++<<<<<<< HEAD
++=======
+ 	select ARCH_HAS_SG_CHAIN
+ 	select CPU_NO_EFFICIENT_FFS
+ 	select PROVE_LOCKING_SMALL if PROVE_LOCKING
+ 	select ARCH_WANT_RELAX_ORDER
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  
  config SPARC32
  	def_bool !64BIT
diff --cc arch/x86/Kconfig
index 48ae09959d87,1d50fdff77ee..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -15,66 -21,140 +15,147 @@@ config X86_3
  config X86_64
  	def_bool y
  	depends on 64BIT
 -	# Options that are inherently 64-bit kernel only:
 -	select ARCH_HAS_GIGANTIC_PAGE
 -	select ARCH_SUPPORTS_INT128
 -	select ARCH_USE_CMPXCHG_LOCKREF
 -	select HAVE_ARCH_SOFT_DIRTY
 -	select MODULES_USE_ELF_RELA
  	select X86_DEV_DMA_OPS
 +	select ARCH_USE_CMPXCHG_LOCKREF
 +	select HAVE_LIVEPATCH
  
 -#
 -# Arch settings
 -#
 -# ( Note that options that are marked 'if X86_64' could in principle be
 -#   ported to 32-bit as well. )
 -#
 +### Arch settings
  config X86
  	def_bool y
 -	#
 -	# Note: keep this list sorted alphabetically
 -	#
 -	select ACPI_LEGACY_TABLES_LOOKUP	if ACPI
 -	select ACPI_SYSTEM_POWER_STATES_SUPPORT	if ACPI
 -	select ANON_INODES
 -	select ARCH_CLOCKSOURCE_DATA
 -	select ARCH_DISCARD_MEMBLOCK
 -	select ARCH_HAS_ACPI_TABLE_UPGRADE	if ACPI
 -	select ARCH_HAS_DEBUG_VIRTUAL
 -	select ARCH_HAS_DEVMEM_IS_ALLOWED
 -	select ARCH_HAS_ELF_RANDOMIZE
 -	select ARCH_HAS_FAST_MULTIPLIER
 -	select ARCH_HAS_GCOV_PROFILE_ALL
 -	select ARCH_HAS_KCOV			if X86_64
 -	select ARCH_HAS_MMIO_FLUSH
 +	select ARCH_HAS_DEBUG_STRICT_USER_COPY_CHECKS
  	select ARCH_HAS_PMEM_API		if X86_64
++<<<<<<< HEAD
 +	select ARCH_HAS_UACCESS_FLUSHCACHE	if X86_64
 +	select ARCH_HAS_MMIO_FLUSH
 +	select HAVE_AOUT if X86_32
 +	select HAVE_UNSTABLE_SCHED_CLOCK
 +	select ARCH_SUPPORTS_NUMA_BALANCING
 +	select ARCH_SUPPORTS_INT128 if X86_64
 +	select ARCH_WANTS_PROT_NUMA_PROT_NONE
++=======
+ 	select ARCH_HAS_SET_MEMORY
+ 	select ARCH_HAS_SG_CHAIN
+ 	select ARCH_HAS_STRICT_KERNEL_RWX
+ 	select ARCH_HAS_STRICT_MODULE_RWX
+ 	select ARCH_HAS_UBSAN_SANITIZE_ALL
+ 	select ARCH_HAVE_NMI_SAFE_CMPXCHG
+ 	select ARCH_MIGHT_HAVE_ACPI_PDC		if ACPI
+ 	select ARCH_MIGHT_HAVE_PC_PARPORT
+ 	select ARCH_MIGHT_HAVE_PC_SERIO
+ 	select ARCH_SUPPORTS_ATOMIC_RMW
+ 	select ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT
+ 	select ARCH_SUPPORTS_NUMA_BALANCING	if X86_64
+ 	select ARCH_USE_BUILTIN_BSWAP
+ 	select ARCH_USE_QUEUED_RWLOCKS
+ 	select ARCH_USE_QUEUED_SPINLOCKS
+ 	select ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH if SMP
+ 	select ARCH_WANT_FRAME_POINTERS
+ 	select ARCH_WANTS_DYNAMIC_TASK_STRUCT
+ 	select BUILDTIME_EXTABLE_SORT
+ 	select CLKEVT_I8253
+ 	select CLOCKSOURCE_VALIDATE_LAST_CYCLE
+ 	select CLOCKSOURCE_WATCHDOG
+ 	select DCACHE_WORD_ACCESS
+ 	select EDAC_ATOMIC_SCRUB
+ 	select EDAC_SUPPORT
+ 	select GENERIC_CLOCKEVENTS
+ 	select GENERIC_CLOCKEVENTS_BROADCAST	if X86_64 || (X86_32 && X86_LOCAL_APIC)
+ 	select GENERIC_CLOCKEVENTS_MIN_ADJUST
+ 	select GENERIC_CMOS_UPDATE
+ 	select GENERIC_CPU_AUTOPROBE
+ 	select GENERIC_EARLY_IOREMAP
+ 	select GENERIC_FIND_FIRST_BIT
+ 	select GENERIC_IOMAP
+ 	select GENERIC_IRQ_PROBE
+ 	select GENERIC_IRQ_SHOW
+ 	select GENERIC_PENDING_IRQ		if SMP
+ 	select GENERIC_SMP_IDLE_THREAD
+ 	select GENERIC_STRNCPY_FROM_USER
+ 	select GENERIC_STRNLEN_USER
+ 	select GENERIC_TIME_VSYSCALL
+ 	select HAVE_ACPI_APEI			if ACPI
+ 	select HAVE_ACPI_APEI_NMI		if ACPI
+ 	select HAVE_ALIGNED_STRUCT_PAGE		if SLUB
+ 	select HAVE_ARCH_AUDITSYSCALL
+ 	select HAVE_ARCH_HUGE_VMAP		if X86_64 || X86_PAE
+ 	select HAVE_ARCH_JUMP_LABEL
+ 	select HAVE_ARCH_KASAN			if X86_64 && SPARSEMEM_VMEMMAP
+ 	select HAVE_ARCH_KGDB
+ 	select HAVE_ARCH_KMEMCHECK
+ 	select HAVE_ARCH_MMAP_RND_BITS		if MMU
+ 	select HAVE_ARCH_MMAP_RND_COMPAT_BITS	if MMU && COMPAT
+ 	select HAVE_ARCH_SECCOMP_FILTER
+ 	select HAVE_ARCH_TRACEHOOK
+ 	select HAVE_ARCH_TRANSPARENT_HUGEPAGE
+ 	select HAVE_ARCH_TRANSPARENT_HUGEPAGE_PUD if X86_64
+ 	select HAVE_ARCH_VMAP_STACK		if X86_64
+ 	select HAVE_ARCH_WITHIN_STACK_FRAMES
+ 	select HAVE_CC_STACKPROTECTOR
+ 	select HAVE_CMPXCHG_DOUBLE
+ 	select HAVE_CMPXCHG_LOCAL
+ 	select HAVE_CONTEXT_TRACKING		if X86_64
+ 	select HAVE_COPY_THREAD_TLS
+ 	select HAVE_C_RECORDMCOUNT
+ 	select HAVE_DEBUG_KMEMLEAK
+ 	select HAVE_DEBUG_STACKOVERFLOW
+ 	select HAVE_DMA_API_DEBUG
+ 	select HAVE_DMA_CONTIGUOUS
+ 	select HAVE_DYNAMIC_FTRACE
+ 	select HAVE_DYNAMIC_FTRACE_WITH_REGS
+ 	select HAVE_EBPF_JIT			if X86_64
+ 	select HAVE_EFFICIENT_UNALIGNED_ACCESS
+ 	select HAVE_EXIT_THREAD
+ 	select HAVE_FENTRY			if X86_64
+ 	select HAVE_FTRACE_MCOUNT_RECORD
+ 	select HAVE_FUNCTION_GRAPH_TRACER
+ 	select HAVE_FUNCTION_TRACER
+ 	select HAVE_GCC_PLUGINS
+ 	select HAVE_HW_BREAKPOINT
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  	select HAVE_IDE
 +	select HAVE_OPROFILE
 +	select HAVE_PCSPKR_PLATFORM
 +	select HAVE_PERF_EVENTS
  	select HAVE_IOREMAP_PROT
 -	select HAVE_IRQ_EXIT_ON_IRQ_STACK	if X86_64
 -	select HAVE_IRQ_TIME_ACCOUNTING
 -	select HAVE_KERNEL_BZIP2
 -	select HAVE_KERNEL_GZIP
 -	select HAVE_KERNEL_LZ4
 -	select HAVE_KERNEL_LZMA
 -	select HAVE_KERNEL_LZO
 -	select HAVE_KERNEL_XZ
  	select HAVE_KPROBES
 -	select HAVE_KPROBES_ON_FTRACE
 -	select HAVE_KRETPROBES
 -	select HAVE_KVM
 -	select HAVE_LIVEPATCH			if X86_64
  	select HAVE_MEMBLOCK
  	select HAVE_MEMBLOCK_NODE_MAP
 -	select HAVE_MIXED_BREAKPOINTS_REGS
 -	select HAVE_NMI
 -	select HAVE_OPROFILE
 +	select ARCH_DISCARD_MEMBLOCK
 +	select ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT
 +	select ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH if SMP
 +	select ARCH_WANT_OPTIONAL_GPIOLIB
 +	select ARCH_WANT_FRAME_POINTERS
 +	select HAVE_DMA_CONTIGUOUS if !SWIOTLB
 +	select HAVE_KRETPROBES
  	select HAVE_OPTPROBES
 -	select HAVE_PCSPKR_PLATFORM
 -	select HAVE_PERF_EVENTS
 +	select HAVE_KPROBES_ON_FTRACE
 +	select HAVE_FTRACE_MCOUNT_RECORD
 +	select HAVE_FENTRY if X86_64
 +	select HAVE_ARCH_MMAP_RND_BITS		if MMU
 +	select HAVE_ARCH_MMAP_RND_COMPAT_BITS	if MMU && COMPAT
 +	select HAVE_C_RECORDMCOUNT
 +	select HAVE_DYNAMIC_FTRACE
 +	select HAVE_DYNAMIC_FTRACE_WITH_REGS
 +	select HAVE_FUNCTION_TRACER
 +	select HAVE_FUNCTION_GRAPH_TRACER
 +	select HAVE_SYSCALL_TRACEPOINTS
 +	select SYSCTL_EXCEPTION_TRACE
 +	select HAVE_KVM
 +	select HAVE_ARCH_KGDB
 +	select HAVE_ARCH_TRACEHOOK
 +	select HAVE_GENERIC_DMA_COHERENT if X86_32
 +	select HAVE_EFFICIENT_UNALIGNED_ACCESS
 +	select USER_STACKTRACE_SUPPORT
 +	select HAVE_REGS_AND_STACK_ACCESS_API
 +	select HAVE_DMA_API_DEBUG
 +	select HAVE_KERNEL_GZIP
 +	select HAVE_KERNEL_BZIP2
 +	select HAVE_KERNEL_LZMA
 +	select HAVE_KERNEL_XZ
 +	select HAVE_KERNEL_LZO
 +	select HAVE_HW_BREAKPOINT
 +	select HAVE_MIXED_BREAKPOINTS_REGS
 +	select PERF_EVENTS
  	select HAVE_PERF_EVENTS_NMI
  	select HAVE_PERF_REGS
  	select HAVE_PERF_USER_STACK_DUMP
diff --cc security/Kconfig
index 78bddd1d7f28,213df4d4f2c1..000000000000
--- a/security/Kconfig
+++ b/security/Kconfig
@@@ -144,6 -118,72 +144,75 @@@ config LSM_MMAP_MIN_ADD
  	  this low address space will need the permission specific to the
  	  systems running LSM.
  
++<<<<<<< HEAD
++=======
+ config HAVE_HARDENED_USERCOPY_ALLOCATOR
+ 	bool
+ 	help
+ 	  The heap allocator implements __check_heap_object() for
+ 	  validating memory ranges against heap object sizes in
+ 	  support of CONFIG_HARDENED_USERCOPY.
+ 
+ config HARDENED_USERCOPY
+ 	bool "Harden memory copies between kernel and userspace"
+ 	depends on HAVE_HARDENED_USERCOPY_ALLOCATOR
+ 	select BUG
+ 	help
+ 	  This option checks for obviously wrong memory regions when
+ 	  copying memory to/from the kernel (via copy_to_user() and
+ 	  copy_from_user() functions) by rejecting memory ranges that
+ 	  are larger than the specified heap object, span multiple
+ 	  separately allocates pages, are not on the process stack,
+ 	  or are part of the kernel text. This kills entire classes
+ 	  of heap overflow exploits and similar kernel memory exposures.
+ 
+ config HARDENED_USERCOPY_PAGESPAN
+ 	bool "Refuse to copy allocations that span multiple pages"
+ 	depends on HARDENED_USERCOPY
+ 	depends on EXPERT
+ 	help
+ 	  When a multi-page allocation is done without __GFP_COMP,
+ 	  hardened usercopy will reject attempts to copy it. There are,
+ 	  however, several cases of this in the kernel that have not all
+ 	  been removed. This config is intended to be used only while
+ 	  trying to find such users.
+ 
+ config STATIC_USERMODEHELPER
+ 	bool "Force all usermode helper calls through a single binary"
+ 	help
+ 	  By default, the kernel can call many different userspace
+ 	  binary programs through the "usermode helper" kernel
+ 	  interface.  Some of these binaries are statically defined
+ 	  either in the kernel code itself, or as a kernel configuration
+ 	  option.  However, some of these are dynamically created at
+ 	  runtime, or can be modified after the kernel has started up.
+ 	  To provide an additional layer of security, route all of these
+ 	  calls through a single executable that can not have its name
+ 	  changed.
+ 
+ 	  Note, it is up to this single binary to then call the relevant
+ 	  "real" usermode helper binary, based on the first argument
+ 	  passed to it.  If desired, this program can filter and pick
+ 	  and choose what real programs are called.
+ 
+ 	  If you wish for all usermode helper programs are to be
+ 	  disabled, choose this option and then set
+ 	  STATIC_USERMODEHELPER_PATH to an empty string.
+ 
+ config STATIC_USERMODEHELPER_PATH
+ 	string "Path to the static usermode helper binary"
+ 	depends on STATIC_USERMODEHELPER
+ 	default "/sbin/usermode-helper"
+ 	help
+ 	  The binary called by the kernel when any usermode helper
+ 	  program is wish to be run.  The "real" application's name will
+ 	  be in the first argument passed to this program on the command
+ 	  line.
+ 
+ 	  If you wish for all usermode helper programs to be disabled,
+ 	  specify an empty string here (i.e. "").
+ 
++>>>>>>> 2fefc97b2180 (HAVE_ARCH_HARDENED_USERCOPY is unconditional now)
  source security/selinux/Kconfig
  source security/smack/Kconfig
  source security/tomoyo/Kconfig
* Unmerged path arch/arm/Kconfig
* Unmerged path arch/arm64/Kconfig
* Unmerged path arch/ia64/Kconfig
* Unmerged path arch/mips/Kconfig
* Unmerged path arch/powerpc/Kconfig
* Unmerged path arch/s390/Kconfig
* Unmerged path arch/sparc/Kconfig
* Unmerged path arch/x86/Kconfig
* Unmerged path security/Kconfig
