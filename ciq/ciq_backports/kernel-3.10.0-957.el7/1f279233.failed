mlxsw: spectrum_router: Return extack message on abort due to fib rules

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author David Ahern <dsahern@gmail.com>
commit 1f279233affe115dd3f65c89716a4f4315bb4cfe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/1f279233.failed

Adding a FIB rule on a spectrum platform silently aborts FIB offload:
    $ ip ru add pref 99 from all to 192.168.1.1 table 10
    $ dmesg -c
    [  623.144736] mlxsw_spectrum 0000:03:00.0: FIB abort triggered. Note that FIB entries are no longer being offloaded to this device.

This patch reworks FIB rule handling to return a message to the user:
    $ ip ru add pref 99 from all to 8.8.8.8 table 11
    Error: spectrum: FIB rules not supported. Aborting offload.

spectrum currently only checks whether the fib rule is a default rule or
an l3mdev rule, both of which it knows how to handle. Any other it aborts
FIB offload. Move the processing to check the rule type inline with the
user request. If the rule is an unsupported one, then a work queue entry
is used to abort the offload. Change the rule delete handling to just
return since it does nothing at the moment.

	Signed-off-by: David Ahern <dsahern@gmail.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1f279233affe115dd3f65c89716a4f4315bb4cfe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index 0c899d3579f2,9fe4cdb23189..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -5252,12 -5255,11 +5251,20 @@@ static void mlxsw_sp_router_fib4_event_
  		mlxsw_sp_router_fib4_del(mlxsw_sp, &fib_work->fen_info);
  		fib_info_put(fib_work->fen_info.fi);
  		break;
++<<<<<<< HEAD
 +	case FIB_EVENT_RULE_ADD: /* fall through */
 +	case FIB_EVENT_RULE_DEL:
 +		rule = fib_work->fr_info.rule;
 +		if (!fib4_rule_default(rule) /* && !rule->l3mdev */) /* VRF not in RHEL */
 +			mlxsw_sp_router_fib_abort(mlxsw_sp);
 +		fib_rule_put(rule);
++=======
+ 	case FIB_EVENT_RULE_ADD:
+ 		/* if we get here, a rule was added that we do not support.
+ 		 * just do the fib_abort
+ 		 */
+ 		mlxsw_sp_router_fib_abort(mlxsw_sp);
++>>>>>>> 1f279233affe (mlxsw: spectrum_router: Return extack message on abort due to fib rules)
  		break;
  	case FIB_EVENT_NH_ADD: /* fall through */
  	case FIB_EVENT_NH_DEL:
@@@ -5294,12 -5295,11 +5300,20 @@@ static void mlxsw_sp_router_fib6_event_
  		mlxsw_sp_router_fib6_del(mlxsw_sp, fib_work->fen6_info.rt);
  		mlxsw_sp_rt6_release(fib_work->fen6_info.rt);
  		break;
++<<<<<<< HEAD
 +	case FIB_EVENT_RULE_ADD: /* fall through */
 +	case FIB_EVENT_RULE_DEL:
 +		rule = fib_work->fr_info.rule;
 +		if (!fib6_rule_default(rule) /* && !rule->l3mdev */)
 +			mlxsw_sp_router_fib_abort(mlxsw_sp);
 +		fib_rule_put(rule);
++=======
+ 	case FIB_EVENT_RULE_ADD:
+ 		/* if we get here, a rule was added that we do not support.
+ 		 * just do the fib_abort
+ 		 */
+ 		mlxsw_sp_router_fib_abort(mlxsw_sp);
++>>>>>>> 1f279233affe (mlxsw: spectrum_router: Return extack message on abort due to fib rules)
  		break;
  	}
  	rtnl_unlock();
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
