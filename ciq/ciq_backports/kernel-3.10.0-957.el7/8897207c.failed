mlxsw: spectrum_ipip: Support decoding IPv6 tunnel addresses

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Petr Machata <petrm@mellanox.com>
commit 8897207c89156a5d05dc5bf1a80dede21e768f0a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/8897207c.failed

To support mirroring to ip6gretap, the SPAN module needs to be able to
decode IPv6 addresses specified at that tunnel.

Extend mlxsw_sp_ipip_netdev_saddr() and mlxsw_sp_ipip_netdev_daddr() to
support IPv6 addresses. To that end, add and publish a support function
mlxsw_sp_ipip_netdev_parms6().

	Signed-off-by: Petr Machata <petrm@mellanox.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8897207c89156a5d05dc5bf1a80dede21e768f0a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.c
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.h
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.c
index 78c45f3b185c,98d896c14b87..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.c
@@@ -32,8 -32,8 +32,9 @@@
   * POSSIBILITY OF SUCH DAMAGE.
   */
  
 +#include <linux/if.h>
  #include <net/ip_tunnels.h>
+ #include <net/ip6_tunnel.h>
  
  #include "spectrum_ipip.h"
  
@@@ -45,7 -45,15 +46,19 @@@ mlxsw_sp_ipip_netdev_parms(const struc
  	return tun->parms;
  }
  
++<<<<<<< HEAD
 +static bool mlxsw_sp_ipip_parms_has_ikey(struct ip_tunnel_parm parms)
++=======
+ struct __ip6_tnl_parm
+ mlxsw_sp_ipip_netdev_parms6(const struct net_device *ol_dev)
+ {
+ 	struct ip6_tnl *tun = netdev_priv(ol_dev);
+ 
+ 	return tun->parms;
+ }
+ 
+ static bool mlxsw_sp_ipip_parms4_has_ikey(struct ip_tunnel_parm parms)
++>>>>>>> 8897207c8915 (mlxsw: spectrum_ipip: Support decoding IPv6 tunnel addresses)
  {
  	return !!(parms.i_flags & TUNNEL_KEY);
  }
@@@ -73,74 -82,41 +86,107 @@@ static __be32 mlxsw_sp_ipip_parms_saddr
  }
  
  static union mlxsw_sp_l3addr
++<<<<<<< HEAD
 +mlxsw_sp_ipip_parms_saddr(enum mlxsw_sp_l3proto proto,
 +			  struct ip_tunnel_parm parms)
++=======
+ mlxsw_sp_ipip_parms6_saddr(struct __ip6_tnl_parm parms)
+ {
+ 	return (union mlxsw_sp_l3addr) { .addr6 = parms.laddr };
+ }
+ 
+ static union mlxsw_sp_l3addr
+ mlxsw_sp_ipip_parms4_daddr(struct ip_tunnel_parm parms)
++>>>>>>> 8897207c8915 (mlxsw: spectrum_ipip: Support decoding IPv6 tunnel addresses)
 +{
 +	switch (proto) {
 +	case MLXSW_SP_L3_PROTO_IPV4:
 +		return (union mlxsw_sp_l3addr) {
 +			.addr4 = mlxsw_sp_ipip_parms_saddr4(parms),
 +		};
 +	case MLXSW_SP_L3_PROTO_IPV6:
 +		break;
 +	}
 +
 +	WARN_ON(1);
 +	return (union mlxsw_sp_l3addr) {
 +		.addr4 = 0,
 +	};
 +}
 +
 +static __be32 mlxsw_sp_ipip_parms_daddr4(struct ip_tunnel_parm parms)
  {
 -	return (union mlxsw_sp_l3addr) { .addr4 = parms.iph.daddr };
 +	return parms.iph.daddr;
 +}
 +
 +static union mlxsw_sp_l3addr
 +mlxsw_sp_ipip_parms_daddr(enum mlxsw_sp_l3proto proto,
 +			  struct ip_tunnel_parm parms)
 +{
 +	switch (proto) {
 +	case MLXSW_SP_L3_PROTO_IPV4:
 +		return (union mlxsw_sp_l3addr) {
 +			.addr4 = mlxsw_sp_ipip_parms_daddr4(parms),
 +		};
 +	case MLXSW_SP_L3_PROTO_IPV6:
 +		break;
 +	}
 +
 +	WARN_ON(1);
 +	return (union mlxsw_sp_l3addr) {
 +		.addr4 = 0,
 +	};
 +}
 +
 +static bool mlxsw_sp_ipip_netdev_has_ikey(const struct net_device *ol_dev)
 +{
 +	return mlxsw_sp_ipip_parms_has_ikey(mlxsw_sp_ipip_netdev_parms(ol_dev));
 +}
 +
 +static bool mlxsw_sp_ipip_netdev_has_okey(const struct net_device *ol_dev)
 +{
 +	return mlxsw_sp_ipip_parms_has_okey(mlxsw_sp_ipip_netdev_parms(ol_dev));
 +}
 +
 +static u32 mlxsw_sp_ipip_netdev_ikey(const struct net_device *ol_dev)
 +{
 +	return mlxsw_sp_ipip_parms_ikey(mlxsw_sp_ipip_netdev_parms(ol_dev));
 +}
 +
 +static u32 mlxsw_sp_ipip_netdev_okey(const struct net_device *ol_dev)
 +{
 +	return mlxsw_sp_ipip_parms_okey(mlxsw_sp_ipip_netdev_parms(ol_dev));
  }
  
+ static union mlxsw_sp_l3addr
+ mlxsw_sp_ipip_parms6_daddr(struct __ip6_tnl_parm parms)
+ {
+ 	return (union mlxsw_sp_l3addr) { .addr6 = parms.raddr };
+ }
+ 
  union mlxsw_sp_l3addr
  mlxsw_sp_ipip_netdev_saddr(enum mlxsw_sp_l3proto proto,
  			   const struct net_device *ol_dev)
  {
++<<<<<<< HEAD
 +	return mlxsw_sp_ipip_parms_saddr(proto,
 +					 mlxsw_sp_ipip_netdev_parms(ol_dev));
++=======
+ 	struct ip_tunnel_parm parms4;
+ 	struct __ip6_tnl_parm parms6;
+ 
+ 	switch (proto) {
+ 	case MLXSW_SP_L3_PROTO_IPV4:
+ 		parms4 = mlxsw_sp_ipip_netdev_parms4(ol_dev);
+ 		return mlxsw_sp_ipip_parms4_saddr(parms4);
+ 	case MLXSW_SP_L3_PROTO_IPV6:
+ 		parms6 = mlxsw_sp_ipip_netdev_parms6(ol_dev);
+ 		return mlxsw_sp_ipip_parms6_saddr(parms6);
+ 	}
+ 
+ 	WARN_ON(1);
+ 	return (union mlxsw_sp_l3addr) {0};
++>>>>>>> 8897207c8915 (mlxsw: spectrum_ipip: Support decoding IPv6 tunnel addresses)
  }
  
  static __be32 mlxsw_sp_ipip_netdev_daddr4(const struct net_device *ol_dev)
@@@ -152,8 -131,20 +198,25 @@@ static union mlxsw_sp_l3add
  mlxsw_sp_ipip_netdev_daddr(enum mlxsw_sp_l3proto proto,
  			   const struct net_device *ol_dev)
  {
++<<<<<<< HEAD
 +	return mlxsw_sp_ipip_parms_daddr(proto,
 +					 mlxsw_sp_ipip_netdev_parms(ol_dev));
++=======
+ 	struct ip_tunnel_parm parms4;
+ 	struct __ip6_tnl_parm parms6;
+ 
+ 	switch (proto) {
+ 	case MLXSW_SP_L3_PROTO_IPV4:
+ 		parms4 = mlxsw_sp_ipip_netdev_parms4(ol_dev);
+ 		return mlxsw_sp_ipip_parms4_daddr(parms4);
+ 	case MLXSW_SP_L3_PROTO_IPV6:
+ 		parms6 = mlxsw_sp_ipip_netdev_parms6(ol_dev);
+ 		return mlxsw_sp_ipip_parms6_daddr(parms6);
+ 	}
+ 
+ 	WARN_ON(1);
+ 	return (union mlxsw_sp_l3addr) {0};
++>>>>>>> 8897207c8915 (mlxsw: spectrum_ipip: Support decoding IPv6 tunnel addresses)
  }
  
  bool mlxsw_sp_l3addr_is_zero(union mlxsw_sp_l3addr addr)
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.h
index 46af51255ac8,6909d867bb59..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.h
@@@ -40,7 -40,9 +40,13 @@@
  #include <linux/if_tunnel.h>
  
  struct ip_tunnel_parm
++<<<<<<< HEAD
 +mlxsw_sp_ipip_netdev_parms(const struct net_device *ol_dev);
++=======
+ mlxsw_sp_ipip_netdev_parms4(const struct net_device *ol_dev);
+ struct __ip6_tnl_parm
+ mlxsw_sp_ipip_netdev_parms6(const struct net_device *ol_dev);
++>>>>>>> 8897207c8915 (mlxsw: spectrum_ipip: Support decoding IPv6 tunnel addresses)
  
  union mlxsw_sp_l3addr
  mlxsw_sp_ipip_netdev_saddr(enum mlxsw_sp_l3proto proto,
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.c
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_ipip.h
