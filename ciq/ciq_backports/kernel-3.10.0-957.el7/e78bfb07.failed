skbuff: Unconditionally copy pfmemalloc in __skb_clone()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Stefano Brivio <sbrivio@redhat.com>
commit e78bfb0751d4e312699106ba7efbed2bab1a53ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e78bfb07.failed

Commit 8b7008620b84 ("net: Don't copy pfmemalloc flag in
__copy_skb_header()") introduced a different handling for the
pfmemalloc flag in copy and clone paths.

In __skb_clone(), now, the flag is set only if it was set in the
original skb, but not cleared if it wasn't. This is wrong and
might lead to socket buffers being flagged with pfmemalloc even
if the skb data wasn't allocated from pfmemalloc reserves. Copy
the flag instead of ORing it.

	Reported-by: Sabrina Dubroca <sd@queasysnail.net>
Fixes: 8b7008620b84 ("net: Don't copy pfmemalloc flag in __copy_skb_header()")
	Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
	Tested-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e78bfb0751d4e312699106ba7efbed2bab1a53ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/skbuff.c
diff --cc net/core/skbuff.c
index 9488c5317ec3,8e51f8555e11..000000000000
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@@ -936,6 -857,8 +936,11 @@@ static struct sk_buff *__skb_clone(stru
  	n->hdr_len = skb->nohdr ? skb_headroom(skb) : skb->hdr_len;
  	n->cloned = 1;
  	n->nohdr = 0;
++<<<<<<< HEAD
++=======
+ 	n->peeked = 0;
+ 	C(pfmemalloc);
++>>>>>>> e78bfb0751d4 (skbuff: Unconditionally copy pfmemalloc in __skb_clone())
  	n->destructor = NULL;
  	C(tail);
  	C(end);
* Unmerged path net/core/skbuff.c
