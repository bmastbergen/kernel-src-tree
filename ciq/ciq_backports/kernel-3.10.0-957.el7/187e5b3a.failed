ipv4: fix NULL dereference in free_fib_info_rcu()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Eric Dumazet <edumazet@google.com>
commit 187e5b3ac84d3421d2de3aca949b2791fbcad554
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/187e5b3a.failed

If fi->fib_metrics could not be allocated in fib_create_info()
we attempt to dereference a NULL pointer in free_fib_info_rcu() :

    m = fi->fib_metrics;
    if (m != &dst_default_metrics && atomic_dec_and_test(&m->refcnt))
            kfree(m);

Before my recent patch, we used to call kfree(NULL) and nothing wrong
happened.

Instead of using RCU to defer freeing while we are under memory stress,
it seems better to take immediate action.

This was reported by syzkaller team.

Fixes: 3fb07daff8e9 ("ipv4: add reference counting to metrics")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Reported-by: Dmitry Vyukov <dvyukov@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 187e5b3ac84d3421d2de3aca949b2791fbcad554)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_semantics.c
diff --cc net/ipv4/fib_semantics.c
index 2c51bc3332a7,ec3a9ce281a6..000000000000
--- a/net/ipv4/fib_semantics.c
+++ b/net/ipv4/fib_semantics.c
@@@ -1015,16 -1081,19 +1015,29 @@@ struct fib_info *fib_create_info(struc
  	}
  
  	fi = kzalloc(sizeof(*fi)+nhs*sizeof(struct fib_nh), GFP_KERNEL);
 -	if (!fi)
 +	if (fi == NULL)
  		goto failure;
  	if (cfg->fc_mx) {
++<<<<<<< HEAD
 +		fi->fib_metrics = kzalloc(sizeof(u32) * RTAX_MAX, GFP_KERNEL);
 +		if (!fi->fib_metrics)
 +			goto failure;
 +	} else
 +		fi->fib_metrics = (u32 *) dst_default_metrics;
 +	fib_info_cnt++;
 +
++=======
+ 		fi->fib_metrics = kzalloc(sizeof(*fi->fib_metrics), GFP_KERNEL);
+ 		if (unlikely(!fi->fib_metrics)) {
+ 			kfree(fi);
+ 			return ERR_PTR(err);
+ 		}
+ 		atomic_set(&fi->fib_metrics->refcnt, 1);
+ 	} else {
+ 		fi->fib_metrics = (struct dst_metrics *)&dst_default_metrics;
+ 	}
+ 	fib_info_cnt++;
++>>>>>>> 187e5b3ac84d (ipv4: fix NULL dereference in free_fib_info_rcu())
  	fi->fib_net = net;
  	fi->fib_protocol = cfg->fc_protocol;
  	fi->fib_scope = cfg->fc_scope;
* Unmerged path net/ipv4/fib_semantics.c
