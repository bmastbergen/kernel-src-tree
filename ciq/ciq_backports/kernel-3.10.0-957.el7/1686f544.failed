platform/x86: wmi: Incorporate acpi_install_notify_handler

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [platform] x86: wmi: Incorporate acpi_install_notify_handler (Jarod Wilson) [1562200]
Rebuild_FUZZ: 91.59%
commit-author Andy Lutomirski <luto@kernel.org>
commit 1686f5444546c3b53547aa8736afcf05833ed31a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/1686f544.failed

As a platform driver, acpi_driver.notify will not be available,
so use acpi_install_notify_handler as we will be converting to a
platform driver.

This gives event drivers a simple way to handle events. It
also seems closer to what the Windows docs suggest that Windows
does: it sounds like, in Windows, the mapper is responsible for
called _WED before dispatching to the subdriver.

	Signed-off-by: Andy Lutomirski <luto@kernel.org>
[dvhart: merge two development commits and update commit message]
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Mario Limonciello <mario_limonciello@dell.com>
	Cc: Pali Roh√°r <pali.rohar@gmail.com>
	Cc: linux-kernel@vger.kernel.org
	Cc: platform-driver-x86@vger.kernel.org
	Cc: linux-acpi@vger.kernel.org
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
(cherry picked from commit 1686f5444546c3b53547aa8736afcf05833ed31a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/wmi.c
#	include/linux/wmi.h
diff --cc drivers/platform/x86/wmi.c
index 84dcc7a04b0a,4395d83ba9cc..000000000000
--- a/drivers/platform/x86/wmi.c
+++ b/drivers/platform/x86/wmi.c
@@@ -901,18 -1115,62 +943,56 @@@ static int acpi_wmi_add(struct acpi_dev
  		return -ENODEV;
  	}
  
++<<<<<<< HEAD
 +	error = parse_wdg(device);
++=======
+ 	status = acpi_install_notify_handler(device->handle, ACPI_DEVICE_NOTIFY,
+ 					     acpi_wmi_notify_handler,
+ 					     NULL);
+ 	if (ACPI_FAILURE(status)) {
+ 		dev_err(&device->dev, "Error installing notify handler\n");
+ 		error = -ENODEV;
+ 		goto err_remove_ec_handler;
+ 	}
+ 
+ 	wmi_bus_dev = device_create(&wmi_bus_class, &device->dev, MKDEV(0, 0),
+ 				    NULL, "wmi_bus-%s", dev_name(&device->dev));
+ 	if (IS_ERR(wmi_bus_dev)) {
+ 		error = PTR_ERR(wmi_bus_dev);
+ 		goto err_remove_notify_handler;
+ 	}
+ 	device->driver_data = wmi_bus_dev;
+ 
+ 	error = parse_wdg(wmi_bus_dev, device);
++>>>>>>> 1686f5444546 (platform/x86: wmi: Incorporate acpi_install_notify_handler)
  	if (error) {
 +		acpi_remove_address_space_handler(device->handle,
 +						  ACPI_ADR_SPACE_EC,
 +						  &acpi_wmi_ec_space_handler);
  		pr_err("Failed to parse WDG method\n");
 -		goto err_remove_busdev;
 +		return error;
  	}
  
  	return 0;
++<<<<<<< HEAD
++=======
+ 
+ err_remove_busdev:
+ 	device_unregister(wmi_bus_dev);
+ 
+ err_remove_notify_handler:
+ 	acpi_remove_notify_handler(device->handle, ACPI_DEVICE_NOTIFY,
+ 				   acpi_wmi_notify_handler);
+ 
+ err_remove_ec_handler:
+ 	acpi_remove_address_space_handler(device->handle,
+ 					  ACPI_ADR_SPACE_EC,
+ 					  &acpi_wmi_ec_space_handler);
+ 
+ 	return error;
++>>>>>>> 1686f5444546 (platform/x86: wmi: Incorporate acpi_install_notify_handler)
  }
  
 -int __must_check __wmi_driver_register(struct wmi_driver *driver,
 -				       struct module *owner)
 -{
 -	driver->driver.owner = owner;
 -	driver->driver.bus = &wmi_bus_type;
 -
 -	return driver_register(&driver->driver);
 -}
 -EXPORT_SYMBOL(__wmi_driver_register);
 -
 -void wmi_driver_unregister(struct wmi_driver *driver)
 -{
 -	driver_unregister(&driver->driver);
 -}
 -EXPORT_SYMBOL(wmi_driver_unregister);
 -
  static int __init acpi_wmi_init(void)
  {
  	int error;
* Unmerged path include/linux/wmi.h
* Unmerged path drivers/platform/x86/wmi.c
* Unmerged path include/linux/wmi.h
