platform/x86: dell-wmi: increase severity of some failures

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [platform] x86: dell-wmi: increase severity of some failures (Jarod Wilson) [1526317]
Rebuild_FUZZ: 91.59%
commit-author Mario Limonciello <mario.limonciello@dell.com>
commit d0bf42d83e9492ffc80108b0913f596dbbd220c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d0bf42d8.failed

There is a lot of error checking in place for the format of the WMI
descriptor buffer, but some of the potentially raised issues should
be considered critical failures.

If the buffer size or header don't match, this is a good indication
that the buffer format changed in a way that the rest of the data
should not be relied upon.

For the remaining data set vectors, continue to notate a warning
in undefined results, but as those are fields that the descriptor
intended to refer to other applications, don't fail if they're new
values.

	Signed-off-by: Mario Limonciello <mario.limonciello@dell.com>
	Reviewed-by: Edward O'Callaghan <quasisec@google.com>
	Reviewed-by: Pali Roh√°r <pali.rohar@gmail.com>
	Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
(cherry picked from commit d0bf42d83e9492ffc80108b0913f596dbbd220c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/dell-wmi.c
diff --cc drivers/platform/x86/dell-wmi.c
index fa90558cb1ae,2cfaaa8faf0a..000000000000
--- a/drivers/platform/x86/dell-wmi.c
+++ b/drivers/platform/x86/dell-wmi.c
@@@ -651,22 -654,24 +651,35 @@@ static int __init dell_wmi_check_descri
  	}
  
  	if (obj->buffer.length != 128) {
 -		dev_err(&wdev->dev,
 -			"Dell descriptor buffer has invalid length (%d)\n",
 +		pr_err("Dell descriptor buffer has invalid length (%d)\n",
  			obj->buffer.length);
++<<<<<<< HEAD
 +		if (obj->buffer.length < 16) {
 +			kfree(obj);
 +			return -EINVAL;
 +		}
++=======
+ 		ret = -EINVAL;
+ 		goto out;
++>>>>>>> d0bf42d83e94 (platform/x86: dell-wmi: increase severity of some failures)
  	}
  
  	buffer = (u32 *)obj->buffer.pointer;
  
++<<<<<<< HEAD
 +	if (buffer[0] != 0x4C4C4544 && buffer[1] != 0x494D5720)
 +		pr_warn("Dell descriptor buffer has invalid signature (%*ph)\n",
++=======
+ 	if (buffer[0] != 0x4C4C4544 && buffer[1] != 0x494D5720) {
+ 		dev_err(&wdev->dev, "Dell descriptor buffer has invalid signature (%*ph)\n",
++>>>>>>> d0bf42d83e94 (platform/x86: dell-wmi: increase severity of some failures)
  			8, buffer);
+ 		ret = -EINVAL;
+ 		goto out;
+ 	}
  
  	if (buffer[2] != 0 && buffer[2] != 1)
 -		dev_warn(&wdev->dev, "Dell descriptor buffer has unknown version (%d)\n",
 +		pr_warn("Dell descriptor buffer has unknown version (%d)\n",
  			buffer[2]);
  
  	if (buffer[3] != 4096)
* Unmerged path drivers/platform/x86/dell-wmi.c
