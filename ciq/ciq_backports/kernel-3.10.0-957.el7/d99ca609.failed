nvme: unexport starting async event work

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] unexport starting async event work (David Milburn) [1519689]
Rebuild_FUZZ: 91.89%
commit-author Keith Busch <keith.busch@intel.com>
commit d99ca609a1b55f87a5e62a11ed70e4d091d815f0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d99ca609.failed

Async event work is for core use only and should not be called directly
from drivers.

	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Guan Junxiong <guanjunxiong@huawei.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit d99ca609a1b55f87a5e62a11ed70e4d091d815f0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 9225e17bc34a,c135d0aeebd7..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -2482,13 -2755,7 +2482,16 @@@ void nvme_complete_async_event(struct n
  }
  EXPORT_SYMBOL_GPL(nvme_complete_async_event);
  
++<<<<<<< HEAD
 +void nvme_queue_async_events(struct nvme_ctrl *ctrl)
 +{
 +	ctrl->event_limit = NVME_NR_AERS;
 +	queue_work(nvme_wq, &ctrl->async_event_work);
 +}
 +EXPORT_SYMBOL_GPL(nvme_queue_async_events);
 +
++=======
++>>>>>>> d99ca609a1b5 (nvme: unexport starting async event work)
  void nvme_stop_ctrl(struct nvme_ctrl *ctrl)
  {
  	nvme_stop_keep_alive(ctrl);
* Unmerged path drivers/nvme/host/core.c
diff --git a/drivers/nvme/host/nvme.h b/drivers/nvme/host/nvme.h
index df4c3bd4f65c..5523fe12a224 100644
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@ -289,7 +289,6 @@ void nvme_remove_namespaces(struct nvme_ctrl *ctrl);
 #define NVME_NR_AERS	1
 void nvme_complete_async_event(struct nvme_ctrl *ctrl, __le16 status,
 		union nvme_result *res);
-void nvme_queue_async_events(struct nvme_ctrl *ctrl);
 
 void nvme_stop_queues(struct nvme_ctrl *ctrl);
 void nvme_start_queues(struct nvme_ctrl *ctrl);
