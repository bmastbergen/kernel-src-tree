x86/topology: Provide topology_smt_supported()

jira LE-1907
cve CVE-2018-3620
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] topology: provide topology_smt_supported() (Christoph von Recklinghausen) [1593384] {CVE-2018-3620}
Rebuild_FUZZ: 95.45%
commit-author Thomas Gleixner <tglx@linutronix.de>
commit f048c399e0f7490ab7296bc2c255d37eb14a9675
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/f048c399.failed

Provide information whether SMT is supoorted by the CPUs. Preparatory patch
for SMT control mechanism.

	Suggested-by: Dave Hansen <dave.hansen@intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit f048c399e0f7490ab7296bc2c255d37eb14a9675)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/topology.h
diff --cc arch/x86/include/asm/topology.h
index 3e8d0c74fce1,453cf38a1c33..000000000000
--- a/arch/x86/include/asm/topology.h
+++ b/arch/x86/include/asm/topology.h
@@@ -140,13 -123,17 +140,24 @@@ static inline int topology_max_smt_thre
  }
  
  int topology_update_package_map(unsigned int apicid, unsigned int cpu);
++<<<<<<< HEAD
 +extern int topology_phys_to_logical_pkg(unsigned int pkg);
++=======
+ int topology_phys_to_logical_pkg(unsigned int pkg);
+ bool topology_is_primary_thread(unsigned int cpu);
+ bool topology_smt_supported(void);
++>>>>>>> f048c399e0f7 (x86/topology: Provide topology_smt_supported())
  #else
  #define topology_max_packages()			(1)
  static inline int
  topology_update_package_map(unsigned int apicid, unsigned int cpu) { return 0; }
  static inline int topology_phys_to_logical_pkg(unsigned int pkg) { return 0; }
  static inline int topology_max_smt_threads(void) { return 1; }
++<<<<<<< HEAD
++=======
+ static inline bool topology_is_primary_thread(unsigned int cpu) { return true; }
+ static inline bool topology_smt_supported(void) { return false; }
++>>>>>>> f048c399e0f7 (x86/topology: Provide topology_smt_supported())
  #endif
  
  static inline void arch_fix_phys_package_id(int num, u32 slot)
* Unmerged path arch/x86/include/asm/topology.h
diff --git a/arch/x86/kernel/smpboot.c b/arch/x86/kernel/smpboot.c
index 331c8872578a..de68e9c023e5 100644
--- a/arch/x86/kernel/smpboot.c
+++ b/arch/x86/kernel/smpboot.c
@@ -258,6 +258,14 @@ static void notrace start_secondary(void *unused)
 	cpu_startup_entry(CPUHP_ONLINE);
 }
 
+/**
+ * topology_smt_supported - Check whether SMT is supported by the CPUs
+ */
+bool topology_smt_supported(void)
+{
+	return smp_num_siblings > 1;
+}
+
 /**
  * topology_phys_to_logical_pkg - Map a physical package id to a logical
  *
