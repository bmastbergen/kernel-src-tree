x86: Introduce barrier_nospec

jira LE-1907
cve CVE-2018-3693
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] Introduce barrier_nospec (Lauro Ramos Venancio) [1589035] {CVE-2018-3693}
Rebuild_FUZZ: 90.57%
commit-author Dan Williams <dan.j.williams@intel.com>
commit b3d7ad85b80bbc404635dca80f5b129f6242bc7a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b3d7ad85.failed

Rename the open coded form of this instruction sequence from
rdtsc_ordered() into a generic barrier primitive, barrier_nospec().

One of the mitigations for Spectre variant1 vulnerabilities is to fence
speculative execution after successfully validating a bounds check. I.e.
force the result of a bounds check to resolve in the instruction pipeline
to ensure speculative execution honors that result before potentially
operating on out-of-bounds data.

No functional changes.

	Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
	Suggested-by: Andi Kleen <ak@linux.intel.com>
	Suggested-by: Ingo Molnar <mingo@redhat.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-arch@vger.kernel.org
	Cc: Tom Lendacky <thomas.lendacky@amd.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: kernel-hardening@lists.openwall.com
	Cc: gregkh@linuxfoundation.org
	Cc: Al Viro <viro@zeniv.linux.org.uk>
	Cc: alan@linux.intel.com
Link: https://lkml.kernel.org/r/151727415361.33451.9049453007262764675.stgit@dwillia2-desk3.amr.corp.intel.com

(cherry picked from commit b3d7ad85b80bbc404635dca80f5b129f6242bc7a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/msr.h
diff --cc arch/x86/include/asm/msr.h
index 3aa46e906913,30df295f6d94..000000000000
--- a/arch/x86/include/asm/msr.h
+++ b/arch/x86/include/asm/msr.h
@@@ -154,8 -214,7 +154,12 @@@ static __always_inline unsigned long lo
  	 * that some other imaginary CPU is updating continuously with a
  	 * time stamp.
  	 */
++<<<<<<< HEAD
 +	alternative(ASM_NOP3, "lfence", X86_FEATURE_LFENCE_RDTSC);
 +
++=======
+ 	barrier_nospec();
++>>>>>>> b3d7ad85b80b (x86: Introduce barrier_nospec)
  	return rdtsc();
  }
  
diff --git a/arch/x86/include/asm/barrier.h b/arch/x86/include/asm/barrier.h
index 4bf86772da50..0f07f73d73c6 100644
--- a/arch/x86/include/asm/barrier.h
+++ b/arch/x86/include/asm/barrier.h
@@ -26,6 +26,10 @@
 
 #define gmb() alternative(ASM_NOP3, "lfence", X86_FEATURE_LFENCE_RDTSC)
 
+/* Prevent speculative execution past this barrier. */
+#define barrier_nospec() alternative_2("", "mfence", X86_FEATURE_MFENCE_RDTSC, \
+					   "lfence", X86_FEATURE_LFENCE_RDTSC)
+
 #ifdef CONFIG_X86_PPRO_FENCE
 #define dma_rmb()	rmb()
 #else
* Unmerged path arch/x86/include/asm/msr.h
