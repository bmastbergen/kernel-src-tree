scsi: qla2xxx: Fix driver unload by shutting down chip

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Fix driver unload by shutting down chip (Himanshu Madhani) [1599351]
Rebuild_FUZZ: 94.12%
commit-author Quinn Tran <quinn.tran@cavium.com>
commit 45235022da9925b2b070c0139629233173e50089
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/45235022.failed

Use chip shutdown at the start of unload to stop all DMA + traffic and
bring down the laser. This prevents any link activities from triggering the
driver to be re-engaged.

Fixes: 4b60c82736d0 ("scsi: qla2xxx: Add fw_started flags to qpair")
	Cc: <stable@vger.kernel.org> #4.16
	Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 45235022da9925b2b070c0139629233173e50089)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_mid.c
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_mid.c
index a7dee9b177bf,aa727d07b702..000000000000
--- a/drivers/scsi/qla2xxx/qla_mid.c
+++ b/drivers/scsi/qla2xxx/qla_mid.c
@@@ -152,11 -152,18 +152,18 @@@ in
  qla24xx_disable_vp(scsi_qla_host_t *vha)
  {
  	unsigned long flags;
++<<<<<<< HEAD
 +	int ret;
++=======
+ 	int ret = QLA_SUCCESS;
+ 	fc_port_t *fcport;
++>>>>>>> 45235022da99 (scsi: qla2xxx: Fix driver unload by shutting down chip)
+ 
+ 	if (vha->hw->flags.fw_started)
+ 		ret = qla24xx_control_vp(vha, VCE_COMMAND_DISABLE_VPS_LOGO_ALL);
  
- 	ret = qla24xx_control_vp(vha, VCE_COMMAND_DISABLE_VPS_LOGO_ALL);
  	atomic_set(&vha->loop_state, LOOP_DOWN);
  	atomic_set(&vha->loop_down_timer, LOOP_DOWN_TIME);
 -	list_for_each_entry(fcport, &vha->vp_fcports, list)
 -		fcport->logout_on_delete = 0;
 -
 -	qla2x00_mark_all_devices_lost(vha, 0);
  
  	/* Remove port id from vp target map */
  	spin_lock_irqsave(&vha->hw->hardware_lock, flags);
diff --cc drivers/scsi/qla2xxx/qla_os.c
index cb81c3f6d5ac,2cd2e5ccce15..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -283,12 -298,12 +283,13 @@@ static int qla2xxx_eh_target_reset(stru
  static int qla2xxx_eh_bus_reset(struct scsi_cmnd *);
  static int qla2xxx_eh_host_reset(struct scsi_cmnd *);
  
 +static int qla2x00_change_queue_depth(struct scsi_device *, int, int);
 +static int qla2x00_change_queue_type(struct scsi_device *, int);
  static void qla2x00_clear_drv_active(struct qla_hw_data *);
  static void qla2x00_free_device(scsi_qla_host_t *);
 -static int qla2xxx_map_queues(struct Scsi_Host *shost);
 -static void qla2x00_destroy_deferred_work(struct qla_hw_data *);
 +static void qla83xx_disable_laser(scsi_qla_host_t *vha);
  
+ 
  struct scsi_host_template qla2xxx_driver_template = {
  	.module			= THIS_MODULE,
  	.name			= QLA2XXX_DRIVER_NAME,
@@@ -3641,7 -3628,20 +3644,24 @@@ qla2x00_remove_one(struct pci_dev *pdev
  	}
  	qla2x00_wait_for_hba_ready(base_vha);
  
++<<<<<<< HEAD
 +	ha->flags.host_shutting_down = 1;
++=======
+ 	if (IS_QLA25XX(ha) || IS_QLA2031(ha) || IS_QLA27XX(ha)) {
+ 		if (ha->flags.fw_started)
+ 			qla2x00_abort_isp_cleanup(base_vha);
+ 	} else if (!IS_QLAFX00(ha)) {
+ 		if (IS_QLA8031(ha)) {
+ 			ql_dbg(ql_dbg_p3p, base_vha, 0xb07e,
+ 			    "Clearing fcoe driver presence.\n");
+ 			if (qla83xx_clear_drv_presence(base_vha) != QLA_SUCCESS)
+ 				ql_dbg(ql_dbg_p3p, base_vha, 0xb079,
+ 				    "Error while clearing DRV-Presence.\n");
+ 		}
+ 
+ 		qla2x00_try_to_stop_firmware(base_vha);
+ 	}
++>>>>>>> 45235022da99 (scsi: qla2xxx: Fix driver unload by shutting down chip)
  
  	qla2x00_wait_for_sess_deletion(base_vha);
  
@@@ -3733,16 -3725,6 +3745,19 @@@ qla2x00_free_device(scsi_qla_host_t *vh
  		qla2x00_stop_timer(vha);
  
  	qla25xx_delete_queues(vha);
++<<<<<<< HEAD
 +
 +	if (ha->flags.fce_enabled)
 +		qla2x00_disable_fce_trace(vha, NULL, NULL);
 +
 +	if (ha->eft)
 +		qla2x00_disable_eft_trace(vha);
 +
 +	/* Stop currently executing firmware. */
 +	qla2x00_try_to_stop_firmware(vha);
 +
++=======
++>>>>>>> 45235022da99 (scsi: qla2xxx: Fix driver unload by shutting down chip)
  	vha->flags.online = 0;
  
  	/* turn-off interrupts on the card */
diff --git a/drivers/scsi/qla2xxx/qla_isr.c b/drivers/scsi/qla2xxx/qla_isr.c
index b4eaa3d28e88..3c1ea05e0333 100644
--- a/drivers/scsi/qla2xxx/qla_isr.c
+++ b/drivers/scsi/qla2xxx/qla_isr.c
@@ -633,6 +633,9 @@ qla2x00_async_event(scsi_qla_host_t *vha, struct rsp_que *rsp, uint16_t *mb)
 	unsigned long	flags;
 	fc_port_t	*fcport = NULL;
 
+	if (!vha->hw->flags.fw_started)
+		return;
+
 	/* Setup to process RIO completion. */
 	handle_cnt = 0;
 	if (IS_CNA_CAPABLE(ha))
diff --git a/drivers/scsi/qla2xxx/qla_mbx.c b/drivers/scsi/qla2xxx/qla_mbx.c
index 06900e05a8b3..131eee321295 100644
--- a/drivers/scsi/qla2xxx/qla_mbx.c
+++ b/drivers/scsi/qla2xxx/qla_mbx.c
@@ -4123,6 +4123,9 @@ qla25xx_init_req_que(struct scsi_qla_host *vha, struct req_que *req)
 	mbx_cmd_t *mcp = &mc;
 	struct qla_hw_data *ha = vha->hw;
 
+	if (!ha->flags.fw_started)
+		return QLA_SUCCESS;
+
 	ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x10d3,
 	    "Entered %s.\n", __func__);
 
@@ -4192,6 +4195,9 @@ qla25xx_init_rsp_que(struct scsi_qla_host *vha, struct rsp_que *rsp)
 	mbx_cmd_t *mcp = &mc;
 	struct qla_hw_data *ha = vha->hw;
 
+	if (!ha->flags.fw_started)
+		return QLA_SUCCESS;
+
 	ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x10d6,
 	    "Entered %s.\n", __func__);
 
* Unmerged path drivers/scsi/qla2xxx/qla_mid.c
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
diff --git a/drivers/scsi/qla2xxx/qla_sup.c b/drivers/scsi/qla2xxx/qla_sup.c
index 65ae00024029..4a9c5832b1be 100644
--- a/drivers/scsi/qla2xxx/qla_sup.c
+++ b/drivers/scsi/qla2xxx/qla_sup.c
@@ -1880,6 +1880,9 @@ qla24xx_beacon_off(struct scsi_qla_host *vha)
 	if (IS_P3P_TYPE(ha))
 		return QLA_SUCCESS;
 
+	if (!ha->flags.fw_started)
+		return QLA_SUCCESS;
+
 	ha->beacon_blink_led = 0;
 
 	if (IS_QLA2031(ha) || IS_QLA27XX(ha))
