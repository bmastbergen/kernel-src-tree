net: sched: allow ingress and clsact qdiscs to share filter blocks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] sched: allow ingress and clsact qdiscs to share filter blocks (Ivan Vecera) [1584592]
Rebuild_FUZZ: 96.06%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 51ab2994c387c80b45caf8b8067b3f3b97771d25
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/51ab2994.failed

Benefit from the previously introduced shared filter blocks
infrastructure and allow ingress and clsact qdisc instances to share
filter blocks. The block index is coming from userspace as qdisc option.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Acked-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 51ab2994c387c80b45caf8b8067b3f3b97771d25)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_ingress.c
diff --cc net/sched/sch_ingress.c
index 790eb0f81e70,ce3f55259d0d..000000000000
--- a/net/sched/sch_ingress.c
+++ b/net/sched/sch_ingress.c
@@@ -53,7 -56,29 +53,33 @@@ static struct tcf_block *ingress_tcf_bl
  	return q->block;
  }
  
++<<<<<<< HEAD
 +static int ingress_init(struct Qdisc *sch, struct nlattr *opt)
++=======
+ static void clsact_chain_head_change(struct tcf_proto *tp_head, void *priv)
+ {
+ 	struct mini_Qdisc_pair *miniqp = priv;
+ 
+ 	mini_qdisc_pair_swap(miniqp, tp_head);
+ };
+ 
+ static void ingress_ingress_block_set(struct Qdisc *sch, u32 block_index)
+ {
+ 	struct ingress_sched_data *q = qdisc_priv(sch);
+ 
+ 	q->block_info.block_index = block_index;
+ }
+ 
+ static u32 ingress_ingress_block_get(struct Qdisc *sch)
+ {
+ 	struct ingress_sched_data *q = qdisc_priv(sch);
+ 
+ 	return q->block_info.block_index;
+ }
+ 
+ static int ingress_init(struct Qdisc *sch, struct nlattr *opt,
+ 			struct netlink_ext_ack *extack)
++>>>>>>> 51ab2994c387 (net: sched: allow ingress and clsact qdiscs to share filter blocks)
  {
  	struct ingress_sched_data *q = qdisc_priv(sch);
  	struct net_device *dev = qdisc_dev(sch);
@@@ -102,13 -127,16 +128,26 @@@ static const struct Qdisc_class_ops ing
  };
  
  static struct Qdisc_ops ingress_qdisc_ops __read_mostly = {
++<<<<<<< HEAD
 +	.cl_ops		=	&ingress_class_ops,
 +	.id		=	"ingress",
 +	.priv_size	=	sizeof(struct ingress_sched_data),
 +	.init		=	ingress_init,
 +	.destroy	=	ingress_destroy,
 +	.dump		=	ingress_dump,
 +	.owner		=	THIS_MODULE,
++=======
+ 	.cl_ops			=	&ingress_class_ops,
+ 	.id			=	"ingress",
+ 	.priv_size		=	sizeof(struct ingress_sched_data),
+ 	.static_flags		=	TCQ_F_CPUSTATS,
+ 	.init			=	ingress_init,
+ 	.destroy		=	ingress_destroy,
+ 	.dump			=	ingress_dump,
+ 	.ingress_block_set	=	ingress_ingress_block_set,
+ 	.ingress_block_get	=	ingress_ingress_block_get,
+ 	.owner			=	THIS_MODULE,
++>>>>>>> 51ab2994c387 (net: sched: allow ingress and clsact qdiscs to share filter blocks)
  };
  
  struct clsact_sched_data {
@@@ -147,7 -180,36 +186,40 @@@ static struct tcf_block *clsact_tcf_blo
  	}
  }
  
++<<<<<<< HEAD
 +static int clsact_init(struct Qdisc *sch, struct nlattr *opt)
++=======
+ static void clsact_ingress_block_set(struct Qdisc *sch, u32 block_index)
+ {
+ 	struct clsact_sched_data *q = qdisc_priv(sch);
+ 
+ 	q->ingress_block_info.block_index = block_index;
+ }
+ 
+ static void clsact_egress_block_set(struct Qdisc *sch, u32 block_index)
+ {
+ 	struct clsact_sched_data *q = qdisc_priv(sch);
+ 
+ 	q->egress_block_info.block_index = block_index;
+ }
+ 
+ static u32 clsact_ingress_block_get(struct Qdisc *sch)
+ {
+ 	struct clsact_sched_data *q = qdisc_priv(sch);
+ 
+ 	return q->ingress_block_info.block_index;
+ }
+ 
+ static u32 clsact_egress_block_get(struct Qdisc *sch)
+ {
+ 	struct clsact_sched_data *q = qdisc_priv(sch);
+ 
+ 	return q->egress_block_info.block_index;
+ }
+ 
+ static int clsact_init(struct Qdisc *sch, struct nlattr *opt,
+ 		       struct netlink_ext_ack *extack)
++>>>>>>> 51ab2994c387 (net: sched: allow ingress and clsact qdiscs to share filter blocks)
  {
  	struct clsact_sched_data *q = qdisc_priv(sch);
  	struct net_device *dev = qdisc_dev(sch);
@@@ -190,13 -259,18 +262,28 @@@ static const struct Qdisc_class_ops cls
  };
  
  static struct Qdisc_ops clsact_qdisc_ops __read_mostly = {
++<<<<<<< HEAD
 +	.cl_ops		=	&clsact_class_ops,
 +	.id		=	"clsact",
 +	.priv_size	=	sizeof(struct clsact_sched_data),
 +	.init		=	clsact_init,
 +	.destroy	=	clsact_destroy,
 +	.dump		=	ingress_dump,
 +	.owner		=	THIS_MODULE,
++=======
+ 	.cl_ops			=	&clsact_class_ops,
+ 	.id			=	"clsact",
+ 	.priv_size		=	sizeof(struct clsact_sched_data),
+ 	.static_flags		=	TCQ_F_CPUSTATS,
+ 	.init			=	clsact_init,
+ 	.destroy		=	clsact_destroy,
+ 	.dump			=	ingress_dump,
+ 	.ingress_block_set	=	clsact_ingress_block_set,
+ 	.egress_block_set	=	clsact_egress_block_set,
+ 	.ingress_block_get	=	clsact_ingress_block_get,
+ 	.egress_block_get	=	clsact_egress_block_get,
+ 	.owner			=	THIS_MODULE,
++>>>>>>> 51ab2994c387 (net: sched: allow ingress and clsact qdiscs to share filter blocks)
  };
  
  static int __init ingress_module_init(void)
* Unmerged path net/sched/sch_ingress.c
