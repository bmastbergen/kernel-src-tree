s390: correct nospec auto detection init order

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [s390] correct nospec auto detection init order (Hendrik Brueckner) [1558325]
Rebuild_FUZZ: 93.02%
commit-author Martin Schwidefsky <schwidefsky@de.ibm.com>
commit 6a3d1e81a434fc311f224b8be77258bafc18ccc6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6a3d1e81.failed

With CONFIG_EXPOLINE_AUTO=y the call of spectre_v2_auto_early() via
early_initcall is done *after* the early_param functions. This
overwrites any settings done with the nobp/no_spectre_v2/spectre_v2
parameters. The code patching for the kernel is done after the
evaluation of the early parameters but before the early_initcall
is done. The end result is a kernel image that is patched correctly
but the kernel modules are not.

Make sure that the nospec auto detection function is called before the
early parameters are evaluated and before the code patching is done.

Fixes: 6e179d64126b ("s390: add automatic detection of the spectre defense")
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 6a3d1e81a434fc311f224b8be77258bafc18ccc6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/include/asm/nospec-branch.h
#	arch/s390/kernel/nospec-branch.c
* Unmerged path arch/s390/include/asm/nospec-branch.h
* Unmerged path arch/s390/kernel/nospec-branch.c
* Unmerged path arch/s390/include/asm/nospec-branch.h
* Unmerged path arch/s390/kernel/nospec-branch.c
diff --git a/arch/s390/kernel/setup.c b/arch/s390/kernel/setup.c
index d6e8e87b465f..b6ba929336cb 100644
--- a/arch/s390/kernel/setup.c
+++ b/arch/s390/kernel/setup.c
@@ -1042,6 +1042,9 @@ void __init setup_arch(char **cmdline_p)
 	init_mm.end_data = (unsigned long) &_edata;
 	init_mm.brk = (unsigned long) &_end;
 
+	if (IS_ENABLED(CONFIG_EXPOLINE_AUTO))
+		nospec_auto_detect();
+
 	parse_early_param();
 	detect_memory_layout(memory_chunk, memory_end);
 	os_info_init();
