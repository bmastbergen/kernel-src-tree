x86/CPU/AMD: Do not check CPUID max ext level before parsing SMP info

jira LE-1907
cve CVE-2018-3620
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] cpu/amd: do not check cpuid max ext level before parsing smp info (Christoph von Recklinghausen) [1593384] {CVE-2018-3620}
Rebuild_FUZZ: 97.01%
commit-author Borislav Petkov <bp@suse.de>
commit 119bff8a9c9bb00116a844ec68be7bc4b1c768f5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/119bff8a.failed

Old code used to check whether CPUID ext max level is >= 0x80000008 because
that last leaf contains the number of cores of the physical CPU.  The three
functions called there now do not depend on that leaf anymore so the check
can go.

	Signed-off-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 119bff8a9c9bb00116a844ec68be7bc4b1c768f5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/amd.c
diff --cc arch/x86/kernel/cpu/amd.c
index d354c50b9560,d120e5cefca9..000000000000
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@@ -704,15 -798,59 +704,21 @@@ static void init_amd(struct cpuinfo_x8
  
  	cpu_detect_cache_sizes(c);
  
++<<<<<<< HEAD
 +	/* Multi core CPU? */
 +	if (c->extended_cpuid_level >= 0x80000008) {
 +		amd_detect_cmp(c);
 +		srat_detect_node(c);
 +	}
++=======
+ 	amd_detect_cmp(c);
+ 	amd_get_topology(c);
+ 	srat_detect_node(c);
++>>>>>>> 119bff8a9c9b (x86/CPU/AMD: Do not check CPUID max ext level before parsing SMP info)
 +
 +#ifdef CONFIG_X86_32
 +	detect_ht(c);
 +#endif
  
  	init_amd_cacheinfo(c);
  
* Unmerged path arch/x86/kernel/cpu/amd.c
