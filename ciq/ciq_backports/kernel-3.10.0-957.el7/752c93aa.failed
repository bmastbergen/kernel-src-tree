ASoC: Intel: Skylake: Ensure dai and dailink registration happens in sequence.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: intel: skylake: Ensure dai and dailink registration happens in sequence (Jaroslav Kysela) [1535427]
Rebuild_FUZZ: 95.65%
commit-author Pankaj Bharadiya <pankaj.laxminarayan.bharadiya@intel.com>
commit 752c93aa72e60ba573bbcfcd508b9cc550db0b94
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/752c93aa.failed

Platform registration happens in probe work handler whereas machine
device is registered during skl_probe. This sometimes results in cpu
dais not found if the work handler is sufficiently delayed due to system
load, even with deferred probe of machine driver.

So move machine device registration after registering platform.

	Signed-off-by: Pankaj Bharadiya <pankaj.laxminarayan.bharadiya@intel.com>
	Signed-off-by: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
	Signed-off-by: Guneshwor Singh <guneshwor.o.singh@intel.com>
Acked-By: Vinod Koul <vinod.koul@intel.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 752c93aa72e60ba573bbcfcd508b9cc550db0b94)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/intel/skylake/skl.c
diff --cc sound/soc/intel/skylake/skl.c
index 348ae5a6fdfb,32ce64c6b2dc..000000000000
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@@ -453,14 -453,13 +453,20 @@@ static struct skl_ssp_clk skl_ssp_clks[
  						{.name = "ssp5_sclkfs"},
  };
  
- static int skl_machine_device_register(struct skl *skl, void *driver_data)
+ static int skl_find_machine(struct skl *skl, void *driver_data)
  {
++<<<<<<< HEAD
 +	struct hdac_bus *bus = ebus_to_hbus(&skl->ebus);
 +	struct platform_device *pdev;
 +	struct sst_acpi_mach *mach = driver_data;
 +	int ret;
++=======
+ 	struct snd_soc_acpi_mach *mach = driver_data;
+ 	struct hdac_bus *bus = ebus_to_hbus(&skl->ebus);
+ 	struct skl_machine_pdata *pdata;
++>>>>>>> 752c93aa72e6 (ASoC: Intel: Skylake: Ensure dai and dailink registration happens in sequence.)
  
 -	mach = snd_soc_acpi_find_machine(mach);
 +	mach = sst_acpi_find_machine(mach);
  	if (mach == NULL) {
  		dev_err(bus->dev, "No matching machine driver found\n");
  		return -ENODEV;
* Unmerged path sound/soc/intel/skylake/skl.c
diff --git a/sound/soc/intel/skylake/skl.h b/sound/soc/intel/skylake/skl.h
index 382a26171986..8f1e6ba94f9a 100644
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@ -94,6 +94,7 @@ struct skl {
 	struct skl_module **modules;
 	bool use_tplg_pcm;
 	struct skl_fw_config cfg;
+	struct snd_soc_acpi_mach *mach;
 };
 
 #define skl_to_ebus(s)	(&(s)->ebus)
