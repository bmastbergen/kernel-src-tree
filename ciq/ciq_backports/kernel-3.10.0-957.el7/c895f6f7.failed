bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
commit c895f6f703ad7dd2f99e751d9884b0aa5d0eea25
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/c895f6f7.failed

Commit 0515e5999a466dfe ("bpf: introduce BPF_PROG_TYPE_PERF_EVENT
program type") introduced the bpf_perf_event_data structure which
exports the pt_regs structure.  This is OK for multiple architectures
but fail for s390 and arm64 which do not export pt_regs.  Programs
using them, for example, the bpf selftest fail to compile on these
architectures.

For s390, exporting the pt_regs is not an option because s390 wants
to allow changes to it.  For arm64, there is a user_pt_regs structure
that covers parts of the pt_regs structure for use by user space.

To solve the broken uapi for s390 and arm64, introduce an abstract
type for pt_regs and add an asm/bpf_perf_event.h file that concretes
the type.  An asm-generic header file covers the architectures that
export pt_regs today.

The arch-specific enablement for s390 and arm64 follows in separate
commits.

	Reported-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
Fixes: 0515e5999a466dfe ("bpf: introduce BPF_PROG_TYPE_PERF_EVENT program type")
	Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Reviewed-and-tested-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Cc: Daniel Borkmann <daniel@iogearbox.net>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit c895f6f703ad7dd2f99e751d9884b0aa5d0eea25)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/alpha/include/uapi/asm/Kbuild
#	arch/arc/include/uapi/asm/Kbuild
#	arch/arm/include/uapi/asm/Kbuild
#	arch/blackfin/include/uapi/asm/Kbuild
#	arch/c6x/include/uapi/asm/Kbuild
#	arch/cris/include/uapi/asm/Kbuild
#	arch/frv/include/uapi/asm/Kbuild
#	arch/h8300/include/uapi/asm/Kbuild
#	arch/hexagon/include/uapi/asm/Kbuild
#	arch/m32r/include/uapi/asm/Kbuild
#	arch/m68k/include/uapi/asm/Kbuild
#	arch/metag/include/uapi/asm/Kbuild
#	arch/microblaze/include/uapi/asm/Kbuild
#	arch/mips/include/uapi/asm/Kbuild
#	arch/mn10300/include/uapi/asm/Kbuild
#	arch/nios2/include/uapi/asm/Kbuild
#	arch/openrisc/include/uapi/asm/Kbuild
#	arch/parisc/include/uapi/asm/Kbuild
#	arch/powerpc/include/uapi/asm/Kbuild
#	arch/riscv/include/uapi/asm/Kbuild
#	arch/score/include/uapi/asm/Kbuild
#	arch/sh/include/uapi/asm/Kbuild
#	arch/sparc/include/uapi/asm/Kbuild
#	arch/tile/include/uapi/asm/Kbuild
#	arch/unicore32/include/uapi/asm/Kbuild
#	arch/x86/include/uapi/asm/Kbuild
#	arch/xtensa/include/uapi/asm/Kbuild
#	include/linux/perf_event.h
#	include/uapi/linux/bpf_perf_event.h
#	kernel/events/core.c
diff --cc arch/alpha/include/uapi/asm/Kbuild
index d96f2ef5b639,14a2e9af97e9..000000000000
--- a/arch/alpha/include/uapi/asm/Kbuild
+++ b/arch/alpha/include/uapi/asm/Kbuild
@@@ -1,43 -1,4 +1,47 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += a.out.h
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += compiler.h
 +header-y += console.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += fpu.h
 +header-y += gentrap.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += pal.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += reg.h
 +header-y += regdef.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += sysinfo.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += bpf_perf_event.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/arc/include/uapi/asm/Kbuild
index 18fefaea73fd,170b5db64afe..000000000000
--- a/arch/arc/include/uapi/asm/Kbuild
+++ b/arch/arc/include/uapi/asm/Kbuild
@@@ -1,12 -1,29 +1,42 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
++<<<<<<< HEAD
 +header-y += elf.h
 +header-y += page.h
 +header-y += setup.h
 +header-y += byteorder.h
 +header-y += cachectl.h
 +header-y += ptrace.h
 +header-y += sigcontext.h
 +header-y += signal.h
 +header-y += swab.h
 +header-y += unistd.h
++=======
+ 
+ generic-y += auxvec.h
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
+ generic-y += mman.h
+ generic-y += msgbuf.h
+ generic-y += param.h
+ generic-y += poll.h
+ generic-y += posix_types.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += shmbuf.h
+ generic-y += siginfo.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += stat.h
+ generic-y += statfs.h
+ generic-y += termbits.h
+ generic-y += termios.h
+ generic-y += types.h
+ generic-y += ucontext.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/arm/include/uapi/asm/Kbuild
index 18d76fd5a2af,4d1cc1847edf..000000000000
--- a/arch/arm/include/uapi/asm/Kbuild
+++ b/arch/arm/include/uapi/asm/Kbuild
@@@ -1,18 -1,24 +1,41 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += byteorder.h
 +header-y += fcntl.h
 +header-y += hwcap.h
 +header-y += ioctls.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += setup.h
 +header-y += sigcontext.h
 +header-y += signal.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += unistd.h
++=======
+ generated-y += unistd-common.h
+ generated-y += unistd-oabi.h
+ generated-y += unistd-eabi.h
+ 
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += ioctl.h
+ generic-y += ipcbuf.h
+ generic-y += msgbuf.h
+ generic-y += param.h
+ generic-y += poll.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += shmbuf.h
+ generic-y += siginfo.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += termbits.h
+ generic-y += termios.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/blackfin/include/uapi/asm/Kbuild
index 0bd28f77abc3,2240b38c2915..000000000000
--- a/arch/blackfin/include/uapi/asm/Kbuild
+++ b/arch/blackfin/include/uapi/asm/Kbuild
@@@ -1,19 -1,25 +1,44 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += bfin_sport.h
 +header-y += byteorder.h
 +header-y += cachectl.h
 +header-y += fcntl.h
 +header-y += fixed_code.h
 +header-y += ioctls.h
 +header-y += kvm_para.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += stat.h
 +header-y += swab.h
 +header-y += unistd.h
++=======
+ generic-y += auxvec.h
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += ioctl.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
+ generic-y += mman.h
+ generic-y += msgbuf.h
+ generic-y += param.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += setup.h
+ generic-y += shmbuf.h
+ generic-y += shmparam.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += statfs.h
+ generic-y += termbits.h
+ generic-y += termios.h
+ generic-y += types.h
+ generic-y += ucontext.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/c6x/include/uapi/asm/Kbuild
index e9bc2b2b8147,26644e15d854..000000000000
--- a/arch/c6x/include/uapi/asm/Kbuild
+++ b/arch/c6x/include/uapi/asm/Kbuild
@@@ -1,12 -1,31 +1,23 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
++=======
+ generic-y += auxvec.h
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
  generic-y += kvm_para.h
 -generic-y += mman.h
 -generic-y += msgbuf.h
 -generic-y += param.h
 -generic-y += poll.h
 -generic-y += posix_types.h
 -generic-y += resource.h
 -generic-y += sembuf.h
 -generic-y += shmbuf.h
 -generic-y += shmparam.h
 -generic-y += siginfo.h
 -generic-y += signal.h
 -generic-y += socket.h
 -generic-y += sockios.h
 -generic-y += stat.h
 -generic-y += statfs.h
 -generic-y += termbits.h
 -generic-y += termios.h
 -generic-y += types.h
 -generic-y += ucontext.h
 +
 +header-y += byteorder.h
 +header-y += kvm_para.h
 +header-y += ptrace.h
 +header-y += setup.h
 +header-y += sigcontext.h
 +header-y += swab.h
 +header-y += unistd.h
diff --cc arch/cris/include/uapi/asm/Kbuild
index 7d47b366ad82,3470c6e9c7b9..000000000000
--- a/arch/cris/include/uapi/asm/Kbuild
+++ b/arch/cris/include/uapi/asm/Kbuild
@@@ -1,39 -1,22 +1,61 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += arch-v10/
 +header-y += arch-v32/
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += errno.h
 +header-y += ethernet.h
 +header-y += etraxgpio.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += rs485.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += sync_serial.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += auxvec.h
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
+ generic-y += mman.h
+ generic-y += msgbuf.h
+ generic-y += poll.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += shmbuf.h
+ generic-y += siginfo.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += statfs.h
+ generic-y += types.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/frv/include/uapi/asm/Kbuild
index 42a2b33461c0,14a2e9af97e9..000000000000
--- a/arch/frv/include/uapi/asm/Kbuild
+++ b/arch/frv/include/uapi/asm/Kbuild
@@@ -1,35 -1,4 +1,39 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += registers.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += bpf_perf_event.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/h8300/include/uapi/asm/Kbuild
index 040178cdb3eb,2f65f78792cb..000000000000
--- a/arch/h8300/include/uapi/asm/Kbuild
+++ b/arch/h8300/include/uapi/asm/Kbuild
@@@ -1,34 -1,31 +1,65 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += auxvec.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
+ generic-y += mman.h
+ generic-y += msgbuf.h
+ generic-y += param.h
+ generic-y += poll.h
+ generic-y += posix_types.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += setup.h
+ generic-y += shmbuf.h
+ generic-y += shmparam.h
+ generic-y += siginfo.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += stat.h
+ generic-y += statfs.h
+ generic-y += swab.h
+ generic-y += termbits.h
+ generic-y += termios.h
+ generic-y += types.h
+ generic-y += ucontext.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/hexagon/include/uapi/asm/Kbuild
index c31706c38631,41a176dbb53e..000000000000
--- a/arch/hexagon/include/uapi/asm/Kbuild
+++ b/arch/hexagon/include/uapi/asm/Kbuild
@@@ -1,15 -1,27 +1,42 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += kvm_para.h
 +header-y += param.h
 +header-y += ptrace.h
 +header-y += registers.h
 +header-y += setup.h
 +header-y += sigcontext.h
 +header-y += signal.h
 +header-y += swab.h
 +header-y += unistd.h
 +header-y += user.h
++=======
+ generic-y += auxvec.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
+ generic-y += mman.h
+ generic-y += msgbuf.h
+ generic-y += poll.h
+ generic-y += posix_types.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += shmbuf.h
+ generic-y += shmparam.h
+ generic-y += siginfo.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += stat.h
+ generic-y += statfs.h
+ generic-y += termbits.h
+ generic-y += termios.h
+ generic-y += types.h
+ generic-y += ucontext.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/m32r/include/uapi/asm/Kbuild
index 43937a61d6cf,451bf6071c6e..000000000000
--- a/arch/m32r/include/uapi/asm/Kbuild
+++ b/arch/m32r/include/uapi/asm/Kbuild
@@@ -1,33 -1,6 +1,39 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += bpf_perf_event.h
+ generic-y += kvm_para.h
+ generic-y += siginfo.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/m68k/include/uapi/asm/Kbuild
index 1fef45ada097,c2e26a44c482..000000000000
--- a/arch/m68k/include/uapi/asm/Kbuild
+++ b/arch/m68k/include/uapi/asm/Kbuild
@@@ -2,26 -2,22 +2,36 @@@
  include include/uapi/asm-generic/Kbuild.asm
  
  generic-y += auxvec.h
++<<<<<<< HEAD
++=======
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += ioctl.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
+ generic-y += mman.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
  generic-y += msgbuf.h
 -generic-y += resource.h
  generic-y += sembuf.h
  generic-y += shmbuf.h
 -generic-y += shmparam.h
 -generic-y += siginfo.h
  generic-y += socket.h
  generic-y += sockios.h
 -generic-y += statfs.h
  generic-y += termbits.h
  generic-y += termios.h
 -generic-y += types.h
 +
 +header-y += a.out.h
 +header-y += byteorder.h
 +header-y += cachectl.h
 +header-y += fcntl.h
 +header-y += ioctls.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += setup.h
 +header-y += sigcontext.h
 +header-y += signal.h
 +header-y += stat.h
 +header-y += swab.h
 +header-y += unistd.h
diff --cc arch/metag/include/uapi/asm/Kbuild
index 84e09feb4d54,f9eaf07d29f8..000000000000
--- a/arch/metag/include/uapi/asm/Kbuild
+++ b/arch/metag/include/uapi/asm/Kbuild
@@@ -1,14 -1,31 +1,26 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += byteorder.h
 +header-y += ech.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += swab.h
 +header-y += unistd.h
 +
++=======
+ generic-y += auxvec.h
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
  generic-y += mman.h
 -generic-y += msgbuf.h
 -generic-y += param.h
 -generic-y += poll.h
 -generic-y += posix_types.h
 -generic-y += resource.h
 -generic-y += sembuf.h
  generic-y += setup.h
 -generic-y += shmbuf.h
 -generic-y += shmparam.h
 -generic-y += signal.h
 -generic-y += socket.h
 -generic-y += sockios.h
 -generic-y += stat.h
 -generic-y += statfs.h
 -generic-y += termbits.h
 -generic-y += termios.h
 -generic-y += types.h
 -generic-y += ucontext.h
diff --cc arch/microblaze/include/uapi/asm/Kbuild
index 6d7d7f4aaae8,2c6a6bffea32..000000000000
--- a/arch/microblaze/include/uapi/asm/Kbuild
+++ b/arch/microblaze/include/uapi/asm/Kbuild
@@@ -1,35 -1,30 +1,65 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += elf.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
+ generic-y += mman.h
+ generic-y += msgbuf.h
+ generic-y += param.h
+ generic-y += poll.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += shmbuf.h
+ generic-y += shmparam.h
+ generic-y += siginfo.h
+ generic-y += signal.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += stat.h
+ generic-y += statfs.h
+ generic-y += swab.h
+ generic-y += termbits.h
+ generic-y += termios.h
+ generic-y += types.h
+ generic-y += ucontext.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/mips/include/uapi/asm/Kbuild
index 350ccccadcb9,7a4becd8963a..000000000000
--- a/arch/mips/include/uapi/asm/Kbuild
+++ b/arch/mips/include/uapi/asm/Kbuild
@@@ -1,39 -1,5 +1,44 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += break.h
 +header-y += byteorder.h
 +header-y += cachectl.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += inst.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += sgidefs.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += sysmips.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += bpf_perf_event.h
+ generic-y += ipcbuf.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/mn10300/include/uapi/asm/Kbuild
index 040178cdb3eb,81271d3af47c..000000000000
--- a/arch/mn10300/include/uapi/asm/Kbuild
+++ b/arch/mn10300/include/uapi/asm/Kbuild
@@@ -1,34 -1,5 +1,39 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y	+= bpf_perf_event.h
+ generic-y	+= siginfo.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/openrisc/include/uapi/asm/Kbuild
index 80761eb82b5f,130c16ccba0a..000000000000
--- a/arch/openrisc/include/uapi/asm/Kbuild
+++ b/arch/openrisc/include/uapi/asm/Kbuild
@@@ -1,10 -1,32 +1,42 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += byteorder.h
 +header-y += elf.h
 +header-y += kvm_para.h
 +header-y += param.h
 +header-y += ptrace.h
 +header-y += sigcontext.h
 +header-y += unistd.h
++=======
+ generic-y += auxvec.h
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
+ generic-y += mman.h
+ generic-y += msgbuf.h
+ generic-y += poll.h
+ generic-y += posix_types.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += setup.h
+ generic-y += shmbuf.h
+ generic-y += shmparam.h
+ generic-y += siginfo.h
+ generic-y += signal.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += stat.h
+ generic-y += statfs.h
+ generic-y += swab.h
+ generic-y += termbits.h
+ generic-y += termios.h
+ generic-y += types.h
+ generic-y += ucontext.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/parisc/include/uapi/asm/Kbuild
index a580642555b6,286ef5a5904b..000000000000
--- a/arch/parisc/include/uapi/asm/Kbuild
+++ b/arch/parisc/include/uapi/asm/Kbuild
@@@ -1,31 -1,9 +1,40 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += pdc.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += auxvec.h
+ generic-y += bpf_perf_event.h
+ generic-y += kvm_para.h
+ generic-y += param.h
+ generic-y += poll.h
+ generic-y += resource.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/powerpc/include/uapi/asm/Kbuild
index 1859fc90c4e0,1a6ed5919ffd..000000000000
--- a/arch/powerpc/include/uapi/asm/Kbuild
+++ b/arch/powerpc/include/uapi/asm/Kbuild
@@@ -1,47 -1,9 +1,56 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += bootx.h
 +header-y += byteorder.h
 +header-y += cputable.h
 +header-y += elf.h
 +header-y += epapr_hcalls.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += kvm.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += nvram.h
 +header-y += opal-prd.h
 +header-y += param.h
 +header-y += perf_event.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ps3fb.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += seccomp.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += spu_info.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += tm.h
 +header-y += types.h
 +header-y += ucontext.h
 +header-y += unistd.h
++=======
+ generic-y += bpf_perf_event.h
+ generic-y += param.h
+ generic-y += poll.h
+ generic-y += resource.h
+ generic-y += sockios.h
+ generic-y += statfs.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/score/include/uapi/asm/Kbuild
index 040178cdb3eb,81271d3af47c..000000000000
--- a/arch/score/include/uapi/asm/Kbuild
+++ b/arch/score/include/uapi/asm/Kbuild
@@@ -1,34 -1,5 +1,39 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y	+= bpf_perf_event.h
+ generic-y	+= siginfo.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/sh/include/uapi/asm/Kbuild
index 60613ae78513,ba4d39cb321d..000000000000
--- a/arch/sh/include/uapi/asm/Kbuild
+++ b/arch/sh/include/uapi/asm/Kbuild
@@@ -1,25 -1,23 +1,48 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += byteorder.h
 +header-y += cachectl.h
 +header-y += cpu-features.h
 +header-y += hw_breakpoint.h
 +header-y += ioctls.h
 +header-y += posix_types.h
 +header-y += posix_types_32.h
 +header-y += posix_types_64.h
 +header-y += ptrace.h
 +header-y += ptrace_32.h
 +header-y += ptrace_64.h
 +header-y += setup.h
 +header-y += sigcontext.h
 +header-y += signal.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += swab.h
 +header-y += types.h
 +header-y += unistd.h
 +header-y += unistd_32.h
 +header-y += unistd_64.h
++=======
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ipcbuf.h
+ generic-y += kvm_para.h
+ generic-y += mman.h
+ generic-y += msgbuf.h
+ generic-y += param.h
+ generic-y += poll.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += shmbuf.h
+ generic-y += siginfo.h
+ generic-y += socket.h
+ generic-y += statfs.h
+ generic-y += termbits.h
+ generic-y += termios.h
+ generic-y += ucontext.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/sparc/include/uapi/asm/Kbuild
index b5843ee09fb5,4680ba246b55..000000000000
--- a/arch/sparc/include/uapi/asm/Kbuild
+++ b/arch/sparc/include/uapi/asm/Kbuild
@@@ -1,50 -1,5 +1,55 @@@
  # UAPI Header export list
 +# User exported sparc header files
 +
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += apc.h
 +header-y += asi.h
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += display7seg.h
 +header-y += envctrl.h
 +header-y += errno.h
 +header-y += fbio.h
 +header-y += fcntl.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += jsflash.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += openpromio.h
 +header-y += param.h
 +header-y += perfctr.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += psr.h
 +header-y += psrcompat.h
 +header-y += pstate.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += traps.h
 +header-y += uctx.h
 +header-y += unistd.h
 +header-y += utrap.h
 +header-y += watchdog.h
++=======
+ generic-y += bpf_perf_event.h
+ generic-y += types.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/tile/include/uapi/asm/Kbuild
index c20db8e428bf,cc439612bcd5..000000000000
--- a/arch/tile/include/uapi/asm/Kbuild
+++ b/arch/tile/include/uapi/asm/Kbuild
@@@ -1,21 -1,24 +1,44 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += byteorder.h
 +header-y += cachectl.h
 +header-y += hardwall.h
 +header-y += kvm_para.h
 +header-y += mman.h
 +header-y += ptrace.h
 +header-y += setup.h
 +header-y += sigcontext.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += stat.h
 +header-y += swab.h
 +header-y += ucontext.h
 +header-y += unistd.h
 +
++=======
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
+ generic-y += msgbuf.h
+ generic-y += param.h
+ generic-y += poll.h
+ generic-y += posix_types.h
+ generic-y += resource.h
+ generic-y += sembuf.h
+ generic-y += shmbuf.h
+ generic-y += shmparam.h
+ generic-y += socket.h
+ generic-y += sockios.h
+ generic-y += statfs.h
+ generic-y += termbits.h
+ generic-y += termios.h
+ generic-y += types.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
  generic-y += ucontext.h
diff --cc arch/unicore32/include/uapi/asm/Kbuild
index 0514d7ad6855,8611ef980554..000000000000
--- a/arch/unicore32/include/uapi/asm/Kbuild
+++ b/arch/unicore32/include/uapi/asm/Kbuild
@@@ -1,10 -1,33 +1,21 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += byteorder.h
 +header-y += kvm_para.h
 +header-y += ptrace.h
 +header-y += sigcontext.h
 +header-y += unistd.h
 +
++=======
+ generic-y += auxvec.h
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += ioctls.h
+ generic-y += ipcbuf.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
  generic-y += kvm_para.h
 -generic-y += mman.h
 -generic-y += msgbuf.h
 -generic-y += param.h
 -generic-y += poll.h
 -generic-y += posix_types.h
 -generic-y += resource.h
 -generic-y += sembuf.h
 -generic-y += setup.h
 -generic-y += shmbuf.h
 -generic-y += shmparam.h
 -generic-y += siginfo.h
 -generic-y += signal.h
 -generic-y += socket.h
 -generic-y += sockios.h
 -generic-y += stat.h
 -generic-y += statfs.h
 -generic-y += swab.h
 -generic-y += termbits.h
 -generic-y += termios.h
 -generic-y += types.h
 -generic-y += ucontext.h
diff --cc arch/x86/include/uapi/asm/Kbuild
index 3dec769cadf7,1e901e421f2d..000000000000
--- a/arch/x86/include/uapi/asm/Kbuild
+++ b/arch/x86/include/uapi/asm/Kbuild
@@@ -1,65 -1,7 +1,72 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +genhdr-y += unistd_32.h
 +genhdr-y += unistd_64.h
 +genhdr-y += unistd_x32.h
 +header-y += a.out.h
 +header-y += auxvec.h
 +header-y += bitsperlong.h
 +header-y += boot.h
 +header-y += bootparam.h
 +header-y += byteorder.h
 +header-y += debugreg.h
 +header-y += e820.h
 +header-y += errno.h
 +header-y += fcntl.h
 +header-y += hw_breakpoint.h
 +header-y += hyperv.h
 +header-y += ioctl.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += ist.h
 +header-y += kvm.h
 +header-y += kvm_para.h
 +header-y += kvm_perf.h
 +header-y += ldt.h
 +header-y += mce.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += msr-index.h
 +header-y += msr.h
 +header-y += mtrr.h
 +header-y += param.h
 +header-y += perf_regs.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += posix_types_32.h
 +header-y += posix_types_64.h
 +header-y += posix_types_x32.h
 +header-y += prctl.h
 +header-y += processor-flags.h
 +header-y += ptrace-abi.h
 +header-y += ptrace.h
 +header-y += resource.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += sigcontext32.h
 +header-y += siginfo.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += statfs.h
 +header-y += svm.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += termios.h
 +header-y += types.h
 +header-y += ucontext.h
 +header-y += unistd.h
 +header-y += vm86.h
 +header-y += vmx.h
 +header-y += vsyscall.h
++=======
+ generic-y += bpf_perf_event.h
+ generated-y += unistd_32.h
+ generated-y += unistd_64.h
+ generated-y += unistd_x32.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc arch/xtensa/include/uapi/asm/Kbuild
index 56aad54e7fb7,837d4dd76785..000000000000
--- a/arch/xtensa/include/uapi/asm/Kbuild
+++ b/arch/xtensa/include/uapi/asm/Kbuild
@@@ -1,25 -1,13 +1,38 @@@
  # UAPI Header export list
  include include/uapi/asm-generic/Kbuild.asm
  
++<<<<<<< HEAD
 +header-y += auxvec.h
 +header-y += byteorder.h
 +header-y += ioctls.h
 +header-y += ipcbuf.h
 +header-y += mman.h
 +header-y += msgbuf.h
 +header-y += param.h
 +header-y += poll.h
 +header-y += posix_types.h
 +header-y += ptrace.h
 +header-y += sembuf.h
 +header-y += setup.h
 +header-y += shmbuf.h
 +header-y += sigcontext.h
 +header-y += signal.h
 +header-y += socket.h
 +header-y += sockios.h
 +header-y += stat.h
 +header-y += swab.h
 +header-y += termbits.h
 +header-y += types.h
 +header-y += unistd.h
++=======
+ generic-y += bitsperlong.h
+ generic-y += bpf_perf_event.h
+ generic-y += errno.h
+ generic-y += fcntl.h
+ generic-y += ioctl.h
+ generic-y += kvm_para.h
+ generic-y += resource.h
+ generic-y += siginfo.h
+ generic-y += statfs.h
+ generic-y += termios.h
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
diff --cc include/linux/perf_event.h
index c93e5f6b30d7,7546822a1d74..000000000000
--- a/include/linux/perf_event.h
+++ b/include/linux/perf_event.h
@@@ -700,9 -787,14 +701,18 @@@ struct perf_output_handle 
  	int				page;
  };
  
++<<<<<<< HEAD
++=======
+ struct bpf_perf_event_data_kern {
+ 	bpf_user_pt_regs_t *regs;
+ 	struct perf_sample_data *data;
+ 	struct perf_event *event;
+ };
+ 
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
  #ifdef CONFIG_CGROUP_PERF
  
 +#ifndef __GENKSYMS__
  /*
   * perf_cgroup_info keeps track of time_enabled for a cgroup.
   * This is a per-cpu dynamically allocated data structure.
diff --cc kernel/events/core.c
index e490cd411934,ba957b9812b3..000000000000
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@@ -7739,6 -7980,127 +7739,130 @@@ static void perf_event_free_filter(stru
  	ftrace_profile_free_filter(event);
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_BPF_SYSCALL
+ static void bpf_overflow_handler(struct perf_event *event,
+ 				 struct perf_sample_data *data,
+ 				 struct pt_regs *regs)
+ {
+ 	struct bpf_perf_event_data_kern ctx = {
+ 		.data = data,
+ 		.event = event,
+ 	};
+ 	int ret = 0;
+ 
+ 	ctx.regs = perf_arch_bpf_user_pt_regs(regs);
+ 	preempt_disable();
+ 	if (unlikely(__this_cpu_inc_return(bpf_prog_active) != 1))
+ 		goto out;
+ 	rcu_read_lock();
+ 	ret = BPF_PROG_RUN(event->prog, &ctx);
+ 	rcu_read_unlock();
+ out:
+ 	__this_cpu_dec(bpf_prog_active);
+ 	preempt_enable();
+ 	if (!ret)
+ 		return;
+ 
+ 	event->orig_overflow_handler(event, data, regs);
+ }
+ 
+ static int perf_event_set_bpf_handler(struct perf_event *event, u32 prog_fd)
+ {
+ 	struct bpf_prog *prog;
+ 
+ 	if (event->overflow_handler_context)
+ 		/* hw breakpoint or kernel counter */
+ 		return -EINVAL;
+ 
+ 	if (event->prog)
+ 		return -EEXIST;
+ 
+ 	prog = bpf_prog_get_type(prog_fd, BPF_PROG_TYPE_PERF_EVENT);
+ 	if (IS_ERR(prog))
+ 		return PTR_ERR(prog);
+ 
+ 	event->prog = prog;
+ 	event->orig_overflow_handler = READ_ONCE(event->overflow_handler);
+ 	WRITE_ONCE(event->overflow_handler, bpf_overflow_handler);
+ 	return 0;
+ }
+ 
+ static void perf_event_free_bpf_handler(struct perf_event *event)
+ {
+ 	struct bpf_prog *prog = event->prog;
+ 
+ 	if (!prog)
+ 		return;
+ 
+ 	WRITE_ONCE(event->overflow_handler, event->orig_overflow_handler);
+ 	event->prog = NULL;
+ 	bpf_prog_put(prog);
+ }
+ #else
+ static int perf_event_set_bpf_handler(struct perf_event *event, u32 prog_fd)
+ {
+ 	return -EOPNOTSUPP;
+ }
+ static void perf_event_free_bpf_handler(struct perf_event *event)
+ {
+ }
+ #endif
+ 
+ static int perf_event_set_bpf_prog(struct perf_event *event, u32 prog_fd)
+ {
+ 	bool is_kprobe, is_tracepoint, is_syscall_tp;
+ 	struct bpf_prog *prog;
+ 	int ret;
+ 
+ 	if (event->attr.type != PERF_TYPE_TRACEPOINT)
+ 		return perf_event_set_bpf_handler(event, prog_fd);
+ 
+ 	is_kprobe = event->tp_event->flags & TRACE_EVENT_FL_UKPROBE;
+ 	is_tracepoint = event->tp_event->flags & TRACE_EVENT_FL_TRACEPOINT;
+ 	is_syscall_tp = is_syscall_trace_event(event->tp_event);
+ 	if (!is_kprobe && !is_tracepoint && !is_syscall_tp)
+ 		/* bpf programs can only be attached to u/kprobe or tracepoint */
+ 		return -EINVAL;
+ 
+ 	prog = bpf_prog_get(prog_fd);
+ 	if (IS_ERR(prog))
+ 		return PTR_ERR(prog);
+ 
+ 	if ((is_kprobe && prog->type != BPF_PROG_TYPE_KPROBE) ||
+ 	    (is_tracepoint && prog->type != BPF_PROG_TYPE_TRACEPOINT) ||
+ 	    (is_syscall_tp && prog->type != BPF_PROG_TYPE_TRACEPOINT)) {
+ 		/* valid fd, but invalid bpf program type */
+ 		bpf_prog_put(prog);
+ 		return -EINVAL;
+ 	}
+ 
+ 	if (is_tracepoint || is_syscall_tp) {
+ 		int off = trace_event_get_offsets(event->tp_event);
+ 
+ 		if (prog->aux->max_ctx_offset > off) {
+ 			bpf_prog_put(prog);
+ 			return -EACCES;
+ 		}
+ 	}
+ 
+ 	ret = perf_event_attach_bpf_prog(event, prog);
+ 	if (ret)
+ 		bpf_prog_put(prog);
+ 	return ret;
+ }
+ 
+ static void perf_event_free_bpf_prog(struct perf_event *event)
+ {
+ 	if (event->attr.type != PERF_TYPE_TRACEPOINT) {
+ 		perf_event_free_bpf_handler(event);
+ 		return;
+ 	}
+ 	perf_event_detach_bpf_prog(event);
+ }
+ 
++>>>>>>> c895f6f703ad (bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type)
  #else
  
  static inline void perf_tp_register(void)
* Unmerged path arch/nios2/include/uapi/asm/Kbuild
* Unmerged path arch/riscv/include/uapi/asm/Kbuild
* Unmerged path include/uapi/linux/bpf_perf_event.h
* Unmerged path arch/alpha/include/uapi/asm/Kbuild
* Unmerged path arch/arc/include/uapi/asm/Kbuild
* Unmerged path arch/arm/include/uapi/asm/Kbuild
* Unmerged path arch/blackfin/include/uapi/asm/Kbuild
* Unmerged path arch/c6x/include/uapi/asm/Kbuild
* Unmerged path arch/cris/include/uapi/asm/Kbuild
* Unmerged path arch/frv/include/uapi/asm/Kbuild
* Unmerged path arch/h8300/include/uapi/asm/Kbuild
* Unmerged path arch/hexagon/include/uapi/asm/Kbuild
diff --git a/arch/ia64/include/uapi/asm/Kbuild b/arch/ia64/include/uapi/asm/Kbuild
index 1b3f5eb5fcdb..1eb25e25d184 100644
--- a/arch/ia64/include/uapi/asm/Kbuild
+++ b/arch/ia64/include/uapi/asm/Kbuild
@@ -1,6 +1,7 @@
 # UAPI Header export list
 include include/uapi/asm-generic/Kbuild.asm
 
+generic-y += bpf_perf_event.h
 generic-y += kvm_para.h
 
 header-y += auxvec.h
* Unmerged path arch/m32r/include/uapi/asm/Kbuild
* Unmerged path arch/m68k/include/uapi/asm/Kbuild
* Unmerged path arch/metag/include/uapi/asm/Kbuild
* Unmerged path arch/microblaze/include/uapi/asm/Kbuild
* Unmerged path arch/mips/include/uapi/asm/Kbuild
* Unmerged path arch/mn10300/include/uapi/asm/Kbuild
* Unmerged path arch/nios2/include/uapi/asm/Kbuild
* Unmerged path arch/openrisc/include/uapi/asm/Kbuild
* Unmerged path arch/parisc/include/uapi/asm/Kbuild
* Unmerged path arch/powerpc/include/uapi/asm/Kbuild
* Unmerged path arch/riscv/include/uapi/asm/Kbuild
* Unmerged path arch/score/include/uapi/asm/Kbuild
* Unmerged path arch/sh/include/uapi/asm/Kbuild
* Unmerged path arch/sparc/include/uapi/asm/Kbuild
* Unmerged path arch/tile/include/uapi/asm/Kbuild
* Unmerged path arch/unicore32/include/uapi/asm/Kbuild
* Unmerged path arch/x86/include/uapi/asm/Kbuild
* Unmerged path arch/xtensa/include/uapi/asm/Kbuild
* Unmerged path include/linux/perf_event.h
diff --git a/include/uapi/asm-generic/bpf_perf_event.h b/include/uapi/asm-generic/bpf_perf_event.h
new file mode 100644
index 000000000000..53815d2cd047
--- /dev/null
+++ b/include/uapi/asm-generic/bpf_perf_event.h
@@ -0,0 +1,9 @@
+#ifndef _UAPI__ASM_GENERIC_BPF_PERF_EVENT_H__
+#define _UAPI__ASM_GENERIC_BPF_PERF_EVENT_H__
+
+#include <linux/ptrace.h>
+
+/* Export kernel pt_regs structure */
+typedef struct pt_regs bpf_user_pt_regs_t;
+
+#endif /* _UAPI__ASM_GENERIC_BPF_PERF_EVENT_H__ */
* Unmerged path include/uapi/linux/bpf_perf_event.h
* Unmerged path kernel/events/core.c
