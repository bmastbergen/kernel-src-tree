scsi: qla2xxx: Serialize GPNID for multiple RSCN

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Serialize GPNID for multiple RSCN (Himanshu Madhani) [1547714]
Rebuild_FUZZ: 93.33%
commit-author Quinn Tran <quinn.tran@cavium.com>
commit 2d73ac6102d943c4be4945735a338005359c6abc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2d73ac61.failed

GPNID is triggered by RSCN. For multiple RSCNs of the same affected
NPORT ID, serialize the GPNID to prevent confusion.

Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
	Cc: <stable@vger.kernel.org> # 4.10+
	Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 2d73ac6102d943c4be4945735a338005359c6abc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_def.h
#	drivers/scsi/qla2xxx/qla_gs.c
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_def.h
index 70dffc916a3d,d9b4a0651a0f..000000000000
--- a/drivers/scsi/qla2xxx/qla_def.h
+++ b/drivers/scsi/qla2xxx/qla_def.h
@@@ -4165,6 -4251,11 +4168,14 @@@ typedef struct scsi_qla_host 
  	int fcport_count;
  	wait_queue_head_t fcport_waitQ;
  	wait_queue_head_t vref_waitq;
++<<<<<<< HEAD
++=======
+ 	uint8_t min_link_speed_feat;
+ 	uint8_t n2n_node_name[WWN_SIZE];
+ 	uint8_t n2n_port_name[WWN_SIZE];
+ 	uint16_t	n2n_id;
+ 	struct list_head gpnid_list;
++>>>>>>> 2d73ac6102d9 (scsi: qla2xxx: Serialize GPNID for multiple RSCN)
  } scsi_qla_host_t;
  
  struct qla27xx_image_status {
diff --cc drivers/scsi/qla2xxx/qla_gs.c
index 194ce61856ea,59ecc4eda6cd..000000000000
--- a/drivers/scsi/qla2xxx/qla_gs.c
+++ b/drivers/scsi/qla2xxx/qla_gs.c
@@@ -3193,11 -3221,18 +3193,25 @@@ static void qla2x00_async_gpnid_sp_done
  	    (struct ct_sns_rsp *)sp->u.iocb_cmd.u.ctarg.rsp;
  	struct event_arg ea;
  	struct qla_work_evt *e;
+ 	unsigned long flags;
  
++<<<<<<< HEAD
 +	ql_dbg(ql_dbg_disc, vha, 0x2066,
 +	    "Async done-%s res %x ID %3phC. %8phC\n",
 +	    sp->name, res, ct_req->req.port_id.port_id,
 +	    ct_rsp->rsp.gpn_id.port_name);
++=======
+ 	if (res)
+ 		ql_dbg(ql_dbg_disc, vha, 0x2066,
+ 		    "Async done-%s fail res %x rscn gen %d ID %3phC. %8phC\n",
+ 		    sp->name, res, sp->gen1, ct_req->req.port_id.port_id,
+ 		    ct_rsp->rsp.gpn_id.port_name);
+ 	else
+ 		ql_dbg(ql_dbg_disc, vha, 0x2066,
+ 		    "Async done-%s good rscn gen %d ID %3phC. %8phC\n",
+ 		    sp->name, sp->gen1, ct_req->req.port_id.port_id,
+ 		    ct_rsp->rsp.gpn_id.port_name);
++>>>>>>> 2d73ac6102d9 (scsi: qla2xxx: Serialize GPNID for multiple RSCN)
  
  	memset(&ea, 0, sizeof(ea));
  	memcpy(ea.port_name, ct_rsp->rsp.gpn_id.port_name, WWN_SIZE);
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 009f4dc8e948,e71d99ba57f9..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -4555,7 -4512,10 +4555,12 @@@ struct scsi_qla_host *qla2x00_create_ho
  	INIT_LIST_HEAD(&vha->qla_sess_op_cmd_list);
  	INIT_LIST_HEAD(&vha->logo_list);
  	INIT_LIST_HEAD(&vha->plogi_ack_list);
 -	INIT_LIST_HEAD(&vha->qp_list);
  	INIT_LIST_HEAD(&vha->gnl.fcports);
++<<<<<<< HEAD
++=======
+ 	INIT_LIST_HEAD(&vha->nvme_rport_list);
+ 	INIT_LIST_HEAD(&vha->gpnid_list);
++>>>>>>> 2d73ac6102d9 (scsi: qla2xxx: Serialize GPNID for multiple RSCN)
  
  	spin_lock_init(&vha->work_lock);
  	spin_lock_init(&vha->cmd_list_lock);
* Unmerged path drivers/scsi/qla2xxx/qla_def.h
* Unmerged path drivers/scsi/qla2xxx/qla_gs.c
diff --git a/drivers/scsi/qla2xxx/qla_isr.c b/drivers/scsi/qla2xxx/qla_isr.c
index 0cbbbce1a934..dfc93ec39ed8 100644
--- a/drivers/scsi/qla2xxx/qla_isr.c
+++ b/drivers/scsi/qla2xxx/qla_isr.c
@@ -1564,7 +1564,7 @@ qla24xx_els_ct_entry(scsi_qla_host_t *vha, struct req_que *req,
 		/* borrowing sts_entry_24xx.comp_status.
 		   same location as ct_entry_24xx.comp_status
 		 */
-		res = qla2x00_chk_ms_status(vha, (ms_iocb_entry_t *)pkt,
+		res = qla2x00_chk_ms_status(sp->vha, (ms_iocb_entry_t *)pkt,
 			(struct ct_sns_rsp *)sp->u.iocb_cmd.u.ctarg.rsp,
 			sp->name);
 		sp->done(sp, res);
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
