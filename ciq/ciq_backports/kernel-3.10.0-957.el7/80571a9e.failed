netfilter: ipset: Fix hash resizing with comments

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
commit 80571a9ea4ca9b6fee7ef0c13d3f31e774e0533b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/80571a9e.failed

The destroy function must take into account that resizing doesn't
create new extensions so those cannot be destroyed at resize.

	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit 80571a9ea4ca9b6fee7ef0c13d3f31e774e0533b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_hash_gen.h
diff --cc net/netfilter/ipset/ip_set_hash_gen.h
index acd02e6a3233,1cffeb977605..000000000000
--- a/net/netfilter/ipset/ip_set_hash_gen.h
+++ b/net/netfilter/ipset/ip_set_hash_gen.h
@@@ -387,6 -391,26 +387,29 @@@ mtype_flush(struct ip_set *set
  	h->elements = 0;
  }
  
++<<<<<<< HEAD
++=======
+ /* Destroy the hashtable part of the set */
+ static void
+ mtype_ahash_destroy(struct ip_set *set, struct htable *t, bool ext_destroy)
+ {
+ 	struct hbucket *n;
+ 	u32 i;
+ 
+ 	for (i = 0; i < jhash_size(t->htable_bits); i++) {
+ 		n = hbucket(t, i);
+ 		if (n->size) {
+ 			if (set->extensions & IPSET_EXT_DESTROY && ext_destroy)
+ 				mtype_ext_cleanup(set, n);
+ 			/* FIXME: use slab cache */
+ 			kfree(n->value);
+ 		}
+ 	}
+ 
+ 	ip_set_free(t);
+ }
+ 
++>>>>>>> 80571a9ea4ca (netfilter: ipset: Fix hash resizing with comments)
  /* Destroy a hash type of set */
  static void
  mtype_destroy(struct ip_set *set)
@@@ -396,7 -420,7 +419,11 @@@
  	if (set->extensions & IPSET_EXT_TIMEOUT)
  		del_timer_sync(&h->gc);
  
++<<<<<<< HEAD
 +	ahash_destroy(h->table);
++=======
+ 	mtype_ahash_destroy(set, rcu_dereference_bh_nfnl(h->table), true);
++>>>>>>> 80571a9ea4ca (netfilter: ipset: Fix hash resizing with comments)
  #ifdef IP_SET_HASH_WITH_RBTREE
  	rbtree_destroy(&h->rbtree);
  #endif
@@@ -559,7 -586,7 +586,11 @@@ retry
  				mtype_data_reset_flags(data, &flags);
  #endif
  				read_unlock_bh(&set->lock);
++<<<<<<< HEAD
 +				ahash_destroy(t);
++=======
+ 				mtype_ahash_destroy(set, t, false);
++>>>>>>> 80571a9ea4ca (netfilter: ipset: Fix hash resizing with comments)
  				if (ret == -EAGAIN)
  					goto retry;
  				return ret;
@@@ -580,7 -607,7 +611,11 @@@
  
  	pr_debug("set %s resized from %u (%p) to %u (%p)\n", set->name,
  		 orig->htable_bits, orig, t->htable_bits, t);
++<<<<<<< HEAD
 +	ahash_destroy(orig);
++=======
+ 	mtype_ahash_destroy(set, orig, false);
++>>>>>>> 80571a9ea4ca (netfilter: ipset: Fix hash resizing with comments)
  
  	return 0;
  }
* Unmerged path net/netfilter/ipset/ip_set_hash_gen.h
