ipmi: Clean up some print operations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Corey Minyard <cminyard@mvista.com>
commit 106a846102b86a55359afaeec9b424928db7259c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/106a8461.failed

Get rid of all printfs, using dev_xxx() if a device is available,
pr_xxx() otherwise, and format long strings properly.

	Signed-off-by: Corey Minyard <cminyard@mvista.com>
(cherry picked from commit 106a846102b86a55359afaeec9b424928db7259c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/ipmi/ipmi_msghandler.c
diff --cc drivers/char/ipmi/ipmi_msghandler.c
index 23529b23ec40,c29d46bef6b3..000000000000
--- a/drivers/char/ipmi/ipmi_msghandler.c
+++ b/drivers/char/ipmi/ipmi_msghandler.c
@@@ -2942,12 -3044,13 +2942,11 @@@ static int ipmi_bmc_register(ipmi_smi_
  		goto out_put_bmc;
  	}
  
 -	if (intf_num == -1)
 -		intf_num = intf->intf_num;
 -	intf->my_dev_name = kasprintf(GFP_KERNEL, "ipmi%d", intf_num);
 +	intf->my_dev_name = kasprintf(GFP_KERNEL, "ipmi%d", ifnum);
  	if (!intf->my_dev_name) {
  		rv = -ENOMEM;
- 		printk(KERN_ERR
- 		       "ipmi_msghandler: allocate link from BMC: %d\n",
- 		       rv);
+ 		dev_err(intf->si_dev,
+ 			PFX "Unable to allocate link from BMC: %d\n", rv);
  		goto out_unlink1;
  	}
  
@@@ -3039,12 -3142,10 +3036,19 @@@ guid_handler(ipmi_smi_t intf, struct ip
  	}
  
  	if (msg->msg.data_len < 17) {
++<<<<<<< HEAD
 +		intf->bmc->guid_set = 0;
 +		printk(KERN_WARNING PFX
 +		       "guid_handler: The GUID response from the BMC was too"
 +		       " short, it was %d but should have been 17.  Assuming"
 +		       " GUID is not available.\n",
 +		       msg->msg.data_len);
++=======
+ 		bmc->dyn_guid_set = 0;
+ 		dev_warn(intf->si_dev,
+ 			 PFX "The GUID response from the BMC was too short, it was %d but should have been 17.  Assuming GUID is not available.\n",
+ 			 msg->msg.data_len);
++>>>>>>> 106a846102b8 (ipmi: Clean up some print operations)
  		goto out;
  	}
  
@@@ -3148,12 -3266,14 +3152,21 @@@ channel_handler(ipmi_smi_t intf, struc
  
  		if (rv) {
  			/* Got an error somehow, just give up. */
++<<<<<<< HEAD
 +			intf->curr_channel = IPMI_MAX_CHANNELS;
++=======
+ 			dev_warn(intf->si_dev,
+ 				 PFX "Error sending channel information for channel %d: %d\n",
+ 				 intf->curr_channel, rv);
+ 
+ 			intf->channel_list = intf->wchannels + set;
+ 			intf->channels_ready = true;
++>>>>>>> 106a846102b8 (ipmi: Clean up some print operations)
  			wake_up(&intf->waitq);
 +
 +			printk(KERN_WARNING PFX
 +			       "Error sending channel information: %d\n",
 +			       rv);
  		}
  	}
   out:
@@@ -4996,13 -5160,12 +5006,12 @@@ static int ipmi_init_msghandler(void
  		return rv;
  	}
  
- 	printk(KERN_INFO "ipmi message handler version "
- 	       IPMI_DRIVER_VERSION "\n");
+ 	pr_info("ipmi message handler version " IPMI_DRIVER_VERSION "\n");
  
 -#ifdef CONFIG_IPMI_PROC_INTERFACE
 +#ifdef CONFIG_PROC_FS
  	proc_ipmi_root = proc_mkdir("ipmi", NULL);
  	if (!proc_ipmi_root) {
- 	    printk(KERN_ERR PFX "Unable to create IPMI proc dir");
+ 	    pr_err(PFX "Unable to create IPMI proc dir");
  	    driver_unregister(&ipmidriver.driver);
  	    return -ENOMEM;
  	}
* Unmerged path drivers/char/ipmi/ipmi_msghandler.c
