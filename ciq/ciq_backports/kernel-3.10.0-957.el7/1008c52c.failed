x86/CPU: Add a microcode loader callback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] cpu: Add a microcode loader callback (Prarit Bhargava) [1568249]
Rebuild_FUZZ: 94.74%
commit-author Borislav Petkov <bp@suse.de>
commit 1008c52c09dcb23d93f8e0ea83a6246265d2cce0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/1008c52c.failed

Add a callback function which the microcode loader calls when microcode
has been updated to a newer revision. Do the callback only when no error
was encountered during loading.

	Tested-by: Ashok Raj <ashok.raj@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Ashok Raj <ashok.raj@intel.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Arjan van de Ven <arjan@linux.intel.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: David Woodhouse <dwmw2@infradead.org>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/20180216112640.11554-3-bp@alien8.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 1008c52c09dcb23d93f8e0ea83a6246265d2cce0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/processor.h
#	arch/x86/kernel/cpu/common.c
#	arch/x86/kernel/cpu/microcode/core.c
diff --cc arch/x86/include/asm/processor.h
index 40612f380030,b0ccd4847a58..000000000000
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@@ -1064,5 -976,6 +1064,10 @@@ bool xen_set_default_idle(void)
  #endif
  
  void stop_this_cpu(void *dummy);
++<<<<<<< HEAD
 +
++=======
+ void df_debug(struct pt_regs *regs, long error_code);
+ void microcode_check(void);
++>>>>>>> 1008c52c09dc (x86/CPU: Add a microcode loader callback)
  #endif /* _ASM_X86_PROCESSOR_H */
diff --cc arch/x86/kernel/cpu/common.c
index 49cb90f121df,84f1cd88608b..000000000000
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@@ -1602,6 -1727,35 +1602,36 @@@ void cpu_init(void
  	clear_all_debug_regs();
  	dbg_restore_debug_regs();
  
 -	fpu__init_cpu();
 -
 -	load_fixmap_gdt(cpu);
 +	fpu_init();
  }
  #endif
++<<<<<<< HEAD
++=======
+ 
+ static void bsp_resume(void)
+ {
+ 	if (this_cpu->c_bsp_resume)
+ 		this_cpu->c_bsp_resume(&boot_cpu_data);
+ }
+ 
+ static struct syscore_ops cpu_syscore_ops = {
+ 	.resume		= bsp_resume,
+ };
+ 
+ static int __init init_cpu_syscore(void)
+ {
+ 	register_syscore_ops(&cpu_syscore_ops);
+ 	return 0;
+ }
+ core_initcall(init_cpu_syscore);
+ 
+ /*
+  * The microcode loader calls this upon late microcode load to recheck features,
+  * only when microcode has been updated. Caller holds microcode_mutex and CPU
+  * hotplug lock.
+  */
+ void microcode_check(void)
+ {
+ 	perf_check_microcode();
+ }
++>>>>>>> 1008c52c09dc (x86/CPU: Add a microcode loader callback)
diff --cc arch/x86/kernel/cpu/microcode/core.c
index 1b81185d9250,aa1b9a422f2b..000000000000
--- a/arch/x86/kernel/cpu/microcode/core.c
+++ b/arch/x86/kernel/cpu/microcode/core.c
@@@ -391,9 -508,11 +391,14 @@@ static ssize_t reload_store(struct devi
  			    struct device_attribute *attr,
  			    const char *buf, size_t size)
  {
++<<<<<<< HEAD
++=======
+ 	enum ucode_state tmp_ret = UCODE_OK;
+ 	bool do_callback = false;
++>>>>>>> 1008c52c09dc (x86/CPU: Add a microcode loader callback)
  	unsigned long val;
 -	ssize_t ret = 0;
  	int cpu;
 +	ssize_t ret = 0, tmp_ret;
  
  	ret = kstrtoul(buf, 0, &val);
  	if (ret)
@@@ -406,17 -525,21 +411,32 @@@
  	mutex_lock(&microcode_mutex);
  	for_each_online_cpu(cpu) {
  		tmp_ret = reload_for_cpu(cpu);
 -		if (tmp_ret > UCODE_NFOUND) {
 +		if (tmp_ret != 0)
  			pr_warn("Error reloading microcode on CPU %d\n", cpu);
  
++<<<<<<< HEAD
 +		/* save retval of the first encountered reload error */
 +		if (!ret)
 +			ret = tmp_ret;
 +	}
 +	if (!ret) {
 +		perf_check_microcode();
 +		spec_ctrl_rescan_cpuid();
 +	}
++=======
+ 			/* set retval for the first encountered reload error */
+ 			if (!ret)
+ 				ret = -EINVAL;
+ 		}
+ 
+ 		if (tmp_ret == UCODE_UPDATED)
+ 			do_callback = true;
+ 	}
+ 
+ 	if (!ret && do_callback)
+ 		microcode_check();
+ 
++>>>>>>> 1008c52c09dc (x86/CPU: Add a microcode loader callback)
  	mutex_unlock(&microcode_mutex);
  	put_online_cpus();
  
* Unmerged path arch/x86/include/asm/processor.h
* Unmerged path arch/x86/kernel/cpu/common.c
* Unmerged path arch/x86/kernel/cpu/microcode/core.c
