crypto: algif_hash - Fix NULL hash crash with shash

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [crypto] algif_hash: Fix NULL hash crash with shash (Bruno Eduardo de Oliveira Meneguele) [1548921]
Rebuild_FUZZ: 88.17%
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit a8348bca2944d397a528772f5c0ccb47a8b58af4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/a8348bca.failed

Recently algif_hash has been changed to allow null hashes.  This
triggers a bug when used with an shash algorithm whereby it will
cause a crash during the digest operation.

This patch fixes it by avoiding the digest operation and instead
doing an init followed by a final which avoids the buggy code in
shash.

This patch also ensures that the result buffer is freed after an
error so that it is not returned as a genuine hash result on the
next recv call.

The shash/ahash wrapper code will be fixed later to handle this
case correctly.

Fixes: 493b2ed3f760 ("crypto: algif_hash - Handle NULL hashes correctly")
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
	Tested-by: Laura Abbott <labbott@redhat.com>
(cherry picked from commit a8348bca2944d397a528772f5c0ccb47a8b58af4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	crypto/algif_hash.c
diff --cc crypto/algif_hash.c
index f3f31cd079cc,05e21b464433..000000000000
--- a/crypto/algif_hash.c
+++ b/crypto/algif_hash.c
@@@ -172,18 -207,33 +172,42 @@@ static int hash_recvmsg(struct kiocb *u
  		msg->msg_flags |= MSG_TRUNC;
  
  	lock_sock(sk);
++<<<<<<< HEAD
 +	if (ctx->more) {
++=======
+ 	result = ctx->result;
+ 	err = hash_alloc_result(sk, ctx);
+ 	if (err)
+ 		goto unlock;
+ 
+ 	ahash_request_set_crypt(&ctx->req, NULL, ctx->result, 0);
+ 
+ 	if (!result) {
+ 		err = af_alg_wait_for_completion(
+ 				crypto_ahash_init(&ctx->req),
+ 				&ctx->completion);
+ 		if (err)
+ 			goto unlock;
+ 	}
+ 
+ 	if (!result || ctx->more) {
++>>>>>>> a8348bca2944 (crypto: algif_hash - Fix NULL hash crash with shash)
  		ctx->more = 0;
 +		ahash_request_set_crypt(&ctx->req, NULL, ctx->result, 0);
  		err = af_alg_wait_for_completion(crypto_ahash_final(&ctx->req),
  						 &ctx->completion);
  		if (err)
  			goto unlock;
  	}
  
++<<<<<<< HEAD
 +	err = memcpy_toiovec(msg->msg_iov, ctx->result, len);
++=======
+ 	err = memcpy_to_msg(msg, ctx->result, len);
++>>>>>>> a8348bca2944 (crypto: algif_hash - Fix NULL hash crash with shash)
  
  unlock:
+ 	hash_free_result(sk, ctx);
  	release_sock(sk);
  
  	return err ?: len;
* Unmerged path crypto/algif_hash.c
