dm log writes: fix bug with too large bios

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Mikulas Patocka <mpatocka@redhat.com>
commit 7efb367320f56fc4d549875b6f3a6940018ef2e5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/7efb3673.failed

bio_alloc() can allocate a bio with at most BIO_MAX_PAGES (256) vector
entries.  However, the incoming bio may have more vector entries if it
was allocated by other means.  For example, bcache submits bios with
more than BIO_MAX_PAGES entries.  This results in bio_alloc() failure.

To avoid the failure, change the code so that it allocates bio with at
most BIO_MAX_PAGES entries.  If the incoming bio has more entries,
bio_add_page() will fail and a new bio will be allocated - the code that
handles bio_add_page() failure already exists in the dm-log-writes
target.

	Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
	Reviewed-by: Josef Bacik <jbacik@fb,com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
	Cc: stable@vger.kernel.org # v4.1+
(cherry picked from commit 7efb367320f56fc4d549875b6f3a6940018ef2e5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-log-writes.c
diff --cc drivers/md/dm-log-writes.c
index 441441fdab2a,ba24f4f37efc..000000000000
--- a/drivers/md/dm-log-writes.c
+++ b/drivers/md/dm-log-writes.c
@@@ -281,8 -281,8 +281,13 @@@ static int log_one_block(struct log_wri
  				   block->vecs[i].bv_len, 0);
  		if (ret != block->vecs[i].bv_len) {
  			atomic_inc(&lc->io_blocks);
++<<<<<<< HEAD
 +			submit_bio(WRITE, bio);
 +			bio = bio_alloc(GFP_KERNEL, block->vec_cnt - i);
++=======
+ 			submit_bio(bio);
+ 			bio = bio_alloc(GFP_KERNEL, min(block->vec_cnt - i, BIO_MAX_PAGES));
++>>>>>>> 7efb367320f5 (dm log writes: fix bug with too large bios)
  			if (!bio) {
  				DMERR("Couldn't alloc log bio");
  				goto error;
* Unmerged path drivers/md/dm-log-writes.c
