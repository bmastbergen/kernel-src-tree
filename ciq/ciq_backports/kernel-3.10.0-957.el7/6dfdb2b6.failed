pmem: Switch to copy_to_iter_mcsafe()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit 6dfdb2b6d877d654c8c7b59d7166f4d672fba4e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6dfdb2b6.failed

Use the machine check safe version of copy_to_iter() for the
->copy_to_iter() operation published by the pmem driver.

	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 6dfdb2b6d877d654c8c7b59d7166f4d672fba4e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/pmem.c
diff --cc drivers/nvdimm/pmem.c
index 3cb343008661,6d3da8c92868..000000000000
--- a/drivers/nvdimm/pmem.c
+++ b/drivers/nvdimm/pmem.c
@@@ -230,10 -258,16 +230,20 @@@ static long pmem_dax_direct_access(stru
  	return __pmem_direct_access(pmem, pgoff, nr_pages, kaddr, pfn);
  }
  
 -static size_t pmem_copy_from_iter(struct dax_device *dax_dev, pgoff_t pgoff,
 -		void *addr, size_t bytes, struct iov_iter *i)
 +static void pmem_dax_flush(struct dax_device *dax_dev, pgoff_t pgoff,
 +		void *addr, size_t size)
  {
++<<<<<<< HEAD
 +	wb_cache_pmem(addr, size);
++=======
+ 	return copy_from_iter_flushcache(addr, bytes, i);
+ }
+ 
+ static size_t pmem_copy_to_iter(struct dax_device *dax_dev, pgoff_t pgoff,
+ 		void *addr, size_t bytes, struct iov_iter *i)
+ {
+ 	return copy_to_iter_mcsafe(addr, bytes, i);
++>>>>>>> 6dfdb2b6d877 (pmem: Switch to copy_to_iter_mcsafe())
  }
  
  static const struct dax_operations pmem_dax_ops = {
* Unmerged path drivers/nvdimm/pmem.c
