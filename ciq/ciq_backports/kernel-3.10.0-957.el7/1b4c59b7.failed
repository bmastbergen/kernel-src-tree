target: fix potential race window in target_sess_cmd_list_waiting()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [target] fix potential race window in target_sess_cmd_list_waiting() (Maurizio Lombardi) [1585081]
Rebuild_FUZZ: 93.65%
commit-author Hannes Reinecke <hare@suse.de>
commit 1b4c59b7a1d0b9d8019254a5f2e35b2663f49a9e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/1b4c59b7.failed

target_sess_cmd_list_waiting() might hit on a condition where
the kref for the command is already 0, but the destructor has
not been called yet (or is stuck in waiting for a spin lock).
Rather than leaving the command on the list we should explicitly
remove it to avoid race issues later on.

	Signed-off-by: Hannes Reinecke <hare@suse.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 1b4c59b7a1d0b9d8019254a5f2e35b2663f49a9e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_transport.c
diff --cc drivers/target/target_core_transport.c
index 96d74a97798a,7dfefd66df93..000000000000
--- a/drivers/target/target_core_transport.c
+++ b/drivers/target/target_core_transport.c
@@@ -2611,8 -2534,12 +2611,17 @@@ int target_get_sess_cmd(struct se_cmd *
  	 * fabric acknowledgement that requires two target_put_sess_cmd()
  	 * invocations before se_cmd descriptor release.
  	 */
++<<<<<<< HEAD
 +	if (ack_kref)
 +		kref_get(&se_cmd->cmd_kref);
++=======
+ 	if (ack_kref) {
+ 		if (!kref_get_unless_zero(&se_cmd->cmd_kref))
+ 			return -EINVAL;
+ 
+ 		se_cmd->se_cmd_flags |= SCF_ACK_KREF;
+ 	}
++>>>>>>> 1b4c59b7a1d0 (target: fix potential race window in target_sess_cmd_list_waiting())
  
  	spin_lock_irqsave(&se_sess->sess_cmd_lock, flags);
  	if (se_sess->sess_tearing_down) {
* Unmerged path drivers/target/target_core_transport.c
