libnvdimm, dax: fix 1GB-aligned namespaces vs physical misalignment

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit 41fce90f26333c4fa82e8e43b9ace86c4e8a0120
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/41fce90f.failed

The following namespace configuration attempt:

    # ndctl create-namespace -e namespace0.0 -m devdax -a 1G -f
    libndctl: ndctl_dax_enable: dax0.1: failed to enable
      Error: namespace0.0: failed to enable

    failed to reconfigure namespace: No such device or address

...fails when the backing memory range is not physically aligned to 1G:

    # cat /proc/iomem | grep Persistent
    210000000-30fffffff : Persistent Memory (legacy)

In the above example the 4G persistent memory range starts and ends on a
256MB boundary.

We handle this case correctly when needing to handle cases that violate
section alignment (128MB) collisions against "System RAM", and we simply
need to extend that padding/truncation for the 1GB alignment use case.

	Cc: <stable@vger.kernel.org>
Fixes: 315c562536c4 ("libnvdimm, pfn: add 'align' attribute...")
Reported-and-tested-by: Jane Chu <jane.chu@oracle.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 41fce90f26333c4fa82e8e43b9ace86c4e8a0120)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/pfn_devs.c
diff --cc drivers/nvdimm/pfn_devs.c
index e7b9c07370c5,2adada1a5855..000000000000
--- a/drivers/nvdimm/pfn_devs.c
+++ b/drivers/nvdimm/pfn_devs.c
@@@ -636,9 -643,13 +642,17 @@@ static int nd_pfn_init(struct nd_pfn *n
  
  	start = nsio->res.start;
  	size = PHYS_SECTION_ALIGN_UP(start + size) - start;
++<<<<<<< HEAD
 +	if (region_intersects_ram(start, size) == REGION_MIXED) {
++=======
+ 	if (region_intersects(start, size, IORESOURCE_SYSTEM_RAM,
+ 				IORES_DESC_NONE) == REGION_MIXED
+ 			|| !IS_ALIGNED(start + resource_size(&nsio->res),
+ 				nd_pfn->align)) {
++>>>>>>> 41fce90f2633 (libnvdimm, dax: fix 1GB-aligned namespaces vs physical misalignment)
  		size = resource_size(&nsio->res);
- 		end_trunc = start + size - PHYS_SECTION_ALIGN_DOWN(start + size);
+ 		end_trunc = start + size - phys_pmem_align_down(nd_pfn,
+ 				start + size);
  	}
  
  	if (start_pad + end_trunc)
* Unmerged path drivers/nvdimm/pfn_devs.c
