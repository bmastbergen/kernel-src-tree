bpf: fix range arithmetic for bpf map access

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Josef Bacik <jbacik@fb.com>
commit f23cc643f9baec7f71f2b74692da3cf03abbbfda
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/f23cc643.failed

I made some invalid assumptions with BPF_AND and BPF_MOD that could result in
invalid accesses to bpf map entries.  Fix this up by doing a few things

1) Kill BPF_MOD support.  This doesn't actually get used by the compiler in real
life and just adds extra complexity.

2) Fix the logic for BPF_AND, don't allow AND of negative numbers and set the
minimum value to 0 for positive AND's.

3) Don't do operations on the ranges if they are set to the limits, as they are
by definition undefined, and allowing arithmetic operations on those values
could make them appear valid when they really aren't.

This fixes the testcase provided by Jann as well as a few other theoretical
problems.

	Reported-by: Jann Horn <jannh@google.com>
	Signed-off-by: Josef Bacik <jbacik@fb.com>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f23cc643f9baec7f71f2b74692da3cf03abbbfda)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/bpf_verifier.h
#	kernel/bpf/verifier.c
* Unmerged path include/linux/bpf_verifier.h
* Unmerged path kernel/bpf/verifier.c
* Unmerged path include/linux/bpf_verifier.h
* Unmerged path kernel/bpf/verifier.c
