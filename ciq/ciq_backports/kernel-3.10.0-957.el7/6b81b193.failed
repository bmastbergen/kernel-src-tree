hv_netvsc: Fix napi reschedule while receive completion is busy

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Haiyang Zhang <haiyangz@microsoft.com>
commit 6b81b193b83e87da1ea13217d684b54fccf8ee8a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6b81b193.failed

If out ring is full temporarily and receive completion cannot go out,
we may still need to reschedule napi if certain conditions are met.
Otherwise the napi poll might be stopped forever, and cause network
disconnect.

Fixes: 7426b1a51803 ("netvsc: optimize receive completions")
	Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6b81b193b83e87da1ea13217d684b54fccf8ee8a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc.c
diff --cc drivers/net/hyperv/netvsc.c
index 1741fecf234a,31c3d77b4733..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -1244,18 -1286,21 +1245,28 @@@ int netvsc_poll(struct napi_struct *nap
  		nvchan->desc = hv_pkt_iter_next(channel, nvchan->desc);
  	}
  
- 	/* If send of pending receive completions suceeded
- 	 *   and did not exhaust NAPI budget this time
- 	 *   and not doing busy poll
+ 	/* Send any pending receive completions */
+ 	ret = send_recv_completions(ndev, net_device, nvchan);
+ 
+ 	/* If it did not exhaust NAPI budget this time
+ 	 *  and not doing busy poll
  	 * then re-enable host interrupts
- 	 *     and reschedule if ring is not empty.
+ 	 *  and reschedule if ring is not empty
+ 	 *   or sending receive completion failed.
  	 */
++<<<<<<< HEAD
 +	if (send_recv_completions(ndev, net_device, nvchan) == 0 &&
 +	    work_done < budget &&
 +	    netvsc_napi_complete_done(napi, work_done) &&
 +	    hv_end_read(&channel->inbound)) {
++=======
+ 	if (work_done < budget &&
+ 	    napi_complete_done(napi, work_done) &&
+ 	    (ret || hv_end_read(&channel->inbound)) &&
+ 	    napi_schedule_prep(napi)) {
++>>>>>>> 6b81b193b83e (hv_netvsc: Fix napi reschedule while receive completion is busy)
  		hv_begin_read(&channel->inbound);
 -		__napi_schedule(napi);
 +		napi_reschedule(napi);
  	}
  
  	/* Driver may overshoot since multiple packets per descriptor */
* Unmerged path drivers/net/hyperv/netvsc.c
