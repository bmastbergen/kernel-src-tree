net: Refactor path selection in __ip_route_output_key_hash

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] Refactor path selection in __ip_route_output_key_hash (Hangbin Liu) [1511351]
Rebuild_FUZZ: 95.50%
commit-author David Ahern <dsa@cumulusnetworks.com>
commit 3ce58d84358c7b477811b5100152fad848f936fc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3ce58d84.failed

VRF device needs the same path selection following lookup to set source
address. Rather than duplicating code, move existing code into a
function that is exported to modules.

Code move only; no functional change.

	Signed-off-by: David Ahern <dsa@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3ce58d84358c7b477811b5100152fad848f936fc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/route.c
diff --cc net/ipv4/route.c
index c62c5860782f,54e6f456a760..000000000000
--- a/net/ipv4/route.c
+++ b/net/ipv4/route.c
@@@ -2308,22 -2238,7 +2308,26 @@@ struct rtable *__ip_route_output_key_ha
  		goto make_route;
  	}
  
++<<<<<<< HEAD
 +#ifdef CONFIG_IP_ROUTE_MULTIPATH
 +	if (res.fi->fib_nhs > 1 && fl4->flowi4_oif == 0) {
 +		if (mp_hash < 0)
 +			mp_hash = get_hash_from_flowi4(fl4) >> 1;
 +
 +		fib_select_multipath(&res, mp_hash);
 +	}
 +	else
 +#endif
 +	if (!res.prefixlen &&
 +	    res.table->tb_num_default > 1 &&
 +	    res.type == RTN_UNICAST && !fl4->flowi4_oif)
 +		fib_select_default(&res);
 +
 +	if (!fl4->saddr)
 +		fl4->saddr = FIB_RES_PREFSRC(net, res);
++=======
+ 	fib_select_path(net, &res, fl4, mp_hash);
++>>>>>>> 3ce58d84358c (net: Refactor path selection in __ip_route_output_key_hash)
  
  	dev_out = FIB_RES_DEV(res);
  	fl4->flowi4_oif = dev_out->ifindex;
diff --git a/include/net/ip_fib.h b/include/net/ip_fib.h
index d6ffc0f1a3d4..d9e634a39109 100644
--- a/include/net/ip_fib.h
+++ b/include/net/ip_fib.h
@@ -388,6 +388,8 @@ static inline int fib_multipath_hash(__be32 saddr, __be32 daddr)
 }
 
 void fib_select_multipath(struct fib_result *res, int hash);
+void fib_select_path(struct net *net, struct fib_result *res,
+		     struct flowi4 *fl4, int mp_hash);
 
 /* Exported by fib_trie.c */
 void fib_trie_init(void);
diff --git a/net/ipv4/fib_semantics.c b/net/ipv4/fib_semantics.c
index 8a694b72dc21..9b98dcdc3d6a 100644
--- a/net/ipv4/fib_semantics.c
+++ b/net/ipv4/fib_semantics.c
@@ -1543,3 +1543,24 @@ void fib_select_multipath(struct fib_result *res, int hash)
 	res->nh_sel = 0;
 }
 #endif
+
+void fib_select_path(struct net *net, struct fib_result *res,
+		     struct flowi4 *fl4, int mp_hash)
+{
+#ifdef CONFIG_IP_ROUTE_MULTIPATH
+	if (res->fi->fib_nhs > 1 && fl4->flowi4_oif == 0) {
+		if (mp_hash < 0)
+			mp_hash = fib_multipath_hash(fl4->saddr, fl4->daddr);
+		fib_select_multipath(res, mp_hash);
+	}
+	else
+#endif
+	if (!res->prefixlen &&
+	    res->table->tb_num_default > 1 &&
+	    res->type == RTN_UNICAST && !fl4->flowi4_oif)
+		fib_select_default(fl4, res);
+
+	if (!fl4->saddr)
+		fl4->saddr = FIB_RES_PREFSRC(net, *res);
+}
+EXPORT_SYMBOL_GPL(fib_select_path);
* Unmerged path net/ipv4/route.c
