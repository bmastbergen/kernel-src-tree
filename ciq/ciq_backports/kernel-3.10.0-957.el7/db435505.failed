mmc: block: inline the command abort and start new goto:s

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [mmc] block: inline the command abort and start new goto:s (Gopal Tiwari) [1549495]
Rebuild_FUZZ: 95.41%
commit-author Linus Walleij <linus.walleij@linaro.org>
commit db435505b561c1ca7b72c646dbc060f0c674360c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/db435505.failed

The goto statements sprinkled over the mmc_blk_issue_rw_rq()
function has grown over the years and makes the code pretty hard
to read.

Inline the calls such that:

goto cmd_abort; ->
mmc_blk_rw_cmd_abort(card, req);
mmc_blk_rw_start_new(mq, card, rqc);
return;

goto start_new_req; ->
mmc_blk_rw_start_new(mq, card, rqc);
return;

After this it is more clear how we exit the do {} while
loop in this function, and it gets possible to split the
code apart.

	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit db435505b561c1ca7b72c646dbc060f0c674360c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/block.c
diff --cc drivers/mmc/core/block.c
index d7cc8dd6684d,43f1f1b24b83..000000000000
--- a/drivers/mmc/core/block.c
+++ b/drivers/mmc/core/block.c
@@@ -1730,32 -1774,9 +1746,35 @@@ static int mmc_blk_issue_rw_rq(struct m
  			mq_rq->brq.retune_retry_done = retune_retry_done;
  		}
  	} while (ret);
++<<<<<<< HEAD
 +
 +	return 1;
 +
 + cmd_abort:
 +	if (mmc_card_removed(card))
 +		req->cmd_flags |= REQ_QUIET;
 +	while (ret)
 +		ret = blk_end_request(req, -EIO,
 +				blk_rq_cur_bytes(req));
 +
 + start_new_req:
 +	if (rqc) {
 +		if (mmc_card_removed(card)) {
 +			rqc->cmd_flags |= REQ_QUIET;
 +			blk_end_request_all(rqc, -EIO);
 +		} else {
 +			mmc_blk_rw_rq_prep(mq->mqrq_cur, card, 0, mq);
 +			mmc_start_req(card->host,
 +				      &mq->mqrq_cur->mmc_active, NULL);
 +		}
 +	}
 +
 +	return 0;
++=======
++>>>>>>> db435505b561 (mmc: block: inline the command abort and start new goto:s)
  }
  
 -void mmc_blk_issue_rq(struct mmc_queue *mq, struct request *req)
 +int mmc_blk_issue_rq(struct mmc_queue *mq, struct request *req)
  {
  	int ret;
  	struct mmc_blk_data *md = mq->blkdata;
* Unmerged path drivers/mmc/core/block.c
