libata: remove ATA_FLAG_LOWTAG

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Tejun Heo <tj@kernel.org>
commit 3a02824396c1df1db422d067b0fdcac724f44dd6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3a028243.failed

sata_sil24 for some reason pukes when tags are allocated round-robin
which helps tag ordered controllers.  To work around the issue,
72dd299d5039 ("libata: allow sata_sil24 to opt-out of tag ordered
submission") introduced ATA_FLAG_LOWTAG which tells libata tag
allocation to do lowest-first.

However, with the recent switch to blk-mq tag allocation, the liata
tag allocation code path is no longer used and the workaround is now
implemented in the block layer and selected by setting
scsi_host_template->tag_alloc_policy to BLK_TAG_ALLOC_FIFO.  See
9269e23496dd ("libata: make sata_sil24 use fifo tag allocator").

This leaves ATA_FLAG_LOWTAG withoout any actual user.  Remove it.

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Cc: Shaohua Li <shli@fb.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 3a02824396c1df1db422d067b0fdcac724f44dd6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ata/libata-scsi.c
diff --cc drivers/ata/libata-scsi.c
index c16221998a89,fd9be1756f0d..000000000000
--- a/drivers/ata/libata-scsi.c
+++ b/drivers/ata/libata-scsi.c
@@@ -4217,3 -4233,28 +4217,31 @@@ int ata_sas_queuecmd(struct scsi_cmnd *
  	return rc;
  }
  EXPORT_SYMBOL_GPL(ata_sas_queuecmd);
++<<<<<<< HEAD
++=======
+ 
+ int ata_sas_allocate_tag(struct ata_port *ap)
+ {
+ 	unsigned int max_queue = ap->host->n_tags;
+ 	unsigned int i, tag;
+ 
+ 	for (i = 0, tag = ap->sas_last_tag + 1; i < max_queue; i++, tag++) {
+ 		tag = tag < max_queue ? tag : 0;
+ 
+ 		/* the last tag is reserved for internal command. */
+ 		if (tag == ATA_TAG_INTERNAL)
+ 			continue;
+ 
+ 		if (!test_and_set_bit(tag, &ap->sas_tag_allocated)) {
+ 			ap->sas_last_tag = tag;
+ 			return tag;
+ 		}
+ 	}
+ 	return -1;
+ }
+ 
+ void ata_sas_free_tag(unsigned int tag, struct ata_port *ap)
+ {
+ 	clear_bit(tag, &ap->sas_tag_allocated);
+ }
++>>>>>>> 3a02824396c1 (libata: remove ATA_FLAG_LOWTAG)
* Unmerged path drivers/ata/libata-scsi.c
diff --git a/drivers/ata/sata_sil24.c b/drivers/ata/sata_sil24.c
index 4d238bd3f0c7..04e4b64ab999 100644
--- a/drivers/ata/sata_sil24.c
+++ b/drivers/ata/sata_sil24.c
@@ -246,7 +246,7 @@ enum {
 	/* host flags */
 	SIL24_COMMON_FLAGS	= ATA_FLAG_SATA | ATA_FLAG_PIO_DMA |
 				  ATA_FLAG_NCQ | ATA_FLAG_ACPI_SATA |
-				  ATA_FLAG_AN | ATA_FLAG_PMP | ATA_FLAG_LOWTAG,
+				  ATA_FLAG_AN | ATA_FLAG_PMP,
 	SIL24_FLAG_PCIX_IRQ_WOC	= (1 << 24), /* IRQ loss errata on PCI-X */
 
 	IRQ_STAT_4PORTS		= 0xf,
diff --git a/include/linux/libata.h b/include/linux/libata.h
index a582960a428c..d2685754700c 100644
--- a/include/linux/libata.h
+++ b/include/linux/libata.h
@@ -232,7 +232,6 @@ enum {
 	ATA_FLAG_SW_ACTIVITY	= (1 << 22), /* driver supports sw activity
 					      * led */
 	ATA_FLAG_NO_DIPM	= (1 << 23), /* host not happy with DIPM */
-	ATA_FLAG_LOWTAG		= (1 << 24), /* host wants lowest available tag */
 
 	/* bits 24:31 of ap->flags are reserved for LLD specific flags */
 
