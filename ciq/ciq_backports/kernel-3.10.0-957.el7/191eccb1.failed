powerpc/pseries: Add H_GET_CPU_CHARACTERISTICS flags & wrapper

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [powerpc] pseries: Add H_GET_CPU_CHARACTERISTICS flags & wrapper (Mauricio Oliveira) [1553927]
Rebuild_FUZZ: 93.10%
commit-author Michael Neuling <mikey@neuling.org>
commit 191eccb1580939fb0d47deb405b82a85b0379070
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/191eccb1.failed

A new hypervisor call has been defined to communicate various
characteristics of the CPU to guests. Add definitions for the hcall
number, flags and a wrapper function.

	Signed-off-by: Michael Neuling <mikey@neuling.org>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 191eccb1580939fb0d47deb405b82a85b0379070)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/hvcall.h
diff --cc arch/powerpc/include/asm/hvcall.h
index 89dc10fb9cc2,f0461618bf7b..000000000000
--- a/arch/powerpc/include/asm/hvcall.h
+++ b/arch/powerpc/include/asm/hvcall.h
@@@ -312,18 -326,31 +312,41 @@@
  #define H_SET_MODE_RESOURCE_ADDR_TRANS_MODE	3
  #define H_SET_MODE_RESOURCE_LE			4
  
 -/* Values for argument to H_SIGNAL_SYS_RESET */
 -#define H_SIGNAL_SYS_RESET_ALL			-1
 -#define H_SIGNAL_SYS_RESET_ALL_OTHERS		-2
 -/* >= 0 values are CPU number */
 -
 +/* H_GET_CPU_CHARACTERISTICS return values */
 +#define H_GET_CPU_CHAR_CHAR_ORI31_SPEC_BAR	PPC_BIT(0)
 +#define H_GET_CPU_CHAR_CHAR_BCCTR_SERIAL	PPC_BIT(1)
 +#define H_GET_CPU_CHAR_CHAR_ORI30_L1_FLUSH	PPC_BIT(2)
 +#define H_GET_CPU_CHAR_CHAR_MTTRIG2_L1_FLUSH	PPC_BIT(3)
 +#define H_GET_CPU_CHAR_CHAR_L1D_PRIVATE		PPC_BIT(4)
 +#define H_GET_CPU_CHAR_CHAR_BC_HINTS_HONORED	PPC_BIT(5)
 +#define H_GET_CPU_CHAR_CHAR_MTTRID01_THR_CFG	PPC_BIT(6)
 +
++<<<<<<< HEAD
 +#define H_GET_CPU_CHAR_BEHAV_FAV_SEC_VS_PERF	PPC_BIT(0)
 +#define H_GET_CPU_CHAR_BEHAV_L1_FLUSH_LOW_PRIV	PPC_BIT(1)
 +#define H_GET_CPU_CHAR_BEHAV_SPEC_BAR_BNDS_CHK	PPC_BIT(2)
++=======
+ /* H_GET_CPU_CHARACTERISTICS return values */
+ #define H_CPU_CHAR_SPEC_BAR_ORI31	(1ull << 63) // IBM bit 0
+ #define H_CPU_CHAR_BCCTRL_SERIALISED	(1ull << 62) // IBM bit 1
+ #define H_CPU_CHAR_L1D_FLUSH_ORI30	(1ull << 61) // IBM bit 2
+ #define H_CPU_CHAR_L1D_FLUSH_TRIG2	(1ull << 60) // IBM bit 3
+ #define H_CPU_CHAR_L1D_THREAD_PRIV	(1ull << 59) // IBM bit 4
+ 
+ #define H_CPU_BEHAV_FAVOUR_SECURITY	(1ull << 63) // IBM bit 0
+ #define H_CPU_BEHAV_L1D_FLUSH_PR	(1ull << 62) // IBM bit 1
+ #define H_CPU_BEHAV_BNDS_CHK_SPEC_BAR	(1ull << 61) // IBM bit 2
+ 
+ /* Flag values used in H_REGISTER_PROC_TBL hcall */
+ #define PROC_TABLE_OP_MASK	0x18
+ #define PROC_TABLE_DEREG	0x10
+ #define PROC_TABLE_NEW		0x18
+ #define PROC_TABLE_TYPE_MASK	0x06
+ #define PROC_TABLE_HPT_SLB	0x00
+ #define PROC_TABLE_HPT_PT	0x02
+ #define PROC_TABLE_RADIX	0x04
+ #define PROC_TABLE_GTSE		0x01
++>>>>>>> 191eccb15809 (powerpc/pseries: Add H_GET_CPU_CHARACTERISTICS flags & wrapper)
  
  #ifndef __ASSEMBLY__
  
@@@ -431,37 -448,10 +454,44 @@@ static inline unsigned int get_longbusy
  	}
  }
  
++<<<<<<< HEAD
 +#ifdef CONFIG_PPC_PSERIES
 +extern int CMO_PrPSP;
 +extern int CMO_SecPSP;
 +extern unsigned long CMO_PageSize;
 +
 +static inline int cmo_get_primary_psp(void)
 +{
 +	return CMO_PrPSP;
 +}
 +
 +static inline int cmo_get_secondary_psp(void)
 +{
 +	return CMO_SecPSP;
 +}
 +
 +static inline unsigned long cmo_get_page_size(void)
 +{
 +	return CMO_PageSize;
 +}
 +
 +extern long pSeries_enable_reloc_on_exc(void);
 +extern long pSeries_disable_reloc_on_exc(void);
 +
 +extern long pseries_big_endian_exceptions(void);
 +
 +#else
 +
 +#define pSeries_enable_reloc_on_exc()  do {} while (0)
 +#define pSeries_disable_reloc_on_exc() do {} while (0)
 +
 +#endif /* CONFIG_PPC_PSERIES */
++=======
+ struct h_cpu_char_result {
+ 	u64 character;
+ 	u64 behaviour;
+ };
++>>>>>>> 191eccb15809 (powerpc/pseries: Add H_GET_CPU_CHARACTERISTICS flags & wrapper)
  
  #endif /* __ASSEMBLY__ */
  #endif /* __KERNEL__ */
* Unmerged path arch/powerpc/include/asm/hvcall.h
diff --git a/arch/powerpc/include/asm/plpar_wrappers.h b/arch/powerpc/include/asm/plpar_wrappers.h
index a5cd2d39d544..0516c1d4ae87 100644
--- a/arch/powerpc/include/asm/plpar_wrappers.h
+++ b/arch/powerpc/include/asm/plpar_wrappers.h
@@ -351,4 +351,18 @@ static inline long plpar_get_cpu_characteristics(unsigned long *character,
 	return rc;
 }
 
+static inline long plpar_get_cpu_characteristics(struct h_cpu_char_result *p)
+{
+	unsigned long retbuf[PLPAR_HCALL_BUFSIZE];
+	long rc;
+
+	rc = plpar_hcall(H_GET_CPU_CHARACTERISTICS, retbuf);
+	if (rc == H_SUCCESS) {
+		p->character = retbuf[0];
+		p->behaviour = retbuf[1];
+	}
+
+	return rc;
+}
+
 #endif /* _ASM_POWERPC_PLPAR_WRAPPERS_H */
