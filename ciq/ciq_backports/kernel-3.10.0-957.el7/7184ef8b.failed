MD: fix sleep in atomic

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [md] fix sleep in atomic (Nigel Croxon) [1494474]
Rebuild_FUZZ: 90.48%
commit-author Shaohua Li <shli@fb.com>
commit 7184ef8bab0cb865c3cea9dd1a675771145df0af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/7184ef8b.failed

bioset_free() will take a mutex, so can't get called with spinlock hold.

Fix: 5a85071c2cbc(md: use a separate bio_set for synchronous IO.)
	Cc: NeilBrown <neilb@suse.com>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit 7184ef8bab0cb865c3cea9dd1a675771145df0af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
diff --cc drivers/md/md.c
index 803a9346c3dc,66f6b928a80b..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -526,7 -475,7 +526,11 @@@ static void mddev_delayed_delete(struc
  
  static void mddev_put(struct mddev *mddev)
  {
++<<<<<<< HEAD
 +	struct bio_set *bs = NULL;
++=======
+ 	struct bio_set *bs = NULL, *sync_bs = NULL;
++>>>>>>> 7184ef8bab0c (MD: fix sleep in atomic)
  
  	if (!atomic_dec_and_lock(&mddev->active, &all_mddevs_lock))
  		return;
@@@ -536,7 -485,9 +540,11 @@@
  		 * so destroy it */
  		list_del_init(&mddev->all_mddevs);
  		bs = mddev->bio_set;
++<<<<<<< HEAD
++=======
+ 		sync_bs = mddev->sync_set;
++>>>>>>> 7184ef8bab0c (MD: fix sleep in atomic)
  		mddev->bio_set = NULL;
 -		mddev->sync_set = NULL;
  		if (mddev->gendisk) {
  			/* We did a probe so need to clean up.  Call
  			 * queue_work inside the spinlock so that
@@@ -551,6 -502,8 +559,11 @@@
  	spin_unlock(&all_mddevs_lock);
  	if (bs)
  		bioset_free(bs);
++<<<<<<< HEAD
++=======
+ 	if (sync_bs)
+ 		bioset_free(sync_bs);
++>>>>>>> 7184ef8bab0c (MD: fix sleep in atomic)
  }
  
  static void md_safemode_timeout(unsigned long data);
* Unmerged path drivers/md/md.c
