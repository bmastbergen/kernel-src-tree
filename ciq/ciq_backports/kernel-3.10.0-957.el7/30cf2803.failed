mmc: sdhci-pci: Let suspend/resume callbacks replace default callbacks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [mmc] sdhci-pci: Let suspend/resume callbacks replace default callbacks (Gopal Tiwari) [1549495]
Rebuild_FUZZ: 96.30%
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit 30cf2803b268f2bcce91fbaa19cee6d04b14bd86
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/30cf2803.failed

The suspend / resume callbacks lack the flexibility to allow a device to
specify a different function entirely. Change them around so that device
functions are called directly and they in turn can call the default
implementations if needed.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
	Tested-by: Ludovic Desroches <ludovic.desroches@microchip.com>
(cherry picked from commit 30cf2803b268f2bcce91fbaa19cee6d04b14bd86)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci-pci-core.c
#	drivers/mmc/host/sdhci-pci.h
diff --cc drivers/mmc/host/sdhci-pci-core.c
index b63410c15e1c,5ed8369704fd..000000000000
--- a/drivers/mmc/host/sdhci-pci-core.c
+++ b/drivers/mmc/host/sdhci-pci-core.c
@@@ -36,11 -36,89 +36,93 @@@
  static int sdhci_pci_enable_dma(struct sdhci_host *host);
  static void sdhci_pci_set_bus_width(struct sdhci_host *host, int width);
  static void sdhci_pci_hw_reset(struct sdhci_host *host);
 +static int sdhci_pci_select_drive_strength(struct sdhci_host *host,
 +					   struct mmc_card *card,
 +					   unsigned int max_dtr, int host_drv,
 +					   int card_drv, int *drv_type);
  
+ #ifdef CONFIG_PM_SLEEP
+ static int __sdhci_pci_suspend_host(struct sdhci_pci_chip *chip)
+ {
+ 	int i, ret;
+ 
+ 	for (i = 0; i < chip->num_slots; i++) {
+ 		struct sdhci_pci_slot *slot = chip->slots[i];
+ 		struct sdhci_host *host;
+ 
+ 		if (!slot)
+ 			continue;
+ 
+ 		host = slot->host;
+ 
+ 		if (chip->pm_retune && host->tuning_mode != SDHCI_TUNING_MODE_3)
+ 			mmc_retune_needed(host->mmc);
+ 
+ 		ret = sdhci_suspend_host(host);
+ 		if (ret)
+ 			goto err_pci_suspend;
+ 
+ 		if (host->mmc->pm_flags & MMC_PM_WAKE_SDIO_IRQ)
+ 			sdhci_enable_irq_wakeups(host);
+ 	}
+ 
+ 	return 0;
+ 
+ err_pci_suspend:
+ 	while (--i >= 0)
+ 		sdhci_resume_host(chip->slots[i]->host);
+ 	return ret;
+ }
+ 
+ static int sdhci_pci_init_wakeup(struct sdhci_pci_chip *chip)
+ {
+ 	mmc_pm_flag_t pm_flags = 0;
+ 	int i;
+ 
+ 	for (i = 0; i < chip->num_slots; i++) {
+ 		struct sdhci_pci_slot *slot = chip->slots[i];
+ 
+ 		if (slot)
+ 			pm_flags |= slot->host->mmc->pm_flags;
+ 	}
+ 
+ 	return device_init_wakeup(&chip->pdev->dev,
+ 				  (pm_flags & MMC_PM_KEEP_POWER) &&
+ 				  (pm_flags & MMC_PM_WAKE_SDIO_IRQ));
+ }
+ 
+ static int sdhci_pci_suspend_host(struct sdhci_pci_chip *chip)
+ {
+ 	int ret;
+ 
+ 	ret = __sdhci_pci_suspend_host(chip);
+ 	if (ret)
+ 		return ret;
+ 
+ 	sdhci_pci_init_wakeup(chip);
+ 
+ 	return 0;
+ }
+ 
+ int sdhci_pci_resume_host(struct sdhci_pci_chip *chip)
+ {
+ 	struct sdhci_pci_slot *slot;
+ 	int i, ret;
+ 
+ 	for (i = 0; i < chip->num_slots; i++) {
+ 		slot = chip->slots[i];
+ 		if (!slot)
+ 			continue;
+ 
+ 		ret = sdhci_resume_host(slot->host);
+ 		if (ret)
+ 			return ret;
+ 	}
+ 
+ 	return 0;
+ }
+ #endif
+ 
  /*****************************************************************************\
   *                                                                           *
   * Hardware specific quirk handling                                          *
@@@ -1222,53 -1766,15 +1310,58 @@@ static const struct sdhci_ops sdhci_pci
  static int sdhci_pci_suspend(struct device *dev)
  {
  	struct pci_dev *pdev = to_pci_dev(dev);
++<<<<<<< HEAD
 +	struct sdhci_pci_chip *chip;
 +	struct sdhci_pci_slot *slot;
 +	mmc_pm_flag_t slot_pm_flags;
 +	mmc_pm_flag_t pm_flags = 0;
 +	int i, ret;
++=======
+ 	struct sdhci_pci_chip *chip = pci_get_drvdata(pdev);
++>>>>>>> 30cf2803b268 (mmc: sdhci-pci: Let suspend/resume callbacks replace default callbacks)
  
- 	chip = pci_get_drvdata(pdev);
  	if (!chip)
  		return 0;
  
- 	for (i = 0; i < chip->num_slots; i++) {
- 		slot = chip->slots[i];
- 		if (!slot)
- 			continue;
+ 	if (chip->fixes && chip->fixes->suspend)
+ 		return chip->fixes->suspend(chip);
  
++<<<<<<< HEAD
 +		ret = sdhci_suspend_host(slot->host);
 +
 +		if (ret)
 +			goto err_pci_suspend;
 +
 +		slot_pm_flags = slot->host->mmc->pm_flags;
 +		if (slot_pm_flags & MMC_PM_WAKE_SDIO_IRQ)
 +			sdhci_enable_irq_wakeups(slot->host);
 +
 +		pm_flags |= slot_pm_flags;
 +	}
 +
 +	if (chip->fixes && chip->fixes->suspend) {
 +		ret = chip->fixes->suspend(chip);
 +		if (ret)
 +			goto err_pci_suspend;
 +	}
 +
 +	if (pm_flags & MMC_PM_KEEP_POWER) {
 +		if (pm_flags & MMC_PM_WAKE_SDIO_IRQ)
 +			device_init_wakeup(dev, true);
 +		else
 +			device_init_wakeup(dev, false);
 +	} else
 +		device_init_wakeup(dev, false);
 +
 +	return 0;
 +
 +err_pci_suspend:
 +	while (--i >= 0)
 +		sdhci_resume_host(chip->slots[i]->host);
 +	return ret;
++=======
+ 	return sdhci_pci_suspend_host(chip);
++>>>>>>> 30cf2803b268 (mmc: sdhci-pci: Let suspend/resume callbacks replace default callbacks)
  }
  
  static int sdhci_pci_resume(struct device *dev)
diff --cc drivers/mmc/host/sdhci-pci.h
index da47b240da15,ec8f91c403d6..000000000000
--- a/drivers/mmc/host/sdhci-pci.h
+++ b/drivers/mmc/host/sdhci-pci.h
@@@ -150,4 -106,13 +150,16 @@@ struct sdhci_pci_chip 
  	struct sdhci_pci_slot	*slots[MAX_SLOTS]; /* Pointers to host slots */
  };
  
++<<<<<<< HEAD
++=======
+ static inline void *sdhci_pci_priv(struct sdhci_pci_slot *slot)
+ {
+ 	return (void *)slot->private;
+ }
+ 
+ #ifdef CONFIG_PM_SLEEP
+ int sdhci_pci_resume_host(struct sdhci_pci_chip *chip);
+ #endif
+ 
++>>>>>>> 30cf2803b268 (mmc: sdhci-pci: Let suspend/resume callbacks replace default callbacks)
  #endif /* __SDHCI_PCI_H */
* Unmerged path drivers/mmc/host/sdhci-pci-core.c
diff --git a/drivers/mmc/host/sdhci-pci-o2micro.c b/drivers/mmc/host/sdhci-pci-o2micro.c
index 0ea34e2c7cba..14273ca00641 100644
--- a/drivers/mmc/host/sdhci-pci-o2micro.c
+++ b/drivers/mmc/host/sdhci-pci-o2micro.c
@@ -388,6 +388,6 @@ int sdhci_pci_o2_probe(struct sdhci_pci_chip *chip)
 int sdhci_pci_o2_resume(struct sdhci_pci_chip *chip)
 {
 	sdhci_pci_o2_probe(chip);
-	return 0;
+	return sdhci_pci_resume_host(chip);
 }
 #endif
* Unmerged path drivers/mmc/host/sdhci-pci.h
