mlxsw: spectrum: qdiscs: Create a generic destroy function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Nogah Frankel <nogahf@mellanox.com>
commit 9a37a59f715256cea75cbdbcacd21e9e9dd4b72f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9a37a59f.failed

Add a destroy function to the qdiscs ops struct.
Create a generic qdisc destroy function, that clears the qdisc metadata as
well as calling the specific qdisc destroy function.

	Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
	Reviewed-by: Yuval Mintz <yuvalm@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9a37a59f715256cea75cbdbcacd21e9e9dd4b72f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
index b5397da94d7f,9b23dfc95ad9..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
@@@ -41,6 -41,94 +41,97 @@@
  #include "spectrum.h"
  #include "reg.h"
  
++<<<<<<< HEAD
++=======
+ enum mlxsw_sp_qdisc_type {
+ 	MLXSW_SP_QDISC_NO_QDISC,
+ 	MLXSW_SP_QDISC_RED,
+ };
+ 
+ struct mlxsw_sp_qdisc_ops {
+ 	int (*destroy)(struct mlxsw_sp_port *mlxsw_sp_port,
+ 		       struct mlxsw_sp_qdisc *mlxsw_sp_qdisc);
+ 	int (*get_stats)(struct mlxsw_sp_port *mlxsw_sp_port,
+ 			 struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
+ 			 struct tc_qopt_offload_stats *stats_ptr);
+ 	int (*get_xstats)(struct mlxsw_sp_port *mlxsw_sp_port,
+ 			  struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
+ 			  void *xstats_ptr);
+ };
+ 
+ struct mlxsw_sp_qdisc {
+ 	u32 handle;
+ 	enum mlxsw_sp_qdisc_type type;
+ 	u8 tclass_num;
+ 	union {
+ 		struct red_stats red;
+ 	} xstats_base;
+ 	struct mlxsw_sp_qdisc_stats {
+ 		u64 tx_bytes;
+ 		u64 tx_packets;
+ 		u64 drops;
+ 		u64 overlimits;
+ 	} stats_base;
+ 
+ 	struct mlxsw_sp_qdisc_ops *ops;
+ };
+ 
+ static bool
+ mlxsw_sp_qdisc_compare(struct mlxsw_sp_qdisc *mlxsw_sp_qdisc, u32 handle,
+ 		       enum mlxsw_sp_qdisc_type type)
+ {
+ 	return mlxsw_sp_qdisc && mlxsw_sp_qdisc->handle == handle &&
+ 	       mlxsw_sp_qdisc->type == type;
+ }
+ 
+ static int
+ mlxsw_sp_qdisc_destroy(struct mlxsw_sp_port *mlxsw_sp_port,
+ 		       struct mlxsw_sp_qdisc *mlxsw_sp_qdisc)
+ {
+ 	int err = 0;
+ 
+ 	if (!mlxsw_sp_qdisc)
+ 		return 0;
+ 
+ 	if (mlxsw_sp_qdisc->ops && mlxsw_sp_qdisc->ops->destroy)
+ 		err = mlxsw_sp_qdisc->ops->destroy(mlxsw_sp_port,
+ 						   mlxsw_sp_qdisc);
+ 
+ 	mlxsw_sp_qdisc->handle = TC_H_UNSPEC;
+ 	mlxsw_sp_qdisc->type = MLXSW_SP_QDISC_NO_QDISC;
+ 	mlxsw_sp_qdisc->ops = NULL;
+ 	return err;
+ }
+ 
+ static int
+ mlxsw_sp_qdisc_get_stats(struct mlxsw_sp_port *mlxsw_sp_port,
+ 			 struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
+ 			 struct tc_qopt_offload_stats *stats_ptr)
+ {
+ 	if (mlxsw_sp_qdisc && mlxsw_sp_qdisc->ops &&
+ 	    mlxsw_sp_qdisc->ops->get_stats)
+ 		return mlxsw_sp_qdisc->ops->get_stats(mlxsw_sp_port,
+ 						      mlxsw_sp_qdisc,
+ 						      stats_ptr);
+ 
+ 	return -EOPNOTSUPP;
+ }
+ 
+ static int
+ mlxsw_sp_qdisc_get_xstats(struct mlxsw_sp_port *mlxsw_sp_port,
+ 			  struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
+ 			  void *xstats_ptr)
+ {
+ 	if (mlxsw_sp_qdisc && mlxsw_sp_qdisc->ops &&
+ 	    mlxsw_sp_qdisc->ops->get_xstats)
+ 		return mlxsw_sp_qdisc->ops->get_xstats(mlxsw_sp_port,
+ 						      mlxsw_sp_qdisc,
+ 						      xstats_ptr);
+ 
+ 	return -EOPNOTSUPP;
+ }
+ 
++>>>>>>> 9a37a59f7152 (mlxsw: spectrum: qdiscs: Create a generic destroy function)
  static int
  mlxsw_sp_tclass_congestion_enable(struct mlxsw_sp_port *mlxsw_sp_port,
  				  int tclass_num, u32 min, u32 max,
@@@ -111,20 -193,11 +202,25 @@@ mlxsw_sp_setup_tc_qdisc_clean_stats(str
  }
  
  static int
 -mlxsw_sp_qdisc_red_destroy(struct mlxsw_sp_port *mlxsw_sp_port,
 -			   struct mlxsw_sp_qdisc *mlxsw_sp_qdisc)
 +mlxsw_sp_qdisc_red_destroy(struct mlxsw_sp_port *mlxsw_sp_port, u32 handle,
 +			   struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
 +			   int tclass_num)
  {
++<<<<<<< HEAD
 +	int err;
 +
 +	if (mlxsw_sp_qdisc->handle != handle)
 +		return 0;
 +
 +	err = mlxsw_sp_tclass_congestion_disable(mlxsw_sp_port, tclass_num);
 +	mlxsw_sp_qdisc->handle = TC_H_UNSPEC;
 +	mlxsw_sp_qdisc->type = MLXSW_SP_QDISC_NO_QDISC;
 +
 +	return err;
++=======
+ 	return mlxsw_sp_tclass_congestion_disable(mlxsw_sp_port,
+ 						  mlxsw_sp_qdisc->tclass_num);
++>>>>>>> 9a37a59f7152 (mlxsw: spectrum: qdiscs: Create a generic destroy function)
  }
  
  static int
@@@ -179,8 -253,7 +275,12 @@@ mlxsw_sp_qdisc_red_replace(struct mlxsw
  err_bad_param:
  	err = -EINVAL;
  err_config:
++<<<<<<< HEAD
 +	mlxsw_sp_qdisc_red_destroy(mlxsw_sp_port, mlxsw_sp_qdisc->handle,
 +				   mlxsw_sp_qdisc, tclass_num);
++=======
+ 	mlxsw_sp_qdisc_destroy(mlxsw_sp_port, mlxsw_sp_qdisc);
++>>>>>>> 9a37a59f7152 (mlxsw: spectrum: qdiscs: Create a generic destroy function)
  	return err;
  }
  
@@@ -243,6 -322,12 +343,15 @@@ mlxsw_sp_qdisc_get_red_stats(struct mlx
  
  #define MLXSW_SP_PORT_DEFAULT_TCLASS 0
  
++<<<<<<< HEAD
++=======
+ static struct mlxsw_sp_qdisc_ops mlxsw_sp_qdisc_ops_red = {
+ 	.destroy = mlxsw_sp_qdisc_red_destroy,
+ 	.get_stats = mlxsw_sp_qdisc_get_red_stats,
+ 	.get_xstats = mlxsw_sp_qdisc_get_red_xstats,
+ };
+ 
++>>>>>>> 9a37a59f7152 (mlxsw: spectrum: qdiscs: Create a generic destroy function)
  int mlxsw_sp_setup_tc_red(struct mlxsw_sp_port *mlxsw_sp_port,
  			  struct tc_red_qopt_offload *p)
  {
@@@ -252,25 -336,27 +361,29 @@@
  	if (p->parent != TC_H_ROOT)
  		return -EOPNOTSUPP;
  
 -	mlxsw_sp_qdisc = mlxsw_sp_port->root_qdisc;
 +	mlxsw_sp_qdisc = &mlxsw_sp_port->root_qdisc;
 +	tclass_num = MLXSW_SP_PORT_DEFAULT_TCLASS;
  
 -	if (p->command == TC_RED_REPLACE)
 +	switch (p->command) {
 +	case TC_RED_REPLACE:
  		return mlxsw_sp_qdisc_red_replace(mlxsw_sp_port, p->handle,
 -						  mlxsw_sp_qdisc,
 -						  &mlxsw_sp_qdisc_ops_red,
 +						  mlxsw_sp_qdisc, tclass_num,
  						  &p->set);
 -
 -	if (!mlxsw_sp_qdisc_compare(mlxsw_sp_qdisc, p->handle,
 -				    MLXSW_SP_QDISC_RED))
 -		return -EOPNOTSUPP;
 -
 -	switch (p->command) {
  	case TC_RED_DESTROY:
++<<<<<<< HEAD
 +		return mlxsw_sp_qdisc_red_destroy(mlxsw_sp_port, p->handle,
 +						  mlxsw_sp_qdisc, tclass_num);
++=======
+ 		return mlxsw_sp_qdisc_destroy(mlxsw_sp_port, mlxsw_sp_qdisc);
++>>>>>>> 9a37a59f7152 (mlxsw: spectrum: qdiscs: Create a generic destroy function)
  	case TC_RED_XSTATS:
 -		return mlxsw_sp_qdisc_get_xstats(mlxsw_sp_port, mlxsw_sp_qdisc,
 -						 p->xstats);
 +		return mlxsw_sp_qdisc_get_red_xstats(mlxsw_sp_port, p->handle,
 +						     mlxsw_sp_qdisc, tclass_num,
 +						     p->xstats);
  	case TC_RED_STATS:
 -		return mlxsw_sp_qdisc_get_stats(mlxsw_sp_port, mlxsw_sp_qdisc,
 -						&p->stats);
 +		return mlxsw_sp_qdisc_get_red_stats(mlxsw_sp_port, p->handle,
 +						    mlxsw_sp_qdisc, tclass_num,
 +						    &p->stats);
  	default:
  		return -EOPNOTSUPP;
  	}
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
