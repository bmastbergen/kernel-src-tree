NFS: Move slot-already-allocated check into nfs_setup_sequence()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Anna Schumaker <Anna.Schumaker@Netapp.com>
commit 9dd9107f330c5d371c62b460975a32d8bd5712b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9dd9107f.failed

This puts the check in a single place, rather than needing to implement
it twice for v4.0 and v4.1.

	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 9dd9107f330c5d371c62b460975a32d8bd5712b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4proc.c
diff --cc fs/nfs/nfs4proc.c
index 0a1efaa4e649,dcb2f73c7d4c..000000000000
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@@ -1015,6 -979,31 +1005,34 @@@ EXPORT_SYMBOL_GPL(nfs4_sequence_done)
  
  #endif	/* !CONFIG_NFS_V4_1 */
  
++<<<<<<< HEAD
++=======
+ int nfs4_setup_sequence(const struct nfs_client *client,
+ 			struct nfs4_sequence_args *args,
+ 			struct nfs4_sequence_res *res,
+ 			struct rpc_task *task)
+ {
+ #if defined(CONFIG_NFS_V4_1)
+ 	struct nfs4_session *session = nfs4_get_session(client);
+ #endif /* CONFIG_NFS_V4_1 */
+ 
+ 	/* slot already allocated? */
+ 	if (res->sr_slot != NULL)
+ 		goto out_start;
+ 
+ #if defined(CONFIG_NFS_V4_1)
+ 	if (session)
+ 		return nfs41_setup_sequence(session, args, res, task);
+ #endif /* CONFIG_NFS_V4_1 */
+ 	return nfs40_setup_sequence(client->cl_slot_tbl, args, res, task);
+ 
+ out_start:
+ 	rpc_call_start(task);
+ 	return 0;
+ }
+ EXPORT_SYMBOL_GPL(nfs4_setup_sequence);
+ 
++>>>>>>> 9dd9107f330c (NFS: Move slot-already-allocated check into nfs_setup_sequence())
  static void nfs40_call_sync_prepare(struct rpc_task *task, void *calldata)
  {
  	struct nfs4_call_sync_data *data = calldata;
* Unmerged path fs/nfs/nfs4proc.c
