sctp: fix the check for _sctp_walk_params and _sctp_walk_errors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Xin Long <lucien.xin@gmail.com>
commit 6b84202c946cd3da3a8daa92c682510e9ed80321
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6b84202c.failed

Commit b1f5bfc27a19 ("sctp: don't dereference ptr before leaving
_sctp_walk_{params, errors}()") tried to fix the issue that it
may overstep the chunk end for _sctp_walk_{params, errors} with
'chunk_end > offset(length) + sizeof(length)'.

But it introduced a side effect: When processing INIT, it verifies
the chunks with 'param.v == chunk_end' after iterating all params
by sctp_walk_params(). With the check 'chunk_end > offset(length)
+ sizeof(length)', it would return when the last param is not yet
accessed. Because the last param usually is fwdtsn supported param
whose size is 4 and 'chunk_end == offset(length) + sizeof(length)'

This is a badly issue even causing sctp couldn't process 4-shakes.
Client would always get abort when connecting to server, due to
the failure of INIT chunk verification on server.

The patch is to use 'chunk_end <= offset(length) + sizeof(length)'
instead of 'chunk_end < offset(length) + sizeof(length)' for both
_sctp_walk_params and _sctp_walk_errors.

Fixes: b1f5bfc27a19 ("sctp: don't dereference ptr before leaving _sctp_walk_{params, errors}()")
	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Acked-by: Neil Horman <nhorman@tuxdriver.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6b84202c946cd3da3a8daa92c682510e9ed80321)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/sctp/sctp.h
diff --cc include/net/sctp/sctp.h
index 83438553ebda,45fd4c6056b5..000000000000
--- a/include/net/sctp/sctp.h
+++ b/include/net/sctp/sctp.h
@@@ -466,8 -469,10 +466,13 @@@ _sctp_walk_params((pos), (chunk), ntohs
  
  #define _sctp_walk_params(pos, chunk, end, member)\
  for (pos.v = chunk->member;\
++<<<<<<< HEAD
++=======
+      (pos.v + offsetof(struct sctp_paramhdr, length) + sizeof(pos.p->length) <=\
+       (void *)chunk + end) &&\
++>>>>>>> 6b84202c946c (sctp: fix the check for _sctp_walk_params and _sctp_walk_errors)
       pos.v <= (void *)chunk + end - ntohs(pos.p->length) &&\
 -     ntohs(pos.p->length) >= sizeof(struct sctp_paramhdr);\
 +     ntohs(pos.p->length) >= sizeof(sctp_paramhdr_t);\
       pos.v += SCTP_PAD4(ntohs(pos.p->length)))
  
  #define sctp_walk_errors(err, chunk_hdr)\
@@@ -475,7 -480,9 +480,13 @@@ _sctp_walk_errors((err), (chunk_hdr), n
  
  #define _sctp_walk_errors(err, chunk_hdr, end)\
  for (err = (sctp_errhdr_t *)((void *)chunk_hdr + \
++<<<<<<< HEAD
 +	    sizeof(sctp_chunkhdr_t));\
++=======
+ 	    sizeof(struct sctp_chunkhdr));\
+      ((void *)err + offsetof(sctp_errhdr_t, length) + sizeof(err->length) <=\
+       (void *)chunk_hdr + end) &&\
++>>>>>>> 6b84202c946c (sctp: fix the check for _sctp_walk_params and _sctp_walk_errors)
       (void *)err <= (void *)chunk_hdr + end - ntohs(err->length) &&\
       ntohs(err->length) >= sizeof(sctp_errhdr_t); \
       err = (sctp_errhdr_t *)((void *)err + SCTP_PAD4(ntohs(err->length))))
* Unmerged path include/net/sctp/sctp.h
