jbd2: don't mark block as modified if the handle is out of credits

jira LE-1907
cve CVE-2018-10883
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Theodore Ts'o <tytso@mit.edu>
commit e09463f220ca9a1a1ecfda84fcda658f99a1f12a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/e09463f2.failed

Do not set the b_modified flag in block's journal head should not
until after we're sure that jbd2_journal_dirty_metadat() will not
abort with an error due to there not being enough space reserved in
the jbd2 handle.

Otherwise, future attempts to modify the buffer may lead a large
number of spurious errors and warnings.

This addresses CVE-2018-10883.

https://bugzilla.kernel.org/show_bug.cgi?id=200071

	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Cc: stable@kernel.org
(cherry picked from commit e09463f220ca9a1a1ecfda84fcda658f99a1f12a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/jbd2/transaction.c
diff --cc fs/jbd2/transaction.c
index 26528570f729,c0b66a7a795b..000000000000
--- a/fs/jbd2/transaction.c
+++ b/fs/jbd2/transaction.c
@@@ -1290,6 -1338,44 +1290,47 @@@ int jbd2_journal_dirty_metadata(handle_
  		ret = -EUCLEAN;
  		goto out;
  	}
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * We don't grab jh reference here since the buffer must be part
+ 	 * of the running transaction.
+ 	 */
+ 	jh = bh2jh(bh);
+ 	/*
+ 	 * This and the following assertions are unreliable since we may see jh
+ 	 * in inconsistent state unless we grab bh_state lock. But this is
+ 	 * crucial to catch bugs so let's do a reliable check until the
+ 	 * lockless handling is fully proven.
+ 	 */
+ 	if (jh->b_transaction != transaction &&
+ 	    jh->b_next_transaction != transaction) {
+ 		jbd_lock_bh_state(bh);
+ 		J_ASSERT_JH(jh, jh->b_transaction == transaction ||
+ 				jh->b_next_transaction == transaction);
+ 		jbd_unlock_bh_state(bh);
+ 	}
+ 	if (jh->b_modified == 1) {
+ 		/* If it's in our transaction it must be in BJ_Metadata list. */
+ 		if (jh->b_transaction == transaction &&
+ 		    jh->b_jlist != BJ_Metadata) {
+ 			jbd_lock_bh_state(bh);
+ 			if (jh->b_transaction == transaction &&
+ 			    jh->b_jlist != BJ_Metadata)
+ 				pr_err("JBD2: assertion failure: h_type=%u "
+ 				       "h_line_no=%u block_no=%llu jlist=%u\n",
+ 				       handle->h_type, handle->h_line_no,
+ 				       (unsigned long long) bh->b_blocknr,
+ 				       jh->b_jlist);
+ 			J_ASSERT_JH(jh, jh->b_transaction != transaction ||
+ 					jh->b_jlist == BJ_Metadata);
+ 			jbd_unlock_bh_state(bh);
+ 		}
+ 		goto out;
+ 	}
+ 
+ 	journal = transaction->t_journal;
++>>>>>>> e09463f220ca (jbd2: don't mark block as modified if the handle is out of credits)
  	jbd_debug(5, "journal_head %p\n", jh);
  	JBUFFER_TRACE(jh, "entry");
  
* Unmerged path fs/jbd2/transaction.c
