nvme-fc: remove setting DNR on exception conditions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author James Smart <jsmart2021@gmail.com>
commit 90fcaf5d54c57037e9f879f17b58497db7156c3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/90fcaf5d.failed

Current code will set DNR if the controller is deleting or there is
an error during controller init. None of this is necessary.

Remove the code that sets DNR

	Signed-off-by: James Smart <james.smart@broadcom.com>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 90fcaf5d54c57037e9f879f17b58497db7156c3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fc.c
diff --cc drivers/nvme/host/fc.c
index d165c0527376,ac35a80f5532..000000000000
--- a/drivers/nvme/host/fc.c
+++ b/drivers/nvme/host/fc.c
@@@ -1731,20 -1686,8 +1731,25 @@@ done
  		goto check_error;
  	}
  
++<<<<<<< HEAD
 +	/*
 +	 * Force failures of commands if we're killing the controller
 +	 * or have an error on a command used to create an new association
 +	 */
 +	if (status &&
 +	    (blk_queue_dying(rq->q) ||
 +	     ctrl->ctrl.state == NVME_CTRL_NEW ||
 +	     ctrl->ctrl.state == NVME_CTRL_RECONNECTING))
 +		status |= cpu_to_le16(NVME_SC_DNR << 1);
 +
 +	if (__nvme_fc_fcpop_chk_teardowns(ctrl, op))
 +		__nvme_fc_final_op_cleanup(rq);
 +	else
 +		nvme_end_request(rq, status, result);
++=======
+ 	__nvme_fc_fcpop_chk_teardowns(ctrl, op, opstate);
+ 	nvme_end_request(rq, status, result);
++>>>>>>> 90fcaf5d54c5 (nvme-fc: remove setting DNR on exception conditions)
  
  check_error:
  	if (terminate_assoc)
* Unmerged path drivers/nvme/host/fc.c
