mlxsw: Handle config changes pertinent to SPAN

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Petr Machata <petrm@mellanox.com>
commit 803335acbe3371f1c0e9dd02f318b16f5abc22f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/803335ac.failed

For some netdevices, for which mlxsw offloads mirroring, may have a
complex relationship between the declared intent and low-level
device configuration.

Trying to accurately track which changes might influence offloading
decisions is finicky and error-prone. Instead, this patch introduces a
function mlxsw_sp_span_entry_respin, which re-queries the configuration
anew and, if different, removes the existing offloads and installs new
ones.

Call this function strategically at event handlers that might influence
the mirroring configuration.

	Signed-off-by: Petr Machata <petrm@mellanox.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 803335acbe3371f1c0e9dd02f318b16f5abc22f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index b68d3beaa490,8d2d140d7910..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@@ -3496,10 -3682,15 +3505,22 @@@ static int mlxsw_sp_init(struct mlxsw_c
  		goto err_router_init;
  	}
  
++<<<<<<< HEAD
 +	err = mlxsw_sp_span_init(mlxsw_sp);
 +	if (err) {
 +		dev_err(mlxsw_sp->bus_info->dev, "Failed to init span system\n");
 +		goto err_span_init;
++=======
+ 	/* Initialize netdevice notifier after router and SPAN is initialized,
+ 	 * so that the event handler can use router structures and call SPAN
+ 	 * respin.
+ 	 */
+ 	mlxsw_sp->netdevice_nb.notifier_call = mlxsw_sp_netdevice_event;
+ 	err = register_netdevice_notifier(&mlxsw_sp->netdevice_nb);
+ 	if (err) {
+ 		dev_err(mlxsw_sp->bus_info->dev, "Failed to register netdev notifier\n");
+ 		goto err_netdev_notifier;
++>>>>>>> 803335acbe33 (mlxsw: Handle config changes pertinent to SPAN)
  	}
  
  	err = mlxsw_sp_acl_init(mlxsw_sp);
@@@ -3527,10 -3718,12 +3548,17 @@@ err_ports_create
  err_dpipe_init:
  	mlxsw_sp_acl_fini(mlxsw_sp);
  err_acl_init:
++<<<<<<< HEAD
 +	mlxsw_sp_span_fini(mlxsw_sp);
 +err_span_init:
++=======
+ 	unregister_netdevice_notifier(&mlxsw_sp->netdevice_nb);
+ err_netdev_notifier:
++>>>>>>> 803335acbe33 (mlxsw: Handle config changes pertinent to SPAN)
  	mlxsw_sp_router_fini(mlxsw_sp);
  err_router_init:
+ 	mlxsw_sp_span_fini(mlxsw_sp);
+ err_span_init:
  	mlxsw_sp_afa_fini(mlxsw_sp);
  err_afa_init:
  	mlxsw_sp_counter_pool_fini(mlxsw_sp);
@@@ -3554,8 -3749,9 +3582,13 @@@ static void mlxsw_sp_fini(struct mlxsw_
  	mlxsw_sp_ports_remove(mlxsw_sp);
  	mlxsw_sp_dpipe_fini(mlxsw_sp);
  	mlxsw_sp_acl_fini(mlxsw_sp);
++<<<<<<< HEAD
 +	mlxsw_sp_span_fini(mlxsw_sp);
++=======
+ 	unregister_netdevice_notifier(&mlxsw_sp->netdevice_nb);
++>>>>>>> 803335acbe33 (mlxsw: Handle config changes pertinent to SPAN)
  	mlxsw_sp_router_fini(mlxsw_sp);
+ 	mlxsw_sp_span_fini(mlxsw_sp);
  	mlxsw_sp_afa_fini(mlxsw_sp);
  	mlxsw_sp_counter_pool_fini(mlxsw_sp);
  	mlxsw_sp_switchdev_fini(mlxsw_sp);
@@@ -4514,6 -4640,13 +4547,16 @@@ static int mlxsw_sp_netdevice_event(str
  	int err = 0;
  
  	mlxsw_sp = container_of(nb, struct mlxsw_sp, netdevice_nb);
++<<<<<<< HEAD
++=======
+ 	if (event == NETDEV_UNREGISTER) {
+ 		span_entry = mlxsw_sp_span_entry_find_by_port(mlxsw_sp, dev);
+ 		if (span_entry)
+ 			mlxsw_sp_span_entry_invalidate(mlxsw_sp, span_entry);
+ 	}
+ 	mlxsw_sp_span_respin(mlxsw_sp);
+ 
++>>>>>>> 803335acbe33 (mlxsw: Handle config changes pertinent to SPAN)
  	if (mlxsw_sp_netdev_is_ipip_ol(mlxsw_sp, dev))
  		err = mlxsw_sp_netdevice_ipip_ol_event(mlxsw_sp, dev,
  						       event, ptr);
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.c
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index 169ef4a7fa79..03880a04690c 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@ -69,6 +69,7 @@
 #include "spectrum_mr.h"
 #include "spectrum_mr_tcam.h"
 #include "spectrum_router.h"
+#include "spectrum_span.h"
 
 struct mlxsw_sp_vr;
 struct mlxsw_sp_lpm_tree;
@@ -2014,6 +2015,8 @@ static void mlxsw_sp_router_neigh_event_work(struct work_struct *work)
 	read_unlock_bh(&n->lock);
 
 	rtnl_lock();
+	mlxsw_sp_span_respin(mlxsw_sp);
+
 	entry_connected = nud_state & NUD_VALID && !dead;
 	neigh_entry = mlxsw_sp_neigh_entry_lookup(mlxsw_sp, n);
 	if (!entry_connected && !neigh_entry)
@@ -5243,6 +5246,8 @@ static void mlxsw_sp_router_fib4_event_work(struct work_struct *work)
 
 	/* Protect internal structures from changes */
 	rtnl_lock();
+	mlxsw_sp_span_respin(mlxsw_sp);
+
 	switch (fib_work->event) {
 	case FIB_EVENT_ENTRY_REPLACE: /* fall through */
 	case FIB_EVENT_ENTRY_APPEND: /* fall through */
@@ -5287,6 +5292,8 @@ static void mlxsw_sp_router_fib6_event_work(struct work_struct *work)
 	int err;
 
 	rtnl_lock();
+	mlxsw_sp_span_respin(mlxsw_sp);
+
 	switch (fib_work->event) {
 	case FIB_EVENT_ENTRY_REPLACE: /* fall through */
 	case FIB_EVENT_ENTRY_ADD:
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
index a025a77a589d..88e9810c8107 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
@@ -371,3 +371,27 @@ void mlxsw_sp_span_mirror_del(struct mlxsw_sp_port *from, u8 destination_port,
 		   span_entry->id);
 	mlxsw_sp_span_inspected_port_del(from, span_entry, type, bind);
 }
+
+void mlxsw_sp_span_respin(struct mlxsw_sp *mlxsw_sp)
+{
+	int i;
+	int err;
+
+	ASSERT_RTNL();
+	for (i = 0; i < mlxsw_sp->span.entries_count; i++) {
+		struct mlxsw_sp_span_entry *curr = &mlxsw_sp->span.entries[i];
+		struct mlxsw_sp_span_parms sparms = {0};
+
+		if (!curr->ref_count)
+			continue;
+
+		err = curr->ops->parms(curr->to_dev, &sparms);
+		if (err)
+			continue;
+
+		if (memcmp(&sparms, &curr->parms, sizeof(sparms))) {
+			mlxsw_sp_span_entry_deconfigure(curr);
+			mlxsw_sp_span_entry_configure(mlxsw_sp, curr, sparms);
+		}
+	}
+}
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h b/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h
index 069050e385ff..93892f2b7763 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h
@@ -59,6 +59,7 @@ struct mlxsw_sp_span_entry {
 
 int mlxsw_sp_span_init(struct mlxsw_sp *mlxsw_sp);
 void mlxsw_sp_span_fini(struct mlxsw_sp *mlxsw_sp);
+void mlxsw_sp_span_respin(struct mlxsw_sp *mlxsw_sp);
 
 int mlxsw_sp_span_mirror_add(struct mlxsw_sp_port *from,
 			     struct mlxsw_sp_port *to,
