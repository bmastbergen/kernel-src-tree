s390/dasd: fix failing path verification

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [s390] dasd: fix failing path verification (Hendrik Brueckner) [1582260]
Rebuild_FUZZ: 93.33%
commit-author Stefan Haberland <stefan.haberland@de.ibm.com>
commit 1eb38023ddb480276c6b75e0db6463c47251eb7b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/1eb38023.failed

DASD path verification requires the usage of sleep_on_immediatly to
ensure that no other I/O request is blocking the recovery of
disconnected devices. But two concurrent path verification workers for
the same device may kill each others requests due to the usage of the
immediate sleep_on function. This may lead to unsuccessful path
verifications.

Prevent that two parallel path verification workers conflict with
each other by implementing a device flag signalling a already running
worker.

	Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 1eb38023ddb480276c6b75e0db6463c47251eb7b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/block/dasd_int.h
diff --cc drivers/s390/block/dasd_int.h
index 750f0faed208,4aed5ed70836..000000000000
--- a/drivers/s390/block/dasd_int.h
+++ b/drivers/s390/block/dasd_int.h
@@@ -575,7 -533,11 +575,12 @@@ struct dasd_attention_data 
  #define DASD_FLAG_SUSPENDED	9	/* The device was suspended */
  #define DASD_FLAG_SAFE_OFFLINE	10	/* safe offline processing requested*/
  #define DASD_FLAG_SAFE_OFFLINE_RUNNING	11	/* safe offline running */
++<<<<<<< HEAD
++=======
+ #define DASD_FLAG_ABORTALL	12	/* Abort all noretry requests */
+ #define DASD_FLAG_PATH_VERIFY	13	/* Path verification worker running */
++>>>>>>> 1eb38023ddb4 (s390/dasd: fix failing path verification)
  
 -#define DASD_SLEEPON_START_TAG	((void *) 1)
 -#define DASD_SLEEPON_END_TAG	((void *) 2)
  
  void dasd_put_device_wake(struct dasd_device *);
  
diff --git a/drivers/s390/block/dasd_eckd.c b/drivers/s390/block/dasd_eckd.c
index 007789314c99..32fc93964dbe 100644
--- a/drivers/s390/block/dasd_eckd.c
+++ b/drivers/s390/block/dasd_eckd.c
@@ -1332,7 +1332,11 @@ static void do_path_verification_work(struct work_struct *work)
 		schedule_work(work);
 		return;
 	}
-
+	/* check if path verification already running and delay if so */
+	if (test_and_set_bit(DASD_FLAG_PATH_VERIFY, &device->flags)) {
+		schedule_work(work);
+		return;
+	}
 	opm = 0;
 	npm = 0;
 	ppm = 0;
@@ -1469,7 +1473,7 @@ static void do_path_verification_work(struct work_struct *work)
 		dasd_path_add_nohpfpm(device, hpfpm);
 		spin_unlock_irqrestore(get_ccwdev_lock(device->cdev), flags);
 	}
-
+	clear_bit(DASD_FLAG_PATH_VERIFY, &device->flags);
 	dasd_put_device(device);
 	if (data->isglobal)
 		mutex_unlock(&dasd_path_verification_mutex);
* Unmerged path drivers/s390/block/dasd_int.h
