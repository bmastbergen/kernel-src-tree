platform/x86: wmi: Destroy on cleanup rather than unregister

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [platform] x86: wmi: Destroy on cleanup rather than unregister (Jarod Wilson) [1562200]
Rebuild_FUZZ: 91.89%
commit-author Mario Limonciello <mario.limonciello@dell.com>
commit 7b11e8989618581bc0226ad313264cdc05d48d86
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/7b11e898.failed

device_create documentation says to cleanup using device_destroy

	Signed-off-by: Mario Limonciello <mario.limonciello@dell.com>
	Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
(cherry picked from commit 7b11e8989618581bc0226ad313264cdc05d48d86)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/wmi.c
diff --cc drivers/platform/x86/wmi.c
index ce57af6635c6,7a05843aff19..000000000000
--- a/drivers/platform/x86/wmi.c
+++ b/drivers/platform/x86/wmi.c
@@@ -861,29 -1078,74 +861,34 @@@ static void acpi_wmi_notify(struct acpi
  		wblock = list_entry(p, struct wmi_block, list);
  		block = &wblock->gblock;
  
 -		if (wblock->acpi_device->handle == handle &&
 +		if (wblock->acpi_device == device &&
  		    (block->flags & ACPI_WMI_EVENT) &&
 -		    (block->notify_id == event))
 -		{
 -			found_it = true;
 -			break;
 -		}
 -	}
 -
 -	if (!found_it)
 -		return;
 +		    (block->notify_id == event)) {
 +			if (wblock->handler)
 +				wblock->handler(event, wblock->handler_data);
 +			if (debug_event) {
 +				pr_info("DEBUG Event GUID: %pUL\n",
 +					wblock->gblock.guid);
 +			}
  
 -	/* If a driver is bound, then notify the driver. */
 -	if (wblock->dev.dev.driver) {
 -		struct wmi_driver *driver;
 -		struct acpi_object_list input;
 -		union acpi_object params[1];
 -		struct acpi_buffer evdata = { ACPI_ALLOCATE_BUFFER, NULL };
 -		acpi_status status;
 -
 -		driver = container_of(wblock->dev.dev.driver,
 -				      struct wmi_driver, driver);
 -
 -		input.count = 1;
 -		input.pointer = params;
 -		params[0].type = ACPI_TYPE_INTEGER;
 -		params[0].integer.value = event;
 -
 -		status = acpi_evaluate_object(wblock->acpi_device->handle,
 -					      "_WED", &input, &evdata);
 -		if (ACPI_FAILURE(status)) {
 -			dev_warn(&wblock->dev.dev,
 -				 "failed to get event data\n");
 -			return;
 +			acpi_bus_generate_netlink_event(
 +				device->pnp.device_class, dev_name(&device->dev),
 +				event, 0);
 +			break;
  		}
 -
 -		if (driver->notify)
 -			driver->notify(&wblock->dev,
 -				       (union acpi_object *)evdata.pointer);
 -
 -		kfree(evdata.pointer);
 -	} else if (wblock->handler) {
 -		/* Legacy handler */
 -		wblock->handler(event, wblock->handler_data);
  	}
 -
 -	if (debug_event) {
 -		pr_info("DEBUG Event GUID: %pUL\n",
 -			wblock->gblock.guid);
 -	}
 -
 -	acpi_bus_generate_netlink_event(
 -		wblock->acpi_device->pnp.device_class,
 -		dev_name(&wblock->dev.dev),
 -		event, 0);
 -
  }
  
 -static int acpi_wmi_remove(struct platform_device *device)
 +static int acpi_wmi_remove(struct acpi_device *device)
  {
 -	struct acpi_device *acpi_device = ACPI_COMPANION(&device->dev);
 -
 -	acpi_remove_notify_handler(acpi_device->handle, ACPI_DEVICE_NOTIFY,
 -				   acpi_wmi_notify_handler);
 -	acpi_remove_address_space_handler(acpi_device->handle,
 +	acpi_remove_address_space_handler(device->handle,
  				ACPI_ADR_SPACE_EC, &acpi_wmi_ec_space_handler);
++<<<<<<< HEAD
 +	wmi_free_devices(device);
++=======
+ 	wmi_free_devices(acpi_device);
+ 	device_destroy(&wmi_bus_class, MKDEV(0, 0));
++>>>>>>> 7b11e8989618 (platform/x86: wmi: Destroy on cleanup rather than unregister)
  
  	return 0;
  }
@@@ -912,8 -1197,38 +917,25 @@@ static int acpi_wmi_add(struct acpi_dev
  	}
  
  	return 0;
++<<<<<<< HEAD
++=======
+ 
+ err_remove_busdev:
+ 	device_destroy(&wmi_bus_class, MKDEV(0, 0));
+ 
+ err_remove_notify_handler:
+ 	acpi_remove_notify_handler(acpi_device->handle, ACPI_DEVICE_NOTIFY,
+ 				   acpi_wmi_notify_handler);
+ 
+ err_remove_ec_handler:
+ 	acpi_remove_address_space_handler(acpi_device->handle,
+ 					  ACPI_ADR_SPACE_EC,
+ 					  &acpi_wmi_ec_space_handler);
+ 
+ 	return error;
++>>>>>>> 7b11e8989618 (platform/x86: wmi: Destroy on cleanup rather than unregister)
  }
  
 -int __must_check __wmi_driver_register(struct wmi_driver *driver,
 -				       struct module *owner)
 -{
 -	driver->driver.owner = owner;
 -	driver->driver.bus = &wmi_bus_type;
 -
 -	return driver_register(&driver->driver);
 -}
 -EXPORT_SYMBOL(__wmi_driver_register);
 -
 -void wmi_driver_unregister(struct wmi_driver *driver)
 -{
 -	driver_unregister(&driver->driver);
 -}
 -EXPORT_SYMBOL(wmi_driver_unregister);
 -
  static int __init acpi_wmi_init(void)
  {
  	int error;
* Unmerged path drivers/platform/x86/wmi.c
