tcmu: fix cmd user after free

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Mike Christie <mchristi@redhat.com>
commit 45dc488c0ee19ba5cba7a67be473aeaf88a7447e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/45dc488c.failed

If we are failing the command due to a qfull timeout we are
also freeing the tcmu command, so we cannot access it later
to get the se_cmd.

Note: The clearing of cmd->se_cmd is not needed. We do not check
it later for something like determining if the command was failed
due to a timeout. As a result I am dropping it.

	Signed-off-by: Mike Christie <mchristi@redhat.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 45dc488c0ee19ba5cba7a67be473aeaf88a7447e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_user.c
diff --cc drivers/target/target_core_user.c
index 07b665cb5768,3096257a00d9..000000000000
--- a/drivers/target/target_core_user.c
+++ b/drivers/target/target_core_user.c
@@@ -891,10 -1151,34 +891,41 @@@ static int tcmu_check_expired_cmd(int i
  	if (!time_after(jiffies, cmd->deadline))
  		return 0;
  
++<<<<<<< HEAD
 +	set_bit(TCMU_CMD_BIT_EXPIRED, &cmd->flags);
 +	target_complete_cmd(cmd->se_cmd, SAM_STAT_CHECK_CONDITION);
 +	cmd->se_cmd = NULL;
 +
++=======
+ 	is_running = list_empty(&cmd->cmdr_queue_entry);
+ 	se_cmd = cmd->se_cmd;
+ 
+ 	if (is_running) {
+ 		/*
+ 		 * If cmd_time_out is disabled but qfull is set deadline
+ 		 * will only reflect the qfull timeout. Ignore it.
+ 		 */
+ 		if (!udev->cmd_time_out)
+ 			return 0;
+ 
+ 		set_bit(TCMU_CMD_BIT_EXPIRED, &cmd->flags);
+ 		/*
+ 		 * target_complete_cmd will translate this to LUN COMM FAILURE
+ 		 */
+ 		scsi_status = SAM_STAT_CHECK_CONDITION;
+ 	} else {
+ 		list_del_init(&cmd->cmdr_queue_entry);
+ 
+ 		idr_remove(&udev->commands, id);
+ 		tcmu_free_cmd(cmd);
+ 		scsi_status = SAM_STAT_TASK_SET_FULL;
+ 	}
+ 
+ 	pr_debug("Timing out cmd %u on dev %s that is %s.\n",
+ 		 id, udev->name, is_running ? "inflight" : "queued");
+ 
+ 	target_complete_cmd(se_cmd, scsi_status);
++>>>>>>> 45dc488c0ee1 (tcmu: fix cmd user after free)
  	return 0;
  }
  
* Unmerged path drivers/target/target_core_user.c
