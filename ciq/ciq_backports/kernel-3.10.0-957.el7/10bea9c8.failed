RDMA/mlx5: Remove redundant allocation warning print

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Leon Romanovsky <leonro@mellanox.com>
commit 10bea9c8730477ab97ec2e1f590aff52cf8e4e0e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/10bea9c8.failed

The kmalloc() failure to allocate memory generates enough information
and doesn't need to be accompanied by another driver print.

Fixes: d69a24e03659 ("IB/mlx5: Move IB event processing onto a workqueue")
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Reviewed-by: Yuval Shaia <yuval.shaia@oracle.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 10bea9c8730477ab97ec2e1f590aff52cf8e4e0e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index a4d7e9c37555,5007280321b6..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -3229,9 -3335,26 +3229,31 @@@ static void mlx5_ib_event(struct mlx5_c
  
  	if (fatal)
  		ibdev->ib_active = false;
 +
  out:
++<<<<<<< HEAD
 +	return;
++=======
+ 	kfree(work);
+ }
+ 
+ static void mlx5_ib_event(struct mlx5_core_dev *dev, void *context,
+ 			  enum mlx5_dev_event event, unsigned long param)
+ {
+ 	struct mlx5_ib_event_work *work;
+ 
+ 	work = kmalloc(sizeof(*work), GFP_ATOMIC);
+ 	if (!work)
+ 		return;
+ 
+ 	INIT_WORK(&work->work, mlx5_ib_handle_event);
+ 	work->dev = dev;
+ 	work->param = param;
+ 	work->context = context;
+ 	work->event = event;
+ 
+ 	queue_work(mlx5_ib_event_wq, &work->work);
++>>>>>>> 10bea9c87304 (RDMA/mlx5: Remove redundant allocation warning print)
  }
  
  static int set_has_smi_cap(struct mlx5_ib_dev *dev)
* Unmerged path drivers/infiniband/hw/mlx5/main.c
