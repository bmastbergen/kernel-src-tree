mlxsw: Move a mirroring check to mlxsw_sp_span_entry_create

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Petr Machata <petrm@mellanox.com>
commit 52a6444cda7d1b6fc6f6ff84e2d23cdb71c84102
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/52a6444c.failed

The check for whether a mirror port (which is a mlxsw front panel port)
belongs to the same mlxsw instance as the mirrored port, is currently
only done in spectrum_acl, even though it's applicable for the matchall
case as well. Thus move it to mlxsw_sp_span_entry_create().

	Signed-off-by: Petr Machata <petrm@mellanox.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 52a6444cda7d1b6fc6f6ff84e2d23cdb71c84102)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c
index 7fab6a96c717,21ed27ae51e3..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c
@@@ -414,12 -580,6 +413,15 @@@ int mlxsw_sp_acl_rulei_act_mirror(struc
  	binding = list_first_entry(&block->binding_list,
  				   struct mlxsw_sp_acl_block_binding, list);
  	in_port = binding->mlxsw_sp_port;
++<<<<<<< HEAD
 +	if (!mlxsw_sp_port_dev_check(out_dev))
 +		return -EINVAL;
 +
 +	out_port = netdev_priv(out_dev);
 +	if (out_port->mlxsw_sp != mlxsw_sp)
 +		return -EINVAL;
++=======
++>>>>>>> 52a6444cda7d (mlxsw: Move a mirroring check to mlxsw_sp_span_entry_create)
  
  	return mlxsw_afa_block_append_mirror(rulei->act_block,
  					     in_port->local_port,
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
index a025a77a589d,57df57c7a405..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
@@@ -100,12 -112,86 +100,88 @@@ mlxsw_sp_span_entry_deconfigure(struct 
  	mlxsw_reg_write(mlxsw_sp->core, MLXSW_REG(mpat), mpat_pl);
  }
  
++<<<<<<< HEAD
++=======
+ static void
+ mlxsw_sp_span_entry_phys_deconfigure(struct mlxsw_sp_span_entry *span_entry)
+ {
+ 	mlxsw_sp_span_entry_deconfigure_common(span_entry,
+ 					    MLXSW_REG_MPAT_SPAN_TYPE_LOCAL_ETH);
+ }
+ 
+ static const
+ struct mlxsw_sp_span_entry_ops mlxsw_sp_span_entry_ops_phys = {
+ 	.can_handle = mlxsw_sp_port_dev_check,
+ 	.parms = mlxsw_sp_span_entry_phys_parms,
+ 	.configure = mlxsw_sp_span_entry_phys_configure,
+ 	.deconfigure = mlxsw_sp_span_entry_phys_deconfigure,
+ };
+ 
+ static const
+ struct mlxsw_sp_span_entry_ops *const mlxsw_sp_span_entry_types[] = {
+ 	&mlxsw_sp_span_entry_ops_phys,
+ };
+ 
+ static int
+ mlxsw_sp_span_entry_nop_parms(const struct net_device *to_dev,
+ 			      struct mlxsw_sp_span_parms *sparmsp)
+ {
+ 	sparmsp->dest_port = NULL;
+ 	return 0;
+ }
+ 
+ static int
+ mlxsw_sp_span_entry_nop_configure(struct mlxsw_sp_span_entry *span_entry,
+ 				  struct mlxsw_sp_span_parms sparms)
+ {
+ 	return 0;
+ }
+ 
+ static void
+ mlxsw_sp_span_entry_nop_deconfigure(struct mlxsw_sp_span_entry *span_entry)
+ {
+ }
+ 
+ static const struct mlxsw_sp_span_entry_ops mlxsw_sp_span_entry_ops_nop = {
+ 	.parms = mlxsw_sp_span_entry_nop_parms,
+ 	.configure = mlxsw_sp_span_entry_nop_configure,
+ 	.deconfigure = mlxsw_sp_span_entry_nop_deconfigure,
+ };
+ 
+ static void
+ mlxsw_sp_span_entry_configure(struct mlxsw_sp *mlxsw_sp,
+ 			      struct mlxsw_sp_span_entry *span_entry,
+ 			      struct mlxsw_sp_span_parms sparms)
+ {
+ 	if (sparms.dest_port) {
+ 		if (sparms.dest_port->mlxsw_sp != mlxsw_sp) {
+ 			netdev_err(span_entry->to_dev, "Cannot mirror to %s, which belongs to a different mlxsw instance",
+ 				   sparms.dest_port->dev->name);
+ 			sparms.dest_port = NULL;
+ 		} else if (span_entry->ops->configure(span_entry, sparms)) {
+ 			netdev_err(span_entry->to_dev, "Failed to offload mirror to %s",
+ 				   sparms.dest_port->dev->name);
+ 			sparms.dest_port = NULL;
+ 		}
+ 	}
+ 
+ 	span_entry->parms = sparms;
+ }
+ 
+ static void
+ mlxsw_sp_span_entry_deconfigure(struct mlxsw_sp_span_entry *span_entry)
+ {
+ 	if (span_entry->parms.dest_port)
+ 		span_entry->ops->deconfigure(span_entry);
+ }
+ 
++>>>>>>> 52a6444cda7d (mlxsw: Move a mirroring check to mlxsw_sp_span_entry_create)
  static struct mlxsw_sp_span_entry *
 -mlxsw_sp_span_entry_create(struct mlxsw_sp *mlxsw_sp,
 -			   const struct net_device *to_dev,
 -			   const struct mlxsw_sp_span_entry_ops *ops,
 -			   struct mlxsw_sp_span_parms sparms)
 +mlxsw_sp_span_entry_create(struct mlxsw_sp_port *port)
  {
  	struct mlxsw_sp_span_entry *span_entry = NULL;
 +	struct mlxsw_sp *mlxsw_sp = port->mlxsw_sp;
 +	u8 local_port = port->local_port;
  	int i;
  
  	/* find a free entry to use */
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
