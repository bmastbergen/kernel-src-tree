cxgb4: Add support to query HW SRQ parameters

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Raju Rangoju <rajur@chelsio.com>
commit c68644ef16103a2462c34e0691343d8985466eab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/c68644ef.failed

This patch adds support to query FW for the HW SRQ table start/end, and
advertise that for ULDs.

	Signed-off-by: Raju Rangoju <rajur@chelsio.com>
	Reviewed-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c68644ef16103a2462c34e0691343d8985466eab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index 2f16e0177100,3ce496494f3c..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@@ -571,6 -579,18 +572,21 @@@ static int fwevtq_handler(struct sge_rs
  		const struct cpl_set_tcb_rpl *p = (void *)rsp;
  
  		filter_rpl(q->adap, p);
++<<<<<<< HEAD
++=======
+ 	} else if (opcode == CPL_ACT_OPEN_RPL) {
+ 		const struct cpl_act_open_rpl *p = (void *)rsp;
+ 
+ 		hash_filter_rpl(q->adap, p);
+ 	} else if (opcode == CPL_ABORT_RPL_RSS) {
+ 		const struct cpl_abort_rpl_rss *p = (void *)rsp;
+ 
+ 		hash_del_filter_rpl(q->adap, p);
+ 	} else if (opcode == CPL_SRQ_TABLE_RPL) {
+ 		const struct cpl_srq_table_rpl *p = (void *)rsp;
+ 
+ 		do_srq_table_rpl(q->adap, p);
++>>>>>>> c68644ef1610 (cxgb4: Add support to query HW SRQ parameters)
  	} else
  		dev_err(q->adap->pdev_dev,
  			"unexpected CPL %#x on FW event queue\n", opcode);
@@@ -4888,7 -5152,9 +4918,8 @@@ static void free_some_resources(struct 
  {
  	unsigned int i;
  
 -	kvfree(adapter->smt);
  	kvfree(adapter->l2t);
+ 	kvfree(adapter->srq);
  	t4_cleanup_sched(adapter);
  	kvfree(adapter->tids.tid_tab);
  	cxgb4_cleanup_tc_flower(adapter);
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_uld.h b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_uld.h
index ddef1cc70cd5..b1586fa820fc 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_uld.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_uld.h
@@ -282,6 +282,7 @@ struct cxgb4_virt_res {                      /* virtualized HW resources */
 	struct cxgb4_range iscsi;
 	struct cxgb4_range stag;
 	struct cxgb4_range rq;
+	struct cxgb4_range srq;
 	struct cxgb4_range pbl;
 	struct cxgb4_range qp;
 	struct cxgb4_range cq;
