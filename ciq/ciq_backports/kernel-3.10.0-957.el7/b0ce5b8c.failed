x86/boot: Relocate definition of the initial state of CR0

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] boot: Relocate definition of the initial state of CR0 (Gopal Tiwari) [1456572]
Rebuild_FUZZ: 96.36%
commit-author Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
commit b0ce5b8c95c83a7b98c679b117e3d6ae6f97154b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b0ce5b8c.failed

Both head_32.S and head_64.S utilize the same value to initialize the
control register CR0. Also, other parts of the kernel might want to access
this initial definition (e.g., emulation code for User-Mode Instruction
Prevention uses this state to provide a sane dummy value for CR0 when
emulating the smsw instruction). Thus, relocate this definition to a
header file from which it can be conveniently accessed.

	Suggested-by: Borislav Petkov <bp@alien8.de>
	Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Andy Lutomirski <luto@kernel.org>
	Cc: "Michael S. Tsirkin" <mst@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: ricardo.neri@intel.com
	Cc: linux-mm@kvack.org
	Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
	Cc: Huang Rui <ray.huang@amd.com>
	Cc: Shuah Khan <shuah@kernel.org>
	Cc: linux-arch@vger.kernel.org
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Jiri Slaby <jslaby@suse.cz>
	Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Chris Metcalf <cmetcalf@mellanox.com>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Chen Yucong <slaoub@gmail.com>
	Cc: Vlastimil Babka <vbabka@suse.cz>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Masami Hiramatsu <mhiramat@kernel.org>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
Link: https://lkml.kernel.org/r/1509135945-13762-3-git-send-email-ricardo.neri-calderon@linux.intel.com

(cherry picked from commit b0ce5b8c95c83a7b98c679b117e3d6ae6f97154b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/head_32.S
diff --cc arch/x86/kernel/head_32.S
index 1f3d5b896be7,c3cfc655f551..000000000000
--- a/arch/x86/kernel/head_32.S
+++ b/arch/x86/kernel/head_32.S
@@@ -309,10 -210,7 +309,14 @@@ ENTRY(startup_32_smp
  	call load_ucode_ap
  #endif
  
++<<<<<<< HEAD
 +default_entry:
 +#define CR0_STATE	(X86_CR0_PE | X86_CR0_MP | X86_CR0_ET | \
 +			 X86_CR0_NE | X86_CR0_WP | X86_CR0_AM | \
 +			 X86_CR0_PG)
++=======
+ .Ldefault_entry:
++>>>>>>> b0ce5b8c95c8 (x86/boot: Relocate definition of the initial state of CR0)
  	movl $(CR0_STATE & ~X86_CR0_PG),%eax
  	movl %eax,%cr0
  
diff --git a/arch/x86/include/uapi/asm/processor-flags.h b/arch/x86/include/uapi/asm/processor-flags.h
index 71e250118786..fcca398e2df1 100644
--- a/arch/x86/include/uapi/asm/processor-flags.h
+++ b/arch/x86/include/uapi/asm/processor-flags.h
@@ -152,5 +152,8 @@
 #define CX86_ARR_BASE	0xc4
 #define CX86_RCR_BASE	0xdc
 
+#define CR0_STATE	(X86_CR0_PE | X86_CR0_MP | X86_CR0_ET | \
+			 X86_CR0_NE | X86_CR0_WP | X86_CR0_AM | \
+			 X86_CR0_PG)
 
 #endif /* _UAPI_ASM_X86_PROCESSOR_FLAGS_H */
* Unmerged path arch/x86/kernel/head_32.S
diff --git a/arch/x86/kernel/head_64.S b/arch/x86/kernel/head_64.S
index 1ceb05ed1cb6..bbae49da59b5 100644
--- a/arch/x86/kernel/head_64.S
+++ b/arch/x86/kernel/head_64.S
@@ -149,9 +149,6 @@ ENTRY(secondary_startup_64)
 1:	wrmsr				/* Make changes effective */
 
 	/* Setup cr0 */
-#define CR0_STATE	(X86_CR0_PE | X86_CR0_MP | X86_CR0_ET | \
-			 X86_CR0_NE | X86_CR0_WP | X86_CR0_AM | \
-			 X86_CR0_PG)
 	movl	$CR0_STATE, %eax
 	/* Make changes effective */
 	movq	%rax, %cr0
