net_sch: mqprio: Change TC_SETUP_MQPRIO to TC_SETUP_QDISC_MQPRIO

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] sched: mqprio: Change TC_SETUP_MQPRIO to TC_SETUP_QDISC_MQPRIO (Ivan Vecera) [1583702]
Rebuild_FUZZ: 95.24%
commit-author Nogah Frankel <nogahf@mellanox.com>
commit 575ed7d39e2fbe602a3894bc766a8cb49af83bd3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/575ed7d3.failed

Change TC_SETUP_MQPRIO to TC_SETUP_QDISC_MQPRIO to match the new
convention.

	Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Reviewed-by: Simon Horman <simon.horman@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 575ed7d39e2fbe602a3894bc766a8cb49af83bd3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/freescale/dpaa/dpaa_eth.c
#	drivers/net/ethernet/hisilicon/hns3/hns3pf/hns3_enet.c
#	drivers/net/ethernet/intel/i40e/i40e_main.c
#	drivers/net/ethernet/ti/netcp_core.c
#	net/sched/sch_mqprio.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 3bb13ceeda72,17e6f64299cf..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -5501,14 -7549,14 +5501,23 @@@ exit
  static int __i40e_setup_tc(struct net_device *netdev, enum tc_setup_type type,
  			   void *type_data)
  {
++<<<<<<< HEAD
 +	struct tc_mqprio_qopt *mqprio = type_data;
 +
 +	if (type != TC_SETUP_MQPRIO)
++=======
+ 	switch (type) {
+ 	case TC_SETUP_QDISC_MQPRIO:
+ 		return i40e_setup_tc(netdev, type_data);
+ 	case TC_SETUP_BLOCK:
+ 		return i40e_setup_tc_block(netdev, type_data);
+ 	default:
++>>>>>>> 575ed7d39e2f (net_sch: mqprio: Change TC_SETUP_MQPRIO to TC_SETUP_QDISC_MQPRIO)
  		return -EOPNOTSUPP;
 -	}
 +
 +	mqprio->hw = TC_MQPRIO_HW_OFFLOAD_TCS;
 +
 +	return i40e_setup_tc(netdev, mqprio->num_tc);
  }
  
  /**
diff --cc net/sched/sch_mqprio.c
index 43a580d08761,b85885a9d8a1..000000000000
--- a/net/sched/sch_mqprio.c
+++ b/net/sched/sch_mqprio.c
@@@ -38,10 -44,19 +38,23 @@@ static void mqprio_destroy(struct Qdis
  		kfree(priv->qdiscs);
  	}
  
 -	if (priv->hw_offload && dev->netdev_ops->ndo_setup_tc) {
 -		struct tc_mqprio_qopt_offload mqprio = { { 0 } };
 +	if (priv->hw_offload && __rh_has_ndo_setup_tc(dev)) {
 +		struct tc_mqprio_qopt mqprio = {};
  
++<<<<<<< HEAD
 +		__rh_call_ndo_setup_tc(dev, TC_SETUP_MQPRIO, &mqprio);
++=======
+ 		switch (priv->mode) {
+ 		case TC_MQPRIO_MODE_DCB:
+ 		case TC_MQPRIO_MODE_CHANNEL:
+ 			dev->netdev_ops->ndo_setup_tc(dev,
+ 						      TC_SETUP_QDISC_MQPRIO,
+ 						      &mqprio);
+ 			break;
+ 		default:
+ 			return;
+ 		}
++>>>>>>> 575ed7d39e2f (net_sch: mqprio: Change TC_SETUP_MQPRIO to TC_SETUP_QDISC_MQPRIO)
  	} else {
  		netdev_set_num_tc(dev, 0);
  	}
@@@ -150,9 -242,32 +163,36 @@@ static int mqprio_init(struct Qdisc *sc
  	 * supplied and verified mapping
  	 */
  	if (qopt->hw) {
 -		struct tc_mqprio_qopt_offload mqprio = {.qopt = *qopt};
 +		struct tc_mqprio_qopt mqprio = *qopt;
  
++<<<<<<< HEAD
 +		err = __rh_call_ndo_setup_tc(dev, TC_SETUP_MQPRIO, &mqprio);
++=======
+ 		switch (priv->mode) {
+ 		case TC_MQPRIO_MODE_DCB:
+ 			if (priv->shaper != TC_MQPRIO_SHAPER_DCB)
+ 				return -EINVAL;
+ 			break;
+ 		case TC_MQPRIO_MODE_CHANNEL:
+ 			mqprio.flags = priv->flags;
+ 			if (priv->flags & TC_MQPRIO_F_MODE)
+ 				mqprio.mode = priv->mode;
+ 			if (priv->flags & TC_MQPRIO_F_SHAPER)
+ 				mqprio.shaper = priv->shaper;
+ 			if (priv->flags & TC_MQPRIO_F_MIN_RATE)
+ 				for (i = 0; i < mqprio.qopt.num_tc; i++)
+ 					mqprio.min_rate[i] = priv->min_rate[i];
+ 			if (priv->flags & TC_MQPRIO_F_MAX_RATE)
+ 				for (i = 0; i < mqprio.qopt.num_tc; i++)
+ 					mqprio.max_rate[i] = priv->max_rate[i];
+ 			break;
+ 		default:
+ 			return -EINVAL;
+ 		}
+ 		err = dev->netdev_ops->ndo_setup_tc(dev,
+ 						    TC_SETUP_QDISC_MQPRIO,
+ 						    &mqprio);
++>>>>>>> 575ed7d39e2f (net_sch: mqprio: Change TC_SETUP_MQPRIO to TC_SETUP_QDISC_MQPRIO)
  		if (err)
  			return err;
  
* Unmerged path drivers/net/ethernet/freescale/dpaa/dpaa_eth.c
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3pf/hns3_enet.c
* Unmerged path drivers/net/ethernet/ti/netcp_core.c
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
index 71ac5dfc4b64..f26059a7d52c 100644
--- a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
@@ -1858,7 +1858,7 @@ static int xgbe_setup_tc(struct net_device *netdev, enum tc_setup_type type,
 	struct tc_mqprio_qopt *mqprio = type_data;
 	u8 tc;
 
-	if (type != TC_SETUP_MQPRIO)
+	if (type != TC_SETUP_QDISC_MQPRIO)
 		return -EOPNOTSUPP;
 
 	mqprio->hw = TC_MQPRIO_HW_OFFLOAD_TCS;
diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
index 2359c62692e5..dc04ceb2a863 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
@@ -4289,7 +4289,7 @@ int __bnx2x_setup_tc(struct net_device *dev, enum tc_setup_type type,
 {
 	struct tc_mqprio_qopt *mqprio = type_data;
 
-	if (type != TC_SETUP_MQPRIO)
+	if (type != TC_SETUP_QDISC_MQPRIO)
 		return -EOPNOTSUPP;
 
 	mqprio->hw = TC_MQPRIO_HW_OFFLOAD_TCS;
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt.c b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
index d1e80d4c22df..e3e3c2d32c13 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@ -7369,7 +7369,7 @@ static int bnxt_setup_tc(struct net_device *dev, enum tc_setup_type type,
 		return 0; /* will be removed after conversion from ndo */
 	case TC_SETUP_BLOCK:
 		return bnxt_setup_tc_block(dev, type_data);
-	case TC_SETUP_MQPRIO: {
+	case TC_SETUP_QDISC_MQPRIO: {
 		struct tc_mqprio_qopt *mqprio = type_data;
 
 		mqprio->hw = TC_MQPRIO_HW_OFFLOAD_TCS;
* Unmerged path drivers/net/ethernet/freescale/dpaa/dpaa_eth.c
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3pf/hns3_enet.c
diff --git a/drivers/net/ethernet/intel/fm10k/fm10k_netdev.c b/drivers/net/ethernet/intel/fm10k/fm10k_netdev.c
index d8768a60e3f4..66fd015eb2cc 100644
--- a/drivers/net/ethernet/intel/fm10k/fm10k_netdev.c
+++ b/drivers/net/ethernet/intel/fm10k/fm10k_netdev.c
@@ -1362,7 +1362,7 @@ static int __fm10k_setup_tc(struct net_device *dev, enum tc_setup_type type,
 {
 	struct tc_mqprio_qopt *mqprio = type_data;
 
-	if (type != TC_SETUP_MQPRIO)
+	if (type != TC_SETUP_QDISC_MQPRIO)
 		return -EOPNOTSUPP;
 
 	mqprio->hw = TC_MQPRIO_HW_OFFLOAD_TCS;
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index 90f60ed0b65b..e00d261c75c6 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@ -9069,7 +9069,7 @@ static int __ixgbe_setup_tc(struct net_device *dev, enum tc_setup_type type,
 		return 0; /* will be removed after conversion from ndo */
 	case TC_SETUP_BLOCK:
 		return ixgbe_setup_tc_block(dev, type_data);
-	case TC_SETUP_MQPRIO:
+	case TC_SETUP_QDISC_MQPRIO:
 		return ixgbe_setup_tc_mqprio(dev, type_data);
 	default:
 		return -EOPNOTSUPP;
diff --git a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
index f6188ebef405..f80d71d9e46d 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
@@ -131,7 +131,7 @@ static int __mlx4_en_setup_tc(struct net_device *dev, enum tc_setup_type type,
 {
 	struct tc_mqprio_qopt *mqprio = type_data;
 
-	if (type != TC_SETUP_MQPRIO)
+	if (type != TC_SETUP_QDISC_MQPRIO)
 		return -EOPNOTSUPP;
 
 	if (mqprio->num_tc && mqprio->num_tc != MLX4_EN_NUM_UP_HIGH)
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index f9f9996c2b9e..cb98a0a55458 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -2943,7 +2943,7 @@ static int mlx5e_setup_tc(struct net_device *dev, enum tc_setup_type type,
 	case TC_SETUP_CLSFLOWER:
 		return mlx5e_setup_tc_cls_flower(dev, type_data);
 #endif
-	case TC_SETUP_MQPRIO:
+	case TC_SETUP_QDISC_MQPRIO:
 		return mlx5e_setup_tc_mqprio(dev, type_data);
 	default:
 		return -EOPNOTSUPP;
diff --git a/drivers/net/ethernet/sfc/falcon/tx.c b/drivers/net/ethernet/sfc/falcon/tx.c
index 2071a5a15f70..1ee2ed7e7d5f 100644
--- a/drivers/net/ethernet/sfc/falcon/tx.c
+++ b/drivers/net/ethernet/sfc/falcon/tx.c
@@ -435,7 +435,7 @@ int ef4_setup_tc(struct net_device *net_dev, enum tc_setup_type type,
 	unsigned tc, num_tc;
 	int rc;
 
-	if (type != TC_SETUP_MQPRIO)
+	if (type != TC_SETUP_QDISC_MQPRIO)
 		return -EOPNOTSUPP;
 
 	num_tc = mqprio->num_tc;
diff --git a/drivers/net/ethernet/sfc/tx.c b/drivers/net/ethernet/sfc/tx.c
index 6f000e72f611..8a2832882433 100644
--- a/drivers/net/ethernet/sfc/tx.c
+++ b/drivers/net/ethernet/sfc/tx.c
@@ -683,7 +683,7 @@ int efx_setup_tc(struct net_device *net_dev, enum tc_setup_type type,
 	unsigned tc, num_tc;
 	int rc;
 
-	if (type != TC_SETUP_MQPRIO)
+	if (type != TC_SETUP_QDISC_MQPRIO)
 		return -EOPNOTSUPP;
 
 	num_tc = mqprio->num_tc;
* Unmerged path drivers/net/ethernet/ti/netcp_core.c
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index dbc794e21d64..8f399e6d3d9c 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -809,7 +809,7 @@ typedef u16 (*select_queue_fallback_t)(struct net_device *dev,
 				       struct sk_buff *skb);
 
 enum tc_setup_type {
-	TC_SETUP_MQPRIO,
+	TC_SETUP_QDISC_MQPRIO,
 	TC_SETUP_CLSU32,
 	TC_SETUP_CLSFLOWER,
 	TC_SETUP_CLSMATCHALL,
* Unmerged path net/sched/sch_mqprio.c
