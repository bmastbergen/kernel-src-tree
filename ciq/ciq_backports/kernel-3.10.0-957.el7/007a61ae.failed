nvme: fix visibility of "uuid" ns attribute

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [nvme] fix visibility of "uuid" ns attribute (David Milburn) [1519689]
Rebuild_FUZZ: 92.50%
commit-author Martin Wilck <mwilck@suse.com>
commit 007a61ae2f35c7fcf767313285c4924e81f11983
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/007a61ae.failed

"uuid" must be invisible if both ns->uuid and ns->nguid are unset,
not if either one is.

Fixes: d934f9848a77 "nvme: provide UUID value to userspace"
	Signed-off-by: Martin Wilck <mwilck@suse.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 007a61ae2f35c7fcf767313285c4924e81f11983)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index ec7848893dcb,5a14cc7f28ee..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -1955,11 -2133,10 +1955,15 @@@ static umode_t nvme_ns_attrs_are_visibl
  		struct attribute *a, int n)
  {
  	struct device *dev = container_of(kobj, struct device, kobj);
 -	struct nvme_ns *ns = nvme_get_ns_from_dev(dev);
 +	struct nvme_ns *ns = dev_to_disk(dev)->private_data;
 +	static const u8 null_uuid[16];
  
  	if (a == &dev_attr_uuid.attr) {
++<<<<<<< HEAD
 +	  if (!memcmp(ns->uuid, null_uuid, 16) ||
++=======
+ 		if (uuid_is_null(&ns->uuid) &&
++>>>>>>> 007a61ae2f35 (nvme: fix visibility of "uuid" ns attribute)
  		    !memchr_inv(ns->nguid, 0, sizeof(ns->nguid)))
  			return 0;
  	}
* Unmerged path drivers/nvme/host/core.c
