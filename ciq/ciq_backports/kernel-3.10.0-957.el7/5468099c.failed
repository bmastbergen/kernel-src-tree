usbip: vhci_hcd: update 'status' file header and format

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Shuah Khan <shuahkh@osg.samsung.com>
commit 5468099c747240ed97dbb34340fece8ca87be34f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/5468099c.failed

Commit 2f2d0088eb93
("usbip: prevent vhci_hcd driver from leaking a socket pointer address")
in the /sys/devices/platform/vhci_hcd/status.

Fix the header and field alignment to reflect the changes and make it
easier to read.

	Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 5468099c747240ed97dbb34340fece8ca87be34f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/usbip/vhci_sysfs.c
diff --cc drivers/usb/usbip/vhci_sysfs.c
index 87e53cd8f10d,a9de15cab2ec..000000000000
--- a/drivers/usb/usbip/vhci_sysfs.c
+++ b/drivers/usb/usbip/vhci_sysfs.c
@@@ -14,6 -15,47 +14,50 @@@
  
  /* TODO: refine locking ?*/
  
++<<<<<<< HEAD
++=======
+ /*
+  * output example:
+  * hub port sta spd dev       sockfd local_busid
+  * hs  0000 004 000 00000000  000003 1-2.3
+  * ................................................
+  * ss  0008 004 000 00000000  000004 2-3.4
+  * ................................................
+  *
+  * Output includes socket fd instead of socket pointer address to avoid
+  * leaking kernel memory address in:
+  *	/sys/devices/platform/vhci_hcd.0/status and in debug output.
+  * The socket pointer address is not used at the moment and it was made
+  * visible as a convenient way to find IP address from socket pointer
+  * address by looking up /proc/net/{tcp,tcp6}. As this opens a security
+  * hole, the change is made to use sockfd instead.
+  *
+  */
+ static void port_show_vhci(char **out, int hub, int port, struct vhci_device *vdev)
+ {
+ 	if (hub == HUB_SPEED_HIGH)
+ 		*out += sprintf(*out, "hs  %04u %03u ",
+ 				      port, vdev->ud.status);
+ 	else /* hub == HUB_SPEED_SUPER */
+ 		*out += sprintf(*out, "ss  %04u %03u ",
+ 				      port, vdev->ud.status);
+ 
+ 	if (vdev->ud.status == VDEV_ST_USED) {
+ 		*out += sprintf(*out, "%03u %08x ",
+ 				      vdev->speed, vdev->devid);
+ 		*out += sprintf(*out, "%06u %s",
+ 				      vdev->ud.sockfd,
+ 				      dev_name(&vdev->udev->dev));
+ 
+ 	} else {
+ 		*out += sprintf(*out, "000 00000000 ");
+ 		*out += sprintf(*out, "000000 0-0");
+ 	}
+ 
+ 	*out += sprintf(*out, "\n");
+ }
+ 
++>>>>>>> 5468099c7472 (usbip: vhci_hcd: update 'status' file header and format)
  /* Sysfs entry to show port status */
  static ssize_t status_show_vhci(int pdev_nr, char *out)
  {
@@@ -114,7 -148,7 +158,11 @@@ static ssize_t status_show(struct devic
  	int pdev_nr;
  
  	out += sprintf(out,
++<<<<<<< HEAD
 +		       "port sta spd dev      socket           local_busid\n");
++=======
+ 		       "hub port sta spd dev      sockfd local_busid\n");
++>>>>>>> 5468099c7472 (usbip: vhci_hcd: update 'status' file header and format)
  
  	pdev_nr = status_name_to_id(attr->attr.name);
  	if (pdev_nr < 0)
* Unmerged path drivers/usb/usbip/vhci_sysfs.c
