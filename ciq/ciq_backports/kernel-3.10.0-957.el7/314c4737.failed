ceph: fix un-balanced fsc->writeback_count update

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 314c4737a45dd4447eac6d313e3715b25785f58b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/314c4737.failed

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 314c4737a45dd4447eac6d313e3715b25785f58b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/addr.c
diff --cc fs/ceph/addr.c
index adf7d1009bc0,b4336b42ce3b..000000000000
--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@@ -488,14 -576,10 +488,19 @@@ static int writepage_nounlock(struct pa
  	struct inode *inode;
  	struct ceph_inode_info *ci;
  	struct ceph_fs_client *fsc;
 +	struct ceph_osd_client *osdc;
  	struct ceph_snap_context *snapc, *oldest;
  	loff_t page_off = page_offset(page);
++<<<<<<< HEAD
 +	loff_t snap_size = -1;
 +	long writeback_stat;
 +	u64 truncate_size;
 +	u32 truncate_seq;
 +	int err, len = PAGE_CACHE_SIZE;
++=======
+ 	int err, len = PAGE_SIZE;
+ 	struct ceph_writeback_ctl ceph_wbc;
++>>>>>>> 314c4737a45d (ceph: fix un-balanced fsc->writeback_count update)
  
  	dout("writepage %p idx %lu\n", page, page->index);
  
@@@ -538,16 -618,15 +543,15 @@@
  	dout("writepage %p page %p index %lu on %llu~%u snapc %p seq %lld\n",
  	     inode, page, page->index, page_off, len, snapc, snapc->seq);
  
- 	writeback_stat = atomic_long_inc_return(&fsc->writeback_count);
- 	if (writeback_stat >
+ 	if (atomic_long_inc_return(&fsc->writeback_count) >
  	    CONGESTION_ON_THRESH(fsc->mount_options->congestion_kb))
 -		set_bdi_congested(inode_to_bdi(inode), BLK_RW_ASYNC);
 +		set_bdi_congested(&fsc->backing_dev_info, BLK_RW_ASYNC);
  
  	set_page_writeback(page);
 -	err = ceph_osdc_writepages(&fsc->client->osdc, ceph_vino(inode),
 -				   &ci->i_layout, snapc, page_off, len,
 -				   ceph_wbc.truncate_seq,
 -				   ceph_wbc.truncate_size,
 +	err = ceph_osdc_writepages(osdc, ceph_vino(inode),
 +				   &ci->i_layout, snapc,
 +				   page_off, len,
 +				   truncate_seq, truncate_size,
  				   &inode->i_mtime, &page, 1);
  	if (err < 0) {
  		struct writeback_control tmp_wbc;
* Unmerged path fs/ceph/addr.c
