netfilter: ipset: Support comments in the list-type ipset.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] netfilter: ipset: Support comments in the list-type ipset (Stefano Brivio) [1557599]
Rebuild_FUZZ: 99.13%
commit-author Oliver Smith <oliver@8.c.9.b.0.7.4.0.1.0.0.2.ip6.arpa>
commit 81b10bb4bd16ea975c007f9bb2c2676cef6ade10
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/81b10bb4.failed

This provides kernel support for creating list ipsets with the comment
annotation extension.

	Signed-off-by: Oliver Smith <oliver@8.c.9.b.0.7.4.0.1.0.0.2.ip6.arpa>
	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit 81b10bb4bd16ea975c007f9bb2c2676cef6ade10)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_list_set.c
diff --cc net/netfilter/ipset/ip_set_list_set.c
index a9a97c07ecb4,f9681dcf7476..000000000000
--- a/net/netfilter/ipset/ip_set_list_set.c
+++ b/net/netfilter/ipset/ip_set_list_set.c
@@@ -219,9 -189,11 +220,15 @@@ list_set_add(struct ip_set *set, u32 i
  
  	e->id = d->id;
  	if (SET_WITH_TIMEOUT(set))
 -		ip_set_timeout_set(ext_timeout(e, set), ext->timeout);
 +		ip_set_timeout_set(ext_timeout(e, map), ext->timeout);
  	if (SET_WITH_COUNTER(set))
++<<<<<<< HEAD
 +		ip_set_init_counter(ext_counter(e, map), ext);
++=======
+ 		ip_set_init_counter(ext_counter(e, set), ext);
+ 	if (SET_WITH_COMMENT(set) && ext->comment)
+ 		ip_set_init_comment(ext_comment(e, set), ext);
++>>>>>>> 81b10bb4bd16 (netfilter: ipset: Support comments in the list-type ipset.)
  	return 0;
  }
  
@@@ -320,12 -296,16 +327,18 @@@ list_set_uadd(struct ip_set *set, void 
  			/* Can't re-add */
  			return -IPSET_ERR_EXIST;
  		/* Update extensions */
 -		ip_set_ext_destroy(set, e);
 -
  		if (SET_WITH_TIMEOUT(set))
 -			ip_set_timeout_set(ext_timeout(e, set), ext->timeout);
 +			ip_set_timeout_set(ext_timeout(e, map), ext->timeout);
  		if (SET_WITH_COUNTER(set))
++<<<<<<< HEAD
 +			ip_set_init_counter(ext_counter(e, map), ext);
++=======
+ 			ip_set_init_counter(ext_counter(e, set), ext);
+ 		if (SET_WITH_COMMENT(set))
+ 			ip_set_init_comment(ext_comment(e, set), ext);
++>>>>>>> 81b10bb4bd16 (netfilter: ipset: Support comments in the list-type ipset.)
  		/* Set is already added to the list */
 -		ip_set_put_byindex(d->id);
 +		ip_set_put_byindex(map->net, d->id);
  		return 0;
  	}
  insert:
@@@ -487,15 -466,12 +500,21 @@@ list_set_head(struct ip_set *set, struc
  	if (!nested)
  		goto nla_put_failure;
  	if (nla_put_net32(skb, IPSET_ATTR_SIZE, htonl(map->size)) ||
++<<<<<<< HEAD
 +	    (SET_WITH_TIMEOUT(set) &&
 +	     nla_put_net32(skb, IPSET_ATTR_TIMEOUT, htonl(map->timeout))) ||
 +	    (SET_WITH_COUNTER(set) &&
 +	     nla_put_net32(skb, IPSET_ATTR_CADT_FLAGS,
 +			   htonl(IPSET_FLAG_WITH_COUNTERS))) ||
 +	    nla_put_net32(skb, IPSET_ATTR_REFERENCES, htonl(set->ref)) ||
++=======
+ 	    nla_put_net32(skb, IPSET_ATTR_REFERENCES, htonl(set->ref - 1)) ||
++>>>>>>> 81b10bb4bd16 (netfilter: ipset: Support comments in the list-type ipset.)
  	    nla_put_net32(skb, IPSET_ATTR_MEMSIZE,
 -			  htonl(sizeof(*map) + map->size * set->dsize)))
 +			  htonl(sizeof(*map) + map->size * map->dsize)))
  		goto nla_put_failure;
+ 	if (unlikely(ip_set_put_flags(skb, set)))
+ 		goto nla_put_failure;
  	ipset_nest_end(skb, nested);
  
  	return 0;
@@@ -537,11 -513,14 +556,14 @@@ list_set_list(const struct ip_set *set
  		if (SET_WITH_TIMEOUT(set) &&
  		    nla_put_net32(skb, IPSET_ATTR_TIMEOUT,
  				  htonl(ip_set_timeout_get(
 -						ext_timeout(e, set)))))
 +						ext_timeout(e, map)))))
  			goto nla_put_failure;
  		if (SET_WITH_COUNTER(set) &&
 -		    ip_set_put_counter(skb, ext_counter(e, set)))
 +		    ip_set_put_counter(skb, ext_counter(e, map)))
  			goto nla_put_failure;
+ 		if (SET_WITH_COMMENT(set) &&
+ 		    ip_set_put_comment(skb, ext_comment(e, set)))
+ 			goto nla_put_failure;
  		ipset_nest_end(skb, nested);
  	}
  finish:
* Unmerged path net/netfilter/ipset/ip_set_list_set.c
