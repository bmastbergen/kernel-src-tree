perf, bpf: fix conditional call to bpf_overflow_handler

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnd Bergmann <arnd@arndb.de>
commit f1e4ba5b6a6555d1f6b174d4fd0a96a9363bb57f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/f1e4ba5b.failed

The newly added bpf_overflow_handler function is only built of both
CONFIG_EVENT_TRACING and CONFIG_BPF_SYSCALL are enabled, but the caller
only checks the latter:

kernel/events/core.c: In function 'perf_event_alloc':
kernel/events/core.c:9106:27: error: 'bpf_overflow_handler' undeclared (first use in this function)

This changes the caller so we also skip this call if CONFIG_EVENT_TRACING
is disabled entirely.

	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
Fixes: aa6a5f3cb2b2 ("perf, bpf: add perf events core support for BPF_PROG_TYPE_PERF_EVENT programs")
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f1e4ba5b6a6555d1f6b174d4fd0a96a9363bb57f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/events/core.c
diff --cc kernel/events/core.c
index 3da42ad5a6b0,a7b8c1c75fa7..000000000000
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@@ -9050,6 -9072,19 +9050,22 @@@ perf_event_alloc(struct perf_event_att
  	if (!overflow_handler && parent_event) {
  		overflow_handler = parent_event->overflow_handler;
  		context = parent_event->overflow_handler_context;
++<<<<<<< HEAD
++=======
+ #if defined(CONFIG_BPF_SYSCALL) && defined(CONFIG_EVENT_TRACING)
+ 		if (overflow_handler == bpf_overflow_handler) {
+ 			struct bpf_prog *prog = bpf_prog_inc(parent_event->prog);
+ 
+ 			if (IS_ERR(prog)) {
+ 				err = PTR_ERR(prog);
+ 				goto err_ns;
+ 			}
+ 			event->prog = prog;
+ 			event->orig_overflow_handler =
+ 				parent_event->orig_overflow_handler;
+ 		}
+ #endif
++>>>>>>> f1e4ba5b6a65 (perf, bpf: fix conditional call to bpf_overflow_handler)
  	}
  
  	if (overflow_handler) {
* Unmerged path kernel/events/core.c
