drm/i915: Disallow interlaced modes on g4x DP outputs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ville Syrj채l채 <ville.syrjala@linux.intel.com>
commit 929168c5f3df5d9ea0ef426c33e971157d045eab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/929168c5.failed

Looks like interlaced DP output doesn't work on g4x either. Not all
that surprising considering we already established that interlaced
DP output is busted on VLV/CHV.

	Cc: stable@vger.kernel.org
	Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
	Reviewed-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20180613160553.11664-1-ville.syrjala@linux.intel.com
(cherry picked from commit 929168c5f3df5d9ea0ef426c33e971157d045eab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_dp.c
diff --cc drivers/gpu/drm/i915/intel_dp.c
index 533c6778522a,2fe85c63d5ce..000000000000
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@@ -1708,78 -1872,19 +1708,93 @@@ intel_dp_compute_config(struct intel_en
  						conn_state->scaling_mode);
  	}
  
 +	if (adjusted_mode->flags & DRM_MODE_FLAG_DBLCLK)
 +		return false;
 +
 +	/* Use values requested by Compliance Test Request */
 +	if (intel_dp->compliance.test_type == DP_TEST_LINK_TRAINING) {
 +		int index;
 +
 +		/* Validate the compliance test data since max values
 +		 * might have changed due to link train fallback.
 +		 */
 +		if (intel_dp_link_params_valid(intel_dp, intel_dp->compliance.test_link_rate,
 +					       intel_dp->compliance.test_lane_count)) {
 +			index = intel_dp_rate_index(intel_dp->common_rates,
 +						    intel_dp->num_common_rates,
 +						    intel_dp->compliance.test_link_rate);
 +			if (index >= 0)
 +				min_clock = max_clock = index;
 +			min_lane_count = max_lane_count = intel_dp->compliance.test_lane_count;
 +		}
 +	}
 +	DRM_DEBUG_KMS("DP link computation with max lane count %i "
 +		      "max bw %d pixel clock %iKHz\n",
 +		      max_lane_count, intel_dp->common_rates[max_clock],
 +		      adjusted_mode->crtc_clock);
 +
 +	/* Walk through all bpp values. Luckily they're all nicely spaced with 2
 +	 * bpc in between. */
 +	bpp = intel_dp_compute_bpp(intel_dp, pipe_config);
 +	if (is_edp(intel_dp)) {
 +
 +		/* Get bpp from vbt only for panels that dont have bpp in edid */
 +		if (intel_connector->base.display_info.bpc == 0 &&
 +			(dev_priv->vbt.edp.bpp && dev_priv->vbt.edp.bpp < bpp)) {
 +			DRM_DEBUG_KMS("clamping bpp for eDP panel to BIOS-provided %i\n",
 +				      dev_priv->vbt.edp.bpp);
 +			bpp = dev_priv->vbt.edp.bpp;
 +		}
 +
 +		/*
 +		 * Use the maximum clock and number of lanes the eDP panel
 +		 * advertizes being capable of. The panels are generally
 +		 * designed to support only a single clock and lane
 +		 * configuration, and typically these values correspond to the
 +		 * native resolution of the panel.
 +		 */
 +		min_lane_count = max_lane_count;
 +		min_clock = max_clock;
 +	}
 +
 +	for (; bpp >= 6*3; bpp -= 2*3) {
 +		mode_rate = intel_dp_link_required(adjusted_mode->crtc_clock,
 +						   bpp);
 +
 +		for (clock = min_clock; clock <= max_clock; clock++) {
 +			for (lane_count = min_lane_count;
 +				lane_count <= max_lane_count;
 +				lane_count <<= 1) {
 +
 +				link_clock = intel_dp->common_rates[clock];
 +				link_avail = intel_dp_max_data_rate(link_clock,
 +								    lane_count);
 +
 +				if (mode_rate <= link_avail) {
 +					goto found;
 +				}
 +			}
 +		}
 +	}
 +
++<<<<<<< HEAD
 +	return false;
++=======
+ 	if (adjusted_mode->flags & DRM_MODE_FLAG_DBLSCAN)
+ 		return false;
+ 
+ 	if (HAS_GMCH_DISPLAY(dev_priv) &&
+ 	    adjusted_mode->flags & DRM_MODE_FLAG_INTERLACE)
+ 		return false;
+ 
+ 	if (adjusted_mode->flags & DRM_MODE_FLAG_DBLCLK)
+ 		return false;
+ 
+ 	if (!intel_dp_compute_link_config(encoder, pipe_config))
+ 		return false;
++>>>>>>> 929168c5f3df (drm/i915: Disallow interlaced modes on g4x DP outputs)
  
 +found:
  	if (intel_conn_state->broadcast_rgb == INTEL_BROADCAST_RGB_AUTO) {
  		/*
  		 * See:
@@@ -6075,10 -6357,11 +6090,15 @@@ intel_dp_init_connector(struct intel_di
  	drm_connector_init(dev, connector, &intel_dp_connector_funcs, type);
  	drm_connector_helper_add(connector, &intel_dp_connector_helper_funcs);
  
++<<<<<<< HEAD
 +	connector->interlace_allowed = true;
++=======
+ 	if (!HAS_GMCH_DISPLAY(dev_priv))
+ 		connector->interlace_allowed = true;
++>>>>>>> 929168c5f3df (drm/i915: Disallow interlaced modes on g4x DP outputs)
  	connector->doublescan_allowed = 0;
  
 -	intel_encoder->hpd_pin = intel_hpd_pin_default(dev_priv, port);
 +	intel_dp_init_connector_port_info(intel_dig_port);
  
  	intel_dp_aux_init(intel_dp);
  
* Unmerged path drivers/gpu/drm/i915/intel_dp.c
