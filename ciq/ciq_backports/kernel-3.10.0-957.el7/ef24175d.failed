net: aquantia: Remove create/destroy from hw ops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] aquantia: Remove create/destroy from hw ops (David Arcari) [1546765]
Rebuild_FUZZ: 94.51%
commit-author Igor Russkikh <igor.russkikh@aquantia.com>
commit ef24175d9fd2457e20c4122a1904a4b1ccfb661a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ef24175d.failed

These ops are not related to HW and are now implemented in pci module.
Thus, remove these ops pointers and implementation.

	Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ef24175d9fd2457e20c4122a1904a4b1ccfb661a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
#	drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c
diff --cc drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
index 773434b96bb0,9c9fb1e8b453..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
@@@ -17,46 -18,67 +17,49 @@@
  #include "hw_atl_llh.h"
  #include "hw_atl_a0_internal.h"
  
 -#define DEFAULT_A0_BOARD_BASIC_CAPABILITIES \
 -	.is_64_dma = true, \
 -	.msix_irqs = 4U, \
 -	.irq_mask = ~0U, \
 -	.vecs = HW_ATL_A0_RSS_MAX, \
 -	.tcs = HW_ATL_A0_TC_MAX, \
 -	.rxd_alignment = 1U, \
 -	.rxd_size = HW_ATL_A0_RXD_SIZE, \
 -	.rxds = 248U, \
 -	.txd_alignment = 1U, \
 -	.txd_size = HW_ATL_A0_TXD_SIZE, \
 -	.txds = 8U * 1024U, \
 -	.txhwb_alignment = 4096U, \
 -	.tx_rings = HW_ATL_A0_TX_RINGS, \
 -	.rx_rings = HW_ATL_A0_RX_RINGS, \
 -	.hw_features = NETIF_F_HW_CSUM | \
 -			NETIF_F_RXHASH | \
 -			NETIF_F_RXCSUM | \
 -			NETIF_F_SG | \
 -			NETIF_F_TSO, \
 -	.hw_priv_flags = IFF_UNICAST_FLT, \
 -	.flow_control = true, \
 -	.mtu = HW_ATL_A0_MTU_JUMBO, \
 -	.mac_regs_count = 88
 -
 -const struct aq_hw_caps_s hw_atl_a0_caps_aqc100 = {
 -	DEFAULT_A0_BOARD_BASIC_CAPABILITIES,
 -	.media_type = AQ_HW_MEDIA_TYPE_FIBRE,
 -	.link_speed_msk = HW_ATL_A0_RATE_5G  |
 -			  HW_ATL_A0_RATE_2G5 |
 -			  HW_ATL_A0_RATE_1G  |
 -			  HW_ATL_A0_RATE_100M,
 -};
 +static int hw_atl_a0_get_hw_caps(struct aq_hw_s *self,
 +				 struct aq_hw_caps_s *aq_hw_caps,
 +				 unsigned short device,
 +				 unsigned short subsystem_device)
 +{
 +	memcpy(aq_hw_caps, &hw_atl_a0_hw_caps_, sizeof(*aq_hw_caps));
  
 -const struct aq_hw_caps_s hw_atl_a0_caps_aqc107 = {
 -	DEFAULT_A0_BOARD_BASIC_CAPABILITIES,
 -	.media_type = AQ_HW_MEDIA_TYPE_TP,
 -	.link_speed_msk = HW_ATL_A0_RATE_10G |
 -			  HW_ATL_A0_RATE_5G  |
 -			  HW_ATL_A0_RATE_2G5 |
 -			  HW_ATL_A0_RATE_1G  |
 -			  HW_ATL_A0_RATE_100M,
 -};
 +	if (device == HW_ATL_DEVICE_ID_D108 && subsystem_device == 0x0001)
 +		aq_hw_caps->link_speed_msk &= ~HW_ATL_A0_RATE_10G;
  
 -const struct aq_hw_caps_s hw_atl_a0_caps_aqc108 = {
 -	DEFAULT_A0_BOARD_BASIC_CAPABILITIES,
 -	.media_type = AQ_HW_MEDIA_TYPE_TP,
 -	.link_speed_msk = HW_ATL_A0_RATE_5G  |
 -			  HW_ATL_A0_RATE_2G5 |
 -			  HW_ATL_A0_RATE_1G  |
 -			  HW_ATL_A0_RATE_100M,
 -};
 +	if (device == HW_ATL_DEVICE_ID_D109 && subsystem_device == 0x0001) {
 +		aq_hw_caps->link_speed_msk &= ~HW_ATL_A0_RATE_10G;
 +		aq_hw_caps->link_speed_msk &= ~HW_ATL_A0_RATE_5G;
 +	}
  
 -const struct aq_hw_caps_s hw_atl_a0_caps_aqc109 = {
 -	DEFAULT_A0_BOARD_BASIC_CAPABILITIES,
 -	.media_type = AQ_HW_MEDIA_TYPE_TP,
 -	.link_speed_msk = HW_ATL_A0_RATE_2G5 |
 -			  HW_ATL_A0_RATE_1G  |
 -			  HW_ATL_A0_RATE_100M,
 -};
++<<<<<<< HEAD
 +	return 0;
 +}
 +
 +static struct aq_hw_s *hw_atl_a0_create(struct aq_pci_func_s *aq_pci_func,
 +					unsigned int port)
 +{
 +	struct aq_hw_s *self = NULL;
 +
 +	self = kzalloc(sizeof(*self), GFP_KERNEL);
 +	if (!self)
 +		goto err_exit;
 +
 +	self->aq_pci_func = aq_pci_func;
  
 +	self->not_ff_addr = 0x10U;
 +
 +err_exit:
 +	return self;
 +}
 +
 +static void hw_atl_a0_destroy(struct aq_hw_s *self)
 +{
 +	kfree(self);
 +}
 +
++=======
++>>>>>>> ef24175d9fd2 (net: aquantia: Remove create/destroy from hw ops)
  static int hw_atl_a0_hw_reset(struct aq_hw_s *self)
  {
  	int err = 0;
@@@ -860,11 -882,7 +863,15 @@@ err_exit
  	return err;
  }
  
++<<<<<<< HEAD
 +static const struct aq_hw_ops hw_atl_ops_ = {
 +	.create               = hw_atl_a0_create,
 +	.destroy              = hw_atl_a0_destroy,
 +	.get_hw_caps          = hw_atl_a0_get_hw_caps,
 +
++=======
+ const struct aq_hw_ops hw_atl_ops_a0 = {
++>>>>>>> ef24175d9fd2 (net: aquantia: Remove create/destroy from hw ops)
  	.hw_get_mac_permanent = hw_atl_utils_get_mac_permanent,
  	.hw_set_mac_address   = hw_atl_a0_hw_mac_addr_set,
  	.hw_get_link_status   = hw_atl_utils_mpi_get_link_status,
diff --cc drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c
index 5e4035a987be,00edad1085f8..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c
@@@ -18,46 -19,69 +18,24 @@@
  #include "hw_atl_b0_internal.h"
  #include "hw_atl_llh_internal.h"
  
 -#define DEFAULT_B0_BOARD_BASIC_CAPABILITIES \
 -	.is_64_dma = true,	\
 -	.msix_irqs = 4U,	\
 -	.irq_mask = ~0U,	\
 -	.vecs = HW_ATL_B0_RSS_MAX,	\
 -	.tcs = HW_ATL_B0_TC_MAX,	\
 -	.rxd_alignment = 1U,		\
 -	.rxd_size = HW_ATL_B0_RXD_SIZE, \
 -	.rxds = 4U * 1024U,		\
 -	.txd_alignment = 1U,		\
 -	.txd_size = HW_ATL_B0_TXD_SIZE, \
 -	.txds = 8U * 1024U,		\
 -	.txhwb_alignment = 4096U,	\
 -	.tx_rings = HW_ATL_B0_TX_RINGS, \
 -	.rx_rings = HW_ATL_B0_RX_RINGS, \
 -	.hw_features = NETIF_F_HW_CSUM | \
 -			NETIF_F_RXCSUM | \
 -			NETIF_F_RXHASH | \
 -			NETIF_F_SG |  \
 -			NETIF_F_TSO | \
 -			NETIF_F_LRO,  \
 -	.hw_priv_flags = IFF_UNICAST_FLT,   \
 -	.flow_control = true,		\
 -	.mtu = HW_ATL_B0_MTU_JUMBO,	\
 -	.mac_regs_count = 88
 -
 -const struct aq_hw_caps_s hw_atl_b0_caps_aqc100 = {
 -	DEFAULT_B0_BOARD_BASIC_CAPABILITIES,
 -	.media_type = AQ_HW_MEDIA_TYPE_FIBRE,
 -	.link_speed_msk = HW_ATL_B0_RATE_10G |
 -			  HW_ATL_B0_RATE_5G  |
 -			  HW_ATL_B0_RATE_2G5 |
 -			  HW_ATL_B0_RATE_1G  |
 -			  HW_ATL_B0_RATE_100M,
 -};
 +static int hw_atl_b0_get_hw_caps(struct aq_hw_s *self,
 +				 struct aq_hw_caps_s *aq_hw_caps,
 +				 unsigned short device,
 +				 unsigned short subsystem_device)
 +{
 +	memcpy(aq_hw_caps, &hw_atl_b0_hw_caps_, sizeof(*aq_hw_caps));
  
 -const struct aq_hw_caps_s hw_atl_b0_caps_aqc107 = {
 -	DEFAULT_B0_BOARD_BASIC_CAPABILITIES,
 -	.media_type = AQ_HW_MEDIA_TYPE_TP,
 -	.link_speed_msk = HW_ATL_B0_RATE_10G |
 -			  HW_ATL_B0_RATE_5G  |
 -			  HW_ATL_B0_RATE_2G5 |
 -			  HW_ATL_B0_RATE_1G  |
 -			  HW_ATL_B0_RATE_100M,
 -};
 +	if (device == HW_ATL_DEVICE_ID_D108 && subsystem_device == 0x0001)
 +		aq_hw_caps->link_speed_msk &= ~HW_ATL_B0_RATE_10G;
  
 -const struct aq_hw_caps_s hw_atl_b0_caps_aqc108 = {
 -	DEFAULT_B0_BOARD_BASIC_CAPABILITIES,
 -	.media_type = AQ_HW_MEDIA_TYPE_TP,
 -	.link_speed_msk = HW_ATL_B0_RATE_5G  |
 -			  HW_ATL_B0_RATE_2G5 |
 -			  HW_ATL_B0_RATE_1G  |
 -			  HW_ATL_B0_RATE_100M,
 -};
 +	if (device == HW_ATL_DEVICE_ID_D109 && subsystem_device == 0x0001) {
 +		aq_hw_caps->link_speed_msk &= ~HW_ATL_B0_RATE_10G;
 +		aq_hw_caps->link_speed_msk &= ~HW_ATL_B0_RATE_5G;
 +	}
  
 -const struct aq_hw_caps_s hw_atl_b0_caps_aqc109 = {
 -	DEFAULT_B0_BOARD_BASIC_CAPABILITIES,
 -	.media_type = AQ_HW_MEDIA_TYPE_TP,
 -	.link_speed_msk = HW_ATL_B0_RATE_2G5 |
 -			  HW_ATL_B0_RATE_1G  |
 -			  HW_ATL_B0_RATE_100M,
 -};
 +	return 0;
 +}
  
- static struct aq_hw_s *hw_atl_b0_create(struct aq_pci_func_s *aq_pci_func,
- 					unsigned int port)
- {
- 	struct aq_hw_s *self = NULL;
- 
- 	self = kzalloc(sizeof(*self), GFP_KERNEL);
- 	if (!self)
- 		goto err_exit;
- 
- 	self->aq_pci_func = aq_pci_func;
- 
- 	self->not_ff_addr = 0x10U;
- 
- err_exit:
- 	return self;
- }
- 
- static void hw_atl_b0_destroy(struct aq_hw_s *self)
- {
- 	kfree(self);
- }
- 
  static int hw_atl_b0_hw_reset(struct aq_hw_s *self)
  {
  	int err = 0;
@@@ -934,11 -958,7 +912,15 @@@ err_exit
  	return err;
  }
  
++<<<<<<< HEAD
 +static const struct aq_hw_ops hw_atl_ops_ = {
 +	.create               = hw_atl_b0_create,
 +	.destroy              = hw_atl_b0_destroy,
 +	.get_hw_caps          = hw_atl_b0_get_hw_caps,
 +
++=======
+ const struct aq_hw_ops hw_atl_ops_b0 = {
++>>>>>>> ef24175d9fd2 (net: aquantia: Remove create/destroy from hw ops)
  	.hw_get_mac_permanent = hw_atl_utils_get_mac_permanent,
  	.hw_set_mac_address   = hw_atl_b0_hw_mac_addr_set,
  	.hw_get_link_status   = hw_atl_utils_mpi_get_link_status,
diff --git a/drivers/net/ethernet/aquantia/atlantic/aq_hw.h b/drivers/net/ethernet/aquantia/atlantic/aq_hw.h
index cdd1acd417c2..bba6bd95446d 100644
--- a/drivers/net/ethernet/aquantia/atlantic/aq_hw.h
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_hw.h
@@ -90,7 +90,6 @@ struct aq_stats_s {
 struct aq_hw_s {
 	atomic_t flags;
 	struct aq_nic_cfg_s *aq_nic_cfg;
-	struct aq_pci_func_s *aq_pci_func;
 	void __iomem *mmio;
 	unsigned int not_ff_addr;
 	struct aq_hw_link_status_s aq_link_status;
@@ -115,10 +114,6 @@ struct aq_nic_cfg_s;
 struct sk_buff;
 
 struct aq_hw_ops {
-	struct aq_hw_s *(*create)(struct aq_pci_func_s *aq_pci_func,
-				  unsigned int port);
-
-	void (*destroy)(struct aq_hw_s *self);
 
 	int (*get_hw_caps)(struct aq_hw_s *self,
 			   struct aq_hw_caps_s *aq_hw_caps,
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c
