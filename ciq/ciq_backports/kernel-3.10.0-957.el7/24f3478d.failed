ext4: auto disable dax instead of failing mount

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit 24f3478d664b1eaa6f8860d3aa521aebe51b2a62
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/24f3478d.failed

Bring the ext4 filesystem in line with xfs that only warns and continues
when the "-o dax" option is specified to mount and the backing device
does not support dax. This is in preparation for removing dax support
from devices that do not enable get_user_pages() operations on dax
mappings. In other words 'gup' support is required and configurations
that were using so called 'page-less' dax will be converted back to
using the page cache.

Removing the broken 'page-less' dax support is a pre-requisite for
removing the "EXPERIMENTAL" warning when mounting a filesystem in dax
mode.

	Reviewed-by: Jan Kara <jack@suse.cz>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 24f3478d664b1eaa6f8860d3aa521aebe51b2a62)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/super.c
diff --cc fs/ext4/super.c
index 1cdc2be766ba,18873ea89e08..000000000000
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@@ -3778,21 -3707,23 +3778,35 @@@ static int ext4_fill_super(struct super
  	}
  
  	if (sbi->s_mount_opt & EXT4_MOUNT_DAX) {
 -		if (ext4_has_feature_inline_data(sb)) {
 +		static bool printed = false;
 +
 +		if (EXT4_HAS_INCOMPAT_FEATURE(sb,
 +					EXT4_FEATURE_INCOMPAT_INLINE_DATA)) {
  			ext4_msg(sb, KERN_ERR, "Cannot use DAX on a filesystem"
  					" that may contain inline data");
- 			goto failed_mount;
+ 			sbi->s_mount_opt &= ~EXT4_MOUNT_DAX;
  		}
  		err = bdev_dax_supported(sb, blocksize);
++<<<<<<< HEAD
 +		if (err)
 +			goto failed_mount;
 +		if (!printed) {
 +			mark_tech_preview("ext4 direct access (dax)", NULL);
 +			printed = true;
 +		}
++=======
+ 		if (err) {
+ 			ext4_msg(sb, KERN_ERR,
+ 				"DAX unsupported by block device. Turning off DAX.");
+ 			sbi->s_mount_opt &= ~EXT4_MOUNT_DAX;
+ 		}
+ 	}
+ 
+ 	if (ext4_has_feature_encrypt(sb) && es->s_encryption_level) {
+ 		ext4_msg(sb, KERN_ERR, "Unsupported encryption level %d",
+ 			 es->s_encryption_level);
+ 		goto failed_mount;
++>>>>>>> 24f3478d664b (ext4: auto disable dax instead of failing mount)
  	}
  
  	if (sb->s_blocksize != blocksize) {
* Unmerged path fs/ext4/super.c
