rbd: notrim map option

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ilya Dryomov <idryomov@gmail.com>
commit d93605407af34eb0b7eb8aff6b1eae2cde3cdd22
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d9360540.failed

Add an option to turn off discard and write zeroes offload support to
avoid deprovisioning a fully provisioned image.  When enabled, discard
requests will fail with -EOPNOTSUPP, write zeroes requests will fall
back to manually zeroing.

	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
	Tested-by: Hitoshi Kamei <hitoshi.kamei.xm@hitachi.com>
(cherry picked from commit d93605407af34eb0b7eb8aff6b1eae2cde3cdd22)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/rbd.c
diff --cc drivers/block/rbd.c
index c4cb261ecbf7,8e8b04cc569a..000000000000
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@@ -4516,20 -3980,18 +4523,29 @@@ static int rbd_init_disk(struct rbd_dev
  	q->limits.max_sectors = queue_max_hw_sectors(q);
  	blk_queue_max_segments(q, USHRT_MAX);
  	blk_queue_max_segment_size(q, UINT_MAX);
 -	blk_queue_io_min(q, objset_bytes);
 -	blk_queue_io_opt(q, objset_bytes);
 -
 +	blk_queue_io_min(q, segment_size);
 +	blk_queue_io_opt(q, segment_size);
 +
++<<<<<<< HEAD
 +	/* enable the discard support */
 +	queue_flag_set_unlocked(QUEUE_FLAG_DISCARD, q);
 +	q->limits.discard_granularity = segment_size;
 +	q->limits.discard_alignment = segment_size;
 +	q->limits.max_discard_sectors = segment_size / SECTOR_SIZE;
 +	q->limits.discard_zeroes_data = 1;
 +
 +	blk_queue_merge_bvec(q, rbd_merge_bvec);
++=======
+ 	if (rbd_dev->opts->trim) {
+ 		blk_queue_flag_set(QUEUE_FLAG_DISCARD, q);
+ 		q->limits.discard_granularity = objset_bytes;
+ 		blk_queue_max_discard_sectors(q, objset_bytes >> SECTOR_SHIFT);
+ 		blk_queue_max_write_zeroes_sectors(q, objset_bytes >> SECTOR_SHIFT);
+ 	}
++>>>>>>> d93605407af3 (rbd: notrim map option)
  
  	if (!ceph_test_opt(rbd_dev->rbd_client->client, NOCRC))
 -		q->backing_dev_info->capabilities |= BDI_CAP_STABLE_WRITES;
 +		q->backing_dev_info.capabilities |= BDI_CAP_STABLE_WRITES;
  
  	/*
  	 * disk_release() expects a queue ref from add_disk() and will
* Unmerged path drivers/block/rbd.c
