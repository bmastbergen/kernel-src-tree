iio:kfifo: Set update_needed to false after allocating a new buffer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [iio] kfifo: Set update_needed to false after allocating a new buffer (Tony Camuso) [1559170]
Rebuild_FUZZ: 96.92%
commit-author Lars-Peter Clausen <lars@metafoo.de>
commit cb6fbfa1387f47e5ef4ab2fac5ed71f3c1175f75
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/cb6fbfa1.failed

update_needed is used to decide whether the kfifo buffer needs to be
re-allocated. It is set to true whenever the size of the buffer is changed. It
is never set to false though, causing the buffer to always be re-allocated.
Setting update_needed to false after the new buffer has been allocated fixes the
problem.

	Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
	Signed-off-by: Jonathan Cameron <jic23@kernel.org>
(cherry picked from commit cb6fbfa1387f47e5ef4ab2fac5ed71f3c1175f75)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iio/kfifo_buf.c
diff --cc drivers/iio/kfifo_buf.c
index 1bea41bcbdc6,95c6fc81c2c7..000000000000
--- a/drivers/iio/kfifo_buf.c
+++ b/drivers/iio/kfifo_buf.c
@@@ -32,13 -33,18 +32,20 @@@ static int iio_request_update_kfifo(str
  	int ret = 0;
  	struct iio_kfifo *buf = iio_to_kfifo(r);
  
 -	mutex_lock(&buf->user_lock);
 -	if (buf->update_needed) {
 -		kfifo_free(&buf->kf);
 -		ret = __iio_allocate_kfifo(buf, buf->buffer.bytes_per_datum,
 +	if (!buf->update_needed)
 +		goto error_ret;
 +	kfifo_free(&buf->kf);
 +	ret = __iio_allocate_kfifo(buf, buf->buffer.bytes_per_datum,
  				   buf->buffer.length);
++<<<<<<< HEAD
++=======
+ 		buf->update_needed = false;
+ 	} else {
+ 		kfifo_reset_out(&buf->kf);
+ 	}
++>>>>>>> cb6fbfa1387f (iio:kfifo: Set update_needed to false after allocating a new buffer)
  	r->stufftoread = false;
 -	mutex_unlock(&buf->user_lock);
 -
 +error_ret:
  	return ret;
  }
  
* Unmerged path drivers/iio/kfifo_buf.c
