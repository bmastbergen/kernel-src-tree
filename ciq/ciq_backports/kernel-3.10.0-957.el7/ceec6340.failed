HID: sensor-hub: fix potential memory leak

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [hid] sensor-hub: fix potential memory leak (Tony Camuso) [1559170]
Rebuild_FUZZ: 93.67%
commit-author Jiri Slaby <jslaby@suse.cz>
commit ceec634076b91bea57107541a46e92d765c69488
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/ceec6340.failed

hsdev is not freed in sensor_hub_probe when kasprintf inside the for
loop fails. This is because hsdev is not set to platform_data yet (to
be freed by the code in the err_no_mem label). So free the memory
explicitly in the 'if' branch, as this is the only place where this is
(and will) be needed.

	Reported-by: coverity
	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
	Cc: srinivas pandruvada <srinivas.pandruvada@intel.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit ceec634076b91bea57107541a46e92d765c69488)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/hid-sensor-hub.c
diff --cc drivers/hid/hid-sensor-hub.c
index 3e67ed86c707,e244e449cbba..000000000000
--- a/drivers/hid/hid-sensor-hub.c
+++ b/drivers/hid/hid-sensor-hub.c
@@@ -587,20 -612,36 +587,25 @@@ static int sensor_hub_probe(struct hid_
  			ret = -ENOMEM;
  			goto err_stop_hw;
  	}
 -
 -	for (i = 0; i < hdev->maxcollection; ++i) {
 -		struct hid_collection *collection = &hdev->collection[i];
 -
 -		if (collection->type == HID_COLLECTION_PHYSICAL) {
 -
 -			hsdev = kzalloc(sizeof(*hsdev), GFP_KERNEL);
 -			if (!hsdev) {
 -				hid_err(hdev, "cannot allocate hid_sensor_hub_device\n");
 -				ret = -ENOMEM;
 -				goto err_no_mem;
 -			}
 -			hsdev->hdev = hdev;
 -			hsdev->vendor_id = hdev->vendor;
 -			hsdev->product_id = hdev->product;
 -			hsdev->start_collection_index = i;
 -			if (last_hsdev)
 -				last_hsdev->end_collection_index = i;
 -			last_hsdev = hsdev;
 +	list_for_each_entry(report, &report_enum->report_list, list) {
 +		hid_dbg(hdev, "Report id:%x\n", report->id);
 +		field = report->field[0];
 +		if (report->maxfield && field &&
 +					field->physical) {
  			name = kasprintf(GFP_KERNEL, "HID-SENSOR-%x",
 -					collection->usage);
 -			if (name == NULL) {
 +						field->physical);
 +			if (name  == NULL) {
  				hid_err(hdev, "Failed MFD device name\n");
  					ret = -ENOMEM;
++<<<<<<< HEAD
 +					goto err_free_names;
++=======
+ 					kfree(hsdev);
+ 					goto err_no_mem;
++>>>>>>> ceec634076b9 (HID: sensor-hub: fix potential memory leak)
  			}
  			sd->hid_sensor_hub_client_devs[
 -				sd->hid_sensor_client_cnt].id =
 -							PLATFORM_DEVID_AUTO;
 +				sd->hid_sensor_client_cnt].id = PLATFORM_DEVID_AUTO;
  			sd->hid_sensor_hub_client_devs[
  				sd->hid_sensor_client_cnt].name = name;
  			sd->hid_sensor_hub_client_devs[
* Unmerged path drivers/hid/hid-sensor-hub.c
