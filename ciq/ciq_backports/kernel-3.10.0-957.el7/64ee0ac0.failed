nvme-pci: Skip queue deletion if there are no queues

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Keith Busch <keith.busch@intel.com>
commit 64ee0ac0527704c47170316fa58dbde50edaaf70
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/64ee0ac0.failed

User reported controller always retains CSTS.RDY to 1, which fails
controller disabling when resetting the controller. This is also before
the admin queue is allocated, and trying to disable an unallocated queue
results in a NULL dereference.

	Reported-by: Alex Gagniuc <Alex_Gagniuc@Dellteam.com>
	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 64ee0ac0527704c47170316fa58dbde50edaaf70)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index d8c88b8f2414,22403aa7dc60..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -1959,7 -2197,11 +1959,13 @@@ static void nvme_dev_disable(struct nvm
  	if (!dead) {
  		if (shutdown)
  			nvme_wait_freeze_timeout(&dev->ctrl, NVME_IO_TIMEOUT);
 -	}
  
++<<<<<<< HEAD
++=======
+ 	nvme_stop_queues(&dev->ctrl);
+ 
+ 	if (!dead && dev->ctrl.queue_count > 0) {
++>>>>>>> 64ee0ac05277 (nvme-pci: Skip queue deletion if there are no queues)
  		/*
  		 * If the controller is still alive tell it to stop using the
  		 * host memory buffer.  In theory the shutdown / reset should
* Unmerged path drivers/nvme/host/pci.c
