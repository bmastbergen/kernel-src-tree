bpf: Preserve const register type on const OR alu ops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Gianluca Borello <g.borello@gmail.com>
commit 3c839744b33782b930c5c61df35511ede5e5a574
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3c839744.failed

Occasionally, clang (e.g. version 3.8.1) translates a sum between two
constant operands using a BPF_OR instead of a BPF_ADD. The verifier is
currently not handling this scenario, and the destination register type
becomes UNKNOWN_VALUE even if it's still storing a constant. As a result,
the destination register cannot be used as argument to a helper function
expecting a ARG_CONST_STACK_*, limiting some use cases.

Modify the verifier to handle this case, and add a few tests to make sure
all combinations are supported, and stack boundaries are still verified
even with BPF_OR.

	Signed-off-by: Gianluca Borello <g.borello@gmail.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Daniel Borkmann <daniel@iogearbox.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3c839744b33782b930c5c61df35511ede5e5a574)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/verifier.c
#	tools/testing/selftests/bpf/.gitignore
#	tools/testing/selftests/bpf/test_verifier.c
* Unmerged path kernel/bpf/verifier.c
* Unmerged path tools/testing/selftests/bpf/.gitignore
* Unmerged path tools/testing/selftests/bpf/test_verifier.c
* Unmerged path kernel/bpf/verifier.c
* Unmerged path tools/testing/selftests/bpf/.gitignore
* Unmerged path tools/testing/selftests/bpf/test_verifier.c
