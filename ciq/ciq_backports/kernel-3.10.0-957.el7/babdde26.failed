x86: Implement array_index_mask_nospec

jira LE-1907
cve CVE-2018-3693
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] Implement array_index_mask_nospec (Lauro Ramos Venancio) [1589035] {CVE-2018-3693}
Rebuild_FUZZ: 92.96%
commit-author Dan Williams <dan.j.williams@intel.com>
commit babdde2698d482b6c0de1eab4f697cf5856c5859
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/babdde26.failed

array_index_nospec() uses a mask to sanitize user controllable array
indexes, i.e. generate a 0 mask if 'index' >= 'size', and a ~0 mask
otherwise. While the default array_index_mask_nospec() handles the
carry-bit from the (index - size) result in software.

The x86 array_index_mask_nospec() does the same, but the carry-bit is
handled in the processor CF flag without conditional instructions in the
control flow.

	Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-arch@vger.kernel.org
	Cc: kernel-hardening@lists.openwall.com
	Cc: gregkh@linuxfoundation.org
	Cc: alan@linux.intel.com
Link: https://lkml.kernel.org/r/151727414808.33451.1873237130672785331.stgit@dwillia2-desk3.amr.corp.intel.com

(cherry picked from commit babdde2698d482b6c0de1eab4f697cf5856c5859)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/barrier.h
diff --cc arch/x86/include/asm/barrier.h
index 4bf86772da50,173b38f5fe88..000000000000
--- a/arch/x86/include/asm/barrier.h
+++ b/arch/x86/include/asm/barrier.h
@@@ -24,7 -24,29 +24,33 @@@
  #define wmb()	asm volatile("sfence" ::: "memory")
  #endif
  
++<<<<<<< HEAD
 +#define gmb() alternative(ASM_NOP3, "lfence", X86_FEATURE_LFENCE_RDTSC)
++=======
+ /**
+  * array_index_mask_nospec() - generate a mask that is ~0UL when the
+  * 	bounds check succeeds and 0 otherwise
+  * @index: array element index
+  * @size: number of elements in array
+  *
+  * Returns:
+  *     0 - (index < size)
+  */
+ static inline unsigned long array_index_mask_nospec(unsigned long index,
+ 		unsigned long size)
+ {
+ 	unsigned long mask;
+ 
+ 	asm ("cmp %1,%2; sbb %0,%0;"
+ 			:"=r" (mask)
+ 			:"r"(size),"r" (index)
+ 			:"cc");
+ 	return mask;
+ }
+ 
+ /* Override the default implementation from linux/nospec.h. */
+ #define array_index_mask_nospec array_index_mask_nospec
++>>>>>>> babdde2698d4 (x86: Implement array_index_mask_nospec)
  
  #ifdef CONFIG_X86_PPRO_FENCE
  #define dma_rmb()	rmb()
* Unmerged path arch/x86/include/asm/barrier.h
