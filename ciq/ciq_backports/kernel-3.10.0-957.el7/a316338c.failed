bpf: fix wrong exposure of map_flags into fdinfo for lpm

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit a316338cb71a3260201490e615f2f6d5c0d8fb2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/a316338c.failed

trie_alloc() always needs to have BPF_F_NO_PREALLOC passed in via
attr->map_flags, since it does not support preallocation yet. We
check the flag, but we never copy the flag into trie->map.map_flags,
which is later on exposed into fdinfo and used by loaders such as
iproute2. Latter uses this in bpf_map_selfcheck_pinned() to test
whether a pinned map has the same spec as the one from the BPF obj
file and if not, bails out, which is currently the case for lpm
since it exposes always 0 as flags.

Also copy over flags in array_map_alloc() and stack_map_alloc().
They always have to be 0 right now, but we should make sure to not
miss to copy them over at a later point in time when we add actual
flags for them to use.

Fixes: b95a5c4db09b ("bpf: add a longest prefix match trie map implementation")
	Reported-by: Jarno Rajahalme <jarno@covalent.io>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a316338cb71a3260201490e615f2f6d5c0d8fb2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/arraymap.c
#	kernel/bpf/lpm_trie.c
#	kernel/bpf/stackmap.c
* Unmerged path kernel/bpf/arraymap.c
* Unmerged path kernel/bpf/lpm_trie.c
* Unmerged path kernel/bpf/stackmap.c
* Unmerged path kernel/bpf/arraymap.c
* Unmerged path kernel/bpf/lpm_trie.c
* Unmerged path kernel/bpf/stackmap.c
