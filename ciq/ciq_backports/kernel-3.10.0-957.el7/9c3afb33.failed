sfc: add function to determine which TX timestamping method to use

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Martin Habets <mhabets@solarflare.com>
commit 9c3afb33ae587723d2acda044a352670ec8d5b82
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9c3afb33.failed

Use MC capability MC_CMD_GET_CAPABILITIES_V2_OUT_TX_MAC_TIMESTAMPING to
 detect whether the NIC supports timestamping packets sent out the main
 datapath.

	Signed-off-by: Martin Habets <mhabets@solarflare.com>
	Signed-off-by: Edward Cree <ecree@solarflare.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9c3afb33ae587723d2acda044a352670ec8d5b82)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/sfc/nic.h
diff --cc drivers/net/ethernet/sfc/nic.h
index a08560c494a6,43a3fa1486ec..000000000000
--- a/drivers/net/ethernet/sfc/nic.h
+++ b/drivers/net/ethernet/sfc/nic.h
@@@ -471,6 -471,8 +471,11 @@@ static inline void efx_rx_skb_attach_ti
  }
  void efx_ptp_start_datapath(struct efx_nic *efx);
  void efx_ptp_stop_datapath(struct efx_nic *efx);
++<<<<<<< HEAD
++=======
+ bool efx_ptp_use_mac_tx_timestamps(struct efx_nic *efx);
+ ktime_t efx_ptp_nic_to_kernel_time(struct efx_tx_queue *tx_queue);
++>>>>>>> 9c3afb33ae58 (sfc: add function to determine which TX timestamping method to use)
  
  extern const struct efx_nic_type falcon_a1_nic_type;
  extern const struct efx_nic_type falcon_b0_nic_type;
* Unmerged path drivers/net/ethernet/sfc/nic.h
diff --git a/drivers/net/ethernet/sfc/ptp.c b/drivers/net/ethernet/sfc/ptp.c
index 717bc8570a8d..dd14da8afa23 100644
--- a/drivers/net/ethernet/sfc/ptp.c
+++ b/drivers/net/ethernet/sfc/ptp.c
@@ -329,6 +329,16 @@ static int efx_phc_settime(struct ptp_clock_info *ptp,
 static int efx_phc_enable(struct ptp_clock_info *ptp,
 			  struct ptp_clock_request *request, int on);
 
+bool efx_ptp_use_mac_tx_timestamps(struct efx_nic *efx)
+{
+	struct efx_ef10_nic_data *nic_data = efx->nic_data;
+
+	return ((efx_nic_rev(efx) >= EFX_REV_HUNT_A0) &&
+		(nic_data->datapath_caps2 &
+		 (1 << MC_CMD_GET_CAPABILITIES_V2_OUT_TX_MAC_TIMESTAMPING_LBN)
+		));
+}
+
 #define PTP_SW_STAT(ext_name, field_name)				\
 	{ #ext_name, 0, offsetof(struct efx_ptp_data, field_name) }
 #define PTP_MC_STAT(ext_name, mcdi_name)				\
