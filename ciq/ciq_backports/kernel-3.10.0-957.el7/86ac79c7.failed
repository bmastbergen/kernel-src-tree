netfilter: ipset: Support updating extensions when the set is full

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
commit 86ac79c7bea1543423f96f388b7ac2e3acca66b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/86ac79c7.failed

When the set was full (hash type and maxelem reached), it was not
possible to update the extension part of already existing elements.
The patch removes this limitation.

Fixes: https://bugzilla.netfilter.org/show_bug.cgi?id=880
	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 86ac79c7bea1543423f96f388b7ac2e3acca66b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_hash_gen.h
diff --cc net/netfilter/ipset/ip_set_hash_gen.h
index 72686abe715e,a12ee045258b..000000000000
--- a/net/netfilter/ipset/ip_set_hash_gen.h
+++ b/net/netfilter/ipset/ip_set_hash_gen.h
@@@ -600,17 -633,6 +600,20 @@@ mtype_add(struct ip_set *set, void *val
  	bool flag_exist = flags & IPSET_FLAG_EXIST;
  	u32 key, multi = 0;
  
++<<<<<<< HEAD
 +	if (SET_WITH_TIMEOUT(set) && h->elements >= h->maxelem)
 +		/* FIXME: when set is full, we slow down here */
 +		mtype_expire(h, NETS_LENGTH(set->family), h->dsize);
 +
 +	if (h->elements >= h->maxelem) {
 +		if (net_ratelimit())
 +			pr_warning("Set %s is full, maxelem %u reached\n",
 +				   set->name, h->maxelem);
 +		return -IPSET_ERR_HASH_FULL;
 +	}
 +
++=======
++>>>>>>> 86ac79c7bea1 (netfilter: ipset: Support updating extensions when the set is full)
  	rcu_read_lock_bh();
  	t = rcu_dereference_bh(h->table);
  	key = HKEY(value, h->initval, t->htable_bits);
* Unmerged path net/netfilter/ipset/ip_set_hash_gen.h
