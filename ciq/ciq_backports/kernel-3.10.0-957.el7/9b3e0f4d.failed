scsi: qla2xxx: Move work element processing out of DPC thread

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Move work element processing out of DPC thread (Himanshu Madhani) [1547714]
Rebuild_FUZZ: 94.83%
commit-author Quinn Tran <quinn.tran@cavium.com>
commit 9b3e0f4d4147c9718756f420875dd667dd07e050
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9b3e0f4d.failed

DPC thread can stall during switch scan due to slow switch response.
This will stall other work element that needs attention. Moving work
element processing and relogin logic out of DPC thread and into its
own work queue.

	Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 9b3e0f4d4147c9718756f420875dd667dd07e050)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_def.h
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_def.h
index 65a064ba1a4b,92dbba47d3cf..000000000000
--- a/drivers/scsi/qla2xxx/qla_def.h
+++ b/drivers/scsi/qla2xxx/qla_def.h
@@@ -4062,7 -4149,10 +4059,12 @@@ typedef struct scsi_qla_host 
  #define FX00_CRITEMP_RECOVERY	25
  #define FX00_HOST_INFO_RESEND	26
  #define QPAIR_ONLINE_CHECK_NEEDED	27
 -#define SET_ZIO_THRESHOLD_NEEDED	28
  #define DETECT_SFP_CHANGE	29
++<<<<<<< HEAD
++=======
+ #define N2N_LOGIN_NEEDED	30
+ #define IOCB_WORK_ACTIVE	31
++>>>>>>> 9b3e0f4d4147 (scsi: qla2xxx: Move work element processing out of DPC thread)
  
  	unsigned long	pci_flags;
  #define PFLG_DISCONNECTED	0	/* PCI device removed */
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 75f3e94a56ff,e1761bd552fe..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -4555,7 -4559,11 +4563,13 @@@ struct scsi_qla_host *qla2x00_create_ho
  	INIT_LIST_HEAD(&vha->qla_sess_op_cmd_list);
  	INIT_LIST_HEAD(&vha->logo_list);
  	INIT_LIST_HEAD(&vha->plogi_ack_list);
 -	INIT_LIST_HEAD(&vha->qp_list);
  	INIT_LIST_HEAD(&vha->gnl.fcports);
++<<<<<<< HEAD
++=======
+ 	INIT_LIST_HEAD(&vha->nvme_rport_list);
+ 	INIT_LIST_HEAD(&vha->gpnid_list);
+ 	INIT_WORK(&vha->iocb_work, qla2x00_iocb_work_fn);
++>>>>>>> 9b3e0f4d4147 (scsi: qla2xxx: Move work element processing out of DPC thread)
  
  	spin_lock_init(&vha->work_lock);
  	spin_lock_init(&vha->cmd_list_lock);
@@@ -6169,9 -6242,33 +6205,18 @@@ qla2x00_timer(scsi_qla_host_t *vha
  	}
  
  	/* Process any deferred work. */
- 	if (!list_empty(&vha->work_list))
- 		start_dpc++;
+ 	if (!list_empty(&vha->work_list)) {
+ 		unsigned long flags;
+ 		bool q = false;
+ 
+ 		spin_lock_irqsave(&vha->work_lock, flags);
+ 		if (!test_and_set_bit(IOCB_WORK_ACTIVE, &vha->dpc_flags))
+ 			q = true;
+ 		spin_unlock_irqrestore(&vha->work_lock, flags);
+ 		if (q)
+ 			queue_work(vha->hw->wq, &vha->iocb_work);
+ 	}
  
 -	/*
 -	 * FC-NVME
 -	 * see if the active AEN count has changed from what was last reported.
 -	 */
 -	if (!vha->vp_idx &&
 -		atomic_read(&ha->nvme_active_aen_cnt) != ha->nvme_last_rptd_aen &&
 -		ha->zio_mode == QLA_ZIO_MODE_6) {
 -		ql_log(ql_log_info, vha, 0x3002,
 -			"nvme: Sched: Set ZIO exchange threshold to %d.\n",
 -			ha->nvme_last_rptd_aen);
 -		ha->nvme_last_rptd_aen = atomic_read(&ha->nvme_active_aen_cnt);
 -		set_bit(SET_ZIO_THRESHOLD_NEEDED, &vha->dpc_flags);
 -		start_dpc++;
 -	}
 -
  	/* Schedule the DPC routine if needed */
  	if ((test_bit(ISP_ABORT_NEEDED, &vha->dpc_flags) ||
  	    test_bit(LOOP_RESYNC_NEEDED, &vha->dpc_flags) ||
* Unmerged path drivers/scsi/qla2xxx/qla_def.h
diff --git a/drivers/scsi/qla2xxx/qla_gbl.h b/drivers/scsi/qla2xxx/qla_gbl.h
index 547baeb17bb1..fba3f0120802 100644
--- a/drivers/scsi/qla2xxx/qla_gbl.h
+++ b/drivers/scsi/qla2xxx/qla_gbl.h
@@ -198,6 +198,7 @@ void qla2x00_handle_login_done_event(struct scsi_qla_host *, fc_port_t *,
 	uint16_t *);
 int qla24xx_post_gnl_work(struct scsi_qla_host *, fc_port_t *);
 int qla24xx_async_abort_cmd(srb_t *);
+int qla24xx_post_relogin_work(struct scsi_qla_host *vha);
 
 /*
  * Global Functions in qla_mid.c source file.
diff --git a/drivers/scsi/qla2xxx/qla_init.c b/drivers/scsi/qla2xxx/qla_init.c
index 83ad7d90d14e..4ef49268cf35 100644
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@ -776,6 +776,7 @@ void qla24xx_handle_gpdb_event(scsi_qla_host_t *vha, struct event_arg *ea)
 		    __func__, fcport->port_name, fcport->last_rscn_gen,
 		    fcport->rscn_gen, fcport->last_login_gen,
 		    fcport->login_gen);
+		set_bit(RELOGIN_NEEDED, &vha->dpc_flags);
 		return;
 	} else if (ea->sp->gen1 != fcport->rscn_gen) {
 		ql_dbg(ql_dbg_disc, vha, 0x20d4, "%s %d %8phC post gidpn\n",
diff --git a/drivers/scsi/qla2xxx/qla_mid.c b/drivers/scsi/qla2xxx/qla_mid.c
index 9bbf11958caa..71de035e26df 100644
--- a/drivers/scsi/qla2xxx/qla_mid.c
+++ b/drivers/scsi/qla2xxx/qla_mid.c
@@ -319,8 +319,6 @@ qla2x00_do_dpc_vp(scsi_qla_host_t *vha)
 	ql_dbg(ql_dbg_dpc + ql_dbg_verbose, vha, 0x4012,
 	    "Entering %s vp_flags: 0x%lx.\n", __func__, vha->vp_flags);
 
-	qla2x00_do_work(vha);
-
 	/* Check if Fw is ready to configure VP first */
 	if (test_bit(VP_CONFIG_OK, &base_vha->vp_flags)) {
 		if (test_and_clear_bit(VP_IDX_ACQUIRED, &vha->vp_flags)) {
@@ -354,9 +352,7 @@ qla2x00_do_dpc_vp(scsi_qla_host_t *vha)
 
 			ql_dbg(ql_dbg_dpc, vha, 0x4018,
 			    "Relogin needed scheduled.\n");
-			qla2x00_relogin(vha);
-			ql_dbg(ql_dbg_dpc, vha, 0x4019,
-			    "Relogin needed end.\n");
+			qla24xx_post_relogin_work(vha);
 		}
 	}
 
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
