netfilter: ipset: Mark some helper args as const.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] netfilter: ipset: Mark some helper args as const (Stefano Brivio) [1557599]
Rebuild_FUZZ: 98.97%
commit-author Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
commit da9fbfa76f32a031cb70b11e9fa650e30c85d040
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/da9fbfa7.failed

Mark some of the helpers arguments as const.

Ported from a patch proposed by Sergey Popovich <popovich_sergei@mail.ua>.

	Suggested-by: Sergey Popovich <popovich_sergei@mail.ua>
	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit da9fbfa76f32a031cb70b11e9fa650e30c85d040)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netfilter/ipset/ip_set.h
#	include/linux/netfilter/ipset/ip_set_comment.h
#	include/linux/netfilter/ipset/ip_set_timeout.h
diff --cc include/linux/netfilter/ipset/ip_set.h
index 3e9c90cf5227,524467f933bf..000000000000
--- a/include/linux/netfilter/ipset/ip_set.h
+++ b/include/linux/netfilter/ipset/ip_set.h
@@@ -235,8 -334,46 +235,49 @@@ ip_set_update_counter(struct ip_set_cou
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static inline void
+ ip_set_get_skbinfo(struct ip_set_skbinfo *skbinfo,
+ 		   const struct ip_set_ext *ext,
+ 		   struct ip_set_ext *mext, u32 flags)
+ {
+ 	mext->skbmark = skbinfo->skbmark;
+ 	mext->skbmarkmask = skbinfo->skbmarkmask;
+ 	mext->skbprio = skbinfo->skbprio;
+ 	mext->skbqueue = skbinfo->skbqueue;
+ }
+ 
+ static inline bool
+ ip_set_put_skbinfo(struct sk_buff *skb, const struct ip_set_skbinfo *skbinfo)
+ {
+ 	/* Send nonzero parameters only */
+ 	return ((skbinfo->skbmark || skbinfo->skbmarkmask) &&
+ 		nla_put_net64(skb, IPSET_ATTR_SKBMARK,
+ 			      cpu_to_be64((u64)skbinfo->skbmark << 32 |
+ 					  skbinfo->skbmarkmask),
+ 			      IPSET_ATTR_PAD)) ||
+ 	       (skbinfo->skbprio &&
+ 		nla_put_net32(skb, IPSET_ATTR_SKBPRIO,
+ 			      cpu_to_be32(skbinfo->skbprio))) ||
+ 	       (skbinfo->skbqueue &&
+ 		nla_put_net16(skb, IPSET_ATTR_SKBQUEUE,
+ 			     cpu_to_be16(skbinfo->skbqueue)));
+ }
+ 
+ static inline void
+ ip_set_init_skbinfo(struct ip_set_skbinfo *skbinfo,
+ 		    const struct ip_set_ext *ext)
+ {
+ 	skbinfo->skbmark = ext->skbmark;
+ 	skbinfo->skbmarkmask = ext->skbmarkmask;
+ 	skbinfo->skbprio = ext->skbprio;
+ 	skbinfo->skbqueue = ext->skbqueue;
+ }
+ 
++>>>>>>> da9fbfa76f32 (netfilter: ipset: Mark some helper args as const.)
  static inline bool
- ip_set_put_counter(struct sk_buff *skb, struct ip_set_counter *counter)
+ ip_set_put_counter(struct sk_buff *skb, const struct ip_set_counter *counter)
  {
  	return nla_put_net64(skb, IPSET_ATTR_BYTES,
  			     cpu_to_be64(ip_set_get_bytes(counter)),
diff --cc include/linux/netfilter/ipset/ip_set_timeout.h
index 1755cf80a6fc,bfb3531fd88a..000000000000
--- a/include/linux/netfilter/ipset/ip_set_timeout.h
+++ b/include/linux/netfilter/ipset/ip_set_timeout.h
@@@ -40,23 -40,17 +40,27 @@@ ip_set_timeout_uget(struct nlattr *tb
  }
  
  static inline bool
++<<<<<<< HEAD
 +ip_set_timeout_test(unsigned long timeout)
++=======
+ ip_set_timeout_expired(const unsigned long *t)
++>>>>>>> da9fbfa76f32 (netfilter: ipset: Mark some helper args as const.)
  {
 -	return *t != IPSET_ELEM_PERMANENT && time_is_before_jiffies(*t);
 +	return timeout == IPSET_ELEM_PERMANENT ||
 +	       time_is_after_jiffies(timeout);
  }
  
 -static inline void
 -ip_set_timeout_set(unsigned long *timeout, u32 value)
 +static inline bool
 +ip_set_timeout_expired(unsigned long *timeout)
  {
 -	unsigned long t;
 +	return *timeout != IPSET_ELEM_PERMANENT &&
 +	       time_is_before_jiffies(*timeout);
 +}
  
 -	if (!value) {
 +static inline void
 +ip_set_timeout_set(unsigned long *timeout, u32 t)
 +{
 +	if (!t) {
  		*timeout = IPSET_ELEM_PERMANENT;
  		return;
  	}
* Unmerged path include/linux/netfilter/ipset/ip_set_comment.h
* Unmerged path include/linux/netfilter/ipset/ip_set.h
* Unmerged path include/linux/netfilter/ipset/ip_set_comment.h
* Unmerged path include/linux/netfilter/ipset/ip_set_timeout.h
