tools/power turbostat: Build-in "Low Power Idle" counters support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [tools] power turbostat: Build-in "Low Power Idle" counters support (Prarit Bhargava) [1454489]
Rebuild_FUZZ: 95.16%
commit-author Len Brown <len.brown@intel.com>
commit be0e54c4ebbf106571292ee97b445fd25bc3525b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/be0e54c4.failed

Linux 4.15 exports the ACPI Low Power Idle Table's
counters in /sys/devices/system/cpu/cpuidle/

low_power_idle_cpu_residency_us

	Show this in the "CPU%LPI" column.

	Today this reflects the "North Complex"
	residency in PC10, so expect it to
	closely follow "Pk%pc10".

low_power_idle_system_residency_us

	Show this in the "SYS%LPI" column.

	Today, this reflects the North is in PC10,
	plus the PCH is sufficiently quiescent
	to save additional power via the "S0ix"
	system state, as measured by the
	PCH SLP_S0 counter.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit be0e54c4ebbf106571292ee97b445fd25bc3525b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 00786c8e246a,bfb0cec9618e..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -398,54 -408,61 +405,104 @@@ struct msr_counter bic[] = 
  
  
  #define MAX_BIC (sizeof(bic) / sizeof(struct msr_counter))
++<<<<<<< HEAD
 +#define	BIC_Package	(1ULL << 0)
 +#define	BIC_Avg_MHz	(1ULL << 1)
 +#define	BIC_Bzy_MHz	(1ULL << 2)
 +#define	BIC_TSC_MHz	(1ULL << 3)
 +#define	BIC_IRQ		(1ULL << 4)
 +#define	BIC_SMI		(1ULL << 5)
 +#define	BIC_Busy	(1ULL << 6)
 +#define	BIC_CPU_c1	(1ULL << 7)
 +#define	BIC_CPU_c3	(1ULL << 8)
 +#define	BIC_CPU_c6	(1ULL << 9)
 +#define	BIC_CPU_c7	(1ULL << 10)
 +#define	BIC_ThreadC	(1ULL << 11)
 +#define	BIC_CoreTmp	(1ULL << 12)
 +#define	BIC_CoreCnt	(1ULL << 13)
 +#define	BIC_PkgTmp	(1ULL << 14)
 +#define	BIC_GFX_rc6	(1ULL << 15)
 +#define	BIC_GFXMHz	(1ULL << 16)
 +#define	BIC_Pkgpc2	(1ULL << 17)
 +#define	BIC_Pkgpc3	(1ULL << 18)
 +#define	BIC_Pkgpc6	(1ULL << 19)
 +#define	BIC_Pkgpc7	(1ULL << 20)
 +#define	BIC_Pkgpc8	(1ULL << 21)
 +#define	BIC_Pkgpc9	(1ULL << 22)
 +#define	BIC_Pkgpc10	(1ULL << 23)
 +#define	BIC_PkgWatt	(1ULL << 24)
 +#define	BIC_CorWatt	(1ULL << 25)
 +#define	BIC_GFXWatt	(1ULL << 26)
 +#define	BIC_PkgCnt	(1ULL << 27)
 +#define	BIC_RAMWatt	(1ULL << 28)
 +#define	BIC_PKG__	(1ULL << 29)
 +#define	BIC_RAM__	(1ULL << 30)
 +#define	BIC_Pkg_J	(1ULL << 31)
 +#define	BIC_Cor_J	(1ULL << 32)
 +#define	BIC_GFX_J	(1ULL << 33)
 +#define	BIC_RAM_J	(1ULL << 34)
 +#define	BIC_Core	(1ULL << 35)
 +#define	BIC_CPU		(1ULL << 36)
 +#define	BIC_Mod_c6	(1ULL << 37)
 +#define	BIC_sysfs	(1ULL << 38)
 +#define	BIC_Totl_c0	(1ULL << 39)
 +#define	BIC_Any_c0	(1ULL << 40)
 +#define	BIC_GFX_c0	(1ULL << 41)
 +#define	BIC_CPUGFX	(1ULL << 42)
++=======
+ #define	BIC_USEC	(1ULL << 0)
+ #define	BIC_TOD		(1ULL << 1)
+ #define	BIC_Package	(1ULL << 2)
+ #define	BIC_Avg_MHz	(1ULL << 3)
+ #define	BIC_Bzy_MHz	(1ULL << 4)
+ #define	BIC_TSC_MHz	(1ULL << 5)
+ #define	BIC_IRQ		(1ULL << 6)
+ #define	BIC_SMI		(1ULL << 7)
+ #define	BIC_Busy	(1ULL << 8)
+ #define	BIC_CPU_c1	(1ULL << 9)
+ #define	BIC_CPU_c3	(1ULL << 10)
+ #define	BIC_CPU_c6	(1ULL << 11)
+ #define	BIC_CPU_c7	(1ULL << 12)
+ #define	BIC_ThreadC	(1ULL << 13)
+ #define	BIC_CoreTmp	(1ULL << 14)
+ #define	BIC_CoreCnt	(1ULL << 15)
+ #define	BIC_PkgTmp	(1ULL << 16)
+ #define	BIC_GFX_rc6	(1ULL << 17)
+ #define	BIC_GFXMHz	(1ULL << 18)
+ #define	BIC_Pkgpc2	(1ULL << 19)
+ #define	BIC_Pkgpc3	(1ULL << 20)
+ #define	BIC_Pkgpc6	(1ULL << 21)
+ #define	BIC_Pkgpc7	(1ULL << 22)
+ #define	BIC_Pkgpc8	(1ULL << 23)
+ #define	BIC_Pkgpc9	(1ULL << 24)
+ #define	BIC_Pkgpc10	(1ULL << 25)
+ #define BIC_CPU_LPI	(1ULL << 26)
+ #define BIC_SYS_LPI	(1ULL << 27)
+ #define	BIC_PkgWatt	(1ULL << 26)
+ #define	BIC_CorWatt	(1ULL << 27)
+ #define	BIC_GFXWatt	(1ULL << 28)
+ #define	BIC_PkgCnt	(1ULL << 29)
+ #define	BIC_RAMWatt	(1ULL << 30)
+ #define	BIC_PKG__	(1ULL << 31)
+ #define	BIC_RAM__	(1ULL << 32)
+ #define	BIC_Pkg_J	(1ULL << 33)
+ #define	BIC_Cor_J	(1ULL << 34)
+ #define	BIC_GFX_J	(1ULL << 35)
+ #define	BIC_RAM_J	(1ULL << 36)
+ #define	BIC_Core	(1ULL << 37)
+ #define	BIC_CPU		(1ULL << 38)
+ #define	BIC_Mod_c6	(1ULL << 39)
+ #define	BIC_sysfs	(1ULL << 40)
+ #define	BIC_Totl_c0	(1ULL << 41)
+ #define	BIC_Any_c0	(1ULL << 42)
+ #define	BIC_GFX_c0	(1ULL << 43)
+ #define	BIC_CPUGFX	(1ULL << 44)
++>>>>>>> be0e54c4ebbf (tools/power turbostat: Build-in "Low Power Idle" counters support)
  
 -#define BIC_DISABLED_BY_DEFAULT	(BIC_USEC | BIC_TOD)
 -
 -unsigned long long bic_enabled = (0xFFFFFFFFFFFFFFFFULL & ~BIC_DISABLED_BY_DEFAULT);
 -unsigned long long bic_present = BIC_USEC | BIC_TOD | BIC_sysfs;
 +unsigned long long bic_enabled = 0xFFFFFFFFFFFFFFFFULL;
 +unsigned long long bic_present = BIC_sysfs;
  
  #define DO_BIC(COUNTER_NAME) (bic_enabled & bic_present & COUNTER_NAME)
 -#define ENABLE_BIC(COUNTER_NAME) (bic_enabled |= COUNTER_NAME)
  #define BIC_PRESENT(COUNTER_BIT) (bic_present |= COUNTER_BIT)
  #define BIC_NOT_PRESENT(COUNTER_BIT) (bic_present &= ~COUNTER_BIT)
  
@@@ -1686,6 -1755,12 +1762,15 @@@ retry
  	if (DO_BIC(BIC_Pkgpc10))
  		if (get_msr(cpu, MSR_PKG_C10_RESIDENCY, &p->pc10))
  			return -13;
++<<<<<<< HEAD
++=======
+ 
+ 	if (DO_BIC(BIC_CPU_LPI))
+ 		p->cpu_lpi = cpuidle_cur_cpu_lpi_us;
+ 	if (DO_BIC(BIC_SYS_LPI))
+ 		p->sys_lpi = cpuidle_cur_sys_lpi_us;
+ 
++>>>>>>> be0e54c4ebbf (tools/power turbostat: Build-in "Low Power Idle" counters support)
  	if (do_rapl & RAPL_PKG) {
  		if (get_msr(cpu, MSR_PKG_ENERGY_STATUS, &msr))
  			return -13;
* Unmerged path tools/power/x86/turbostat/turbostat.c
