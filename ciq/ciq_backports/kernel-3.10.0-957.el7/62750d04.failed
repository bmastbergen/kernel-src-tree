fs: copy BTRFS_IOC_[SG]ET_FSLABEL to vfs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Eric Sandeen <sandeen@redhat.com>
commit 62750d040bd137fd6f541e216502d9158e07d348
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/62750d04.failed

This retains 256 chars as the maximum size through the interface, which
is the btrfs limit and AFAIK exceeds any other filesystem's maximum
label size.

This just copies the ioctl for now and leaves it in place for btrfs
for the time being.  A later patch will allow btrfs to use the new
common ioctl definition, but it may be sent after this is merged.

(Note, Reviewed-by's were originally given for the combined vfs+btrfs
patch, some license taken here.)

	Signed-off-by: Eric Sandeen <sandeen@redhat.com>
	Reviewed-by: Andreas Dilger <adilger@dilger.ca>
	Reviewed-by: David Sterba <dsterba@suse.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit 62750d040bd137fd6f541e216502d9158e07d348)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/fs.h
diff --cc include/uapi/linux/fs.h
index 40392bd158ba,9d132f8f2df8..000000000000
--- a/include/uapi/linux/fs.h
+++ b/include/uapi/linux/fs.h
@@@ -168,7 -240,10 +168,9 @@@ struct inodes_stat_t 
  #define FITRIM		_IOWR('X', 121, struct fstrim_range)	/* Trim */
  #define FICLONE		_IOW(0x94, 9, int)
  #define FICLONERANGE	_IOW(0x94, 13, struct file_clone_range)
 -#define FIDEDUPERANGE	_IOWR(0x94, 54, struct file_dedupe_range)
  
+ #define FSLABEL_MAX 256	/* Max chars for the interface; each fs may differ */
+ 
  #define	FS_IOC_GETFLAGS			_IOR('f', 1, long)
  #define	FS_IOC_SETFLAGS			_IOW('f', 2, long)
  #define	FS_IOC_GETVERSION		_IOR('v', 1, long)
@@@ -178,6 -253,57 +180,60 @@@
  #define FS_IOC32_SETFLAGS		_IOW('f', 2, int)
  #define FS_IOC32_GETVERSION		_IOR('v', 1, int)
  #define FS_IOC32_SETVERSION		_IOW('v', 2, int)
++<<<<<<< HEAD
++=======
+ #define FS_IOC_FSGETXATTR		_IOR('X', 31, struct fsxattr)
+ #define FS_IOC_FSSETXATTR		_IOW('X', 32, struct fsxattr)
+ #define FS_IOC_GETFSLABEL		_IOR(0x94, 49, char[FSLABEL_MAX])
+ #define FS_IOC_SETFSLABEL		_IOW(0x94, 50, char[FSLABEL_MAX])
+ 
+ /*
+  * File system encryption support
+  */
+ /* Policy provided via an ioctl on the topmost directory */
+ #define FS_KEY_DESCRIPTOR_SIZE	8
+ 
+ #define FS_POLICY_FLAGS_PAD_4		0x00
+ #define FS_POLICY_FLAGS_PAD_8		0x01
+ #define FS_POLICY_FLAGS_PAD_16		0x02
+ #define FS_POLICY_FLAGS_PAD_32		0x03
+ #define FS_POLICY_FLAGS_PAD_MASK	0x03
+ #define FS_POLICY_FLAGS_VALID		0x03
+ 
+ /* Encryption algorithms */
+ #define FS_ENCRYPTION_MODE_INVALID		0
+ #define FS_ENCRYPTION_MODE_AES_256_XTS		1
+ #define FS_ENCRYPTION_MODE_AES_256_GCM		2
+ #define FS_ENCRYPTION_MODE_AES_256_CBC		3
+ #define FS_ENCRYPTION_MODE_AES_256_CTS		4
+ #define FS_ENCRYPTION_MODE_AES_128_CBC		5
+ #define FS_ENCRYPTION_MODE_AES_128_CTS		6
+ 
+ struct fscrypt_policy {
+ 	__u8 version;
+ 	__u8 contents_encryption_mode;
+ 	__u8 filenames_encryption_mode;
+ 	__u8 flags;
+ 	__u8 master_key_descriptor[FS_KEY_DESCRIPTOR_SIZE];
+ };
+ 
+ #define FS_IOC_SET_ENCRYPTION_POLICY	_IOR('f', 19, struct fscrypt_policy)
+ #define FS_IOC_GET_ENCRYPTION_PWSALT	_IOW('f', 20, __u8[16])
+ #define FS_IOC_GET_ENCRYPTION_POLICY	_IOW('f', 21, struct fscrypt_policy)
+ 
+ /* Parameters for passing an encryption key into the kernel keyring */
+ #define FS_KEY_DESC_PREFIX		"fscrypt:"
+ #define FS_KEY_DESC_PREFIX_SIZE		8
+ 
+ /* Structure that userspace passes to the kernel keyring */
+ #define FS_MAX_KEY_SIZE			64
+ 
+ struct fscrypt_key {
+ 	__u32 mode;
+ 	__u8 raw[FS_MAX_KEY_SIZE];
+ 	__u32 size;
+ };
++>>>>>>> 62750d040bd1 (fs: copy BTRFS_IOC_[SG]ET_FSLABEL to vfs)
  
  /*
   * Inode flags (FS_IOC_GETFLAGS / FS_IOC_SETFLAGS)
diff --git a/Documentation/ioctl/ioctl-number.txt b/Documentation/ioctl/ioctl-number.txt
index 41dca6c3550b..29b7a50dabca 100644
--- a/Documentation/ioctl/ioctl-number.txt
+++ b/Documentation/ioctl/ioctl-number.txt
@@ -291,7 +291,8 @@ Code  Seq#(hex)	Include File		Comments
 0x90	00	drivers/cdrom/sbpcd.h
 0x92	00-0F	drivers/usb/mon/mon_bin.c
 0x93	60-7F	linux/auto_fs.h
-0x94	all	fs/btrfs/ioctl.h
+0x94	all	fs/btrfs/ioctl.h	Btrfs filesystem
+		and linux/fs.h		some lifted to vfs/generic
 0x97	00-7F	fs/ceph/ioctl.h		Ceph file system
 0x99	00-0F				537-Addinboard driver
 					<mailto:buk@buks.ipn.de>
* Unmerged path include/uapi/linux/fs.h
