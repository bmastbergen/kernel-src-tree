vmxnet3: use correct flag to indicate LRO feature

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ronak Doshi <doshir@vmware.com>
commit 034f405793897a3c8f642935f5494b86c340cde7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/034f4057.failed

'Commit 45dac1d6ea04 ("vmxnet3: Changes for vmxnet3 adapter version 2
(fwd)")' introduced a flag "lro" in structure vmxnet3_adapter which is
used to indicate whether LRO is enabled or not. However, the patch
did not set the flag and hence it was never exercised.

So, when LRO is enabled, it resulted in poor TCP performance due to
delayed acks. This issue is seen with packets which are larger than
the mss getting a delayed ack rather than an immediate ack, thus
resulting in high latency.

This patch removes the lro flag and directly uses device features
against NETIF_F_LRO to check if lro is enabled.

Fixes: 45dac1d6ea04 ("vmxnet3: Changes for vmxnet3 adapter version 2 (fwd)")
	Reported-by: Rachel Lunnon <rachel_lunnon@stormagic.com>
	Signed-off-by: Ronak Doshi <doshir@vmware.com>
	Acked-by: Shrikrishna Khare <skhare@vmware.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 034f405793897a3c8f642935f5494b86c340cde7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vmxnet3/vmxnet3_int.h
diff --cc drivers/net/vmxnet3/vmxnet3_int.h
index 83270729de90,99387a4a20a8..000000000000
--- a/drivers/net/vmxnet3/vmxnet3_int.h
+++ b/drivers/net/vmxnet3/vmxnet3_int.h
@@@ -69,10 -69,10 +69,17 @@@
  /*
   * Version numbers
   */
++<<<<<<< HEAD
 +#define VMXNET3_DRIVER_VERSION_STRING   "1.4.7.0-k"
 +
 +/* a 32-bit int, each byte encode a verion number in VMXNET3_DRIVER_VERSION */
 +#define VMXNET3_DRIVER_VERSION_NUM      0x01040700
++=======
+ #define VMXNET3_DRIVER_VERSION_STRING   "1.4.13.0-k"
+ 
+ /* a 32-bit int, each byte encode a verion number in VMXNET3_DRIVER_VERSION */
+ #define VMXNET3_DRIVER_VERSION_NUM      0x01040d00
++>>>>>>> 034f40579389 (vmxnet3: use correct flag to indicate LRO feature)
  
  #if defined(CONFIG_PCI_MSI)
  	/* RSS only makes sense if MSI-X is supported. */
diff --git a/drivers/net/vmxnet3/vmxnet3_drv.c b/drivers/net/vmxnet3/vmxnet3_drv.c
index f648dcca6cdc..d41461b18668 100644
--- a/drivers/net/vmxnet3/vmxnet3_drv.c
+++ b/drivers/net/vmxnet3/vmxnet3_drv.c
@@ -1440,7 +1440,8 @@ vmxnet3_rq_rx_complete(struct vmxnet3_rx_queue *rq,
 			vmxnet3_rx_csum(adapter, skb,
 					(union Vmxnet3_GenericDesc *)rcd);
 			skb->protocol = eth_type_trans(skb, adapter->netdev);
-			if (!rcd->tcp || !adapter->lro)
+			if (!rcd->tcp ||
+			    !(adapter->netdev->features & NETIF_F_LRO))
 				goto not_lro;
 
 			if (segCnt != 0 && mss != 0) {
* Unmerged path drivers/net/vmxnet3/vmxnet3_int.h
