watchdog: hpwdt: condition early return of NMI handler on iLO5

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [watchdog] hpwdt: condition early return of NMI handler on iLO5 (Joseph Szczypek) [1555073]
Rebuild_FUZZ: 91.23%
commit-author Jerry Hoemann <jerry.hoemann@hpe.com>
commit a6c24733d29315fd2d8dd7140f83e834658c62d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/a6c24733.failed

Modify prior change to not claim an NMI unless originated
from iLO to apply only to iLO5 and later going forward.
This restores hpwdt traditional behavior of calling panic
if the NMI is NMI_IO_CHECK, NMI_SERR, or NMI_UNKNOWN for
legacy hardware.

	Signed-off-by: Jerry Hoemann <jerry.hoemann@hpe.com>
	Signed-off-by: Guenter Roeck <linux@roeck-us.net>
	Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
(cherry picked from commit a6c24733d29315fd2d8dd7140f83e834658c62d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/watchdog/hpwdt.c
diff --cc drivers/watchdog/hpwdt.c
index 059c4478bc3b,171d5033d7b5..000000000000
--- a/drivers/watchdog/hpwdt.c
+++ b/drivers/watchdog/hpwdt.c
@@@ -480,18 -112,18 +481,22 @@@ static int hpwdt_time_left(void
   */
  static int hpwdt_pretimeout(unsigned int ulReason, struct pt_regs *regs)
  {
 -	unsigned int mynmi = hpwdt_my_nmi();
 -	static char panic_msg[] =
 -		"00: An NMI occurred. Depending on your system the reason "
 -		"for the NMI is logged in any one of the following resources:\n"
 -		"1. Integrated Management Log (IML)\n"
 -		"2. OA Syslog\n"
 -		"3. OA Forward Progress Log\n"
 -		"4. iLO Event Log";
 +	unsigned long rom_pl;
 +	static int die_nmi_called;
  
++<<<<<<< HEAD
 +	if (!hpwdt_nmi_decoding)
++=======
+ 	if (ilo5 && ulReason == NMI_UNKNOWN && mynmi)
++>>>>>>> a6c24733d293 (watchdog: hpwdt: condition early return of NMI handler on iLO5)
  		return NMI_DONE;
  
 +	spin_lock_irqsave(&rom_lock, rom_pl);
 +	if (!die_nmi_called && !is_icru && !is_uefi)
 +		asminline_call(&cmn_regs, cru_rom_addr);
 +	die_nmi_called = 1;
 +	spin_unlock_irqrestore(&rom_lock, rom_pl);
 +
  	if (allow_kdump)
  		hpwdt_stop();
  
@@@ -867,10 -276,14 +872,18 @@@ static int hpwdt_init_one(struct pci_de
  
  	dev_info(&dev->dev, "HPE Watchdog Timer Driver: %s"
  			", timer margin: %d seconds (nowayout=%d).\n",
++<<<<<<< HEAD
 +			HPWDT_VERSION, soft_margin, nowayout);
++=======
+ 			HPWDT_VERSION, hpwdt_dev.timeout, nowayout);
+ 
+ 	if (dev->subsystem_vendor == PCI_VENDOR_ID_HP_3PAR)
+ 		ilo5 = true;
+ 
++>>>>>>> a6c24733d293 (watchdog: hpwdt: condition early return of NMI handler on iLO5)
  	return 0;
  
 -error_wd_register:
 +error_misc_register:
  	hpwdt_exit_nmi_decoding();
  error_init_nmi_decoding:
  	pci_iounmap(dev, pci_mem_addr);
* Unmerged path drivers/watchdog/hpwdt.c
