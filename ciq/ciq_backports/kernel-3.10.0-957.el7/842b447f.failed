PCI/portdrv: Encapsulate pcie_ports_auto inside the port driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [pci] portdrv: Encapsulate pcie_ports_auto inside the port driver (Jarod Wilson) [1495223]
Rebuild_FUZZ: 96.72%
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 842b447f0074b93e9f7db60039fdc72ec14bef9a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/842b447f.failed

"pcie_ports_auto" is only used inside the PCIe port driver itself, so
move it from include/linux/pci.h to portdrv.h so it's not visible to the
whole kernel.

	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 842b447f0074b93e9f7db60039fdc72ec14bef9a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pcie/portdrv.h
diff --cc drivers/pci/pcie/portdrv.h
index 587aef36030d,62e28b5afa51..000000000000
--- a/drivers/pci/pcie/portdrv.h
+++ b/drivers/pci/pcie/portdrv.h
@@@ -11,12 -12,72 +11,75 @@@
  
  #include <linux/compiler.h>
  
++<<<<<<< HEAD
 +#define PCIE_PORT_DEVICE_MAXSERVICES   5
++=======
+ extern bool pcie_ports_auto;
+ 
+ /* Service Type */
+ #define PCIE_PORT_SERVICE_PME_SHIFT	0	/* Power Management Event */
+ #define PCIE_PORT_SERVICE_PME		(1 << PCIE_PORT_SERVICE_PME_SHIFT)
+ #define PCIE_PORT_SERVICE_AER_SHIFT	1	/* Advanced Error Reporting */
+ #define PCIE_PORT_SERVICE_AER		(1 << PCIE_PORT_SERVICE_AER_SHIFT)
+ #define PCIE_PORT_SERVICE_HP_SHIFT	2	/* Native Hotplug */
+ #define PCIE_PORT_SERVICE_HP		(1 << PCIE_PORT_SERVICE_HP_SHIFT)
+ #define PCIE_PORT_SERVICE_DPC_SHIFT	3	/* Downstream Port Containment */
+ #define PCIE_PORT_SERVICE_DPC		(1 << PCIE_PORT_SERVICE_DPC_SHIFT)
+ 
+ #define PCIE_PORT_DEVICE_MAXSERVICES   4
+ 
+ /* Port Type */
+ #define PCIE_ANY_PORT			(~0)
+ 
+ struct pcie_device {
+ 	int		irq;	    /* Service IRQ/MSI/MSI-X Vector */
+ 	struct pci_dev *port;	    /* Root/Upstream/Downstream Port */
+ 	u32		service;    /* Port service this device represents */
+ 	void		*priv_data; /* Service Private Data */
+ 	struct device	device;     /* Generic Device Interface */
+ };
+ #define to_pcie_device(d) container_of(d, struct pcie_device, device)
+ 
+ static inline void set_service_data(struct pcie_device *dev, void *data)
+ {
+ 	dev->priv_data = data;
+ }
+ 
+ static inline void *get_service_data(struct pcie_device *dev)
+ {
+ 	return dev->priv_data;
+ }
+ 
+ struct pcie_port_service_driver {
+ 	const char *name;
+ 	int (*probe) (struct pcie_device *dev);
+ 	void (*remove) (struct pcie_device *dev);
+ 	int (*suspend) (struct pcie_device *dev);
+ 	int (*resume) (struct pcie_device *dev);
+ 
+ 	/* Device driver may resume normal operations */
+ 	void (*error_resume)(struct pci_dev *dev);
+ 
+ 	/* Link Reset Capability - AER service driver specific */
+ 	pci_ers_result_t (*reset_link) (struct pci_dev *dev);
+ 
+ 	int port_type;  /* Type of the port this driver can handle */
+ 	u32 service;    /* Port service this device represents */
+ 
+ 	struct device_driver driver;
+ };
+ #define to_service_driver(d) \
+ 	container_of(d, struct pcie_port_service_driver, driver)
+ 
+ int pcie_port_service_register(struct pcie_port_service_driver *new);
+ void pcie_port_service_unregister(struct pcie_port_service_driver *new);
+ 
++>>>>>>> 842b447f0074 (PCI/portdrv: Encapsulate pcie_ports_auto inside the port driver)
  /*
 - * The PCIe Capability Interrupt Message Number (PCIe r3.1, sec 7.8.2) must
 - * be one of the first 32 MSI-X entries.  Per PCI r3.0, sec 6.8.3.1, MSI
 - * supports a maximum of 32 vectors per function.
 + * According to the PCI Express Base Specification 2.0, the indices of
 + * the MSI-X table entries used by port services must not exceed 31
   */
 -#define PCIE_PORT_MAX_MSI_ENTRIES	32
 +#define PCIE_PORT_MAX_MSIX_ENTRIES	32
  
  #define get_descriptor_id(type, service) (((type - 4) << 8) | service)
  
* Unmerged path drivers/pci/pcie/portdrv.h
diff --git a/include/linux/pci.h b/include/linux/pci.h
index 2d20a9a169fc..bc4eefe34293 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -1397,10 +1397,8 @@ pci_alloc_irq_vectors(struct pci_dev *dev, unsigned int min_vecs,
 
 #ifdef CONFIG_PCIEPORTBUS
 extern bool pcie_ports_disabled;
-extern bool pcie_ports_auto;
 #else
 #define pcie_ports_disabled	true
-#define pcie_ports_auto		false
 #endif
 
 #ifdef CONFIG_PCIEASPM
