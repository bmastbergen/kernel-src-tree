scsi: qla2xxx: Fix Regression introduced by pci_alloc_irq_vectors_affinity call.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Fix Regression introduced by pci_alloc_irq_vectors_affinity call (Himanshu Madhani) [1547714]
Rebuild_FUZZ: 95.42%
commit-author Michael Hernandez <michael.hernandez@cavium.com>
commit 67f2db8792f96d8f7521461635d25f9c80245d80
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/67f2db87.failed

For target mode, we need to increase minimum vectors value by one to
account for ATIO queue.

Following stack trace will be seen

Call Trace:
qla24xx_config_rings+0x15a/0x230 [qla2xxx]
qla2x00_init_rings+0x1a1/0x3a0 [qla2xxx]
qla2x00_restart_isp+0x5c/0x120 [qla2xxx]
qla2x00_abort_isp+0x138/0x430 [qla2xxx]
? __schedule+0x260/0x580
qla2x00_do_dpc+0x3bc/0x920 [qla2xxx]
? qla2x00_relogin+0x290/0x290 [qla2xxx]
? schedule+0x3a/0xa0
? qla2x00_relogin+0x290/0x290 [qla2xxx]
kthread+0x103/0x140
? __kthread_init_worker+0x40/0x40
ret_from_fork+0x29/0x40

RIP: qlt_24xx_config_rings+0x6c/0x90

[mkp: fixed Fixes: hash]

	Cc: <stable@vger.kernel.org>
Fixes: 17e5fc58588b ("scsi: qla2xxx: fix MSI-X vector affinity")
	Signed-off-by: Michael Hernandez <michael.hernandez@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 67f2db8792f96d8f7521461635d25f9c80245d80)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_isr.c
diff --cc drivers/scsi/qla2xxx/qla_isr.c
index 5b62f352b08f,87fc921ce391..000000000000
--- a/drivers/scsi/qla2xxx/qla_isr.c
+++ b/drivers/scsi/qla2xxx/qla_isr.c
@@@ -3228,25 -3012,23 +3228,41 @@@ qla24xx_disable_msix(struct qla_hw_dat
  static int
  qla24xx_enable_msix(struct qla_hw_data *ha, struct rsp_que *rsp)
  {
 +#define MIN_MSIX_COUNT	2
  	int i, ret;
 +	struct msix_entry *entries;
  	struct qla_msix_entry *qentry;
  	scsi_qla_host_t *vha = pci_get_drvdata(ha->pdev);
++<<<<<<< HEAD
 +
 +	entries = kzalloc(sizeof(struct msix_entry) * ha->msix_count,
 +			GFP_KERNEL);
 +	if (!entries) {
 +		ql_log(ql_log_warn, vha, 0x00bc,
 +		    "Failed to allocate memory for msix_entry.\n");
 +		return -ENOMEM;
 +	}
 +
 +	for (i = 0; i < ha->msix_count; i++)
 +		entries[i].entry = i;
++=======
+ 	int min_vecs = QLA_BASE_VECTORS;
+ 	struct irq_affinity desc = {
+ 		.pre_vectors = QLA_BASE_VECTORS,
+ 	};
+ 
+ 	if (QLA_TGT_MODE_ENABLED() && IS_ATIO_MSIX_CAPABLE(ha)) {
+ 		desc.pre_vectors++;
+ 		min_vecs++;
+ 	}
+ 
+ 	ret = pci_alloc_irq_vectors_affinity(ha->pdev, min_vecs,
+ 			ha->msix_count, PCI_IRQ_MSIX | PCI_IRQ_AFFINITY,
+ 			&desc);
++>>>>>>> 67f2db8792f9 (scsi: qla2xxx: Fix Regression introduced by pci_alloc_irq_vectors_affinity call.)
  
 +	ret = pci_enable_msix_range(ha->pdev,
 +				    entries, MIN_MSIX_COUNT, ha->msix_count);
  	if (ret < 0) {
  		ql_log(ql_log_fatal, vha, 0x00c7,
  		    "MSI-X: Failed to enable support, "
* Unmerged path drivers/scsi/qla2xxx/qla_isr.c
