nvme-pci: quiesce IO queues prior to disabling device HMB accesses

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jianchao Wang <jianchao.w.wang@oracle.com>
commit 9a915a5be7dc320743034a17394e08eb438baf33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9a915a5b.failed

Quiesce IO queues prior to disabling device HMB accesses. A controller
using HMB may relay on it to efficiently complete IO commands.

	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Jianchao Wang <jianchao.w.wang@oracle.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 9a915a5be7dc320743034a17394e08eb438baf33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 78805b788f31,aacc8e4b0051..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -1968,25 -2209,12 +1972,29 @@@ static void nvme_dev_disable(struct nvm
  		 */
  		if (dev->host_mem_descs)
  			nvme_set_host_mem(dev, 0);
++<<<<<<< HEAD
 +
 +	}
 +	nvme_stop_queues(&dev->ctrl);
 +
 +	queues = dev->online_queues - 1;
 +	for (i = dev->ctrl.queue_count - 1; i > 0; i--)
 +		nvme_suspend_queue(dev->queues[i]);
 +
 +	if (dead) {
 +		/* A device might become IO incapable very soon during
 +		 * probe, before the admin queue is configured. Thus,
 +		 * queue_count can be 0 here.
 +		 */
 +		if (dev->ctrl.queue_count)
 +			nvme_suspend_queue(dev->queues[0]);
 +	} else {
 +		nvme_disable_io_queues(dev, queues);
++=======
+ 		nvme_disable_io_queues(dev);
++>>>>>>> 9a915a5be7dc (nvme-pci: quiesce IO queues prior to disabling device HMB accesses)
  		nvme_disable_admin_queue(dev, shutdown);
  	}
 -	for (i = dev->ctrl.queue_count - 1; i >= 0; i--)
 -		nvme_suspend_queue(&dev->queues[i]);
 -
  	nvme_pci_disable(dev);
  
  	blk_mq_tagset_busy_iter(&dev->tagset, nvme_cancel_request, &dev->ctrl);
* Unmerged path drivers/nvme/host/pci.c
