netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [net] netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types (Stefano Brivio) [1557599]
Rebuild_FUZZ: 99.37%
commit-author Anton Danilov <littlesmilingcloud@gmail.com>
commit 39d1ecf1ad0e19145e1f3a6cd838b7354ef71bf7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/39d1ecf1.failed

Add skbinfo extension kernel support for the bitmap set types.
Inroduce the new revisions of bitmap_ip, bitmap_ipmac and bitmap_port set types.

	Signed-off-by: Anton Danilov <littlesmilingcloud@gmail.com>
	Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
(cherry picked from commit 39d1ecf1ad0e19145e1f3a6cd838b7354ef71bf7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipset/ip_set_bitmap_gen.h
#	net/netfilter/ipset/ip_set_bitmap_ip.c
#	net/netfilter/ipset/ip_set_bitmap_ipmac.c
#	net/netfilter/ipset/ip_set_bitmap_port.c
diff --cc net/netfilter/ipset/ip_set_bitmap_gen.h
index 01a340ce9e94,6f024a8a1534..000000000000
--- a/net/netfilter/ipset/ip_set_bitmap_gen.h
+++ b/net/netfilter/ipset/ip_set_bitmap_gen.h
@@@ -114,10 -124,12 +114,16 @@@ mtype_test(struct ip_set *set, void *va
  	if (ret <= 0)
  		return ret;
  	if (SET_WITH_TIMEOUT(set) &&
 -	    ip_set_timeout_expired(ext_timeout(x, set)))
 +	    ip_set_timeout_expired(ext_timeout(x, map)))
  		return 0;
  	if (SET_WITH_COUNTER(set))
++<<<<<<< HEAD
 +		ip_set_update_counter(ext_counter(x, map), ext, mext, flags);
++=======
+ 		ip_set_update_counter(ext_counter(x, set), ext, mext, flags);
+ 	if (SET_WITH_SKBINFO(set))
+ 		ip_set_get_skbinfo(ext_skbinfo(x, set), ext, mext, flags);
++>>>>>>> 39d1ecf1ad0e (netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.)
  	return 1;
  }
  
@@@ -146,7 -160,11 +152,15 @@@ mtype_add(struct ip_set *set, void *val
  #endif
  
  	if (SET_WITH_COUNTER(set))
++<<<<<<< HEAD
 +		ip_set_init_counter(ext_counter(x, map), ext);
++=======
+ 		ip_set_init_counter(ext_counter(x, set), ext);
+ 	if (SET_WITH_COMMENT(set))
+ 		ip_set_init_comment(ext_comment(x, set), ext);
+ 	if (SET_WITH_SKBINFO(set))
+ 		ip_set_init_skbinfo(ext_skbinfo(x, set), ext);
++>>>>>>> 39d1ecf1ad0e (netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.)
  	return 0;
  }
  
diff --cc net/netfilter/ipset/ip_set_bitmap_ip.c
index deffacab62dc,55b083ec587a..000000000000
--- a/net/netfilter/ipset/ip_set_bitmap_ip.c
+++ b/net/netfilter/ipset/ip_set_bitmap_ip.c
@@@ -26,7 -26,9 +26,13 @@@
  #include <linux/netfilter/ipset/ip_set_bitmap.h>
  
  #define IPSET_TYPE_REV_MIN	0
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	1	/* Counter support added */
++=======
+ /*				1	   Counter support added */
+ /*				2	   Comment support added */
+ #define IPSET_TYPE_REV_MAX	3	/* skbinfo support added */
++>>>>>>> 39d1ecf1ad0e (netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -421,6 -360,10 +430,13 @@@ static struct ip_set_type bitmap_ip_typ
  		[IPSET_ATTR_LINENO]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> 39d1ecf1ad0e (netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.)
  	},
  	.me		= THIS_MODULE,
  };
diff --cc net/netfilter/ipset/ip_set_bitmap_ipmac.c
index a041a2f15eb0,86104744b00f..000000000000
--- a/net/netfilter/ipset/ip_set_bitmap_ipmac.c
+++ b/net/netfilter/ipset/ip_set_bitmap_ipmac.c
@@@ -26,7 -26,9 +26,13 @@@
  #include <linux/netfilter/ipset/ip_set_bitmap.h>
  
  #define IPSET_TYPE_REV_MIN	0
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	1	/* Counter support added */
++=======
+ /*				1	   Counter support added */
+ /*				2	   Comment support added */
+ #define IPSET_TYPE_REV_MAX	3	/* skbinfo support added */
++>>>>>>> 39d1ecf1ad0e (netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -478,6 -397,10 +487,13 @@@ static struct ip_set_type bitmap_ipmac_
  		[IPSET_ATTR_LINENO]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> 39d1ecf1ad0e (netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.)
  	},
  	.me		= THIS_MODULE,
  };
diff --cc net/netfilter/ipset/ip_set_bitmap_port.c
index 3fcb6e11fac3,005dd36444c3..000000000000
--- a/net/netfilter/ipset/ip_set_bitmap_port.c
+++ b/net/netfilter/ipset/ip_set_bitmap_port.c
@@@ -21,7 -21,9 +21,13 @@@
  #include <linux/netfilter/ipset/ip_set_getport.h>
  
  #define IPSET_TYPE_REV_MIN	0
++<<<<<<< HEAD
 +#define IPSET_TYPE_REV_MAX	1	/* Counter support added */
++=======
+ /*				1	   Counter support added */
+ /*				2	   Comment support added */
+ #define IPSET_TYPE_REV_MAX	3	/* skbinfo support added */
++>>>>>>> 39d1ecf1ad0e (netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.)
  
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>");
@@@ -350,6 -294,10 +359,13 @@@ static struct ip_set_type bitmap_port_t
  		[IPSET_ATTR_LINENO]	= { .type = NLA_U32 },
  		[IPSET_ATTR_BYTES]	= { .type = NLA_U64 },
  		[IPSET_ATTR_PACKETS]	= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 		[IPSET_ATTR_COMMENT]	= { .type = NLA_NUL_STRING },
+ 		[IPSET_ATTR_SKBMARK]	= { .type = NLA_U64 },
+ 		[IPSET_ATTR_SKBPRIO]	= { .type = NLA_U32 },
+ 		[IPSET_ATTR_SKBQUEUE]	= { .type = NLA_U16 },
++>>>>>>> 39d1ecf1ad0e (netfilter: ipset: Add skbinfo extension kernel support for the bitmap set types.)
  	},
  	.me		= THIS_MODULE,
  };
* Unmerged path net/netfilter/ipset/ip_set_bitmap_gen.h
* Unmerged path net/netfilter/ipset/ip_set_bitmap_ip.c
* Unmerged path net/netfilter/ipset/ip_set_bitmap_ipmac.c
* Unmerged path net/netfilter/ipset/ip_set_bitmap_port.c
