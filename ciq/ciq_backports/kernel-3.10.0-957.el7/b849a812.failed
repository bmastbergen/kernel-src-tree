seccomp: Use PR_SPEC_FORCE_DISABLE

jira LE-1907
cve CVE-2018-3639
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Thomas Gleixner <tglx@linutronix.de>
commit b849a812f7eb92e96d1c8239b06581b2cfd8b275
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b849a812.failed

Use PR_SPEC_FORCE_DISABLE in seccomp() because seccomp does not allow to
widen restrictions.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit b849a812f7eb92e96d1c8239b06581b2cfd8b275)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/seccomp.c
diff --cc kernel/seccomp.c
index 42e55449c1a5,2c819d65e15f..000000000000
--- a/kernel/seccomp.c
+++ b/kernel/seccomp.c
@@@ -236,6 -229,19 +236,22 @@@ static inline bool seccomp_may_assign_m
  	return true;
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * If a given speculation mitigation is opt-in (prctl()-controlled),
+  * select it, by disabling speculation (enabling mitigation).
+  */
+ static inline void spec_mitigate(struct task_struct *task,
+ 				 unsigned long which)
+ {
+ 	int state = arch_prctl_spec_ctrl_get(task, which);
+ 
+ 	if (state > 0 && (state & PR_SPEC_PRCTL))
+ 		arch_prctl_spec_ctrl_set(task, which, PR_SPEC_FORCE_DISABLE);
+ }
+ 
++>>>>>>> b849a812f7eb (seccomp: Use PR_SPEC_FORCE_DISABLE)
  static inline void seccomp_assign_mode(struct task_struct *task,
  				       unsigned long seccomp_mode)
  {
* Unmerged path kernel/seccomp.c
