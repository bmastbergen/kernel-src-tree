x86/apic: Split disable_IO_APIC() into two functions to fix CONFIG_KEXEC_JUMP=y

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [x86] apic: Split disable_IO_APIC() into two functions to fix CONFIG_KEXEC_JUMP=y (Baoquan He) [1521003]
Rebuild_FUZZ: 97.40%
commit-author Baoquan He <bhe@redhat.com>
commit 3c9e76dbea004b2c7c3ce872022ceaf5ff0dae79
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/3c9e76db.failed

Split  following patches disable_IO_APIC() will be broken up into
clear_IO_APIC() and restore_boot_irq_mode().

These two functions will be called separately where they are needed
to fix a regression introduced by:

  522e66464467 ("x86/apic: Disable I/O APIC before shutdown of the local APIC").

While the CONFIG_KEXEC_JUMP=y code doesn't call lapic_shutdown() before jump
like kexec/kdump, so it's not impacted by commit 522e66464467.

Hence here change clear_IO_APIC() as public, and replace disable_IO_APIC()
with clear_IO_APIC() and restore_boot_irq_mode() to keep CONFIG_KEXEC_JUMP=y
code unchanged in essence. No functional change.

	Signed-off-by: Baoquan He <bhe@redhat.com>
	Reviewed-by: Eric W. Biederman <ebiederm@xmission.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: douly.fnst@cn.fujitsu.com
	Cc: joro@8bytes.org
	Cc: prarit@redhat.com
	Cc: uobergfe@redhat.com
Link: http://lkml.kernel.org/r/20180214054656.3780-3-bhe@redhat.com
[ Rewrote the changelog. ]
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 3c9e76dbea004b2c7c3ce872022ceaf5ff0dae79)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/io_apic.h
diff --cc arch/x86/include/asm/io_apic.h
index a1ac5648dd12,2ae1b424c1bd..000000000000
--- a/arch/x86/include/asm/io_apic.h
+++ b/arch/x86/include/asm/io_apic.h
@@@ -218,19 -190,16 +218,29 @@@ static inline unsigned int io_apic_read
  	return x86_io_apic_ops.read(apic, reg);
  }
  
++<<<<<<< HEAD
 +static inline void io_apic_write(unsigned int apic, unsigned int reg, unsigned int value)
 +{
 +	x86_io_apic_ops.write(apic, reg, value);
 +}
 +static inline void io_apic_modify(unsigned int apic, unsigned int reg, unsigned int value)
 +{
 +	x86_io_apic_ops.modify(apic, reg, value);
 +}
 +
 +extern void io_apic_eoi(unsigned int apic, unsigned int vector);
 +
++=======
+ extern void setup_IO_APIC(void);
+ extern void enable_IO_APIC(void);
+ extern void disable_IO_APIC(void);
+ extern void clear_IO_APIC(void);
+ extern void restore_boot_irq_mode(void);
+ extern int IO_APIC_get_PCI_irq_vector(int bus, int devfn, int pin);
+ extern void print_IO_APICs(void);
++>>>>>>> 3c9e76dbea00 (x86/apic: Split disable_IO_APIC() into two functions to fix CONFIG_KEXEC_JUMP=y)
  #else  /* !CONFIG_X86_IO_APIC */
  
 -#define IO_APIC_IRQ(x)		0
  #define io_apic_assign_pci_irqs 0
  #define setup_ioapic_ids_from_mpc x86_init_noop
  static inline void ioapic_insert_resources(void) { }
* Unmerged path arch/x86/include/asm/io_apic.h
diff --git a/arch/x86/kernel/apic/io_apic.c b/arch/x86/kernel/apic/io_apic.c
index d122dcd2cb76..a1f7f220ed1c 100644
--- a/arch/x86/kernel/apic/io_apic.c
+++ b/arch/x86/kernel/apic/io_apic.c
@@ -686,7 +686,7 @@ static void clear_IO_APIC_pin(unsigned int apic, unsigned int pin)
 		       mpc_ioapic_id(apic), pin);
 }
 
-static void clear_IO_APIC (void)
+void clear_IO_APIC (void)
 {
 	int apic, pin;
 
diff --git a/arch/x86/kernel/machine_kexec_32.c b/arch/x86/kernel/machine_kexec_32.c
index 72e8e310258d..64691c5af806 100644
--- a/arch/x86/kernel/machine_kexec_32.c
+++ b/arch/x86/kernel/machine_kexec_32.c
@@ -210,7 +210,8 @@ void machine_kexec(struct kimage *image)
 		 * one form or other. kexec jump path also need
 		 * one.
 		 */
-		disable_IO_APIC();
+		clear_IO_APIC();
+		restore_boot_irq_mode();
 #endif
 	}
 
diff --git a/arch/x86/kernel/machine_kexec_64.c b/arch/x86/kernel/machine_kexec_64.c
index 9e197c3a1cb6..d85d2625fa04 100644
--- a/arch/x86/kernel/machine_kexec_64.c
+++ b/arch/x86/kernel/machine_kexec_64.c
@@ -277,7 +277,8 @@ void machine_kexec(struct kimage *image)
 		 * one form or other. kexec jump path also need
 		 * one.
 		 */
-		disable_IO_APIC();
+		clear_IO_APIC();
+		restore_boot_irq_mode();
 #endif
 	}
 
