bpf: fix memory leak in lpm_trie map_free callback function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Yonghong Song <yhs@fb.com>
commit 9a3efb6b661f71d5675369ace9257833f0e78ef3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9a3efb6b.failed

There is a memory leak happening in lpm_trie map_free callback
function trie_free. The trie structure itself does not get freed.

Also, trie_free function did not do synchronize_rcu before freeing
various data structures. This is incorrect as some rcu_read_lock
region(s) for lookup, update, delete or get_next_key may not complete yet.
The fix is to add synchronize_rcu in the beginning of trie_free.
The useless spin_lock is removed from this function as well.

Fixes: b95a5c4db09b ("bpf: add a longest prefix match trie map implementation")
	Reported-by: Mathieu Malaterre <malat@debian.org>
	Reported-by: Alexei Starovoitov <ast@kernel.org>
	Tested-by: Mathieu Malaterre <malat@debian.org>
	Signed-off-by: Yonghong Song <yhs@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit 9a3efb6b661f71d5675369ace9257833f0e78ef3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/lpm_trie.c
* Unmerged path kernel/bpf/lpm_trie.c
* Unmerged path kernel/bpf/lpm_trie.c
