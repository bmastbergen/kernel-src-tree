selinux:  Report permissive mode in avc: denied messages.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [security] selinux: report permissive mode in avc: denied messages (Paul Moore) [1518352]
Rebuild_FUZZ: 98.21%
commit-author Stephen Smalley <sds@tycho.nsa.gov>
commit 626b9740fa73cad043e136bfb3b6fca68a4f8a7c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/626b9740.failed

We cannot presently tell from an avc: denied message whether access was in
fact denied or was allowed due to global or per-domain permissive mode.
Add a permissive= field to the avc message to reflect this information.

	Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
	Acked-by: Eric Paris <eparis@redhat.com>
	Signed-off-by: Paul Moore <pmoore@redhat.com>
(cherry picked from commit 626b9740fa73cad043e136bfb3b6fca68a4f8a7c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/selinux/include/avc.h
diff --cc security/selinux/include/avc.h
index 92d0ab561db8,ddf8eec03f21..000000000000
--- a/security/selinux/include/avc.h
+++ b/security/selinux/include/avc.h
@@@ -137,8 -137,8 +137,13 @@@ static inline int avc_audit(u32 ssid, u
  	if (likely(!audited))
  		return 0;
  	return slow_avc_audit(ssid, tsid, tclass,
++<<<<<<< HEAD
 +			      requested, audited, denied,
 +			      a, flags);
++=======
+ 			      requested, audited, denied, result,
+ 			      a, 0);
++>>>>>>> 626b9740fa73 (selinux:  Report permissive mode in avc: denied messages.)
  }
  
  #define AVC_STRICT 1 /* Ignore permissive mode. */
diff --git a/security/selinux/avc.c b/security/selinux/avc.c
index 9cee61eca7d2..6eb61e51b026 100644
--- a/security/selinux/avc.c
+++ b/security/selinux/avc.c
@@ -442,11 +442,15 @@ static void avc_audit_post_callback(struct audit_buffer *ab, void *a)
 	avc_dump_query(ab, ad->selinux_audit_data->ssid,
 			   ad->selinux_audit_data->tsid,
 			   ad->selinux_audit_data->tclass);
+	if (ad->selinux_audit_data->denied) {
+		audit_log_format(ab, " permissive=%u",
+				 ad->selinux_audit_data->result ? 0 : 1);
+	}
 }
 
 /* This is the slow part of avc audit with big stack footprint */
 noinline int slow_avc_audit(u32 ssid, u32 tsid, u16 tclass,
-		u32 requested, u32 audited, u32 denied,
+		u32 requested, u32 audited, u32 denied, int result,
 		struct common_audit_data *a,
 		unsigned flags)
 {
@@ -475,6 +479,7 @@ noinline int slow_avc_audit(u32 ssid, u32 tsid, u16 tclass,
 	sad.tsid = tsid;
 	sad.audited = audited;
 	sad.denied = denied;
+	sad.result = result;
 
 	a->selinux_audit_data = &sad;
 
diff --git a/security/selinux/hooks.c b/security/selinux/hooks.c
index f29754eead4a..c43873a311c2 100644
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@ -2942,6 +2942,7 @@ static int selinux_inode_follow_link(struct dentry *dentry, struct nameidata *na
 
 static noinline int audit_inode_permission(struct inode *inode,
 					   u32 perms, u32 audited, u32 denied,
+					   int result,
 					   unsigned flags)
 {
 	struct common_audit_data ad;
@@ -2952,7 +2953,7 @@ static noinline int audit_inode_permission(struct inode *inode,
 	ad.u.inode = inode;
 
 	rc = slow_avc_audit(current_sid(), isec->sid, isec->sclass, perms,
-			    audited, denied, &ad, flags);
+			    audited, denied, result, &ad, flags);
 	if (rc)
 		return rc;
 	return 0;
@@ -2996,7 +2997,7 @@ static int selinux_inode_permission(struct inode *inode, int mask)
 	if (likely(!audited))
 		return rc;
 
-	rc2 = audit_inode_permission(inode, perms, audited, denied, flags);
+	rc2 = audit_inode_permission(inode, perms, audited, denied, rc, flags);
 	if (rc2)
 		return rc2;
 	return rc;
* Unmerged path security/selinux/include/avc.h
