amd-xgbe: Always attempt link training in KR mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Tom Lendacky <thomas.lendacky@amd.com>
commit eca282b8418b0b5a55b70e42f684e882d3fb9654
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/eca282b8.failed

Link training is always attempted when in KR mode, but the code is
structured to check if link training has been enabled before attempting
to perform it.  Since that check will always be true, simplify the code
to always enable and start link training during KR auto-negotiation.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit eca282b8418b0b5a55b70e42f684e882d3fb9654)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-mdio.c
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-mdio.c
index cdb2d52ec227,450b89cd9eeb..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c
@@@ -502,21 -487,19 +467,28 @@@ static enum xgbe_an xgbe_an73_tx_traini
  	XMDIO_WRITE(pdata, MDIO_MMD_PMAPMD, MDIO_PMA_10GBR_FECCTRL, reg);
  
  	/* Start KR training */
+ 	if (pdata->phy_if.phy_impl.kr_training_pre)
+ 		pdata->phy_if.phy_impl.kr_training_pre(pdata);
+ 
  	reg = XMDIO_READ(pdata, MDIO_MMD_PMAPMD, MDIO_PMA_10GBR_PMD_CTRL);
- 	if (reg & XGBE_KR_TRAINING_ENABLE) {
- 		if (pdata->phy_if.phy_impl.kr_training_pre)
- 			pdata->phy_if.phy_impl.kr_training_pre(pdata);
+ 	reg |= XGBE_KR_TRAINING_ENABLE;
+ 	reg |= XGBE_KR_TRAINING_START;
+ 	XMDIO_WRITE(pdata, MDIO_MMD_PMAPMD, MDIO_PMA_10GBR_PMD_CTRL, reg);
  
- 		reg |= XGBE_KR_TRAINING_START;
- 		XMDIO_WRITE(pdata, MDIO_MMD_PMAPMD, MDIO_PMA_10GBR_PMD_CTRL,
- 			    reg);
+ 	netif_dbg(pdata, link, pdata->netdev,
+ 		  "KR training initiated\n");
  
++<<<<<<< HEAD
 +		if (pdata->phy_if.phy_impl.kr_training_post)
 +			pdata->phy_if.phy_impl.kr_training_post(pdata);
 +
 +		netif_dbg(pdata, link, pdata->netdev,
 +			  "KR training initiated\n");
 +	}
++=======
+ 	if (pdata->phy_if.phy_impl.kr_training_post)
+ 		pdata->phy_if.phy_impl.kr_training_post(pdata);
++>>>>>>> eca282b8418b (amd-xgbe: Always attempt link training in KR mode)
  
  	return XGBE_AN_PAGE_RECEIVED;
  }
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-mdio.c
