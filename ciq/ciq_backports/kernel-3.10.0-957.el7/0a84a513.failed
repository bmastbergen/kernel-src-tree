drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 0a84a51334b5d75decd23b735aab00ff4698eeb2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/0a84a513.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 0a84a51334b5d75decd23b735aab00ff4698eeb2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
index 38a5ff7dd3aa,947278274846..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
@@@ -1903,8 -1914,42 +1903,47 @@@ gf100_gr_new_(const struct gf100_gr_fun
  	return 0;
  }
  
++<<<<<<< HEAD
 +int
 +gf100_gr_init(struct gf100_gr *gr)
++=======
+ void
+ gf100_gr_init_419eb4(struct gf100_gr *gr)
+ {
+ 	struct nvkm_device *device = gr->base.engine.subdev.device;
+ 	nvkm_mask(device, 0x419eb4, 0x00001000, 0x00001000);
+ }
+ 
+ void
+ gf100_gr_init_419cc0(struct gf100_gr *gr)
+ {
+ 	struct nvkm_device *device = gr->base.engine.subdev.device;
+ 	int gpc, tpc;
+ 
+ 	nvkm_mask(device, 0x419cc0, 0x00000008, 0x00000008);
+ 
+ 	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
+ 		for (tpc = 0; tpc < gr->tpc_nr[gpc]; tpc++)
+ 			nvkm_wr32(device, TPC_UNIT(gpc, tpc, 0x48c), 0xc0000000);
+ 	}
+ }
+ 
+ void
+ gf100_gr_init_40601c(struct gf100_gr *gr)
+ {
+ 	nvkm_wr32(gr->base.engine.subdev.device, 0x40601c, 0xc0000000);
+ }
+ 
+ void
+ gf100_gr_init_fecs_exceptions(struct gf100_gr *gr)
+ {
+ 	const u32 data = gr->firmware ? 0x000e0000 : 0x000e0001;
+ 	nvkm_wr32(gr->base.engine.subdev.device, 0x409c24, data);
+ }
+ 
+ void
+ gf100_gr_init_gpc_mmu(struct gf100_gr *gr)
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  {
  	struct nvkm_device *device = gr->base.engine.subdev.device;
  	struct nvkm_fb *fb = device->fb;
@@@ -1970,13 -2051,23 +2009,21 @@@
  	nvkm_wr32(device, 0x404000, 0xc0000000);
  	nvkm_wr32(device, 0x404600, 0xc0000000);
  	nvkm_wr32(device, 0x408030, 0xc0000000);
 -
 -	if (gr->func->init_40601c)
 -		gr->func->init_40601c(gr);
 -
 +	nvkm_wr32(device, 0x40601c, 0xc0000000);
  	nvkm_wr32(device, 0x404490, 0xc0000000);
  	nvkm_wr32(device, 0x406018, 0xc0000000);
 -
 -	if (gr->func->init_sked_hww_esr)
 -		gr->func->init_sked_hww_esr(gr);
 -
  	nvkm_wr32(device, 0x405840, 0xc0000000);
  	nvkm_wr32(device, 0x405844, 0x00ffffff);
++<<<<<<< HEAD
 +	nvkm_mask(device, 0x419cc0, 0x00000008, 0x00000008);
 +	nvkm_mask(device, 0x419eb4, 0x00001000, 0x00001000);
++=======
+ 
+ 	if (gr->func->init_419cc0)
+ 		gr->func->init_419cc0(gr);
+ 	if (gr->func->init_419eb4)
+ 		gr->func->init_419eb4(gr);
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  
  	for (gpc = 0; gpc < gr->gpc_nr; gpc++) {
  		nvkm_wr32(device, GPC_UNIT(gpc, 0x0420), 0xc0000000);
@@@ -2040,6 -2130,14 +2087,17 @@@ gf100_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gf100_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
+ 	.init_fecs_exceptions = gf100_gr_init_fecs_exceptions,
+ 	.init_40601c = gf100_gr_init_40601c,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gf100_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.mmio = gf100_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
index a36e45a4a635,1dae373fa0d7..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
@@@ -122,10 -122,21 +122,21 @@@ struct gf100_gr_func 
  	void (*dtor)(struct gf100_gr *);
  	int (*init)(struct gf100_gr *);
  	void (*init_gpc_mmu)(struct gf100_gr *);
 -	void (*init_r405a14)(struct gf100_gr *);
 -	void (*init_bios)(struct gf100_gr *);
 -	void (*init_vsc_stream_master)(struct gf100_gr *);
 -	void (*init_zcull)(struct gf100_gr *);
 -	void (*init_num_active_ltcs)(struct gf100_gr *);
  	void (*init_rop_active_fbps)(struct gf100_gr *);
++<<<<<<< HEAD
++=======
+ 	void (*init_bios_2)(struct gf100_gr *);
+ 	void (*init_swdx_pes_mask)(struct gf100_gr *);
+ 	void (*init_fecs_exceptions)(struct gf100_gr *);
+ 	void (*init_ds_hww_esr_2)(struct gf100_gr *);
+ 	void (*init_40601c)(struct gf100_gr *);
+ 	void (*init_sked_hww_esr)(struct gf100_gr *);
+ 	void (*init_419cc0)(struct gf100_gr *);
+ 	void (*init_419eb4)(struct gf100_gr *);
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	void (*init_ppc_exceptions)(struct gf100_gr *);
 +	void (*init_swdx_pes_mask)(struct gf100_gr *);
 +	void (*init_num_active_ltcs)(struct gf100_gr *);
  	void (*set_hww_esr_report_mask)(struct gf100_gr *);
  	const struct gf100_gr_pack *mmio;
  	struct {
@@@ -140,17 -151,32 +151,31 @@@
  	struct nvkm_sclass sclass[];
  };
  
 -int gf100_gr_rops(struct gf100_gr *);
  int gf100_gr_init(struct gf100_gr *);
++<<<<<<< HEAD
 +int gf100_gr_rops(struct gf100_gr *);
++=======
+ void gf100_gr_init_vsc_stream_master(struct gf100_gr *);
+ void gf100_gr_init_zcull(struct gf100_gr *);
+ void gf100_gr_init_num_active_ltcs(struct gf100_gr *);
+ void gf100_gr_init_fecs_exceptions(struct gf100_gr *);
+ void gf100_gr_init_40601c(struct gf100_gr *);
+ void gf100_gr_init_419cc0(struct gf100_gr *);
+ void gf100_gr_init_419eb4(struct gf100_gr *);
+ 
+ void gf117_gr_init_zcull(struct gf100_gr *);
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  
  int gk104_gr_init(struct gf100_gr *);
 -void gk104_gr_init_vsc_stream_master(struct gf100_gr *);
  void gk104_gr_init_rop_active_fbps(struct gf100_gr *);
  void gk104_gr_init_ppc_exceptions(struct gf100_gr *);
 -void gk104_gr_init_sked_hww_esr(struct gf100_gr *);
  
+ void gk110_gr_init_419eb4(struct gf100_gr *);
+ 
  int gk20a_gr_init(struct gf100_gr *);
  
 +int gm200_gr_init(struct gf100_gr *);
  int gm200_gr_rops(struct gf100_gr *);
 -void gm200_gr_init_num_active_ltcs(struct gf100_gr *);
 -void gm200_gr_init_ds_hww_esr_2(struct gf100_gr *);
  
  int gp100_gr_init(struct gf100_gr *);
  void gp100_gr_init_rop_active_fbps(struct gf100_gr *);
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
index d736dcd55ea2,59d4dac97d8c..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
@@@ -115,6 -115,14 +115,17 @@@ gf104_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf104_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
+ 	.init_fecs_exceptions = gf100_gr_init_fecs_exceptions,
+ 	.init_40601c = gf100_gr_init_40601c,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gf100_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.mmio = gf104_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
index 2f0d24498427,73cb23a71c52..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
@@@ -106,6 -106,21 +106,18 @@@ gf108_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf108_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_r405a14 = gf108_gr_init_r405a14,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
+ 	.init_fecs_exceptions = gf100_gr_init_fecs_exceptions,
+ 	.init_40601c = gf100_gr_init_40601c,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gf100_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.mmio = gf108_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
index d1d942eb86af,1d7188e844f5..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
@@@ -87,6 -87,14 +87,17 @@@ gf110_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf110_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
+ 	.init_fecs_exceptions = gf100_gr_init_fecs_exceptions,
+ 	.init_40601c = gf100_gr_init_40601c,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gf100_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.mmio = gf110_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
index 0124e468086e,34655676ce39..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
@@@ -123,6 -123,42 +123,17 @@@ gf117_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gf117_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf117_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
+ 	.init_fecs_exceptions = gf100_gr_init_fecs_exceptions,
+ 	.init_40601c = gf100_gr_init_40601c,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gf100_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.mmio = gf117_gr_pack_mmio,
  	.fecs.ucode = &gf117_gr_fecs_ucode,
  	.gpccs.ucode = &gf117_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
index 8d8e4cafe28f,28c00cb19995..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
@@@ -178,6 -178,14 +178,17 @@@ gf119_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gf119_gr = {
  	.init = gf100_gr_init,
++<<<<<<< HEAD
++=======
+ 	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
+ 	.init_vsc_stream_master = gf100_gr_init_vsc_stream_master,
+ 	.init_zcull = gf100_gr_init_zcull,
+ 	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
+ 	.init_fecs_exceptions = gf100_gr_init_fecs_exceptions,
+ 	.init_40601c = gf100_gr_init_40601c,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gf100_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.mmio = gf119_gr_pack_mmio,
  	.fecs.ucode = &gf100_gr_fecs_ucode,
  	.gpccs.ucode = &gf100_gr_gpccs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
index 3ed06dea433e,775b47428486..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
@@@ -270,11 -457,11 +270,16 @@@ gk104_gr_init(struct gf100_gr *gr
  	nvkm_wr32(device, 0x408030, 0xc0000000);
  	nvkm_wr32(device, 0x404490, 0xc0000000);
  	nvkm_wr32(device, 0x406018, 0xc0000000);
 -	gr->func->init_sked_hww_esr(gr);
 +	nvkm_wr32(device, 0x407020, 0x40000000);
  	nvkm_wr32(device, 0x405840, 0xc0000000);
  	nvkm_wr32(device, 0x405844, 0x00ffffff);
++<<<<<<< HEAD
 +	nvkm_mask(device, 0x419cc0, 0x00000008, 0x00000008);
 +	nvkm_mask(device, 0x419eb4, 0x00001000, 0x00001000);
++=======
+ 	gr->func->init_419cc0(gr);
+ 	gr->func->init_419eb4(gr);
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  
  	gr->func->init_ppc_exceptions(gr);
  
@@@ -340,7 -526,15 +345,14 @@@ gk104_gr_gpccs_ucode = 
  static const struct gf100_gr_func
  gk104_gr = {
  	.init = gk104_gr_init,
 -	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
 -	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
 -	.init_zcull = gf117_gr_init_zcull,
 -	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
++<<<<<<< HEAD
++=======
+ 	.init_fecs_exceptions = gk104_gr_init_fecs_exceptions,
+ 	.init_sked_hww_esr = gk104_gr_init_sked_hww_esr,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gf100_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk104_gr_pack_mmio,
  	.fecs.ucode = &gk104_gr_fecs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
index f31b171a4102,daaa4492d764..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
@@@ -183,7 -351,15 +197,14 @@@ gk110_gr_init_419eb4(struct gf100_gr *g
  static const struct gf100_gr_func
  gk110_gr = {
  	.init = gk104_gr_init,
 -	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
 -	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
 -	.init_zcull = gf117_gr_init_zcull,
 -	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
++<<<<<<< HEAD
++=======
+ 	.init_fecs_exceptions = gf100_gr_init_fecs_exceptions,
+ 	.init_sked_hww_esr = gk104_gr_init_sked_hww_esr,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gk110_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk110_gr_pack_mmio,
  	.fecs.ucode = &gk110_gr_fecs_ucode,
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
index d76dd178007f,ee56b00c25d0..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
@@@ -103,7 -103,15 +103,14 @@@ gk110b_gr_pack_mmio[] = 
  static const struct gf100_gr_func
  gk110b_gr = {
  	.init = gk104_gr_init,
 -	.init_gpc_mmu = gf100_gr_init_gpc_mmu,
 -	.init_vsc_stream_master = gk104_gr_init_vsc_stream_master,
 -	.init_zcull = gf117_gr_init_zcull,
 -	.init_num_active_ltcs = gf100_gr_init_num_active_ltcs,
  	.init_rop_active_fbps = gk104_gr_init_rop_active_fbps,
++<<<<<<< HEAD
++=======
+ 	.init_fecs_exceptions = gf100_gr_init_fecs_exceptions,
+ 	.init_sked_hww_esr = gk104_gr_init_sked_hww_esr,
+ 	.init_419cc0 = gf100_gr_init_419cc0,
+ 	.init_419eb4 = gk110_gr_init_419eb4,
++>>>>>>> 0a84a51334b5 (drm/nouveau/gr/gf100-: virtualise init_419eb4 + apply fixes from traces)
  	.init_ppc_exceptions = gk104_gr_init_ppc_exceptions,
  	.mmio = gk110b_gr_pack_mmio,
  	.fecs.ucode = &gk110_gr_fecs_ucode,
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf104.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf108.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf110.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf117.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gf119.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk104.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gk110b.c
