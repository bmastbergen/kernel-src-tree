crypto: algif_skcipher - Load TX SG list after waiting

jira LE-1907
cve CVE-2017-13215
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [crypto] algif_skcipher: Load TX SG list after waiting (Bruno Eduardo de Oliveira Meneguele) [1541875] {CVE-2017-13215}
Rebuild_FUZZ: 88.89%
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit 4f0414e54e4d1893c6f08260693f8ef84c929293
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/4f0414e5.failed

We need to load the TX SG list in sendmsg(2) after waiting for
incoming data, not before.

	Cc: stable@vger.kernel.org
	Reported-by: Dmitry Vyukov <dvyukov@google.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
	Tested-by: Dmitry Vyukov <dvyukov@google.com>
(cherry picked from commit 4f0414e54e4d1893c6f08260693f8ef84c929293)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	crypto/algif_skcipher.c
diff --cc crypto/algif_skcipher.c
index 5c6dcff232c4,df86fb47c3ae..000000000000
--- a/crypto/algif_skcipher.c
+++ b/crypto/algif_skcipher.c
@@@ -442,48 -646,41 +442,73 @@@ static int skcipher_recvmsg(struct kioc
  	long copied = 0;
  
  	lock_sock(sk);
++<<<<<<< HEAD
 +	for (iov = msg->msg_iov, iovlen = msg->msg_iovlen; iovlen > 0;
 +	     iovlen--, iov++) {
 +		unsigned long seglen = iov->iov_len;
 +		char __user *from = iov->iov_base;
 +
 +		while (seglen) {
 +			sgl = list_first_entry(&ctx->tsgl,
 +					       struct skcipher_sg_list, list);
 +			sg = sgl->sg;
 +
 +			while (!sg->length)
 +				sg++;
 +
 +			used = ctx->used;
 +			if (!used) {
 +				err = skcipher_wait_for_data(sk, flags);
 +				if (err)
 +					goto unlock;
 +			}
 +
 +			used = min_t(unsigned long, used, seglen);
 +
 +			used = af_alg_make_sg(&ctx->rsgl, from, used, 1);
 +			err = used;
 +			if (err < 0)
++=======
+ 	while (msg_data_left(msg)) {
+ 		if (!ctx->used) {
+ 			err = skcipher_wait_for_data(sk, flags);
+ 			if (err)
++>>>>>>> 4f0414e54e4d (crypto: algif_skcipher - Load TX SG list after waiting)
  				goto unlock;
 -		}
  
 -		used = min_t(unsigned long, ctx->used, msg_data_left(msg));
 +			if (ctx->more || used < ctx->used)
 +				used -= used % bs;
  
 -		used = af_alg_make_sg(&ctx->rsgl, &msg->msg_iter, used);
 -		err = used;
 -		if (err < 0)
 -			goto unlock;
 +			err = -EINVAL;
 +			if (!used)
 +				goto free;
  
 -		if (ctx->more || used < ctx->used)
 -			used -= used % bs;
 +			ablkcipher_request_set_crypt(&ctx->req, sg,
 +						     ctx->rsgl.sg, used,
 +						     ctx->iv);
  
++<<<<<<< HEAD
 +			err = af_alg_wait_for_completion(
++=======
+ 		err = -EINVAL;
+ 		if (!used)
+ 			goto free;
+ 
+ 		sgl = list_first_entry(&ctx->tsgl,
+ 				       struct skcipher_sg_list, list);
+ 		sg = sgl->sg;
+ 
+ 		while (!sg->length)
+ 			sg++;
+ 
+ 		skcipher_request_set_crypt(&ctx->req, sg, ctx->rsgl.sg, used,
+ 					   ctx->iv);
+ 
+ 		err = af_alg_wait_for_completion(
++>>>>>>> 4f0414e54e4d (crypto: algif_skcipher - Load TX SG list after waiting)
  				ctx->enc ?
 -					crypto_skcipher_encrypt(&ctx->req) :
 -					crypto_skcipher_decrypt(&ctx->req),
 +					crypto_ablkcipher_encrypt(&ctx->req) :
 +					crypto_ablkcipher_decrypt(&ctx->req),
  				&ctx->completion);
  
  free:
* Unmerged path crypto/algif_skcipher.c
