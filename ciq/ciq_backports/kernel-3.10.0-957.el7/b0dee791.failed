hv_netvsc: fix locking during VF setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Stephen Hemminger <stephen@networkplumber.org>
commit b0dee7910317f41f398838992516af6a3b981d86
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b0dee791.failed

The dev_uc/mc_sync calls need to have the device address list
locked. This was spotted by running with lockdep enabled.

Fixes: bee9d41b37ea ("hv_netvsc: propagate rx filters to VF")
	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b0dee7910317f41f398838992516af6a3b981d86)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc_drv.c
diff --cc drivers/net/hyperv/netvsc_drv.c
index aaa29cf1fee7,faea0be18924..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -1821,6 -1849,15 +1821,18 @@@ static void __netvsc_vf_setup(struct ne
  		netdev_warn(vf_netdev,
  			    "unable to change mtu to %u\n", ndev->mtu);
  
++<<<<<<< HEAD
++=======
+ 	/* set multicast etc flags on VF */
+ 	dev_change_flags(vf_netdev, ndev->flags | IFF_SLAVE);
+ 
+ 	/* sync address list from ndev to VF */
+ 	netif_addr_lock_bh(ndev);
+ 	dev_uc_sync(vf_netdev, ndev);
+ 	dev_mc_sync(vf_netdev, ndev);
+ 	netif_addr_unlock_bh(ndev);
+ 
++>>>>>>> b0dee7910317 (hv_netvsc: fix locking during VF setup)
  	if (netif_running(ndev)) {
  		ret = dev_open(vf_netdev);
  		if (ret)
* Unmerged path drivers/net/hyperv/netvsc_drv.c
