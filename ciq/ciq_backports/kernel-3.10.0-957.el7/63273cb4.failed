scsi: vmbus: Add function to report available ring buffer to write in total ring size percentage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Long Li <longli@microsoft.com>
commit 63273cb40101b6f303a5493f1bdf629d4ab3746b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/63273cb4.failed

Netvsc has a function to calculate how much ring buffer in percentage is
available to write. This function is also useful for storvsc and other
vmbus devices.

Define a similar function in vmbus to be used by other vmbus devices.

	Signed-off-by: Long Li <longli@microsoft.com>
	Acked-by: David S. Miller <davem@davemloft.net>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 63273cb40101b6f303a5493f1bdf629d4ab3746b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/hyperv.h
diff --cc include/linux/hyperv.h
index 6e5b0a9c8b8f,9ac954ee577e..000000000000
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@@ -158,19 -156,16 +160,32 @@@ static inline u32 hv_get_bytes_to_write
  	return write;
  }
  
++<<<<<<< HEAD
 +static inline u32 hv_get_cached_bytes_to_write(
 +	const struct hv_ring_buffer_info *rbi)
 +{
 +	u32 read_loc, write_loc, dsize, write;
 +
 +	dsize = rbi->ring_datasize;
 +	read_loc = rbi->cached_read_index;
 +	write_loc = rbi->ring_buffer->write_index;
 +
 +	write = write_loc >= read_loc ? dsize - (write_loc - read_loc) :
 +		read_loc - write_loc;
 +	return write;
 +}
++=======
+ static inline u32 hv_get_avail_to_write_percent(
+ 		const struct hv_ring_buffer_info *rbi)
+ {
+ 	u32 avail_write = hv_get_bytes_to_write(rbi);
+ 
+ 	return reciprocal_divide(
+ 			(avail_write  << 3) + (avail_write << 1),
+ 			rbi->ring_size_div10_reciprocal);
+ }
+ 
++>>>>>>> 63273cb40101 (scsi: vmbus: Add function to report available ring buffer to write in total ring size percentage)
  /*
   * VMBUS version is 32 bit entity broken up into
   * two 16 bit quantities: major_number. minor_number.
diff --git a/drivers/hv/ring_buffer.c b/drivers/hv/ring_buffer.c
index 82a9f294910e..677adae8c91d 100644
--- a/drivers/hv/ring_buffer.c
+++ b/drivers/hv/ring_buffer.c
@@ -273,6 +273,8 @@ int hv_ringbuffer_init(struct hv_ring_buffer_info *ring_info,
 	ring_info->ring_buffer->feature_bits.value = 1;
 
 	ring_info->ring_size = page_cnt << PAGE_SHIFT;
+	ring_info->ring_size_div10_reciprocal =
+		reciprocal_value(ring_info->ring_size / 10);
 	ring_info->ring_datasize = ring_info->ring_size -
 		sizeof(struct hv_ring_buffer);
 
* Unmerged path include/linux/hyperv.h
