mlxsw: spectrum: qdiscs: Unite all handle checks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Nogah Frankel <nogahf@mellanox.com>
commit cba7158ff1600f4ca8d752f41046d97800d9508e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/cba7158f.failed

Every qdisc op gets the qdisc handle ID as well as its location.  Each one
of them, beside replace, checks if the handle doesn't match the qdisc in
the given location, and if so, it returns without running the actual op.
Unite these checks to one comparison function and avoid sending the handle
id to these ops.

	Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
	Reviewed-by: Yuval Mintz <yuvalm@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cba7158ff1600f4ca8d752f41046d97800d9508e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
index b5397da94d7f,51ac8090b735..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
@@@ -41,6 -41,34 +41,37 @@@
  #include "spectrum.h"
  #include "reg.h"
  
++<<<<<<< HEAD
++=======
+ enum mlxsw_sp_qdisc_type {
+ 	MLXSW_SP_QDISC_NO_QDISC,
+ 	MLXSW_SP_QDISC_RED,
+ };
+ 
+ struct mlxsw_sp_qdisc {
+ 	u32 handle;
+ 	enum mlxsw_sp_qdisc_type type;
+ 	u8 tclass_num;
+ 	union {
+ 		struct red_stats red;
+ 	} xstats_base;
+ 	struct mlxsw_sp_qdisc_stats {
+ 		u64 tx_bytes;
+ 		u64 tx_packets;
+ 		u64 drops;
+ 		u64 overlimits;
+ 	} stats_base;
+ };
+ 
+ static bool
+ mlxsw_sp_qdisc_compare(struct mlxsw_sp_qdisc *mlxsw_sp_qdisc, u32 handle,
+ 		       enum mlxsw_sp_qdisc_type type)
+ {
+ 	return mlxsw_sp_qdisc && mlxsw_sp_qdisc->handle == handle &&
+ 	       mlxsw_sp_qdisc->type == type;
+ }
+ 
++>>>>>>> cba7158ff160 (mlxsw: spectrum: qdiscs: Unite all handle checks)
  static int
  mlxsw_sp_tclass_congestion_enable(struct mlxsw_sp_port *mlxsw_sp_port,
  				  int tclass_num, u32 min, u32 max,
@@@ -111,16 -133,13 +142,26 @@@ mlxsw_sp_setup_tc_qdisc_clean_stats(str
  }
  
  static int
++<<<<<<< HEAD
 +mlxsw_sp_qdisc_red_destroy(struct mlxsw_sp_port *mlxsw_sp_port, u32 handle,
 +			   struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
 +			   int tclass_num)
 +{
 +	int err;
 +
 +	if (mlxsw_sp_qdisc->handle != handle)
 +		return 0;
 +
 +	err = mlxsw_sp_tclass_congestion_disable(mlxsw_sp_port, tclass_num);
++=======
+ mlxsw_sp_qdisc_red_destroy(struct mlxsw_sp_port *mlxsw_sp_port,
+ 			   struct mlxsw_sp_qdisc *mlxsw_sp_qdisc)
+ {
+ 	int err;
+ 
+ 	err = mlxsw_sp_tclass_congestion_disable(mlxsw_sp_port,
+ 						 mlxsw_sp_qdisc->tclass_num);
++>>>>>>> cba7158ff160 (mlxsw: spectrum: qdiscs: Unite all handle checks)
  	mlxsw_sp_qdisc->handle = TC_H_UNSPEC;
  	mlxsw_sp_qdisc->type = MLXSW_SP_QDISC_NO_QDISC;
  
@@@ -179,54 -197,57 +220,50 @@@ mlxsw_sp_qdisc_red_replace(struct mlxsw
  err_bad_param:
  	err = -EINVAL;
  err_config:
++<<<<<<< HEAD
 +	mlxsw_sp_qdisc_red_destroy(mlxsw_sp_port, mlxsw_sp_qdisc->handle,
 +				   mlxsw_sp_qdisc, tclass_num);
++=======
+ 	mlxsw_sp_qdisc_red_destroy(mlxsw_sp_port, mlxsw_sp_qdisc);
++>>>>>>> cba7158ff160 (mlxsw: spectrum: qdiscs: Unite all handle checks)
  	return err;
  }
  
  static int
- mlxsw_sp_qdisc_get_red_xstats(struct mlxsw_sp_port *mlxsw_sp_port, u32 handle,
+ mlxsw_sp_qdisc_get_red_xstats(struct mlxsw_sp_port *mlxsw_sp_port,
  			      struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
 -			      struct red_stats *res)
 +			      int tclass_num, struct red_stats *res)
  {
 -	struct red_stats *xstats_base = &mlxsw_sp_qdisc->xstats_base.red;
 -	u8 tclass_num = mlxsw_sp_qdisc->tclass_num;
 +	struct red_stats *xstats_base = &mlxsw_sp_qdisc->xstats_base;
  	struct mlxsw_sp_port_xstats *xstats;
 -	int early_drops, marks, pdrops;
  
- 	if (mlxsw_sp_qdisc->handle != handle ||
- 	    mlxsw_sp_qdisc->type != MLXSW_SP_QDISC_RED)
- 		return -EOPNOTSUPP;
- 
  	xstats = &mlxsw_sp_port->periodic_hw_stats.xstats;
  
 -	early_drops = xstats->wred_drop[tclass_num] - xstats_base->prob_drop;
 -	marks = xstats->ecn - xstats_base->prob_mark;
 -	pdrops = xstats->tail_drop[tclass_num] - xstats_base->pdrop;
 -
 -	res->pdrop += pdrops;
 -	res->prob_drop += early_drops;
 -	res->prob_mark += marks;
 -
 -	xstats_base->pdrop += pdrops;
 -	xstats_base->prob_drop += early_drops;
 -	xstats_base->prob_mark += marks;
 +	res->prob_drop = xstats->wred_drop[tclass_num] - xstats_base->prob_drop;
 +	res->prob_mark = xstats->ecn - xstats_base->prob_mark;
 +	res->pdrop = xstats->tail_drop[tclass_num] - xstats_base->pdrop;
  	return 0;
  }
  
  static int
- mlxsw_sp_qdisc_get_red_stats(struct mlxsw_sp_port *mlxsw_sp_port, u32 handle,
+ mlxsw_sp_qdisc_get_red_stats(struct mlxsw_sp_port *mlxsw_sp_port,
  			     struct mlxsw_sp_qdisc *mlxsw_sp_qdisc,
 -			     struct tc_qopt_offload_stats *res)
 +			     int tclass_num,
 +			     struct tc_red_qopt_offload_stats *res)
  {
  	u64 tx_bytes, tx_packets, overlimits, drops;
 -	u8 tclass_num = mlxsw_sp_qdisc->tclass_num;
 -	struct mlxsw_sp_qdisc_stats *stats_base;
  	struct mlxsw_sp_port_xstats *xstats;
  	struct rtnl_link_stats64 *stats;
  
- 	if (mlxsw_sp_qdisc->handle != handle ||
- 	    mlxsw_sp_qdisc->type != MLXSW_SP_QDISC_RED)
- 		return -EOPNOTSUPP;
- 
  	xstats = &mlxsw_sp_port->periodic_hw_stats.xstats;
  	stats = &mlxsw_sp_port->periodic_hw_stats.stats;
 -	stats_base = &mlxsw_sp_qdisc->stats_base;
  
 -	tx_bytes = stats->tx_bytes - stats_base->tx_bytes;
 -	tx_packets = stats->tx_packets - stats_base->tx_packets;
 +	tx_bytes = stats->tx_bytes - mlxsw_sp_qdisc->tx_bytes;
 +	tx_packets = stats->tx_packets - mlxsw_sp_qdisc->tx_packets;
  	overlimits = xstats->wred_drop[tclass_num] + xstats->ecn -
 -		     stats_base->overlimits;
 +		     mlxsw_sp_qdisc->overlimits;
  	drops = xstats->wred_drop[tclass_num] + xstats->tail_drop[tclass_num] -
 -		stats_base->drops;
 +		mlxsw_sp_qdisc->drops;
  
  	_bstats_update(res->bstats, tx_bytes, tx_packets);
  	res->qstats->overlimits += overlimits;
@@@ -252,24 -272,27 +289,43 @@@ int mlxsw_sp_setup_tc_red(struct mlxsw_
  	if (p->parent != TC_H_ROOT)
  		return -EOPNOTSUPP;
  
 -	mlxsw_sp_qdisc = mlxsw_sp_port->root_qdisc;
 +	mlxsw_sp_qdisc = &mlxsw_sp_port->root_qdisc;
 +	tclass_num = MLXSW_SP_PORT_DEFAULT_TCLASS;
  
- 	switch (p->command) {
- 	case TC_RED_REPLACE:
+ 	if (p->command == TC_RED_REPLACE)
  		return mlxsw_sp_qdisc_red_replace(mlxsw_sp_port, p->handle,
++<<<<<<< HEAD
 +						  mlxsw_sp_qdisc, tclass_num,
 +						  &p->set);
 +	case TC_RED_DESTROY:
 +		return mlxsw_sp_qdisc_red_destroy(mlxsw_sp_port, p->handle,
 +						  mlxsw_sp_qdisc, tclass_num);
 +	case TC_RED_XSTATS:
 +		return mlxsw_sp_qdisc_get_red_xstats(mlxsw_sp_port, p->handle,
 +						     mlxsw_sp_qdisc, tclass_num,
 +						     p->xstats);
 +	case TC_RED_STATS:
 +		return mlxsw_sp_qdisc_get_red_stats(mlxsw_sp_port, p->handle,
 +						    mlxsw_sp_qdisc, tclass_num,
++=======
+ 						  mlxsw_sp_qdisc, &p->set);
+ 
+ 	if (!mlxsw_sp_qdisc_compare(mlxsw_sp_qdisc, p->handle,
+ 				    MLXSW_SP_QDISC_RED))
+ 		return -EOPNOTSUPP;
+ 
+ 	switch (p->command) {
+ 	case TC_RED_DESTROY:
+ 		return mlxsw_sp_qdisc_red_destroy(mlxsw_sp_port,
+ 						  mlxsw_sp_qdisc);
+ 	case TC_RED_XSTATS:
+ 		return mlxsw_sp_qdisc_get_red_xstats(mlxsw_sp_port,
+ 						     mlxsw_sp_qdisc,
+ 						     p->xstats);
+ 	case TC_RED_STATS:
+ 		return mlxsw_sp_qdisc_get_red_stats(mlxsw_sp_port,
+ 						    mlxsw_sp_qdisc,
++>>>>>>> cba7158ff160 (mlxsw: spectrum: qdiscs: Unite all handle checks)
  						    &p->stats);
  	default:
  		return -EOPNOTSUPP;
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_qdisc.c
