perf evlist: Remove evlist->overwrite

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit 144b9a4fc53039c09007b71a06640560a6e62140
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/144b9a4f.failed

evlist->overwrite is set to false in all users. It can be removed.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Acked-by: Namhyung Kim <namhyung@kernel.org>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Kan Liang <kan.liang@intel.com>
Link: http://lkml.kernel.org/r/20171203020044.81680-4-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 144b9a4fc53039c09007b71a06640560a6e62140)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evlist.c
diff --cc tools/perf/util/evlist.c
index 0abcf97f8546,a59134fb141f..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -873,80 -736,11 +873,80 @@@ void perf_evlist__mmap_read_catchup(str
  	perf_mmap__read_catchup(&evlist->mmap[idx]);
  }
  
 +static bool perf_mmap__empty(struct perf_mmap *md)
 +{
 +	return perf_mmap__read_head(md) == md->prev && !md->auxtrace_mmap.base;
 +}
 +
 +static void perf_mmap__get(struct perf_mmap *map)
 +{
 +	refcount_inc(&map->refcnt);
 +}
 +
 +static void perf_mmap__put(struct perf_mmap *md)
 +{
 +	BUG_ON(md->base && refcount_read(&md->refcnt) == 0);
 +
 +	if (refcount_dec_and_test(&md->refcnt))
 +		perf_mmap__munmap(md);
 +}
 +
 +void perf_mmap__consume(struct perf_mmap *md, bool overwrite)
 +{
 +	if (!overwrite) {
 +		u64 old = md->prev;
 +
 +		perf_mmap__write_tail(md, old);
 +	}
 +
 +	if (refcount_read(&md->refcnt) == 1 && perf_mmap__empty(md))
 +		perf_mmap__put(md);
 +}
 +
  void perf_evlist__mmap_consume(struct perf_evlist *evlist, int idx)
  {
- 	perf_mmap__consume(&evlist->mmap[idx], evlist->overwrite);
+ 	perf_mmap__consume(&evlist->mmap[idx], false);
  }
  
 +int __weak auxtrace_mmap__mmap(struct auxtrace_mmap *mm __maybe_unused,
 +			       struct auxtrace_mmap_params *mp __maybe_unused,
 +			       void *userpg __maybe_unused,
 +			       int fd __maybe_unused)
 +{
 +	return 0;
 +}
 +
 +void __weak auxtrace_mmap__munmap(struct auxtrace_mmap *mm __maybe_unused)
 +{
 +}
 +
 +void __weak auxtrace_mmap_params__init(
 +			struct auxtrace_mmap_params *mp __maybe_unused,
 +			off_t auxtrace_offset __maybe_unused,
 +			unsigned int auxtrace_pages __maybe_unused,
 +			bool auxtrace_overwrite __maybe_unused)
 +{
 +}
 +
 +void __weak auxtrace_mmap_params__set_idx(
 +			struct auxtrace_mmap_params *mp __maybe_unused,
 +			struct perf_evlist *evlist __maybe_unused,
 +			int idx __maybe_unused,
 +			bool per_cpu __maybe_unused)
 +{
 +}
 +
 +static void perf_mmap__munmap(struct perf_mmap *map)
 +{
 +	if (map->base != NULL) {
 +		munmap(map->base, perf_mmap__mmap_len(map));
 +		map->base = NULL;
 +		map->fd = -1;
 +		refcount_set(&map->refcnt, 0);
 +	}
 +	auxtrace_mmap__munmap(&map->auxtrace_mmap);
 +}
 +
  static void perf_evlist__munmap_nofree(struct perf_evlist *evlist)
  {
  	int i;
@@@ -1318,7 -1070,6 +1318,10 @@@ int perf_evlist__mmap_ex(struct perf_ev
  	if (evlist->pollfd.entries == NULL && perf_evlist__alloc_pollfd(evlist) < 0)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	evlist->overwrite = overwrite;
++=======
++>>>>>>> 144b9a4fc530 (perf evlist: Remove evlist->overwrite)
  	evlist->mmap_len = perf_evlist__mmap_size(pages);
  	pr_debug("mmap size %zuB\n", evlist->mmap_len);
  	mp.mask = evlist->mmap_len - page_size - 1;
diff --git a/tools/perf/builtin-record.c b/tools/perf/builtin-record.c
index 6203082f0f85..85f773b1c51d 100644
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@ -595,7 +595,7 @@ static int record__mmap_read_evlist(struct record *rec, struct perf_evlist *evli
 		struct auxtrace_mmap *mm = &maps[i].auxtrace_mmap;
 
 		if (maps[i].base) {
-			if (perf_mmap__push(&maps[i], evlist->overwrite, backward, rec, record__pushfn) != 0) {
+			if (perf_mmap__push(&maps[i], false, backward, rec, record__pushfn) != 0) {
 				rc = -1;
 				goto out;
 			}
* Unmerged path tools/perf/util/evlist.c
diff --git a/tools/perf/util/evlist.h b/tools/perf/util/evlist.h
index 8cb6e907ffcd..a03a26f33d0b 100644
--- a/tools/perf/util/evlist.h
+++ b/tools/perf/util/evlist.h
@@ -77,7 +77,6 @@ struct perf_evlist {
 	int		 nr_entries;
 	int		 nr_groups;
 	int		 nr_mmaps;
-	bool		 overwrite;
 	bool		 enabled;
 	bool		 has_user_cpus;
 	size_t		 mmap_len;
