mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Petr Machata <petrm@mellanox.com>
commit 079c9f393b8d467995516c4716557373edefaa89
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/079c9f39.failed

Currently the only mirror action supported by mlxsw is mirror to another
mlxsw physical port. Correspondingly, span_entry, which tracks each
mlxsw mirror in the system, currently holds a u8 number of the
destination port.

To extend this system to mirror to gretap and ip6gretap netdevices, have
struct mlxsw_sp_span_entry actually hold the destination netdevice
itself.

This change then trickles down in obvious manner to SPAN module API and
mirror-related interfaces in struct mlxsw_afa_ops.

To prevent use of invalid pointer, NETDEV_UNREGISTER needs to be hooked
and the corresponding SPAN entry invalidated.

	Signed-off-by: Petr Machata <petrm@mellanox.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 079c9f393b8d467995516c4716557373edefaa89)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.c
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_flex_actions.c
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h
diff --cc drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h
index 0cacb3bf2df2,6dd601703c99..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h
@@@ -48,6 -49,11 +49,14 @@@ struct mlxsw_afa_ops 
  	void (*kvdl_fwd_entry_del)(void *priv, u32 kvdl_index);
  	int (*counter_index_get)(void *priv, unsigned int *p_counter_index);
  	void (*counter_index_put)(void *priv, unsigned int counter_index);
++<<<<<<< HEAD
++=======
+ 	int (*mirror_add)(void *priv, u8 local_in_port,
+ 			  const struct net_device *out_dev,
+ 			  bool ingress, int *p_span_id);
+ 	void (*mirror_del)(void *priv, u8 local_in_port, int span_id,
+ 			   bool ingress);
++>>>>>>> 079c9f393b8d (mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry)
  };
  
  struct mlxsw_afa *mlxsw_afa_create(unsigned int max_acts_per_set,
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index b68d3beaa490,86991db3478c..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@@ -1258,14 -1257,10 +1258,13 @@@ mlxsw_sp_port_add_cls_matchall_mirror(s
  				      const struct tc_action *a,
  				      bool ingress)
  {
 +	struct net *net = dev_net(mlxsw_sp_port->dev);
  	enum mlxsw_sp_span_type span_type;
- 	struct mlxsw_sp_port *to_port;
  	struct net_device *to_dev;
 +	int ifindex;
  
 -	to_dev = tcf_mirred_dev(a);
 +	ifindex = tcf_mirred_ifindex(a);
 +	to_dev = __dev_get_by_index(net, ifindex);
  	if (!to_dev) {
  		netdev_err(mlxsw_sp_port->dev, "Could not find requested device\n");
  		return -EINVAL;
@@@ -1275,13 -1270,11 +1274,17 @@@
  		netdev_err(mlxsw_sp_port->dev, "Cannot mirror to a non-spectrum port");
  		return -EOPNOTSUPP;
  	}
- 	to_port = netdev_priv(to_dev);
  
 +	mirror->to_local_port = to_port->local_port;
  	mirror->ingress = ingress;
  	span_type = ingress ? MLXSW_SP_SPAN_INGRESS : MLXSW_SP_SPAN_EGRESS;
++<<<<<<< HEAD
 +	return mlxsw_sp_span_mirror_add(mlxsw_sp_port, to_port, span_type,
 +					true);
++=======
+ 	return mlxsw_sp_span_mirror_add(mlxsw_sp_port, to_dev, span_type,
+ 					true, &mirror->span_id);
++>>>>>>> 079c9f393b8d (mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry)
  }
  
  static void
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_flex_actions.c
index de31b142e56f,510ce48d87f7..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_flex_actions.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_flex_actions.c
@@@ -125,6 -125,35 +125,38 @@@ mlxsw_sp_act_counter_index_put(void *pr
  	mlxsw_sp_flow_counter_free(mlxsw_sp, counter_index);
  }
  
++<<<<<<< HEAD
++=======
+ static int
+ mlxsw_sp_act_mirror_add(void *priv, u8 local_in_port,
+ 			const struct net_device *out_dev,
+ 			bool ingress, int *p_span_id)
+ {
+ 	struct mlxsw_sp_port *in_port;
+ 	struct mlxsw_sp *mlxsw_sp = priv;
+ 	enum mlxsw_sp_span_type type;
+ 
+ 	type = ingress ? MLXSW_SP_SPAN_INGRESS : MLXSW_SP_SPAN_EGRESS;
+ 	in_port = mlxsw_sp->ports[local_in_port];
+ 
+ 	return mlxsw_sp_span_mirror_add(in_port, out_dev, type,
+ 					false, p_span_id);
+ }
+ 
+ static void
+ mlxsw_sp_act_mirror_del(void *priv, u8 local_in_port, int span_id, bool ingress)
+ {
+ 	struct mlxsw_sp *mlxsw_sp = priv;
+ 	struct mlxsw_sp_port *in_port;
+ 	enum mlxsw_sp_span_type type;
+ 
+ 	type = ingress ? MLXSW_SP_SPAN_INGRESS : MLXSW_SP_SPAN_EGRESS;
+ 	in_port = mlxsw_sp->ports[local_in_port];
+ 
+ 	mlxsw_sp_span_mirror_del(in_port, span_id, type, false);
+ }
+ 
++>>>>>>> 079c9f393b8d (mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry)
  static const struct mlxsw_afa_ops mlxsw_sp_act_afa_ops = {
  	.kvdl_set_add		= mlxsw_sp_act_kvdl_set_add,
  	.kvdl_set_del		= mlxsw_sp_act_kvdl_set_del,
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
index a025a77a589d,9819cdcf9e5c..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
@@@ -133,7 -136,8 +136,12 @@@ static void mlxsw_sp_span_entry_destroy
  }
  
  struct mlxsw_sp_span_entry *
++<<<<<<< HEAD
 +mlxsw_sp_span_entry_find(struct mlxsw_sp *mlxsw_sp, u8 local_port)
++=======
+ mlxsw_sp_span_entry_find_by_port(struct mlxsw_sp *mlxsw_sp,
+ 				 const struct net_device *to_dev)
++>>>>>>> 079c9f393b8d (mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry)
  {
  	int i;
  
@@@ -146,13 -150,34 +154,43 @@@
  	return NULL;
  }
  
+ void mlxsw_sp_span_entry_invalidate(struct mlxsw_sp *mlxsw_sp,
+ 				    struct mlxsw_sp_span_entry *span_entry)
+ {
+ 	mlxsw_sp_span_entry_deconfigure(mlxsw_sp, span_entry);
+ 	span_entry->to_dev = NULL;
+ }
+ 
  static struct mlxsw_sp_span_entry *
++<<<<<<< HEAD
 +mlxsw_sp_span_entry_get(struct mlxsw_sp_port *port)
 +{
 +	struct mlxsw_sp_span_entry *span_entry;
 +
 +	span_entry = mlxsw_sp_span_entry_find(port->mlxsw_sp,
 +					      port->local_port);
++=======
+ mlxsw_sp_span_entry_find_by_id(struct mlxsw_sp *mlxsw_sp, int span_id)
+ {
+ 	int i;
+ 
+ 	for (i = 0; i < mlxsw_sp->span.entries_count; i++) {
+ 		struct mlxsw_sp_span_entry *curr = &mlxsw_sp->span.entries[i];
+ 
+ 		if (curr->ref_count && curr->id == span_id)
+ 			return curr;
+ 	}
+ 	return NULL;
+ }
+ 
+ static struct mlxsw_sp_span_entry *
+ mlxsw_sp_span_entry_get(struct mlxsw_sp *mlxsw_sp,
+ 			const struct net_device *to_dev)
+ {
+ 	struct mlxsw_sp_span_entry *span_entry;
+ 
+ 	span_entry = mlxsw_sp_span_entry_find_by_port(mlxsw_sp, to_dev);
++>>>>>>> 079c9f393b8d (mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry)
  	if (span_entry) {
  		/* Already exists, just take a reference */
  		span_entry->ref_count++;
@@@ -330,8 -355,9 +368,14 @@@ mlxsw_sp_span_inspected_port_del(struc
  }
  
  int mlxsw_sp_span_mirror_add(struct mlxsw_sp_port *from,
++<<<<<<< HEAD
 +			     struct mlxsw_sp_port *to,
 +			     enum mlxsw_sp_span_type type, bool bind)
++=======
+ 			     const struct net_device *to_dev,
+ 			     enum mlxsw_sp_span_type type, bool bind,
+ 			     int *p_span_id)
++>>>>>>> 079c9f393b8d (mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry)
  {
  	struct mlxsw_sp *mlxsw_sp = from->mlxsw_sp;
  	struct mlxsw_sp_span_entry *span_entry;
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h
index 069050e385ff,44b307c59d0e..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h
@@@ -61,12 -61,17 +61,26 @@@ int mlxsw_sp_span_init(struct mlxsw_sp 
  void mlxsw_sp_span_fini(struct mlxsw_sp *mlxsw_sp);
  
  int mlxsw_sp_span_mirror_add(struct mlxsw_sp_port *from,
++<<<<<<< HEAD
 +			     struct mlxsw_sp_port *to,
 +			     enum mlxsw_sp_span_type type, bool bind);
 +void mlxsw_sp_span_mirror_del(struct mlxsw_sp_port *from, u8 destination_port,
 +			      enum mlxsw_sp_span_type type, bool bind);
 +struct mlxsw_sp_span_entry *
 +mlxsw_sp_span_entry_find(struct mlxsw_sp *mlxsw_sp, u8 local_port);
++=======
+ 			     const struct net_device *to_dev,
+ 			     enum mlxsw_sp_span_type type,
+ 			     bool bind, int *p_span_id);
+ void mlxsw_sp_span_mirror_del(struct mlxsw_sp_port *from, int span_id,
+ 			      enum mlxsw_sp_span_type type, bool bind);
+ struct mlxsw_sp_span_entry *
+ mlxsw_sp_span_entry_find_by_port(struct mlxsw_sp *mlxsw_sp,
+ 				 const struct net_device *to_dev);
+ 
+ void mlxsw_sp_span_entry_invalidate(struct mlxsw_sp *mlxsw_sp,
+ 				    struct mlxsw_sp_span_entry *span_entry);
++>>>>>>> 079c9f393b8d (mlxsw: spectrum: Keep mirror netdev in mlxsw_sp_span_entry)
  
  int mlxsw_sp_span_port_mtu_update(struct mlxsw_sp_port *port, u16 mtu);
  
diff --git a/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c b/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c
index b698fb481b2e..82becad6ee53 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c
@@ -864,9 +864,8 @@ mlxsw_afa_mirror_destructor(struct mlxsw_afa_block *block,
 }
 
 static struct mlxsw_afa_mirror *
-mlxsw_afa_mirror_create(struct mlxsw_afa_block *block,
-			u8 local_in_port, u8 local_out_port,
-			bool ingress)
+mlxsw_afa_mirror_create(struct mlxsw_afa_block *block, u8 local_in_port,
+			const struct net_device *out_dev, bool ingress)
 {
 	struct mlxsw_afa_mirror *mirror;
 	int err;
@@ -876,7 +875,7 @@ mlxsw_afa_mirror_create(struct mlxsw_afa_block *block,
 		return ERR_PTR(-ENOMEM);
 
 	err = block->afa->ops->mirror_add(block->afa->ops_priv,
-					  local_in_port, local_out_port,
+					  local_in_port, out_dev,
 					  ingress, &mirror->span_id);
 	if (err)
 		goto err_mirror_add;
@@ -909,13 +908,13 @@ mlxsw_afa_block_append_allocated_mirror(struct mlxsw_afa_block *block,
 }
 
 int
-mlxsw_afa_block_append_mirror(struct mlxsw_afa_block *block,
-			      u8 local_in_port, u8 local_out_port, bool ingress)
+mlxsw_afa_block_append_mirror(struct mlxsw_afa_block *block, u8 local_in_port,
+			      const struct net_device *out_dev, bool ingress)
 {
 	struct mlxsw_afa_mirror *mirror;
 	int err;
 
-	mirror = mlxsw_afa_mirror_create(block, local_in_port, local_out_port,
+	mirror = mlxsw_afa_mirror_create(block, local_in_port, out_dev,
 					 ingress);
 	if (IS_ERR(mirror))
 		return PTR_ERR(mirror);
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.c
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c
index 7fab6a96c717..21cd8d2c6801 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c
@@ -423,7 +423,7 @@ int mlxsw_sp_acl_rulei_act_mirror(struct mlxsw_sp *mlxsw_sp,
 
 	return mlxsw_afa_block_append_mirror(rulei->act_block,
 					     in_port->local_port,
-					     out_port->local_port,
+					     out_dev,
 					     binding->ingress);
 }
 
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_flex_actions.c
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_span.c
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h
