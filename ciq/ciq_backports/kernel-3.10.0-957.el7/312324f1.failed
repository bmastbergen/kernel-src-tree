bnxt: use tc_cls_can_offload_and_chain0()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 312324f1248b47a2640469039811a04ab2f5be34
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/312324f1.failed

Make use of tc_cls_can_offload_and_chain0() to set extack msg in case
ethtool tc offload flag is not set or chain unsupported.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: Simon Horman <simon.horman@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 312324f1248b47a2640469039811a04ab2f5be34)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
#	drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index 9daf4657e678,4b001d2050c2..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -7679,7 -7778,8 +7679,12 @@@ static int bnxt_setup_tc_block_cb(enum 
  {
  	struct bnxt *bp = cb_priv;
  
++<<<<<<< HEAD
 +	if (!bnxt_tc_flower_enabled(bp))
++=======
+ 	if (!bnxt_tc_flower_enabled(bp) ||
+ 	    !tc_cls_can_offload_and_chain0(bp->dev, type_data))
++>>>>>>> 312324f1248b (bnxt: use tc_cls_can_offload_and_chain0())
  		return -EOPNOTSUPP;
  
  	switch (type) {
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c
index c5add72361d7,26290403f38f..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c
@@@ -124,7 -124,8 +124,12 @@@ static int bnxt_vf_rep_setup_tc_block_c
  	struct bnxt *bp = vf_rep->bp;
  	int vf_fid = bp->pf.vf[vf_rep->vf_idx].fw_fid;
  
++<<<<<<< HEAD
 +	if (!bnxt_tc_flower_enabled(vf_rep->bp))
++=======
+ 	if (!bnxt_tc_flower_enabled(vf_rep->bp) ||
+ 	    !tc_cls_can_offload_and_chain0(bp->dev, type_data))
++>>>>>>> 312324f1248b (bnxt: use tc_cls_can_offload_and_chain0())
  		return -EOPNOTSUPP;
  
  	switch (type) {
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_tc.c b/drivers/net/ethernet/broadcom/bnxt/bnxt_tc.c
index 841f5ad095a1..510a83dcdf4b 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_tc.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_tc.c
@@ -1480,9 +1480,6 @@ int bnxt_tc_setup_flower(struct bnxt *bp, u16 src_fid,
 {
 	int rc = 0;
 
-	if (cls_flower->common.chain_index)
-		return -EOPNOTSUPP;
-
 	switch (cls_flower->command) {
 	case TC_CLSFLOWER_REPLACE:
 		rc = bnxt_tc_add_flow(bp, src_fid, cls_flower);
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c
