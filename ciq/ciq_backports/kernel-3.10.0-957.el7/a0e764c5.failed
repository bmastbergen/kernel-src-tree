md: raid10: remove a couple of redundant variables and initializations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [md] raid10: remove a couple of redundant variables and initializations (Nigel Croxon) [1494474]
Rebuild_FUZZ: 97.06%
commit-author Colin Ian King <colin.king@canonical.com>
commit a0e764c54382be8da96f83bcecc9cf26de3846dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/a0e764c5.failed

Variables dev and bio_last_sector are assigned values that are never
read and hence these are redundant variables and can be removed.
Also remove the duplicated initialization of sectors, the latter
assignment is identical to the first and can be removed.

Cleans up 3 clang build warnings:
Value stored to 'dev' is never read
Value stored to 'bio_last_sector' is never read
Value stored to 'sectors' during its initialization is never read

	Signed-off-by: Colin Ian King <colin.king@canonical.com>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit a0e764c54382be8da96f83bcecc9cf26de3846dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid10.c
diff --cc drivers/md/raid10.c
index 17d84aee79e2,b0de5b5ee689..000000000000
--- a/drivers/md/raid10.c
+++ b/drivers/md/raid10.c
@@@ -363,11 -379,11 +363,11 @@@ static int find_bio_disk(struct r10con
  	return r10_bio->devs[slot].devnum;
  }
  
 -static void raid10_end_read_request(struct bio *bio)
 +static void raid10_end_read_request(struct bio *bio, int error)
  {
 -	int uptodate = !bio->bi_status;
 +	int uptodate = test_bit(BIO_UPTODATE, &bio->bi_flags);
  	struct r10bio *r10_bio = bio->bi_private;
- 	int slot, dev;
+ 	int slot;
  	struct md_rdev *rdev;
  	struct r10conf *conf = r10_bio->mddev->private;
  
@@@ -2669,9 -2573,6 +2667,12 @@@ static void handle_read_error(struct md
  	struct bio *bio;
  	struct r10conf *conf = mddev->private;
  	struct md_rdev *rdev = r10_bio->devs[slot].rdev;
++<<<<<<< HEAD
 +	char b[BDEVNAME_SIZE];
 +	unsigned long do_sync;
 +	int max_sectors;
++=======
++>>>>>>> a0e764c54382 (md: raid10: remove a couple of redundant variables and initializations)
  
  	/* we got a read error. Maybe the drive is bad.  Maybe just
  	 * the block and we can fix it.
@@@ -2682,7 -2583,6 +2683,10 @@@
  	 * frozen.
  	 */
  	bio = r10_bio->devs[slot].bio;
++<<<<<<< HEAD
 +	bdevname(bio->bi_bdev, b);
++=======
++>>>>>>> a0e764c54382 (md: raid10: remove a couple of redundant variables and initializations)
  	bio_put(bio);
  	r10_bio->devs[slot].bio = NULL;
  
* Unmerged path drivers/md/raid10.c
