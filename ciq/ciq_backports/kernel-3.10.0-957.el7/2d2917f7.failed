PCI: Export pcie_has_flr()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [pci] Export pcie_has_flr() (Alex Williamson) [1592654 1542494]
Rebuild_FUZZ: 89.36%
commit-author Alex Williamson <alex.williamson@redhat.com>
commit 2d2917f7747805a1f4188672f308d82a8ba01700
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/2d2917f7.failed

pcie_flr() suggests pcie_has_flr() to ensure that PCIe FLR support is
present prior to calling.  pcie_flr() is exported while pcie_has_flr()
is not.  Resolve this.

	Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 2d2917f7747805a1f4188672f308d82a8ba01700)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pci.h
diff --cc include/linux/pci.h
index 3316697fb61f,bace761deff2..000000000000
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@@ -1059,10 -1086,12 +1059,19 @@@ int pcie_get_readrq(struct pci_dev *dev
  int pcie_set_readrq(struct pci_dev *dev, int rq);
  int pcie_get_mps(struct pci_dev *dev);
  int pcie_set_mps(struct pci_dev *dev, int mps);
++<<<<<<< HEAD
 +int pcie_get_minimum_link(struct pci_dev *dev, enum pci_bus_speed *speed,
 +			  enum pcie_link_width *width);
 +void pcie_flr(struct pci_dev *dev);
 +int __pci_reset_function(struct pci_dev *dev);
++=======
+ u32 pcie_bandwidth_available(struct pci_dev *dev, struct pci_dev **limiting_dev,
+ 			     enum pci_bus_speed *speed,
+ 			     enum pcie_link_width *width);
+ void pcie_print_link_status(struct pci_dev *dev);
+ bool pcie_has_flr(struct pci_dev *dev);
+ int pcie_flr(struct pci_dev *dev);
++>>>>>>> 2d2917f77478 (PCI: Export pcie_has_flr())
  int __pci_reset_function_locked(struct pci_dev *dev);
  int pci_reset_function(struct pci_dev *dev);
  int pci_reset_function_locked(struct pci_dev *dev);
diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 78e7102016b2..04325e9f037d 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -3550,7 +3550,7 @@ static void pci_flr_wait(struct pci_dev *dev)
  * Returns true if the device advertises support for PCIe function level
  * resets.
  */
-static bool pcie_has_flr(struct pci_dev *dev)
+bool pcie_has_flr(struct pci_dev *dev)
 {
 	u32 cap;
 
@@ -3560,6 +3560,7 @@ static bool pcie_has_flr(struct pci_dev *dev)
 	pcie_capability_read_dword(dev, PCI_EXP_DEVCAP, &cap);
 	return cap & PCI_EXP_DEVCAP_FLR;
 }
+EXPORT_SYMBOL_GPL(pcie_has_flr);
 
 /**
  * pcie_flr - initiate a PCIe function level reset
* Unmerged path include/linux/pci.h
