i2c: i801: remove SMBNTFDDAT reads as they always seem to return 0

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [i2c] i801: remove SMBNTFDDAT reads as they always seem to return 0 (Benjamin Tissoires) [1554926]
Rebuild_FUZZ: 96.06%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit c912a25a5a12a497bb47068e3d42d7c9b67bde12
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/c912a25a.failed

On the platform tested, reading SMBNTFDDAT always returns 0 (using 1 read
of a word or 2 of 2 bytes). Given that we are not sure why and that we
don't need to rely on the data parameter in the current users of Host
Notify, remove this part of the code.

If someone wants to re-enable it, just revert this commit and data should
be available.

	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
(cherry picked from commit c912a25a5a12a497bb47068e3d42d7c9b67bde12)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/busses/i2c-i801.c
diff --cc drivers/i2c/busses/i2c-i801.c
index cb34b050a17d,c0c0cac9950c..000000000000
--- a/drivers/i2c/busses/i2c-i801.c
+++ b/drivers/i2c/busses/i2c-i801.c
@@@ -115,6 -115,9 +115,12 @@@
  #define SMBPEC(p)	(8 + (p)->smba)		/* ICH3 and later */
  #define SMBAUXSTS(p)	(12 + (p)->smba)	/* ICH4 and later */
  #define SMBAUXCTL(p)	(13 + (p)->smba)	/* ICH4 and later */
++<<<<<<< HEAD
++=======
+ #define SMBSLVSTS(p)	(16 + (p)->smba)	/* ICH3 and later */
+ #define SMBSLVCMD(p)	(17 + (p)->smba)	/* ICH3 and later */
+ #define SMBNTFDADD(p)	(20 + (p)->smba)	/* ICH3 and later */
++>>>>>>> c912a25a5a12 (i2c: i801: remove SMBNTFDDAT reads as they always seem to return 0)
  
  /* PCI Address Constants */
  #define SMBBAR		4
@@@ -518,8 -577,26 +524,29 @@@ static void i801_isr_byte_done(struct i
  	outb_p(SMBHSTSTS_BYTE_DONE, SMBHSTSTS(priv));
  }
  
++<<<<<<< HEAD
++=======
+ static irqreturn_t i801_host_notify_isr(struct i801_priv *priv)
+ {
+ 	unsigned short addr;
+ 
+ 	addr = inb_p(SMBNTFDADD(priv)) >> 1;
+ 
+ 	/*
+ 	 * With the tested platforms, reading SMBNTFDDAT (22 + (p)->smba)
+ 	 * always returns 0 and is safe to read.
+ 	 * We just use 0 given we have no use of the data right now.
+ 	 */
+ 	i2c_handle_smbus_host_notify(priv->host_notify, addr, 0);
+ 
+ 	/* clear Host Notify bit and return */
+ 	outb_p(SMBSLVSTS_HST_NTFY_STS, SMBSLVSTS(priv));
+ 	return IRQ_HANDLED;
+ }
+ 
++>>>>>>> c912a25a5a12 (i2c: i801: remove SMBNTFDDAT reads as they always seem to return 0)
  /*
 - * There are three kinds of interrupts:
 + * There are two kinds of interrupts:
   *
   * 1) i801 signals transaction completion with one of these interrupts:
   *      INTR - Success
* Unmerged path drivers/i2c/busses/i2c-i801.c
