dm raid: fix RAID leg rebuild errors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Heinz Mauelshagen <heinzm@redhat.com>
commit 36a240a706d43383bbdd377522501ddd2e5771f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/36a240a7.failed

On fast devices such as NVMe, a flaw in rs_get_progress() results in
false target status output when userspace lvm2 requests leg rebuilds
(symptom of the failure is device health chars 'aaaaaaaa' instead of
expected 'aAaAAAAA' causing lvm2 to fail).

The correct sync action state definitions already exist in
decipher_sync_action() so fix rs_get_progress() to use it.

Change decipher_sync_action() to return an enum rather than a string for
the sync states and call it from rs_get_progress().  Introduce
sync_str() to translate from enum to the string that is needed by
raid_status().

	Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 36a240a706d43383bbdd377522501ddd2e5771f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-raid.c
diff --cc drivers/md/dm-raid.c
index 2fb711edffa3,fceeb962f43b..000000000000
--- a/drivers/md/dm-raid.c
+++ b/drivers/md/dm-raid.c
@@@ -3402,19 -3423,14 +3424,24 @@@ static sector_t rs_get_progress(struct 
  		set_bit(RT_FLAG_RS_IN_SYNC, &rs->runtime_flags);
  
  	} else {
++<<<<<<< HEAD
 +		if (!test_bit(MD_RECOVERY_INTR, &recovery) &&
 +		    (test_bit(MD_RECOVERY_NEEDED, &recovery) ||
 +		     test_bit(MD_RECOVERY_RESHAPE, &recovery) ||
 +		     test_bit(MD_RECOVERY_RUNNING, &recovery)))
 +			r = mddev->curr_resync_completed;
 +		else
 +			r = mddev->recovery_cp;
++=======
+ 		state = decipher_sync_action(mddev, recovery);
++>>>>>>> 36a240a706d4 (dm raid: fix RAID leg rebuild errors)
+ 
+ 		if (state == st_idle && !test_bit(MD_RECOVERY_INTR, &recovery))
+ 			r = mddev->recovery_cp;
+ 		else
+ 			r = mddev->curr_resync_completed;
  
- 		if (r >= resync_max_sectors &&
- 		    (!test_bit(MD_RECOVERY_REQUESTED, &recovery) ||
- 		     (!test_bit(MD_RECOVERY_FROZEN, &recovery) &&
- 		      !test_bit(MD_RECOVERY_NEEDED, &recovery) &&
- 		      !test_bit(MD_RECOVERY_RUNNING, &recovery)))) {
+ 		if (state == st_idle && r >= resync_max_sectors) {
  			/*
  			 * Sync complete.
  			 */
* Unmerged path drivers/md/dm-raid.c
