blk-mq: Make it safe to quiesce and unquiesce from an interrupt handler

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [blk-mq] Make it safe to quiesce and unquiesce from an interrupt handler (Ewan Milne) [1549232]
Rebuild_FUZZ: 94.03%
commit-author Bart Van Assche <bart.vanassche@wdc.com>
commit 852ec80983d682dc08a0573d37eeaa9814c4f6b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/852ec809.failed

Since blk_mq_quiesce_queue_nowait() can be called from interrupt
context, make this safe. Since this function is not in the hot
path, uninline it.

Fixes: commit f4560ffe8cec ("blk-mq: use QUEUE_FLAG_QUIESCED to quiesce queue")
	Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
	Cc: Ming Lei <ming.lei@redhat.com>
	Cc: Hannes Reinecke <hare@suse.com>
	Cc: Martin K. Petersen <martin.petersen@oracle.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 852ec80983d682dc08a0573d37eeaa9814c4f6b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
#	include/linux/blk-mq.h
diff --cc block/blk-mq.c
index af064c8e0d5d,2caac30e128a..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -172,7 -204,14 +186,18 @@@ EXPORT_SYMBOL_GPL(blk_mq_quiesce_queue)
   */
  void blk_mq_unquiesce_queue(struct request_queue *q)
  {
++<<<<<<< HEAD
 +	blk_mq_start_stopped_hw_queues(q, true);
++=======
+ 	unsigned long flags;
+ 
+ 	spin_lock_irqsave(q->queue_lock, flags);
+ 	queue_flag_clear(QUEUE_FLAG_QUIESCED, q);
+ 	spin_unlock_irqrestore(q->queue_lock, flags);
+ 
+ 	/* dispatch requests which are inserted during quiescing */
+ 	blk_mq_run_hw_queues(q, true);
++>>>>>>> 852ec80983d6 (blk-mq: Make it safe to quiesce and unquiesce from an interrupt handler)
  }
  EXPORT_SYMBOL_GPL(blk_mq_unquiesce_queue);
  
diff --cc include/linux/blk-mq.h
index 5369c1639875,23d32ff0b462..000000000000
--- a/include/linux/blk-mq.h
+++ b/include/linux/blk-mq.h
@@@ -339,15 -263,10 +339,19 @@@ int blk_mq_freeze_queue_wait_timeout(st
  				     unsigned long timeout);
  int blk_mq_reinit_tagset(struct blk_mq_tag_set *set);
  
 -int blk_mq_map_queues(struct blk_mq_tag_set *set);
  void blk_mq_update_nr_hw_queues(struct blk_mq_tag_set *set, int nr_hw_queues);
  
++<<<<<<< HEAD
 +/*
 + * FIXME: this helper is just for working around mpt3sas.
 + */
 +static inline void blk_mq_quiesce_queue_nowait(struct request_queue *q)
 +{
 +	blk_mq_stop_hw_queues(q);
 +}
++=======
+ void blk_mq_quiesce_queue_nowait(struct request_queue *q);
++>>>>>>> 852ec80983d6 (blk-mq: Make it safe to quiesce and unquiesce from an interrupt handler)
  
  /*
   * Driver command data is immediately after the request. So subtract request
* Unmerged path block/blk-mq.c
* Unmerged path include/linux/blk-mq.h
