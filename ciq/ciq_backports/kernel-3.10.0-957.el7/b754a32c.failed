nvme-rdma: use NVME_CTRL_CONNECTING state to mark init process

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Max Gurtovoy <maxg@mellanox.com>
commit b754a32c66772e6510acd92237aadd4cf227ae39
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/b754a32c.failed

In order to avoid concurrent error recovery during initialization
process (allowed by the NVME_CTRL_NEW --> NVME_CTRL_RESETTING transition)
we must mark the ctrl as CONNECTING before initial connection
establisment.

	Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
	Reviewed-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit b754a32c66772e6510acd92237aadd4cf227ae39)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/rdma.c
diff --cc drivers/nvme/host/rdma.c
index 2e9ce2cbb1eb,5e2cc4f0d207..000000000000
--- a/drivers/nvme/host/rdma.c
+++ b/drivers/nvme/host/rdma.c
@@@ -2030,7 -1942,10 +2030,14 @@@ static struct nvme_ctrl *nvme_rdma_crea
  	if (!ctrl->queues)
  		goto out_uninit_ctrl;
  
++<<<<<<< HEAD
 +	ret = nvme_rdma_configure_admin_queue(ctrl);
++=======
+ 	changed = nvme_change_ctrl_state(&ctrl->ctrl, NVME_CTRL_CONNECTING);
+ 	WARN_ON_ONCE(!changed);
+ 
+ 	ret = nvme_rdma_configure_admin_queue(ctrl, true);
++>>>>>>> b754a32c6677 (nvme-rdma: use NVME_CTRL_CONNECTING state to mark init process)
  	if (ret)
  		goto out_kfree_queues;
  
diff --git a/drivers/nvme/host/core.c b/drivers/nvme/host/core.c
index 27174fd02aa2..6792ec81d3ab 100644
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@ -209,6 +209,7 @@ bool nvme_change_ctrl_state(struct nvme_ctrl *ctrl,
 		break;
 	case NVME_CTRL_RECONNECTING:
 		switch (old_state) {
+		case NVME_CTRL_NEW:
 		case NVME_CTRL_LIVE:
 		case NVME_CTRL_RESETTING:
 			changed = true;
* Unmerged path drivers/nvme/host/rdma.c
