IB/mthca: Fix gup usage in mthca_map_user_db()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Davidlohr Bueso <dave@stgolabs.net>
commit 487f6683f1b738e40aca2386b9f73da4ebb8223d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/487f6683.failed

get_user_pages() must be called with mmap_sem held, currently
it is not. In fact it is called under the user db_table->mutex.
To fix this we can convert gup to use the fast alternative,
and safely avoid taking mmap_sem, if possible. Furthermore
this is safe wrt to the mutex as other callers that take the
lock (unmap and alloc_db) are not called under mmap_sem
(hence possible deadlock).

	Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 487f6683f1b738e40aca2386b9f73da4ebb8223d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mthca/mthca_memfree.c
diff --cc drivers/infiniband/hw/mthca/mthca_memfree.c
index 1959dc569a95,2fe503e86c1d..000000000000
--- a/drivers/infiniband/hw/mthca/mthca_memfree.c
+++ b/drivers/infiniband/hw/mthca/mthca_memfree.c
@@@ -472,8 -472,7 +472,12 @@@ int mthca_map_user_db(struct mthca_dev 
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	ret = get_user_pages(current, current->mm, uaddr & PAGE_MASK, 1, 1, 0,
 +			     pages, NULL);
++=======
+ 	ret = get_user_pages_fast(uaddr & PAGE_MASK, 1, FOLL_WRITE, pages);
++>>>>>>> 487f6683f1b7 (IB/mthca: Fix gup usage in mthca_map_user_db())
  	if (ret < 0)
  		goto out;
  
* Unmerged path drivers/infiniband/hw/mthca/mthca_memfree.c
