net/mlx5e: Switch IEEE 802.3 counters to use stats group API

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Switch IEEE 802.3 counters to use stats group API (Alaa Hleihel) [1520297]
Rebuild_FUZZ: 96.55%
commit-author Kamal Heib <kamalh@mellanox.com>
commit 6e6ef814d27b1fb3cd30fe62d700208065656401
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/6e6ef814.failed

Switch the IEEE 802.3 counters to use the new stats group API.

	Signed-off-by: Kamal Heib <kamalh@mellanox.com>
	Reviewed-by: Gal Pressman <galp@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 6e6ef814d27b1fb3cd30fe62d700208065656401)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
index 6008820e81eb,5a489aa8fef3..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
@@@ -140,52 -102,6 +140,55 @@@ struct mlx5e_vport_stats 
  	__be64 query_vport_out[MLX5_ST_SZ_QW(query_vport_counter_out)];
  };
  
++<<<<<<< HEAD
 +static const struct counter_desc vport_stats_desc[] = {
 +	{ "rx_vport_unicast_packets",
 +		VPORT_COUNTER_OFF(received_eth_unicast.packets) },
 +	{ "rx_vport_unicast_bytes",
 +		VPORT_COUNTER_OFF(received_eth_unicast.octets) },
 +	{ "tx_vport_unicast_packets",
 +		VPORT_COUNTER_OFF(transmitted_eth_unicast.packets) },
 +	{ "tx_vport_unicast_bytes",
 +		VPORT_COUNTER_OFF(transmitted_eth_unicast.octets) },
 +	{ "rx_vport_multicast_packets",
 +		VPORT_COUNTER_OFF(received_eth_multicast.packets) },
 +	{ "rx_vport_multicast_bytes",
 +		VPORT_COUNTER_OFF(received_eth_multicast.octets) },
 +	{ "tx_vport_multicast_packets",
 +		VPORT_COUNTER_OFF(transmitted_eth_multicast.packets) },
 +	{ "tx_vport_multicast_bytes",
 +		VPORT_COUNTER_OFF(transmitted_eth_multicast.octets) },
 +	{ "rx_vport_broadcast_packets",
 +		VPORT_COUNTER_OFF(received_eth_broadcast.packets) },
 +	{ "rx_vport_broadcast_bytes",
 +		VPORT_COUNTER_OFF(received_eth_broadcast.octets) },
 +	{ "tx_vport_broadcast_packets",
 +		VPORT_COUNTER_OFF(transmitted_eth_broadcast.packets) },
 +	{ "tx_vport_broadcast_bytes",
 +		VPORT_COUNTER_OFF(transmitted_eth_broadcast.octets) },
 +	{ "rx_vport_rdma_unicast_packets",
 +		VPORT_COUNTER_OFF(received_ib_unicast.packets) },
 +	{ "rx_vport_rdma_unicast_bytes",
 +		VPORT_COUNTER_OFF(received_ib_unicast.octets) },
 +	{ "tx_vport_rdma_unicast_packets",
 +		VPORT_COUNTER_OFF(transmitted_ib_unicast.packets) },
 +	{ "tx_vport_rdma_unicast_bytes",
 +		VPORT_COUNTER_OFF(transmitted_ib_unicast.octets) },
 +	{ "rx_vport_rdma_multicast_packets",
 +		VPORT_COUNTER_OFF(received_ib_multicast.packets) },
 +	{ "rx_vport_rdma_multicast_bytes",
 +		VPORT_COUNTER_OFF(received_ib_multicast.octets) },
 +	{ "tx_vport_rdma_multicast_packets",
 +		VPORT_COUNTER_OFF(transmitted_ib_multicast.packets) },
 +	{ "tx_vport_rdma_multicast_bytes",
 +		VPORT_COUNTER_OFF(transmitted_ib_multicast.octets) },
 +};
 +
 +#define PPORT_802_3_OFF(c) \
 +	MLX5_BYTE_OFF(ppcnt_reg, \
 +		      counter_set.eth_802_3_cntrs_grp_data_layout.c##_high)
++=======
++>>>>>>> 6e6ef814d27b (net/mlx5e: Switch IEEE 802.3 counters to use stats group API)
  #define PPORT_802_3_GET(pstats, c) \
  	MLX5_GET64(ppcnt_reg, pstats->IEEE_802_3_counters, \
  		   counter_set.eth_802_3_cntrs_grp_data_layout.c##_high)
@@@ -411,10 -312,6 +393,13 @@@ static const struct counter_desc sq_sta
  	{ MLX5E_DECLARE_TX_STAT(struct mlx5e_sq_stats, xmit_more) },
  };
  
++<<<<<<< HEAD
 +#define NUM_SW_COUNTERS			ARRAY_SIZE(sw_stats_desc)
 +#define NUM_Q_COUNTERS			ARRAY_SIZE(q_stats_desc)
 +#define NUM_VPORT_COUNTERS		ARRAY_SIZE(vport_stats_desc)
 +#define NUM_PPORT_802_3_COUNTERS	ARRAY_SIZE(pport_802_3_stats_desc)
++=======
++>>>>>>> 6e6ef814d27b (net/mlx5e: Switch IEEE 802.3 counters to use stats group API)
  #define NUM_PPORT_2863_COUNTERS		ARRAY_SIZE(pport_2863_stats_desc)
  #define NUM_PPORT_2819_COUNTERS		ARRAY_SIZE(pport_2819_stats_desc)
  #define NUM_PPORT_PHY_STATISTICAL_COUNTERS(priv) \
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index 52759b7e5eaa..8cc37a3d6f83 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@ -224,11 +224,6 @@ static void mlx5e_fill_stats_strings(struct mlx5e_priv *priv, u8 *data)
 		strcpy(data + (idx++) * ETH_GSTRING_LEN,
 		       vport_stats_desc[i].format);
 
-	/* PPORT counters */
-	for (i = 0; i < NUM_PPORT_802_3_COUNTERS; i++)
-		strcpy(data + (idx++) * ETH_GSTRING_LEN,
-		       pport_802_3_stats_desc[i].format);
-
 	for (i = 0; i < NUM_PPORT_2863_COUNTERS; i++)
 		strcpy(data + (idx++) * ETH_GSTRING_LEN,
 		       pport_2863_stats_desc[i].format);
@@ -366,10 +361,6 @@ void mlx5e_ethtool_get_ethtool_stats(struct mlx5e_priv *priv,
 		data[idx++] = MLX5E_READ_CTR64_BE(priv->stats.vport.query_vport_out,
 						  vport_stats_desc, i);
 
-	for (i = 0; i < NUM_PPORT_802_3_COUNTERS; i++)
-		data[idx++] = MLX5E_READ_CTR64_BE(&priv->stats.pport.IEEE_802_3_counters,
-						  pport_802_3_stats_desc, i);
-
 	for (i = 0; i < NUM_PPORT_2863_COUNTERS; i++)
 		data[idx++] = MLX5E_READ_CTR64_BE(&priv->stats.pport.RFC_2863_counters,
 						  pport_2863_stats_desc, i);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
