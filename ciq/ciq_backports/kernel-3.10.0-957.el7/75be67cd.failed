scsi: aacraid: Remove unused rescan variable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [scsi] aacraid: Remove unused rescan variable (Raghava Aditya Renukunta) [1519664]
Rebuild_FUZZ: 92.68%
commit-author Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
commit 75be67cd155d95658507b15ffe905c36243526ae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/75be67cd.failed

Remove unused rescan variable.

	Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 75be67cd155d95658507b15ffe905c36243526ae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/aacraid/aacraid.h
#	drivers/scsi/aacraid/commsup.c
#	drivers/scsi/aacraid/linit.c
diff --cc drivers/scsi/aacraid/aacraid.h
index 1d7423b9d800,3e8a44c58728..000000000000
--- a/drivers/scsi/aacraid/aacraid.h
+++ b/drivers/scsi/aacraid/aacraid.h
@@@ -2642,15 -2643,41 +2642,43 @@@ static inline int aac_adapter_check_hea
  	return (dev)->a_ops.adapter_check_health(dev);
  }
  
++<<<<<<< HEAD
++=======
+ 
+ int aac_scan_host(struct aac_dev *dev);
+ 
+ static inline void aac_schedule_safw_scan_worker(struct aac_dev *dev)
+ {
+ 	schedule_delayed_work(&dev->safw_rescan_work, AAC_SAFW_RESCAN_DELAY);
+ }
+ 
+ static inline void aac_safw_rescan_worker(struct work_struct *work)
+ {
+ 	struct aac_dev *dev = container_of(to_delayed_work(work),
+ 		struct aac_dev, safw_rescan_work);
+ 
+ 	wait_event(dev->scsi_host_ptr->host_wait,
+ 		!scsi_host_in_recovery(dev->scsi_host_ptr));
+ 
+ 	aac_scan_host(dev);
+ }
+ 
+ static inline void aac_cancel_safw_rescan_worker(struct aac_dev *dev)
+ {
+ 	if (dev->sa_firmware)
+ 		cancel_delayed_work_sync(&dev->safw_rescan_work);
+ }
+ 
++>>>>>>> 75be67cd155d (scsi: aacraid: Remove unused rescan variable)
  /* SCp.phase values */
  #define AAC_OWNER_MIDLEVEL	0x101
  #define AAC_OWNER_LOWLEVEL	0x102
  #define AAC_OWNER_ERROR_HANDLER	0x103
  #define AAC_OWNER_FIRMWARE	0x106
  
 -void aac_safw_rescan_worker(struct work_struct *work);
  int aac_acquire_irq(struct aac_dev *dev);
  void aac_free_irq(struct aac_dev *dev);
- int aac_setup_safw_adapter(struct aac_dev *dev, int rescan);
+ int aac_setup_safw_adapter(struct aac_dev *dev);
  const char *aac_driverinfo(struct Scsi_Host *);
  void aac_fib_vector_assign(struct aac_dev *dev);
  struct fib *aac_fib_alloc(struct aac_dev *dev);
diff --cc drivers/scsi/aacraid/commsup.c
index 4be1a279f46f,fbf8b7ebd654..000000000000
--- a/drivers/scsi/aacraid/commsup.c
+++ b/drivers/scsi/aacraid/commsup.c
@@@ -1935,6 -1974,31 +1935,34 @@@ out
  	return rcode;
  }
  
++<<<<<<< HEAD
++=======
+ static int aac_scan_safw_host(struct aac_dev *dev)
+ {
+ 	int rcode = 0;
+ 
+ 	rcode = aac_update_safw_host_devices(dev);
+ 	if (rcode)
+ 		aac_schedule_safw_scan_worker(dev);
+ 
+ 	return rcode;
+ }
+ 
+ int aac_scan_host(struct aac_dev *dev)
+ {
+ 	int rcode = 0;
+ 
+ 	mutex_lock(&dev->scan_mutex);
+ 	if (dev->sa_firmware)
+ 		rcode = aac_scan_safw_host(dev);
+ 	else
+ 		scsi_scan_host(dev->scsi_host_ptr);
+ 	mutex_unlock(&dev->scan_mutex);
+ 
+ 	return rcode;
+ }
+ 
++>>>>>>> 75be67cd155d (scsi: aacraid: Remove unused rescan variable)
  /**
   *	aac_handle_sa_aif	Handle a message from the firmware
   *	@dev: Which adapter this fib is from
@@@ -1968,9 -2032,8 +1996,14 @@@ static void aac_handle_sa_aif(struct aa
  	case SA_AIF_LDEV_CHANGE:
  	case SA_AIF_BPCFG_CHANGE:
  
++<<<<<<< HEAD
 +		mutex_lock(&dev->scan_mutex);
 +		aac_update_safw_host_devices(dev, AAC_RESCAN);
 +		mutex_unlock(&dev->scan_mutex);
++=======
+ 		aac_scan_host(dev);
+ 
++>>>>>>> 75be67cd155d (scsi: aacraid: Remove unused rescan variable)
  		break;
  
  	case SA_AIF_BPSTAT_CHANGE:
diff --cc drivers/scsi/aacraid/linit.c
index 5870838688ad,ad6ec573cc87..000000000000
--- a/drivers/scsi/aacraid/linit.c
+++ b/drivers/scsi/aacraid/linit.c
@@@ -1895,10 -1790,7 +1895,14 @@@ static int aac_probe_one(struct pci_de
  	if (error)
  		goto out_deinit;
  
++<<<<<<< HEAD
 +	error = scsi_add_host(shost, &pdev->dev);
 +	if (error)
 +		goto out_deinit;
 +	scsi_scan_host(shost);
++=======
+ 	aac_scan_host(aac);
++>>>>>>> 75be67cd155d (scsi: aacraid: Remove unused rescan variable)
  
  	pci_enable_pcie_error_reporting(pdev);
  	pci_save_state(pdev);
@@@ -2184,7 -2077,7 +2188,11 @@@ static void aac_pci_resume(struct pci_d
  		if (sdev->sdev_state == SDEV_OFFLINE)
  			sdev->sdev_state = SDEV_RUNNING;
  	scsi_unblock_requests(aac->scsi_host_ptr);
++<<<<<<< HEAD
 +	scsi_scan_host(aac->scsi_host_ptr);
++=======
+ 	aac_scan_host(aac);
++>>>>>>> 75be67cd155d (scsi: aacraid: Remove unused rescan variable)
  	pci_save_state(pdev);
  
  	dev_err(&pdev->dev, "aacraid: PCI error - resume\n");
diff --git a/drivers/scsi/aacraid/aachba.c b/drivers/scsi/aacraid/aachba.c
index 55940121bab1..705907351f69 100644
--- a/drivers/scsi/aacraid/aachba.c
+++ b/drivers/scsi/aacraid/aachba.c
@@ -1821,12 +1821,11 @@ static inline void aac_free_safw_ciss_luns(struct aac_dev *dev)
 /**
  *	aac_get_safw_ciss_luns()	Process topology change
  *	@dev:		aac_dev structure
- *	@rescan:	Indicates rescan
  *
  *	Execute a CISS REPORT PHYS LUNS and process the results into
  *	the current hba_map.
  */
-static int aac_get_safw_ciss_luns(struct aac_dev *dev, int rescan)
+static int aac_get_safw_ciss_luns(struct aac_dev *dev)
 {
 	int rcode = -ENOMEM;
 	int datasize;
@@ -1932,7 +1931,7 @@ static inline void aac_free_safw_all_identify_resp(struct aac_dev *dev,
 	}
 }
 
-static int aac_get_safw_attr_all_targets(struct aac_dev *dev, int rescan)
+static int aac_get_safw_attr_all_targets(struct aac_dev *dev)
 {
 	int i;
 	int rcode = 0;
@@ -1972,7 +1971,7 @@ free_identify_resp:
  *
  *	Update our hba map with the information gathered from the FW
  */
-static void aac_set_safw_attr_all_targets(struct aac_dev *dev, int rescan)
+static void aac_set_safw_attr_all_targets(struct aac_dev *dev)
 {
 	/* ok and extended reporting */
 	u32 lun_count, nexus;
@@ -2018,7 +2017,7 @@ update_devtype:
 	}
 }
 
-static int aac_setup_safw_targets(struct aac_dev *dev, int rescan)
+static int aac_setup_safw_targets(struct aac_dev *dev)
 {
 	int rcode = 0;
 
@@ -2026,15 +2025,15 @@ static int aac_setup_safw_targets(struct aac_dev *dev, int rescan)
 	if (unlikely(rcode < 0))
 		goto out;
 
-	rcode = aac_get_safw_ciss_luns(dev, rescan);
+	rcode = aac_get_safw_ciss_luns(dev);
 	if (unlikely(rcode < 0))
 		goto out;
 
-	rcode = aac_get_safw_attr_all_targets(dev, rescan);
+	rcode = aac_get_safw_attr_all_targets(dev);
 	if (unlikely(rcode < 0))
 		goto free_ciss_luns;
 
-	aac_set_safw_attr_all_targets(dev, rescan);
+	aac_set_safw_attr_all_targets(dev);
 
 	aac_free_safw_all_identify_resp(dev, -1);
 free_ciss_luns:
@@ -2043,9 +2042,9 @@ out:
 	return rcode;
 }
 
-int aac_setup_safw_adapter(struct aac_dev *dev, int rescan)
+int aac_setup_safw_adapter(struct aac_dev *dev)
 {
-	return aac_setup_safw_targets(dev, rescan);
+	return aac_setup_safw_targets(dev);
 }
 
 int aac_get_adapter_info(struct aac_dev* dev)
* Unmerged path drivers/scsi/aacraid/aacraid.h
* Unmerged path drivers/scsi/aacraid/commsup.c
* Unmerged path drivers/scsi/aacraid/linit.c
