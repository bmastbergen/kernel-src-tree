perf trace beauty: Introduce syscall arg beautifier for long integers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 5dde91edbf6776daba0981c5bc47f1240427e05c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/5dde91ed.failed

Will be used in the fcntl arg beautifier, that nowadays formats as '%ld'
because there is no explicit arg beautifier attached, but as we will
have to first decide what beautifier to use (i.e. it may be a pointer,
etc) then we need to have this exported as a separate beautifier to be
called from there.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-d7bfs3m8m70j3zckeam0kk5d@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 5dde91edbf6776daba0981c5bc47f1240427e05c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
#	tools/perf/trace/beauty/beauty.h
diff --cc tools/perf/builtin-trace.c
index e5f94773ef13,a323736043e1..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -404,7 -402,16 +404,20 @@@ static size_t syscall_arg__scnprintf_in
  	return scnprintf(bf, size, "%d", arg->val);
  }
  
++<<<<<<< HEAD
 +#define SCA_INT syscall_arg__scnprintf_int
++=======
+ size_t syscall_arg__scnprintf_long(char *bf, size_t size, struct syscall_arg *arg)
+ {
+ 	return scnprintf(bf, size, "%ld", arg->val);
+ }
+ 
+ static const char *bpf_cmd[] = {
+ 	"MAP_CREATE", "MAP_LOOKUP_ELEM", "MAP_UPDATE_ELEM", "MAP_DELETE_ELEM",
+ 	"MAP_GET_NEXT_KEY", "PROG_LOAD",
+ };
+ static DEFINE_STRARRAY(bpf_cmd);
++>>>>>>> 5dde91edbf67 (perf trace beauty: Introduce syscall arg beautifier for long integers)
  
  static const char *epoll_ctl_ops[] = { "ADD", "DEL", "MOD", };
  static DEFINE_STRARRAY_OFFSET(epoll_ctl_ops, 1);
diff --cc tools/perf/trace/beauty/beauty.h
index 805d6221444a,61aec19e55ec..000000000000
--- a/tools/perf/trace/beauty/beauty.h
+++ b/tools/perf/trace/beauty/beauty.h
@@@ -31,6 -31,18 +31,21 @@@ unsigned long syscall_arg__val(struct s
  size_t syscall_arg__scnprintf_strarrays(char *bf, size_t size, struct syscall_arg *arg);
  #define SCA_STRARRAYS syscall_arg__scnprintf_strarrays
  
++<<<<<<< HEAD
++=======
+ size_t syscall_arg__scnprintf_hex(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_HEX syscall_arg__scnprintf_hex
+ 
+ size_t syscall_arg__scnprintf_int(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_INT syscall_arg__scnprintf_int
+ 
+ size_t syscall_arg__scnprintf_long(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_LONG syscall_arg__scnprintf_long
+ 
+ size_t syscall_arg__scnprintf_fcntl_cmd(char *bf, size_t size, struct syscall_arg *arg);
+ #define SCA_FCNTL_CMD syscall_arg__scnprintf_fcntl_cmd
+ 
++>>>>>>> 5dde91edbf67 (perf trace beauty: Introduce syscall arg beautifier for long integers)
  size_t syscall_arg__scnprintf_statx_flags(char *bf, size_t size, struct syscall_arg *arg);
  #define SCA_STATX_FLAGS syscall_arg__scnprintf_statx_flags
  
* Unmerged path tools/perf/builtin-trace.c
* Unmerged path tools/perf/trace/beauty/beauty.h
