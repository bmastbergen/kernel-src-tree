perf/x86/intel: Record branch type

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jin Yao <yao.jin@linux.intel.com>
commit d5c7f9dc58edcfb6b45f557bb0023173a0dabde6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d5c7f9dc.failed

Perf already has support for disassembling the branch instruction
and using the branch type for filtering. The patch just records
the branch type in perf_branch_entry.

Before recording, the patch converts the x86 branch type to
common branch type.

Change log:

v10: Set the branch_map array to be static. The previous version
     has it on stack then makes the compiler to create it every
     time when the function gets called.

v9: Use __ffs() to find first bit in type in common_branch_type().
    It lets the code be clear.

v8: Change PERF_BR_NONE to PERF_BR_UNKNOWN.

v7: Just convert following x86 branch types to common branch types.

X86_BR_CALL      -> PERF_BR_CALL
X86_BR_RET       -> PERF_BR_RET
X86_BR_JCC       -> PERF_BR_COND
X86_BR_JMP       -> PERF_BR_UNCOND
X86_BR_IND_CALL  -> PERF_BR_IND_CALL
X86_BR_ZERO_CALL -> PERF_BR_CALL
X86_BR_IND_JMP   -> PERF_BR_IND
X86_BR_SYSCALL   -> PERF_BR_SYSCALL
X86_BR_SYSRET    -> PERF_BR_SYSRET

Others are set to PERF_BR_NONE

v6: Not changed.

v5: Just fix the merge error. No other update.

v4: Comparing to previous version, the major changes are:

1. Uses a lookup table to convert x86 branch type to common branch
   type.

2. Move the JCC forward/JCC backward and cross page computing to
   user space.

3. Initialize branch type to 0 in intel_pmu_lbr_read_32 and
   intel_pmu_lbr_read_64

	Signed-off-by: Yao Jin <yao.jin@linux.intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Acked-by: Peter Zijlstra <peterz@infradead.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Kan Liang <kan.liang@intel.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
Link: http://lkml.kernel.org/r/1500379995-6449-3-git-send-email-yao.jin@linux.intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d5c7f9dc58edcfb6b45f557bb0023173a0dabde6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/intel/lbr.c
diff --cc arch/x86/events/intel/lbr.c
index 44d0e234a224,0edda489cf36..000000000000
--- a/arch/x86/events/intel/lbr.c
+++ b/arch/x86/events/intel/lbr.c
@@@ -577,6 -676,12 +582,15 @@@ static int intel_pmu_setup_sw_lbr_filte
  	if (br_type & PERF_SAMPLE_BRANCH_IND_JUMP)
  		mask |= X86_BR_IND_JMP;
  
++<<<<<<< HEAD
++=======
+ 	if (br_type & PERF_SAMPLE_BRANCH_CALL)
+ 		mask |= X86_BR_CALL | X86_BR_ZERO_CALL;
+ 
+ 	if (br_type & PERF_SAMPLE_BRANCH_TYPE_SAVE)
+ 		mask |= X86_BR_TYPE_SAVE;
+ 
++>>>>>>> d5c7f9dc58ed (perf/x86/intel: Record branch type)
  	/*
  	 * stash actual user request into reg, it may
  	 * be used by fixup code for some CPU
* Unmerged path arch/x86/events/intel/lbr.c
