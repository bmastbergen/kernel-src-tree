ceph: make lock_to_ceph_filelock() static

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit c6db84723363790160a89dee4554ad2f0687a0c5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/c6db8472.failed

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Reviewed-by: Jeff Layton <jlayton@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit c6db84723363790160a89dee4554ad2f0687a0c5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/locks.c
diff --cc fs/ceph/locks.c
index 323c0e1c2fe0,2927f3bc2fc9..000000000000
--- a/fs/ceph/locks.c
+++ b/fs/ceph/locks.c
@@@ -413,37 -447,3 +444,40 @@@ int ceph_locks_to_pagelist(struct ceph_
  out_fail:
  	return err;
  }
++<<<<<<< HEAD
 +
 +/*
 + * Given a pointer to a lock, convert it to a ceph filelock
 + */
 +int lock_to_ceph_filelock(struct file_lock *lock,
 +			  struct ceph_filelock *cephlock)
 +{
 +	int err = 0;
 +	cephlock->start = cpu_to_le64(lock->fl_start);
 +	cephlock->length = cpu_to_le64(lock->fl_end - lock->fl_start + 1);
 +	cephlock->client = cpu_to_le64(0);
 +	cephlock->pid = cpu_to_le64((u64)lock->fl_pid);
 +	if (lock->fl_flags & FL_POSIX)
 +		cephlock->owner = cpu_to_le64(secure_addr(lock->fl_owner));
 +	else
 +		cephlock->owner = cpu_to_le64(secure_addr(lock->fl_file));
 +
 +	switch (lock->fl_type) {
 +	case F_RDLCK:
 +		cephlock->type = CEPH_LOCK_SHARED;
 +		break;
 +	case F_WRLCK:
 +		cephlock->type = CEPH_LOCK_EXCL;
 +		break;
 +	case F_UNLCK:
 +		cephlock->type = CEPH_LOCK_UNLOCK;
 +		break;
 +	default:
 +		dout("Have unknown lock type %d", lock->fl_type);
 +		err = -EINVAL;
 +	}
 +
 +	return err;
 +}
++=======
++>>>>>>> c6db84723363 (ceph: make lock_to_ceph_filelock() static)
* Unmerged path fs/ceph/locks.c
diff --git a/fs/ceph/super.h b/fs/ceph/super.h
index 3b33c0f8cedc..6c298485560b 100644
--- a/fs/ceph/super.h
+++ b/fs/ceph/super.h
@@ -1014,7 +1014,6 @@ extern int ceph_encode_locks_to_buffer(struct inode *inode,
 extern int ceph_locks_to_pagelist(struct ceph_filelock *flocks,
 				  struct ceph_pagelist *pagelist,
 				  int num_fcntl_locks, int num_flock_locks);
-extern int lock_to_ceph_filelock(struct file_lock *fl, struct ceph_filelock *c);
 
 /* debugfs.c */
 extern int ceph_fs_debugfs_init(struct ceph_fs_client *client);
