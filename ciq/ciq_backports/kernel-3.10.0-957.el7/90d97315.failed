nfp: bpf: Convert ndo_setup_tc offloads to block callbacks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jiri Pirko <jiri@mellanox.com>
commit 90d97315b3e774450f06c035903fed246781fe35
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/90d97315.failed

Benefit from the newly introduced block callback infrastructure and
convert ndo_setup_tc calls for bpf offloads to block callbacks.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 90d97315b3e774450f06c035903fed246781fe35)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/bpf/main.c
diff --cc drivers/net/ethernet/netronome/nfp/bpf/main.c
index 4ca14182b178,64f97b3f8949..000000000000
--- a/drivers/net/ethernet/netronome/nfp/bpf/main.c
+++ b/drivers/net/ethernet/netronome/nfp/bpf/main.c
@@@ -117,23 -158,14 +158,34 @@@ static int nfp_bpf_setup_tc_block(struc
  static int nfp_bpf_setup_tc(struct nfp_app *app, struct net_device *netdev,
  			    enum tc_setup_type type, void *type_data)
  {
++<<<<<<< HEAD
 +#if 0 /* Not in RHEL7 */
 +	struct nfp_net *nn = netdev_priv(netdev);
 +
 +	if (TC_H_MAJ(handle) != TC_H_MAJ(TC_H_INGRESS))
 +		return -EOPNOTSUPP;
 +	if (proto != htons(ETH_P_ALL))
 +		return -EOPNOTSUPP;
 +
 +	if (tc->type == TC_SETUP_CLSBPF && nfp_net_ebpf_capable(nn)) {
 +		if (!nn->dp.bpf_offload_xdp)
 +			return nfp_net_bpf_offload(nn, tc->cls_bpf);
 +		else
 +			return -EBUSY;
 +	}
 +#endif
 +
 +	return -EINVAL;
++=======
+ 	switch (type) {
+ 	case TC_SETUP_CLSBPF:
+ 		return 0; /* will be removed after conversion from ndo */
+ 	case TC_SETUP_BLOCK:
+ 		return nfp_bpf_setup_tc_block(netdev, type_data);
+ 	default:
+ 		return -EOPNOTSUPP;
+ 	}
++>>>>>>> 90d97315b3e7 (nfp: bpf: Convert ndo_setup_tc offloads to block callbacks)
  }
  
  static bool nfp_bpf_tc_busy(struct nfp_app *app, struct nfp_net *nn)
* Unmerged path drivers/net/ethernet/netronome/nfp/bpf/main.c
