nfp: flower: Convert ndo_setup_tc offloads to block callbacks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Jiri Pirko <jiri@mellanox.com>
commit 363fc53b8b5803ce43debc1e66cebaaf509fd20a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/363fc53b.failed

Benefit from the newly introduced block callback infrastructure and
convert ndo_setup_tc calls for flower offloads to block callbacks.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 363fc53b8b5803ce43debc1e66cebaaf509fd20a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/flower/offload.c
diff --cc drivers/net/ethernet/netronome/nfp/flower/offload.c
index 0e039508dc42,f8523df827a6..000000000000
--- a/drivers/net/ethernet/netronome/nfp/flower/offload.c
+++ b/drivers/net/ethernet/netronome/nfp/flower/offload.c
@@@ -466,16 -505,12 +507,27 @@@ static int nfp_flower_setup_tc_block(st
  int nfp_flower_setup_tc(struct nfp_app *app, struct net_device *netdev,
  			enum tc_setup_type type, void *type_data)
  {
++<<<<<<< HEAD
 +	struct tc_cls_flower_offload *cls_flower = type_data;
 +
 +	if (TC_H_MAJ(cls_flower->common.handle) != TC_H_MAJ(TC_H_INGRESS))
 +		return -EOPNOTSUPP;
 +
 +	if (!eth_proto_is_802_3(cls_flower->common.protocol))
 +		return -EOPNOTSUPP;
 +
 +	if (type != TC_SETUP_CLSFLOWER)
 +		return -EINVAL;
 +
 +	return nfp_flower_repr_offload(app, netdev, cls_flower);
++=======
+ 	switch (type) {
+ 	case TC_SETUP_CLSFLOWER:
+ 		return 0; /* will be removed after conversion from ndo */
+ 	case TC_SETUP_BLOCK:
+ 		return nfp_flower_setup_tc_block(netdev, type_data);
+ 	default:
+ 		return -EOPNOTSUPP;
+ 	}
++>>>>>>> 363fc53b8b58 (nfp: flower: Convert ndo_setup_tc offloads to block callbacks)
  }
* Unmerged path drivers/net/ethernet/netronome/nfp/flower/offload.c
