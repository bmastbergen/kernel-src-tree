drm/nouveau/gr/gp100-: fix attrib cb setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 7a058a900ccb010c32ca1f29f6f9728a3654a519
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/7a058a90.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 7a058a900ccb010c32ca1f29f6f9728a3654a519)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp100.c
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp102.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp100.c
index f9261b0c076c,0b3326262e12..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp100.c
@@@ -49,15 -48,17 +49,25 @@@ gp100_grctx_generate_attrib(struct gf10
  	const struct gf100_grctx_func *grctx = gr->func->grctx;
  	const u32  alpha = grctx->alpha_nr;
  	const u32 attrib = grctx->attrib_nr;
++<<<<<<< HEAD
 +	const u32 pertpc = 0x20 * (grctx->attrib_nr_max + grctx->alpha_nr_max);
 +	const u32   size = roundup(gr->tpc_total * pertpc, 0x80);
 +	const u32 access = NV_MEM_ACCESS_RW;
  	const int s = 12;
 +	const int b = mmio_vram(info, size, (1 << s), access);
++=======
++	const int s = 12;
++>>>>>>> 7a058a900ccb (drm/nouveau/gr/gp100-: fix attrib cb setup)
  	const int max_batches = 0xffff;
+ 	u32 size = grctx->alpha_nr_max * gr->tpc_total;
  	u32 ao = 0;
- 	u32 bo = ao + grctx->alpha_nr_max * gr->tpc_total;
- 	int gpc, ppc, n = 0;
+ 	u32 bo = ao + size;
+ 	int gpc, ppc, b, n = 0;
+ 
+ 	for (gpc = 0; gpc < gr->gpc_nr; gpc++)
+ 		size += grctx->attrib_nr_max * gr->ppc_nr[gpc] * gr->ppc_tpc_max;
+ 	size = ((size * 0x20) + 128) & ~127;
+ 	b = mmio_vram(info, size, (1 << s), false);
  
  	mmio_refn(info, 0x418810, 0x80000000, s, b);
  	mmio_refn(info, 0x419848, 0x10000000, s, b);
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp102.c
index 7a103d556d5b,daee17bf7d0d..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp102.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp102.c
@@@ -43,15 -43,18 +43,26 @@@ gp102_grctx_generate_attrib(struct gf10
  	const struct gf100_grctx_func *grctx = gr->func->grctx;
  	const u32  alpha = grctx->alpha_nr;
  	const u32 attrib = grctx->attrib_nr;
++<<<<<<< HEAD
 +	const u32 pertpc = 0x20 * (grctx->attrib_nr_max + grctx->alpha_nr_max);
 +	const u32   size = roundup(gr->tpc_total * pertpc, 0x80);
 +	const u32 access = NV_MEM_ACCESS_RW;
 +	const int s = 12;
 +	const int b = mmio_vram(info, size, (1 << s), access);
++=======
+ 	const u32   gfxp = grctx->gfxp_nr;
+ 	const int s = 12;
++>>>>>>> 7a058a900ccb (drm/nouveau/gr/gp100-: fix attrib cb setup)
  	const int max_batches = 0xffff;
+ 	u32 size = grctx->alpha_nr_max * gr->tpc_total;
  	u32 ao = 0;
- 	u32 bo = ao + grctx->alpha_nr_max * gr->tpc_total;
- 	int gpc, ppc, n = 0;
+ 	u32 bo = ao + size;
+ 	int gpc, ppc, b, n = 0;
+ 
+ 	for (gpc = 0; gpc < gr->gpc_nr; gpc++)
+ 		size += grctx->gfxp_nr * gr->ppc_nr[gpc] * gr->ppc_tpc_max;
+ 	size = ((size * 0x20) + 128) & ~127;
+ 	b = mmio_vram(info, size, (1 << s), false);
  
  	mmio_refn(info, 0x418810, 0x80000000, s, b);
  	mmio_refn(info, 0x419848, 0x10000000, s, b);
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgf100.h b/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgf100.h
index e7a563fa7d4b..1bc7f42d46b6 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgf100.h
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgf100.h
@@ -48,6 +48,7 @@ struct gf100_grctx_func {
 	u32 attrib_nr;
 	u32 alpha_nr_max;
 	u32 alpha_nr;
+	u32 gfxp_nr;
 	/* other patch buffer stuff */
 	void (*patch_ltc)(struct gf100_grctx *);
 	/* floorsweeping */
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp100.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp102.c
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp104.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp104.c
index 5f799c7369bb..3b85e3d326b2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp104.c
@@ -32,10 +32,11 @@ gp104_grctx = {
 	.pagepool = gp100_grctx_generate_pagepool,
 	.pagepool_size = 0x20000,
 	.attrib = gp102_grctx_generate_attrib,
-	.attrib_nr_max = 0x5d4,
+	.attrib_nr_max = 0x4b0,
 	.attrib_nr = 0x320,
 	.alpha_nr_max = 0xc00,
 	.alpha_nr = 0x800,
+	.gfxp_nr = 0xba8,
 	.sm_id = gm107_grctx_generate_sm_id,
 	.rop_mapping = gf117_grctx_generate_rop_mapping,
 	.dist_skip_table = gm200_grctx_generate_dist_skip_table,
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp107.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp107.c
index a69e824676c9..5060c5ee5ce0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp107.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/ctxgp107.c
@@ -44,6 +44,7 @@ gp107_grctx = {
 	.attrib_nr = 0x540,
 	.alpha_nr_max = 0xc00,
 	.alpha_nr = 0x800,
+	.gfxp_nr = 0xe94,
 	.sm_id = gm107_grctx_generate_sm_id,
 	.rop_mapping = gf117_grctx_generate_rop_mapping,
 	.dist_skip_table = gm200_grctx_generate_dist_skip_table,
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
index 6ca9a01b8988..34733257f3cc 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
@@ -1682,6 +1682,8 @@ gf100_gr_oneinit(struct nvkm_gr *base)
 			if (gr->ppc_tpc_min == 0 ||
 			    gr->ppc_tpc_min > gr->ppc_tpc_nr[i][j])
 				gr->ppc_tpc_min = gr->ppc_tpc_nr[i][j];
+			if (gr->ppc_tpc_max < gr->ppc_tpc_nr[i][j])
+				gr->ppc_tpc_max = gr->ppc_tpc_nr[i][j];
 		}
 	}
 
diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
index 1031f03e3a1f..d0f9799d98c2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.h
@@ -106,6 +106,7 @@ struct gf100_gr {
 	u8 ppc_tpc_mask[GPC_MAX][4];
 	u8 ppc_tpc_nr[GPC_MAX][4];
 	u8 ppc_tpc_min;
+	u8 ppc_tpc_max;
 
 	struct gf100_gr_data mmio_data[4];
 	struct gf100_gr_mmio mmio_list[4096/8];
