IB/mlx5: Move IB event processing onto a workqueue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Daniel Jurgens <danielj@mellanox.com>
commit d69a24e036596877ce08c25ab8e63a202412fd9e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/d69a24e0.failed

Because mlx5_ib_event can be called from atomic context move event
handling onto a workqueue. A mutex lock is required to get the IB device
for slave ports, so move event processing onto a work queue. When an IB
event is received, check if the mlx5_core_dev  is a slave port, if so
attempt to get the IB device it's affiliated with. If found process the
event for that device, otherwise return.

	Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
	Reviewed-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit d69a24e036596877ce08c25ab8e63a202412fd9e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index 0f4f1df8ee11,0ff6da1b885f..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -74,6 -82,24 +82,27 @@@ enum 
  	MLX5_ATOMIC_SIZE_QP_8BYTES = 1 << 3,
  };
  
++<<<<<<< HEAD
++=======
+ static struct workqueue_struct *mlx5_ib_event_wq;
+ static LIST_HEAD(mlx5_ib_unaffiliated_port_list);
+ static LIST_HEAD(mlx5_ib_dev_list);
+ /*
+  * This mutex should be held when accessing either of the above lists
+  */
+ static DEFINE_MUTEX(mlx5_ib_multiport_mutex);
+ 
+ struct mlx5_ib_dev *mlx5_ib_get_ibdev_from_mpi(struct mlx5_ib_multiport_info *mpi)
+ {
+ 	struct mlx5_ib_dev *dev;
+ 
+ 	mutex_lock(&mlx5_ib_multiport_mutex);
+ 	dev = mpi->ibdev;
+ 	mutex_unlock(&mlx5_ib_multiport_mutex);
+ 	return dev;
+ }
+ 
++>>>>>>> d69a24e03659 (IB/mlx5: Move IB event processing onto a workqueue)
  static enum rdma_link_layer
  mlx5_port_type_cap_to_rdma_ll(int port_type_cap)
  {
* Unmerged path drivers/infiniband/hw/mlx5/main.c
