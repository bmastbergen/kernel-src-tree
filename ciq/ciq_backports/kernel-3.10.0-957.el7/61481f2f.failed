mlxsw: spectrum: Support IPIP underlay VRF migration

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Petr Machata <petrm@mellanox.com>
commit 61481f2fcea9112944330b34767192d7f1696fca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/61481f2f.failed

When a bound device of a tunnel netdevice changes VRF, the loopback RIF
that backs the tunnel needs to be updated and existing encapsulating
routes need to be refreshed.

Note that several tunnels can share the same bound device, in which case
all the impacted tunnels need to be updated.

	Signed-off-by: Petr Machata <petrm@mellanox.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 61481f2fcea9112944330b34767192d7f1696fca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.h
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.h
index 0ba1fa5f8ca8,47dd7e06fd29..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
@@@ -394,11 -398,17 +394,25 @@@ int mlxsw_sp_netdevice_vrf_event(struc
  				 struct netdev_notifier_changeupper_info *info);
  bool mlxsw_sp_netdev_is_ipip_ol(const struct mlxsw_sp *mlxsw_sp,
  				const struct net_device *dev);
++<<<<<<< HEAD
 +int
 +mlxsw_sp_netdevice_ipip_ol_event(struct mlxsw_sp *mlxsw_sp,
 +				 struct net_device *l3_dev,
 +				 unsigned long event,
 +				 struct netdev_notifier_changeupper_info *info);
++=======
+ bool mlxsw_sp_netdev_is_ipip_ul(const struct mlxsw_sp *mlxsw_sp,
+ 				const struct net_device *dev);
+ int mlxsw_sp_netdevice_ipip_ol_event(struct mlxsw_sp *mlxsw_sp,
+ 				     struct net_device *l3_dev,
+ 				     unsigned long event,
+ 				     struct netdev_notifier_info *info);
+ int
+ mlxsw_sp_netdevice_ipip_ul_event(struct mlxsw_sp *mlxsw_sp,
+ 				 struct net_device *l3_dev,
+ 				 unsigned long event,
+ 				 struct netdev_notifier_info *info);
++>>>>>>> 61481f2fcea9 (mlxsw: spectrum: Support IPIP underlay VRF migration)
  void
  mlxsw_sp_port_vlan_router_leave(struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan);
  void mlxsw_sp_rif_destroy(struct mlxsw_sp_rif *rif);
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index 782f252be995,aa7b820e8408..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -1387,12 -1448,90 +1414,95 @@@ static int mlxsw_sp_netdevice_ipip_ol_v
  	return 0;
  }
  
 -static int mlxsw_sp_netdevice_ipip_ol_vrf_event(struct mlxsw_sp *mlxsw_sp,
 -						struct net_device *ol_dev,
 -						struct netlink_ext_ack *extack)
 +int
 +mlxsw_sp_netdevice_ipip_ol_event(struct mlxsw_sp *mlxsw_sp,
 +				 struct net_device *ol_dev,
 +				 unsigned long event,
 +				 struct netdev_notifier_changeupper_info *info)
  {
++<<<<<<< HEAD
++=======
+ 	struct mlxsw_sp_ipip_entry *ipip_entry =
+ 		mlxsw_sp_ipip_entry_find_by_ol_dev(mlxsw_sp, ol_dev);
+ 
+ 	if (!ipip_entry)
+ 		return 0;
+ 	return __mlxsw_sp_ipip_entry_update_tunnel(mlxsw_sp, ipip_entry,
+ 						   true, false, false, extack);
+ }
+ 
+ static int
+ mlxsw_sp_netdevice_ipip_ul_vrf_event(struct mlxsw_sp *mlxsw_sp,
+ 				     struct mlxsw_sp_ipip_entry *ipip_entry,
+ 				     struct net_device *ul_dev,
+ 				     struct netlink_ext_ack *extack)
+ {
+ 	return __mlxsw_sp_ipip_entry_update_tunnel(mlxsw_sp, ipip_entry,
+ 						   true, true, false, extack);
+ }
+ 
+ void mlxsw_sp_ipip_entry_demote_tunnel(struct mlxsw_sp *mlxsw_sp,
+ 				       struct mlxsw_sp_ipip_entry *ipip_entry)
+ {
+ 	struct net_device *ol_dev = ipip_entry->ol_dev;
+ 
+ 	if (ol_dev->flags & IFF_UP)
+ 		mlxsw_sp_ipip_entry_ol_down_event(mlxsw_sp, ipip_entry);
+ 	mlxsw_sp_ipip_entry_destroy(mlxsw_sp, ipip_entry);
+ }
+ 
+ /* The configuration where several tunnels have the same local address in the
+  * same underlay table needs special treatment in the HW. That is currently not
+  * implemented in the driver. This function finds and demotes the first tunnel
+  * with a given source address, except the one passed in in the argument
+  * `except'.
+  */
+ bool
+ mlxsw_sp_ipip_demote_tunnel_by_saddr(struct mlxsw_sp *mlxsw_sp,
+ 				     enum mlxsw_sp_l3proto ul_proto,
+ 				     union mlxsw_sp_l3addr saddr,
+ 				     u32 ul_tb_id,
+ 				     const struct mlxsw_sp_ipip_entry *except)
+ {
+ 	struct mlxsw_sp_ipip_entry *ipip_entry, *tmp;
+ 
+ 	list_for_each_entry_safe(ipip_entry, tmp, &mlxsw_sp->router->ipip_list,
+ 				 ipip_list_node) {
+ 		if (ipip_entry != except &&
+ 		    mlxsw_sp_ipip_entry_saddr_matches(mlxsw_sp, ul_proto, saddr,
+ 						      ul_tb_id, ipip_entry)) {
+ 			mlxsw_sp_ipip_entry_demote_tunnel(mlxsw_sp, ipip_entry);
+ 			return true;
+ 		}
+ 	}
+ 
+ 	return false;
+ }
+ 
+ static void mlxsw_sp_ipip_demote_tunnel_by_ul_netdev(struct mlxsw_sp *mlxsw_sp,
+ 						     struct net_device *ul_dev)
+ {
+ 	struct mlxsw_sp_ipip_entry *ipip_entry, *tmp;
+ 
+ 	list_for_each_entry_safe(ipip_entry, tmp, &mlxsw_sp->router->ipip_list,
+ 				 ipip_list_node) {
+ 		struct net_device *ipip_ul_dev =
+ 			__mlxsw_sp_ipip_netdev_ul_dev_get(ipip_entry->ol_dev);
+ 
+ 		if (ipip_ul_dev == ul_dev)
+ 			mlxsw_sp_ipip_entry_demote_tunnel(mlxsw_sp, ipip_entry);
+ 	}
+ }
+ 
+ int mlxsw_sp_netdevice_ipip_ol_event(struct mlxsw_sp *mlxsw_sp,
+ 				     struct net_device *ol_dev,
+ 				     unsigned long event,
+ 				     struct netdev_notifier_info *info)
+ {
+ 	struct netdev_notifier_changeupper_info *chup;
+ 	struct netlink_ext_ack *extack;
+ 
++>>>>>>> 61481f2fcea9 (mlxsw: spectrum: Support IPIP underlay VRF migration)
  	switch (event) {
  	case NETDEV_REGISTER:
  		return mlxsw_sp_netdevice_ipip_ol_reg_event(mlxsw_sp, ol_dev);
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index c2030bc7d212..9fc242d2174f 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@ -4523,6 +4523,9 @@ static int mlxsw_sp_netdevice_event(struct notifier_block *nb,
 	if (mlxsw_sp_netdev_is_ipip_ol(mlxsw_sp, dev))
 		err = mlxsw_sp_netdevice_ipip_ol_event(mlxsw_sp, dev,
 						       event, ptr);
+	else if (mlxsw_sp_netdev_is_ipip_ul(mlxsw_sp, dev))
+		err = mlxsw_sp_netdevice_ipip_ul_event(mlxsw_sp, dev,
+						       event, ptr);
 	else if (event == NETDEV_CHANGEADDR || event == NETDEV_CHANGEMTU)
 		err = mlxsw_sp_netdevice_router_port_event(dev);
 	else if (mlxsw_sp_is_vrf_event(event, ptr))
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.h
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
