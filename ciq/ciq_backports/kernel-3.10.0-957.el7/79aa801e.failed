PCI: hv: Use effective affinity mask

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [pci] hv: Use effective affinity mask (Vitaly Kuznetsov) [1555239]
Rebuild_FUZZ: 92.54%
commit-author Dexuan Cui <decui@microsoft.com>
commit 79aa801e899417a56863d6713f76c4e108856000
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/79aa801e.failed

The effective_affinity_mask is always set when an interrupt is assigned in
__assign_irq_vector() -> apic->cpu_mask_to_apicid(), e.g. for struct apic
apic_physflat: -> default_cpu_mask_to_apicid() ->
irq_data_update_effective_affinity(), but it looks d->common->affinity
remains all-1's before the user space or the kernel changes it later.

In the early allocation/initialization phase of an IRQ, we should use the
effective_affinity_mask, otherwise Hyper-V may not deliver the interrupt to
the expected CPU.  Without the patch, if we assign 7 Mellanox ConnectX-3
VFs to a 32-vCPU VM, one of the VFs may fail to receive interrupts.

	Tested-by: Adrian Suhov <v-adsuho@microsoft.com>
	Signed-off-by: Dexuan Cui <decui@microsoft.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Jake Oshins <jakeo@microsoft.com>
	Cc: stable@vger.kernel.org
	Cc: Jork Loeser <jloeser@microsoft.com>
	Cc: Stephen Hemminger <sthemmin@microsoft.com>
	Cc: K. Y. Srinivasan <kys@microsoft.com>
(cherry picked from commit 79aa801e899417a56863d6713f76c4e108856000)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci-hyperv.c
diff --cc drivers/pci/pci-hyperv.c
index 7759b307810c,04dac6a42c9f..000000000000
--- a/drivers/pci/pci-hyperv.c
+++ b/drivers/pci/pci-hyperv.c
@@@ -800,13 -876,11 +800,18 @@@ static int hv_set_affinity(struct irq_d
  	unsigned long flags;
  	u32 var_size = 0;
  	int cpu_vmbus;
 -	int cpu;
  	u64 res;
  
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
 +	ret = __ioapic_set_affinity(data, dest, &dest_id);
 +	if (ret)
 +		return ret;
 +
 +	pdev = msi_desc_to_pci_dev(data->msi_desc);
++=======
+ 	dest = irq_data_get_effective_affinity_mask(data);
+ 	pdev = msi_desc_to_pci_dev(msi_desc);
++>>>>>>> 79aa801e8994 (PCI: hv: Use effective affinity mask):drivers/pci/host/pci-hyperv.c
  	pbus = pdev->bus;
  	hbus = container_of(pbus->sysdata, struct hv_pcibus_device, sysdata);
  
@@@ -995,6 -1041,8 +1000,11 @@@ static void hv_compose_msi_msg(struct p
  	struct hv_pcibus_device *hbus;
  	struct hv_pci_dev *hpdev;
  	struct pci_bus *pbus;
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
++=======
+ 	struct pci_dev *pdev;
+ 	struct cpumask *dest;
++>>>>>>> 79aa801e8994 (PCI: hv: Use effective affinity mask):drivers/pci/host/pci-hyperv.c
  	struct compose_comp_ctxt comp;
  	struct tran_int_desc *int_desc;
  	struct {
@@@ -1007,6 -1055,9 +1017,11 @@@
  	u32 size;
  	int ret;
  
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
++=======
+ 	pdev = msi_desc_to_pci_dev(irq_data_get_msi_desc(data));
+ 	dest = irq_data_get_effective_affinity_mask(data);
++>>>>>>> 79aa801e8994 (PCI: hv: Use effective affinity mask):drivers/pci/host/pci-hyperv.c
  	pbus = pdev->bus;
  	hbus = container_of(pbus->sysdata, struct hv_pcibus_device, sysdata);
  	hpdev = get_pcichild_wslot(hbus, devfn_to_wslot(pdev->devfn));
@@@ -1025,16 -1083,16 +1040,28 @@@
  	switch (pci_protocol_version) {
  	case PCI_PROTOCOL_VERSION_1_1:
  		size = hv_compose_msi_req_v1(&ctxt.int_pkts.v1,
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
 +					     cfg->domain,
 +					     hpdev->desc.win_slot.slot,
 +					     cfg->vector);
++=======
+ 					dest,
+ 					hpdev->desc.win_slot.slot,
+ 					cfg->vector);
++>>>>>>> 79aa801e8994 (PCI: hv: Use effective affinity mask):drivers/pci/host/pci-hyperv.c
  		break;
  
  	case PCI_PROTOCOL_VERSION_1_2:
  		size = hv_compose_msi_req_v2(&ctxt.int_pkts.v2,
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
 +					     cfg->domain,
 +					     hpdev->desc.win_slot.slot,
 +					     cfg->vector);
++=======
+ 					dest,
+ 					hpdev->desc.win_slot.slot,
+ 					cfg->vector);
++>>>>>>> 79aa801e8994 (PCI: hv: Use effective affinity mask):drivers/pci/host/pci-hyperv.c
  		break;
  
  	default:
* Unmerged path drivers/pci/pci-hyperv.c
