include/linux/mmdebug.h: add VM_WARN which maps to WARN()

jira LE-1907
cve CVE-2018-7740
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
commit a54f9aebaa9f0ea2ce6b01f12b65062fb2e74e6c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/a54f9aeb.failed

This enables us to do VM_WARN(condition, "warn message");

Link: http://lkml.kernel.org/r/1464692688-6612-1-git-send-email-aneesh.kumar@linux.vnet.ibm.com
	Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Reviewed-by: Anshuman Khandual <khandual@linux.vnet.ibm.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit a54f9aebaa9f0ea2ce6b01f12b65062fb2e74e6c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mmdebug.h
diff --cc include/linux/mmdebug.h
index 40432451101d,451a811f48f2..000000000000
--- a/include/linux/mmdebug.h
+++ b/include/linux/mmdebug.h
@@@ -9,15 -15,40 +9,25 @@@ extern void dump_page_badflags(struct p
  
  #ifdef CONFIG_DEBUG_VM
  #define VM_BUG_ON(cond) BUG_ON(cond)
 -#define VM_BUG_ON_PAGE(cond, page)					\
 -	do {								\
 -		if (unlikely(cond)) {					\
 -			dump_page(page, "VM_BUG_ON_PAGE(" __stringify(cond)")");\
 -			BUG();						\
 -		}							\
 -	} while (0)
 -#define VM_BUG_ON_VMA(cond, vma)					\
 -	do {								\
 -		if (unlikely(cond)) {					\
 -			dump_vma(vma);					\
 -			BUG();						\
 -		}							\
 -	} while (0)
 -#define VM_BUG_ON_MM(cond, mm)						\
 -	do {								\
 -		if (unlikely(cond)) {					\
 -			dump_mm(mm);					\
 -			BUG();						\
 -		}							\
 -	} while (0)
 +#define VM_BUG_ON_PAGE(cond, page) \
 +	do { if (unlikely(cond)) { dump_page(page, NULL); BUG(); } } while (0)
  #define VM_WARN_ON(cond) WARN_ON(cond)
  #define VM_WARN_ON_ONCE(cond) WARN_ON_ONCE(cond)
++<<<<<<< HEAD
++=======
+ #define VM_WARN_ONCE(cond, format...) WARN_ONCE(cond, format)
+ #define VM_WARN(cond, format...) WARN(cond, format)
++>>>>>>> a54f9aebaa9f (include/linux/mmdebug.h: add VM_WARN which maps to WARN())
  #else
  #define VM_BUG_ON(cond) BUILD_BUG_ON_INVALID(cond)
  #define VM_BUG_ON_PAGE(cond, page) VM_BUG_ON(cond)
 -#define VM_BUG_ON_VMA(cond, vma) VM_BUG_ON(cond)
 -#define VM_BUG_ON_MM(cond, mm) VM_BUG_ON(cond)
  #define VM_WARN_ON(cond) BUILD_BUG_ON_INVALID(cond)
  #define VM_WARN_ON_ONCE(cond) BUILD_BUG_ON_INVALID(cond)
++<<<<<<< HEAD
++=======
+ #define VM_WARN_ONCE(cond, format...) BUILD_BUG_ON_INVALID(cond)
+ #define VM_WARN(cond, format...) BUILD_BUG_ON_INVALID(cond)
++>>>>>>> a54f9aebaa9f (include/linux/mmdebug.h: add VM_WARN which maps to WARN())
  #endif
  
  #ifdef CONFIG_DEBUG_VIRTUAL
* Unmerged path include/linux/mmdebug.h
