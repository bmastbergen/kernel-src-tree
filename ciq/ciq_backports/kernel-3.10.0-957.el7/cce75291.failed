nvmet_fc: fix better length checking

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author James Smart <jsmart2021@gmail.com>
commit cce75291ffd82eb5bac56b051f46f89e8c0d2918
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/cce75291.failed

Reorganize nvmet_fc_handle_fcp_rqst() so that the nvmet req.transfer_len
field is set after the call nvmet_req_init(). An update to nvmet now
has nvmet_req_init() clearing the field, thus the fc transport was losing
the value.

	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit cce75291ffd82eb5bac56b051f46f89e8c0d2918)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/fc.c
diff --cc drivers/nvme/target/fc.c
index e91b8be3f190,664d3013f68f..000000000000
--- a/drivers/nvme/target/fc.c
+++ b/drivers/nvme/target/fc.c
@@@ -2160,7 -2158,6 +2161,10 @@@ nvmet_fc_handle_fcp_rqst(struct nvmet_f
  
  	fod->fcpreq->done = nvmet_fc_xmt_fcp_op_done;
  
++<<<<<<< HEAD
 +	fod->total_length = be32_to_cpu(cmdiu->data_len);
++=======
++>>>>>>> cce75291ffd8 (nvmet_fc: fix better length checking)
  	if (cmdiu->flags & FCNVME_CMD_FLAGS_WRITE) {
  		fod->io_dir = NVMET_FCP_WRITE;
  		if (!nvme_is_write(&cmdiu->sqe))
@@@ -2171,7 -2168,7 +2175,11 @@@
  			goto transport_error;
  	} else {
  		fod->io_dir = NVMET_FCP_NODATA;
++<<<<<<< HEAD
 +		if (fod->total_length)
++=======
+ 		if (xfrlen)
++>>>>>>> cce75291ffd8 (nvmet_fc: fix better length checking)
  			goto transport_error;
  	}
  
* Unmerged path drivers/nvme/target/fc.c
