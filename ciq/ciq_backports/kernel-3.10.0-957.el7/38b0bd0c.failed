dm raid: fix reshape race on small devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Heinz Mauelshagen <heinzm@redhat.com>
commit 38b0bd0cda07d34ad6f145fce675ead74739c44e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/38b0bd0c.failed

Loading a new mapping table, the dm-raid target's constructor
retrieves the volatile reshaping state from the raid superblocks.

When the new table is activated in a following resume, the actual
reshape position is retrieved.  The reshape driven by the previous
mapping can already have finished on small and/or fast devices thus
updating raid superblocks about the new raid layout.

This causes the actual array state (e.g. stripe size reshape finished)
to be inconsistent with the one in the new mapping, causing hangs with
left behind devices.

This race does not occur with usual raid device sizes but with small
ones (e.g. those created by the lvm2 test suite).

Fix by no longer transferring stale/inconsistent raid_set state during
preresume.

	Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 38b0bd0cda07d34ad6f145fce675ead74739c44e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-raid.c
diff --cc drivers/md/dm-raid.c
index fede843e1124,d8406e0b4540..000000000000
--- a/drivers/md/dm-raid.c
+++ b/drivers/md/dm-raid.c
@@@ -29,9 -29,6 +29,12 @@@
   */
  #define	MIN_RAID456_JOURNAL_SPACE (4*2048)
  
++<<<<<<< HEAD
 +/* Global list of all raid sets */
 +LIST_HEAD(raid_sets);
 +
++=======
++>>>>>>> 38b0bd0cda07 (dm raid: fix reshape race on small devices)
  static bool devices_handle_discard_safely = false;
  
  /*
* Unmerged path drivers/md/dm-raid.c
