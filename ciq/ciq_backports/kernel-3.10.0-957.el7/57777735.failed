qeth: repair SBAL elements calculation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
commit-author Ursula Braun <ubraun@linux.vnet.ibm.com>
commit 577777359e1f47d0cb7dfc23aac0da867a14af00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/57777735.failed

When sending skbs, qeth determines the number of qdio SBAL elements
required. If qeth sends a fragmented skb, the SBAL element number
calculation is wrong, because the fragmented data part is added
twice in qeth_l3_tso_elements(). This patch makes sure fragmented
data is handled in qeth_elements_for_frags() only, while
qeth_l3_tso_elements() starts calculation of qdio SBAL elements just
with the linear data part of the skb.

	Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
	Reviewed-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 577777359e1f47d0cb7dfc23aac0da867a14af00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_l3_main.c
diff --cc drivers/s390/net/qeth_l3_main.c
index cf332ead7046,7c8c68c26540..000000000000
--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@@ -2798,8 -2797,8 +2798,13 @@@ static inline int qeth_l3_tso_elements(
  {
  	unsigned long tcpd = (unsigned long)tcp_hdr(skb) +
  		tcp_hdr(skb)->doff * 4;
++<<<<<<< HEAD
 +	int tcpd_len = skb->len - (tcpd - (unsigned long)skb->data);
 +	int elements = PFN_UP(tcpd + tcpd_len) - PFN_DOWN(tcpd);
++=======
+ 	int tcpd_len = skb_headlen(skb) - (tcpd - (unsigned long)skb->data);
+ 	int elements = PFN_UP(tcpd + tcpd_len - 1) - PFN_DOWN(tcpd);
++>>>>>>> 577777359e1f (qeth: repair SBAL elements calculation)
  
  	elements += qeth_get_elements_for_frags(skb);
  
* Unmerged path drivers/s390/net/qeth_l3_main.c
