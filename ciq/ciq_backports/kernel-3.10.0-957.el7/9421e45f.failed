uio: use request_threaded_irq instead

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-957.el7
Rebuild_CHGLOG: - [uio] use request_threaded_irq instead (Xiubo Li) [1560418]
Rebuild_FUZZ: 92.75%
commit-author Xiubo Li <xiubli@redhat.com>
commit 9421e45f5ff3d558cf8b75a8cc0824530caf3453
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-957.el7/9421e45f.failed

Prepraing for changing to use mutex lock.

	Signed-off-by: Xiubo Li <xiubli@redhat.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 9421e45f5ff3d558cf8b75a8cc0824530caf3453)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/uio/uio.c
diff --cc drivers/uio/uio.c
index 6a5a7703969f,b4b2ae1e0473..000000000000
--- a/drivers/uio/uio.c
+++ b/drivers/uio/uio.c
@@@ -853,8 -894,17 +853,22 @@@ int __uio_register_device(struct modul
  	info->uio_dev = idev;
  
  	if (info->irq && (info->irq != UIO_IRQ_CUSTOM)) {
++<<<<<<< HEAD
 +		ret = request_irq(info->irq, uio_interrupt,
 +				  info->irq_flags, info->name, idev);
++=======
+ 		/*
+ 		 * Note that we deliberately don't use devm_request_irq
+ 		 * here. The parent module can unregister the UIO device
+ 		 * and call pci_disable_msi, which requires that this
+ 		 * irq has been freed. However, the device may have open
+ 		 * FDs at the time of unregister and therefore may not be
+ 		 * freed until they are released.
+ 		 */
+ 		ret = request_threaded_irq(info->irq, NULL, uio_interrupt,
+ 					   info->irq_flags, info->name, idev);
+ 
++>>>>>>> 9421e45f5ff3 (uio: use request_threaded_irq instead)
  		if (ret)
  			goto err_request_irq;
  	}
* Unmerged path drivers/uio/uio.c
