pinctrl: mlxbf3: Remove gpio_disable_free()

jira LE-1907
Rebuild_History Non-Buildable kernel-5.14.0-427.16.1.el9_4
commit-author Asmaa Mnebhi <asmaa@nvidia.com>
commit 69657e60b8a7faf83b583c658ec7ce1f5ece9eb3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-427.16.1.el9_4/69657e60.failed

Remove support for gpio_disable_free() because it is called when the libgpiod
command "gpioset" is invoked. This gives the GPIO control back to hardware which
cancels out the effort to set the GPIO value.

Reminder of the code flow to change a GPIO value from software:
1) All GPIOs are controlled by hardware by default
2) To change the GPIO value, enable software control via a mux.
3) Once software has control over the GPIO pin, the gpio-mlxbf3 driver
   will be able to change the direction and value of the GPIO.

When the user runs "gpioset gpiochip0 0=0" for example, the gpio
pin value should change from 1 to 0. In this case, mlxbf3_gpio_request_enable()
is called via gpiochip_generic_request(). The latter switches GPIO control from
hardware to software. Then the GPIO value is changed from 1 to 0. However,
gpio_disable_free() is also called which changes control back to hardware
which changes the GPIO value back to 1.

Fixes: d11f932808dc ("pinctrl: mlxbf3: Add pinctrl driver support")
	Signed-off-by: Asmaa Mnebhi <asmaa@nvidia.com>
	Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
Link: https://lore.kernel.org/r/20230818164314.8505-2-asmaa@nvidia.com
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit 69657e60b8a7faf83b583c658ec7ce1f5ece9eb3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pinctrl/pinctrl-mlxbf3.c
* Unmerged path drivers/pinctrl/pinctrl-mlxbf3.c
* Unmerged path drivers/pinctrl/pinctrl-mlxbf3.c
