x86/sev-es: Set x86_virt_bits to the correct value straight away, instead of a two-phase approach

jira LE-1907
Rebuild_History Non-Buildable kernel-5.14.0-427.16.1.el9_4
commit-author Adam Dunlap <acdunlap@google.com>
commit fbf6449f84bf5e4ad09f2c09ee70ed7d629b5ff6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-427.16.1.el9_4/fbf6449f.failed

Instead of setting x86_virt_bits to a possibly-correct value and then
correcting it later, do all the necessary checks before setting it.

At this point, the #VC handler references boot_cpu_data.x86_virt_bits,
and in the previous version, it would be triggered by the CPUIDs between
the point at which it is set to 48 and when it is set to the correct
value.

	Suggested-by: Dave Hansen <dave.hansen@linux.intel.com>
	Signed-off-by: Adam Dunlap <acdunlap@google.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Tested-by: Jacob Xu <jacobhxu@google.com>
Link: https://lore.kernel.org/r/20230912002703.3924521-3-acdunlap@google.com
(cherry picked from commit fbf6449f84bf5e4ad09f2c09ee70ed7d629b5ff6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/common.c
diff --cc arch/x86/kernel/cpu/common.c
index ef417ca60542,8d7063e4f63c..000000000000
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@@ -1621,8 -1607,6 +1627,11 @@@ static void __init early_identify_cpu(s
  		cpu_detect(c);
  		get_cpu_vendor(c);
  		get_cpu_cap(c);
++<<<<<<< HEAD
 +		get_model_name(c); /* RHEL: get model name for unsupported check */
 +		get_cpu_address_sizes(c);
++=======
++>>>>>>> fbf6449f84bf (x86/sev-es: Set x86_virt_bits to the correct value straight away, instead of a two-phase approach)
  		setup_force_cpu_cap(X86_FEATURE_CPUID);
  		cpu_parse_early_param();
  
* Unmerged path arch/x86/kernel/cpu/common.c
