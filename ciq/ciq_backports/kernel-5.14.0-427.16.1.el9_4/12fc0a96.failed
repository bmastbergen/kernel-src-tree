nfs: Remove writepage

jira LE-1907
Rebuild_History Non-Buildable kernel-5.14.0-427.16.1.el9_4
commit-author Matthew Wilcox (Oracle) <willy@infradead.org>
commit 12fc0a963128b54b82e98b9909f463e784b90b07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-427.16.1.el9_4/12fc0a96.failed

NFS already has writepages and migrate_folio, so it does not need to
implement writepage.  The writepage operation is deprecated as it leads
to worse performance under high memory pressure due to folios being
written out in LRU order rather than sequentially within a file.

	Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 12fc0a963128b54b82e98b9909f463e784b90b07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/write.c
diff --cc fs/nfs/write.c
index 0b9f3471fc40,0b4fdad511d9..000000000000
--- a/fs/nfs/write.c
+++ b/fs/nfs/write.c
@@@ -676,21 -680,9 +676,25 @@@ static int nfs_writepage_locked(struct 
  	return err;
  }
  
++<<<<<<< HEAD
 +int nfs_writepage(struct page *page, struct writeback_control *wbc)
 +{
 +	struct folio *folio = page_folio(page);
 +	int ret;
 +
 +	ret = nfs_writepage_locked(folio, wbc);
 +	if (ret != AOP_WRITEPAGE_ACTIVATE)
 +		unlock_page(page);
 +	return ret;
 +}
 +
 +static int nfs_writepages_callback(struct page *page,
++=======
+ static int nfs_writepages_callback(struct folio *folio,
++>>>>>>> 12fc0a963128 (nfs: Remove writepage)
  				   struct writeback_control *wbc, void *data)
  {
 +	struct folio *folio = page_folio(page);
  	int ret;
  
  	ret = nfs_do_writepage(folio, wbc, data);
diff --git a/fs/nfs/file.c b/fs/nfs/file.c
index 8fa04a3624f1..6ecd1ad959d4 100644
--- a/fs/nfs/file.c
+++ b/fs/nfs/file.c
@@ -544,7 +544,6 @@ const struct address_space_operations nfs_file_aops = {
 	.read_folio = nfs_read_folio,
 	.readahead = nfs_readahead,
 	.dirty_folio = filemap_dirty_folio,
-	.writepage = nfs_writepage,
 	.writepages = nfs_writepages,
 	.write_begin = nfs_write_begin,
 	.write_end = nfs_write_end,
* Unmerged path fs/nfs/write.c
diff --git a/include/linux/nfs_fs.h b/include/linux/nfs_fs.h
index 16a55ca24348..5eb0a1739687 100644
--- a/include/linux/nfs_fs.h
+++ b/include/linux/nfs_fs.h
@@ -595,7 +595,6 @@ extern void nfs_complete_unlink(struct dentry *dentry, struct inode *);
  * linux/fs/nfs/write.c
  */
 extern int  nfs_congestion_kb;
-extern int  nfs_writepage(struct page *page, struct writeback_control *wbc);
 extern int  nfs_writepages(struct address_space *, struct writeback_control *);
 extern int  nfs_flush_incompatible(struct file *file, struct folio *folio);
 extern int  nfs_update_folio(struct file *file, struct folio *folio,
