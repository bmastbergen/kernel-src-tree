net/mlx5: SF, Rely on hw table for SF devlink port allocation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Parav Pandit <parav@nvidia.com>
commit 1d7979352f9f0d32743528fb72425f4ff29efcb9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/1d797935.failed

Supporting SF allocation is currently checked at two places:
(a) SF devlink port allocator and
(b) SF HW table handler.

Both layers are using HCA CAP to identify it using helper routine
mlx5_sf_supported() and mlx5_sf_max_functions().

Instead, rely on the HW table handler to check if SF is supported
or not.

	Signed-off-by: Parav Pandit <parav@nvidia.com>
	Reviewed-by: Vu Pham <vuhuong@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 1d7979352f9f0d32743528fb72425f4ff29efcb9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/sf/devlink.c
#	drivers/net/ethernet/mellanox/mlx5/core/sf/hw_table.c
#	drivers/net/ethernet/mellanox/mlx5/core/sf/priv.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/sf/devlink.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/sf/hw_table.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/sf/priv.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/sf/devlink.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/sf/hw_table.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/sf/priv.h
