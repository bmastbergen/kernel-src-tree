ASoC: Intel: Make atom components independent of sst-dsp

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Cezary Rojewski <cezary.rojewski@intel.com>
commit b972153d6c53a89dc92d991c466a6b4800a9c91f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/b972153d.failed

With sound/soc/intel/haswell and /baytrail gone, registers left within
sst-dsp header are atom-specific. Relocate these to atom internal header
to make atom truely independent of sound/soc/common processing code.

	Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Acked-by: Liam Girdwood <liam.r.girdwood@intel.com>
Link: https://lore.kernel.org/r/20201006064907.16277-12-cezary.rojewski@intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit b972153d6c53a89dc92d991c466a6b4800a9c91f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/intel/common/sst-dsp.h
diff --cc sound/soc/intel/common/sst-dsp.h
index d55014587415,021a36b2398a..000000000000
--- a/sound/soc/intel/common/sst-dsp.h
+++ b/sound/soc/intel/common/sst-dsp.h
@@@ -12,159 -12,6 +12,162 @@@
  #include <linux/types.h>
  #include <linux/interrupt.h>
  
++<<<<<<< HEAD
 +/* SST Device IDs  */
 +#define SST_DEV_ID_LYNX_POINT		0x33C8
 +#define SST_DEV_ID_WILDCAT_POINT	0x3438
 +#define SST_DEV_ID_BYT			0x0F28
 +
 +/* Supported SST DMA Devices */
 +#define SST_DMA_TYPE_DW		1
 +
 +/* autosuspend delay 5s*/
 +#define SST_RUNTIME_SUSPEND_DELAY	(5 * 1000)
 +
 +/* SST Shim register map
 + * The register naming can differ between products. Some products also
 + * contain extra functionality.
 + */
 +#define SST_CSR			0x00
 +#define SST_PISR		0x08
 +#define SST_PIMR		0x10
 +#define SST_ISRX		0x18
 +#define SST_ISRD		0x20
 +#define SST_IMRX		0x28
 +#define SST_IMRD		0x30
 +#define SST_IPCX		0x38 /* IPC IA -> SST */
 +#define SST_IPCD		0x40 /* IPC SST -> IA */
 +#define SST_ISRSC		0x48
 +#define SST_ISRLPESC		0x50
 +#define SST_IMRSC		0x58
 +#define SST_IMRLPESC		0x60
 +#define SST_IPCSC		0x68
 +#define SST_IPCLPESC		0x70
 +#define SST_CLKCTL		0x78
 +#define SST_CSR2		0x80
 +#define SST_LTRC		0xE0
 +#define SST_HMDC		0xE8
 +
 +#define SST_SHIM_BEGIN		SST_CSR
 +#define SST_SHIM_END		SST_HDMC
 +
 +#define SST_DBGO		0xF0
 +
 +#define SST_SHIM_SIZE		0x100
 +#define SST_PWMCTRL             0x1000
 +
 +/* SST Shim Register bits
 + * The register bit naming can differ between products. Some products also
 + * contain extra functionality.
 + */
 +
 +/* CSR / CS */
 +#define SST_CSR_RST		(0x1 << 1)
 +#define SST_CSR_SBCS0		(0x1 << 2)
 +#define SST_CSR_SBCS1		(0x1 << 3)
 +#define SST_CSR_DCS(x)		(x << 4)
 +#define SST_CSR_DCS_MASK	(0x7 << 4)
 +#define SST_CSR_STALL		(0x1 << 10)
 +#define SST_CSR_S0IOCS		(0x1 << 21)
 +#define SST_CSR_S1IOCS		(0x1 << 23)
 +#define SST_CSR_LPCS		(0x1 << 31)
 +#define SST_CSR_24MHZ_LPCS	(SST_CSR_SBCS0 | SST_CSR_SBCS1 | SST_CSR_LPCS)
 +#define SST_CSR_24MHZ_NO_LPCS	(SST_CSR_SBCS0 | SST_CSR_SBCS1)
 +#define SST_BYT_CSR_RST		(0x1 << 0)
 +#define SST_BYT_CSR_VECTOR_SEL	(0x1 << 1)
 +#define SST_BYT_CSR_STALL	(0x1 << 2)
 +#define SST_BYT_CSR_PWAITMODE	(0x1 << 3)
 +
 +/*  ISRX / ISC */
 +#define SST_ISRX_BUSY		(0x1 << 1)
 +#define SST_ISRX_DONE		(0x1 << 0)
 +#define SST_BYT_ISRX_REQUEST	(0x1 << 1)
 +
 +/*  ISRD / ISD */
 +#define SST_ISRD_BUSY		(0x1 << 1)
 +#define SST_ISRD_DONE		(0x1 << 0)
 +
 +/* IMRX / IMC */
 +#define SST_IMRX_BUSY		(0x1 << 1)
 +#define SST_IMRX_DONE		(0x1 << 0)
 +#define SST_BYT_IMRX_REQUEST	(0x1 << 1)
 +
 +/* IMRD / IMD */
 +#define SST_IMRD_DONE		(0x1 << 0)
 +#define SST_IMRD_BUSY		(0x1 << 1)
 +#define SST_IMRD_SSP0		(0x1 << 16)
 +#define SST_IMRD_DMAC0		(0x1 << 21)
 +#define SST_IMRD_DMAC1		(0x1 << 22)
 +#define SST_IMRD_DMAC		(SST_IMRD_DMAC0 | SST_IMRD_DMAC1)
 +
 +/*  IPCX / IPCC */
 +#define	SST_IPCX_DONE		(0x1 << 30)
 +#define	SST_IPCX_BUSY		(0x1 << 31)
 +#define SST_BYT_IPCX_DONE	((u64)0x1 << 62)
 +#define SST_BYT_IPCX_BUSY	((u64)0x1 << 63)
 +
 +/*  IPCD */
 +#define	SST_IPCD_DONE		(0x1 << 30)
 +#define	SST_IPCD_BUSY		(0x1 << 31)
 +#define SST_BYT_IPCD_DONE	((u64)0x1 << 62)
 +#define SST_BYT_IPCD_BUSY	((u64)0x1 << 63)
 +
 +/* CLKCTL */
 +#define SST_CLKCTL_SMOS(x)	(x << 24)
 +#define SST_CLKCTL_MASK		(3 << 24)
 +#define SST_CLKCTL_DCPLCG	(1 << 18)
 +#define SST_CLKCTL_SCOE1	(1 << 17)
 +#define SST_CLKCTL_SCOE0	(1 << 16)
 +
 +/* CSR2 / CS2 */
 +#define SST_CSR2_SDFD_SSP0	(1 << 1)
 +#define SST_CSR2_SDFD_SSP1	(1 << 2)
 +
 +/* LTRC */
 +#define SST_LTRC_VAL(x)		(x << 0)
 +
 +/* HMDC */
 +#define SST_HMDC_HDDA0(x)	(x << 0)
 +#define SST_HMDC_HDDA1(x)	(x << 7)
 +#define SST_HMDC_HDDA_E0_CH0	1
 +#define SST_HMDC_HDDA_E0_CH1	2
 +#define SST_HMDC_HDDA_E0_CH2	4
 +#define SST_HMDC_HDDA_E0_CH3	8
 +#define SST_HMDC_HDDA_E1_CH0	SST_HMDC_HDDA1(SST_HMDC_HDDA_E0_CH0)
 +#define SST_HMDC_HDDA_E1_CH1	SST_HMDC_HDDA1(SST_HMDC_HDDA_E0_CH1)
 +#define SST_HMDC_HDDA_E1_CH2	SST_HMDC_HDDA1(SST_HMDC_HDDA_E0_CH2)
 +#define SST_HMDC_HDDA_E1_CH3	SST_HMDC_HDDA1(SST_HMDC_HDDA_E0_CH3)
 +#define SST_HMDC_HDDA_E0_ALLCH	(SST_HMDC_HDDA_E0_CH0 | SST_HMDC_HDDA_E0_CH1 | \
 +				 SST_HMDC_HDDA_E0_CH2 | SST_HMDC_HDDA_E0_CH3)
 +#define SST_HMDC_HDDA_E1_ALLCH	(SST_HMDC_HDDA_E1_CH0 | SST_HMDC_HDDA_E1_CH1 | \
 +				 SST_HMDC_HDDA_E1_CH2 | SST_HMDC_HDDA_E1_CH3)
 +
 +
 +/* SST Vendor Defined Registers and bits */
 +#define SST_VDRTCTL0		0xa0
 +#define SST_VDRTCTL1		0xa4
 +#define SST_VDRTCTL2		0xa8
 +#define SST_VDRTCTL3		0xaC
 +
 +/* VDRTCTL0 */
 +#define SST_VDRTCL0_D3PGD		(1 << 0)
 +#define SST_VDRTCL0_D3SRAMPGD		(1 << 1)
 +#define SST_VDRTCL0_DSRAMPGE_SHIFT	12
 +#define SST_VDRTCL0_DSRAMPGE_MASK	(0xfffff << SST_VDRTCL0_DSRAMPGE_SHIFT)
 +#define SST_VDRTCL0_ISRAMPGE_SHIFT	2
 +#define SST_VDRTCL0_ISRAMPGE_MASK	(0x3ff << SST_VDRTCL0_ISRAMPGE_SHIFT)
 +
 +/* VDRTCTL2 */
 +#define SST_VDRTCL2_DCLCGE		(1 << 1)
 +#define SST_VDRTCL2_DTCGE		(1 << 10)
 +#define SST_VDRTCL2_APLLSE_MASK		(1 << 31)
 +
 +/* PMCS */
 +#define SST_PMCS		0x84
 +#define SST_PMCS_PS_MASK	0x3
 +
++=======
++>>>>>>> b972153d6c53 (ASoC: Intel: Make atom components independent of sst-dsp)
  struct sst_dsp;
  
  /*
diff --git a/sound/soc/intel/atom/sst/sst.c b/sound/soc/intel/atom/sst/sst.c
index d450b9848028..e90590559185 100644
--- a/sound/soc/intel/atom/sst/sst.c
+++ b/sound/soc/intel/atom/sst/sst.c
@@ -26,7 +26,6 @@
 #include <asm/platform_sst_audio.h>
 #include "../sst-mfld-platform.h"
 #include "sst.h"
-#include "../../common/sst-dsp.h"
 
 MODULE_AUTHOR("Vinod Koul <vinod.koul@intel.com>");
 MODULE_AUTHOR("Harsha Priya <priya.harsha@intel.com>");
diff --git a/sound/soc/intel/atom/sst/sst.h b/sound/soc/intel/atom/sst/sst.h
index 2bee646e81b8..4d37d39fd8f4 100644
--- a/sound/soc/intel/atom/sst/sst.h
+++ b/sound/soc/intel/atom/sst/sst.h
@@ -34,6 +34,13 @@
 #define MRFLD_FW_FEATURE_BASE_OFFSET 0x4
 #define MRFLD_FW_BSS_RESET_BIT 0
 
+/* SST Shim register map */
+#define SST_CSR			0x00
+#define SST_ISRX		0x18
+#define SST_IMRX		0x28
+#define SST_IPCX		0x38 /* IPC IA -> SST */
+#define SST_IPCD		0x40 /* IPC SST -> IA */
+
 extern const struct dev_pm_ops intel_sst_pm;
 enum sst_states {
 	SST_FW_LOADING = 1,
diff --git a/sound/soc/intel/atom/sst/sst_acpi.c b/sound/soc/intel/atom/sst/sst_acpi.c
index f3cfe83b9ac6..f943a0884976 100644
--- a/sound/soc/intel/atom/sst/sst_acpi.c
+++ b/sound/soc/intel/atom/sst/sst_acpi.c
@@ -31,7 +31,6 @@
 #include <sound/soc-acpi.h>
 #include <sound/soc-acpi-intel-match.h>
 #include "../sst-mfld-platform.h"
-#include "../../common/sst-dsp.h"
 #include "../../common/soc-intel-quirks.h"
 #include "sst.h"
 
diff --git a/sound/soc/intel/atom/sst/sst_drv_interface.c b/sound/soc/intel/atom/sst/sst_drv_interface.c
index 762495385d5c..0af618dd8073 100644
--- a/sound/soc/intel/atom/sst/sst_drv_interface.c
+++ b/sound/soc/intel/atom/sst/sst_drv_interface.c
@@ -24,9 +24,6 @@
 #include <asm/platform_sst_audio.h>
 #include "../sst-mfld-platform.h"
 #include "sst.h"
-#include "../../common/sst-dsp.h"
-
-
 
 #define NUM_CODEC 2
 #define MIN_FRAGMENT 2
diff --git a/sound/soc/intel/atom/sst/sst_ipc.c b/sound/soc/intel/atom/sst/sst_ipc.c
index c2851a829a64..a8a9aa0057d3 100644
--- a/sound/soc/intel/atom/sst/sst_ipc.c
+++ b/sound/soc/intel/atom/sst/sst_ipc.c
@@ -24,7 +24,6 @@
 #include <asm/platform_sst_audio.h>
 #include "../sst-mfld-platform.h"
 #include "sst.h"
-#include "../../common/sst-dsp.h"
 
 struct sst_block *sst_create_block(struct intel_sst_drv *ctx,
 					u32 msg_id, u32 drv_id)
diff --git a/sound/soc/intel/atom/sst/sst_loader.c b/sound/soc/intel/atom/sst/sst_loader.c
index 5c42cce90ce2..1c9b0c9ec483 100644
--- a/sound/soc/intel/atom/sst/sst_loader.c
+++ b/sound/soc/intel/atom/sst/sst_loader.c
@@ -29,7 +29,6 @@
 #include <asm/platform_sst_audio.h>
 #include "../sst-mfld-platform.h"
 #include "sst.h"
-#include "../../common/sst-dsp.h"
 
 void memcpy32_toio(void __iomem *dst, const void *src, int count)
 {
diff --git a/sound/soc/intel/atom/sst/sst_pvt.c b/sound/soc/intel/atom/sst/sst_pvt.c
index c099f7df6168..e6a5c18a7018 100644
--- a/sound/soc/intel/atom/sst/sst_pvt.c
+++ b/sound/soc/intel/atom/sst/sst_pvt.c
@@ -26,7 +26,6 @@
 #include <asm/platform_sst_audio.h>
 #include "../sst-mfld-platform.h"
 #include "sst.h"
-#include "../../common/sst-dsp.h"
 
 int sst_shim_write(void __iomem *addr, int offset, int value)
 {
diff --git a/sound/soc/intel/atom/sst/sst_stream.c b/sound/soc/intel/atom/sst/sst_stream.c
index c0221e103e79..ea1ef8a61fa6 100644
--- a/sound/soc/intel/atom/sst/sst_stream.c
+++ b/sound/soc/intel/atom/sst/sst_stream.c
@@ -23,7 +23,6 @@
 #include <asm/platform_sst_audio.h>
 #include "../sst-mfld-platform.h"
 #include "sst.h"
-#include "../../common/sst-dsp.h"
 
 int sst_alloc_stream_mrfld(struct intel_sst_drv *sst_drv_ctx, void *params)
 {
diff --git a/sound/soc/intel/boards/bytcht_es8316.c b/sound/soc/intel/boards/bytcht_es8316.c
index 0bf5a0bf143c..b006ee077ccb 100644
--- a/sound/soc/intel/boards/bytcht_es8316.c
+++ b/sound/soc/intel/boards/bytcht_es8316.c
@@ -28,7 +28,6 @@
 #include <sound/soc.h>
 #include <sound/soc-acpi.h>
 #include "../atom/sst-atom-controls.h"
-#include "../common/sst-dsp.h"
 #include "../common/soc-intel-quirks.h"
 
 /* jd-inv + terminating entry */
diff --git a/sound/soc/intel/boards/bytcr_rt5640.c b/sound/soc/intel/boards/bytcr_rt5640.c
index 544964233470..048976b7945c 100644
--- a/sound/soc/intel/boards/bytcr_rt5640.c
+++ b/sound/soc/intel/boards/bytcr_rt5640.c
@@ -28,7 +28,6 @@
 #include <dt-bindings/sound/rt5640.h>
 #include "../../codecs/rt5640.h"
 #include "../atom/sst-atom-controls.h"
-#include "../common/sst-dsp.h"
 #include "../common/soc-intel-quirks.h"
 
 enum {
* Unmerged path sound/soc/intel/common/sst-dsp.h
