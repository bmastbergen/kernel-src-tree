workqueue: Use pr_warn instead of pr_warning

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Kefeng Wang <wangkefeng.wang@huawei.com>
commit 1d9a6159bd04b676cb7d9b13245888fa450cec10
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/1d9a6159.failed

Use pr_warn() instead of the remaining pr_warning() calls.

Link: http://lkml.kernel.org/r/20191128004752.35268-2-wangkefeng.wang@huawei.com
To: joe@perches.com
To: linux-kernel@vger.kernel.org
	Cc: gregkh@linuxfoundation.org
	Cc: tj@kernel.org
	Cc: arnd@arndb.de
	Cc: sergey.senozhatsky@gmail.com
	Cc: rostedt@goodmis.org
	Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
	Acked-by: Tejun Heo <tj@kernel.org>
	Signed-off-by: Petr Mladek <pmladek@suse.com>
(cherry picked from commit 1d9a6159bd04b676cb7d9b13245888fa450cec10)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/workqueue.c
diff --cc kernel/workqueue.c
index 6f2d4879961b,cfc923558e04..000000000000
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@@ -4356,23 -4365,21 +4356,32 @@@ void destroy_workqueue(struct workqueue
  		kfree(rescuer);
  	}
  
 -	/*
 -	 * Sanity checks - grab all the locks so that we wait for all
 -	 * in-flight operations which may do put_pwq().
 -	 */
 -	mutex_lock(&wq_pool_mutex);
 +	/* sanity checks */
  	mutex_lock(&wq->mutex);
  	for_each_pwq(pwq, wq) {
++<<<<<<< HEAD
 +		int i;
 +
 +		for (i = 0; i < WORK_NR_COLORS; i++) {
 +			if (WARN_ON(pwq->nr_in_flight[i])) {
 +				mutex_unlock(&wq->mutex);
 +				show_workqueue_state();
 +				return;
 +			}
 +		}
 +
 +		if (WARN_ON((pwq != wq->dfl_pwq) && (pwq->refcnt > 1)) ||
 +		    WARN_ON(pwq->nr_active) ||
 +		    WARN_ON(!list_empty(&pwq->delayed_works))) {
++=======
+ 		spin_lock_irq(&pwq->pool->lock);
+ 		if (WARN_ON(pwq_busy(pwq))) {
+ 			pr_warn("%s: %s has the following busy pwq\n",
+ 				__func__, wq->name);
+ 			show_pwq(pwq);
+ 			spin_unlock_irq(&pwq->pool->lock);
++>>>>>>> 1d9a6159bd04 (workqueue: Use pr_warn instead of pr_warning)
  			mutex_unlock(&wq->mutex);
 -			mutex_unlock(&wq_pool_mutex);
  			show_workqueue_state();
  			return;
  		}
* Unmerged path kernel/workqueue.c
