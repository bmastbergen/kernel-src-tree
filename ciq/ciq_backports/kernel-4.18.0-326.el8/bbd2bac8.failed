ASoC: soc-pcm: indicate error message at dpcm_apply_symmetry()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit bbd2bac8d6ca00ee0b032d3c03100328131425ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/bbd2bac8.failed

Indicating error message when failed case is very useful for debuging.
In many case, its style is like below.

	int function(...)
	{
		...
		return ret;
	}

	int caller(...)
	{
		...
		ret = function(...);
		if (ret < 0)
			dev_err(...)
		...
	}

This is not so bad, but in this style *each caller* needs to indicate
duplicate same error message, and some caller is forgetting to do it.
And caller can't indicate detail function() error information.

If function() indicates error message, we can get same and
detail information without forgot.

	int function(...)
	{
		...
		if (ret < 0)
			dev_err(...)

		return ret;
	}

	int caller(...)
	{
		...
		ret = function(...);
		...
	}

This patch follow above style at dpcm_apply_symmetry(...)

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Link: https://lore.kernel.org/r/87k0q9utb9.wl-kuninori.morimoto.gx@renesas.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit bbd2bac8d6ca00ee0b032d3c03100328131425ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-pcm.c
diff --cc sound/soc/soc-pcm.c
index 030c255a26bd,855904c0938d..000000000000
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@@ -1738,11 -1704,9 +1738,17 @@@ static int dpcm_apply_symmetry(struct s
  
  	for_each_rtd_cpu_dais (fe, i, fe_cpu_dai) {
  		/* Symmetry only applies if we've got an active stream. */
++<<<<<<< HEAD
 +		if (snd_soc_dai_active(fe_cpu_dai)) {
 +			err = soc_pcm_apply_symmetry(fe_substream, fe_cpu_dai);
 +			if (err < 0)
 +				return err;
 +		}
++=======
+ 		err = soc_pcm_apply_symmetry(fe_substream, fe_cpu_dai);
+ 		if (err < 0)
+ 			goto error;
++>>>>>>> bbd2bac8d6ca (ASoC: soc-pcm: indicate error message at dpcm_apply_symmetry())
  	}
  
  	/* apply symmetry for BE */
@@@ -1765,15 -1729,16 +1771,24 @@@
  
  		/* Symmetry only applies if we've got an active stream. */
  		for_each_rtd_dais(rtd, i, dai) {
++<<<<<<< HEAD
 +			if (snd_soc_dai_active(dai)) {
 +				err = soc_pcm_apply_symmetry(fe_substream, dai);
 +				if (err < 0)
 +					return err;
 +			}
++=======
+ 			err = soc_pcm_apply_symmetry(fe_substream, dai);
+ 			if (err < 0)
+ 				goto error;
++>>>>>>> bbd2bac8d6ca (ASoC: soc-pcm: indicate error message at dpcm_apply_symmetry())
  		}
  	}
+ error:
+ 	if (err < 0)
+ 		dev_err(fe->dev, "ASoC: %s failed (%d)\n", __func__, err);
  
- 	return 0;
+ 	return err;
  }
  
  static int dpcm_fe_dai_startup(struct snd_pcm_substream *fe_substream)
* Unmerged path sound/soc/soc-pcm.c
