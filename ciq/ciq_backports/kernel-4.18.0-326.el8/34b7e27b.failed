drm/i915: switch TGL and ADL to the new stepping scheme

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Jani Nikula <jani.nikula@intel.com>
commit 34b7e27b88e546174638d6ec919d378012f731f2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/34b7e27b.failed

This changes the way revids not present in the array are handled:

- For gaps in the array, the next present revid is used.

- For revids beyond the array, the new STEP_FUTURE is used instead of
  the last revid in the array.

In both cases, we'll get debug logging of what's going on.

v2: Rename stepping->step

	Reviewed-by: Jos√© Roberto de Souza <jose.souza@intel.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/756fe3d75b1e91ef812fc1fd3f70337e9c571d91.1616764798.git.jani.nikula@intel.com
(cherry picked from commit 34b7e27b88e546174638d6ec919d378012f731f2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_drv.h
#	drivers/gpu/drm/i915/intel_step.c
#	drivers/gpu/drm/i915/intel_step.h
diff --cc drivers/gpu/drm/i915/i915_drv.h
index 9206a6040183,b300d6f78675..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@@ -1559,16 -1497,22 +1559,30 @@@ IS_SUBPLATFORM(const struct drm_i915_pr
  	(IS_ICELAKE(p) && IS_REVID(p, since, until))
  
  #define EHL_REVID_A0            0x0
 -#define EHL_REVID_B0            0x1
  
 -#define IS_JSL_EHL_REVID(p, since, until) \
 -	(IS_JSL_EHL(p) && IS_REVID(p, since, until))
 +#define IS_EHL_REVID(p, since, until) \
 +	(IS_ELKHARTLAKE(p) && IS_REVID(p, since, until))
  
++<<<<<<< HEAD
 +#define TGL_REVID_A0		0x0
 +#define TGL_REVID_B0		0x1
 +#define TGL_REVID_C0		0x2
 +
 +#define IS_TGL_REVID(p, since, until) \
 +	(IS_TIGERLAKE(p) && IS_REVID(p, since, until))
++=======
+ #define IS_TGL_DISP_STEPPING(__i915, since, until) \
+ 	(IS_TIGERLAKE(__i915) && \
+ 	 IS_DISPLAY_STEP(__i915, since, until))
+ 
+ #define IS_TGL_UY_GT_STEPPING(__i915, since, until) \
+ 	((IS_TGL_U(__i915) || IS_TGL_Y(__i915)) && \
+ 	 IS_GT_STEP(__i915, since, until))
+ 
+ #define IS_TGL_GT_STEPPING(__i915, since, until) \
+ 	(IS_TIGERLAKE(__i915) && !(IS_TGL_U(__i915) || IS_TGL_Y(__i915)) && \
+ 	 IS_GT_STEP(__i915, since, until))
++>>>>>>> 34b7e27b88e5 (drm/i915: switch TGL and ADL to the new stepping scheme)
  
  #define RKL_REVID_A0		0x0
  #define RKL_REVID_B0		0x1
@@@ -1583,6 -1527,14 +1597,17 @@@
  #define IS_DG1_REVID(p, since, until) \
  	(IS_DG1(p) && IS_REVID(p, since, until))
  
++<<<<<<< HEAD
++=======
+ #define IS_ADLS_DISP_STEPPING(__i915, since, until) \
+ 	(IS_ALDERLAKE_S(__i915) && \
+ 	 IS_DISPLAY_STEP(__i915, since, until))
+ 
+ #define IS_ADLS_GT_STEPPING(__i915, since, until) \
+ 	(IS_ALDERLAKE_S(__i915) && \
+ 	 IS_GT_STEP(__i915, since, until))
+ 
++>>>>>>> 34b7e27b88e5 (drm/i915: switch TGL and ADL to the new stepping scheme)
  #define IS_LP(dev_priv)	(INTEL_INFO(dev_priv)->is_lp)
  #define IS_GEN9_LP(dev_priv)	(IS_GEN(dev_priv, 9) && IS_LP(dev_priv))
  #define IS_GEN9_BC(dev_priv)	(IS_GEN(dev_priv, 9) && !IS_LP(dev_priv))
* Unmerged path drivers/gpu/drm/i915/intel_step.c
* Unmerged path drivers/gpu/drm/i915/intel_step.h
* Unmerged path drivers/gpu/drm/i915/i915_drv.h
* Unmerged path drivers/gpu/drm/i915/intel_step.c
* Unmerged path drivers/gpu/drm/i915/intel_step.h
