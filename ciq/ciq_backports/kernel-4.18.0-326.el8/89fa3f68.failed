ALSA: usb-audio: Use unsigned char for iface and altsettings fields

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 89fa3f686c10c9edde0f41e5a1c71afa0e43ff87
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/89fa3f68.failed

Just for consistency, use unsigned char for iface and altsetting in
allover places.  Also rearrange the field positions of
snd_usb_endpiont and tidy up with some comments.

	Tested-by: Keith Milner <kamilner@superlative.org>
	Tested-by: Dylan Robinson <dylan_robinson@motu.com>
Link: https://lore.kernel.org/r/20201123085347.19667-35-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 89fa3f686c10c9edde0f41e5a1c71afa0e43ff87)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/card.h
#	sound/usb/endpoint.c
diff --cc sound/usb/card.h
index ce446f8dba4b,6a027c349194..000000000000
--- a/sound/usb/card.h
+++ b/sound/usb/card.h
@@@ -58,10 -59,16 +58,15 @@@ struct snd_urb_ctx 
  struct snd_usb_endpoint {
  	struct snd_usb_audio *chip;
  
 -	int opened;		/* open refcount; protect with chip->mutex */
 -	atomic_t running;	/* running status */
 +	int use_count;
  	int ep_num;		/* the referenced endpoint number */
  	int type;		/* SND_USB_ENDPOINT_TYPE_* */
- 	unsigned long flags;
+ 
+ 	unsigned char iface;		/* interface number */
+ 	unsigned char altsetting;	/* corresponding alternate setting */
+ 	unsigned char ep_idx;		/* endpoint array index */
+ 
+ 	unsigned long flags;	/* running bit flags */
  
  	void (*prepare_data_urb) (struct snd_usb_substream *subs,
  				  struct urb *urb);
@@@ -110,12 -117,13 +115,15 @@@
  	unsigned int syncinterval;	/* P for adaptive mode, 0 otherwise */
  	unsigned char silence_value;
  	unsigned int stride;
++<<<<<<< HEAD
 +	int iface, altsetting;
++=======
++>>>>>>> 89fa3f686c10 (ALSA: usb-audio: Use unsigned char for iface and altsettings fields)
  	int skip_packets;		/* quirks for devices to ignore the first n packets
  					   in a stream */
 -	bool implicit_fb_sync;		/* syncs with implicit feedback */
 -	bool need_setup;		/* (re-)need for configure? */
 +	bool is_implicit_feedback;      /* This endpoint is used as implicit feedback */
  
  	/* for hw constraints */
 -	const struct audioformat *cur_audiofmt;
  	unsigned int cur_rate;
  	snd_pcm_format_t cur_format;
  	unsigned int cur_channels;
diff --cc sound/usb/endpoint.c
index 208ac2aff462,162da7a50046..000000000000
--- a/sound/usb/endpoint.c
+++ b/sound/usb/endpoint.c
@@@ -587,6 -729,54 +587,57 @@@ void snd_usb_endpoint_set_callback(stru
  	WRITE_ONCE(ep->data_subs, data_subs);
  }
  
++<<<<<<< HEAD
++=======
+ static int endpoint_set_interface(struct snd_usb_audio *chip,
+ 				  struct snd_usb_endpoint *ep,
+ 				  bool set)
+ {
+ 	int altset = set ? ep->altsetting : 0;
+ 	int err;
+ 
+ 	usb_audio_dbg(chip, "Setting usb interface %d:%d for EP 0x%x\n",
+ 		      ep->iface, altset, ep->ep_num);
+ 	err = usb_set_interface(chip->dev, ep->iface, altset);
+ 	if (err < 0) {
+ 		usb_audio_err(chip, "%d:%d: usb_set_interface failed (%d)\n",
+ 			      ep->iface, altset, err);
+ 		return err;
+ 	}
+ 
+ 	snd_usb_set_interface_quirk(chip);
+ 	return 0;
+ }
+ 
+ /*
+  * snd_usb_endpoint_close: Close the endpoint
+  *
+  * Unreference the already opened endpoint via snd_usb_endpoint_open().
+  */
+ void snd_usb_endpoint_close(struct snd_usb_audio *chip,
+ 			    struct snd_usb_endpoint *ep)
+ {
+ 	mutex_lock(&chip->mutex);
+ 	usb_audio_dbg(chip, "Closing EP 0x%x (count %d)\n",
+ 		      ep->ep_num, ep->opened);
+ 	if (!--ep->opened) {
+ 		endpoint_set_interface(chip, ep, false);
+ 		ep->iface = 0;
+ 		ep->altsetting = 0;
+ 		ep->cur_audiofmt = NULL;
+ 		ep->cur_rate = 0;
+ 		usb_audio_dbg(chip, "EP 0x%x closed\n", ep->ep_num);
+ 	}
+ 	mutex_unlock(&chip->mutex);
+ }
+ 
+ /* Prepare for suspening EP, called from the main suspend handler */
+ void snd_usb_endpoint_suspend(struct snd_usb_endpoint *ep)
+ {
+ 	ep->need_setup = true;
+ }
+ 
++>>>>>>> 89fa3f686c10 (ALSA: usb-audio: Use unsigned char for iface and altsettings fields)
  /*
   *  wait until all urbs are processed.
   */
* Unmerged path sound/usb/card.h
* Unmerged path sound/usb/endpoint.c
