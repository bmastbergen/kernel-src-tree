net/mlx5: CT: Add support for mirroring

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Paul Blakey <paulb@mellanox.com>
commit 69e2916ebce4410c0f6ba6c59c4f6e9eb228e5ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/69e2916e.failed

Add support for mirroring before the CT action by spliting the pre ct rule.
Mirror outputs are done first on the tc chain,prio table rule (the fwd
rule), which will then forward to a per port fwd table.
On this fwd table, we insert the original pre ct rule that forwards to
ct/ct nat table.

	Signed-off-by: Paul Blakey <paulb@mellanox.com>
	Signed-off-by: Maor Dickman <maord@nvidia.com>
	Reviewed-by: Roi Dayan <roid@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 69e2916ebce4410c0f6ba6c59c4f6e9eb228e5ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index 8d4d2686ea65,121f0a744e55..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -1111,11 -1087,13 +1111,17 @@@ mlx5e_tc_offload_fdb_rules(struct mlx5_
  	if (flow_flag_test(flow, CT)) {
  		mod_hdr_acts = &attr->parse_attr->mod_hdr_acts;
  
++<<<<<<< HEAD
 +		return mlx5_tc_ct_flow_offload(flow->priv, flow, spec, attr,
++=======
+ 		rule = mlx5_tc_ct_flow_offload(get_ct_priv(flow->priv),
+ 					       flow, spec, attr,
++>>>>>>> 69e2916ebce4 (net/mlx5: CT: Add support for mirroring)
  					       mod_hdr_acts);
+ 	} else {
+ 		rule = mlx5_eswitch_add_offloaded_rule(esw, spec, attr);
  	}
  
- 	rule = mlx5_eswitch_add_offloaded_rule(esw, spec, attr);
  	if (IS_ERR(rule))
  		return rule;
  
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c b/drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c
index 65e9e986ce96..9d121208f5ca 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c
@@ -1816,6 +1816,10 @@ __mlx5_tc_ct_flow_offload(struct mlx5e_priv *priv,
 	ct_flow->post_ct_attr->prio = 0;
 	ct_flow->post_ct_attr->ft = ct_priv->post_ct;
 
+	/* Splits were handled before CT */
+	if (ct_priv->ns_type == MLX5_FLOW_NAMESPACE_FDB)
+		ct_flow->post_ct_attr->esw_attr->split_count = 0;
+
 	ct_flow->post_ct_attr->inner_match_level = MLX5_MATCH_NONE;
 	ct_flow->post_ct_attr->outer_match_level = MLX5_MATCH_NONE;
 	ct_flow->post_ct_attr->action &= ~(MLX5_FLOW_CONTEXT_ACTION_DECAP);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
