net/mlx5e: Fix nullptr in mlx5e_tc_add_fdb_flow()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Dima Chumak <dchumak@nvidia.com>
commit fe7738eb3ca3631a75844e790f6cb576c0fe7b00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/fe7738eb.failed

The result of __dev_get_by_index() is not checked for NULL, which then
passed to mlx5e_attach_encap() and gets dereferenced.

Also, in case of a successful lookup, the net_device reference count is
not incremented, which may result in net_device pointer becoming invalid
at any time during mlx5e_attach_encap() execution.

Fix by using dev_get_by_index(), which does proper reference counting on
the net_device pointer. Also, handle nullptr return value when mirred
device is not found.

It's safe to call dev_put() on the mirred net_device pointer, right
after mlx5e_attach_encap() call, because it's not being saved/copied
down the call chain.

Fixes: 3c37745ec614 ("net/mlx5e: Properly deal with encap flows add/del under neigh update")
Addresses-Coverity: ("Dereference null return value")
	Signed-off-by: Dima Chumak <dchumak@nvidia.com>
	Reviewed-by: Vlad Buslov <vladbu@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit fe7738eb3ca3631a75844e790f6cb576c0fe7b00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index dd880c6c2ee9,882bafba43f2..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -1254,9 -1322,10 +1254,13 @@@ mlx5e_tc_add_fdb_flow(struct mlx5e_pri
  		      struct netlink_ext_ack *extack)
  {
  	struct mlx5_eswitch *esw = priv->mdev->priv.eswitch;
- 	struct net_device *out_dev, *encap_dev = NULL;
  	struct mlx5e_tc_flow_parse_attr *parse_attr;
  	struct mlx5_flow_attr *attr = flow->attr;
++<<<<<<< HEAD
++=======
+ 	bool vf_tun = false, encap_valid = true;
+ 	struct net_device *encap_dev = NULL;
++>>>>>>> fe7738eb3ca3 (net/mlx5e: Fix nullptr in mlx5e_tc_add_fdb_flow())
  	struct mlx5_esw_flow_attr *esw_attr;
  	struct mlx5_fc *counter = NULL;
  	struct mlx5e_rep_priv *rpriv;
@@@ -1301,13 -1378,21 +1306,18 @@@
  			continue;
  
  		mirred_ifindex = parse_attr->mirred_ifindex[out_index];
- 		out_dev = __dev_get_by_index(dev_net(priv->netdev),
- 					     mirred_ifindex);
+ 		out_dev = dev_get_by_index(dev_net(priv->netdev), mirred_ifindex);
+ 		if (!out_dev) {
+ 			NL_SET_ERR_MSG_MOD(extack, "Requested mirred device not found");
+ 			err = -ENODEV;
+ 			goto err_out;
+ 		}
  		err = mlx5e_attach_encap(priv, flow, out_dev, out_index,
  					 extack, &encap_dev, &encap_valid);
+ 		dev_put(out_dev);
  		if (err)
 -			goto err_out;
 +			return err;
  
 -		if (esw_attr->dests[out_index].flags &
 -		    MLX5_ESW_DEST_CHAIN_WITH_SRC_PORT_CHANGE)
 -			vf_tun = true;
  		out_priv = netdev_priv(encap_dev);
  		rpriv = out_priv->ppriv;
  		esw_attr->dests[out_index].rep = rpriv->rep;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
