drm/i915: add new helpers for accessing stepping info

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Jani Nikula <jani.nikula@intel.com>
commit 439c8dccb6a7f74bf6b3721fa509ab202c66f899
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/439c8dcc.failed

Add new runtime info field for stepping. Add new helpers for accessing
them. As we'll be switching platforms over to the new scheme
incrementally, check for non-initialized steppings.

In case a platform does not have separate display and gt steppings, it's
okay to use a common shorthand. However, in this case the display
stepping must not be initialized, and gt stepping is the single point of
truth.

v3: Remove IS_STEP() (José)

v2: Rename stepping->step

	Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/bb4275733fa390ea3dbf6f62794d55b616665230.1616764798.git.jani.nikula@intel.com
(cherry picked from commit 439c8dccb6a7f74bf6b3721fa509ab202c66f899)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_drv.h
#	drivers/gpu/drm/i915/intel_device_info.h
#	drivers/gpu/drm/i915/intel_step.h
diff --cc drivers/gpu/drm/i915/i915_drv.h
index 9206a6040183,30572d89a267..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@@ -1559,16 -1513,49 +1570,57 @@@ IS_SUBPLATFORM(const struct drm_i915_pr
  	(IS_ICELAKE(p) && IS_REVID(p, since, until))
  
  #define EHL_REVID_A0            0x0
 -#define EHL_REVID_B0            0x1
  
 -#define IS_JSL_EHL_REVID(p, since, until) \
 -	(IS_JSL_EHL(p) && IS_REVID(p, since, until))
 +#define IS_EHL_REVID(p, since, until) \
 +	(IS_ELKHARTLAKE(p) && IS_REVID(p, since, until))
 +
++<<<<<<< HEAD
 +#define TGL_REVID_A0		0x0
 +#define TGL_REVID_B0		0x1
 +#define TGL_REVID_C0		0x2
  
 +#define IS_TGL_REVID(p, since, until) \
 +	(IS_TIGERLAKE(p) && IS_REVID(p, since, until))
++=======
+ static inline const struct i915_rev_steppings *
+ tgl_stepping_get(struct drm_i915_private *dev_priv)
+ {
+ 	u8 revid = INTEL_REVID(dev_priv);
+ 	u8 size;
+ 	const struct i915_rev_steppings *revid_step_tbl;
+ 
+ 	if (IS_ALDERLAKE_S(dev_priv)) {
+ 		revid_step_tbl = adls_revid_step_tbl;
+ 		size = ARRAY_SIZE(adls_revid_step_tbl);
+ 	} else if (IS_TGL_U(dev_priv) || IS_TGL_Y(dev_priv)) {
+ 		revid_step_tbl = tgl_uy_revid_step_tbl;
+ 		size = ARRAY_SIZE(tgl_uy_revid_step_tbl);
+ 	} else {
+ 		revid_step_tbl = tgl_revid_step_tbl;
+ 		size = ARRAY_SIZE(tgl_revid_step_tbl);
+ 	}
+ 
+ 	revid = min_t(u8, revid, size - 1);
+ 
+ 	return &revid_step_tbl[revid];
+ }
+ 
+ #define IS_TGL_DISP_STEPPING(p, since, until) \
+ 	(IS_TIGERLAKE(p) && \
+ 	 tgl_stepping_get(p)->disp_stepping >= (since) && \
+ 	 tgl_stepping_get(p)->disp_stepping <= (until))
+ 
+ #define IS_TGL_UY_GT_STEPPING(p, since, until) \
+ 	((IS_TGL_U(p) || IS_TGL_Y(p)) && \
+ 	 tgl_stepping_get(p)->gt_stepping >= (since) && \
+ 	 tgl_stepping_get(p)->gt_stepping <= (until))
+ 
+ #define IS_TGL_GT_STEPPING(p, since, until) \
+ 	(IS_TIGERLAKE(p) && \
+ 	 !(IS_TGL_U(p) || IS_TGL_Y(p)) && \
+ 	 tgl_stepping_get(p)->gt_stepping >= (since) && \
+ 	 tgl_stepping_get(p)->gt_stepping <= (until))
++>>>>>>> 439c8dccb6a7 (drm/i915: add new helpers for accessing stepping info)
  
  #define RKL_REVID_A0		0x0
  #define RKL_REVID_B0		0x1
diff --cc drivers/gpu/drm/i915/intel_device_info.h
index cd9ce629ec50,142bb356669f..000000000000
--- a/drivers/gpu/drm/i915/intel_device_info.h
+++ b/drivers/gpu/drm/i915/intel_device_info.h
@@@ -226,8 -229,7 +228,12 @@@ struct intel_runtime_info 
  
  	u32 rawclk_freq;
  
++<<<<<<< HEAD
 +	u32 cs_timestamp_frequency_hz;
 +	u32 cs_timestamp_period_ns;
++=======
+ 	struct i915_rev_steppings step;
++>>>>>>> 439c8dccb6a7 (drm/i915: add new helpers for accessing stepping info)
  };
  
  struct intel_driver_caps {
* Unmerged path drivers/gpu/drm/i915/intel_step.h
* Unmerged path drivers/gpu/drm/i915/i915_drv.h
* Unmerged path drivers/gpu/drm/i915/intel_device_info.h
* Unmerged path drivers/gpu/drm/i915/intel_step.h
