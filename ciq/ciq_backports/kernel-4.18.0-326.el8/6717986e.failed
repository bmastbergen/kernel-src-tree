net/mlx5e: Refactor tun routing helpers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Vlad Buslov <vladbu@nvidia.com>
commit 6717986e15a067ac49370e3f563063c8154e6854
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/6717986e.failed

Refactor tun routing helpers to use dedicated struct
mlx5e_tc_tun_route_attr instead of multiple output arguments. This
simplifies the callers (no need to keep track of bunch of output param
pointers) and allows to unify struct release code in new
mlx5e_tc_tun_route_attr_cleanup() helper instead of requiring callers to
manually release some of the output parameters that require it.

Simplify code by unifying error handling at the end of the function and
rearranging code. Remove redundant empty line.

	Signed-off-by: Vlad Buslov <vladbu@nvidia.com>
	Signed-off-by: Dmytro Linkin <dlinkin@nvidia.com>
	Reviewed-by: Roi Dayan <roid@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 6717986e15a067ac49370e3f563063c8154e6854)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
index 4f4e73d19292,3e18ca200c86..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
@@@ -104,9 -123,9 +123,15 @@@ static int mlx5e_route_lookup_ipv4_get(
  	if (IS_ERR(rt))
  		return PTR_ERR(rt);
  
++<<<<<<< HEAD
 +	if (mlx5_lag_is_multipath(mdev) && !rt->rt_gateway) {
 +		ip_rt_put(rt);
 +		return -ENETUNREACH;
++=======
+ 	if (mlx5_lag_is_multipath(mdev) && rt->rt_gw_family != AF_INET) {
+ 		ret = -ENETUNREACH;
+ 		goto err_rt_release;
++>>>>>>> 6717986e15a0 (net/mlx5e: Refactor tun routing helpers)
  	}
  #else
  	return -EOPNOTSUPP;
@@@ -188,13 -211,11 +217,17 @@@ int mlx5e_tc_tun_create_header_ipv4(str
  {
  	int max_encap_size = MLX5_CAP_ESW(priv->mdev, max_encap_header_size);
  	const struct ip_tunnel_key *tun_key = &e->tun_info->key;
++<<<<<<< HEAD
 +	struct net_device *out_dev, *route_dev;
 +	struct flowi4 fl4 = {};
 +	struct neighbour *n = NULL;
++=======
+ 	TC_TUN_ROUTE_ATTR_INIT(attr);
++>>>>>>> 6717986e15a0 (net/mlx5e: Refactor tun routing helpers)
  	int ipv4_encap_size;
  	char *encap_header;
- 	u8 nud_state, ttl;
  	struct iphdr *ip;
+ 	u8 nud_state;
  	int err;
  
  	/* add the IP fields */
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
