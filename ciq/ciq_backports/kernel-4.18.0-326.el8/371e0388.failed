relay: make create_buf_file and remove_buf_file callbacks mandatory

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Jani Nikula <jani.nikula@intel.com>
commit 371e03880d9d34534d3eafd2a7581042be598e39
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/371e0388.failed

All clients provide create_buf_file and remove_buf_file callbacks, and
they're required for relay to make sense.  There is no point in them being
optional.

Also document whether each callback is mandatory/optional.

Link: https://lkml.kernel.org/r/88003c1527386b93036e286e7917f1e33aec84ac.1606153547.git.jani.nikula@intel.com
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
	Suggested-by: Christoph Hellwig <hch@infradead.org>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Cc: Jens Axboe <axboe@kernel.dk>
	Cc: Kalle Valo <kvalo@codeaurora.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 371e03880d9d34534d3eafd2a7581042be598e39)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/relay.h
diff --cc include/linux/relay.h
index 320c7cf23b42,99d024475ba5..000000000000
--- a/include/linux/relay.h
+++ b/include/linux/relay.h
@@@ -122,7 -124,9 +124,13 @@@ struct rchan_callback
  	 * cause relay_open() to create a single global buffer rather
  	 * than the default set of per-cpu buffers.
  	 *
++<<<<<<< HEAD
 +	 * See Documentation/filesystems/relay.txt for more info.
++=======
+ 	 * This callback is mandatory.
+ 	 *
+ 	 * See Documentation/filesystems/relay.rst for more info.
++>>>>>>> 371e03880d9d (relay: make create_buf_file and remove_buf_file callbacks mandatory)
  	 */
  	struct dentry *(*create_buf_file)(const char *filename,
  					  struct dentry *parent,
* Unmerged path include/linux/relay.h
diff --git a/kernel/relay.c b/kernel/relay.c
index 8391b9ead3b3..9c8a1aa0059e 100644
--- a/kernel/relay.c
+++ b/kernel/relay.c
@@ -270,26 +270,6 @@ static int subbuf_start_default_callback (struct rchan_buf *buf,
 	return 1;
 }
 
-/*
- * create_buf_file_create() default callback.  Does nothing.
- */
-static struct dentry *create_buf_file_default_callback(const char *filename,
-						       struct dentry *parent,
-						       umode_t mode,
-						       struct rchan_buf *buf,
-						       int *is_global)
-{
-	return NULL;
-}
-
-/*
- * remove_buf_file() default callback.  Does nothing.
- */
-static int remove_buf_file_default_callback(struct dentry *dentry)
-{
-	return -EINVAL;
-}
-
 /**
  *	wakeup_readers - wake up readers waiting on a channel
  *	@work: contains the channel buffer
@@ -464,10 +444,6 @@ static void setup_callbacks(struct rchan *chan,
 {
 	if (!cb->subbuf_start)
 		cb->subbuf_start = subbuf_start_default_callback;
-	if (!cb->create_buf_file)
-		cb->create_buf_file = create_buf_file_default_callback;
-	if (!cb->remove_buf_file)
-		cb->remove_buf_file = remove_buf_file_default_callback;
 	chan->cb = cb;
 }
 
@@ -527,7 +503,7 @@ struct rchan *relay_open(const char *base_filename,
 		return NULL;
 	if (subbuf_size > UINT_MAX / n_subbufs)
 		return NULL;
-	if (!cb)
+	if (!cb || !cb->create_buf_file || !cb->remove_buf_file)
 		return NULL;
 
 	chan = kzalloc(sizeof(struct rchan), GFP_KERNEL);
