xfs: add support for rmap btree staging cursors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 59d677127cf1543b2978aca3be8c8395f3a17973
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/59d67712.failed

Add support for btree staging cursors for the rmap btrees.  This is
needed both for online repair and also to convert xfs_repair to use
btree bulk loading.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
(cherry picked from commit 59d677127cf1543b2978aca3be8c8395f3a17973)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_rmap_btree.c
diff --cc fs/xfs/libxfs/xfs_rmap_btree.c
index 725cb892f157,b7c05314d07c..000000000000
--- a/fs/xfs/libxfs/xfs_rmap_btree.c
+++ b/fs/xfs/libxfs/xfs_rmap_btree.c
@@@ -468,13 -464,27 +464,35 @@@ xfs_rmapbt_init_common
  	cur->bc_btnum = XFS_BTNUM_RMAP;
  	cur->bc_flags = XFS_BTREE_CRC_BLOCKS | XFS_BTREE_OVERLAPPING;
  	cur->bc_blocklog = mp->m_sb.sb_blocklog;
+ 	cur->bc_statoff = XFS_STATS_CALC_INDEX(xs_rmap_2);
+ 	cur->bc_ag.agno = agno;
  	cur->bc_ops = &xfs_rmapbt_ops;
+ 
+ 	return cur;
+ }
+ 
+ /* Create a new reverse mapping btree cursor. */
+ struct xfs_btree_cur *
+ xfs_rmapbt_init_cursor(
+ 	struct xfs_mount	*mp,
+ 	struct xfs_trans	*tp,
+ 	struct xfs_buf		*agbp,
+ 	xfs_agnumber_t		agno)
+ {
+ 	struct xfs_agf		*agf = agbp->b_addr;
+ 	struct xfs_btree_cur	*cur;
+ 
+ 	cur = xfs_rmapbt_init_common(mp, tp, agno);
  	cur->bc_nlevels = be32_to_cpu(agf->agf_levels[XFS_BTNUM_RMAP]);
++<<<<<<< HEAD
 +	cur->bc_statoff = XFS_STATS_CALC_INDEX(xs_rmap_2);
 +
 +	cur->bc_private.a.agbp = agbp;
 +	cur->bc_private.a.agno = agno;
 +
++=======
+ 	cur->bc_ag.agbp = agbp;
++>>>>>>> 59d677127cf1 (xfs: add support for rmap btree staging cursors)
  	return cur;
  }
  
* Unmerged path fs/xfs/libxfs/xfs_rmap_btree.c
diff --git a/fs/xfs/libxfs/xfs_rmap_btree.h b/fs/xfs/libxfs/xfs_rmap_btree.h
index 820d668b063d..115c3455a734 100644
--- a/fs/xfs/libxfs/xfs_rmap_btree.h
+++ b/fs/xfs/libxfs/xfs_rmap_btree.h
@@ -9,6 +9,7 @@
 struct xfs_buf;
 struct xfs_btree_cur;
 struct xfs_mount;
+struct xbtree_afakeroot;
 
 /* rmaps only exist on crc enabled filesystems */
 #define XFS_RMAP_BLOCK_LEN	XFS_BTREE_SBLOCK_CRC_LEN
@@ -43,6 +44,10 @@ struct xfs_mount;
 struct xfs_btree_cur *xfs_rmapbt_init_cursor(struct xfs_mount *mp,
 				struct xfs_trans *tp, struct xfs_buf *bp,
 				xfs_agnumber_t agno);
+struct xfs_btree_cur *xfs_rmapbt_stage_cursor(struct xfs_mount *mp,
+		struct xbtree_afakeroot *afake, xfs_agnumber_t agno);
+void xfs_rmapbt_commit_staged_btree(struct xfs_btree_cur *cur,
+		struct xfs_trans *tp, struct xfs_buf *agbp);
 int xfs_rmapbt_maxrecs(int blocklen, int leaf);
 extern void xfs_rmapbt_compute_maxlevels(struct xfs_mount *mp);
 
