net/mxl5e: Add change profile method

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Saeed Mahameed <saeedm@nvidia.com>
commit c4d7eb57687f358cd498ea3624519236af8db97e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/c4d7eb57.failed

Port nic netdevice will be used as uplink representor in downstream
patches. Add change profile method to allow changing a mlx5e netdevice
profile dynamically.

	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
	Reviewed-by: Roi Dayan <roid@nvidia.com>
(cherry picked from commit c4d7eb57687f358cd498ea3624519236af8db97e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 2e6376372a67,fa461cfd6410..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -1081,24 -1154,25 +1081,35 @@@ int mlx5e_ethtool_set_pauseparam(struc
  				 struct ethtool_pauseparam *pauseparam);
  
  /* mlx5e generic netdev management API */
++<<<<<<< HEAD
++=======
+ static inline unsigned int
+ mlx5e_calc_max_nch(struct mlx5e_priv *priv, const struct mlx5e_profile *profile)
+ {
+ 	return priv->netdev->num_rx_queues / max_t(u8, profile->rq_groups, 1);
+ }
+ 
++>>>>>>> c4d7eb57687f (net/mxl5e: Add change profile method)
  int mlx5e_netdev_init(struct net_device *netdev,
  		      struct mlx5e_priv *priv,
 -		      struct mlx5_core_dev *mdev);
 +		      struct mlx5_core_dev *mdev,
 +		      const struct mlx5e_profile *profile,
 +		      void *ppriv);
  void mlx5e_netdev_cleanup(struct net_device *netdev, struct mlx5e_priv *priv);
 -struct net_device *
 -mlx5e_create_netdev(struct mlx5_core_dev *mdev, unsigned int txqs, unsigned int rxqs);
 +struct net_device*
 +mlx5e_create_netdev(struct mlx5_core_dev *mdev, const struct mlx5e_profile *profile,
 +		    int nch, void *ppriv);
  int mlx5e_attach_netdev(struct mlx5e_priv *priv);
  void mlx5e_detach_netdev(struct mlx5e_priv *priv);
  void mlx5e_destroy_netdev(struct mlx5e_priv *priv);
+ int mlx5e_netdev_change_profile(struct mlx5e_priv *priv,
+ 				const struct mlx5e_profile *new_profile, void *new_ppriv);
  void mlx5e_set_netdev_mtu_boundaries(struct mlx5e_priv *priv);
 -void mlx5e_build_nic_params(struct mlx5e_priv *priv, struct mlx5e_xsk *xsk, u16 mtu);
 +void mlx5e_build_nic_params(struct mlx5e_priv *priv,
 +			    struct mlx5e_xsk *xsk,
 +			    struct mlx5e_rss_params *rss_params,
 +			    struct mlx5e_params *params,
 +			    u16 mtu);
  void mlx5e_build_rq_params(struct mlx5_core_dev *mdev,
  			   struct mlx5e_params *params);
  void mlx5e_build_rss_params(struct mlx5e_rss_params *rss_params,
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 4b7d83e6ef25,91f23871ded5..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -4764,6 -4934,10 +4764,11 @@@ void mlx5e_build_nic_params(struct mlx5
  	struct mlx5_core_dev *mdev = priv->mdev;
  	u8 rx_cq_period_mode;
  
++<<<<<<< HEAD
++=======
+ 	priv->max_nch = mlx5e_calc_max_nch(priv, priv->profile);
+ 
++>>>>>>> c4d7eb57687f (net/mxl5e: Add change profile method)
  	params->sw_mtu = mtu;
  	params->hard_mtu = MLX5E_ETH_HARD_MTU;
  	params->num_channels = min_t(unsigned int, MLX5E_MAX_NUM_CHANNELS / 2,
@@@ -5282,14 -5457,12 +5287,16 @@@ static const struct mlx5e_profile mlx5e
  };
  
  /* mlx5e generic netdev management API (move to en_common.c) */
 +
 +/* mlx5e_netdev_init/cleanup must be called from profile->init/cleanup callbacks */
  int mlx5e_netdev_init(struct net_device *netdev,
  		      struct mlx5e_priv *priv,
 -		      struct mlx5_core_dev *mdev)
 +		      struct mlx5_core_dev *mdev,
 +		      const struct mlx5e_profile *profile,
 +		      void *ppriv)
  {
+ 	memset(priv, 0, sizeof(*priv));
+ 
  	/* priv init */
  	priv->mdev        = mdev;
  	priv->netdev      = netdev;
@@@ -5432,13 -5617,75 +5439,77 @@@ void mlx5e_detach_netdev(struct mlx5e_p
  	cancel_work_sync(&priv->update_stats_work);
  }
  
+ static int
+ mlx5e_netdev_attach_profile(struct mlx5e_priv *priv,
+ 			    const struct mlx5e_profile *new_profile, void *new_ppriv)
+ {
+ 	struct net_device *netdev = priv->netdev;
+ 	struct mlx5_core_dev *mdev = priv->mdev;
+ 	int err;
+ 
+ 	err = mlx5e_netdev_init(netdev, priv, mdev);
+ 	if (err) {
+ 		mlx5_core_err(mdev, "mlx5e_netdev_init failed, err=%d\n", err);
+ 		return err;
+ 	}
+ 	priv->profile = new_profile;
+ 	priv->ppriv = new_ppriv;
+ 	err = new_profile->init(priv->mdev, priv->netdev);
+ 	if (err)
+ 		return err;
+ 	err = mlx5e_attach_netdev(priv);
+ 	if (err)
+ 		new_profile->cleanup(priv);
+ 	return err;
+ }
+ 
+ int mlx5e_netdev_change_profile(struct mlx5e_priv *priv,
+ 				const struct mlx5e_profile *new_profile, void *new_ppriv)
+ {
+ 	unsigned int new_max_nch = mlx5e_calc_max_nch(priv, new_profile);
+ 	const struct mlx5e_profile *orig_profile = priv->profile;
+ 	void *orig_ppriv = priv->ppriv;
+ 	int err, rollback_err;
+ 
+ 	/* sanity */
+ 	if (new_max_nch != priv->max_nch) {
+ 		netdev_warn(priv->netdev,
+ 			    "%s: Replacing profile with different max channles\n",
+ 			    __func__);
+ 		return -EINVAL;
+ 	}
+ 
+ 	/* cleanup old profile */
+ 	mlx5e_detach_netdev(priv);
+ 	priv->profile->cleanup(priv);
+ 	mlx5e_netdev_cleanup(priv->netdev, priv);
+ 
+ 	err = mlx5e_netdev_attach_profile(priv, new_profile, new_ppriv);
+ 	if (err) { /* roll back to original profile */
+ 		netdev_warn(priv->netdev, "%s: new profile init failed, %d\n",
+ 			    __func__, err);
+ 		goto rollback;
+ 	}
+ 
+ 	return 0;
+ 
+ rollback:
+ 	rollback_err = mlx5e_netdev_attach_profile(priv, orig_profile, orig_ppriv);
+ 	if (rollback_err) {
+ 		netdev_err(priv->netdev,
+ 			   "%s: failed to rollback to orig profile, %d\n",
+ 			   __func__, rollback_err);
+ 	}
+ 	return err;
+ }
+ 
  void mlx5e_destroy_netdev(struct mlx5e_priv *priv)
  {
 +	const struct mlx5e_profile *profile = priv->profile;
  	struct net_device *netdev = priv->netdev;
  
 -	mlx5e_netdev_cleanup(netdev, priv);
 +	if (profile->cleanup)
 +		profile->cleanup(priv);
  	free_netdev(netdev);
  }
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 18a3e93dfbd1,c8a0f4c88d4b..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -686,7 -684,10 +686,11 @@@ static void mlx5e_build_rep_params(stru
  					 MLX5_CQ_PERIOD_MODE_START_FROM_CQE :
  					 MLX5_CQ_PERIOD_MODE_START_FROM_EQE;
  
++<<<<<<< HEAD
++=======
+ 	priv->max_nch = mlx5e_calc_max_nch(priv, priv->profile);
++>>>>>>> c4d7eb57687f (net/mxl5e: Add change profile method)
  	params = &priv->channels.params;
 -
 -	params->num_channels = MLX5E_REP_PARAMS_DEF_NUM_CHANNELS;
  	params->hard_mtu    = MLX5E_ETH_HARD_MTU;
  	params->sw_mtu      = netdev->mtu;
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
