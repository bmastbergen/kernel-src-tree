xfs: Split apart xfs_attr_leaf_addname

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Allison Collins <allison.henderson@oracle.com>
commit 7c93d4a8fc39cf209c6a67ff26fc83646c9f7d61
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/7c93d4a8.failed

Split out new helper function xfs_attr_leaf_try_add from
xfs_attr_leaf_addname. Because new delayed attribute routines cannot
roll transactions, we split off the parts of xfs_attr_leaf_addname that
we can use, and move the commit into the calling function.

	Signed-off-by: Allison Collins <allison.henderson@oracle.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Chandan Rajendra <chandanrlinux@gmail.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Acked-by: Dave Chinner <dchinner@redhat.com>
(cherry picked from commit 7c93d4a8fc39cf209c6a67ff26fc83646c9f7d61)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_attr.c
diff --cc fs/xfs/libxfs/xfs_attr.c
index fc6f3556f9cb,2fbd3cbf8849..000000000000
--- a/fs/xfs/libxfs/xfs_attr.c
+++ b/fs/xfs/libxfs/xfs_attr.c
@@@ -473,29 -528,21 +494,38 @@@ xfs_attr_shortform_addname(xfs_da_args_
   *========================================================================*/
  
  /*
-  * Add a name to the leaf attribute list structure
+  * Tries to add an attribute to an inode in leaf form
   *
-  * This leaf block cannot have a "remote" value, we only call this routine
-  * if bmap_one_block() says there is only one block (ie: no remote blks).
+  * This function is meant to execute as part of a delayed operation and leaves
+  * the transaction handling to the caller.  On success the attribute is added
+  * and the inode and transaction are left dirty.  If there is not enough space,
+  * the attr data is converted to node format and -ENOSPC is returned. Caller is
+  * responsible for handling the dirty inode and transaction or adding the attr
+  * in node format.
   */
  STATIC int
- xfs_attr_leaf_addname(
- 	struct xfs_da_args	*args)
+ xfs_attr_leaf_try_add(
+ 	struct xfs_da_args	*args,
+ 	struct xfs_buf		*bp)
  {
++<<<<<<< HEAD
 +	struct xfs_inode	*dp;
 +	struct xfs_buf		*bp;
 +	int			retval, error, forkoff;
 +
 +	trace_xfs_attr_leaf_addname(args);
++=======
+ 	int			retval, error;
++>>>>>>> 7c93d4a8fc39 (xfs: Split apart xfs_attr_leaf_addname)
 +
 +	/*
 +	 * Read the (only) block in the attribute list in.
 +	 */
 +	dp = args->dp;
 +	args->blkno = 0;
 +	error = xfs_attr3_leaf_read(args->trans, args->dp, args->blkno, &bp);
 +	if (error)
 +		return error;
  
  	/*
  	 * Look up the given attribute in the leaf block.  Figure out if
@@@ -654,11 -711,29 +692,8 @@@ xfs_attr_leaf_addname
  		error = xfs_attr3_leaf_clearflag(args);
  	}
  	return error;
- out_brelse:
- 	xfs_trans_brelse(args->trans, bp);
- 	return retval;
  }
  
 -/*
 - * Return EEXIST if attr is found, or ENOATTR if not
 - */
 -STATIC int
 -xfs_attr_leaf_hasname(
 -	struct xfs_da_args	*args,
 -	struct xfs_buf		**bp)
 -{
 -	int                     error = 0;
 -
 -	error = xfs_attr3_leaf_read(args->trans, args->dp, 0, bp);
 -	if (error)
 -		return error;
 -
 -	error = xfs_attr3_leaf_lookup_int(*bp, args);
 -	if (error != -ENOATTR && error != -EEXIST)
 -		xfs_trans_brelse(args->trans, *bp);
 -
 -	return error;
 -}
 -
  /*
   * Remove a name from the leaf attribute list structure
   *
* Unmerged path fs/xfs/libxfs/xfs_attr.c
