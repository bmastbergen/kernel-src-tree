userfaultfd: selftests: fix SIGSEGV if huge mmap fails

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Axel Rasmussen <axelrasmussen@google.com>
commit 573a259336f8c57739bdaf035aa7abbae7d9a713
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/573a2593.failed

The error handling in hugetlb_allocate_area() was incorrect for the
hugetlb_shared test case.

Previously the behavior was:

- mmap a hugetlb area
  - If this fails, set the pointer to NULL, and carry on
- mmap an alias of the same hugetlb fd
  - If this fails, munmap the original area

If the original mmap failed, it's likely the second one did too.  If
both failed, we'd blindly try to munmap a NULL pointer, causing a
SIGSEGV.  Instead, "goto fail" so we return before trying to mmap the
alias.

This issue can be hit "in real life" by forgetting to set
/proc/sys/vm/nr_hugepages (leaving it at 0), and then trying to run the
hugetlb_shared test.

Another small improvement is, when the original mmap fails, don't just
print "it failed": perror(), so we can see *why*.  :)

	Signed-off-by: Axel Rasmussen <axelrasmussen@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: Shuah Khan <shuah@kernel.org>
	Cc: Peter Xu <peterx@redhat.com>
	Cc: Joe Perches <joe@perches.com>
	Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
	Cc: Andrea Arcangeli <aarcange@redhat.com>
	Cc: David Alan Gilbert <dgilbert@redhat.com>
Link: https://lkml.kernel.org/r/20201204203443.2714693-1-axelrasmussen@google.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 573a259336f8c57739bdaf035aa7abbae7d9a713)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/vm/userfaultfd.c
diff --cc tools/testing/selftests/vm/userfaultfd.c
index fa362fe311e3,c4425597769a..000000000000
--- a/tools/testing/selftests/vm/userfaultfd.c
+++ b/tools/testing/selftests/vm/userfaultfd.c
@@@ -229,12 -227,11 +229,18 @@@ static void hugetlb_allocate_area(void 
  				  huge_fd, *alloc_area == area_src ? 0 :
  				  nr_pages * page_size);
  		if (area_alias == MAP_FAILED) {
++<<<<<<< HEAD
 +			if (munmap(*alloc_area, nr_pages * page_size) < 0)
 +				perror("hugetlb munmap"), exit(1);
 +			*alloc_area = NULL;
 +			return;
++=======
+ 			perror("mmap of hugetlb file alias failed");
+ 			goto fail_munmap;
++>>>>>>> 573a259336f8 (userfaultfd: selftests: fix SIGSEGV if huge mmap fails)
  		}
  	}
+ 
  	if (*alloc_area == area_src) {
  		huge_fd_off0 = *alloc_area;
  		alloc_area_alias = &area_src_alias;
* Unmerged path tools/testing/selftests/vm/userfaultfd.c
