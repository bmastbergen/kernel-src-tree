mm/hmm: remove the mask variable in hmm_vma_walk_hugetlb_entry

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 05c23af4a1b34df5838ebab2da1d6f802cf5ece3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/05c23af4.failed

The pagewalk code already passes the value as the hmask parameter.

Link: https://lore.kernel.org/r/20190806160554.14046-9-hch@lst.de
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 05c23af4a1b34df5838ebab2da1d6f802cf5ece3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/hmm.c
diff --cc mm/hmm.c
index fc893fc2d462,4807f4b16736..000000000000
--- a/mm/hmm.c
+++ b/mm/hmm.c
@@@ -816,7 -778,7 +816,11 @@@ static int hmm_vma_walk_hugetlb_entry(p
  				      struct mm_walk *walk)
  {
  #ifdef CONFIG_HUGETLB_PAGE
++<<<<<<< HEAD
 +	unsigned long addr = start, i, pfn, mask, size, pfn_inc;
++=======
+ 	unsigned long addr = start, i, pfn;
++>>>>>>> 05c23af4a1b3 (mm/hmm: remove the mask variable in hmm_vma_walk_hugetlb_entry)
  	struct hmm_vma_walk *hmm_vma_walk = walk->private;
  	struct hmm_range *range = hmm_vma_walk->range;
  	struct vm_area_struct *vma = walk->vma;
@@@ -827,20 -788,6 +830,23 @@@
  	pte_t entry;
  	int ret = 0;
  
++<<<<<<< HEAD
 +	size = huge_page_size(h);
 +	mask = size - 1;
 +	if (range->page_shift != PAGE_SHIFT) {
 +		/* Make sure we are looking at a full page. */
 +		if (start & mask)
 +			return -EINVAL;
 +		if (end < (start + size))
 +			return -EINVAL;
 +		pfn_inc = size >> PAGE_SHIFT;
 +	} else {
 +		pfn_inc = 1;
 +		size = PAGE_SIZE;
 +	}
 +
++=======
++>>>>>>> 05c23af4a1b3 (mm/hmm: remove the mask variable in hmm_vma_walk_hugetlb_entry)
  	ptl = huge_pte_lock(hstate_vma(vma), walk->mm, pte);
  	entry = huge_ptep_get(pte);
  
@@@ -856,8 -803,8 +862,13 @@@
  		goto unlock;
  	}
  
++<<<<<<< HEAD
 +	pfn = pte_pfn(entry) + ((start & mask) >> range->page_shift);
 +	for (; addr < end; addr += size, i++, pfn += pfn_inc)
++=======
+ 	pfn = pte_pfn(entry) + ((start & ~hmask) >> PAGE_SHIFT);
+ 	for (; addr < end; addr += PAGE_SIZE, i++, pfn++)
++>>>>>>> 05c23af4a1b3 (mm/hmm: remove the mask variable in hmm_vma_walk_hugetlb_entry)
  		range->pfns[i] = hmm_device_entry_from_pfn(range, pfn) |
  				 cpu_flags;
  	hmm_vma_walk->last = end;
* Unmerged path mm/hmm.c
