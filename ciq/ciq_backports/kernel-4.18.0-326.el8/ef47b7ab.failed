drm/i915: switch KBL to the new stepping scheme

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Jani Nikula <jani.nikula@intel.com>
commit ef47b7ab1faa6d32af351690e0bf664f6c6721b8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/ef47b7ab.failed

Add new symbolic names for revision ids, and convert KBL revids to use
them via the new stepping check macros.

This also fixes theoretical out of bounds access to kbl_revids array.

v3: upgrade dbg to warn on unknown revid (José)

v2: Rename stepping->step

	Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/79b6c48211c6b214165391d350d556bad748f747.1616764798.git.jani.nikula@intel.com
(cherry picked from commit ef47b7ab1faa6d32af351690e0bf664f6c6721b8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gt/gen8_engine_cs.c
#	drivers/gpu/drm/i915/gt/intel_workarounds.c
#	drivers/gpu/drm/i915/i915_drv.c
#	drivers/gpu/drm/i915/i915_drv.h
#	drivers/gpu/drm/i915/intel_pm.c
#	drivers/gpu/drm/i915/intel_step.c
#	drivers/gpu/drm/i915/intel_step.h
diff --cc drivers/gpu/drm/i915/gt/intel_workarounds.c
index 9cc4a89424f5,a6ef97c67d9a..000000000000
--- a/drivers/gpu/drm/i915/gt/intel_workarounds.c
+++ b/drivers/gpu/drm/i915/gt/intel_workarounds.c
@@@ -470,13 -482,13 +470,19 @@@ static void kbl_ctx_workarounds_init(st
  	gen9_ctx_workarounds_init(engine, wal);
  
  	/* WaToEnableHwFixForPushConstHWBug:kbl */
++<<<<<<< HEAD
 +	if (IS_KBL_REVID(i915, KBL_REVID_C0, REVID_FOREVER))
 +		WA_SET_BIT_MASKED(COMMON_SLICE_CHICKEN2,
 +				  GEN8_SBE_DISABLE_REPLAY_BUF_OPTIMIZATION);
++=======
+ 	if (IS_KBL_GT_STEP(i915, STEP_C0, STEP_FOREVER))
+ 		wa_masked_en(wal, COMMON_SLICE_CHICKEN2,
+ 			     GEN8_SBE_DISABLE_REPLAY_BUF_OPTIMIZATION);
++>>>>>>> ef47b7ab1faa (drm/i915: switch KBL to the new stepping scheme)
  
  	/* WaDisableSbeCacheDispatchPortSharing:kbl */
 -	wa_masked_en(wal, GEN7_HALF_SLICE_CHICKEN1,
 -		     GEN7_SBE_SS_CACHE_DISPATCH_PORT_SHARING_DISABLE);
 +	WA_SET_BIT_MASKED(GEN7_HALF_SLICE_CHICKEN1,
 +			  GEN7_SBE_SS_CACHE_DISPATCH_PORT_SHARING_DISABLE);
  }
  
  static void glk_ctx_workarounds_init(struct intel_engine_cs *engine,
@@@ -1008,7 -900,7 +1014,11 @@@ kbl_gt_workarounds_init(struct drm_i915
  	gen9_gt_workarounds_init(i915, wal);
  
  	/* WaDisableDynamicCreditSharing:kbl */
++<<<<<<< HEAD
 +	if (IS_KBL_REVID(i915, 0, KBL_REVID_B0))
++=======
+ 	if (IS_KBL_GT_STEP(i915, 0, STEP_B0))
++>>>>>>> ef47b7ab1faa (drm/i915: switch KBL to the new stepping scheme)
  		wa_write_or(wal,
  			    GAMT_CHKN_BIT_REG,
  			    GAMT_CHKN_DISABLE_DYNAMIC_CREDIT_SHARING);
@@@ -1924,7 -2022,7 +1934,11 @@@ xcs_engine_wa_init(struct intel_engine_
  	struct drm_i915_private *i915 = engine->i915;
  
  	/* WaKBLVECSSemaphoreWaitPoll:kbl */
++<<<<<<< HEAD
 +	if (IS_KBL_REVID(i915, KBL_REVID_A0, KBL_REVID_E0)) {
++=======
+ 	if (IS_KBL_GT_STEP(i915, STEP_A0, STEP_E0)) {
++>>>>>>> ef47b7ab1faa (drm/i915: switch KBL to the new stepping scheme)
  		wa_write(wal,
  			 RING_SEMA_WAIT_POLL(engine->mmio_base),
  			 1);
diff --cc drivers/gpu/drm/i915/i915_drv.c
index 057504df6f80,8bd80a46ba0a..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@@ -394,7 -272,7 +394,11 @@@ static void intel_detect_preproduction_
  	pre |= IS_HSW_EARLY_SDV(dev_priv);
  	pre |= IS_SKL_REVID(dev_priv, 0, SKL_REVID_F0);
  	pre |= IS_BXT_REVID(dev_priv, 0, BXT_REVID_B_LAST);
++<<<<<<< HEAD
 +	pre |= IS_KBL_REVID(dev_priv, 0, KBL_REVID_A0);
++=======
+ 	pre |= IS_KBL_GT_STEP(dev_priv, 0, STEP_A0);
++>>>>>>> ef47b7ab1faa (drm/i915: switch KBL to the new stepping scheme)
  	pre |= IS_GLK_REVID(dev_priv, 0, GLK_REVID_A2);
  
  	if (pre) {
diff --cc drivers/gpu/drm/i915/i915_drv.h
index 9206a6040183,5dd1b1852f86..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@@ -1525,14 -1467,10 +1525,21 @@@ IS_SUBPLATFORM(const struct drm_i915_pr
  #define IS_BXT_REVID(dev_priv, since, until) \
  	(IS_BROXTON(dev_priv) && IS_REVID(dev_priv, since, until))
  
++<<<<<<< HEAD
 +#define KBL_REVID_A0		0x0
 +#define KBL_REVID_B0		0x1
 +#define KBL_REVID_C0		0x2
 +#define KBL_REVID_D0		0x3
 +#define KBL_REVID_E0		0x4
 +
 +#define IS_KBL_REVID(dev_priv, since, until) \
 +	(IS_KABYLAKE(dev_priv) && IS_REVID(dev_priv, since, until))
++=======
+ #define IS_KBL_GT_STEP(dev_priv, since, until) \
+ 	(IS_KABYLAKE(dev_priv) && IS_GT_STEP(dev_priv, since, until))
+ #define IS_KBL_DISPLAY_STEP(dev_priv, since, until) \
+ 	(IS_KABYLAKE(dev_priv) && IS_DISPLAY_STEP(dev_priv, since, until))
++>>>>>>> ef47b7ab1faa (drm/i915: switch KBL to the new stepping scheme)
  
  #define GLK_REVID_A0		0x0
  #define GLK_REVID_A1		0x1
diff --cc drivers/gpu/drm/i915/intel_pm.c
index e1253a1e2a4f,e2dd3140eb0b..000000000000
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@@ -7209,14 -7228,18 +7209,24 @@@ static void kbl_init_clock_gating(struc
  {
  	gen9_init_clock_gating(dev_priv);
  
 -	/* WAC6entrylatency:kbl */
 -	intel_uncore_write(&dev_priv->uncore, FBC_LLC_READ_CTRL, intel_uncore_read(&dev_priv->uncore, FBC_LLC_READ_CTRL) |
 -		   FBC_LLC_FULLY_OPEN);
 -
  	/* WaDisableSDEUnitClockGating:kbl */
++<<<<<<< HEAD
 +	if (IS_KBL_REVID(dev_priv, 0, KBL_REVID_B0))
 +		I915_WRITE(GEN8_UCGCTL6, I915_READ(GEN8_UCGCTL6) |
 +			   GEN8_SDEUNIT_CLOCK_GATE_DISABLE);
 +
 +	/* WaDisableGamClockGating:kbl */
 +	if (IS_KBL_REVID(dev_priv, 0, KBL_REVID_B0))
 +		I915_WRITE(GEN6_UCGCTL1, I915_READ(GEN6_UCGCTL1) |
++=======
+ 	if (IS_KBL_GT_STEP(dev_priv, 0, STEP_B0))
+ 		intel_uncore_write(&dev_priv->uncore, GEN8_UCGCTL6, intel_uncore_read(&dev_priv->uncore, GEN8_UCGCTL6) |
+ 			   GEN8_SDEUNIT_CLOCK_GATE_DISABLE);
+ 
+ 	/* WaDisableGamClockGating:kbl */
+ 	if (IS_KBL_GT_STEP(dev_priv, 0, STEP_B0))
+ 		intel_uncore_write(&dev_priv->uncore, GEN6_UCGCTL1, intel_uncore_read(&dev_priv->uncore, GEN6_UCGCTL1) |
++>>>>>>> ef47b7ab1faa (drm/i915: switch KBL to the new stepping scheme)
  			   GEN6_GAMUNIT_CLOCK_GATE_DISABLE);
  
  	/*
* Unmerged path drivers/gpu/drm/i915/gt/gen8_engine_cs.c
* Unmerged path drivers/gpu/drm/i915/intel_step.c
* Unmerged path drivers/gpu/drm/i915/intel_step.h
* Unmerged path drivers/gpu/drm/i915/gt/gen8_engine_cs.c
* Unmerged path drivers/gpu/drm/i915/gt/intel_workarounds.c
* Unmerged path drivers/gpu/drm/i915/i915_drv.c
* Unmerged path drivers/gpu/drm/i915/i915_drv.h
* Unmerged path drivers/gpu/drm/i915/intel_pm.c
* Unmerged path drivers/gpu/drm/i915/intel_step.c
* Unmerged path drivers/gpu/drm/i915/intel_step.h
