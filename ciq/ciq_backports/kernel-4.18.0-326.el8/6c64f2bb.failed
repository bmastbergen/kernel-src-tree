mm/hmm: hmm_range_fault() NULL pointer bug

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Ralph Campbell <rcampbell@nvidia.com>
commit 6c64f2bbe79cf3b770ac60ae79442322bd76d55e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/6c64f2bb.failed

Although hmm_range_fault() calls find_vma() to make sure that a vma exists
before calling walk_page_range(), hmm_vma_walk_hole() can still be called
with walk->vma == NULL if the start and end address are not contained
within the vma range.

 hmm_range_fault() /* calls find_vma() but no range check */
  walk_page_range() /* calls find_vma(), sets walk->vma = NULL */
   __walk_page_range()
    walk_pgd_range()
     walk_p4d_range()
      walk_pud_range()
       hmm_vma_walk_hole()
        hmm_vma_walk_hole_()
         hmm_vma_do_fault()
          handle_mm_fault(vma=0)

Link: https://lore.kernel.org/r/20190823221753.2514-2-rcampbell@nvidia.com
	Signed-off-by: Ralph Campbell <rcampbell@nvidia.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 6c64f2bbe79cf3b770ac60ae79442322bd76d55e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/hmm.c
diff --cc mm/hmm.c
index e19a0812813a,29371485fe94..000000000000
--- a/mm/hmm.c
+++ b/mm/hmm.c
@@@ -310,8 -229,14 +310,19 @@@ static int hmm_vma_do_fault(struct mm_w
  	struct vm_area_struct *vma = walk->vma;
  	vm_fault_t ret;
  
++<<<<<<< HEAD
 +	flags |= hmm_vma_walk->block ? 0 : FAULT_FLAG_ALLOW_RETRY;
 +	flags |= write_fault ? FAULT_FLAG_WRITE : 0;
++=======
+ 	if (!vma)
+ 		goto err;
+ 
+ 	if (hmm_vma_walk->flags & HMM_FAULT_ALLOW_RETRY)
+ 		flags |= FAULT_FLAG_ALLOW_RETRY;
+ 	if (write_fault)
+ 		flags |= FAULT_FLAG_WRITE;
+ 
++>>>>>>> 6c64f2bbe79c (mm/hmm: hmm_range_fault() NULL pointer bug)
  	ret = handle_mm_fault(vma, addr, flags);
  	if (ret & VM_FAULT_RETRY) {
  		/* Note, handle_mm_fault did up_read(&mm->mmap_sem)) */
* Unmerged path mm/hmm.c
