net/mlx5e: Fill mlx5e_create_cq_param in a function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Maxim Mikityanskiy <maximmi@mellanox.com>
commit 2f6b379cca4cdf5e04f759c2a15933f82dc6ab0b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/2f6b379c.failed

Create a function to fill the fields of struct mlx5e_create_cq_param
based on a channel. The purpose is code reuse between normal CQs, XSK
CQs and the upcoming QoS CQs.

	Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 2f6b379cca4cdf5e04f759c2a15933f82dc6ab0b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/xsk/setup.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/xsk/setup.c
index f95905fc4979,d87c345878d3..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/xsk/setup.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/xsk/setup.c
@@@ -49,8 -49,11 +49,14 @@@ int mlx5e_open_xsk(struct mlx5e_priv *p
  		   struct mlx5e_channel *c)
  {
  	struct mlx5e_channel_param *cparam;
+ 	struct mlx5e_create_cq_param ccp;
  	int err;
  
++<<<<<<< HEAD
++=======
+ 	mlx5e_build_create_cq_param(&ccp, c);
+ 
++>>>>>>> 2f6b379cca4c (net/mlx5e: Fill mlx5e_create_cq_param in a function)
  	if (!mlx5e_validate_xsk_param(params, xsk, priv->mdev))
  		return -EINVAL;
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 2fb9c80307ea,03831650f655..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -1816,9 -1821,13 +1826,19 @@@ static int mlx5e_open_queues(struct mlx
  			     struct mlx5e_channel_param *cparam)
  {
  	struct dim_cq_moder icocq_moder = {0, 0};
++<<<<<<< HEAD
 +	int err;
 +
 +	err = mlx5e_open_cq(c, icocq_moder, &cparam->async_icosq.cqp, &c->async_icosq.cq);
++=======
+ 	struct mlx5e_create_cq_param ccp;
+ 	int err;
+ 
+ 	mlx5e_build_create_cq_param(&ccp, c);
+ 
+ 	err = mlx5e_open_cq(c->priv, icocq_moder, &cparam->icosq.cqp, &ccp,
+ 			    &c->async_icosq.cq);
++>>>>>>> 2f6b379cca4c (net/mlx5e: Fill mlx5e_create_cq_param in a function)
  	if (err)
  		return err;
  
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/params.h b/drivers/net/ethernet/mellanox/mlx5/core/en/params.h
index 187007ad3349..753a74cdb7ae 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/params.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/params.h
@@ -102,6 +102,7 @@ u16 mlx5e_get_rq_headroom(struct mlx5_core_dev *mdev,
 
 /* Build queue parameters */
 
+void mlx5e_build_create_cq_param(struct mlx5e_create_cq_param *ccp, struct mlx5e_channel *c);
 void mlx5e_build_rq_param(struct mlx5e_priv *priv,
 			  struct mlx5e_params *params,
 			  struct mlx5e_xsk_param *xsk,
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/xsk/setup.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
