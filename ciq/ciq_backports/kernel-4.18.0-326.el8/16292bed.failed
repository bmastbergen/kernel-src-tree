platform/x86: intel_pmc_core: Add Atom based Jasper Lake (JSL) platform support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Gayatri Kammela <gayatri.kammela@intel.com>
commit 16292bed9c56a20715d942fd5d9e025f01fa65fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/16292bed.failed

Add Jasper Lake to the list of the platforms that intel_pmc_core
driver supports for pmc_core device.

Just like Ice Lake, Tiger Lake and Elkhart Lake, Jasper Lake can also
reuse all the Cannon Lake PCH IPs. Also, it uses the same PCH IPs of
Tiger Lake, no additional effort is needed to enable but to simply reuse
them.

	Cc: Srinivas Pandruvada <srinivas.pandruvada@intel.com>
	Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Cc: David Box <david.e.box@intel.com>
	Signed-off-by: Gayatri Kammela <gayatri.kammela@intel.com>
	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
(cherry picked from commit 16292bed9c56a20715d942fd5d9e025f01fa65fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/intel_pmc_core.c
diff --cc drivers/platform/x86/intel_pmc_core.c
index aa1e8688e919,f85c112f8c2c..000000000000
--- a/drivers/platform/x86/intel_pmc_core.c
+++ b/drivers/platform/x86/intel_pmc_core.c
@@@ -193,8 -192,8 +193,13 @@@ static const struct pmc_bit_map cnp_pfe
  	{"SPE",                 BIT(5)},
  	{"Fuse",                BIT(6)},
  	/*
++<<<<<<< HEAD
 +	 * Reserved for Cannon Lake but valid for Ice Lake, Comet Lake
 +	 * and Tiger Lake.
++=======
+ 	 * Reserved for Cannon Lake but valid for Ice Lake, Comet Lake,
+ 	 * Tiger Lake, Elkhart Lake and Jasper Lake.
++>>>>>>> 16292bed9c56 (platform/x86: intel_pmc_core: Add Atom based Jasper Lake (JSL) platform support)
  	 */
  	{"SBR8",		BIT(7)},
  
@@@ -240,8 -239,8 +245,13 @@@
  	{"HDA_PGD5",            BIT(3)},
  	{"HDA_PGD6",            BIT(4)},
  	/*
++<<<<<<< HEAD
 +	 * Reserved for Cannon Lake but valid for Ice Lake, Comet Lake
 +	 * and Tiger Lake.
++=======
+ 	 * Reserved for Cannon Lake but valid for Ice Lake, Comet Lake,
+ 	 * Tiger Lake, ELkhart Lake and Jasper Lake.
++>>>>>>> 16292bed9c56 (platform/x86: intel_pmc_core: Add Atom based Jasper Lake (JSL) platform support)
  	 */
  	{"PSF6",		BIT(5)},
  	{"PSF7",		BIT(6)},
@@@ -274,7 -273,7 +284,11 @@@ static const struct pmc_bit_map *ext_ic
  };
  
  static const struct pmc_bit_map tgl_pfear_map[] = {
++<<<<<<< HEAD
 +	/* Tiger Lake generation onwards only */
++=======
+ 	/* Tiger Lake, Elkhart Lake and Jasper Lake generation onwards only */
++>>>>>>> 16292bed9c56 (platform/x86: intel_pmc_core: Add Atom based Jasper Lake (JSL) platform support)
  	{"PSF9",		BIT(0)},
  	{"RES_66",		BIT(1)},
  	{"RES_67",		BIT(2)},
@@@ -1116,36 -859,31 +1130,52 @@@ static void pmc_core_dbgfs_register(str
  		debugfs_create_bool("slp_s0_dbg_latch", 0644,
  				    dir, &slps0_dbg_latch);
  	}
 -}
 -#else
 -static inline void pmc_core_dbgfs_register(struct pmc_dev *pmcdev)
 -{
 -}
  
 -static inline void pmc_core_dbgfs_unregister(struct pmc_dev *pmcdev)
 -{
 +	if (pmcdev->map->lpm_en_offset) {
 +		debugfs_create_file("substate_residencies", 0444,
 +				    pmcdev->dbgfs_dir, pmcdev,
 +				    &pmc_core_substate_res_fops);
 +	}
 +
 +	if (pmcdev->map->lpm_status_offset) {
 +		debugfs_create_file("substate_status_registers", 0444,
 +				    pmcdev->dbgfs_dir, pmcdev,
 +				    &pmc_core_substate_sts_regs_fops);
 +		debugfs_create_file("substate_live_status_registers", 0444,
 +				    pmcdev->dbgfs_dir, pmcdev,
 +				    &pmc_core_substate_l_sts_regs_fops);
 +	}
  }
 -#endif /* CONFIG_DEBUG_FS */
  
  static const struct x86_cpu_id intel_pmc_core_ids[] = {
++<<<<<<< HEAD
 +	X86_MATCH_INTEL_FAM6_MODEL(SKYLAKE_L,		&spt_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(SKYLAKE,		&spt_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(KABYLAKE_L,		&spt_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(KABYLAKE,		&spt_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(CANNONLAKE_L,	&cnp_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_L,		&icl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_NNPI,	&icl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(COMETLAKE,		&cnp_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(COMETLAKE_L,		&cnp_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE_L,		&tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE,		&tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ROCKETLAKE,		&tgl_reg_map),
++=======
+ 	INTEL_CPU_FAM6(SKYLAKE_L, spt_reg_map),
+ 	INTEL_CPU_FAM6(SKYLAKE, spt_reg_map),
+ 	INTEL_CPU_FAM6(KABYLAKE_L, spt_reg_map),
+ 	INTEL_CPU_FAM6(KABYLAKE, spt_reg_map),
+ 	INTEL_CPU_FAM6(CANNONLAKE_L, cnp_reg_map),
+ 	INTEL_CPU_FAM6(ICELAKE_L, icl_reg_map),
+ 	INTEL_CPU_FAM6(ICELAKE_NNPI, icl_reg_map),
+ 	INTEL_CPU_FAM6(COMETLAKE, cnp_reg_map),
+ 	INTEL_CPU_FAM6(COMETLAKE_L, cnp_reg_map),
+ 	INTEL_CPU_FAM6(TIGERLAKE_L, tgl_reg_map),
+ 	INTEL_CPU_FAM6(TIGERLAKE, tgl_reg_map),
+ 	INTEL_CPU_FAM6(ATOM_TREMONT, tgl_reg_map),
+ 	INTEL_CPU_FAM6(ATOM_TREMONT_L, tgl_reg_map),
++>>>>>>> 16292bed9c56 (platform/x86: intel_pmc_core: Add Atom based Jasper Lake (JSL) platform support)
  	{}
  };
  
* Unmerged path drivers/platform/x86/intel_pmc_core.c
