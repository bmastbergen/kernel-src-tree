dma-mapping: move debug configuration options to kernel/dma

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit 70ca7ba2dbe4f1858b85e30269c8408a8bb8f272
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/70ca7ba2.failed

This is a follow up to the commit cf65a0f6f6ff

  ("dma-mapping: move all DMA mapping code to kernel/dma")

which moved source code of DMA API to kernel/dma folder. Since there is
no file left in the lib that require DMA API debugging options move the
latter to kernel/dma as well.

	Cc: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 70ca7ba2dbe4f1858b85e30269c8408a8bb8f272)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/dma/Kconfig
#	lib/Kconfig.debug
diff --cc kernel/dma/Kconfig
index 351e3cb0b8ed,61cebea36d89..000000000000
--- a/kernel/dma/Kconfig
+++ b/kernel/dma/Kconfig
@@@ -90,4 -53,39 +90,43 @@@ config DMA_REMA
  config DMA_DIRECT_REMAP
  	bool
  	select DMA_REMAP
++<<<<<<< HEAD
 +	select DMA_COHERENT_POOL
++=======
+ 
+ config DMA_API_DEBUG
+ 	bool "Enable debugging of DMA-API usage"
+ 	select NEED_DMA_MAP_STATE
+ 	help
+ 	  Enable this option to debug the use of the DMA API by device drivers.
+ 	  With this option you will be able to detect common bugs in device
+ 	  drivers like double-freeing of DMA mappings or freeing mappings that
+ 	  were never allocated.
+ 
+ 	  This also attempts to catch cases where a page owned by DMA is
+ 	  accessed by the cpu in a way that could cause data corruption.  For
+ 	  example, this enables cow_user_page() to check that the source page is
+ 	  not undergoing DMA.
+ 
+ 	  This option causes a performance degradation.  Use only if you want to
+ 	  debug device drivers and dma interactions.
+ 
+ 	  If unsure, say N.
+ 
+ config DMA_API_DEBUG_SG
+ 	bool "Debug DMA scatter-gather usage"
+ 	default y
+ 	depends on DMA_API_DEBUG
+ 	help
+ 	  Perform extra checking that callers of dma_map_sg() have respected the
+ 	  appropriate segment length/boundary limits for the given device when
+ 	  preparing DMA scatterlists.
+ 
+ 	  This is particularly likely to have been overlooked in cases where the
+ 	  dma_map_sg() API is used for general bulk mapping of pages rather than
+ 	  preparing literal scatter-gather descriptors, where there is a risk of
+ 	  unexpected behaviour from DMA API implementations if the scatterlist
+ 	  is technically out-of-spec.
+ 
+ 	  If unsure, say N.
++>>>>>>> 70ca7ba2dbe4 (dma-mapping: move debug configuration options to kernel/dma)
diff --cc lib/Kconfig.debug
index ce5c50c5ead5,ef5d7c08e5b9..000000000000
--- a/lib/Kconfig.debug
+++ b/lib/Kconfig.debug
@@@ -1765,44 -1655,6 +1765,47 @@@ config PROVIDE_OHCI1394_DMA_INI
  
  	  See Documentation/debugging-via-ohci1394.txt for more information.
  
++<<<<<<< HEAD
 +config DMA_API_DEBUG
 +	bool "Enable debugging of DMA-API usage"
 +	select NEED_DMA_MAP_STATE
 +	help
 +	  Enable this option to debug the use of the DMA API by device drivers.
 +	  With this option you will be able to detect common bugs in device
 +	  drivers like double-freeing of DMA mappings or freeing mappings that
 +	  were never allocated.
 +
 +	  This also attempts to catch cases where a page owned by DMA is
 +	  accessed by the cpu in a way that could cause data corruption.  For
 +	  example, this enables cow_user_page() to check that the source page is
 +	  not undergoing DMA.
 +
 +	  This option causes a performance degradation.  Use only if you want to
 +	  debug device drivers and dma interactions.
 +
 +	  If unsure, say N.
 +
 +config DMA_API_DEBUG_SG
 +	bool "Debug DMA scatter-gather usage"
 +	default y
 +	depends on DMA_API_DEBUG
 +	help
 +	  Perform extra checking that callers of dma_map_sg() have respected the
 +	  appropriate segment length/boundary limits for the given device when
 +	  preparing DMA scatterlists.
 +
 +	  This is particularly likely to have been overlooked in cases where the
 +	  dma_map_sg() API is used for general bulk mapping of pages rather than
 +	  preparing literal scatter-gather descriptors, where there is a risk of
 +	  unexpected behaviour from DMA API implementations if the scatterlist
 +	  is technically out-of-spec.
 +
 +	  If unsure, say N.
 +
 +source "lib/kunit/Kconfig"
 +
++=======
++>>>>>>> 70ca7ba2dbe4 (dma-mapping: move debug configuration options to kernel/dma)
  menuconfig RUNTIME_TESTING_MENU
  	bool "Runtime Testing"
  	def_bool y
* Unmerged path kernel/dma/Kconfig
* Unmerged path lib/Kconfig.debug
