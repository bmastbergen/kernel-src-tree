net/mlx5e: reset XPS on error flow if netdev isn't registered yet

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Saeed Mahameed <saeedm@nvidia.com>
commit 77ecd10d0a8aaa6e4871d8c63626e4c9fc5e47db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/77ecd10d.failed

mlx5e_attach_netdev can be called prior to registering the netdevice:
Example stack:

ipoib_new_child_link ->
ipoib_intf_init->
rdma_init_netdev->
mlx5_rdma_setup_rn->

mlx5e_attach_netdev->
mlx5e_num_channels_changed ->
mlx5e_set_default_xps_cpumasks ->
netif_set_xps_queue ->
__netif_set_xps_queue -> kmalloc

If any later stage fails at any point after mlx5e_num_channels_changed()
returns, XPS allocated maps will never be freed as they
are only freed during netdev unregistration, which will never happen for
yet to be registered netdevs.

Fixes: 3909a12e7913 ("net/mlx5e: Fix configuration of XPS cpumasks and netdev queues in corner cases")
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
	Signed-off-by: Aya Levin <ayal@nvidia.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
(cherry picked from commit 77ecd10d0a8aaa6e4871d8c63626e4c9fc5e47db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index cefb35faad69,89937b055070..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -5438,6 -5219,21 +5438,24 @@@ err_free_netdev
  	return NULL;
  }
  
++<<<<<<< HEAD
++=======
+ static void mlx5e_update_features(struct net_device *netdev)
+ {
+ 	if (netdev->reg_state != NETREG_REGISTERED)
+ 		return; /* features will be updated on netdev registration */
+ 
+ 	rtnl_lock();
+ 	netdev_update_features(netdev);
+ 	rtnl_unlock();
+ }
+ 
+ static void mlx5e_reset_channels(struct net_device *netdev)
+ {
+ 	netdev_reset_tc(netdev);
+ }
+ 
++>>>>>>> 77ecd10d0a8a (net/mlx5e: reset XPS on error flow if netdev isn't registered yet)
  int mlx5e_attach_netdev(struct mlx5e_priv *priv)
  {
  	const bool take_rtnl = priv->netdev->reg_state == NETREG_REGISTERED;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
