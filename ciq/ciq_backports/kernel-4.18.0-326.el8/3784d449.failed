ALSA: usb-audio: Set sample rate for all sharing EPs on UAC1

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 3784d449d795ba11a92681bd22d183329f976421
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/3784d449.failed

The UAC2/3 sample rate setup is based on the clock node, which is
usually shared in the interface, and can't be re-setup without
deselecting the interface once, and that's how the current code
behaves.  OTOH, the sample rate setup of UAC1 is per endpoint, hence
we basically need to call for each endpoint usage even if those share
the same interface.

This patch fixes the behavior of UAC1 to call always
snd_usb_init_sample_rate() in snd_usb_endpoint_configure().

Fixes: bf6313a0ff76 ("ALSA: usb-audio: Refactor endpoint management")
Link: https://lore.kernel.org/r/20210118075816.25068-3-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 3784d449d795ba11a92681bd22d183329f976421)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/endpoint.c
diff --cc sound/usb/endpoint.c
index 208ac2aff462,8e568823c992..000000000000
--- a/sound/usb/endpoint.c
+++ b/sound/usb/endpoint.c
@@@ -1203,6 -1227,93 +1203,96 @@@ int snd_usb_endpoint_set_params(struct 
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * snd_usb_endpoint_configure: Configure the endpoint
+  *
+  * This function sets up the EP to be fully usable state.
+  * It's called either from hw_params or prepare callback.
+  * The function checks need_setup flag, and perfoms nothing unless needed,
+  * so it's safe to call this multiple times.
+  *
+  * This returns zero if unchanged, 1 if the configuration has changed,
+  * or a negative error code.
+  */
+ int snd_usb_endpoint_configure(struct snd_usb_audio *chip,
+ 			       struct snd_usb_endpoint *ep)
+ {
+ 	bool iface_first;
+ 	int err = 0;
+ 
+ 	mutex_lock(&chip->mutex);
+ 	if (WARN_ON(!ep->iface_ref))
+ 		goto unlock;
+ 	if (!ep->need_setup)
+ 		goto unlock;
+ 
+ 	/* If the interface has been already set up, just set EP parameters */
+ 	if (!ep->iface_ref->need_setup) {
+ 		/* sample rate setup of UAC1 is per endpoint, and we need
+ 		 * to update at each EP configuration
+ 		 */
+ 		if (ep->cur_audiofmt->protocol == UAC_VERSION_1) {
+ 			err = snd_usb_init_sample_rate(chip, ep->cur_audiofmt,
+ 						       ep->cur_rate);
+ 			if (err < 0)
+ 				goto unlock;
+ 		}
+ 		err = snd_usb_endpoint_set_params(chip, ep);
+ 		if (err < 0)
+ 			goto unlock;
+ 		goto done;
+ 	}
+ 
+ 	/* Need to deselect altsetting at first */
+ 	endpoint_set_interface(chip, ep, false);
+ 
+ 	/* Some UAC1 devices (e.g. Yamaha THR10) need the host interface
+ 	 * to be set up before parameter setups
+ 	 */
+ 	iface_first = ep->cur_audiofmt->protocol == UAC_VERSION_1;
+ 	if (iface_first) {
+ 		err = endpoint_set_interface(chip, ep, true);
+ 		if (err < 0)
+ 			goto unlock;
+ 	}
+ 
+ 	err = snd_usb_init_pitch(chip, ep->cur_audiofmt);
+ 	if (err < 0)
+ 		goto unlock;
+ 
+ 	err = snd_usb_init_sample_rate(chip, ep->cur_audiofmt, ep->cur_rate);
+ 	if (err < 0)
+ 		goto unlock;
+ 
+ 	err = snd_usb_endpoint_set_params(chip, ep);
+ 	if (err < 0)
+ 		goto unlock;
+ 
+ 	err = snd_usb_select_mode_quirk(chip, ep->cur_audiofmt);
+ 	if (err < 0)
+ 		goto unlock;
+ 
+ 	/* for UAC2/3, enable the interface altset here at last */
+ 	if (!iface_first) {
+ 		err = endpoint_set_interface(chip, ep, true);
+ 		if (err < 0)
+ 			goto unlock;
+ 	}
+ 
+ 	ep->iface_ref->need_setup = false;
+ 
+  done:
+ 	ep->need_setup = false;
+ 	err = 1;
+ 
+ unlock:
+ 	mutex_unlock(&chip->mutex);
+ 	return err;
+ }
+ 
++>>>>>>> 3784d449d795 (ALSA: usb-audio: Set sample rate for all sharing EPs on UAC1)
  /**
   * snd_usb_endpoint_start: start an snd_usb_endpoint
   *
* Unmerged path sound/usb/endpoint.c
