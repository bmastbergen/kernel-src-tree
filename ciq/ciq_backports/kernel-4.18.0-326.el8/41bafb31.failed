net/mlx5: Fix setting of devlink traps in switchdev mode

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Aya Levin <ayal@nvidia.com>
commit 41bafb31dcd58d834bdffa5db703f94fd2cec727
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/41bafb31.failed

Prevent setting of devlink traps on the uplink while in switchdev mode.
In this mode, it is the SW switch responsibility to handle both packets
with a mismatch in destination MAC or VLAN ID. Therefore, there are no
flow steering tables to trap undesirable packets and driver crashes upon
setting a trap.

Fixes: 241dc159391f ("net/mlx5: Notify on trap action by blocking event")
	Signed-off-by: Aya Levin <ayal@nvidia.com>
	Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
	Reviewed-by: Roi Dayan <roid@nvidia.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 41bafb31dcd58d834bdffa5db703f94fd2cec727)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/devlink.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/devlink.c
index 6a896d13c53b,d0f9d3cee97d..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/devlink.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/devlink.c
@@@ -151,6 -236,46 +151,49 @@@ static void mlx5_devlink_trap_fini(stru
  	kfree(dl_trap);
  }
  
++<<<<<<< HEAD
++=======
+ static int mlx5_devlink_trap_action_set(struct devlink *devlink,
+ 					const struct devlink_trap *trap,
+ 					enum devlink_trap_action action,
+ 					struct netlink_ext_ack *extack)
+ {
+ 	struct mlx5_core_dev *dev = devlink_priv(devlink);
+ 	enum devlink_trap_action action_orig;
+ 	struct mlx5_devlink_trap *dl_trap;
+ 	int err = 0;
+ 
+ 	if (is_mdev_switchdev_mode(dev)) {
+ 		NL_SET_ERR_MSG_MOD(extack, "Devlink traps can't be set in switchdev mode");
+ 		return -EOPNOTSUPP;
+ 	}
+ 
+ 	dl_trap = mlx5_find_trap_by_id(dev, trap->id);
+ 	if (!dl_trap) {
+ 		mlx5_core_err(dev, "Devlink trap: Set action on invalid trap id 0x%x", trap->id);
+ 		err = -EINVAL;
+ 		goto out;
+ 	}
+ 
+ 	if (action != DEVLINK_TRAP_ACTION_DROP && action != DEVLINK_TRAP_ACTION_TRAP) {
+ 		err = -EOPNOTSUPP;
+ 		goto out;
+ 	}
+ 
+ 	if (action == dl_trap->trap.action)
+ 		goto out;
+ 
+ 	action_orig = dl_trap->trap.action;
+ 	dl_trap->trap.action = action;
+ 	err = mlx5_blocking_notifier_call_chain(dev, MLX5_DRIVER_EVENT_TYPE_TRAP,
+ 						&dl_trap->trap);
+ 	if (err)
+ 		dl_trap->trap.action = action_orig;
+ out:
+ 	return err;
+ }
+ 
++>>>>>>> 41bafb31dcd5 (net/mlx5: Fix setting of devlink traps in switchdev mode)
  static const struct devlink_ops mlx5_devlink_ops = {
  #ifdef CONFIG_MLX5_ESWITCH
  	.eswitch_mode_set = mlx5_devlink_eswitch_mode_set,
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/devlink.c
