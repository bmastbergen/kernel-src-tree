ionic: count dma errors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Shannon Nelson <snelson@pensando.io>
commit 0f4e7f4e77b2078955f3cf78f0b818a0d2b898e1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/0f4e7f4e.failed

Increment our dma-error counter in a couple of spots
that were missed before.

	Signed-off-by: Shannon Nelson <snelson@pensando.io>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0f4e7f4e77b2078955f3cf78f0b818a0d2b898e1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/pensando/ionic/ionic_txrx.c
diff --cc drivers/net/ethernet/pensando/ionic/ionic_txrx.c
index c718ad9db767,42d29cd2ca47..000000000000
--- a/drivers/net/ethernet/pensando/ionic/ionic_txrx.c
+++ b/drivers/net/ethernet/pensando/ionic/ionic_txrx.c
@@@ -631,6 -605,55 +631,58 @@@ static dma_addr_t ionic_tx_map_frag(str
  	return dma_addr;
  }
  
++<<<<<<< HEAD
++=======
+ static int ionic_tx_map_skb(struct ionic_queue *q, struct sk_buff *skb,
+ 			    struct ionic_desc_info *desc_info)
+ {
+ 	struct ionic_buf_info *buf_info = desc_info->bufs;
+ 	struct ionic_tx_stats *stats = q_to_tx_stats(q);
+ 	struct device *dev = q->dev;
+ 	dma_addr_t dma_addr;
+ 	unsigned int nfrags;
+ 	skb_frag_t *frag;
+ 	int frag_idx;
+ 
+ 	dma_addr = ionic_tx_map_single(q, skb->data, skb_headlen(skb));
+ 	if (dma_mapping_error(dev, dma_addr)) {
+ 		stats->dma_map_err++;
+ 		return -EIO;
+ 	}
+ 	buf_info->dma_addr = dma_addr;
+ 	buf_info->len = skb_headlen(skb);
+ 	buf_info++;
+ 
+ 	frag = skb_shinfo(skb)->frags;
+ 	nfrags = skb_shinfo(skb)->nr_frags;
+ 	for (frag_idx = 0; frag_idx < nfrags; frag_idx++, frag++) {
+ 		dma_addr = ionic_tx_map_frag(q, frag, 0, skb_frag_size(frag));
+ 		if (dma_mapping_error(dev, dma_addr)) {
+ 			stats->dma_map_err++;
+ 			goto dma_fail;
+ 		}
+ 		buf_info->dma_addr = dma_addr;
+ 		buf_info->len = skb_frag_size(frag);
+ 		buf_info++;
+ 	}
+ 
+ 	desc_info->nbufs = 1 + nfrags;
+ 
+ 	return 0;
+ 
+ dma_fail:
+ 	/* unwind the frag mappings and the head mapping */
+ 	while (frag_idx > 0) {
+ 		frag_idx--;
+ 		buf_info--;
+ 		dma_unmap_page(dev, buf_info->dma_addr,
+ 			       buf_info->len, DMA_TO_DEVICE);
+ 	}
+ 	dma_unmap_single(dev, buf_info->dma_addr, buf_info->len, DMA_TO_DEVICE);
+ 	return -EIO;
+ }
+ 
++>>>>>>> 0f4e7f4e77b2 (ionic: count dma errors)
  static void ionic_tx_clean(struct ionic_queue *q,
  			   struct ionic_desc_info *desc_info,
  			   struct ionic_cq_info *cq_info,
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_txrx.c
