cpupower: Add CPUPOWER_CAP_AMD_HW_PSTATE cpuid caps flag

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Nathan Fontenot <nathan.fontenot@amd.com>
commit a0255a76bf3a78d322adfe4eb4e73eb83998f61a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/a0255a76.failed

Add a check in get_cpu_info() for the ability to read frequencies
from hardware and set the CPUPOWER_CAP_AMD_HW_PSTATE cpuid flag.
The cpuid flag is set when CPUID_80000007_EDX[7] is set,
which is all families >= 10h. The check excludes family 14h
because HW pstate reporting was not implemented on family 14h.

This is intended to reduce family checks in the main code paths.

	Signed-off-by: Nathan Fontenot <nathan.fontenot@amd.com>
	Reviewed-by: Robert Richter <rrichter@amd.com>
	Reviewed-by: skhan@linuxfoundation.org
	Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
(cherry picked from commit a0255a76bf3a78d322adfe4eb4e73eb83998f61a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/cpupower/utils/helpers/cpuid.c
diff --cc tools/power/cpupower/utils/helpers/cpuid.c
index 03b44a124d65,d577220a193b..000000000000
--- a/tools/power/cpupower/utils/helpers/cpuid.c
+++ b/tools/power/cpupower/utils/helpers/cpuid.c
@@@ -124,11 -125,18 +124,26 @@@ out
  	if (cpuid_level >= 6 && (cpuid_ecx(6) & 0x1))
  		cpu_info->caps |= CPUPOWER_CAP_APERF;
  
++<<<<<<< HEAD
 +	/* AMD Boost state enable/disable register */
 +	if (cpu_info->vendor == X86_VENDOR_AMD) {
 +		if (ext_cpuid_level >= 0x80000007 &&
 +		    (cpuid_edx(0x80000007) & (1 << 9)))
 +			cpu_info->caps |= CPUPOWER_CAP_AMD_CPB;
++=======
+ 	/* AMD or Hygon Boost state enable/disable register */
+ 	if (cpu_info->vendor == X86_VENDOR_AMD ||
+ 	    cpu_info->vendor == X86_VENDOR_HYGON) {
+ 		if (ext_cpuid_level >= 0x80000007) {
+ 			if (cpuid_edx(0x80000007) & (1 << 9))
+ 				cpu_info->caps |= CPUPOWER_CAP_AMD_CPB;
+ 
+ 			if ((cpuid_edx(0x80000007) & (1 << 7)) &&
+ 			    cpu_info->family != 0x14)
+ 				/* HW pstate was not implemented in family 0x14 */
+ 				cpu_info->caps |= CPUPOWER_CAP_AMD_HW_PSTATE;
+ 		}
++>>>>>>> a0255a76bf3a (cpupower: Add CPUPOWER_CAP_AMD_HW_PSTATE cpuid caps flag)
  
  		if (ext_cpuid_level >= 0x80000008 &&
  		    cpuid_ebx(0x80000008) & (1 << 4))
diff --git a/tools/power/cpupower/utils/helpers/amd.c b/tools/power/cpupower/utils/helpers/amd.c
index 9607ada5b29a..99c6451bd465 100644
--- a/tools/power/cpupower/utils/helpers/amd.c
+++ b/tools/power/cpupower/utils/helpers/amd.c
@@ -92,11 +92,10 @@ int decode_pstates(unsigned int cpu, unsigned int cpu_family,
 	union msr_pstate pstate;
 	unsigned long long val;
 
-	/* Only read out frequencies from HW when CPU might be boostable
-	   to keep the code as short and clean as possible.
-	   Otherwise frequencies are exported via ACPI tables.
-	*/
-	if (cpu_family < 0x10 || cpu_family == 0x14)
+	/* Only read out frequencies from HW if HW Pstate is supported,
+	 * otherwise frequencies are exported via ACPI tables.
+	 */
+	if (!(cpupower_cpu_info.caps & CPUPOWER_CAP_AMD_HW_PSTATE))
 		return -1;
 
 	if (read_msr(cpu, MSR_AMD_PSTATE_LIMIT, &val))
* Unmerged path tools/power/cpupower/utils/helpers/cpuid.c
diff --git a/tools/power/cpupower/utils/helpers/helpers.h b/tools/power/cpupower/utils/helpers/helpers.h
index 51ad213a4566..0f6d0a690b05 100644
--- a/tools/power/cpupower/utils/helpers/helpers.h
+++ b/tools/power/cpupower/utils/helpers/helpers.h
@@ -70,6 +70,7 @@ enum cpupower_cpu_vendor {X86_VENDOR_UNKNOWN = 0, X86_VENDOR_INTEL,
 #define CPUPOWER_CAP_IS_SNB		0x00000020
 #define CPUPOWER_CAP_INTEL_IDA		0x00000040
 #define CPUPOWER_CAP_AMD_RDPRU		0x00000080
+#define CPUPOWER_CAP_AMD_HW_PSTATE	0x00000100
 
 #define CPUPOWER_AMD_CPBDIS		0x02000000
 
