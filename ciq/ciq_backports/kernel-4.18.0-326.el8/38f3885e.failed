ACPI: property: Remove dead code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit 38f3885edbef8a77b25c4d13f3de06a7b93d02de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/38f3885e.failed

After the commit 3a7a2ab839ad couple of functions became a dead code.
Moreover, for all these years nobody used them. Remove.

Fixes: 3a7a2ab839ad ("ACPI / property: Extend fwnode_property_* to data-only subnodes")
	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 38f3885edbef8a77b25c4d13f3de06a7b93d02de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/acpi.h
diff --cc include/linux/acpi.h
index 60751a15bb98,a47eaf448131..000000000000
--- a/include/linux/acpi.h
+++ b/include/linux/acpi.h
@@@ -1229,21 -1218,6 +1224,24 @@@ static inline int acpi_node_prop_get(co
  	return -ENXIO;
  }
  
++<<<<<<< HEAD
 +static inline int acpi_dev_prop_get(const struct acpi_device *adev,
 +				    const char *propname,
 +				    void **valptr)
 +{
 +	return -ENXIO;
 +}
 +
 +static inline int acpi_dev_prop_read_single(const struct acpi_device *adev,
 +					    const char *propname,
 +					    enum dev_prop_type proptype,
 +					    void *val)
 +{
 +	return -ENXIO;
 +}
 +
++=======
++>>>>>>> 38f3885edbef (ACPI: property: Remove dead code)
  static inline int acpi_node_prop_read(const struct fwnode_handle *fwnode,
  				      const char *propname,
  				      enum dev_prop_type proptype,
diff --git a/drivers/acpi/property.c b/drivers/acpi/property.c
index 9a60bd42775d..f3ec7fa1989b 100644
--- a/drivers/acpi/property.c
+++ b/drivers/acpi/property.c
@@ -844,20 +844,6 @@ static int acpi_data_prop_read_single(const struct acpi_device_data *data,
 	return ret;
 }
 
-int acpi_dev_prop_read_single(struct acpi_device *adev, const char *propname,
-			      enum dev_prop_type proptype, void *val)
-{
-	int ret;
-
-	if (!adev || !val)
-		return -EINVAL;
-
-	ret = acpi_data_prop_read_single(&adev->data, propname, proptype, val);
-	if (ret < 0 || proptype != ACPI_TYPE_STRING)
-		return ret;
-	return 0;
-}
-
 static int acpi_copy_property_array_u8(const union acpi_object *items, u8 *val,
 				       size_t nval)
 {
@@ -998,12 +984,6 @@ static int acpi_data_prop_read(const struct acpi_device_data *data,
 	return ret;
 }
 
-int acpi_dev_prop_read(const struct acpi_device *adev, const char *propname,
-		       enum dev_prop_type proptype, void *val, size_t nval)
-{
-	return adev ? acpi_data_prop_read(&adev->data, propname, proptype, val, nval) : -EINVAL;
-}
-
 /**
  * acpi_node_prop_read - retrieve the value of an ACPI property with given name.
  * @fwnode: Firmware node to get the property from.
* Unmerged path include/linux/acpi.h
