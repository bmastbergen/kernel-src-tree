net/mlx5e: CT: Pass null instead of zero spec

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Roi Dayan <roid@nvidia.com>
commit f822cf86af0003b40292624db91c401682cf7d65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/f822cf86.failed

No need to pass zero spec to mlx5_add_flow_rules() as the
function can handle null spec.

	Signed-off-by: Roi Dayan <roid@nvidia.com>
	Reviewed-by: Oz Shlomo <ozsh@nvidia.com>
	Reviewed-by: Paul Blakey <paulb@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit f822cf86af0003b40292624db91c401682cf7d65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c
index 261de0cf38e0,97bfc42e3913..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c
@@@ -1402,9 -1241,8 +1402,12 @@@ static int tc_ct_pre_ct_add_rules(struc
  	pre_ct->flow_rule = rule;
  
  	/* add miss rule */
- 	memset(spec, 0, sizeof(*spec));
  	dest.ft = nat ? ct_priv->ct_nat : ct_priv->ct;
++<<<<<<< HEAD
 +	rule = mlx5_add_flow_rules(fdb, spec, &flow_act, &dest, 1);
++=======
+ 	rule = mlx5_add_flow_rules(ft, NULL, &flow_act, &dest, 1);
++>>>>>>> f822cf86af00 (net/mlx5e: CT: Pass null instead of zero spec)
  	if (IS_ERR(rule)) {
  		err = PTR_ERR(rule);
  		ct_dbg("Failed to add pre ct miss rule zone %d", zone);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.c
