drm/i915/gen9_bc: Introduce TGP PCH DDC pin mappings

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Lyude Paul <lyude@redhat.com>
commit d20630802f9fc8daf3026bc96b35c02ad17693b5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/d2063080.failed

With the introduction of gen9_bc, where Intel combines Cometlake CPUs with
a Tigerpoint PCH, we'll need to introduce new DDC pin mappings for this
platform in order to make all of the display connectors work. So, let's do
that.

Changes since v4:
* Split this into it's own patch - vsyrjala
Changes since v5:
* Rename gen9bc_port_to_ddc_pin() to gen9bc_tgp_port_to_ddc_pin()

	Cc: Matt Roper <matthew.d.roper@intel.com>
	Cc: Jani Nikula <jani.nikula@linux.intel.com>
	Cc: Ville Syrjala <ville.syrjala@linux.intel.com>
[originally from Tejas's work]
	Signed-off-by: Tejas Upadhyay <tejaskumarx.surendrakumar.upadhyay@intel.com>
	Signed-off-by: Lyude Paul <lyude@redhat.com>
	Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210209212832.1401815-3-lyude@redhat.com
(cherry picked from commit d20630802f9fc8daf3026bc96b35c02ad17693b5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_bios.c
#	drivers/gpu/drm/i915/display/intel_hdmi.c
diff --cc drivers/gpu/drm/i915/display/intel_bios.c
index 91ccc327af09,7902d4c2673e..000000000000
--- a/drivers/gpu/drm/i915/display/intel_bios.c
+++ b/drivers/gpu/drm/i915/display/intel_bios.c
@@@ -1604,14 -1630,36 +1604,34 @@@ static const u8 rkl_pch_tgp_ddc_pin_map
  	[RKL_DDC_BUS_DDI_E] = GMBUS_PIN_10_TC2_ICP,
  };
  
++<<<<<<< HEAD
++=======
+ static const u8 adls_ddc_pin_map[] = {
+ 	[ICL_DDC_BUS_DDI_A] = GMBUS_PIN_1_BXT,
+ 	[ADLS_DDC_BUS_PORT_TC1] = GMBUS_PIN_9_TC1_ICP,
+ 	[ADLS_DDC_BUS_PORT_TC2] = GMBUS_PIN_10_TC2_ICP,
+ 	[ADLS_DDC_BUS_PORT_TC3] = GMBUS_PIN_11_TC3_ICP,
+ 	[ADLS_DDC_BUS_PORT_TC4] = GMBUS_PIN_12_TC4_ICP,
+ };
+ 
+ static const u8 gen9bc_tgp_ddc_pin_map[] = {
+ 	[DDC_BUS_DDI_B] = GMBUS_PIN_2_BXT,
+ 	[DDC_BUS_DDI_C] = GMBUS_PIN_9_TC1_ICP,
+ 	[DDC_BUS_DDI_D] = GMBUS_PIN_10_TC2_ICP,
+ };
+ 
++>>>>>>> d20630802f9f (drm/i915/gen9_bc: Introduce TGP PCH DDC pin mappings)
  static u8 map_ddc_pin(struct drm_i915_private *dev_priv, u8 vbt_pin)
  {
  	const u8 *ddc_pin_map;
  	int n_entries;
  
 -	if (HAS_PCH_ADP(dev_priv)) {
 -		ddc_pin_map = adls_ddc_pin_map;
 -		n_entries = ARRAY_SIZE(adls_ddc_pin_map);
 -	} else if (INTEL_PCH_TYPE(dev_priv) >= PCH_DG1) {
 -		return vbt_pin;
 -	} else if (IS_ROCKETLAKE(dev_priv) && INTEL_PCH_TYPE(dev_priv) == PCH_TGP) {
 +	if (IS_ROCKETLAKE(dev_priv) && INTEL_PCH_TYPE(dev_priv) == PCH_TGP) {
  		ddc_pin_map = rkl_pch_tgp_ddc_pin_map;
  		n_entries = ARRAY_SIZE(rkl_pch_tgp_ddc_pin_map);
+ 	} else if (HAS_PCH_TGP(dev_priv) && IS_GEN9_BC(dev_priv)) {
+ 		ddc_pin_map = gen9bc_tgp_ddc_pin_map;
+ 		n_entries = ARRAY_SIZE(gen9bc_tgp_ddc_pin_map);
  	} else if (INTEL_PCH_TYPE(dev_priv) >= PCH_ICP) {
  		ddc_pin_map = icp_ddc_pin_map;
  		n_entries = ARRAY_SIZE(icp_ddc_pin_map);
diff --cc drivers/gpu/drm/i915/display/intel_hdmi.c
index de2ce5632b94,7f384f259fc8..000000000000
--- a/drivers/gpu/drm/i915/display/intel_hdmi.c
+++ b/drivers/gpu/drm/i915/display/intel_hdmi.c
@@@ -3110,6 -3138,45 +3110,48 @@@ static u8 rkl_port_to_ddc_pin(struct dr
  	return GMBUS_PIN_1_BXT + phy;
  }
  
++<<<<<<< HEAD
++=======
+ static u8 gen9bc_tgp_port_to_ddc_pin(struct drm_i915_private *i915, enum port port)
+ {
+ 	enum phy phy = intel_port_to_phy(i915, port);
+ 
+ 	drm_WARN_ON(&i915->drm, port == PORT_A);
+ 
+ 	/*
+ 	 * Pin mapping for GEN9 BC depends on which PCH is present.  With TGP,
+ 	 * final two outputs use type-c pins, even though they're actually
+ 	 * combo outputs.  With CMP, the traditional DDI A-D pins are used for
+ 	 * all outputs.
+ 	 */
+ 	if (INTEL_PCH_TYPE(i915) >= PCH_TGP && phy >= PHY_C)
+ 		return GMBUS_PIN_9_TC1_ICP + phy - PHY_C;
+ 
+ 	return GMBUS_PIN_1_BXT + phy;
+ }
+ 
+ static u8 dg1_port_to_ddc_pin(struct drm_i915_private *dev_priv, enum port port)
+ {
+ 	return intel_port_to_phy(dev_priv, port) + 1;
+ }
+ 
+ static u8 adls_port_to_ddc_pin(struct drm_i915_private *dev_priv, enum port port)
+ {
+ 	enum phy phy = intel_port_to_phy(dev_priv, port);
+ 
+ 	WARN_ON(port == PORT_B || port == PORT_C);
+ 
+ 	/*
+ 	 * Pin mapping for ADL-S requires TC pins for all combo phy outputs
+ 	 * except first combo output.
+ 	 */
+ 	if (phy == PHY_A)
+ 		return GMBUS_PIN_1_BXT;
+ 
+ 	return GMBUS_PIN_9_TC1_ICP + phy - PHY_B;
+ }
+ 
++>>>>>>> d20630802f9f (drm/i915/gen9_bc: Introduce TGP PCH DDC pin mappings)
  static u8 g4x_port_to_ddc_pin(struct drm_i915_private *dev_priv,
  			      enum port port)
  {
@@@ -3147,8 -3214,14 +3189,10 @@@ static u8 intel_hdmi_ddc_pin(struct int
  		return ddc_pin;
  	}
  
 -	if (HAS_PCH_ADP(dev_priv))
 -		ddc_pin = adls_port_to_ddc_pin(dev_priv, port);
 -	else if (INTEL_PCH_TYPE(dev_priv) >= PCH_DG1)
 -		ddc_pin = dg1_port_to_ddc_pin(dev_priv, port);
 -	else if (IS_ROCKETLAKE(dev_priv))
 +	if (IS_ROCKETLAKE(dev_priv))
  		ddc_pin = rkl_port_to_ddc_pin(dev_priv, port);
+ 	else if (IS_GEN9_BC(dev_priv) && HAS_PCH_TGP(dev_priv))
+ 		ddc_pin = gen9bc_tgp_port_to_ddc_pin(dev_priv, port);
  	else if (HAS_PCH_MCC(dev_priv))
  		ddc_pin = mcc_port_to_ddc_pin(dev_priv, port);
  	else if (INTEL_PCH_TYPE(dev_priv) >= PCH_ICP)
* Unmerged path drivers/gpu/drm/i915/display/intel_bios.c
* Unmerged path drivers/gpu/drm/i915/display/intel_hdmi.c
