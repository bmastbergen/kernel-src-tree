iommu/vt-d: Remove IOVA domain rcache flushing for CPU offlining

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author John Garry <john.garry@huawei.com>
commit 363f266eeff6e22a09483dc922dccd7cd0b9fe9c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/363f266e.failed

Now that the core code handles flushing per-IOVA domain CPU rcaches,
remove the handling here.

	Reviewed-by: Lu Baolu <baolu.lu@linux.intel.com>
	Signed-off-by: John Garry <john.garry@huawei.com>
Link: https://lore.kernel.org/r/1616675401-151997-3-git-send-email-john.garry@huawei.com
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 363f266eeff6e22a09483dc922dccd7cd0b9fe9c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel/iommu.c
diff --cc drivers/iommu/intel/iommu.c
index 09e10327113d,be5ea16ca26f..000000000000
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@@ -4692,35 -4064,6 +4692,38 @@@ static struct notifier_block intel_iomm
  	.priority = 0
  };
  
++<<<<<<< HEAD
 +static void free_all_cpu_cached_iovas(unsigned int cpu)
 +{
 +	int i;
 +
 +	for (i = 0; i < g_num_of_iommus; i++) {
 +		struct intel_iommu *iommu = g_iommus[i];
 +		struct dmar_domain *domain;
 +		int did;
 +
 +		if (!iommu)
 +			continue;
 +
 +		for (did = 0; did < cap_ndoms(iommu->cap); did++) {
 +			domain = get_iommu_domain(iommu, (u16)did);
 +
 +			if (!domain || domain->domain.type != IOMMU_DOMAIN_DMA)
 +				continue;
 +
 +			free_cpu_cached_iovas(cpu, &domain->iovad);
 +		}
 +	}
 +}
 +
 +static int intel_iommu_cpu_dead(unsigned int cpu)
 +{
 +	free_all_cpu_cached_iovas(cpu);
 +	return 0;
 +}
 +
++=======
++>>>>>>> 363f266eeff6 (iommu/vt-d: Remove IOVA domain rcache flushing for CPU offlining)
  static void intel_disable_iommus(void)
  {
  	struct intel_iommu *iommu = NULL;
* Unmerged path drivers/iommu/intel/iommu.c
diff --git a/include/linux/cpuhotplug.h b/include/linux/cpuhotplug.h
index 15a65da3ab4a..3263474b1f1d 100644
--- a/include/linux/cpuhotplug.h
+++ b/include/linux/cpuhotplug.h
@@ -56,7 +56,6 @@ enum cpuhp_state {
 	CPUHP_PAGE_ALLOC_DEAD,
 	CPUHP_NET_DEV_DEAD,
 	CPUHP_PCI_XGENE_DEAD,
-	CPUHP_IOMMU_INTEL_DEAD,
 	CPUHP_IOMMU_IOVA_DEAD,
 	CPUHP_LUSTRE_CFS_DEAD,
 	/* kABI: CPUHP_PADATA_DEAD, */
