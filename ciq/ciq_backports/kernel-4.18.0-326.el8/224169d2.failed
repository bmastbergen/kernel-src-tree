net/mlx5e: IPsec, Remove unnecessary config flag usage

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Tariq Toukan <tariqt@nvidia.com>
commit 224169d2a32b2fbb5fde366c6bc17b66c06fc005
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/224169d2.failed

MLX5_IPSEC_DEV() is always defined, no need to protect it under config
flag CONFIG_MLX5_EN_IPSEC, especially in slow path.

	Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
	Reviewed-by: Raed Salem <raeds@nvidia.com>
	Reviewed-by: Huy Nguyen <huyn@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 224169d2a32b2fbb5fde366c6bc17b66c06fc005)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 35873eba3212,f33c38629886..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -2056,10 -2068,8 +2056,13 @@@ static void mlx5e_build_rq_frags_info(s
  	u32 buf_size = 0;
  	int i;
  
++<<<<<<< HEAD
 +#ifdef CONFIG_MLX5_EN_IPSEC
 +	if (mlx5_fpga_is_ipsec_device(mdev))
++=======
+ 	if (MLX5_IPSEC_DEV(mdev))
++>>>>>>> 224169d2a32b (net/mlx5e: IPsec, Remove unnecessary config flag usage)
  		byte_count += MLX5E_METADATA_ETHER_LEN;
- #endif
  
  	if (mlx5e_rx_is_linear_skb(params, xsk)) {
  		int frag_stride;
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 89eae0d8f794,cb8e3d2b4750..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -1787,15 -1785,13 +1787,20 @@@ int mlx5e_rq_set_handlers(struct mlx5e_
  		rq->post_wqes = mlx5e_post_rx_mpwqes;
  		rq->dealloc_wqe = mlx5e_dealloc_rx_mpwqe;
  
++<<<<<<< HEAD
 +		rq->handle_rx_cqe = c->priv->profile->rx_handlers->handle_rx_cqe_mpwqe;
 +#ifdef CONFIG_MLX5_EN_IPSEC
 +		if (mlx5_fpga_is_ipsec_device(mdev)) {
 +			netdev_err(c->netdev, "MPWQE RQ with Innova IPSec offload not supported\n");
++=======
+ 		rq->handle_rx_cqe = priv->profile->rx_handlers->handle_rx_cqe_mpwqe;
+ 		if (MLX5_IPSEC_DEV(mdev)) {
+ 			netdev_err(netdev, "MPWQE RQ with IPSec offload not supported\n");
++>>>>>>> 224169d2a32b (net/mlx5e: IPsec, Remove unnecessary config flag usage)
  			return -EINVAL;
  		}
- #endif
  		if (!rq->handle_rx_cqe) {
 -			netdev_err(netdev, "RX handler of MPWQE RQ is not set\n");
 +			netdev_err(c->netdev, "RX handler of MPWQE RQ is not set\n");
  			return -EINVAL;
  		}
  		break;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
