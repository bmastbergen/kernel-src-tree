xfs: Add helper function xfs_attr_node_shrink

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Allison Collins <allison.henderson@oracle.com>
commit 3f6e011ee2bfcf5b70c5f8978673cd0e5bc64a33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/3f6e011e.failed

This patch adds a new helper function xfs_attr_node_shrink used to
shrink an attr name into an inode if it is small enough.  This helps to
modularize the greater calling function xfs_attr_node_removename.

	Signed-off-by: Allison Collins <allison.henderson@oracle.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Acked-by: Dave Chinner <dchinner@redhat.com>
(cherry picked from commit 3f6e011ee2bfcf5b70c5f8978673cd0e5bc64a33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_attr.c
diff --cc fs/xfs/libxfs/xfs_attr.c
index 78f3c39efa0b,b576f46d1d75..000000000000
--- a/fs/xfs/libxfs/xfs_attr.c
+++ b/fs/xfs/libxfs/xfs_attr.c
@@@ -1016,9 -1154,8 +1055,14 @@@ xfs_attr_node_removename
  {
  	struct xfs_da_state	*state;
  	struct xfs_da_state_blk	*blk;
++<<<<<<< HEAD
 +	struct xfs_inode	*dp;
 +	struct xfs_buf		*bp;
 +	int			retval, error, forkoff;
++=======
+ 	int			retval, error;
+ 	struct xfs_inode	*dp = args->dp;
++>>>>>>> 3f6e011ee2bf (xfs: Add helper function xfs_attr_node_shrink)
  
  	trace_xfs_attr_node_removename(args);
  
@@@ -1116,33 -1239,12 +1160,11 @@@
  	/*
  	 * If the result is small enough, push it all into the inode.
  	 */
- 	if (xfs_bmap_one_block(dp, XFS_ATTR_FORK)) {
- 		/*
- 		 * Have to get rid of the copy of this dabuf in the state.
- 		 */
- 		ASSERT(state->path.active == 1);
- 		ASSERT(state->path.blk[0].bp);
- 		state->path.blk[0].bp = NULL;
- 
- 		error = xfs_attr3_leaf_read(args->trans, args->dp, 0, &bp);
- 		if (error)
- 			goto out;
- 
- 		if ((forkoff = xfs_attr_shortform_allfit(bp, dp))) {
- 			error = xfs_attr3_leaf_to_shortform(bp, args, forkoff);
- 			/* bp is gone due to xfs_da_shrink_inode */
- 			if (error)
- 				goto out;
- 			error = xfs_defer_finish(&args->trans);
- 			if (error)
- 				goto out;
- 		} else
- 			xfs_trans_brelse(args->trans, bp);
- 	}
- 	error = 0;
+ 	if (xfs_bmap_one_block(dp, XFS_ATTR_FORK))
+ 		error = xfs_attr_node_shrink(args, state);
  
  out:
 -	if (state)
 -		xfs_da_state_free(state);
 +	xfs_da_state_free(state);
  	return error;
  }
  
* Unmerged path fs/xfs/libxfs/xfs_attr.c
