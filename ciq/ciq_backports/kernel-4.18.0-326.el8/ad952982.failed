drm/i915: Use intel_ddi_clk_select() for FDI

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Ville Syrj채l채 <ville.syrjala@linux.intel.com>
commit ad9529824cafbee214dbf580228e4c390dc61a58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/ad952982.failed

We want to put all DDI clock routing code into one place.
Unify the FDI enable sequence to use the standard function
instead of hand rolling its own. The disable sequence already
uses the normal thing.

	Cc: Lucas De Marchi <lucas.demarchi@intel.com>
	Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210205214634.19341-2-ville.syrjala@linux.intel.com
	Reviewed-by: Lucas De Marchi <lucas.demarchi@intel.com>
(cherry picked from commit ad9529824cafbee214dbf580228e4c390dc61a58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_ddi.h
#	drivers/gpu/drm/i915/display/intel_fdi.c
diff --cc drivers/gpu/drm/i915/display/intel_ddi.h
index 077e9dbbe367,e618e1c80252..000000000000
--- a/drivers/gpu/drm/i915/display/intel_ddi.h
+++ b/drivers/gpu/drm/i915/display/intel_ddi.h
@@@ -21,8 -28,12 +21,17 @@@ void intel_ddi_fdi_post_disable(struct 
  				struct intel_encoder *intel_encoder,
  				const struct intel_crtc_state *old_crtc_state,
  				const struct drm_connector_state *old_conn_state);
++<<<<<<< HEAD
 +void hsw_fdi_link_train(struct intel_encoder *encoder,
 +			const struct intel_crtc_state *crtc_state);
++=======
+ void intel_ddi_clk_select(struct intel_encoder *encoder,
+ 			  const struct intel_crtc_state *crtc_state);
+ void intel_prepare_dp_ddi_buffers(struct intel_encoder *encoder,
+ 				  const struct intel_crtc_state *crtc_state);
+ void intel_wait_ddi_buf_idle(struct drm_i915_private *dev_priv,
+ 			     enum port port);
++>>>>>>> ad9529824caf (drm/i915: Use intel_ddi_clk_select() for FDI)
  void intel_ddi_init(struct drm_i915_private *dev_priv, enum port port);
  bool intel_ddi_get_hw_state(struct intel_encoder *encoder, enum pipe *pipe);
  void intel_ddi_enable_transcoder_func(struct intel_encoder *encoder,
* Unmerged path drivers/gpu/drm/i915/display/intel_fdi.c
diff --git a/drivers/gpu/drm/i915/display/intel_ddi.c b/drivers/gpu/drm/i915/display/intel_ddi.c
index 87726ca7041c..2b934fb8e112 100644
--- a/drivers/gpu/drm/i915/display/intel_ddi.c
+++ b/drivers/gpu/drm/i915/display/intel_ddi.c
@@ -2963,8 +2963,8 @@ void icl_sanitize_encoder_pll_mapping(struct intel_encoder *encoder)
 	icl_sanitize_port_clk_off(dev_priv, port_mask, ddi_clk_needed);
 }
 
-static void intel_ddi_clk_select(struct intel_encoder *encoder,
-				 const struct intel_crtc_state *crtc_state)
+void intel_ddi_clk_select(struct intel_encoder *encoder,
+			  const struct intel_crtc_state *crtc_state)
 {
 	struct drm_i915_private *dev_priv = to_i915(encoder->base.dev);
 	enum port port = encoder->port;
* Unmerged path drivers/gpu/drm/i915/display/intel_ddi.h
* Unmerged path drivers/gpu/drm/i915/display/intel_fdi.c
