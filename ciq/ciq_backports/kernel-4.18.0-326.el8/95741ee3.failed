RDMA/mlx5: Remove order from mlx5_ib_cont_pages()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Jason Gunthorpe <jgg@nvidia.com>
commit 95741ee3f0f1f437720626131d866ac8dc66ab14
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/95741ee3.failed

Only alloc_mr_from_cache() needs order and can trivially compute it, so
lift it to the one call site and remove the NULL arguments.

Link: https://lore.kernel.org/r/20201026131936.1335664-6-leon@kernel.org
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit 95741ee3f0f1f437720626131d866ac8dc66ab14)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/mem.c
#	drivers/infiniband/hw/mlx5/mr.c
diff --cc drivers/infiniband/hw/mlx5/mem.c
index 13de3d2edd34,2faee44cca99..000000000000
--- a/drivers/infiniband/hw/mlx5/mem.c
+++ b/drivers/infiniband/hw/mlx5/mem.c
@@@ -57,6 -56,15 +56,18 @@@ void mlx5_ib_cont_pages(struct ib_umem 
  	struct scatterlist *sg;
  	int entry;
  
++<<<<<<< HEAD
++=======
+ 	if (umem->is_odp) {
+ 		struct ib_umem_odp *odp = to_ib_umem_odp(umem);
+ 
+ 		*shift = odp->page_shift;
+ 		*ncont = ib_umem_odp_num_pages(odp);
+ 		*count = *ncont << (*shift - PAGE_SHIFT);
+ 		return;
+ 	}
+ 
++>>>>>>> 95741ee3f0f1 (RDMA/mlx5: Remove order from mlx5_ib_cont_pages())
  	addr = addr >> PAGE_SHIFT;
  	tmp = (unsigned long)addr;
  	m = find_first_bit(&tmp, BITS_PER_LONG);
diff --cc drivers/infiniband/hw/mlx5/mr.c
index 52d81032598e,4b05143dedda..000000000000
--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@@ -975,15 -950,21 +975,26 @@@ static struct mlx5_cache_ent *mr_cache_
  	return &cache->ent[order];
  }
  
 -static struct mlx5_ib_mr *alloc_mr_from_cache(struct ib_pd *pd,
 -					      struct ib_umem *umem, u64 iova,
 -					      int access_flags)
 +static struct mlx5_ib_mr *
 +alloc_mr_from_cache(struct ib_pd *pd, struct ib_umem *umem, u64 virt_addr,
 +		    u64 len, int npages, int page_shift, unsigned int order,
 +		    int access_flags)
  {
  	struct mlx5_ib_dev *dev = to_mdev(pd->device);
 -	struct mlx5_cache_ent *ent;
 +	struct mlx5_cache_ent *ent = mr_cache_ent_from_order(dev, order);
  	struct mlx5_ib_mr *mr;
++<<<<<<< HEAD
 +
++=======
+ 	int npages;
+ 	int page_shift;
+ 	int ncont;
+ 
+ 	mlx5_ib_cont_pages(umem, iova, MLX5_MKEY_PAGE_SHIFT_MASK, &npages,
+ 			   &page_shift, &ncont);
+ 	ent = mr_cache_ent_from_order(dev, order_base_2(ib_umem_num_dma_blocks(
+ 						   umem, 1UL << page_shift)));
++>>>>>>> 95741ee3f0f1 (RDMA/mlx5: Remove order from mlx5_ib_cont_pages())
  	if (!ent)
  		return ERR_PTR(-E2BIG);
  
@@@ -1181,6 -1164,10 +1192,13 @@@ static struct mlx5_ib_mr *reg_create(st
  	if (!mr)
  		return ERR_PTR(-ENOMEM);
  
++<<<<<<< HEAD
++=======
+ 	mlx5_ib_cont_pages(umem, iova, MLX5_MKEY_PAGE_SHIFT_MASK, &npages,
+ 			   &page_shift, &ncont);
+ 
+ 	mr->page_shift = page_shift;
++>>>>>>> 95741ee3f0f1 (RDMA/mlx5: Remove order from mlx5_ib_cont_pages())
  	mr->ibmr.pd = pd;
  	mr->access_flags = access_flags;
  
diff --git a/drivers/infiniband/hw/mlx5/cq.c b/drivers/infiniband/hw/mlx5/cq.c
index 97c9edcdf214..0e279c935e41 100644
--- a/drivers/infiniband/hw/mlx5/cq.c
+++ b/drivers/infiniband/hw/mlx5/cq.c
@@ -747,7 +747,7 @@ static int create_cq_user(struct mlx5_ib_dev *dev, struct ib_udata *udata,
 		goto err_umem;
 
 	mlx5_ib_cont_pages(cq->buf.umem, ucmd.buf_addr, 0, &npages, &page_shift,
-			   &ncont, NULL);
+			   &ncont);
 	mlx5_ib_dbg(dev, "addr 0x%llx, size %u, npages %d, page_shift %d, ncont %d\n",
 		    ucmd.buf_addr, entries * ucmd.cqe_size, npages, page_shift, ncont);
 
@@ -1155,8 +1155,7 @@ static int resize_user(struct mlx5_ib_dev *dev, struct mlx5_ib_cq *cq,
 		return err;
 	}
 
-	mlx5_ib_cont_pages(umem, ucmd.buf_addr, 0, &npages, page_shift,
-			   npas, NULL);
+	mlx5_ib_cont_pages(umem, ucmd.buf_addr, 0, &npages, page_shift, npas);
 
 	cq->resize_umem = umem;
 	*cqe_size = ucmd.cqe_size;
diff --git a/drivers/infiniband/hw/mlx5/devx.c b/drivers/infiniband/hw/mlx5/devx.c
index ed09a0921724..50f60395de47 100644
--- a/drivers/infiniband/hw/mlx5/devx.c
+++ b/drivers/infiniband/hw/mlx5/devx.c
@@ -2178,7 +2178,7 @@ static int devx_umem_get(struct mlx5_ib_dev *dev, struct ib_ucontext *ucontext,
 
 	mlx5_ib_cont_pages(obj->umem, obj->umem->address,
 			   MLX5_MKEY_PAGE_SHIFT_MASK, &npages,
-			   &obj->page_shift, &obj->ncont, NULL);
+			   &obj->page_shift, &obj->ncont);
 
 	if (!npages) {
 		ib_umem_release(obj->umem);
* Unmerged path drivers/infiniband/hw/mlx5/mem.c
diff --git a/drivers/infiniband/hw/mlx5/mlx5_ib.h b/drivers/infiniband/hw/mlx5/mlx5_ib.h
index 5e47304abc75..b6b1c584742f 100644
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@ -1235,7 +1235,7 @@ int mlx5_ib_query_port(struct ib_device *ibdev, u8 port,
 void mlx5_ib_cont_pages(struct ib_umem *umem, u64 addr,
 			unsigned long max_page_shift,
 			int *count, int *shift,
-			int *ncont, int *order);
+			int *ncont);
 void __mlx5_ib_populate_pas(struct mlx5_ib_dev *dev, struct ib_umem *umem,
 			    int page_shift, size_t offset, size_t num_pages,
 			    __be64 *pas, int access_flags);
* Unmerged path drivers/infiniband/hw/mlx5/mr.c
diff --git a/drivers/infiniband/hw/mlx5/qp.c b/drivers/infiniband/hw/mlx5/qp.c
index 981aaf96640e..a601cbb18ab6 100644
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@ -791,7 +791,7 @@ static int mlx5_ib_umem_get(struct mlx5_ib_dev *dev, struct ib_udata *udata,
 		return PTR_ERR(*umem);
 	}
 
-	mlx5_ib_cont_pages(*umem, addr, 0, npages, page_shift, ncont, NULL);
+	mlx5_ib_cont_pages(*umem, addr, 0, npages, page_shift, ncont);
 
 	err = mlx5_ib_get_buf_offset(addr, *page_shift, offset);
 	if (err) {
@@ -850,7 +850,7 @@ static int create_user_rq(struct mlx5_ib_dev *dev, struct ib_pd *pd,
 	}
 
 	mlx5_ib_cont_pages(rwq->umem, ucmd->buf_addr, 0, &npages, &page_shift,
-			   &ncont, NULL);
+			   &ncont);
 	err = mlx5_ib_get_buf_offset(ucmd->buf_addr, page_shift,
 				     &rwq->rq_page_offset);
 	if (err) {
diff --git a/drivers/infiniband/hw/mlx5/srq.c b/drivers/infiniband/hw/mlx5/srq.c
index 39086f3cf4b4..156b6dd603ef 100644
--- a/drivers/infiniband/hw/mlx5/srq.c
+++ b/drivers/infiniband/hw/mlx5/srq.c
@@ -88,7 +88,7 @@ static int create_srq_user(struct ib_pd *pd, struct mlx5_ib_srq *srq,
 	}
 
 	mlx5_ib_cont_pages(srq->umem, ucmd.buf_addr, 0, &npages,
-			   &page_shift, &ncont, NULL);
+			   &page_shift, &ncont);
 	err = mlx5_ib_get_buf_offset(ucmd.buf_addr, page_shift,
 				     &offset);
 	if (err) {
