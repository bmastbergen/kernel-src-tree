ibmvnic: queue reset work in system_long_wq

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Lijun Pan <lijunp213@gmail.com>
commit 870e04ae45ea2e569d1ca2780439b16e988da08d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/870e04ae.failed

The reset process for ibmvnic commonly takes multiple seconds, clearly
making it inappropriate for schedule_work/system_wq. The reason to make
this change is that ibmvnic's use of the default system-wide workqueue
for a relatively long-running work item can negatively affect other
workqueue users. So, queue the relatively slow reset job to the
system_long_wq.

	Suggested-by: Nathan Lynch <nathanl@linux.ibm.com>
	Signed-off-by: Lijun Pan <lijunp213@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 870e04ae45ea2e569d1ca2780439b16e988da08d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index fc1710cd1da2,b72159ccca3a..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -2290,11 -2290,11 +2290,12 @@@ static void __ibmvnic_reset(struct work
  	int rc = 0;
  
  	adapter = container_of(work, struct ibmvnic_adapter, ibmvnic_reset);
 +	netdev = adapter->netdev;
  
  	if (test_and_set_bit_lock(0, &adapter->resetting)) {
- 		schedule_delayed_work(&adapter->ibmvnic_delayed_reset,
- 				      IBMVNIC_RESET_DELAY);
+ 		queue_delayed_work(system_long_wq,
+ 				   &adapter->ibmvnic_delayed_reset,
+ 				   IBMVNIC_RESET_DELAY);
  		return;
  	}
  
@@@ -2440,12 -2436,18 +2441,18 @@@ static int ibmvnic_reset(struct ibmvnic
  	}
  	rwi->reset_reason = reason;
  	list_add_tail(&rwi->list, &adapter->rwi_list);
++<<<<<<< HEAD
 +	spin_unlock_irqrestore(&adapter->rwi_lock, flags);
 +	netdev_dbg(adapter->netdev, "Scheduling reset (reason %d)\n", reason);
 +	schedule_work(&adapter->ibmvnic_reset);
++=======
+ 	netdev_dbg(adapter->netdev, "Scheduling reset (reason %s)\n",
+ 		   reset_reason_to_string(reason));
+ 	queue_work(system_long_wq, &adapter->ibmvnic_reset);
++>>>>>>> 870e04ae45ea (ibmvnic: queue reset work in system_long_wq)
  
 -	ret = 0;
 +	return 0;
  err:
 -	/* ibmvnic_close() below can block, so drop the lock first */
 -	spin_unlock_irqrestore(&adapter->rwi_lock, flags);
 -
 -	if (ret == ENOMEM)
 -		ibmvnic_close(netdev);
 -
  	return -ret;
  }
  
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
