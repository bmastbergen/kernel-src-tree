selftests/bpf: Enable cross-building

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Jean-Philippe Brucker <jean-philippe@linaro.org>
commit de11ae4f56fdc53474c08b03142860428e6c5655
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/de11ae4f.failed

Build bpftool and resolve_btfids using the host toolchain when
cross-compiling, since they are executed during build to generate the
selftests. Add a host build directory in order to build both host and
target version of libbpf. Build host tools using $(HOSTCC) defined in
Makefile.include.

	Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
	Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
	Acked-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20210113163319.1516382-2-jean-philippe@linaro.org
(cherry picked from commit de11ae4f56fdc53474c08b03142860428e6c5655)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/Makefile
diff --cc tools/testing/selftests/bpf/Makefile
index d1a725b526ac,95ce81513648..000000000000
--- a/tools/testing/selftests/bpf/Makefile
+++ b/tools/testing/selftests/bpf/Makefile
@@@ -111,8 -114,26 +112,16 @@@ SCRATCH_DIR := $(OUTPUT)/tool
  BUILD_DIR := $(SCRATCH_DIR)/build
  INCLUDE_DIR := $(SCRATCH_DIR)/include
  BPFOBJ := $(BUILD_DIR)/libbpf/libbpf.a
- RESOLVE_BTFIDS := $(BUILD_DIR)/resolve_btfids/resolve_btfids
+ ifneq ($(CROSS_COMPILE),)
+ HOST_BUILD_DIR		:= $(BUILD_DIR)/host
+ HOST_SCRATCH_DIR	:= $(OUTPUT)/host-tools
+ else
+ HOST_BUILD_DIR		:= $(BUILD_DIR)
+ HOST_SCRATCH_DIR	:= $(SCRATCH_DIR)
+ endif
+ HOST_BPFOBJ := $(HOST_BUILD_DIR)/libbpf/libbpf.a
+ RESOLVE_BTFIDS := $(HOST_BUILD_DIR)/resolve_btfids/resolve_btfids
  
 -VMLINUX_BTF_PATHS ?= $(if $(O),$(O)/vmlinux)				\
 -		     $(if $(KBUILD_OUTPUT),$(KBUILD_OUTPUT)/vmlinux)	\
 -		     ../../../../vmlinux				\
 -		     /sys/kernel/btf/vmlinux				\
 -		     /boot/vmlinux-$(shell uname -r)
 -VMLINUX_BTF ?= $(abspath $(firstword $(wildcard $(VMLINUX_BTF_PATHS))))
 -ifeq ($(VMLINUX_BTF),)
 -$(error Cannot find a vmlinux for VMLINUX_BTF at any of "$(VMLINUX_BTF_PATHS)")
 -endif
 -
  # Define simple and short `make test_progs`, `make test_sysctl`, etc targets
  # to build individual tests.
  # NOTE: Semicolon at the end is critical to override lib.mk's default static
@@@ -139,14 -174,7 +156,18 @@@ $(OUTPUT)/test_stub.o: test_stub.c $(BP
  	$(call msg,CC,,$@)
  	$(Q)$(CC) -c $(CFLAGS) -o $@ $<
  
++<<<<<<< HEAD
 +VMLINUX_BTF_PATHS ?= $(if $(O),$(O)/vmlinux)				\
 +		     $(if $(KBUILD_OUTPUT),$(KBUILD_OUTPUT)/vmlinux)	\
 +		     ../../../../vmlinux				\
 +		     /sys/kernel/btf/vmlinux				\
 +		     /boot/vmlinux-$(shell uname -r)
 +VMLINUX_BTF ?= $(abspath $(firstword $(wildcard $(VMLINUX_BTF_PATHS))))
 +
 +DEFAULT_BPFTOOL := $(SCRATCH_DIR)/sbin/bpftool
++=======
+ DEFAULT_BPFTOOL := $(HOST_SCRATCH_DIR)/sbin/bpftool
++>>>>>>> de11ae4f56fd (selftests/bpf: Enable cross-building)
  
  $(OUTPUT)/runqslower: $(BPFOBJ) | $(DEFAULT_BPFTOOL)
  	$(Q)$(MAKE) $(submake_extras) -C $(TOOLSDIR)/bpf/runqslower	\
@@@ -440,7 -474,7 +468,7 @@@ $(OUTPUT)/bench: $(OUTPUT)/bench.o $(OU
  	$(call msg,BINARY,,$@)
  	$(Q)$(CC) $(LDFLAGS) -o $@ $(filter %.a %.o,$^) $(LDLIBS)
  
- EXTRA_CLEAN := $(TEST_CUSTOM_PROGS) $(SCRATCH_DIR)			\
+ EXTRA_CLEAN := $(TEST_CUSTOM_PROGS) $(SCRATCH_DIR) $(HOST_SCRATCH_DIR)	\
  	prog_tests/tests.h map_tests/tests.h verifier/tests.h		\
  	feature								\
 -	$(addprefix $(OUTPUT)/,*.o *.skel.h no_alu32 bpf_gcc bpf_testmod.ko)
 +	$(addprefix $(OUTPUT)/,*.o *.skel.h no_alu32 bpf_gcc)
* Unmerged path tools/testing/selftests/bpf/Makefile
