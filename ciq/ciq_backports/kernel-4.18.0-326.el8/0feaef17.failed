xfs: Remove unneeded xfs_trans_roll_inode calls

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Allison Collins <allison.henderson@oracle.com>
commit 0feaef17db9ddf0d97676eaa258dc55ff504cfb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/0feaef17.failed

Some calls to xfs_trans_roll_inode and xfs_defer_finish routines are not
needed. If they are the last operations executed in these functions, and
no further changes are made, then higher level routines will roll or
commit the transactions.

	Signed-off-by: Allison Collins <allison.henderson@oracle.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Acked-by: Dave Chinner <dchinner@redhat.com>
(cherry picked from commit 0feaef17db9ddf0d97676eaa258dc55ff504cfb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_attr.c
diff --cc fs/xfs/libxfs/xfs_attr.c
index 78f3c39efa0b,2daf3084f3e3..000000000000
--- a/fs/xfs/libxfs/xfs_attr.c
+++ b/fs/xfs/libxfs/xfs_attr.c
@@@ -656,19 -702,29 +645,11 @@@ xfs_attr_leaf_addname
  		 * Added a "remote" value, just clear the incomplete flag.
  		 */
  		error = xfs_attr3_leaf_clearflag(args);
- 		if (error)
- 			return error;
- 
- 		/*
- 		 * Commit the flag value change and start the next trans in
- 		 * series.
- 		 */
- 		error = xfs_trans_roll_inode(&args->trans, args->dp);
  	}
  	return error;
 -}
 -
 -/*
 - * Return EEXIST if attr is found, or ENOATTR if not
 - */
 -STATIC int
 -xfs_attr_leaf_hasname(
 -	struct xfs_da_args	*args,
 -	struct xfs_buf		**bp)
 -{
 -	int                     error = 0;
 -
 -	error = xfs_attr3_leaf_read(args->trans, args->dp, 0, bp);
 -	if (error)
 -		return error;
 -
 -	error = xfs_attr3_leaf_lookup_int(*bp, args);
 -	if (error != -ENOATTR && error != -EEXIST)
 -		xfs_trans_brelse(args->trans, *bp);
 -
 -	return error;
 +out_brelse:
 +	xfs_trans_brelse(args->trans, bp);
 +	return retval;
  }
  
  /*
@@@ -1004,6 -1062,39 +963,42 @@@ out
  }
  
  /*
++<<<<<<< HEAD
++=======
+  * Shrink an attribute from leaf to shortform
+  */
+ STATIC int
+ xfs_attr_node_shrink(
+ 	struct xfs_da_args	*args,
+ 	struct xfs_da_state     *state)
+ {
+ 	struct xfs_inode	*dp = args->dp;
+ 	int			error, forkoff;
+ 	struct xfs_buf		*bp;
+ 
+ 	/*
+ 	 * Have to get rid of the copy of this dabuf in the state.
+ 	 */
+ 	ASSERT(state->path.active == 1);
+ 	ASSERT(state->path.blk[0].bp);
+ 	state->path.blk[0].bp = NULL;
+ 
+ 	error = xfs_attr3_leaf_read(args->trans, args->dp, 0, &bp);
+ 	if (error)
+ 		return error;
+ 
+ 	forkoff = xfs_attr_shortform_allfit(bp, dp);
+ 	if (forkoff) {
+ 		error = xfs_attr3_leaf_to_shortform(bp, args, forkoff);
+ 		/* bp is gone due to xfs_da_shrink_inode */
+ 	} else
+ 		xfs_trans_brelse(args->trans, bp);
+ 
+ 	return error;
+ }
+ 
+ /*
++>>>>>>> 0feaef17db9d (xfs: Remove unneeded xfs_trans_roll_inode calls)
   * Remove a name from a B-tree attribute list.
   *
   * This will involve walking down the Btree, and may involve joining
* Unmerged path fs/xfs/libxfs/xfs_attr.c
