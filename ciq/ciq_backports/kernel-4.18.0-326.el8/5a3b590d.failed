ext4: don't leak old mountpoint samples

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Theodore Ts'o <tytso@mit.edu>
commit 5a3b590d4b2db187faa6f06adc9a53d6199fb1f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/5a3b590d.failed

When the first file is opened, ext4 samples the mountpoint of the
filesystem in 64 bytes of the super block.  It does so using
strlcpy(), this means that the remaining bytes in the super block
string buffer are untouched.  If the mount point before had a longer
path than the current one, it can be reconstructed.

Consider the case where the fs was mounted to "/media/johnjdeveloper"
and later to "/".  The super block buffer then contains
"/\x00edia/johnjdeveloper".

This case was seen in the wild and caused confusion how the name
of a developer ands up on the super block of a filesystem used
in production...

Fix this by using strncpy() instead of strlcpy().  The superblock
field is defined to be a fixed-size char array, and it is already
marked using __nonstring in fs/ext4/ext4.h.  The consumer of the field
in e2fsprogs already assumes that in the case of a 64+ byte mount
path, that s_last_mounted will not be NUL terminated.

Link: https://lore.kernel.org/r/X9ujIOJG/HqMr88R@mit.edu
	Reported-by: Richard Weinberger <richard@nod.at>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Cc: stable@kernel.org
(cherry picked from commit 5a3b590d4b2db187faa6f06adc9a53d6199fb1f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/file.c
diff --cc fs/ext4/file.c
index eb7375e38241,349b27f0dda0..000000000000
--- a/fs/ext4/file.c
+++ b/fs/ext4/file.c
@@@ -434,9 -809,12 +434,14 @@@ static int ext4_sample_last_mounted(str
  	err = ext4_journal_get_write_access(handle, sbi->s_sbh);
  	if (err)
  		goto out_journal;
++<<<<<<< HEAD
 +	strlcpy(sbi->s_es->s_last_mounted, cp,
++=======
+ 	lock_buffer(sbi->s_sbh);
+ 	strncpy(sbi->s_es->s_last_mounted, cp,
++>>>>>>> 5a3b590d4b2d (ext4: don't leak old mountpoint samples)
  		sizeof(sbi->s_es->s_last_mounted));
 -	ext4_superblock_csum_set(sb);
 -	unlock_buffer(sbi->s_sbh);
 -	ext4_handle_dirty_metadata(handle, NULL, sbi->s_sbh);
 +	ext4_handle_dirty_super(handle, sb);
  out_journal:
  	ext4_journal_stop(handle);
  out:
* Unmerged path fs/ext4/file.c
