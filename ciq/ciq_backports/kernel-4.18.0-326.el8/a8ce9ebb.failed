iommu/vt-d: Preset Access/Dirty bits for IOVA over FL

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit a8ce9ebbecdfda3322bbcece6b3b25888217f8e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/a8ce9ebb.failed

The Access/Dirty bits in the first level page table entry will be set
whenever a page table entry was used for address translation or write
permission was successfully translated. This is always true when using
the first-level page table for kernel IOVA. Instead of wasting hardware
cycles to update the certain bits, it's better to set them up at the
beginning.

	Suggested-by: Ashok Raj <ashok.raj@intel.com>
	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
Link: https://lore.kernel.org/r/20210115004202.953965-1-baolu.lu@linux.intel.com
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit a8ce9ebbecdfda3322bbcece6b3b25888217f8e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel/iommu.c
diff --cc drivers/iommu/intel/iommu.c
index 57ba53b4fb58,be85af612bc1..000000000000
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@@ -2377,13 -2313,17 +2380,24 @@@ static int __domain_mapping(struct dmar
  		return -EINVAL;
  
  	attr = prot & (DMA_PTE_READ | DMA_PTE_WRITE | DMA_PTE_SNP);
- 	if (domain_use_first_level(domain))
+ 	if (domain_use_first_level(domain)) {
  		attr |= DMA_FL_PTE_PRESENT | DMA_FL_PTE_XD | DMA_FL_PTE_US;
  
++<<<<<<< HEAD
 +	if (!sg) {
 +		sg_res = nr_pages;
 +		pteval = ((phys_addr_t)phys_pfn << VTD_PAGE_SHIFT) | attr;
 +	}
++=======
+ 		if (domain->domain.type == IOMMU_DOMAIN_DMA) {
+ 			attr |= DMA_FL_PTE_ACCESS;
+ 			if (prot & DMA_PTE_WRITE)
+ 				attr |= DMA_FL_PTE_DIRTY;
+ 		}
+ 	}
+ 
+ 	pteval = ((phys_addr_t)phys_pfn << VTD_PAGE_SHIFT) | attr;
++>>>>>>> a8ce9ebbecdf (iommu/vt-d: Preset Access/Dirty bits for IOVA over FL)
  
  	while (nr_pages > 0) {
  		uint64_t tmp;
* Unmerged path drivers/iommu/intel/iommu.c
diff --git a/include/linux/intel-iommu.h b/include/linux/intel-iommu.h
index d66c3b365300..3c878871d99c 100644
--- a/include/linux/intel-iommu.h
+++ b/include/linux/intel-iommu.h
@@ -54,6 +54,8 @@
 
 #define DMA_FL_PTE_PRESENT	BIT_ULL(0)
 #define DMA_FL_PTE_US		BIT_ULL(2)
+#define DMA_FL_PTE_ACCESS	BIT_ULL(5)
+#define DMA_FL_PTE_DIRTY	BIT_ULL(6)
 #define DMA_FL_PTE_XD		BIT_ULL(63)
 
 #define ADDR_WIDTH_5LEVEL	(57)
