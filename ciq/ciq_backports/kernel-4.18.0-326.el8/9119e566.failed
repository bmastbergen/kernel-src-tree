ALSA: usb-audio: Add DJM-450 to the quirks table

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Olivia Mackintosh <livvy@base.nu>
commit 9119e5661eab2c56a96b936cde49c6740dc49ff9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/9119e566.failed

As with most Pioneer devices, the device descriptor is vendor specific
and as such, the number of channels, the PCM format, endpoints and
sample rate need to be specified. This device has 8 inputs and 8 outputs
and a sample rate of 48000 only. The PCM format is S24_3LE like other
devices.

There seems to be an appetite for reducing duplication amongs these
Pioneer patches but again, I feel this is a step to be taken after
support has been added as it's not completely clear where the
commonalities are.

	Signed-off-by: Olivia Mackintosh <livvy@base.nu>
Link: https://lore.kernel.org/r/20210202134225.3217-3-livvy@base.nu
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 9119e5661eab2c56a96b936cde49c6740dc49ff9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/quirks-table.h
diff --cc sound/usb/quirks-table.h
index dda4a7c239d9,1165a5ac60f2..000000000000
--- a/sound/usb/quirks-table.h
+++ b/sound/usb/quirks-table.h
@@@ -3693,6 -3757,123 +3693,126 @@@ AU0828_DEVICE(0x2040, 0x7270, "Hauppaug
  		}
  	}
  },
++<<<<<<< HEAD
++=======
+ {
+ 	/*
+ 	 * Pioneer DJ DJM-750
+ 	 * 8 channels playback & 8 channels capture @ 44.1/48/96kHz S24LE
+ 	 */
+ 	USB_DEVICE_VENDOR_SPEC(0x08e4, 0x017f),
+ 	.driver_info = (unsigned long) &(const struct snd_usb_audio_quirk) {
+ 		.ifnum = QUIRK_ANY_INTERFACE,
+ 		.type = QUIRK_COMPOSITE,
+ 		.data = (const struct snd_usb_audio_quirk[]) {
+ 			{
+ 				.ifnum = 0,
+ 				.type = QUIRK_AUDIO_FIXED_ENDPOINT,
+ 				.data = &(const struct audioformat) {
+ 					.formats = SNDRV_PCM_FMTBIT_S24_3LE,
+ 					.channels = 8,
+ 					.iface = 0,
+ 					.altsetting = 1,
+ 					.altset_idx = 1,
+ 					.endpoint = 0x05,
+ 					.ep_attr = USB_ENDPOINT_XFER_ISOC|
+ 					    USB_ENDPOINT_SYNC_ASYNC,
+ 					.rates = SNDRV_PCM_RATE_44100|
+ 						SNDRV_PCM_RATE_48000|
+ 						SNDRV_PCM_RATE_96000,
+ 					.rate_min = 44100,
+ 					.rate_max = 96000,
+ 					.nr_rates = 3,
+ 					.rate_table = (unsigned int[]) { 44100, 48000, 96000 }
+ 				}
+ 			},
+ 			{
+ 				.ifnum = 0,
+ 				.type = QUIRK_AUDIO_FIXED_ENDPOINT,
+ 				.data = &(const struct audioformat) {
+ 					.formats = SNDRV_PCM_FMTBIT_S24_3LE,
+ 					.channels = 8,
+ 					.iface = 0,
+ 					.altsetting = 1,
+ 					.altset_idx = 1,
+ 					.endpoint = 0x86,
+ 					.ep_idx = 1,
+ 					.ep_attr = USB_ENDPOINT_XFER_ISOC|
+ 						USB_ENDPOINT_SYNC_ASYNC|
+ 						USB_ENDPOINT_USAGE_IMPLICIT_FB,
+ 					.rates = SNDRV_PCM_RATE_44100|
+ 						SNDRV_PCM_RATE_48000|
+ 						SNDRV_PCM_RATE_96000,
+ 					.rate_min = 44100,
+ 					.rate_max = 96000,
+ 					.nr_rates = 3,
+ 					.rate_table = (unsigned int[]) { 44100, 48000, 96000 }
+ 				}
+ 			},
+ 			{
+ 				.ifnum = -1
+ 			}
+ 		}
+ 	}
+ },
+ {
+ 	/*
+ 	 * Pioneer DJ DJM-450
+ 	 * PCM is 8 channels out @ 48 fixed (endpoint 0x01)
+ 	 * and 8 channels in @ 48 fixed (endpoint 0x82).
+ 	 */
+ 	USB_DEVICE_VENDOR_SPEC(0x2b73, 0x0013),
+ 	.driver_info = (unsigned long) &(const struct snd_usb_audio_quirk) {
+ 		.ifnum = QUIRK_ANY_INTERFACE,
+ 		.type = QUIRK_COMPOSITE,
+ 		.data = (const struct snd_usb_audio_quirk[]) {
+ 			{
+ 				.ifnum = 0,
+ 				.type = QUIRK_AUDIO_FIXED_ENDPOINT,
+ 				.data = &(const struct audioformat) {
+ 					.formats = SNDRV_PCM_FMTBIT_S24_3LE,
+ 					.channels = 8, // outputs
+ 					.iface = 0,
+ 					.altsetting = 1,
+ 					.altset_idx = 1,
+ 					.endpoint = 0x01,
+ 					.ep_attr = USB_ENDPOINT_XFER_ISOC|
+ 						USB_ENDPOINT_SYNC_ASYNC,
+ 					.rates = SNDRV_PCM_RATE_48000,
+ 					.rate_min = 48000,
+ 					.rate_max = 48000,
+ 					.nr_rates = 1,
+ 					.rate_table = (unsigned int[]) { 48000 }
+ 					}
+ 			},
+ 			{
+ 				.ifnum = 0,
+ 				.type = QUIRK_AUDIO_FIXED_ENDPOINT,
+ 				.data = &(const struct audioformat) {
+ 					.formats = SNDRV_PCM_FMTBIT_S24_3LE,
+ 					.channels = 8, // inputs
+ 					.iface = 0,
+ 					.altsetting = 1,
+ 					.altset_idx = 1,
+ 					.endpoint = 0x82,
+ 					.ep_idx = 1,
+ 					.ep_attr = USB_ENDPOINT_XFER_ISOC|
+ 						USB_ENDPOINT_SYNC_ASYNC|
+ 						USB_ENDPOINT_USAGE_IMPLICIT_FB,
+ 					.rates = SNDRV_PCM_RATE_48000,
+ 					.rate_min = 48000,
+ 					.rate_max = 48000,
+ 					.nr_rates = 1,
+ 					.rate_table = (unsigned int[]) { 48000 }
+ 				}
+ 			},
+ 			{
+ 				.ifnum = -1
+ 			}
+ 		}
+ 	}
+ },
++>>>>>>> 9119e5661eab (ALSA: usb-audio: Add DJM-450 to the quirks table)
  
  #undef USB_DEVICE_VENDOR_SPEC
  #undef USB_AUDIO_DEVICE
* Unmerged path sound/usb/quirks-table.h
