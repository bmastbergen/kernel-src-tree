net/mlx5e: Revert parameters on errors when changing PTP state without reset

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Maxim Mikityanskiy <maximmi@mellanox.com>
commit 74640f09735f935437bd8df9fe61a66f03eabb34
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/74640f09.failed

Port timestamping for PTP can be enabled/disabled while the channels are
closed. In that case mlx5e_safe_switch_channels is skipped, and the
preactivate hook is called directly. However, if that hook returns an
error, the channel parameters must be reverted back to their old values.
This commit adds missing handling on this case.

Fixes: 145e5637d941 ("net/mlx5e: Add TX PTP port object support")
	Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 74640f09735f935437bd8df9fe61a66f03eabb34)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index eee5ffafc693,0e059d5c57ac..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@@ -1975,6 -1986,53 +1975,56 @@@ static int set_pflag_skb_tx_mpwqe(struc
  	return set_pflag_tx_mpwqe_common(netdev, MLX5E_PFLAG_SKB_TX_MPWQE, enable);
  }
  
++<<<<<<< HEAD
++=======
+ static int set_pflag_tx_port_ts(struct net_device *netdev, bool enable)
+ {
+ 	struct mlx5e_priv *priv = netdev_priv(netdev);
+ 	struct mlx5_core_dev *mdev = priv->mdev;
+ 	struct mlx5e_channels new_channels = {};
+ 	int err;
+ 
+ 	if (!MLX5_CAP_GEN(mdev, ts_cqe_to_dest_cqn))
+ 		return -EOPNOTSUPP;
+ 
+ 	/* Don't allow changing the PTP state if HTB offload is active, because
+ 	 * the numeration of the QoS SQs will change, while per-queue qdiscs are
+ 	 * attached.
+ 	 */
+ 	if (priv->htb.maj_id) {
+ 		netdev_err(priv->netdev, "%s: HTB offload is active, cannot change the PTP state\n",
+ 			   __func__);
+ 		return -EINVAL;
+ 	}
+ 
+ 	new_channels.params = priv->channels.params;
+ 	MLX5E_SET_PFLAG(&new_channels.params, MLX5E_PFLAG_TX_PORT_TS, enable);
+ 	/* No need to verify SQ stop room as
+ 	 * ptpsq.txqsq.stop_room <= generic_sq->stop_room, and both
+ 	 * has the same log_sq_size.
+ 	 */
+ 
+ 	if (!test_bit(MLX5E_STATE_OPENED, &priv->state)) {
+ 		struct mlx5e_params old_params;
+ 
+ 		old_params = priv->channels.params;
+ 		priv->channels.params = new_channels.params;
+ 		err = mlx5e_num_channels_changed(priv);
+ 		if (err)
+ 			priv->channels.params = old_params;
+ 		goto out;
+ 	}
+ 
+ 	err = mlx5e_safe_switch_channels(priv, &new_channels,
+ 					 mlx5e_num_channels_changed_ctx, NULL);
+ out:
+ 	if (!err)
+ 		priv->port_ptp_opened = true;
+ 
+ 	return err;
+ }
+ 
++>>>>>>> 74640f09735f (net/mlx5e: Revert parameters on errors when changing PTP state without reset)
  static const struct pflag_desc mlx5e_priv_flags[MLX5E_NUM_PFLAGS] = {
  	{ "rx_cqe_moder",        set_pflag_rx_cqe_based_moder },
  	{ "tx_cqe_moder",        set_pflag_tx_cqe_based_moder },
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
