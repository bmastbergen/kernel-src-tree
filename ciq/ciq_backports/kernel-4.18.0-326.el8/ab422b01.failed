drm/qxl: move shadow handling to new qxl_prepare_shadow()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Gerd Hoffmann <kraxel@redhat.com>
commit ab422b01e06e4fb4e5036b6eca3bc36903838295
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/ab422b01.failed

Pure code motion, no functional change.

	Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
	Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
Link: http://patchwork.freedesktop.org/patch/msgid/20210217123213.2199186-10-kraxel@redhat.com
(cherry picked from commit ab422b01e06e4fb4e5036b6eca3bc36903838295)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/qxl/qxl_display.c
diff --cc drivers/gpu/drm/qxl/qxl_display.c
index 59ef1f0c985d,b315d7484e21..000000000000
--- a/drivers/gpu/drm/qxl/qxl_display.c
+++ b/drivers/gpu/drm/qxl/qxl_display.c
@@@ -767,8 -810,6 +800,11 @@@ static int qxl_plane_prepare_fb(struct 
  	struct qxl_device *qdev = to_qxl(plane->dev);
  	struct drm_gem_object *obj;
  	struct qxl_bo *user_bo;
++<<<<<<< HEAD
 +	struct qxl_surface surf;
 +	int ret;
++=======
++>>>>>>> ab422b01e06e (drm/qxl: move shadow handling to new qxl_prepare_shadow())
  
  	if (!new_state->fb)
  		return 0;
@@@ -778,37 -819,10 +814,41 @@@
  
  	if (plane->type == DRM_PLANE_TYPE_PRIMARY &&
  	    user_bo->is_dumb) {
++<<<<<<< HEAD
 +		qxl_update_dumb_head(qdev, new_state->crtc->index,
 +				     user_bo);
 +		qxl_calc_dumb_shadow(qdev, &surf);
 +		if (!qdev->dumb_shadow_bo ||
 +		    qdev->dumb_shadow_bo->surf.width  != surf.width ||
 +		    qdev->dumb_shadow_bo->surf.height != surf.height) {
 +			if (qdev->dumb_shadow_bo) {
 +				drm_gem_object_put
 +					(&qdev->dumb_shadow_bo->tbo.base);
 +				qdev->dumb_shadow_bo = NULL;
 +			}
 +			qxl_bo_create(qdev, surf.height * surf.stride,
 +				      true, true, QXL_GEM_DOMAIN_SURFACE, &surf,
 +				      &qdev->dumb_shadow_bo);
 +		}
 +		if (user_bo->shadow != qdev->dumb_shadow_bo) {
 +			if (user_bo->shadow) {
 +				drm_gem_object_put
 +					(&user_bo->shadow->tbo.base);
 +				user_bo->shadow = NULL;
 +			}
 +			drm_gem_object_get(&qdev->dumb_shadow_bo->tbo.base);
 +			user_bo->shadow = qdev->dumb_shadow_bo;
 +		}
++=======
+ 		qxl_prepare_shadow(qdev, user_bo, new_state->crtc->index);
++>>>>>>> ab422b01e06e (drm/qxl: move shadow handling to new qxl_prepare_shadow())
  	}
  
 -	return qxl_bo_pin(user_bo);
 +	ret = qxl_bo_pin(user_bo);
 +	if (ret)
 +		return ret;
 +
 +	return 0;
  }
  
  static void qxl_plane_cleanup_fb(struct drm_plane *plane,
* Unmerged path drivers/gpu/drm/qxl/qxl_display.c
