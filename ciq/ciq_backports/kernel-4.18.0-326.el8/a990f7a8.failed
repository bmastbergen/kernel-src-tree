xfs: improve ondisk dquot flags checking

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit a990f7a84edc9941956ea3c1dfb89733c80f9ad0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/a990f7a8.failed

Create an XFS_DQTYPE_ANY mask for ondisk dquots flags, and use that to
ensure that we never accept any garbage flags when we're loading dquots.
While we're at it, restructure the quota type flag checking to use the
proper masking.

Note that I plan to add y2038 support soon, which will require a new
xfs_dqtype_t flag for extended timestamp support, hence all the work to
make the type masking work correctly.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit a990f7a84edc9941956ea3c1dfb89733c80f9ad0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_format.h
diff --cc fs/xfs/libxfs/xfs_format.h
index 5d5e0f5eda97,29564bd32bef..000000000000
--- a/fs/xfs/libxfs/xfs_format.h
+++ b/fs/xfs/libxfs/xfs_format.h
@@@ -1149,6 -1149,17 +1149,20 @@@ static inline void xfs_dinode_put_rdev(
  #define XFS_DQUOT_MAGIC		0x4451		/* 'DQ' */
  #define XFS_DQUOT_VERSION	(uint8_t)0x01	/* latest version number */
  
++<<<<<<< HEAD
++=======
+ #define XFS_DQTYPE_USER		0x01		/* user dquot record */
+ #define XFS_DQTYPE_PROJ		0x02		/* project dquot record */
+ #define XFS_DQTYPE_GROUP	0x04		/* group dquot record */
+ 
+ /* bitmask to determine if this is a user/group/project dquot */
+ #define XFS_DQTYPE_REC_MASK	(XFS_DQTYPE_USER | \
+ 				 XFS_DQTYPE_PROJ | \
+ 				 XFS_DQTYPE_GROUP)
+ 
+ #define XFS_DQTYPE_ANY		(XFS_DQTYPE_REC_MASK)
+ 
++>>>>>>> a990f7a84edc (xfs: improve ondisk dquot flags checking)
  /*
   * This is the main portion of the on-disk representation of quota information
   * for a user.  We pad this with some more expansion room to construct the on
diff --git a/fs/xfs/libxfs/xfs_dquot_buf.c b/fs/xfs/libxfs/xfs_dquot_buf.c
index 450147df3042..0c20e0f2474a 100644
--- a/fs/xfs/libxfs/xfs_dquot_buf.c
+++ b/fs/xfs/libxfs/xfs_dquot_buf.c
@@ -39,6 +39,8 @@ xfs_dquot_verify(
 	struct xfs_disk_dquot	*ddq,
 	xfs_dqid_t		id)	/* used only during quotacheck */
 {
+	__u8			ddq_type;
+
 	/*
 	 * We can encounter an uninitialized dquot buffer for 2 reasons:
 	 * 1. If we crash while deleting the quotainode(s), and those blks got
@@ -59,9 +61,12 @@ xfs_dquot_verify(
 	if (ddq->d_version != XFS_DQUOT_VERSION)
 		return __this_address;
 
-	if (ddq->d_flags != XFS_DQTYPE_USER &&
-	    ddq->d_flags != XFS_DQTYPE_PROJ &&
-	    ddq->d_flags != XFS_DQTYPE_GROUP)
+	if (ddq->d_flags & ~XFS_DQTYPE_ANY)
+		return __this_address;
+	ddq_type = ddq->d_flags & XFS_DQTYPE_REC_MASK;
+	if (ddq_type != XFS_DQTYPE_USER &&
+	    ddq_type != XFS_DQTYPE_PROJ &&
+	    ddq_type != XFS_DQTYPE_GROUP)
 		return __this_address;
 
 	if (id != -1 && id != be32_to_cpu(ddq->d_id))
* Unmerged path fs/xfs/libxfs/xfs_format.h
