r8152: avoid to call napi_disable twice

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Hayes Wang <hayeswang@realtek.com>
commit 5b1d9c17a3e0c16e1c9adf9c8a89f2735cb6dff8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/5b1d9c17.failed

Call napi_disable() twice would cause dead lock. There are three situations
may result in the issue.

1. rtl8152_pre_reset() and set_carrier() are run at the same time.
2. Call rtl8152_set_tunable() after rtl8152_close().
3. Call rtl8152_set_ringparam() after rtl8152_close().

For #1, use the same solution as commit 84811412464d ("r8152: Re-order
napi_disable in rtl8152_close"). For #2 and #3, add checking the flag
of IFF_UP and using napi_disable/napi_enable during mutex.

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5b1d9c17a3e0c16e1c9adf9c8a89f2735cb6dff8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index eacec38c3c98,b2507c59ba8b..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -5516,7 -4551,7 +5516,11 @@@ static int rtl8152_pre_reset(struct usb
  		return 0;
  
  	netif_stop_queue(netdev);
++<<<<<<< HEAD
 +	napi_disable(&tp->napi);
++=======
+ 	tasklet_disable(&tp->tx_tl);
++>>>>>>> 5b1d9c17a3e0 (r8152: avoid to call napi_disable twice)
  	clear_bit(WORK_ENABLE, &tp->flags);
  	usb_kill_urb(tp->intr_urb);
  	cancel_delayed_work_sync(&tp->schedule);
* Unmerged path drivers/net/usb/r8152.c
