ionic: add SKBTX_IN_PROGRESS

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Shannon Nelson <snelson@pensando.io>
commit bd7856bcd498498a91b275904b9aa43882cf85a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/bd7856bc.failed

Set the SKBTX_IN_PROGRESS when offloading the Tx timestamp.

	Signed-off-by: Shannon Nelson <snelson@pensando.io>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bd7856bcd498498a91b275904b9aa43882cf85a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/pensando/ionic/ionic_txrx.c
diff --cc drivers/net/ethernet/pensando/ionic/ionic_txrx.c
index c718ad9db767,08934888575c..000000000000
--- a/drivers/net/ethernet/pensando/ionic/ionic_txrx.c
+++ b/drivers/net/ethernet/pensando/ionic/ionic_txrx.c
@@@ -1185,6 -1184,42 +1185,45 @@@ static int ionic_maybe_stop_tx(struct i
  	return stopped;
  }
  
++<<<<<<< HEAD
++=======
+ static netdev_tx_t ionic_start_hwstamp_xmit(struct sk_buff *skb,
+ 					    struct net_device *netdev)
+ {
+ 	struct ionic_lif *lif = netdev_priv(netdev);
+ 	struct ionic_queue *q = &lif->hwstamp_txq->q;
+ 	int err, ndescs;
+ 
+ 	/* Does not stop/start txq, because we post to a separate tx queue
+ 	 * for timestamping, and if a packet can't be posted immediately to
+ 	 * the timestamping queue, it is dropped.
+ 	 */
+ 
+ 	ndescs = ionic_tx_descs_needed(q, skb);
+ 	if (unlikely(ndescs < 0))
+ 		goto err_out_drop;
+ 
+ 	if (unlikely(!ionic_q_has_space(q, ndescs)))
+ 		goto err_out_drop;
+ 
+ 	skb_shinfo(skb)->tx_flags |= SKBTX_HW_TSTAMP;
+ 	if (skb_is_gso(skb))
+ 		err = ionic_tx_tso(q, skb);
+ 	else
+ 		err = ionic_tx(q, skb);
+ 
+ 	if (err)
+ 		goto err_out_drop;
+ 
+ 	return NETDEV_TX_OK;
+ 
+ err_out_drop:
+ 	q->drop++;
+ 	dev_kfree_skb(skb);
+ 	return NETDEV_TX_OK;
+ }
+ 
++>>>>>>> bd7856bcd498 (ionic: add SKBTX_IN_PROGRESS)
  netdev_tx_t ionic_start_xmit(struct sk_buff *skb, struct net_device *netdev)
  {
  	u16 queue_index = skb_get_queue_mapping(skb);
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_txrx.c
