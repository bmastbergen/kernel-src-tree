ionic: simplify TSO descriptor mapping

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Shannon Nelson <snelson@pensando.io>
commit 5b039241fe3a31b67fbffb07082c6d9d972204f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/5b039241.failed

One issue with the original TSO code was that it was working too
hard to deal with skb layouts that were never going to show up,
such as an skb->data that was longer than a single descriptor's
length.  The other issue was trying to arrange the fragment dma
mapping at the same time as figuring out the descriptors needed.
There was just too much going on at the same time.

Now we do the dma mapping first, which sets up the buffers with
skb->data in buf[0] and the remaining frags in buf[1..n-1].
Next we spread the bufs across the descriptors needed, where
each descriptor gets up to mss number of bytes.

	Signed-off-by: Shannon Nelson <snelson@pensando.io>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5b039241fe3a31b67fbffb07082c6d9d972204f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/pensando/ionic/ionic_txrx.c
diff --cc drivers/net/ethernet/pensando/ionic/ionic_txrx.c
index 8369e1e143a1,639000a2e495..000000000000
--- a/drivers/net/ethernet/pensando/ionic/ionic_txrx.c
+++ b/drivers/net/ethernet/pensando/ionic/ionic_txrx.c
@@@ -820,29 -835,23 +861,28 @@@ static struct ionic_txq_desc *ionic_tx_
  
  static int ionic_tx_tso(struct ionic_queue *q, struct sk_buff *skb)
  {
+ 	struct ionic_buf_info buf_info[IONIC_MAX_FRAGS] = {{0}};
  	struct ionic_tx_stats *stats = q_to_tx_stats(q);
++<<<<<<< HEAD
 +	struct ionic_desc_info *rewind_desc_info;
 +	struct device *dev = q->lif->ionic->dev;
++=======
++>>>>>>> 5b039241fe3a (ionic: simplify TSO descriptor mapping)
  	struct ionic_txq_sg_elem *elem;
  	struct ionic_txq_desc *desc;
- 	unsigned int frag_left = 0;
- 	unsigned int offset = 0;
- 	u16 abort = q->head_idx;
- 	unsigned int len_left;
+ 	unsigned int chunk_len;
+ 	unsigned int frag_rem;
+ 	unsigned int frag_idx;
+ 	unsigned int tso_rem;
+ 	unsigned int seg_rem;
  	dma_addr_t desc_addr;
+ 	dma_addr_t frag_addr;
  	unsigned int hdrlen;
  	unsigned int nfrags;
- 	unsigned int seglen;
- 	u64 total_bytes = 0;
- 	u64 total_pkts = 0;
- 	u16 rewind = abort;
- 	unsigned int left;
  	unsigned int len;
  	unsigned int mss;
- 	skb_frag_t *frag;
  	bool start, done;
  	bool outer_csum;
- 	dma_addr_t addr;
  	bool has_vlan;
  	u16 desc_len;
  	u8 desc_nsge;
diff --git a/drivers/net/ethernet/pensando/ionic/ionic_dev.h b/drivers/net/ethernet/pensando/ionic/ionic_dev.h
index 0f877c86eba6..8a2ece9bd765 100644
--- a/drivers/net/ethernet/pensando/ionic/ionic_dev.h
+++ b/drivers/net/ethernet/pensando/ionic/ionic_dev.h
@@ -179,8 +179,11 @@ struct ionic_buf_info {
 	struct page *page;
 	dma_addr_t dma_addr;
 	u32 page_offset;
+	u32 len;
 };
 
+#define IONIC_MAX_FRAGS			(1 + IONIC_TX_MAX_SG_ELEMS_V1)
+
 struct ionic_desc_info {
 	union {
 		void *desc;
@@ -194,7 +197,7 @@ struct ionic_desc_info {
 		struct ionic_rxq_sg_desc *rxq_sgl_desc;
 	};
 	unsigned int nbufs;
-	struct ionic_buf_info bufs[IONIC_RX_MAX_SG_ELEMS + 1];
+	struct ionic_buf_info bufs[IONIC_MAX_FRAGS];
 	ionic_desc_cb cb;
 	void *cb_arg;
 };
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_txrx.c
