RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-326.el8
commit-author Jason Gunthorpe <jgg@nvidia.com>
commit 7db0eea916dcc050811f7a498b4e268d764c6d24
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-326.el8/7db0eea9.failed

This is the same as ib_umem_num_dma_blocks(umem, 1UL << page_shift), have
the callers compute it directly.

Link: https://lore.kernel.org/r/20201026131936.1335664-7-leon@kernel.org
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit 7db0eea916dcc050811f7a498b4e268d764c6d24)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/cq.c
#	drivers/infiniband/hw/mlx5/devx.c
#	drivers/infiniband/hw/mlx5/mem.c
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
#	drivers/infiniband/hw/mlx5/mr.c
#	drivers/infiniband/hw/mlx5/qp.c
#	drivers/infiniband/hw/mlx5/srq.c
diff --cc drivers/infiniband/hw/mlx5/cq.c
index 97c9edcdf214,e2d28081bd2a..000000000000
--- a/drivers/infiniband/hw/mlx5/cq.c
+++ b/drivers/infiniband/hw/mlx5/cq.c
@@@ -746,8 -746,9 +746,14 @@@ static int create_cq_user(struct mlx5_i
  	if (err)
  		goto err_umem;
  
++<<<<<<< HEAD
 +	mlx5_ib_cont_pages(cq->buf.umem, ucmd.buf_addr, 0, &npages, &page_shift,
 +			   &ncont, NULL);
++=======
+ 	mlx5_ib_cont_pages(cq->buf.umem, ucmd.buf_addr, 0, &npages,
+ 			   &page_shift);
+ 	ncont = ib_umem_num_dma_blocks(cq->buf.umem, 1UL << page_shift);
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  	mlx5_ib_dbg(dev, "addr 0x%llx, size %u, npages %d, page_shift %d, ncont %d\n",
  		    ucmd.buf_addr, entries * ucmd.cqe_size, npages, page_shift, ncont);
  
@@@ -1155,8 -1156,7 +1161,12 @@@ static int resize_user(struct mlx5_ib_d
  		return err;
  	}
  
++<<<<<<< HEAD
 +	mlx5_ib_cont_pages(umem, ucmd.buf_addr, 0, &npages, page_shift,
 +			   npas, NULL);
++=======
+ 	mlx5_ib_cont_pages(umem, ucmd.buf_addr, 0, &npages, page_shift);
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  
  	cq->resize_umem = umem;
  	*cqe_size = ucmd.cqe_size;
diff --cc drivers/infiniband/hw/mlx5/devx.c
index ed09a0921724,7d99b5b298da..000000000000
--- a/drivers/infiniband/hw/mlx5/devx.c
+++ b/drivers/infiniband/hw/mlx5/devx.c
@@@ -95,9 -95,8 +95,8 @@@ struct devx_umem 
  	struct ib_umem			*umem;
  	u32				page_offset;
  	int				page_shift;
- 	int				ncont;
  	u32				dinlen;
 -	u32				dinbox[MLX5_ST_SZ_DW(general_obj_in_cmd_hdr)];
 +	u32				dinbox[MLX5_ST_SZ_DW(destroy_umem_in)];
  };
  
  struct devx_umem_reg_cmd {
@@@ -2178,7 -2082,7 +2177,11 @@@ static int devx_umem_get(struct mlx5_ib
  
  	mlx5_ib_cont_pages(obj->umem, obj->umem->address,
  			   MLX5_MKEY_PAGE_SHIFT_MASK, &npages,
++<<<<<<< HEAD
 +			   &obj->page_shift, &obj->ncont, NULL);
++=======
+ 			   &obj->page_shift);
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  
  	if (!npages) {
  		ib_umem_release(obj->umem);
diff --cc drivers/infiniband/hw/mlx5/mem.c
index 13de3d2edd34,6d87f8c13ce0..000000000000
--- a/drivers/infiniband/hw/mlx5/mem.c
+++ b/drivers/infiniband/hw/mlx5/mem.c
@@@ -41,13 -41,9 +41,19 @@@
   * @max_page_shift: high limit for page_shift - 0 means no limit
   * @count: number of PAGE_SIZE pages covered by umem
   * @shift: page shift for the compound pages found in the region
++<<<<<<< HEAD
 + * @ncont: number of compund pages
 + * @order: log2 of the number of compound pages
 + */
 +void mlx5_ib_cont_pages(struct ib_umem *umem, u64 addr,
 +			unsigned long max_page_shift,
 +			int *count, int *shift,
 +			int *ncont, int *order)
++=======
+  */
+ void mlx5_ib_cont_pages(struct ib_umem *umem, u64 addr,
+ 			unsigned long max_page_shift, int *count, int *shift)
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  {
  	unsigned long tmp;
  	unsigned long m;
@@@ -57,6 -53,14 +63,17 @@@
  	struct scatterlist *sg;
  	int entry;
  
++<<<<<<< HEAD
++=======
+ 	if (umem->is_odp) {
+ 		struct ib_umem_odp *odp = to_ib_umem_odp(umem);
+ 
+ 		*shift = odp->page_shift;
+ 		*count = ib_umem_num_pages(umem);
+ 		return;
+ 	}
+ 
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  	addr = addr >> PAGE_SHIFT;
  	tmp = (unsigned long)addr;
  	m = find_first_bit(&tmp, BITS_PER_LONG);
@@@ -82,21 -86,10 +99,26 @@@
  		i += len;
  	}
  
- 	if (i) {
+ 	if (i)
  		m = min_t(unsigned long, ilog2(roundup_pow_of_two(i)), m);
++<<<<<<< HEAD
 +
 +		if (order)
 +			*order = ilog2(roundup_pow_of_two(i) >> m);
 +
 +		*ncont = DIV_ROUND_UP(i, (1 << m));
 +	} else {
 +		m  = 0;
 +
 +		if (order)
 +			*order = 0;
 +
 +		*ncont = 0;
 +	}
++=======
+ 	else
+ 		m  = 0;
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  	*shift = PAGE_SHIFT + m;
  	*count = i;
  }
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index 5e47304abc75,a36b0b8138a0..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -1234,8 -1231,7 +1234,12 @@@ int mlx5_ib_query_port(struct ib_devic
  		       struct ib_port_attr *props);
  void mlx5_ib_cont_pages(struct ib_umem *umem, u64 addr,
  			unsigned long max_page_shift,
++<<<<<<< HEAD
 +			int *count, int *shift,
 +			int *ncont, int *order);
++=======
+ 			int *count, int *shift);
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  void __mlx5_ib_populate_pas(struct mlx5_ib_dev *dev, struct ib_umem *umem,
  			    int page_shift, size_t offset, size_t num_pages,
  			    __be64 *pas, int access_flags);
diff --cc drivers/infiniband/hw/mlx5/mr.c
index 52d81032598e,305520bb0863..000000000000
--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@@ -975,15 -950,20 +975,25 @@@ static struct mlx5_cache_ent *mr_cache_
  	return &cache->ent[order];
  }
  
 -static struct mlx5_ib_mr *alloc_mr_from_cache(struct ib_pd *pd,
 -					      struct ib_umem *umem, u64 iova,
 -					      int access_flags)
 +static struct mlx5_ib_mr *
 +alloc_mr_from_cache(struct ib_pd *pd, struct ib_umem *umem, u64 virt_addr,
 +		    u64 len, int npages, int page_shift, unsigned int order,
 +		    int access_flags)
  {
  	struct mlx5_ib_dev *dev = to_mdev(pd->device);
 -	struct mlx5_cache_ent *ent;
 +	struct mlx5_cache_ent *ent = mr_cache_ent_from_order(dev, order);
  	struct mlx5_ib_mr *mr;
++<<<<<<< HEAD
 +
++=======
+ 	int npages;
+ 	int page_shift;
+ 
+ 	mlx5_ib_cont_pages(umem, iova, MLX5_MKEY_PAGE_SHIFT_MASK, &npages,
+ 			   &page_shift);
+ 	ent = mr_cache_ent_from_order(dev, order_base_2(ib_umem_num_dma_blocks(
+ 						   umem, 1UL << page_shift)));
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  	if (!ent)
  		return ERR_PTR(-E2BIG);
  
@@@ -1170,7 -1149,9 +1180,11 @@@ static struct mlx5_ib_mr *reg_create(st
  {
  	struct mlx5_ib_dev *dev = to_mdev(pd->device);
  	struct mlx5_ib_mr *mr;
 -	int page_shift;
  	__be64 *pas;
++<<<<<<< HEAD
++=======
+ 	int npages;
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  	void *mkc;
  	int inlen;
  	u32 *in;
@@@ -1181,6 -1162,10 +1195,13 @@@
  	if (!mr)
  		return ERR_PTR(-ENOMEM);
  
++<<<<<<< HEAD
++=======
+ 	mlx5_ib_cont_pages(umem, iova, MLX5_MKEY_PAGE_SHIFT_MASK, &npages,
+ 			   &page_shift);
+ 
+ 	mr->page_shift = page_shift;
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  	mr->ibmr.pd = pd;
  	mr->access_flags = access_flags;
  
diff --cc drivers/infiniband/hw/mlx5/qp.c
index 981aaf96640e,b313e990362e..000000000000
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@@ -791,7 -791,7 +791,11 @@@ static int mlx5_ib_umem_get(struct mlx5
  		return PTR_ERR(*umem);
  	}
  
++<<<<<<< HEAD
 +	mlx5_ib_cont_pages(*umem, addr, 0, npages, page_shift, ncont, NULL);
++=======
+ 	mlx5_ib_cont_pages(*umem, addr, 0, npages, page_shift);
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  
  	err = mlx5_ib_get_buf_offset(addr, *page_shift, offset);
  	if (err) {
@@@ -849,8 -848,7 +852,12 @@@ static int create_user_rq(struct mlx5_i
  		return err;
  	}
  
++<<<<<<< HEAD
 +	mlx5_ib_cont_pages(rwq->umem, ucmd->buf_addr, 0, &npages, &page_shift,
 +			   &ncont, NULL);
++=======
+ 	mlx5_ib_cont_pages(rwq->umem, ucmd->buf_addr, 0, &npages, &page_shift);
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  	err = mlx5_ib_get_buf_offset(ucmd->buf_addr, page_shift,
  				     &rwq->rq_page_offset);
  	if (err) {
diff --cc drivers/infiniband/hw/mlx5/srq.c
index 39086f3cf4b4,24076c6078cf..000000000000
--- a/drivers/infiniband/hw/mlx5/srq.c
+++ b/drivers/infiniband/hw/mlx5/srq.c
@@@ -88,7 -87,7 +87,11 @@@ static int create_srq_user(struct ib_p
  	}
  
  	mlx5_ib_cont_pages(srq->umem, ucmd.buf_addr, 0, &npages,
++<<<<<<< HEAD
 +			   &page_shift, &ncont, NULL);
++=======
+ 			   &page_shift);
++>>>>>>> 7db0eea916dc (RDMA/mlx5: Remove ncont from mlx5_ib_cont_pages())
  	err = mlx5_ib_get_buf_offset(ucmd.buf_addr, page_shift,
  				     &offset);
  	if (err) {
* Unmerged path drivers/infiniband/hw/mlx5/cq.c
* Unmerged path drivers/infiniband/hw/mlx5/devx.c
* Unmerged path drivers/infiniband/hw/mlx5/mem.c
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
* Unmerged path drivers/infiniband/hw/mlx5/mr.c
* Unmerged path drivers/infiniband/hw/mlx5/qp.c
* Unmerged path drivers/infiniband/hw/mlx5/srq.c
