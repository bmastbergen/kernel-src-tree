s390/pci: fix out of bounds access during irq setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.36.2.el7
commit-author Sebastian Ott <sebott@linux.ibm.com>
commit 866f3576a72b2233a76dffb80290f8086dc49e17
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.36.2.el7/866f3576.failed

During interrupt setup we allocate interrupt vectors, walk the list of msi
descriptors, and fill in the message data. Requesting more interrupts than
supported on s390 can lead to an out of bounds access.

When we restrict the number of interrupts we should also stop walking the
msi list after all supported interrupts are handled.

	Cc: stable@vger.kernel.org
	Signed-off-by: Sebastian Ott <sebott@linux.ibm.com>
	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
(cherry picked from commit 866f3576a72b2233a76dffb80290f8086dc49e17)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/pci/pci.c
diff --cc arch/s390/pci/pci.c
index e3d424e9f820,8a505cfdd9b9..000000000000
--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@@ -524,22 -414,29 +524,35 @@@ int arch_setup_msi_irqs(struct pci_dev 
  	if (!zdev->aibv)
  		return -ENOMEM;
  
 -	/* Wire up shortcut pointer */
 -	zpci_aibv[aisb] = zdev->aibv;
 +	/* Allocate data structures for msi interrupts */
 +	rc = zpci_alloc_msi(zdev, msi_vecs);
 +	if (rc)
 +		return rc;
  
++<<<<<<< HEAD
 +	/* Wire up shortcut pointer */
 +	zpci_imap[aisb] = zdev->irq_map;
 +	zdev->irq_map->aibv = zdev->aibv;
 +
 +	msi_nr = __irq_offset(aisb);
 +	list_for_each_entry(msi, &pdev->msi_list, list) {
 +		rc = zpci_setup_msi_irq(zdev, msi, msi_nr,
 +					__irq_offset(aisb));
++=======
+ 	/* Request MSI interrupts */
+ 	hwirq = 0;
+ 	for_each_pci_msi_entry(msi, pdev) {
+ 		rc = -EIO;
+ 		if (hwirq >= msi_vecs)
+ 			break;
+ 		irq = irq_alloc_desc(0);	/* Alloc irq on node 0 */
+ 		if (irq < 0)
+ 			return -ENOMEM;
+ 		rc = irq_set_msi_desc(irq, msi);
++>>>>>>> 866f3576a72b (s390/pci: fix out of bounds access during irq setup)
  		if (rc)
  			return rc;
 -		irq_set_chip_and_handler(irq, &zpci_irq_chip,
 -					 handle_simple_irq);
 -		msg.data = hwirq;
 -		msg.address_lo = zdev->msi_addr & 0xffffffff;
 -		msg.address_hi = zdev->msi_addr >> 32;
 -		pci_write_msi_msg(irq, &msg);
 -		airq_iv_set_data(zdev->aibv, hwirq, irq);
 -		hwirq++;
 +		msi_nr++;
  	}
  
  	/* Enable adapter interrupts */
* Unmerged path arch/s390/pci/pci.c
