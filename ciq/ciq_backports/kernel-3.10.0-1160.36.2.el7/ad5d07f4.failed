cipso,calipso: resolve a number of problems with the DOI refcounts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.36.2.el7
commit-author Paul Moore <paul@paul-moore.com>
commit ad5d07f4a9cd671233ae20983848874731102c08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.36.2.el7/ad5d07f4.failed

The current CIPSO and CALIPSO refcounting scheme for the DOI
definitions is a bit flawed in that we:

1. Don't correctly match gets/puts in netlbl_cipsov4_list().
2. Decrement the refcount on each attempt to remove the DOI from the
   DOI list, only removing it from the list once the refcount drops
   to zero.

This patch fixes these problems by adding the missing "puts" to
netlbl_cipsov4_list() and introduces a more conventional, i.e.
not-buggy, refcounting mechanism to the DOI definitions.  Upon the
addition of a DOI to the DOI list, it is initialized with a refcount
of one, removing a DOI from the list removes it from the list and
drops the refcount by one; "gets" and "puts" behave as expected with
respect to refcounts, increasing and decreasing the DOI's refcount by
one.

Fixes: b1edeb102397 ("netlabel: Replace protocol/NetLabel linking with refrerence counts")
Fixes: d7cce01504a0 ("netlabel: Add support for removing a CALIPSO DOI.")
	Reported-by: syzbot+9ec037722d2603a9f52e@syzkaller.appspotmail.com
	Signed-off-by: Paul Moore <paul@paul-moore.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ad5d07f4a9cd671233ae20983848874731102c08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/cipso_ipv4.c
#	net/ipv6/calipso.c
diff --cc net/ipv4/cipso_ipv4.c
index 62f288b3952a,be09c7669a79..000000000000
--- a/net/ipv4/cipso_ipv4.c
+++ b/net/ipv4/cipso_ipv4.c
@@@ -605,11 -519,6 +605,14 @@@ int cipso_v4_doi_remove(u32 doi, struc
  		ret_val = -ENOENT;
  		goto doi_remove_return;
  	}
++<<<<<<< HEAD
 +	if (!atomic_dec_and_test(&doi_def->refcount)) {
 +		spin_unlock(&cipso_v4_doi_list_lock);
 +		ret_val = -EBUSY;
 +		goto doi_remove_return;
 +	}
++=======
++>>>>>>> ad5d07f4a9cd (cipso,calipso: resolve a number of problems with the DOI refcounts)
  	list_del_rcu(&doi_def->list);
  	spin_unlock(&cipso_v4_doi_list_lock);
  
@@@ -666,14 -574,11 +668,11 @@@ doi_getdef_return
   */
  void cipso_v4_doi_putdef(struct cipso_v4_doi *doi_def)
  {
 -	if (!doi_def)
 +	if (doi_def == NULL)
  		return;
  
 -	if (!refcount_dec_and_test(&doi_def->refcount))
 +	if (!atomic_dec_and_test(&doi_def->refcount))
  		return;
- 	spin_lock(&cipso_v4_doi_list_lock);
- 	list_del_rcu(&doi_def->list);
- 	spin_unlock(&cipso_v4_doi_list_lock);
  
  	cipso_v4_cache_invalidate();
  	call_rcu(&doi_def->rcu, cipso_v4_doi_free_rcu);
* Unmerged path net/ipv6/calipso.c
* Unmerged path net/ipv4/cipso_ipv4.c
* Unmerged path net/ipv6/calipso.c
diff --git a/net/netlabel/netlabel_cipso_v4.c b/net/netlabel/netlabel_cipso_v4.c
index 2c43aaa74167..bec5ba54480b 100644
--- a/net/netlabel/netlabel_cipso_v4.c
+++ b/net/netlabel/netlabel_cipso_v4.c
@@ -582,6 +582,7 @@ list_start:
 
 		break;
 	}
+	cipso_v4_doi_putdef(doi_def);
 	rcu_read_unlock();
 
 	genlmsg_end(ans_skb, data);
@@ -590,12 +591,14 @@ list_start:
 list_retry:
 	/* XXX - this limit is a guesstimate */
 	if (nlsze_mult < 4) {
+		cipso_v4_doi_putdef(doi_def);
 		rcu_read_unlock();
 		kfree_skb(ans_skb);
 		nlsze_mult *= 2;
 		goto list_start;
 	}
 list_failure_lock:
+	cipso_v4_doi_putdef(doi_def);
 	rcu_read_unlock();
 list_failure:
 	kfree_skb(ans_skb);
