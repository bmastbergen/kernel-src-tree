xfs: refactor xfs_bunmapi_cow

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Christoph Hellwig <hch@lst.de>
commit fa5c836ca8eb5bad6316ddfc066acbc4e2485356
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/fa5c836c.failed

Split out two helpers for deleting delayed or real extents from the COW fork.
This allows to call them directly from xfs_reflink_cow_end_io once that
function is refactored to iterate the extent tree.  It will also allow
to reuse the delalloc deletion from xfs_bunmapi in the future.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>


(cherry picked from commit fa5c836ca8eb5bad6316ddfc066acbc4e2485356)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_bmap.c
#	fs/xfs/libxfs/xfs_bmap.h
#	fs/xfs/xfs_reflink.c
diff --cc fs/xfs/libxfs/xfs_bmap.c
index a821827ec13e,d7ad51132f4f..000000000000
--- a/fs/xfs/libxfs/xfs_bmap.c
+++ b/fs/xfs/libxfs/xfs_bmap.c
@@@ -4976,6 -5414,28 +5189,31 @@@ done
  	return error;
  }
  
++<<<<<<< HEAD
++=======
+ /* Remove an extent from the CoW fork.  Similar to xfs_bmap_del_extent. */
+ int
+ xfs_bunmapi_cow(
+ 	struct xfs_inode		*ip,
+ 	struct xfs_bmbt_irec		*del)
+ {
+ 	struct xfs_bmbt_rec_host	*ep;
+ 	struct xfs_bmbt_irec		got;
+ 	struct xfs_bmbt_irec		new;
+ 	int				eof;
+ 	xfs_extnum_t			eidx;
+ 
+ 	ep = xfs_bmap_search_extents(ip, del->br_startoff, XFS_COW_FORK, &eof,
+ 				&eidx, &got, &new);
+ 	ASSERT(ep);
+ 	if (isnullstartblock(got.br_startblock))
+ 		xfs_bmap_del_extent_delay(ip, XFS_COW_FORK, &eidx, &got, del);
+ 	else
+ 		xfs_bmap_del_extent_cow(ip, &eidx, &got, del);
+ 	return 0;
+ }
+ 
++>>>>>>> fa5c836ca8eb (xfs: refactor xfs_bunmapi_cow)
  /*
   * Unmap (remove) blocks from a file.
   * If nexts is nonzero then the number of extents to remove is limited to
diff --cc fs/xfs/libxfs/xfs_bmap.h
index bbb72c6ceb86,5f18248cbac2..000000000000
--- a/fs/xfs/libxfs/xfs_bmap.h
+++ b/fs/xfs/libxfs/xfs_bmap.h
@@@ -194,13 -223,50 +194,24 @@@ int	xfs_bunmapi(struct xfs_trans *tp, s
  		xfs_fileoff_t bno, xfs_filblks_t len, int flags,
  		xfs_extnum_t nexts, xfs_fsblock_t *firstblock,
  		struct xfs_defer_ops *dfops, int *done);
++<<<<<<< HEAD
++=======
+ int	xfs_bunmapi_cow(struct xfs_inode *ip, struct xfs_bmbt_irec *del);
+ int	xfs_bmap_del_extent_delay(struct xfs_inode *ip, int whichfork,
+ 		xfs_extnum_t *idx, struct xfs_bmbt_irec *got,
+ 		struct xfs_bmbt_irec *del);
+ void	xfs_bmap_del_extent_cow(struct xfs_inode *ip, xfs_extnum_t *idx,
+ 		struct xfs_bmbt_irec *got, struct xfs_bmbt_irec *del);
+ int	xfs_check_nostate_extents(struct xfs_ifork *ifp, xfs_extnum_t idx,
+ 		xfs_extnum_t num);
++>>>>>>> fa5c836ca8eb (xfs: refactor xfs_bunmapi_cow)
  uint	xfs_default_attroffset(struct xfs_inode *ip);
  int	xfs_bmap_shift_extents(struct xfs_trans *tp, struct xfs_inode *ip,
 -		xfs_fileoff_t *next_fsb, xfs_fileoff_t offset_shift_fsb,
 -		int *done, xfs_fileoff_t stop_fsb, xfs_fsblock_t *firstblock,
 -		struct xfs_defer_ops *dfops, enum shift_direction direction,
 -		int num_exts);
 -int	xfs_bmap_split_extent(struct xfs_inode *ip, xfs_fileoff_t split_offset);
 -struct xfs_bmbt_rec_host *
 -	xfs_bmap_search_extents(struct xfs_inode *ip, xfs_fileoff_t bno,
 -		int fork, int *eofp, xfs_extnum_t *lastxp,
 -		struct xfs_bmbt_irec *gotp, struct xfs_bmbt_irec *prevp);
 -int	xfs_bmapi_reserve_delalloc(struct xfs_inode *ip, int whichfork,
 -		xfs_fileoff_t aoff, xfs_filblks_t len,
 -		struct xfs_bmbt_irec *got, struct xfs_bmbt_irec *prev,
 -		xfs_extnum_t *lastx, int eof);
 -
 -enum xfs_bmap_intent_type {
 -	XFS_BMAP_MAP = 1,
 -	XFS_BMAP_UNMAP,
 -};
 -
 -struct xfs_bmap_intent {
 -	struct list_head			bi_list;
 -	enum xfs_bmap_intent_type		bi_type;
 -	struct xfs_inode			*bi_owner;
 -	int					bi_whichfork;
 -	struct xfs_bmbt_irec			bi_bmap;
 -};
 -
 -int	xfs_bmap_finish_one(struct xfs_trans *tp, struct xfs_defer_ops *dfops,
 -		struct xfs_inode *ip, enum xfs_bmap_intent_type type,
 -		int whichfork, xfs_fileoff_t startoff, xfs_fsblock_t startblock,
 -		xfs_filblks_t blockcount, xfs_exntst_t state);
 -int	xfs_bmap_map_extent(struct xfs_mount *mp, struct xfs_defer_ops *dfops,
 -		struct xfs_inode *ip, struct xfs_bmbt_irec *imap);
 -int	xfs_bmap_unmap_extent(struct xfs_mount *mp, struct xfs_defer_ops *dfops,
 -		struct xfs_inode *ip, struct xfs_bmbt_irec *imap);
 +		xfs_fileoff_t start_fsb, xfs_fileoff_t offset_shift_fsb,
 +		int *done, xfs_fileoff_t *next_fsb, xfs_fsblock_t *firstblock,
 +		struct xfs_defer_ops *dfops, int num_exts);
 +int	xfs_bmapi_reserve_delalloc(struct xfs_inode *ip, xfs_fileoff_t off,
 +		xfs_filblks_t len, xfs_filblks_t prealloc,
 +		struct xfs_bmbt_irec *got, xfs_extnum_t *lastx, int eof);
  
  #endif	/* __XFS_BMAP_H__ */
* Unmerged path fs/xfs/xfs_reflink.c
* Unmerged path fs/xfs/libxfs/xfs_bmap.c
* Unmerged path fs/xfs/libxfs/xfs_bmap.h
* Unmerged path fs/xfs/xfs_reflink.c
