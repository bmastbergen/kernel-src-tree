perf report: Don't try to map ip to invalid map

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Milian Wolff <milian.wolff@kdab.com>
commit ff4ce2885af8f9e8e99864d78dbeb4673f089c76
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ff4ce288.failed

Fixes a crash when the report encounters an address that could not be
associated with an mmaped region:

  #0  0x00005555557bdc4a in callchain_srcline (ip=<error reading variable: Cannot access memory at address 0x38>, sym=0x0, map=0x0) at util/machine.c:2329
  #1  unwind_entry (entry=entry@entry=0x7fffffff9180, arg=arg@entry=0x7ffff5642498) at util/machine.c:2329
  #2  0x00005555558370af in entry (arg=0x7ffff5642498, cb=0x5555557bdb50 <unwind_entry>, thread=<optimized out>, ip=18446744073709551615) at util/unwind-libunwind-local.c:586
  #3  get_entries (ui=ui@entry=0x7fffffff9620, cb=0x5555557bdb50 <unwind_entry>, arg=0x7ffff5642498, max_stack=<optimized out>) at util/unwind-libunwind-local.c:703
  #4  0x0000555555837192 in _unwind__get_entries (cb=<optimized out>, arg=<optimized out>, thread=<optimized out>, data=<optimized out>, max_stack=<optimized out>) at util/unwind-libunwind-local.c:725
  #5  0x00005555557c310f in thread__resolve_callchain_unwind (max_stack=127, sample=0x7fffffff9830, evsel=0x555555c7b3b0, cursor=0x7ffff5642498, thread=0x555555c7f6f0) at util/machine.c:2351
  #6  thread__resolve_callchain (thread=0x555555c7f6f0, cursor=0x7ffff5642498, evsel=0x555555c7b3b0, sample=0x7fffffff9830, parent=0x7fffffff97b8, root_al=0x7fffffff9750, max_stack=127) at util/machine.c:2378
  #7  0x00005555557ba4ee in sample__resolve_callchain (sample=<optimized out>, cursor=<optimized out>, parent=parent@entry=0x7fffffff97b8, evsel=<optimized out>, al=al@entry=0x7fffffff9750,
      max_stack=<optimized out>) at util/callchain.c:1085

	Signed-off-by: Milian Wolff <milian.wolff@kdab.com>
	Tested-by: Sandipan Das <sandipan@linux.ibm.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Jin Yao <yao.jin@linux.intel.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
Fixes: 2a9d5050dc84 ("perf script: Show correct offsets for DWARF-based unwinding")
Link: http://lkml.kernel.org/r/20180926135207.30263-1-milian.wolff@kdab.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit ff4ce2885af8f9e8e99864d78dbeb4673f089c76)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/machine.c
diff --cc tools/perf/util/machine.c
index 31d5f3daa077,0cb4f8bf3ca7..000000000000
--- a/tools/perf/util/machine.c
+++ b/tools/perf/util/machine.c
@@@ -2295,6 -2312,7 +2295,10 @@@ static int unwind_entry(struct unwind_e
  {
  	struct callchain_cursor *cursor = arg;
  	const char *srcline = NULL;
++<<<<<<< HEAD
++=======
+ 	u64 addr = entry->ip;
++>>>>>>> ff4ce2885af8 (perf report: Don't try to map ip to invalid map)
  
  	if (symbol_conf.hide_unresolved && entry->sym == NULL)
  		return 0;
@@@ -2302,7 -2320,14 +2306,18 @@@
  	if (append_inlines(cursor, entry->map, entry->sym, entry->ip) == 0)
  		return 0;
  
++<<<<<<< HEAD
 +	srcline = callchain_srcline(entry->map, entry->sym, entry->ip);
++=======
+ 	/*
+ 	 * Convert entry->ip from a virtual address to an offset in
+ 	 * its corresponding binary.
+ 	 */
+ 	if (entry->map)
+ 		addr = map__map_ip(entry->map, entry->ip);
+ 
+ 	srcline = callchain_srcline(entry->map, entry->sym, addr);
++>>>>>>> ff4ce2885af8 (perf report: Don't try to map ip to invalid map)
  	return callchain_cursor_append(cursor, entry->ip,
  				       entry->map, entry->sym,
  				       false, NULL, 0, 0, 0, srcline);
* Unmerged path tools/perf/util/machine.c
