perf annotate: Move objdump_path to struct annotation_options

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit f178fd2d498eccbf6592ace72b9f235f0e58c77d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/f178fd2d.failed

One more step in grouping annotation options.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-sogzdhugoavm6fyw60jnb0vs@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit f178fd2d498eccbf6592ace72b9f235f0e58c77d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/annotate.c
#	tools/perf/util/annotate.h
diff --cc tools/perf/util/annotate.c
index a69de39de0d6,2baa22933b0e..000000000000
--- a/tools/perf/util/annotate.c
+++ b/tools/perf/util/annotate.c
@@@ -51,8 -51,6 +51,11 @@@ struct annotation_options annotation__d
  	.offset_level	= ANNOTATION__OFFSET_JUMP_TARGETS,
  };
  
++<<<<<<< HEAD
 +const char 	*disassembler_style;
 +const char	*objdump_path;
++=======
++>>>>>>> f178fd2d498e (perf annotate: Move objdump_path to struct annotation_options)
  static regex_t	 file_lineno;
  
  static struct ins_ops *ins__find(struct arch *arch, const char *name);
@@@ -1658,9 -1656,9 +1661,15 @@@ static int symbol__disassemble(struct s
  		 "%s %s%s --start-address=0x%016" PRIx64
  		 " --stop-address=0x%016" PRIx64
  		 " -l -d %s %s -C \"%s\" 2>/dev/null|grep -v \"%s:\"|expand",
++<<<<<<< HEAD
 +		 objdump_path ? objdump_path : "objdump",
 +		 disassembler_style ? "-M " : "",
 +		 disassembler_style ? disassembler_style : "",
++=======
+ 		 opts->objdump_path ?: "objdump",
+ 		 opts->disassembler_style ? "-M " : "",
+ 		 opts->disassembler_style ?: "",
++>>>>>>> f178fd2d498e (perf annotate: Move objdump_path to struct annotation_options)
  		 map__rip_2objdump(map, sym->start),
  		 map__rip_2objdump(map, sym->end),
  		 opts->show_asm_raw ? "" : "--no-show-raw",
diff --cc tools/perf/util/annotate.h
index 93e7f38c23cc,a4c0d91907e6..000000000000
--- a/tools/perf/util/annotate.h
+++ b/tools/perf/util/annotate.h
@@@ -74,6 -77,11 +74,14 @@@ struct annotation_options 
  	     show_asm_raw,
  	     annotate_src;
  	u8   offset_level;
++<<<<<<< HEAD
++=======
+ 	int  min_pcnt;
+ 	int  max_lines;
+ 	int  context;
+ 	const char *objdump_path;
+ 	const char *disassembler_style;
++>>>>>>> f178fd2d498e (perf annotate: Move objdump_path to struct annotation_options)
  };
  
  enum {
diff --git a/tools/perf/arch/common.c b/tools/perf/arch/common.c
index c15d10aede16..a55404b1c5c5 100644
--- a/tools/perf/arch/common.c
+++ b/tools/perf/arch/common.c
@@ -188,7 +188,7 @@ out_error:
 	return -1;
 }
 
-int perf_env__lookup_objdump(struct perf_env *env)
+int perf_env__lookup_objdump(struct perf_env *env, const char **path)
 {
 	/*
 	 * For live mode, env->arch will be NULL and we can use
@@ -197,5 +197,5 @@ int perf_env__lookup_objdump(struct perf_env *env)
 	if (env->arch == NULL)
 		return 0;
 
-	return perf_env__lookup_binutils_path(env, "objdump", &objdump_path);
+	return perf_env__lookup_binutils_path(env, "objdump", path);
 }
diff --git a/tools/perf/arch/common.h b/tools/perf/arch/common.h
index 7529cfb143ce..4a037fbe933f 100644
--- a/tools/perf/arch/common.h
+++ b/tools/perf/arch/common.h
@@ -3,8 +3,6 @@
 
 #include "../util/env.h"
 
-extern const char *objdump_path;
-
-int perf_env__lookup_objdump(struct perf_env *env);
+int perf_env__lookup_objdump(struct perf_env *env, const char **path);
 
 #endif /* ARCH_PERF_COMMON_H */
diff --git a/tools/perf/builtin-annotate.c b/tools/perf/builtin-annotate.c
index c11bc9018f38..239594385101 100644
--- a/tools/perf/builtin-annotate.c
+++ b/tools/perf/builtin-annotate.c
@@ -389,8 +389,9 @@ static int __cmd_annotate(struct perf_annotate *ann)
 			goto out;
 	}
 
-	if (!objdump_path) {
-		ret = perf_env__lookup_objdump(&session->header.env);
+	if (!ann->opts.objdump_path) {
+		ret = perf_env__lookup_objdump(&session->header.env,
+					       &ann->opts.objdump_path);
 		if (ret)
 			goto out;
 	}
@@ -520,7 +521,7 @@ int cmd_annotate(int argc, const char **argv)
 		    "Display raw encoding of assembly instructions (default)"),
 	OPT_STRING('M', "disassembler-style", &disassembler_style, "disassembler style",
 		   "Specify disassembler style (e.g. -M intel for intel syntax)"),
-	OPT_STRING(0, "objdump", &objdump_path, "path",
+	OPT_STRING(0, "objdump", &annotate.opts.objdump_path, "path",
 		   "objdump binary to use for disassembly and annotations"),
 	OPT_BOOLEAN(0, "group", &symbol_conf.event_group,
 		    "Show event group information together"),
diff --git a/tools/perf/builtin-report.c b/tools/perf/builtin-report.c
index d56426e37175..d1ab4ae2a238 100644
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@ -1095,7 +1095,7 @@ int cmd_report(int argc, const char **argv)
 		    parse_branch_mode),
 	OPT_BOOLEAN(0, "branch-history", &branch_call_mode,
 		    "add last branch records to call history"),
-	OPT_STRING(0, "objdump", &objdump_path, "path",
+	OPT_STRING(0, "objdump", &report.annotation_opts.objdump_path, "path",
 		   "objdump binary to use for disassembly and annotations"),
 	OPT_BOOLEAN(0, "demangle", &symbol_conf.demangle,
 		    "Disable symbol demangling"),
diff --git a/tools/perf/builtin-top.c b/tools/perf/builtin-top.c
index 510e1bf62a14..38801c369e63 100644
--- a/tools/perf/builtin-top.c
+++ b/tools/perf/builtin-top.c
@@ -1078,8 +1078,9 @@ static int __cmd_top(struct perf_top *top)
 	if (top->session == NULL)
 		return -1;
 
-	if (!objdump_path) {
-		ret = perf_env__lookup_objdump(&top->session->header.env);
+	if (!top->annotation_opts.objdump_path) {
+		ret = perf_env__lookup_objdump(&top->session->header.env,
+					       &top->annotation_opts.objdump_path);
 		if (ret)
 			goto out_delete;
 	}
@@ -1348,7 +1349,7 @@ int cmd_top(int argc, const char **argv)
 		    "Display raw encoding of assembly instructions (default)"),
 	OPT_BOOLEAN(0, "demangle-kernel", &symbol_conf.demangle_kernel,
 		    "Enable kernel symbol demangling"),
-	OPT_STRING(0, "objdump", &objdump_path, "path",
+	OPT_STRING(0, "objdump", &top.annotation_opts.objdump_path, "path",
 		    "objdump binary to use for disassembly and annotations"),
 	OPT_STRING('M', "disassembler-style", &disassembler_style, "disassembler style",
 		   "Specify disassembler style (e.g. -M intel for intel syntax)"),
diff --git a/tools/perf/ui/browsers/hists.c b/tools/perf/ui/browsers/hists.c
index ac3f3b04f74c..729a477759dd 100644
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@ -2343,7 +2343,8 @@ do_annotate(struct hist_browser *browser, struct popup_action *act)
 	struct hist_entry *he;
 	int err;
 
-	if (!objdump_path && perf_env__lookup_objdump(browser->env))
+	if (!browser->annotation_opts->objdump_path &&
+	    perf_env__lookup_objdump(browser->env, &browser->annotation_opts->objdump_path))
 		return 0;
 
 	notes = symbol__annotation(act->ms.sym);
* Unmerged path tools/perf/util/annotate.c
* Unmerged path tools/perf/util/annotate.h
