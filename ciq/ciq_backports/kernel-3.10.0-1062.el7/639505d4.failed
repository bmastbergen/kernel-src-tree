net/mlx5: Fix SQ offset in QPs with small RQ

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5: Fix SQ offset in QPs with small RQ (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 95.24%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit 639505d4397b8c654a8e2616f9cb70ece40c83f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/639505d4.failed

Correct the formula for calculating the RQ page remainder,
which should be in byte granularity.  The result will be
non-zero only for RQs smaller than PAGE_SIZE, as an RQ size
is a power of 2.

Divide this by the SQ stride (MLX5_SEND_WQE_BB) to get the
SQ offset in strides granularity.

Fixes: d7037ad73daa ("net/mlx5: Fix QP fragmented buffer allocation")
	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 639505d4397b8c654a8e2616f9cb70ece40c83f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/wq.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/wq.c
index ea66448ba365,c8c315eb5128..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/wq.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/wq.c
@@@ -109,13 -138,21 +109,28 @@@ int mlx5_wq_qp_create(struct mlx5_core_
  		      void *qpc, struct mlx5_wq_qp *wq,
  		      struct mlx5_wq_ctrl *wq_ctrl)
  {
++<<<<<<< HEAD
++=======
+ 	u32 sq_strides_offset;
+ 	u32 rq_pg_remainder;
++>>>>>>> 639505d4397b (net/mlx5: Fix SQ offset in QPs with small RQ)
  	int err;
  
 -	mlx5_fill_fbc(MLX5_GET(qpc, qpc, log_rq_stride) + 4,
 -		      MLX5_GET(qpc, qpc, log_rq_size),
 -		      &wq->rq.fbc);
 +	wq->rq.log_stride = MLX5_GET(qpc, qpc, log_rq_stride) + 4;
 +	wq->rq.sz_m1 = (1 << MLX5_GET(qpc, qpc, log_rq_size)) - 1;
  
++<<<<<<< HEAD
 +	wq->sq.log_stride = ilog2(MLX5_SEND_WQE_BB);
 +	wq->sq.sz_m1 = (1 << MLX5_GET(qpc, qpc, log_sq_size)) - 1;
++=======
+ 	rq_pg_remainder   = mlx5_wq_cyc_get_byte_size(&wq->rq) % PAGE_SIZE;
+ 	sq_strides_offset = rq_pg_remainder / MLX5_SEND_WQE_BB;
+ 
+ 	mlx5_fill_fbc_offset(ilog2(MLX5_SEND_WQE_BB),
+ 			     MLX5_GET(qpc, qpc, log_sq_size),
+ 			     sq_strides_offset,
+ 			     &wq->sq.fbc);
++>>>>>>> 639505d4397b (net/mlx5: Fix SQ offset in QPs with small RQ)
  
  	err = mlx5_db_alloc_node(mdev, &wq_ctrl->db, param->db_numa_node);
  	if (err) {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/wq.c
