iw_cxgb4: cq/qp mask depends on bar2 pages in a host page

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Raju Rangoju <rajur@chelsio.com>
commit f09ef134a7ca3f0d2ce485a757f5b79809ebb803
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/f09ef134.failed

Adjust the cq/qp mask based on the number of bar2 pages in a host page.

For user-mode rdma, the granularity of the BAR2 memory mapped to a user
rdma process during queue allocation must be based on the host page
size. The lld attributes udb_density and ucq_density are used to figure
out how many sge contexts are in a bar2 page. So the rdev->qpmask and
rdev->cqmask in iw_cxgb4 need to now be adjusted based on how many sge
bar2 pages are in a host page.

Otherwise the device fails to work on non 4k page size systems.

Fixes: 2391b0030e24 ("cxgb4: Remove SGE_HOST_PAGE_SIZE dependency on page size")
	Signed-off-by: Raju Rangoju <rajur@chelsio.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit f09ef134a7ca3f0d2ce485a757f5b79809ebb803)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/device.c
diff --cc drivers/infiniband/hw/cxgb4/device.c
index aca5bf2747f9,d499cd61c0e8..000000000000
--- a/drivers/infiniband/hw/cxgb4/device.c
+++ b/drivers/infiniband/hw/cxgb4/device.c
@@@ -813,9 -807,19 +814,25 @@@ static int c4iw_rdev_open(struct c4iw_r
  		return -EINVAL;
  	}
  
++<<<<<<< HEAD
 +	rdev->qpmask = rdev->lldi.udb_density - 1;
 +	rdev->cqmask = rdev->lldi.ucq_density - 1;
 +	pr_debug("dev %s stag start 0x%0x size 0x%0x num stags %d pbl start 0x%0x size 0x%0x rq start 0x%0x size 0x%0x qp qid start %u size %u cq qid start %u size %u\n",
++=======
+ 	/* This implementation requires a sge_host_page_size <= PAGE_SIZE. */
+ 	if (rdev->lldi.sge_host_page_size > PAGE_SIZE) {
+ 		pr_err("%s: unsupported sge host page size %u\n",
+ 		       pci_name(rdev->lldi.pdev),
+ 		       rdev->lldi.sge_host_page_size);
+ 		return -EINVAL;
+ 	}
+ 
+ 	factor = PAGE_SIZE / rdev->lldi.sge_host_page_size;
+ 	rdev->qpmask = (rdev->lldi.udb_density * factor) - 1;
+ 	rdev->cqmask = (rdev->lldi.ucq_density * factor) - 1;
+ 
+ 	pr_debug("dev %s stag start 0x%0x size 0x%0x num stags %d pbl start 0x%0x size 0x%0x rq start 0x%0x size 0x%0x qp qid start %u size %u cq qid start %u size %u srq size %u\n",
++>>>>>>> f09ef134a7ca (iw_cxgb4: cq/qp mask depends on bar2 pages in a host page)
  		 pci_name(rdev->lldi.pdev), rdev->lldi.vr->stag.start,
  		 rdev->lldi.vr->stag.size, c4iw_num_stags(rdev),
  		 rdev->lldi.vr->pbl.start,
* Unmerged path drivers/infiniband/hw/cxgb4/device.c
