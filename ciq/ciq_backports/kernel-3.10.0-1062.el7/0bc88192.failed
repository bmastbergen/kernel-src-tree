nvme-pci: remove unnecessary nested locking

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Keith Busch <keith.busch@intel.com>
commit 0bc88192033a6e652e3fb1adfd6d1b66be33951e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0bc88192.failed

The nvme pci driver no longer handles completions under the cq lock,
so the nested locking is not necessary.

	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Jens Axboe <axboe@kernel.dk>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 0bc88192033a6e652e3fb1adfd6d1b66be33951e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 332216cbb84e,a7bed8dccd61..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -1761,15 -2012,11 +1761,23 @@@ static void nvme_del_cq_end(struct requ
  	if (!error) {
  		unsigned long flags;
  
++<<<<<<< HEAD
 +		/*
 +		 * We might be called with the AQ q_lock held
 +		 * and the I/O queue q_lock should always
 +		 * nest inside the AQ one.
 +		 */
 +		spin_lock_irqsave_nested(&nvmeq->q_lock, flags,
 +					SINGLE_DEPTH_NESTING);
 +		nvme_process_cq(nvmeq);
 +		spin_unlock_irqrestore(&nvmeq->q_lock, flags);
++=======
+ 		spin_lock_irqsave(&nvmeq->cq_lock, flags);
+ 		nvme_process_cq(nvmeq, &start, &end, -1);
+ 		spin_unlock_irqrestore(&nvmeq->cq_lock, flags);
+ 
+ 		nvme_complete_cqes(nvmeq, start, end);
++>>>>>>> 0bc88192033a (nvme-pci: remove unnecessary nested locking)
  	}
  
  	nvme_del_queue_end(req, error);
* Unmerged path drivers/nvme/host/pci.c
