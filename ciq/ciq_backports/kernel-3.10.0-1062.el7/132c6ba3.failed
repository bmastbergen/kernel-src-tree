perf stat: Move 'interval_clear' to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 132c6ba3c440fd21a45ff7f9d7a1f53813f4d0e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/132c6ba3.failed

Move the static 'interval_clear' variable to 'struct perf_stat_config',
so it can be passed around and used outside the 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-22-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 132c6ba3c440fd21a45ff7f9d7a1f53813f4d0e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
#	tools/perf/util/stat.h
diff --cc tools/perf/builtin-stat.c
index a3a835604d08,89297ab77d21..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -1583,26 -1528,28 +1582,31 @@@ static void print_metric_headers(const 
  		out.new_line = new_line_metric;
  		out.force_header = true;
  		os.evsel = counter;
 -		perf_stat__print_shadow_stats(config, counter, 0,
 +		perf_stat__print_shadow_stats(counter, 0,
  					      0,
  					      &out,
 -					      &metric_events,
 -					      &rt_stat);
 +					      &metric_events);
  	}
 -	fputc('\n', config->output);
 +	fputc('\n', stat_config.output);
  }
  
 -static void print_interval(struct perf_stat_config *config,
 -			   char *prefix, struct timespec *ts)
 +static void print_interval(char *prefix, struct timespec *ts)
  {
 -	FILE *output = config->output;
 +	FILE *output = stat_config.output;
  	static int num_print_interval;
  
- 	if (interval_clear)
+ 	if (config->interval_clear)
  		puts(CONSOLE_CLEAR);
  
 -	sprintf(prefix, "%6lu.%09lu%s", ts->tv_sec, ts->tv_nsec, config->csv_sep);
 +	sprintf(prefix, "%6lu.%09lu%s", ts->tv_sec, ts->tv_nsec, csv_sep);
  
++<<<<<<< HEAD
 +	if ((num_print_interval == 0 && !csv_output) || interval_clear) {
 +		switch (stat_config.aggr_mode) {
++=======
+ 	if ((num_print_interval == 0 && !config->csv_output) || config->interval_clear) {
+ 		switch (config->aggr_mode) {
++>>>>>>> 132c6ba3c440 (perf stat: Move 'interval_clear' to 'struct perf_stat_config')
  		case AGGR_SOCKET:
  			fprintf(output, "#           time socket cpus");
  			if (!metric_only)
@@@ -1633,8 -1580,8 +1637,13 @@@
  		}
  	}
  
++<<<<<<< HEAD
 +	if ((num_print_interval == 0 || interval_clear) && metric_only)
 +		print_metric_headers(" ", true);
++=======
+ 	if ((num_print_interval == 0 || config->interval_clear) && metric_only)
+ 		print_metric_headers(config, " ", true);
++>>>>>>> 132c6ba3c440 (perf stat: Move 'interval_clear' to 'struct perf_stat_config')
  	if (++num_print_interval == 25)
  		num_print_interval = 0;
  }
diff --cc tools/perf/util/stat.h
index 4b88aef959fb,470ab37601be..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -89,6 -91,8 +89,11 @@@ struct perf_stat_config 
  	bool			 scale;
  	bool			 no_inherit;
  	bool			 identifier;
++<<<<<<< HEAD
++=======
+ 	bool			 csv_output;
+ 	bool			 interval_clear;
++>>>>>>> 132c6ba3c440 (perf stat: Move 'interval_clear' to 'struct perf_stat_config')
  	FILE			*output;
  	unsigned int		 interval;
  	unsigned int		 timeout;
* Unmerged path tools/perf/builtin-stat.c
* Unmerged path tools/perf/util/stat.h
