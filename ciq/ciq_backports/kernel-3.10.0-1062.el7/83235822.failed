nfp: stop limiting VFs to 0

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 83235822b8b4fe47ecbd6b6bcbcc902860ac00fc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/83235822.failed

Before 8d85a7a4f2c9 ("PCI/IOV: Allow PF drivers to limit total_VFs to 0"),
pci_sriov_set_totalvfs(pdev, 0) meant "we can enable TotalVFs virtual
functions".  After 8d85a7a4f2c9, it means "we can't enable *any* VFs".

That broke this scenario where nfp intends to remove any limit on the
number of VFs that can be enabled:

  nfp_pci_probe
    nfp_pcie_sriov_read_nfd_limit
      nfp_rtsym_read_le("nfd_vf_cfg_max_vfs", &err)
      pci_sriov_set_totalvfs(pf->pdev, 0)   # if FW didn't expose a limit

  ...
  # userspace writes N to sysfs "sriov_numvfs":
  sriov_numvfs_store
    pci_sriov_get_totalvfs                  # now returns 0
    return -ERANGE

Prior to 8d85a7a4f2c9, pci_sriov_get_totalvfs() returned TotalVFs, but it
now returns 0.

Remove the pci_sriov_set_totalvfs(pdev, 0) calls so we don't limit the
number of VFs that can be enabled.

Fixes: 8d85a7a4f2c9 ("PCI/IOV: Allow PF drivers to limit total_VFs to 0")
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
[bhelgaas: changelog]
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 83235822b8b4fe47ecbd6b6bcbcc902860ac00fc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_main.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_main.c
index 629e68787af2,152283d7e59c..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_main.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_main.c
@@@ -670,12 -667,18 +669,17 @@@ static int nfp_pci_probe(struct pci_de
  
  	err = nfp_net_pci_probe(pf);
  	if (err)
- 		goto err_sriov_unlimit;
+ 		goto err_fw_unload;
  
 -	err = nfp_hwmon_register(pf);
 -	if (err) {
 -		dev_err(&pdev->dev, "Failed to register hwmon info\n");
 -		goto err_net_remove;
 -	}
 -
  	return 0;
  
++<<<<<<< HEAD
 +err_sriov_unlimit:
 +	pci_sriov_set_totalvfs(pf->pdev, 0);
++=======
+ err_net_remove:
+ 	nfp_net_pci_remove(pf);
++>>>>>>> 83235822b8b4 (nfp: stop limiting VFs to 0)
  err_fw_unload:
  	kfree(pf->rtbl);
  	nfp_mip_close(pf->mip);
@@@ -705,8 -709,9 +709,7 @@@ static void nfp_pci_remove(struct pci_d
  {
  	struct nfp_pf *pf = pci_get_drvdata(pdev);
  
 -	nfp_hwmon_unregister(pf);
 -
  	nfp_pcie_sriov_disable(pdev);
- 	pci_sriov_set_totalvfs(pf->pdev, 0);
  
  	nfp_net_pci_remove(pf);
  
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_main.c
