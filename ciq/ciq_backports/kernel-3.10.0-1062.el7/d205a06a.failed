IB/rdmavt: Rename check_send_wqe as setup_wqe

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Kaike Wan <kaike.wan@intel.com>
commit d205a06a14796a24b3447bc5d27b7dedff4479d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d205a06a.failed

The driver-provided function check_send_wqe allows the hardware driver to
check and set up the incoming send wqe before it is inserted into the swqe
ring. This patch will rename it as setup_wqe to better reflect its
usage. In addition, this function is only called when all setup is
complete in rdmavt.

	Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Signed-off-by: Kaike Wan <kaike.wan@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit d205a06a14796a24b3447bc5d27b7dedff4479d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/hfi1/qp.c
#	drivers/infiniband/hw/hfi1/verbs.c
#	drivers/infiniband/hw/hfi1/verbs.h
#	drivers/infiniband/sw/rdmavt/qp.c
#	include/rdma/rdma_vt.h
diff --cc drivers/infiniband/hw/hfi1/qp.c
index 545bda6f1364,b1044a205ab6..000000000000
--- a/drivers/infiniband/hw/hfi1/qp.c
+++ b/drivers/infiniband/hw/hfi1/qp.c
@@@ -282,20 -282,21 +282,30 @@@ void hfi1_modify_qp(struct rvt_qp *qp, 
  }
  
  /**
-  * hfi1_check_send_wqe - validate wqe
+  * hfi1_setup_wqe - set up the wqe
   * @qp - The qp
   * @wqe - The built wqe
 - * @call_send - Determine if the send should be posted or scheduled.
 + *
 + * validate wqe.  This is called
 + * prior to inserting the wqe into
 + * the ring but after the wqe has been
 + * setup.
   *
+  * Perform setup of the wqe.  This is called
+  * prior to inserting the wqe into the ring but after
+  * the wqe has been setup by RDMAVT. This function
+  * allows the driver the opportunity to perform
+  * validation and additional setup of the wqe.
+  *
   * Returns 0 on success, -EINVAL on failure
   *
   */
++<<<<<<< HEAD
 +int hfi1_check_send_wqe(struct rvt_qp *qp,
 +			struct rvt_swqe *wqe)
++=======
+ int hfi1_setup_wqe(struct rvt_qp *qp, struct rvt_swqe *wqe, bool *call_send)
++>>>>>>> d205a06a1479 (IB/rdmavt: Rename check_send_wqe as setup_wqe)
  {
  	struct hfi1_ibport *ibp = to_iport(qp->ibqp.device, qp->port_num);
  	struct rvt_ah *ah;
diff --cc drivers/infiniband/hw/hfi1/verbs.c
index 8b1b27b20e68,bbee0cb77ff8..000000000000
--- a/drivers/infiniband/hw/hfi1/verbs.c
+++ b/drivers/infiniband/hw/hfi1/verbs.c
@@@ -1944,12 -1937,12 +1944,18 @@@ int hfi1_register_ib_device(struct hfi1
  	dd->verbs_dev.rdi.driver_f.check_modify_qp = hfi1_check_modify_qp;
  	dd->verbs_dev.rdi.driver_f.modify_qp = hfi1_modify_qp;
  	dd->verbs_dev.rdi.driver_f.notify_restart_rc = hfi1_restart_rc;
++<<<<<<< HEAD
 +	dd->verbs_dev.rdi.driver_f.check_send_wqe = hfi1_check_send_wqe;
++=======
+ 	dd->verbs_dev.rdi.driver_f.setup_wqe = hfi1_setup_wqe;
+ 	dd->verbs_dev.rdi.driver_f.comp_vect_cpu_lookup =
+ 						hfi1_comp_vect_mappings_lookup;
++>>>>>>> d205a06a1479 (IB/rdmavt: Rename check_send_wqe as setup_wqe)
  
  	/* completeion queue */
 -	dd->verbs_dev.rdi.ibdev.num_comp_vectors = dd->comp_vect_possible_cpus;
 +	snprintf(dd->verbs_dev.rdi.dparms.cq_name,
 +		 sizeof(dd->verbs_dev.rdi.dparms.cq_name),
 +		 "hfi1_cq%d", dd->unit);
  	dd->verbs_dev.rdi.dparms.node = dd->node;
  
  	/* misc settings */
diff --cc drivers/infiniband/hw/hfi1/verbs.h
index e7f727ca9212,bc77ffec51ce..000000000000
--- a/drivers/infiniband/hw/hfi1/verbs.h
+++ b/drivers/infiniband/hw/hfi1/verbs.h
@@@ -345,7 -343,8 +345,12 @@@ int hfi1_check_modify_qp(struct rvt_qp 
  void hfi1_modify_qp(struct rvt_qp *qp, struct ib_qp_attr *attr,
  		    int attr_mask, struct ib_udata *udata);
  void hfi1_restart_rc(struct rvt_qp *qp, u32 psn, int wait);
++<<<<<<< HEAD
 +int hfi1_check_send_wqe(struct rvt_qp *qp, struct rvt_swqe *wqe);
++=======
+ int hfi1_setup_wqe(struct rvt_qp *qp, struct rvt_swqe *wqe,
+ 		   bool *call_send);
++>>>>>>> d205a06a1479 (IB/rdmavt: Rename check_send_wqe as setup_wqe)
  
  extern const u32 rc_only_opcode;
  extern const u32 uc_only_opcode;
diff --cc drivers/infiniband/sw/rdmavt/qp.c
index bc0e332ee6a2,2db71e956d02..000000000000
--- a/drivers/infiniband/sw/rdmavt/qp.c
+++ b/drivers/infiniband/sw/rdmavt/qp.c
@@@ -1823,15 -1823,11 +1823,23 @@@ static int rvt_post_one_wr(struct rvt_q
  		wqe->wr.num_sge = j;
  	}
  
++<<<<<<< HEAD
 +	/* general part of wqe valid - allow for driver checks */
 +	if (rdi->driver_f.check_send_wqe) {
 +		ret = rdi->driver_f.check_send_wqe(qp, wqe);
 +		if (ret < 0)
 +			goto bail_inval_free;
 +		if (ret)
 +			*call_send = ret;
 +	}
 +
++=======
+ 	/*
+ 	 * Calculate and set SWQE PSN values prior to handing it off
+ 	 * to the driver's check routine. This give the driver the
+ 	 * opportunity to adjust PSN values based on internal checks.
+ 	 */
++>>>>>>> d205a06a1479 (IB/rdmavt: Rename check_send_wqe as setup_wqe)
  	log_pmtu = qp->log_pmtu;
  	if (qp->ibqp.qp_type != IB_QPT_UC &&
  	    qp->ibqp.qp_type != IB_QPT_RC) {
diff --cc include/rdma/rdma_vt.h
index d0e9083f9b9e,52907204afcd..000000000000
--- a/include/rdma/rdma_vt.h
+++ b/include/rdma/rdma_vt.h
@@@ -215,8 -214,15 +215,20 @@@ struct rvt_driver_provided 
  	void (*schedule_send)(struct rvt_qp *qp);
  	void (*schedule_send_no_lock)(struct rvt_qp *qp);
  
++<<<<<<< HEAD
 +	/* Driver specific work request checking */
 +	int (*check_send_wqe)(struct rvt_qp *qp, struct rvt_swqe *wqe);
++=======
+ 	/*
+ 	 * Driver specific work request setup and checking.
+ 	 * This function is allowed to perform any setup, checks, or
+ 	 * adjustments required to the SWQE in order to be usable by
+ 	 * underlying protocols. This includes private data structure
+ 	 * allocations.
+ 	 */
+ 	int (*setup_wqe)(struct rvt_qp *qp, struct rvt_swqe *wqe,
+ 			 bool *call_send);
++>>>>>>> d205a06a1479 (IB/rdmavt: Rename check_send_wqe as setup_wqe)
  
  	/*
  	 * Sometimes rdmavt needs to kick the driver's send progress. That is
* Unmerged path drivers/infiniband/hw/hfi1/qp.c
* Unmerged path drivers/infiniband/hw/hfi1/verbs.c
* Unmerged path drivers/infiniband/hw/hfi1/verbs.h
diff --git a/drivers/infiniband/hw/qib/qib_verbs.c b/drivers/infiniband/hw/qib/qib_verbs.c
index 021a776bffe6..658f38e02fbd 100644
--- a/drivers/infiniband/hw/qib/qib_verbs.c
+++ b/drivers/infiniband/hw/qib/qib_verbs.c
@@ -1588,7 +1588,7 @@ int qib_register_ib_device(struct qib_devdata *dd)
 	dd->verbs_dev.rdi.driver_f.port_callback = qib_create_port_files;
 	dd->verbs_dev.rdi.driver_f.get_pci_dev = qib_get_pci_dev;
 	dd->verbs_dev.rdi.driver_f.check_ah = qib_check_ah;
-	dd->verbs_dev.rdi.driver_f.check_send_wqe = qib_check_send_wqe;
+	dd->verbs_dev.rdi.driver_f.setup_wqe = qib_check_send_wqe;
 	dd->verbs_dev.rdi.driver_f.notify_new_ah = qib_notify_new_ah;
 	dd->verbs_dev.rdi.driver_f.alloc_qpn = qib_alloc_qpn;
 	dd->verbs_dev.rdi.driver_f.qp_priv_alloc = qib_qp_priv_alloc;
* Unmerged path drivers/infiniband/sw/rdmavt/qp.c
* Unmerged path include/rdma/rdma_vt.h
