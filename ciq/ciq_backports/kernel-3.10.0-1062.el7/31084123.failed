perf stat: Move 'print_free_counters_hint' to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 31084123c1962dd4235655c1839a50c9cf6c709b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/31084123.failed

Move the 'print_free_counters_hint' variable to 'struct perf_stat_config',
so that it can be passed around and used outside the 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-34-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 31084123c1962dd4235655c1839a50c9cf6c709b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/stat.h
diff --cc tools/perf/util/stat.h
index 4b88aef959fb,8cad17363e90..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -93,9 -99,15 +93,14 @@@ struct perf_stat_config 
  	unsigned int		 interval;
  	unsigned int		 timeout;
  	unsigned int		 initial_delay;
 -	unsigned int		 unit_width;
 -	unsigned int		 metric_only_len;
  	int			 times;
++<<<<<<< HEAD
++=======
+ 	int			 run_count;
+ 	int			 print_free_counters_hint;
++>>>>>>> 31084123c196 (perf stat: Move 'print_free_counters_hint' to 'struct perf_stat_config')
  	struct runtime_stat	*stats;
  	int			 stats_num;
 -	const char		*csv_sep;
 -	struct stats		*walltime_nsecs_stats;
  };
  
  void update_stats(struct stats *stats, u64 val);
diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c
index 13693124ed08..8a5abafd305d 100644
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@ -177,7 +177,6 @@ static bool			interval_count;
 static bool			interval_clear;
 static const char		*output_name;
 static int			output_fd;
-static int			print_free_counters_hint;
 static int			print_mixed_hw_group_error;
 static u64			*walltime_run;
 static bool			ru_display			= false;
@@ -1173,7 +1172,7 @@ static void printout(int id, int nr, struct perf_evsel *counter, double uval,
 			csv_sep);
 
 		if (counter->supported) {
-			print_free_counters_hint = 1;
+			config->print_free_counters_hint = 1;
 			if (is_mixed_hw_group(counter))
 				print_mixed_hw_group_error = 1;
 		}
@@ -1748,7 +1747,7 @@ static void print_footer(void)
 	}
 	fprintf(output, "\n\n");
 
-	if (print_free_counters_hint &&
+	if (config->print_free_counters_hint &&
 	    sysctl__read_int("kernel/nmi_watchdog", &n) >= 0 &&
 	    n > 0)
 		fprintf(output,
* Unmerged path tools/perf/util/stat.h
