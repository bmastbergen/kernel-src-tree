net: phy: fix wrong mask to phy_modify()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] phy: fix wrong mask to phy_modify() (Ivan Vecera) [1685646]
Rebuild_FUZZ: 93.33%
commit-author Ingo van Lil <inguin@gmx.de>
commit 18a5b052bb1ae77453c5e50fffe3470ced9ed82f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/18a5b052.failed

When forcing a specific link mode, the PHY driver must clear the
existing speed and duplex bits in BMCR while preserving some other
control bits. This logic was accidentally inverted with the introduction
of phy_modify().

Fixes: fea23fb591cc ("net: phy: convert read-modify-write to phy_modify()")
	Signed-off-by: Ingo van Lil <inguin@gmx.de>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 18a5b052bb1ae77453c5e50fffe3470ced9ed82f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phy_device.c
diff --cc drivers/net/phy/phy_device.c
index f7f4abfd4a6f,d39ae77707ef..000000000000
--- a/drivers/net/phy/phy_device.c
+++ b/drivers/net/phy/phy_device.c
@@@ -854,9 -1381,10 +854,14 @@@ static int genphy_setup_forced(struct p
  	if (DUPLEX_FULL == phydev->duplex)
  		ctl |= BMCR_FULLDPLX;
  
++<<<<<<< HEAD
 +	return phy_write(phydev, MII_BMCR, ctl);
++=======
+ 	return phy_modify(phydev, MII_BMCR,
+ 			  ~(BMCR_LOOPBACK | BMCR_ISOLATE | BMCR_PDOWN), ctl);
++>>>>>>> 18a5b052bb1a (net: phy: fix wrong mask to phy_modify())
  }
 -EXPORT_SYMBOL(genphy_setup_forced);
 +
  
  /**
   * genphy_restart_aneg - Enable and Restart Autonegotiation
* Unmerged path drivers/net/phy/phy_device.c
