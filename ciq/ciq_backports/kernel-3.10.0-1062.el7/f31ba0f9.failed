crypto: chelsio - Fix wrong error counter increments

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [crypto] chelsio - Fix wrong error counter increments (Arjun Vynipadath) [1642432]
Rebuild_FUZZ: 91.67%
commit-author Harsh Jain <harsh@chelsio.com>
commit f31ba0f95f1998118098978dbfb25ecbec6b0891
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/f31ba0f9.failed

Fix error counter increment in AEAD decrypt operation when
validation of tag is done in Driver instead of H/W.

	Signed-off-by: Harsh Jain <harsh@chelsio.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit f31ba0f95f1998118098978dbfb25ecbec6b0891)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/chelsio/chcr_algo.c
diff --cc drivers/crypto/chelsio/chcr_algo.c
index 8a76dcf1a215,eedc33128da4..000000000000
--- a/drivers/crypto/chelsio/chcr_algo.c
+++ b/drivers/crypto/chelsio/chcr_algo.c
@@@ -197,7 -198,27 +197,31 @@@ void chcr_verify_tag(struct aead_reques
  		*err = 0;
  }
  
++<<<<<<< HEAD
 +static inline void chcr_handle_aead_resp(struct aead_request *req,
++=======
+ static int chcr_inc_wrcount(struct chcr_dev *dev)
+ {
+ 	int err = 0;
+ 
+ 	spin_lock_bh(&dev->lock_chcr_dev);
+ 	if (dev->state == CHCR_DETACH)
+ 		err = 1;
+ 	else
+ 		atomic_inc(&dev->inflight);
+ 
+ 	spin_unlock_bh(&dev->lock_chcr_dev);
+ 
+ 	return err;
+ }
+ 
+ static inline void chcr_dec_wrcount(struct chcr_dev *dev)
+ {
+ 	atomic_dec(&dev->inflight);
+ }
+ 
+ static inline int chcr_handle_aead_resp(struct aead_request *req,
++>>>>>>> f31ba0f95f19 (crypto: chelsio - Fix wrong error counter increments)
  					 unsigned char *input,
  					 int err)
  {
@@@ -208,7 -231,10 +232,9 @@@
  		chcr_verify_tag(req, input, &err);
  		reqctx->verify = VERIFY_HW;
  	}
 -	chcr_dec_wrcount(dev);
  	req->base.complete(&req->base, err);
+ 
+ 	return err;
  }
  
  static void get_aes_decrypt_key(unsigned char *dec_key,
* Unmerged path drivers/crypto/chelsio/chcr_algo.c
diff --git a/drivers/crypto/chelsio/chcr_core.c b/drivers/crypto/chelsio/chcr_core.c
index 2c472e3c6aeb..4bc5a0e92470 100644
--- a/drivers/crypto/chelsio/chcr_core.c
+++ b/drivers/crypto/chelsio/chcr_core.c
@@ -131,12 +131,8 @@ static int cpl_fw6_pld_handler(struct chcr_dev *dev,
 
 	ack_err_status =
 		ntohl(*(__be32 *)((unsigned char *)&fw6_pld->data[0] + 4));
-	if (ack_err_status) {
-		if (CHK_MAC_ERR_BIT(ack_err_status) ||
-		    CHK_PAD_ERR_BIT(ack_err_status))
-			error_status = -EBADMSG;
-		atomic_inc(&adap->chcr_stats.error);
-	}
+	if (CHK_MAC_ERR_BIT(ack_err_status) || CHK_PAD_ERR_BIT(ack_err_status))
+		error_status = -EBADMSG;
 	/* call completion callback with failure status */
 	if (req) {
 		error_status = chcr_handle_resp(req, input, error_status);
@@ -144,6 +140,9 @@ static int cpl_fw6_pld_handler(struct chcr_dev *dev,
 		pr_err("Incorrect request address from the firmware\n");
 		return -EFAULT;
 	}
+	if (error_status)
+		atomic_inc(&adap->chcr_stats.error);
+
 	return 0;
 }
 
