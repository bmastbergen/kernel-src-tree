s390: Remove VLAIS in ptff() and clear_table()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [s390] Remove VLAIS in ptff() and clear_table() (Yauheni Kaliuta) [1691710]
Rebuild_FUZZ: 93.02%
commit-author Michael Holzheu <holzheu@linux.vnet.ibm.com>
commit 11a247e376669323b0d9f56fbdb5c163c6310112
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/11a247e3.failed

The ptff() and clear_table() functions use the gcc extension "variable
length arrays in structures" (VLAIS) to define in the inline assembler
constraints the area of the clobbered memory. This extension will most
likely never be supported by LLVM/Clang.

Since currently BPF programs are compiled with LLVM, this leads to the
following compile errors:

 $ cd samples/bpf
 $ make

 In file included from /root/linux-master/samples/bpf/tracex1_kern.c:8:
 In file included from ./include/linux/netdevice.h:44:
 ...
 In file included from ./arch/s390/include/asm/mmu_context.h:10:
  ./arch/s390/include/asm/pgalloc.h:30:24: error: fields must have a
  constant size: 'variable length array in structure' extension will never
  be supported
         typedef struct { char _[n]; } addrtype;

 In file included from /root/linux-master/samples/bpf/tracex1_kern.c:7:
 In file included from ./include/linux/skbuff.h:18:
 ...
 In file included from ./include/linux/jiffies.h:8:
 In file included from ./include/linux/timex.h:65:
  ./arch/s390/include/asm/timex.h:105:24: error: fields must have a
  constant size: 'variable length array in structure' extension will never
  be supported
        typedef struct { char _[len]; } addrtype;

To fix this do the following:

 - Convert ptff() into a macro that then uses a fixed size array
   when expanded.
 - Convert the clear_table() function and use an inline assembly
   with fixed size array in a loop.
   The runtime performance of the new version is even better than
   the old version (tested with EC12/z13 and gcc 4.8.5/6.2.1 with
   "-march=z196 -O2").

	Reported-by: Zvonko Kosic <zvonko.kosic@de.ibm.com>
	Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
	Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 11a247e376669323b0d9f56fbdb5c163c6310112)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/include/asm/pgalloc.h
#	arch/s390/include/asm/timex.h
diff --cc arch/s390/include/asm/pgalloc.h
index 9eb1f209d7ee,166f703dad7c..000000000000
--- a/arch/s390/include/asm/pgalloc.h
+++ b/arch/s390/include/asm/pgalloc.h
@@@ -27,21 -27,17 +27,33 @@@ int set_guest_storage_key(struct mm_str
  
  static inline void clear_table(unsigned long *s, unsigned long val, size_t n)
  {
- 	typedef struct { char _[n]; } addrtype;
+ 	struct addrtype { char _[256]; };
+ 	int i;
  
++<<<<<<< HEAD
 +	*s = val;
 +	n = (n / 256) - 1;
 +	asm volatile(
 +#ifdef CONFIG_64BIT
 +		"	mvc	8(248,%0),0(%0)\n"
 +#else
 +		"	mvc	4(252,%0),0(%0)\n"
 +#endif
 +		"0:	mvc	256(256,%0),0(%0)\n"
 +		"	la	%0,256(%0)\n"
 +		"	brct	%1,0b\n"
 +		: "+a" (s), "+d" (n), "=m" (*(addrtype *) s)
 +		: "m" (*(addrtype *) s));
++=======
+ 	for (i = 0; i < n; i += 256) {
+ 		*s = val;
+ 		asm volatile(
+ 			"mvc	8(248,%[s]),0(%[s])\n"
+ 			: "+m" (*(struct addrtype *) s)
+ 			: [s] "a" (s));
+ 		s += 256 / sizeof(long);
+ 	}
++>>>>>>> 11a247e37666 (s390: Remove VLAIS in ptff() and clear_table())
  }
  
  static inline void crst_table_init(unsigned long *crst, unsigned long entry)
diff --cc arch/s390/include/asm/timex.h
index b8b66e277b55,de8298800722..000000000000
--- a/arch/s390/include/asm/timex.h
+++ b/arch/s390/include/asm/timex.h
@@@ -81,21 -82,44 +81,62 @@@ static inline int ptff_query(unsigned i
  	return (*ptr & (0x80 >> (nr & 7))) != 0;
  }
  
++<<<<<<< HEAD
 +static inline int ptff(void *ptff_block, size_t len, unsigned int func)
 +{
 +	typedef struct { char _[len]; } addrtype;
 +	register unsigned int reg0 asm("0") = func;
 +	register unsigned long reg1 asm("1") = (unsigned long) ptff_block;
 +	int rc;
 +
 +	asm volatile(
 +		"	.word	0x0104\n"
 +		"	ipm	%0\n"
 +		"	srl	%0,28\n"
 +		: "=d" (rc), "+m" (*(addrtype *) ptff_block)
 +		: "d" (reg0), "d" (reg1) : "cc");
 +	return rc;
 +}
++=======
+ /* Query UTC information result */
+ struct ptff_qui {
+ 	unsigned int tm : 2;
+ 	unsigned int ts : 2;
+ 	unsigned int : 28;
+ 	unsigned int pad_0x04;
+ 	unsigned long leap_event;
+ 	short old_leap;
+ 	short new_leap;
+ 	unsigned int pad_0x14;
+ 	unsigned long prt[5];
+ 	unsigned long cst[3];
+ 	unsigned int skew;
+ 	unsigned int pad_0x5c[41];
+ } __packed;
+ 
+ /*
+  * ptff - Perform timing facility function
+  * @ptff_block: Pointer to ptff parameter block
+  * @len: Length of parameter block
+  * @func: Function code
+  * Returns: Condition code (0 on success)
+  */
+ #define ptff(ptff_block, len, func)					\
+ ({									\
+ 	struct addrtype { char _[len]; };				\
+ 	register unsigned int reg0 asm("0") = func;			\
+ 	register unsigned long reg1 asm("1") = (unsigned long) (ptff_block);\
+ 	int rc;								\
+ 									\
+ 	asm volatile(							\
+ 		"	.word	0x0104\n"				\
+ 		"	ipm	%0\n"					\
+ 		"	srl	%0,28\n"				\
+ 		: "=d" (rc), "+m" (*(struct addrtype *) reg1)		\
+ 		: "d" (reg0), "d" (reg1) : "cc");			\
+ 	rc;								\
+ })
++>>>>>>> 11a247e37666 (s390: Remove VLAIS in ptff() and clear_table())
  
  static inline unsigned long long local_tick_disable(void)
  {
* Unmerged path arch/s390/include/asm/pgalloc.h
* Unmerged path arch/s390/include/asm/timex.h
