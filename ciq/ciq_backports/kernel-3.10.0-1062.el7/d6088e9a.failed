uio_hv_generic: fix new type mismatch warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnd Bergmann <arnd@arndb.de>
commit d6088e9a89f7c6fe9720978196c4d9799fd16c29
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d6088e9a.failed

In commit 72d146578950 ("uio_hv_generic: fix type mismatch warnings"),
I addressed some warnings that show up with CONFIG_X86_PAE, now a new
change has added more of the same:

drivers/uio/uio_hv_generic.c: In function 'hv_uio_probe':
drivers/uio/uio_hv_generic.c:205:5: error: cast from pointer to integer of different size [-Werror=pointer-to-int-cast]
drivers/uio/uio_hv_generic.c:225:5: error: cast from pointer to integer of different size [-Werror=pointer-to-int-cast]

The fix is the same as before, casting to uintptr_t as an intermediate.

Fixes: e7d214642a19 ("uio_hv_generic: create send and receive buffers")
	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
	Cc: Stephen Hemminger <stephen@networkplumber.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit d6088e9a89f7c6fe9720978196c4d9799fd16c29)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/uio/uio_hv_generic.c
diff --cc drivers/uio/uio_hv_generic.c
index d608865b1e1e,8ca549032c27..000000000000
--- a/drivers/uio/uio_hv_generic.c
+++ b/drivers/uio/uio_hv_generic.c
@@@ -144,6 -186,46 +144,49 @@@ hv_uio_probe(struct hv_device *dev
  	pdata->info.mem[MON_PAGE_MAP].size = PAGE_SIZE;
  	pdata->info.mem[MON_PAGE_MAP].memtype = UIO_MEM_LOGICAL;
  
++<<<<<<< HEAD
++=======
+ 	pdata->recv_buf = vzalloc(RECV_BUFFER_SIZE);
+ 	if (pdata->recv_buf == NULL) {
+ 		ret = -ENOMEM;
+ 		goto fail_close;
+ 	}
+ 
+ 	ret = vmbus_establish_gpadl(dev->channel, pdata->recv_buf,
+ 				    RECV_BUFFER_SIZE, &pdata->recv_gpadl);
+ 	if (ret)
+ 		goto fail_close;
+ 
+ 	/* put Global Physical Address Label in name */
+ 	snprintf(pdata->recv_name, sizeof(pdata->recv_name),
+ 		 "recv:%u", pdata->recv_gpadl);
+ 	pdata->info.mem[RECV_BUF_MAP].name = pdata->recv_name;
+ 	pdata->info.mem[RECV_BUF_MAP].addr
+ 		= (uintptr_t)pdata->recv_buf;
+ 	pdata->info.mem[RECV_BUF_MAP].size = RECV_BUFFER_SIZE;
+ 	pdata->info.mem[RECV_BUF_MAP].memtype = UIO_MEM_VIRTUAL;
+ 
+ 
+ 	pdata->send_buf = vzalloc(SEND_BUFFER_SIZE);
+ 	if (pdata->send_buf == NULL) {
+ 		ret = -ENOMEM;
+ 		goto fail_close;
+ 	}
+ 
+ 	ret = vmbus_establish_gpadl(dev->channel, pdata->send_buf,
+ 				    SEND_BUFFER_SIZE, &pdata->send_gpadl);
+ 	if (ret)
+ 		goto fail_close;
+ 
+ 	snprintf(pdata->send_name, sizeof(pdata->send_name),
+ 		 "send:%u", pdata->send_gpadl);
+ 	pdata->info.mem[SEND_BUF_MAP].name = pdata->send_name;
+ 	pdata->info.mem[SEND_BUF_MAP].addr
+ 		= (uintptr_t)pdata->send_buf;
+ 	pdata->info.mem[SEND_BUF_MAP].size = SEND_BUFFER_SIZE;
+ 	pdata->info.mem[SEND_BUF_MAP].memtype = UIO_MEM_VIRTUAL;
+ 
++>>>>>>> d6088e9a89f7 (uio_hv_generic: fix new type mismatch warnings)
  	pdata->info.priv = pdata;
  	pdata->device = dev;
  
* Unmerged path drivers/uio/uio_hv_generic.c
