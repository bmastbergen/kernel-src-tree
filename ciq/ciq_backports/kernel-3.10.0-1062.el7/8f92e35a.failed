net/mlx5e: TLS, Read capabilities only when it is safe

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: TLS, Read capabilities only when it is safe (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 96.15%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 8f92e35aff9692028279d3c03e88547df6d15020
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/8f92e35a.failed

Read TLS caps from the core driver only when TLS is supported, i.e
mlx5_accel_is_tls_device returns true.

Fixes: 790af90c00d2 ("net/mlx5e: TLS, build TLS netdev from capabilities")
Change-Id: I5f21ff4d684901af487e366a7e0cf032b54ee9cf
	Reported-by: Michal Kubecek <mkubecek@suse.cz>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Reviewed-by: Boris Pismenny <borisp@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
(cherry picked from commit 8f92e35aff9692028279d3c03e88547df6d15020)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
index 821afce60a87,e88340e196f7..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
@@@ -185,5 -189,43 +186,24 @@@ void mlx5e_tls_build_netdev(struct mlx5
  	if (!mlx5_accel_is_tls_device(priv->mdev))
  		return;
  
++<<<<<<< HEAD
++=======
+ 	caps = mlx5_accel_tls_device_caps(priv->mdev);
+ 	if (caps & MLX5_ACCEL_TLS_TX) {
+ 		netdev->features          |= NETIF_F_HW_TLS_TX;
+ 		netdev->hw_features       |= NETIF_F_HW_TLS_TX;
+ 	}
+ 
+ 	if (caps & MLX5_ACCEL_TLS_RX) {
+ 		netdev->features          |= NETIF_F_HW_TLS_RX;
+ 		netdev->hw_features       |= NETIF_F_HW_TLS_RX;
+ 	}
+ 
+ 	if (!(caps & MLX5_ACCEL_TLS_LRO)) {
+ 		netdev->features          &= ~NETIF_F_LRO;
+ 		netdev->hw_features       &= ~NETIF_F_LRO;
+ 	}
+ 
++>>>>>>> 8f92e35aff96 (net/mlx5e: TLS, Read capabilities only when it is safe)
  	netdev->tlsdev_ops = &mlx5e_tls_ops;
  }
 -
 -int mlx5e_tls_init(struct mlx5e_priv *priv)
 -{
 -	struct mlx5e_tls *tls = kzalloc(sizeof(*tls), GFP_KERNEL);
 -
 -	if (!tls)
 -		return -ENOMEM;
 -
 -	priv->tls = tls;
 -	return 0;
 -}
 -
 -void mlx5e_tls_cleanup(struct mlx5e_priv *priv)
 -{
 -	struct mlx5e_tls *tls = priv->tls;
 -
 -	if (!tls)
 -		return;
 -
 -	kfree(tls);
 -	priv->tls = NULL;
 -}
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
