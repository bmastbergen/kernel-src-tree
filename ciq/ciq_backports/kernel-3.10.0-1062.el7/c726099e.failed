sched: Factor out the on_null_domain() checks in trigger_load_balance()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Daniel Lezcano <daniel.lezcano@linaro.org>
commit c726099ec224be8078d91072207053ff9a1ad6fc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c726099e.failed

The test on_null_domain is done twice in the trigger_load_balance function.

Move the test at the begin of the function, so there is only one check.

	Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/1389008085-9069-9-git-send-email-daniel.lezcano@linaro.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit c726099ec224be8078d91072207053ff9a1ad6fc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/fair.c
diff --cc kernel/sched/fair.c
index 0a23126831b1,b24b6cfde9aa..000000000000
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@@ -7380,15 -6875,17 +7380,22 @@@ static inline int on_null_domain(struc
  /*
   * Trigger the SCHED_SOFTIRQ if it is time to do periodic load balancing.
   */
 -void trigger_load_balance(struct rq *rq)
 +void trigger_load_balance(struct rq *rq, int cpu)
  {
  	/* Don't need to rebalance while attached to NULL domain */
- 	if (time_after_eq(jiffies, rq->next_balance) &&
- 	    likely(!on_null_domain(rq)))
+ 	if (unlikely(on_null_domain(rq)))
+ 		return;
+ 
+ 	if (time_after_eq(jiffies, rq->next_balance))
  		raise_softirq(SCHED_SOFTIRQ);
  #ifdef CONFIG_NO_HZ_COMMON
++<<<<<<< HEAD
 +	if (nohz_kick_needed(rq) && likely(!on_null_domain(rq)))
 +		nohz_balancer_kick(cpu);
++=======
+ 	if (nohz_kick_needed(rq))
+ 		nohz_balancer_kick();
++>>>>>>> c726099ec224 (sched: Factor out the on_null_domain() checks in trigger_load_balance())
  #endif
  }
  
* Unmerged path kernel/sched/fair.c
