perf stat: Move 'walltime_*' data to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 54ac0b1bd25cbdeda226b32a0459e09de46157b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/54ac0b1b.failed

Move the static variables 'walltime_*' to 'struct perf_stat_config', so
that it can be passed around and used outside 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-42-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 54ac0b1bd25cbdeda226b32a0459e09de46157b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
#	tools/perf/util/stat.h
diff --cc tools/perf/builtin-stat.c
index 13693124ed08,8a4979748cbb..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -163,26 -156,13 +163,32 @@@ static bool			group				= false
  static const char		*pre_cmd			= NULL;
  static const char		*post_cmd			= NULL;
  static bool			sync_run			= false;
 +static unsigned int		unit_width			= 4; /* strlen("unit") */
  static bool			forever				= false;
 +static bool			metric_only			= false;
  static bool			force_metric_only		= false;
++<<<<<<< HEAD
 +static bool			no_merge			= false;
 +static bool			walltime_run_table		= false;
++=======
++>>>>>>> 54ac0b1bd25c (perf stat: Move 'walltime_*' data to 'struct perf_stat_config')
  static struct timespec		ref_time;
 +static struct cpu_map		*aggr_map;
 +static aggr_get_id_t		aggr_get_id;
  static bool			append_file;
  static bool			interval_count;
 +static bool			interval_clear;
  static const char		*output_name;
  static int			output_fd;
++<<<<<<< HEAD
 +static int			print_free_counters_hint;
 +static int			print_mixed_hw_group_error;
 +static u64			*walltime_run;
 +static bool			ru_display			= false;
 +static struct rusage		ru_data;
 +static unsigned int		metric_only_len			= METRIC_ONLY_LEN;
++=======
++>>>>>>> 54ac0b1bd25c (perf stat: Move 'walltime_*' data to 'struct perf_stat_config')
  
  struct perf_stat {
  	bool			 record;
@@@ -1689,8 -1643,8 +1695,13 @@@ static void print_table(FILE *output, i
  
  	fprintf(output, "%*s# Table of individual measurements:\n", indent, "");
  
++<<<<<<< HEAD
 +	for (idx = 0; idx < run_count; idx++) {
 +		double run = (double) walltime_run[idx] / NSEC_PER_SEC;
++=======
+ 	for (idx = 0; idx < config->run_count; idx++) {
+ 		double run = (double) config->walltime_run[idx] / NSEC_PER_SEC;
++>>>>>>> 54ac0b1bd25c (perf stat: Move 'walltime_*' data to 'struct perf_stat_config')
  		int h, n = 1 + abs((int) (100.0 * (run - avg)/run) / 5);
  
  		fprintf(output, " %17.*f (%+.*f) ",
@@@ -1738,8 -1692,8 +1749,13 @@@ static void print_footer(void
  		 */
  		int precision = get_precision(sd) + 2;
  
++<<<<<<< HEAD
 +		if (walltime_run_table)
 +			print_table(output, precision, avg);
++=======
+ 		if (config->walltime_run_table)
+ 			print_table(config, output, precision, avg);
++>>>>>>> 54ac0b1bd25c (perf stat: Move 'walltime_*' data to 'struct perf_stat_config')
  
  		fprintf(output, " %17.*f +- %.*f seconds time elapsed",
  			precision, avg, precision, sd);
@@@ -1928,11 -1884,11 +1944,11 @@@ static const struct option stat_options
  	OPT_BOOLEAN('c', "scale", &stat_config.scale, "scale/normalize counters"),
  	OPT_INCR('v', "verbose", &verbose,
  		    "be more verbose (show counter open errors, etc)"),
 -	OPT_INTEGER('r', "repeat", &stat_config.run_count,
 +	OPT_INTEGER('r', "repeat", &run_count,
  		    "repeat command and print average + stddev (max: 100, forever: 0)"),
- 	OPT_BOOLEAN(0, "table", &walltime_run_table,
+ 	OPT_BOOLEAN(0, "table", &stat_config.walltime_run_table,
  		    "display details about each run (only with -r option)"),
 -	OPT_BOOLEAN('n', "null", &stat_config.null_run,
 +	OPT_BOOLEAN('n', "null", &null_run,
  		    "null run - dont start any counters"),
  	OPT_INCR('d', "detailed", &detailed_run,
  		    "detailed run - start a lot of events"),
@@@ -2839,7 -2800,7 +2855,11 @@@ int cmd_stat(int argc, const char **arg
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	if (walltime_run_table && run_count <= 1) {
++=======
+ 	if (stat_config.walltime_run_table && stat_config.run_count <= 1) {
++>>>>>>> 54ac0b1bd25c (perf stat: Move 'walltime_*' data to 'struct perf_stat_config')
  		fprintf(stderr, "--table is only supported with -r\n");
  		parse_options_usage(stat_usage, stat_options, "r", 1);
  		parse_options_usage(NULL, stat_options, "table", 0);
@@@ -2902,14 -2863,14 +2922,20 @@@
  		pr_err("Run count must be a positive number\n");
  		parse_options_usage(stat_usage, stat_options, "r", 1);
  		goto out;
 -	} else if (stat_config.run_count == 0) {
 +	} else if (run_count == 0) {
  		forever = true;
 -		stat_config.run_count = 1;
 +		run_count = 1;
  	}
  
++<<<<<<< HEAD
 +	if (walltime_run_table) {
 +		walltime_run = zalloc(run_count * sizeof(walltime_run[0]));
 +		if (!walltime_run) {
++=======
+ 	if (stat_config.walltime_run_table) {
+ 		stat_config.walltime_run = zalloc(stat_config.run_count * sizeof(stat_config.walltime_run[0]));
+ 		if (!stat_config.walltime_run) {
++>>>>>>> 54ac0b1bd25c (perf stat: Move 'walltime_*' data to 'struct perf_stat_config')
  			pr_err("failed to setup -r option");
  			goto out;
  		}
diff --cc tools/perf/util/stat.h
index 4b88aef959fb,5193cbf6e4c6..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -89,13 -98,33 +89,34 @@@ struct perf_stat_config 
  	bool			 scale;
  	bool			 no_inherit;
  	bool			 identifier;
++<<<<<<< HEAD
++=======
+ 	bool			 csv_output;
+ 	bool			 interval_clear;
+ 	bool			 metric_only;
+ 	bool			 null_run;
+ 	bool			 ru_display;
+ 	bool			 big_num;
+ 	bool			 no_merge;
+ 	bool			 walltime_run_table;
++>>>>>>> 54ac0b1bd25c (perf stat: Move 'walltime_*' data to 'struct perf_stat_config')
  	FILE			*output;
  	unsigned int		 interval;
  	unsigned int		 timeout;
  	unsigned int		 initial_delay;
 -	unsigned int		 unit_width;
 -	unsigned int		 metric_only_len;
  	int			 times;
 -	int			 run_count;
 -	int			 print_free_counters_hint;
 -	int			 print_mixed_hw_group_error;
  	struct runtime_stat	*stats;
  	int			 stats_num;
++<<<<<<< HEAD
++=======
+ 	const char		*csv_sep;
+ 	struct stats		*walltime_nsecs_stats;
+ 	struct rusage		 ru_data;
+ 	struct cpu_map		*aggr_map;
+ 	aggr_get_id_t		 aggr_get_id;
+ 	struct cpu_map		*cpus_aggr_map;
+ 	u64			*walltime_run;
++>>>>>>> 54ac0b1bd25c (perf stat: Move 'walltime_*' data to 'struct perf_stat_config')
  };
  
  void update_stats(struct stats *stats, u64 val);
* Unmerged path tools/perf/builtin-stat.c
* Unmerged path tools/perf/util/stat.h
