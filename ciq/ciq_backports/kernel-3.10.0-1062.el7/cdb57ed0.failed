i40e: implement flush flag for ndo_xdp_xmit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jesper Dangaard Brouer <brouer@redhat.com>
commit cdb57ed07fafb79a250e62d714b8910f2d341ef2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/cdb57ed0.failed

When passed the XDP_XMIT_FLUSH flag i40e_xdp_xmit now performs the
same kind of ring tail update as in i40e_xdp_flush.  The advantage is
that all the necessary checks have been performed and xdp_ring can be
updated, instead of having to perform the exact same steps/checks in
i40e_xdp_flush

	Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit cdb57ed07fafb79a250e62d714b8910f2d341ef2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_txrx.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_txrx.c
index 4edb18c5a04c,5f01e4ce9c92..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_txrx.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_txrx.c
@@@ -3680,7 -3676,9 +3680,13 @@@ int i40e_xdp_xmit(struct net_device *de
  	struct i40e_netdev_priv *np = netdev_priv(dev);
  	unsigned int queue_index = smp_processor_id();
  	struct i40e_vsi *vsi = np->vsi;
++<<<<<<< HEAD
 +	int err;
++=======
+ 	struct i40e_ring *xdp_ring;
+ 	int drops = 0;
+ 	int i;
++>>>>>>> cdb57ed07faf (i40e: implement flush flag for ndo_xdp_xmit)
  
  	if (test_bit(__I40E_VSI_DOWN, vsi->state))
  		return -ENETDOWN;
@@@ -3688,11 -3686,26 +3694,34 @@@
  	if (!i40e_enabled_xdp_vsi(vsi) || queue_index >= vsi->num_queue_pairs)
  		return -ENXIO;
  
++<<<<<<< HEAD
 +	err = i40e_xmit_xdp_ring(xdpf, vsi->xdp_rings[queue_index]);
 +	if (err != I40E_XDP_TX)
 +		return -ENOSPC;
 +
 +	return 0;
++=======
+ 	if (unlikely(flags & ~XDP_XMIT_FLAGS_MASK))
+ 		return -EINVAL;
+ 
+ 	xdp_ring = vsi->xdp_rings[queue_index];
+ 
+ 	for (i = 0; i < n; i++) {
+ 		struct xdp_frame *xdpf = frames[i];
+ 		int err;
+ 
+ 		err = i40e_xmit_xdp_ring(xdpf, xdp_ring);
+ 		if (err != I40E_XDP_TX) {
+ 			xdp_return_frame_rx_napi(xdpf);
+ 			drops++;
+ 		}
+ 	}
+ 
+ 	if (unlikely(flags & XDP_XMIT_FLUSH))
+ 		i40e_xdp_ring_update_tail(xdp_ring);
+ 
+ 	return n - drops;
++>>>>>>> cdb57ed07faf (i40e: implement flush flag for ndo_xdp_xmit)
  }
  
  /**
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_txrx.c
