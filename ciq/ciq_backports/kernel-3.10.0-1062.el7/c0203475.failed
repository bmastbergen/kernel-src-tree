bpf: use per htab salt for bucket hash

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit c0203475765f827e7b2eaf0a87222d0766e2cc4b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c0203475.failed

All BPF hash and LRU maps currently have a known and global seed
we feed into jhash() which is 0. This is suboptimal, thus fix it
by generating a random seed upon hashtab setup time which we can
later on feed into jhash() on lookup, update and deletions.

Fixes: 0f8e4bd8a1fc8 ("bpf: add hashtable type of eBPF maps")
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Song Liu <songliubraving@fb.com>
	Reviewed-by: Eduardo Valentin <eduval@amazon.com>
(cherry picked from commit c0203475765f827e7b2eaf0a87222d0766e2cc4b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/hashtab.c
diff --cc kernel/bpf/hashtab.c
index 513d9dfcf4ee,03cc59ee9c95..000000000000
--- a/kernel/bpf/hashtab.c
+++ b/kernel/bpf/hashtab.c
@@@ -14,6 -14,9 +14,11 @@@
  #include <linux/jhash.h>
  #include <linux/filter.h>
  #include <linux/rculist_nulls.h>
++<<<<<<< HEAD
++=======
+ #include <linux/random.h>
+ #include <uapi/linux/btf.h>
++>>>>>>> c0203475765f (bpf: use per htab salt for bucket hash)
  #include "percpu_freelist.h"
  #include "bpf_lru_list.h"
  #include "map_in_map.h"
* Unmerged path kernel/bpf/hashtab.c
