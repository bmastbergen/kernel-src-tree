x86/speculation/mds: Fix comment

jira LE-1907
cve CVE-2019-11091
cve CVE-2018-12130
cve CVE-2018-12127
cve CVE-2018-12126
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [x86] speculation/mds: Fix comment (Waiman Long) [1709296 1690358 1690348 1690335] {CVE-2018-12126 CVE-2018-12127 CVE-2018-12130 CVE-2019-11091}
Rebuild_FUZZ: 93.33%
commit-author Boris Ostrovsky <boris.ostrovsky@oracle.com>
commit cae5ec342645746d617dd420d206e1588d47768a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/cae5ec34.failed

s/L1TF/MDS/

	Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Tyler Hicks <tyhicks@canonical.com>
	Reviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>
(cherry picked from commit cae5ec342645746d617dd420d206e1588d47768a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/bugs.c
diff --cc arch/x86/kernel/cpu/bugs.c
index 6ec1d2da76d1,0642505dda69..000000000000
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@@ -111,32 -218,59 +111,46 @@@ void x86_amd_ssbd_enable(void
  		wrmsrl(MSR_AMD64_LS_CFG, msrval);
  }
  
++<<<<<<< HEAD
 +/* The kernel command line selection */
 +enum spectre_v2_mitigation_cmd {
 +	SPECTRE_V2_CMD_NONE,
 +	SPECTRE_V2_CMD_FORCE,
 +	SPECTRE_V2_CMD_AUTO,
 +	SPECTRE_V2_CMD_RETPOLINE,
 +	SPECTRE_V2_CMD_RETPOLINE_IBRS_USER,
 +	SPECTRE_V2_CMD_IBRS,
 +	SPECTRE_V2_CMD_IBRS_ALWAYS,
++=======
+ #undef pr_fmt
+ #define pr_fmt(fmt)	"MDS: " fmt
+ 
+ /* Default mitigation for MDS-affected CPUs */
+ static enum mds_mitigations mds_mitigation __ro_after_init = MDS_MITIGATION_FULL;
+ static bool mds_nosmt __ro_after_init = false;
+ 
+ static const char * const mds_strings[] = {
+ 	[MDS_MITIGATION_OFF]	= "Vulnerable",
+ 	[MDS_MITIGATION_FULL]	= "Mitigation: Clear CPU buffers",
+ 	[MDS_MITIGATION_VMWERV]	= "Vulnerable: Clear CPU buffers attempted, no microcode",
++>>>>>>> cae5ec342645 (x86/speculation/mds: Fix comment)
  };
  
 -static void __init mds_select_mitigation(void)
 -{
 -	if (!boot_cpu_has_bug(X86_BUG_MDS)) {
 -		mds_mitigation = MDS_MITIGATION_OFF;
 -		return;
 -	}
 -
 -	if (mds_mitigation == MDS_MITIGATION_FULL) {
 -		if (!boot_cpu_has(X86_FEATURE_MD_CLEAR))
 -			mds_mitigation = MDS_MITIGATION_VMWERV;
 -
 -		static_branch_enable(&mds_user_clear);
 -
 -		if (mds_nosmt && !boot_cpu_has(X86_BUG_MSBDS_ONLY))
 -			cpu_smt_disable(false);
 -	}
 -
 -	pr_info("%s\n", mds_strings[mds_mitigation]);
 -}
 -
 -static int __init mds_cmdline(char *str)
 -{
 -	if (!boot_cpu_has_bug(X86_BUG_MDS))
 -		return 0;
 -
 -	if (!str)
 -		return -EINVAL;
 -
 -	if (!strcmp(str, "off"))
 -		mds_mitigation = MDS_MITIGATION_OFF;
 -	else if (!strcmp(str, "full"))
 -		mds_mitigation = MDS_MITIGATION_FULL;
 -	else if (!strcmp(str, "full,nosmt")) {
 -		mds_mitigation = MDS_MITIGATION_FULL;
 -		mds_nosmt = true;
 -	}
 +static const char *spectre_v2_strings[] = {
 +	[SPECTRE_V2_NONE]			= "Vulnerable",
 +	[SPECTRE_V2_RETPOLINE_MINIMAL]		= "Vulnerable: Minimal ASM retpoline",
 +	[SPECTRE_V2_RETPOLINE_NO_IBPB]		= "Vulnerable: Retpoline without IBPB",
 +	[SPECTRE_V2_RETPOLINE_SKYLAKE]		= "Vulnerable: Retpoline on Skylake+",
 +	[SPECTRE_V2_RETPOLINE_UNSAFE_MODULE]	= "Vulnerable: Retpoline with unsafe module(s)",
 +	[SPECTRE_V2_RETPOLINE]			= "Mitigation: Full retpoline",
 +	[SPECTRE_V2_RETPOLINE_IBRS_USER]	= "Mitigation: Full retpoline and IBRS (user space)",
 +	[SPECTRE_V2_IBRS]			= "Mitigation: IBRS (kernel)",
 +	[SPECTRE_V2_IBRS_ALWAYS]		= "Mitigation: IBRS (kernel and user space)",
 +	[SPECTRE_V2_IBP_DISABLED]		= "Mitigation: IBP disabled",
 +	[SPECTRE_V2_IBRS_ENHANCED]		= "Mitigation: Enhanced IBRS",
 +};
  
 -	return 0;
 -}
 -early_param("mds", mds_cmdline);
 +enum spectre_v2_mitigation_cmd spectre_v2_cmd = SPECTRE_V2_CMD_AUTO;
  
  #undef pr_fmt
  #define pr_fmt(fmt)     "Spectre V2 : " fmt
* Unmerged path arch/x86/kernel/cpu/bugs.c
