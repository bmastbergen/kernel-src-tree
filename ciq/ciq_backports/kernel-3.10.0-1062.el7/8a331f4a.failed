x86/mce/AMD: Carve out SMCA get_block_address() code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [x86] mce/amd: Carve out SMCA get_block_address() code (Gary Hook) [1685269]
Rebuild_FUZZ: 96.00%
commit-author Yazen Ghannam <yazen.ghannam@amd.com>
commit 8a331f4a0863bea758561c921b94b4d28f7c4029
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/8a331f4a.failed

Carve out the SMCA code in get_block_address() into a separate helper
function.

No functional change.

	Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
[ Save an indentation level. ]
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
Link: http://lkml.kernel.org/r/20180215210943.11530-4-Yazen.Ghannam@amd.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 8a331f4a0863bea758561c921b94b4d28f7c4029)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce_amd.c
diff --cc arch/x86/kernel/cpu/mcheck/mce_amd.c
index 6cf441f79966,f7666eef4a87..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_amd.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_amd.c
@@@ -389,29 -480,8 +418,34 @@@ static u32 get_block_address(unsigned i
  		}
  	}
  
++<<<<<<< HEAD
 +	if (mce_flags.smca) {
 +		if (!block) {
 +			addr = MSR_AMD64_SMCA_MCx_MISC(bank);
 +		} else {
 +			/*
 +			 * For SMCA enabled processors, BLKPTR field of the
 +			 * first MISC register (MCx_MISC0) indicates presence of
 +			 * additional MISC register set (MISC1-4).
 +			 */
 +			u32 low, high;
 +
 +			if (rdmsr_safe_on_cpu(cpu, MSR_AMD64_SMCA_MCx_CONFIG(bank), &low, &high))
 +				return addr;
 +
 +			if (!(low & MCI_CONFIG_MCAX))
 +				return addr;
 +
 +			if (!rdmsr_safe_on_cpu(cpu, MSR_AMD64_SMCA_MCx_MISC(bank), &low, &high) &&
 +			    (low & MASK_BLKPTR_LO))
 +				addr = MSR_AMD64_SMCA_MCx_MISCy(bank, block - 1);
 +		}
 +		return addr;
 +	}
++=======
+ 	if (mce_flags.smca)
+ 		return smca_get_block_address(cpu, bank, block);
++>>>>>>> 8a331f4a0863 (x86/mce/AMD: Carve out SMCA get_block_address() code)
  
  	/* Fall back to method we used for older processors: */
  	switch (block) {
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_amd.c
