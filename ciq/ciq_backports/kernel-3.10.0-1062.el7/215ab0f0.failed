xfrm6: call kfree_skb when skb is toobig

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
commit 215ab0f021c9fea3c18b75e7d522400ee6a49990
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/215ab0f0.failed

After commit d6990976af7c5d8f55903bfb4289b6fb030bf754 ("vti6: fix PMTU caching
and reporting on xmit"), some too big skbs might be potentially passed down to
__xfrm6_output, causing it to fail to transmit but not free the skb, causing a
leak of skb, and consequentially a leak of dst references.

After running pmtu.sh, that shows as failure to unregister devices in a namespace:

[  311.397671] unregister_netdevice: waiting for veth_b to become free. Usage count = 1

The fix is to call kfree_skb in case of transmit failures.

Fixes: dd767856a36e ("xfrm6: Don't call icmpv6_send on local error")
	Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
	Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
(cherry picked from commit 215ab0f021c9fea3c18b75e7d522400ee6a49990)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/xfrm6_output.c
diff --cc net/ipv6/xfrm6_output.c
index c8c86890fffe,6a74080005cf..000000000000
--- a/net/ipv6/xfrm6_output.c
+++ b/net/ipv6/xfrm6_output.c
@@@ -154,9 -170,11 +154,15 @@@ static int __xfrm6_output(struct sock *
  
  	if (toobig && xfrm6_local_dontfrag(skb)) {
  		xfrm6_local_rxpmtu(skb, mtu);
+ 		kfree_skb(skb);
  		return -EMSGSIZE;
  	} else if (!skb->ignore_df && toobig && skb->sk) {
++<<<<<<< HEAD
 +		xfrm6_local_error(skb, mtu);
++=======
+ 		xfrm_local_error(skb, mtu);
+ 		kfree_skb(skb);
++>>>>>>> 215ab0f021c9 (xfrm6: call kfree_skb when skb is toobig)
  		return -EMSGSIZE;
  	}
  
* Unmerged path net/ipv6/xfrm6_output.c
