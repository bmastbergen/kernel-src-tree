perf event-parse: Use fixed size string for comms

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Chris Phlipot <cphlipot0@gmail.com>
commit c9f23d2bc21cb263ae931f3e264d003d746107bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c9f23d2b.failed

Some implementations of libc do not support the 'm' width modifier as
part of the scanf string format specifier. This can cause the parsing to
fail.  Since the parser never checks if the scanf parsing was
successesful, this can result in a crash.

Change the comm string to be allocated as a fixed size instead of
dynamically using 'm' scanf width modifier. This can be safely done
since comm size is limited to 16 bytes by TASK_COMM_LEN within the
kernel.

This change prevents perf from crashing when linked against bionic as
well as reduces the total number of heap allocations and frees invoked
while accomplishing the same task.

	Signed-off-by: Chris Phlipot <cphlipot0@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830021950.15563-1-cphlipot0@gmail.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit c9f23d2bc21cb263ae931f3e264d003d746107bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/trace-event-parse.c
diff --cc tools/perf/util/trace-event-parse.c
index e0a6e9a6a053,e76214f8d596..000000000000
--- a/tools/perf/util/trace-event-parse.c
+++ b/tools/perf/util/trace-event-parse.c
@@@ -161,19 -161,18 +161,24 @@@ void parse_ftrace_printk(struct pevent 
  	}
  }
  
 -void parse_saved_cmdline(struct tep_handle *pevent,
 +void parse_saved_cmdline(struct pevent *pevent,
  			 char *file, unsigned int size __maybe_unused)
  {
- 	char *comm;
+ 	char comm[17]; /* Max comm length in the kernel is 16. */
  	char *line;
  	char *next = NULL;
  	int pid;
  
  	line = strtok_r(file, "\n", &next);
  	while (line) {
++<<<<<<< HEAD
 +		sscanf(line, "%d %ms", &pid, &comm);
 +		pevent_register_comm(pevent, comm, pid);
 +		free(comm);
++=======
+ 		if (sscanf(line, "%d %16s", &pid, comm) == 2)
+ 			tep_register_comm(pevent, comm, pid);
++>>>>>>> c9f23d2bc21c (perf event-parse: Use fixed size string for comms)
  		line = strtok_r(NULL, "\n", &next);
  	}
  }
* Unmerged path tools/perf/util/trace-event-parse.c
