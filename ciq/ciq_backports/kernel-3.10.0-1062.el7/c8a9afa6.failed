ALSA: hda/realtek: merge alc_fixup_headset_jack to alc295_fixup_chromebook

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jaroslav Kysela <perex@perex.cz>
commit c8a9afa632f0fd45731d3353525faf1fdb362c89
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c8a9afa6.failed

The ALC225_FIXUP_HEADSET_JACK fixup can be merged to alc295_fixup_chromebook.
There are no other users for ALC225_FIXUP_HEADSET_JACK other than
the chromebook hardware.

Fixes: 10f5b1b85ed1 ("ALSA: hda/realtek - Fixed Headset Mic JD not stable")
	Cc: Kailang Yang <kailang@realtek.com>
	Signed-off-by: Jaroslav Kysela <perex@perex.cz>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit c8a9afa632f0fd45731d3353525faf1fdb362c89)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_realtek.c
diff --cc sound/pci/hda/patch_realtek.c
index b59b127f463b,96203d9d17c1..000000000000
--- a/sound/pci/hda/patch_realtek.c
+++ b/sound/pci/hda/patch_realtek.c
@@@ -5427,6 -5461,83 +5427,86 @@@ static void alc285_fixup_invalidate_dac
  	snd_hda_override_wcaps(codec, 0x03, 0);
  }
  
++<<<<<<< HEAD
++=======
+ static const struct hda_jack_keymap alc_headset_btn_keymap[] = {
+ 	{ SND_JACK_BTN_0, KEY_PLAYPAUSE },
+ 	{ SND_JACK_BTN_1, KEY_VOICECOMMAND },
+ 	{ SND_JACK_BTN_2, KEY_VOLUMEUP },
+ 	{ SND_JACK_BTN_3, KEY_VOLUMEDOWN },
+ 	{}
+ };
+ 
+ static void alc_headset_btn_callback(struct hda_codec *codec,
+ 				     struct hda_jack_callback *jack)
+ {
+ 	int report = 0;
+ 
+ 	if (jack->unsol_res & (7 << 13))
+ 		report |= SND_JACK_BTN_0;
+ 
+ 	if (jack->unsol_res  & (1 << 16 | 3 << 8))
+ 		report |= SND_JACK_BTN_1;
+ 
+ 	/* Volume up key */
+ 	if (jack->unsol_res & (7 << 23))
+ 		report |= SND_JACK_BTN_2;
+ 
+ 	/* Volume down key */
+ 	if (jack->unsol_res & (7 << 10))
+ 		report |= SND_JACK_BTN_3;
+ 
+ 	jack->jack->button_state = report;
+ }
+ 
+ static void alc295_fixup_chromebook(struct hda_codec *codec,
+ 				    const struct hda_fixup *fix, int action)
+ {
+ 
+ 	switch (action) {
+ 	case HDA_FIXUP_ACT_PRE_PROBE:
+ 		snd_hda_jack_detect_enable_callback(codec, 0x55,
+ 						    alc_headset_btn_callback);
+ 		snd_hda_jack_add_kctl(codec, 0x55, "Headset Jack", false,
+ 				      SND_JACK_HEADSET, alc_headset_btn_keymap);
+ 		switch (codec->core.vendor_id) {
+ 		case 0x10ec0295:
+ 			alc_update_coef_idx(codec, 0x4a, 0x8000, 1 << 15); /* Reset HP JD */
+ 			alc_update_coef_idx(codec, 0x4a, 0x8000, 0 << 15);
+ 			break;
+ 		case 0x10ec0236:
+ 			alc_update_coef_idx(codec, 0x1b, 0x8000, 1 << 15); /* Reset HP JD */
+ 			alc_update_coef_idx(codec, 0x1b, 0x8000, 0 << 15);
+ 			break;
+ 		}
+ 		break;
+ 	case HDA_FIXUP_ACT_INIT:
+ 		switch (codec->core.vendor_id) {
+ 		case 0x10ec0225:
+ 		case 0x10ec0295:
+ 		case 0x10ec0299:
+ 			alc_write_coef_idx(codec, 0x48, 0xd011);
+ 			alc_update_coef_idx(codec, 0x49, 0x007f, 0x0045);
+ 			alc_update_coef_idx(codec, 0x44, 0x007f << 8, 0x0045 << 8);
+ 			break;
+ 		case 0x10ec0236:
+ 		case 0x10ec0256:
+ 			alc_write_coef_idx(codec, 0x48, 0xd011);
+ 			alc_update_coef_idx(codec, 0x49, 0x007f, 0x0045);
+ 			break;
+ 		}
+ 		break;
+ 	}
+ }
+ 
+ static void alc_fixup_disable_mic_vref(struct hda_codec *codec,
+ 				  const struct hda_fixup *fix, int action)
+ {
+ 	if (action == HDA_FIXUP_ACT_PRE_PROBE)
+ 		snd_hda_codec_set_pin_target(codec, 0x19, PIN_VREFHIZ);
+ }
+ 
++>>>>>>> c8a9afa632f0 (ALSA: hda/realtek: merge alc_fixup_headset_jack to alc295_fixup_chromebook)
  /* for hda_fixup_thinkpad_acpi() */
  #include "thinkpad_helper.c"
  
@@@ -5571,6 -5680,10 +5651,13 @@@ enum 
  	ALC294_FIXUP_ASUS_MIC,
  	ALC294_FIXUP_ASUS_HEADSET_MIC,
  	ALC294_FIXUP_ASUS_SPK,
++<<<<<<< HEAD
++=======
+ 	ALC293_FIXUP_SYSTEM76_MIC_NO_PRESENCE,
+ 	ALC285_FIXUP_LENOVO_PC_BEEP_IN_NOISE,
+ 	ALC255_FIXUP_ACER_HEADSET_MIC,
+ 	ALC295_FIXUP_CHROME_BOOK,
++>>>>>>> c8a9afa632f0 (ALSA: hda/realtek: merge alc_fixup_headset_jack to alc295_fixup_chromebook)
  };
  
  static const struct hda_fixup alc269_fixups[] = {
@@@ -6507,6 -6626,40 +6594,43 @@@
  		.chained = true,
  		.chain_id = ALC294_FIXUP_ASUS_HEADSET_MIC
  	},
++<<<<<<< HEAD
++=======
+ 	[ALC295_FIXUP_CHROME_BOOK] = {
+ 		.type = HDA_FIXUP_FUNC,
+ 		.v.func = alc295_fixup_chromebook,
+ 	},
+ 	[ALC293_FIXUP_SYSTEM76_MIC_NO_PRESENCE] = {
+ 		.type = HDA_FIXUP_PINS,
+ 		.v.pins = (const struct hda_pintbl[]) {
+ 			{ 0x1a, 0x01a1913c }, /* use as headset mic, without its own jack detect */
+ 			{ }
+ 		},
+ 		.chained = true,
+ 		.chain_id = ALC269_FIXUP_HEADSET_MODE_NO_HP_MIC
+ 	},
+ 	[ALC285_FIXUP_LENOVO_PC_BEEP_IN_NOISE] = {
+ 		.type = HDA_FIXUP_VERBS,
+ 		.v.verbs = (const struct hda_verb[]) {
+ 			/* Disable PCBEEP-IN passthrough */
+ 			{ 0x20, AC_VERB_SET_COEF_INDEX, 0x36 },
+ 			{ 0x20, AC_VERB_SET_PROC_COEF, 0x57d7 },
+ 			{ }
+ 		},
+ 		.chained = true,
+ 		.chain_id = ALC285_FIXUP_LENOVO_HEADPHONE_NOISE
+ 	},
+ 	[ALC255_FIXUP_ACER_HEADSET_MIC] = {
+ 		.type = HDA_FIXUP_PINS,
+ 		.v.pins = (const struct hda_pintbl[]) {
+ 			{ 0x19, 0x03a11130 },
+ 			{ 0x1a, 0x90a60140 }, /* use as internal mic */
+ 			{ }
+ 		},
+ 		.chained = true,
+ 		.chain_id = ALC255_FIXUP_HEADSET_MODE_NO_HP_MIC
+ 	},
++>>>>>>> c8a9afa632f0 (ALSA: hda/realtek: merge alc_fixup_headset_jack to alc295_fixup_chromebook)
  };
  
  static const struct snd_pci_quirk alc269_fixup_tbl[] = {
* Unmerged path sound/pci/hda/patch_realtek.c
