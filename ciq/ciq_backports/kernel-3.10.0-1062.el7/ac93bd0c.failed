ipmi: Fix some counter issues

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Corey Minyard <cminyard@mvista.com>
commit ac93bd0c9e163fd3e2edfb4b5af22955b408431a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ac93bd0c.failed

Counters would not be pegged properly on some errors.  Have
deliver_response() return an error so the counters can be
incremented properly.

	Signed-off-by: Corey Minyard <cminyard@mvista.com>
(cherry picked from commit ac93bd0c9e163fd3e2edfb4b5af22955b408431a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/ipmi/ipmi_msghandler.c
diff --cc drivers/char/ipmi/ipmi_msghandler.c
index 5b5cc5cd2796,c21c4e021dab..000000000000
--- a/drivers/char/ipmi/ipmi_msghandler.c
+++ b/drivers/char/ipmi/ipmi_msghandler.c
@@@ -925,11 -886,11 +925,16 @@@ unsigned int ipmi_addr_length(int addr_
  }
  EXPORT_SYMBOL(ipmi_addr_length);
  
- static void deliver_response(struct ipmi_recv_msg *msg)
+ static int deliver_response(struct ipmi_smi *intf, struct ipmi_recv_msg *msg)
  {
++<<<<<<< HEAD
 +	if (!msg->user) {
 +		ipmi_smi_t    intf = msg->user_msg_data;
++=======
+ 	int rv = 0;
++>>>>>>> ac93bd0c9e16 (ipmi: Fix some counter issues)
  
+ 	if (!msg->user) {
  		/* Special handling for NULL users. */
  		if (intf->null_user_handler) {
  			intf->null_user_handler(intf, msg);
@@@ -946,13 -906,24 +950,24 @@@
  		 * risk.  At this moment, simply skip it in that case.
  		 */
  
 -		struct ipmi_user *user = msg->user;
 +		ipmi_user_t user = msg->user;
  		user->handler->ipmi_recv_hndl(msg, user->handler_data);
  	}
+ 
+ 	return rv;
  }
  
- static void
- deliver_err_response(struct ipmi_recv_msg *msg, int err)
+ static void deliver_local_response(struct ipmi_smi *intf,
+ 				   struct ipmi_recv_msg *msg)
+ {
+ 	if (deliver_response(intf, msg))
+ 		ipmi_inc_stat(intf, unhandled_local_responses);
+ 	else
+ 		ipmi_inc_stat(intf, handled_local_responses);
+ }
+ 
+ static void deliver_err_response(struct ipmi_smi *intf,
+ 				 struct ipmi_recv_msg *msg, int err)
  {
  	msg->recv_type = IPMI_RESPONSE_RECV_TYPE;
  	msg->msg_data[0] = err;
* Unmerged path drivers/char/ipmi/ipmi_msghandler.c
