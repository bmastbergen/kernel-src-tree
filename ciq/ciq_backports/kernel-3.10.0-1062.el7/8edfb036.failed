hrtimer: Fix hrtimer_is_queued() hole

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit 8edfb0362e8e52dec2de08fa163af01c9da2c9d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/8edfb036.failed

A queued hrtimer that gets restarted (hrtimer_start*() while
hrtimer_is_queued()) will briefly appear as unqueued/inactive, even
though the timer has always been active, we just moved it.

Close this hole by preserving timer->state in
hrtimer_start_range_ns()'s remove_hrtimer() call.

	Reported-by: Oleg Nesterov <oleg@redhat.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: ktkhai@parallels.com
	Cc: rostedt@goodmis.org
	Cc: juri.lelli@gmail.com
	Cc: pang.xunlei@linaro.org
	Cc: wanpeng.li@linux.intel.com
	Cc: umgwanakikbuti@gmail.com
Link: http://lkml.kernel.org/r/20150611124743.175989138@infradead.org
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit 8edfb0362e8e52dec2de08fa163af01c9da2c9d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/hrtimer.c
diff --cc kernel/hrtimer.c
index 3e09845e9ee2,1604157374d7..000000000000
--- a/kernel/hrtimer.c
+++ b/kernel/hrtimer.c
@@@ -957,13 -905,16 +957,26 @@@ remove_hrtimer(struct hrtimer *timer, s
  		 */
  		debug_deactivate(timer);
  		timer_stats_hrtimer_clear_start_info(timer);
++<<<<<<< HEAD:kernel/hrtimer.c
 +		reprogram = base->cpu_base == &__get_cpu_var(hrtimer_bases);
 +		/*
 +		 * We must preserve the CALLBACK state flag here,
 +		 * otherwise we could move the timer base in
 +		 * switch_hrtimer_base.
 +		 */
 +		state = timer->state & HRTIMER_STATE_CALLBACK;
++=======
+ 		reprogram = base->cpu_base == this_cpu_ptr(&hrtimer_bases);
+ 
+ 		if (!restart) {
+ 			/*
+ 			 * We must preserve the CALLBACK state flag here,
+ 			 * otherwise we could move the timer base in
+ 			 * switch_hrtimer_base.
+ 			 */
+ 			state &= HRTIMER_STATE_CALLBACK;
+ 		}
++>>>>>>> 8edfb0362e8e (hrtimer: Fix hrtimer_is_queued() hole):kernel/time/hrtimer.c
  		__remove_hrtimer(timer, base, state, reprogram);
  		return 1;
  	}
* Unmerged path kernel/hrtimer.c
