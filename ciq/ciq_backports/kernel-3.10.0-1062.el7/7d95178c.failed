ext4: check for NUL characters in extended attribute's name

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Theodore Ts'o <tytso@mit.edu>
commit 7d95178c77014dbd8dce36ee40bbbc5e6c121ff5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/7d95178c.failed

Extended attribute names are defined to be NUL-terminated, so the name
must not contain a NUL character.  This is important because there are
places when remove extended attribute, the code uses strlen to
determine the length of the entry.  That should probably be fixed at
some point, but code is currently really messy, so the simplest fix
for now is to simply validate that the extended attributes are sane.

https://bugzilla.kernel.org/show_bug.cgi?id=200401

	Reported-by: Wen Xu <wen.xu@gatech.edu>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Cc: stable@vger.kernel.org
(cherry picked from commit 7d95178c77014dbd8dce36ee40bbbc5e6c121ff5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/xattr.c
diff --cc fs/ext4/xattr.c
index ef6e269c5f10,f36fc5d5b257..000000000000
--- a/fs/ext4/xattr.c
+++ b/fs/ext4/xattr.c
@@@ -195,7 -188,10 +195,13 @@@ ext4_xattr_check_names(struct ext4_xatt
  	while (!IS_LAST_ENTRY(e)) {
  		struct ext4_xattr_entry *next = EXT4_XATTR_NEXT(e);
  		if ((void *)next >= end)
++<<<<<<< HEAD
 +			return -EIO;
++=======
+ 			return -EFSCORRUPTED;
+ 		if (strnlen(e->e_name, e->e_name_len) != e->e_name_len)
+ 			return -EFSCORRUPTED;
++>>>>>>> 7d95178c7701 (ext4: check for NUL characters in extended attribute's name)
  		e = next;
  	}
  
* Unmerged path fs/ext4/xattr.c
