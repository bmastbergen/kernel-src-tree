mm/tlb: Remove tlb_remove_table() non-concurrent condition

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [mm] tlb: Remove tlb_remove_table() non-concurrent condition (Vitaly Kuznetsov) [1448188]
Rebuild_FUZZ: 97.35%
commit-author Peter Zijlstra <peterz@infradead.org>
commit a6f572084fbee8b30f91465f4a085d7a90901c57
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a6f57208.failed

Will noted that only checking mm_users is incorrect; we should also
check mm_count in order to cover CPUs that have a lazy reference to
this mm (and could do speculative TLB operations).

If removing this turns out to be a performance issue, we can
re-instate a more complete check, but in tlb_table_flush() eliding the
call_rcu_sched().

Fixes: 267239116987 ("mm, powerpc: move the RCU page-table freeing into generic code")
	Reported-by: Will Deacon <will.deacon@arm.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by: Rik van Riel <riel@surriel.com>
	Acked-by: Will Deacon <will.deacon@arm.com>
	Cc: Nicholas Piggin <npiggin@gmail.com>
	Cc: David Miller <davem@davemloft.net>
	Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: stable@kernel.org
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit a6f572084fbee8b30f91465f4a085d7a90901c57)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memory.c
diff --cc mm/memory.c
index 992044080678,1893751cf6c0..000000000000
--- a/mm/memory.c
+++ b/mm/memory.c
@@@ -364,17 -375,6 +364,20 @@@ void tlb_remove_table(struct mmu_gathe
  {
  	struct mmu_table_batch **batch = &tlb->batch;
  
++<<<<<<< HEAD
 +	tlb->need_flush = 1;
 +
 +	/*
 +	 * When there's less then two users of this mm there cannot be a
 +	 * concurrent page-table walk.
 +	 */
 +	if (atomic_read(&tlb->mm->mm_users) < 2) {
 +		__tlb_remove_table(table);
 +		return;
 +	}
 +
++=======
++>>>>>>> a6f572084fbe (mm/tlb: Remove tlb_remove_table() non-concurrent condition)
  	if (*batch == NULL) {
  		*batch = (struct mmu_table_batch *)__get_free_page(GFP_NOWAIT | __GFP_NOWARN);
  		if (*batch == NULL) {
* Unmerged path mm/memory.c
