nfp: flower: prevent offload if rhashtable insert fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author John Hurley <john.hurley@netronome.com>
commit b5f0cf08340090d1503dbdbfd797e32264974100
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/b5f0cf08.failed

For flow offload adds, if the rhash insert code fails, the flow will still
have been offloaded but the reference to it in the driver freed.

Re-order the offload setup calls to ensure that a flow will only be written
to FW if a kernel reference is held and stored in the rhashtable. Remove
this hashtable entry if the offload fails.

Fixes: c01d0efa5136 ("nfp: flower: use rhashtable for flow caching")
	Signed-off-by: John Hurley <john.hurley@netronome.com>
	Reviewed-by: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
	Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b5f0cf08340090d1503dbdbfd797e32264974100)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/flower/offload.c
diff --cc drivers/net/ethernet/netronome/nfp/flower/offload.c
index 970ddbd64602,2f49eb75f3cc..000000000000
--- a/drivers/net/ethernet/netronome/nfp/flower/offload.c
+++ b/drivers/net/ethernet/netronome/nfp/flower/offload.c
@@@ -492,15 -471,22 +492,29 @@@ nfp_flower_add_offload(struct nfp_app *
  	if (err)
  		goto err_destroy_flow;
  
 -	err = nfp_compile_flow_metadata(app, flow, flow_pay,
 -					flow_pay->ingress_dev);
++<<<<<<< HEAD
 +	err = nfp_flower_xmit_flow(netdev, flow_pay,
 +				   NFP_FLOWER_CMSG_TYPE_FLOW_ADD);
  	if (err)
  		goto err_destroy_flow;
  
 +	INIT_HLIST_NODE(&flow_pay->link);
 +	flow_pay->tc_flower_cookie = flow->cookie;
 +	fl_key = nfp_flower_fl_key(flow->cookie);
 +	hash_add_rcu(priv->flow_table, &flow_pay->link, fl_key);
++=======
+ 	flow_pay->tc_flower_cookie = flow->cookie;
+ 	err = rhashtable_insert_fast(&priv->flow_table, &flow_pay->fl_node,
+ 				     nfp_flower_table_params);
+ 	if (err)
+ 		goto err_release_metadata;
+ 
+ 	err = nfp_flower_xmit_flow(netdev, flow_pay,
+ 				   NFP_FLOWER_CMSG_TYPE_FLOW_ADD);
+ 	if (err)
+ 		goto err_remove_rhash;
+ 
++>>>>>>> b5f0cf083400 (nfp: flower: prevent offload if rhashtable insert fails)
  	port->tc_offload_cnt++;
  
  	/* Deallocate flow payload when flower rule has been destroyed. */
@@@ -508,6 -494,12 +522,15 @@@
  
  	return 0;
  
++<<<<<<< HEAD
++=======
+ err_remove_rhash:
+ 	WARN_ON_ONCE(rhashtable_remove_fast(&priv->flow_table,
+ 					    &flow_pay->fl_node,
+ 					    nfp_flower_table_params));
+ err_release_metadata:
+ 	nfp_modify_flow_metadata(app, flow_pay);
++>>>>>>> b5f0cf083400 (nfp: flower: prevent offload if rhashtable insert fails)
  err_destroy_flow:
  	kfree(flow_pay->action_data);
  	kfree(flow_pay->mask_data);
* Unmerged path drivers/net/ethernet/netronome/nfp/flower/offload.c
