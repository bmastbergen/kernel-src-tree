netfilter: use skb_to_full_sk in ip_route_me_harder

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Florian Westphal <fw@strlen.de>
commit 29e09229d9f26129a39462fae0ddabc4d9533989
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/29e09229.failed

inet_sk(skb->sk) is illegal in case skb is attached to request socket.

Fixes: ca6fb0651883 ("tcp: attach SYNACK messages to request sockets instead of listener")
Reported by: Daniel J Blueman <daniel@quora.org>
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Tested-by: Daniel J Blueman <daniel@quora.org>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 29e09229d9f26129a39462fae0ddabc4d9533989)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/netfilter.c
diff --cc net/ipv4/netfilter.c
index 63d3846fc3c5,c0cc6aa8cfaa..000000000000
--- a/net/ipv4/netfilter.c
+++ b/net/ipv4/netfilter.c
@@@ -24,7 -23,9 +24,13 @@@ int ip_route_me_harder(struct sk_buff *
  	struct rtable *rt;
  	struct flowi4 fl4 = {};
  	__be32 saddr = iph->saddr;
++<<<<<<< HEAD
 +	__u8 flags = skb->sk ? inet_sk_flowi_flags(skb->sk) : 0;
++=======
+ 	const struct sock *sk = skb_to_full_sk(skb);
+ 	__u8 flags = sk ? inet_sk_flowi_flags(sk) : 0;
+ 	struct net_device *dev = skb_dst(skb)->dev;
++>>>>>>> 29e09229d9f2 (netfilter: use skb_to_full_sk in ip_route_me_harder)
  	unsigned int hh_len;
  
  	if (addr_type == RTN_UNSPEC)
@@@ -40,7 -41,9 +46,13 @@@
  	fl4.daddr = iph->daddr;
  	fl4.saddr = saddr;
  	fl4.flowi4_tos = RT_TOS(iph->tos);
++<<<<<<< HEAD
 +	fl4.flowi4_oif = skb->sk ? skb->sk->sk_bound_dev_if : 0;
++=======
+ 	fl4.flowi4_oif = sk ? sk->sk_bound_dev_if : 0;
+ 	if (!fl4.flowi4_oif)
+ 		fl4.flowi4_oif = l3mdev_master_ifindex(dev);
++>>>>>>> 29e09229d9f2 (netfilter: use skb_to_full_sk in ip_route_me_harder)
  	fl4.flowi4_mark = skb->mark;
  	fl4.flowi4_flags = flags;
  	rt = ip_route_output_key(net, &fl4);
@@@ -59,9 -62,9 +71,9 @@@
  	    xfrm_decode_session(skb, flowi4_to_flowi(&fl4), AF_INET) == 0) {
  		struct dst_entry *dst = skb_dst(skb);
  		skb_dst_set(skb, NULL);
- 		dst = xfrm_lookup(net, dst, flowi4_to_flowi(&fl4), skb->sk, 0);
+ 		dst = xfrm_lookup(net, dst, flowi4_to_flowi(&fl4), sk, 0);
  		if (IS_ERR(dst))
 -			return PTR_ERR(dst);
 +			return PTR_ERR(dst);;
  		skb_dst_set(skb, dst);
  	}
  #endif
* Unmerged path net/ipv4/netfilter.c
