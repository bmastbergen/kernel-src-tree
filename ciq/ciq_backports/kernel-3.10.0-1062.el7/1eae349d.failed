nvme-pci: drop IRQ disabling on submission queue lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jens Axboe <axboe@kernel.dk>
commit 1eae349d18fc7b8e7d88673f7194d7a542fdb25c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/1eae349d.failed

Since we aren't sharing the lock for completions now, we don't
have to make it IRQ safe.

	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 1eae349d18fc7b8e7d88673f7194d7a542fdb25c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 555634b3136a,133fc063d10c..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -685,18 -895,14 +685,26 @@@ static int nvme_queue_rq(struct blk_mq_
  
  	blk_mq_start_request(req);
  
++<<<<<<< HEAD
 +	spin_lock_irq(&nvmeq->q_lock);
 +	if (unlikely(nvmeq->cq_vector < 0)) {
 +		ret = BLK_MQ_RQ_QUEUE_ERROR;
 +		spin_unlock_irq(&nvmeq->q_lock);
 +		goto out;
 +	}
 +	__nvme_submit_cmd(nvmeq, &cmnd);
 +	nvme_process_cq(nvmeq);
 +	spin_unlock_irq(&nvmeq->q_lock);
 +	return BLK_MQ_RQ_QUEUE_OK;
 +out:
++=======
+ 	spin_lock(&nvmeq->sq_lock);
+ 	__nvme_submit_cmd(nvmeq, &cmnd);
+ 	spin_unlock(&nvmeq->sq_lock);
+ 	return BLK_STS_OK;
+ out_cleanup_iod:
++>>>>>>> 1eae349d18fc (nvme-pci: drop IRQ disabling on submission queue lock)
  	nvme_free_iod(dev, req);
 -out_free_cmd:
 -	nvme_cleanup_cmd(req);
  	return ret;
  }
  
@@@ -818,9 -1052,9 +826,15 @@@ static void nvme_pci_submit_async_event
  	c.common.opcode = nvme_admin_async_event;
  	c.common.command_id = NVME_AQ_BLK_MQ_DEPTH;
  
++<<<<<<< HEAD
 +	spin_lock_irq(&nvmeq->q_lock);
 +	__nvme_submit_cmd(nvmeq, &c);
 +	spin_unlock_irq(&nvmeq->q_lock);
++=======
+ 	spin_lock(&nvmeq->sq_lock);
+ 	__nvme_submit_cmd(nvmeq, &c);
+ 	spin_unlock(&nvmeq->sq_lock);
++>>>>>>> 1eae349d18fc (nvme-pci: drop IRQ disabling on submission queue lock)
  }
  
  static int adapter_delete_queue(struct nvme_dev *dev, u8 opcode, u16 id)
* Unmerged path drivers/nvme/host/pci.c
