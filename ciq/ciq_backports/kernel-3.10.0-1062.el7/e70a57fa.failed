cxgb4: fix thermal configuration dependencies

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnd Bergmann <arnd@arndb.de>
commit e70a57fa59bb7fefe063780a49e063d0d0f61863
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e70a57fa.failed

With CONFIG_THERMAL=m, we get a build error:

drivers/net/ethernet/chelsio/cxgb4/cxgb4_thermal.c: In function 'cxgb4_thermal_get_trip_type':
drivers/net/ethernet/chelsio/cxgb4/cxgb4_thermal.c:48:11: error: 'struct adapter' has no member named 'ch_thermal'

Once that is fixed by using IS_ENABLED() checks, we get a link error
against the thermal subsystem when cxgb4 is built-in:

drivers/net/ethernet/chelsio/cxgb4/cxgb4_thermal.o: In function `cxgb4_thermal_init':
cxgb4_thermal.c:(.text+0x180): undefined reference to `thermal_zone_device_register'
drivers/net/ethernet/chelsio/cxgb4/cxgb4_thermal.o: In function `cxgb4_thermal_remove':
cxgb4_thermal.c:(.text+0x1e0): undefined reference to `thermal_zone_device_unregister'

Finally, since CONFIG_THERMAL can be =m, the Makefile fails to pick up the
extra file into built-in.a, and we get another link failure against the
cxgb4_thermal_init/cxgb4_thermal_remove files, so the Makefile has to
be adapted as well to work for both CONFIG_THERMAL=y and =m.

Fixes: b18719157762 ("cxgb4: Add thermal zone support")
	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e70a57fa59bb7fefe063780a49e063d0d0f61863)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/Makefile
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/Makefile
index 745d519615b6,78e5d17a1d5f..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/Makefile
+++ b/drivers/net/ethernet/chelsio/cxgb4/Makefile
@@@ -9,4 -10,8 +9,10 @@@ cxgb4-objs := cxgb4_main.o l2t.o smt.o 
  	      cxgb4_ptp.o cxgb4_tc_flower.o cxgb4_cudbg.o \
  	      cudbg_common.o cudbg_lib.o cudbg_zlib.o
  cxgb4-$(CONFIG_CHELSIO_T4_DCB) +=  cxgb4_dcb.o
 -cxgb4-$(CONFIG_CHELSIO_T4_FCOE) +=  cxgb4_fcoe.o
  cxgb4-$(CONFIG_DEBUG_FS) += cxgb4_debugfs.o
++<<<<<<< HEAD
++=======
+ ifdef CONFIG_THERMAL
+ cxgb4-objs += cxgb4_thermal.o
+ endif
++>>>>>>> e70a57fa59bb (cxgb4: fix thermal configuration dependencies)
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
index a8897173511b,b16f4b3ef4c5..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
@@@ -866,6 -891,14 +866,17 @@@ struct mps_encap_entry 
  	atomic_t refcnt;
  };
  
++<<<<<<< HEAD
++=======
+ #if IS_ENABLED(CONFIG_THERMAL)
+ struct ch_thermal {
+ 	struct thermal_zone_device *tzdev;
+ 	int trip_temp;
+ 	int trip_type;
+ };
+ #endif
+ 
++>>>>>>> e70a57fa59bb (cxgb4: fix thermal configuration dependencies)
  struct adapter {
  	void __iomem *regs;
  	void __iomem *bar2;
@@@ -984,6 -1017,9 +995,12 @@@
  
  	/* Dump buffer for collecting logs in kdump kernel */
  	struct vmcoredd_data vmcoredd;
++<<<<<<< HEAD
++=======
+ #if IS_ENABLED(CONFIG_THERMAL)
+ 	struct ch_thermal ch_thermal;
+ #endif
++>>>>>>> e70a57fa59bb (cxgb4: fix thermal configuration dependencies)
  };
  
  /* Support for "sched-class" command to allow a TX Scheduling Class to be
@@@ -1836,4 -1873,9 +1853,12 @@@ void cxgb4_write_sgl(const struct sk_bu
  void cxgb4_ring_tx_db(struct adapter *adap, struct sge_txq *q, int n);
  int t4_set_vlan_acl(struct adapter *adap, unsigned int mbox, unsigned int vf,
  		    u16 vlan);
++<<<<<<< HEAD
++=======
+ int cxgb4_dcb_enabled(const struct net_device *dev);
+ 
+ int cxgb4_thermal_init(struct adapter *adap);
+ int cxgb4_thermal_remove(struct adapter *adap);
+ 
++>>>>>>> e70a57fa59bb (cxgb4: fix thermal configuration dependencies)
  #endif /* __CXGB4_H__ */
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index c1c4e9550a7f,2de0590a62c4..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@@ -5795,6 -5864,10 +5795,13 @@@ static int init_one(struct pci_dev *pde
  	if (!is_t4(adapter->params.chip))
  		cxgb4_ptp_init(adapter);
  
++<<<<<<< HEAD
++=======
+ 	if (IS_ENABLED(CONFIG_THERMAL) &&
+ 	    !is_t4(adapter->params.chip) && (adapter->flags & FW_OK))
+ 		cxgb4_thermal_init(adapter);
+ 
++>>>>>>> e70a57fa59bb (cxgb4: fix thermal configuration dependencies)
  	print_adapter_info(adapter);
  	return 0;
  
@@@ -5861,6 -5933,8 +5868,11 @@@ static void remove_one(struct pci_dev *
  
  		if (!is_t4(adapter->params.chip))
  			cxgb4_ptp_stop(adapter);
++<<<<<<< HEAD
++=======
+ 		if (IS_ENABLED(CONFIG_THERMAL))
+ 			cxgb4_thermal_remove(adapter);
++>>>>>>> e70a57fa59bb (cxgb4: fix thermal configuration dependencies)
  
  		/* If we allocated filters, free up state associated with any
  		 * valid filters ...
diff --git a/drivers/net/ethernet/chelsio/Kconfig b/drivers/net/ethernet/chelsio/Kconfig
index c9d0d83fbcc6..f2a6f716ec44 100644
--- a/drivers/net/ethernet/chelsio/Kconfig
+++ b/drivers/net/ethernet/chelsio/Kconfig
@@ -69,6 +69,7 @@ config CHELSIO_T3
 config CHELSIO_T4
 	tristate "Chelsio Communications T4/T5/T6 Ethernet support"
 	depends on PCI && (IPV6 || IPV6=n)
+	depends on THERMAL || !THERMAL
 	select FW_LOADER
 	select MDIO
 	select ZLIB_DEFLATE
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/Makefile
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
