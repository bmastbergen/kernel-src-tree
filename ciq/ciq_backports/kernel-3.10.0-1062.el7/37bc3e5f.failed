powerpc/lib/code-patching: Use alternate map for patch_instruction()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [powerpc] lib/code-patching: Use alternate map for patch_instruction() (Desnes Augusto Nunes do Rosario) [1637841]
Rebuild_FUZZ: 93.75%
commit-author Balbir Singh <bsingharora@gmail.com>
commit 37bc3e5fd764fb258ff4fcbb90b6d1b67fb466c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/37bc3e5f.failed

This patch creates the window using text_poke_area, allocated via
get_vm_area(). text_poke_area is per CPU to avoid locking.
text_poke_area for each cpu is setup using late_initcall, prior to
setup of these alternate mapping areas, we continue to use direct
write to change/modify kernel text. With the ability to use alternate
mappings to write to kernel text, it provides us the freedom to then
turn text read-only and implement CONFIG_STRICT_KERNEL_RWX.

This code is CPU hotplug aware to ensure that the we have mappings for
any new cpus as they come online and tear down mappings for any CPUs
that go offline.

	Signed-off-by: Balbir Singh <bsingharora@gmail.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 37bc3e5fd764fb258ff4fcbb90b6d1b67fb466c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/lib/code-patching.c
diff --cc arch/powerpc/lib/code-patching.c
index 74b351ac15dc,c9de03e0c1f1..000000000000
--- a/arch/powerpc/lib/code-patching.c
+++ b/arch/powerpc/lib/code-patching.c
@@@ -11,12 -11,18 +11,23 @@@
  #include <linux/vmalloc.h>
  #include <linux/init.h>
  #include <linux/mm.h>
++<<<<<<< HEAD
 +#include <asm/page.h>
 +#include <asm/code-patching.h>
 +#include <asm/uaccess.h>
++=======
+ #include <linux/cpuhotplug.h>
+ #include <linux/slab.h>
+ #include <linux/uaccess.h>
+ #include <linux/kprobes.h>
++>>>>>>> 37bc3e5fd764 (powerpc/lib/code-patching: Use alternate map for patch_instruction())
  
+ #include <asm/pgtable.h>
+ #include <asm/tlbflush.h>
+ #include <asm/page.h>
+ #include <asm/code-patching.h>
  
- int patch_instruction(unsigned int *addr, unsigned int instr)
+ static int __patch_instruction(unsigned int *addr, unsigned int instr)
  {
  	int err;
  
* Unmerged path arch/powerpc/lib/code-patching.c
