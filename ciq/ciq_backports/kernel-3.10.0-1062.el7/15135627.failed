igb: Replace GFP_ATOMIC with GFP_KERNEL in igb_sw_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jia-Ju Bai <baijiaju1990@gmail.com>
commit 151356270b0761e455ed82bba3353fb494451555
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/15135627.failed

igb_sw_init() is never called in atomic context.
It calls kzalloc() and kcalloc() with GFP_ATOMIC, which is not necessary.
GFP_ATOMIC can be replaced with GFP_KERNEL.

This is found by a static analysis tool named DCNS written by myself.

	Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
	Tested-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 151356270b0761e455ed82bba3353fb494451555)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/igb/igb_main.c
diff --cc drivers/net/ethernet/intel/igb/igb_main.c
index 5a31772377ea,a32c576c1e65..000000000000
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@@ -3886,8 -3871,9 +3886,14 @@@ static int igb_sw_init(struct igb_adapt
  	/* Assume MSI-X interrupts, will be checked during IRQ allocation */
  	adapter->flags |= IGB_FLAG_HAS_MSIX;
  
++<<<<<<< HEAD
 +	adapter->mac_table = kzalloc(sizeof(struct igb_mac_addr) *
 +				     hw->mac.rar_entry_count, GFP_ATOMIC);
++=======
+ 	adapter->mac_table = kcalloc(hw->mac.rar_entry_count,
+ 				     sizeof(struct igb_mac_addr),
+ 				     GFP_KERNEL);
++>>>>>>> 151356270b07 (igb: Replace GFP_ATOMIC with GFP_KERNEL in igb_sw_init())
  	if (!adapter->mac_table)
  		return -ENOMEM;
  
* Unmerged path drivers/net/ethernet/intel/igb/igb_main.c
