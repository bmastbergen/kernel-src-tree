RDMA: Convert drivers to use the AH's sgid_attr in post_wr paths

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Parav Pandit <parav@mellanox.com>
commit 89af969a665390dc6b156fef55755ca546cd8d92
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/89af969a.failed

For UD the drivers were doing a sgid_index lookup into the cache to get
the attrs, however we can now directly access the same attrs stores in
the ib_ah instead and remove the lookup.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit 89af969a665390dc6b156fef55755ca546cd8d92)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/bnxt_re/ib_verbs.c
#	drivers/infiniband/hw/mlx4/qp.c
#	drivers/infiniband/hw/qedr/qedr_roce_cm.c
diff --cc drivers/infiniband/hw/bnxt_re/ib_verbs.c
index 8301d7e5fa8c,136eaa78ad4a..000000000000
--- a/drivers/infiniband/hw/bnxt_re/ib_verbs.c
+++ b/drivers/infiniband/hw/bnxt_re/ib_verbs.c
@@@ -1924,22 -1898,10 +1922,14 @@@ static int bnxt_re_build_qp1_send_v2(st
  
  	memset(&qp->qp1_hdr, 0, sizeof(qp->qp1_hdr));
  
- 	rc = ib_get_cached_gid(ibdev, 1,
- 			       qplib_ah->host_sgid_index, &sgid,
- 			       &sgid_attr);
- 	if (rc) {
- 		dev_err(rdev_to_dev(qp->rdev),
- 			"Failed to query gid at index %d",
- 			qplib_ah->host_sgid_index);
- 		return rc;
- 	}
- 	if (sgid_attr.ndev) {
- 		if (is_vlan_dev(sgid_attr.ndev))
- 			vlan_id = vlan_dev_vlan_id(sgid_attr.ndev);
- 		dev_put(sgid_attr.ndev);
- 	}
+ 	if (is_vlan_dev(sgid_attr->ndev))
+ 		vlan_id = vlan_dev_vlan_id(sgid_attr->ndev);
  	/* Get network header type for this GID */
++<<<<<<< HEAD
 +	nw_type = ib_gid_to_network_type(sgid_attr.gid_type, &sgid);
++=======
+ 	nw_type = rdma_gid_attr_network_type(sgid_attr);
++>>>>>>> 89af969a6653 (RDMA: Convert drivers to use the AH's sgid_attr in post_wr paths)
  	switch (nw_type) {
  	case RDMA_NETWORK_IPV4:
  		nw_type = BNXT_RE_ROCEV2_IPV4_PACKET;
diff --cc drivers/infiniband/hw/mlx4/qp.c
index 353e43ad2e95,e576ca385d8e..000000000000
--- a/drivers/infiniband/hw/mlx4/qp.c
+++ b/drivers/infiniband/hw/mlx4/qp.c
@@@ -3166,10 -3169,8 +3166,15 @@@ static int build_mlx_header(struct mlx4
  					to_mdev(ib_dev)->sriov.demux[sqp->qp.port - 1].
  						       guid_cache[ah->av.ib.gid_index];
  			} else {
++<<<<<<< HEAD
 +				ib_get_cached_gid(ib_dev,
 +						  be32_to_cpu(ah->av.ib.port_pd) >> 24,
 +						  ah->av.ib.gid_index,
 +						  &sqp->ud_header.grh.source_gid, NULL);
++=======
+ 				sqp->ud_header.grh.source_gid =
+ 					ah->ibah.sgid_attr->gid;
++>>>>>>> 89af969a6653 (RDMA: Convert drivers to use the AH's sgid_attr in post_wr paths)
  			}
  		}
  		memcpy(sqp->ud_header.grh.destination_gid.raw,
diff --cc drivers/infiniband/hw/qedr/qedr_roce_cm.c
index eedb937d6fa9,2e1f352c037d..000000000000
--- a/drivers/infiniband/hw/qedr/qedr_roce_cm.c
+++ b/drivers/infiniband/hw/qedr/qedr_roce_cm.c
@@@ -402,25 -401,11 +401,33 @@@ static inline int qedr_gsi_build_header
  	for (i = 0; i < swr->num_sge; ++i)
  		send_size += swr->sg_list[i].length;
  
++<<<<<<< HEAD
 +	rc = ib_get_cached_gid(qp->ibqp.device, rdma_ah_get_port_num(ah_attr),
 +			       grh->sgid_index, &sgid, &sgid_attr);
 +	if (rc) {
 +		DP_ERR(dev,
 +		       "gsi post send: failed to get cached GID (port=%d, ix=%d)\n",
 +		       rdma_ah_get_port_num(ah_attr),
 +		       grh->sgid_index);
 +		return rc;
 +	}
 +
 +	if (sgid_attr.ndev) {
 +		vlan_id = rdma_vlan_dev_vlan_id(sgid_attr.ndev);
 +		if (vlan_id < VLAN_CFI_MASK)
 +			has_vlan = true;
 +
 +		dev_put(sgid_attr.ndev);
 +	}
 +
 +	has_udp = (sgid_attr.gid_type == IB_GID_TYPE_ROCE_UDP_ENCAP);
++=======
+ 	vlan_id = rdma_vlan_dev_vlan_id(sgid_attr->ndev);
+ 	if (vlan_id < VLAN_CFI_MASK)
+ 		has_vlan = true;
+ 
+ 	has_udp = (sgid_attr->gid_type == IB_GID_TYPE_ROCE_UDP_ENCAP);
++>>>>>>> 89af969a6653 (RDMA: Convert drivers to use the AH's sgid_attr in post_wr paths)
  	if (!has_udp) {
  		/* RoCE v1 */
  		ether_type = ETH_P_IBOE;
* Unmerged path drivers/infiniband/hw/bnxt_re/ib_verbs.c
* Unmerged path drivers/infiniband/hw/mlx4/qp.c
diff --git a/drivers/infiniband/hw/mthca/mthca_av.c b/drivers/infiniband/hw/mthca/mthca_av.c
index e7f6223e9c60..0823c0bc7e73 100644
--- a/drivers/infiniband/hw/mthca/mthca_av.c
+++ b/drivers/infiniband/hw/mthca/mthca_av.c
@@ -281,10 +281,7 @@ int mthca_read_ah(struct mthca_dev *dev, struct mthca_ah *ah,
 		header->grh.flow_label    =
 			ah->av->sl_tclass_flowlabel & cpu_to_be32(0xfffff);
 		header->grh.hop_limit     = ah->av->hop_limit;
-		ib_get_cached_gid(&dev->ib_dev,
-				  be32_to_cpu(ah->av->port_pd) >> 24,
-				  ah->av->gid_index % dev->limits.gid_table_len,
-				  &header->grh.source_gid, NULL);
+		header->grh.source_gid = ah->ibah.sgid_attr->gid;
 		memcpy(header->grh.destination_gid.raw,
 		       ah->av->dgid, 16);
 	}
* Unmerged path drivers/infiniband/hw/qedr/qedr_roce_cm.c
