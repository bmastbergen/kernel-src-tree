NFSv4: Don't exit the state manager without clearing NFS4CLNT_MANAGER_RUNNING

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 21a446cf186570168b7281b154b1993968598aca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/21a446cf.failed

If we exit the NFSv4 state manager due to a umount, then we can end up
leaving the NFS4CLNT_MANAGER_RUNNING flag set. If another mount causes
the nfs4_client to be rereferenced before it is destroyed, then we end
up never being able to recover state.

Fixes: 47c2199b6eb5 ("NFSv4.1: Ensure state manager thread dies on last ...")
	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
	Cc: stable@vger.kernel.org # v4.15+
(cherry picked from commit 21a446cf186570168b7281b154b1993968598aca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4state.c
diff --cc fs/nfs/nfs4state.c
index 1959970b54dc,98d1b6a6646a..000000000000
--- a/fs/nfs/nfs4state.c
+++ b/fs/nfs/nfs4state.c
@@@ -2483,11 -2601,12 +2483,18 @@@ static void nfs4_state_manager(struct n
  		nfs4_clear_state_manager_bit(clp);
  		/* Did we race with an attempt to give us more work? */
  		if (clp->cl_state == 0)
- 			break;
+ 			return;
  		if (test_and_set_bit(NFS4CLNT_MANAGER_RUNNING, &clp->cl_state) != 0)
++<<<<<<< HEAD
 +			break;
 +	} while (atomic_read(&clp->cl_count) > 1);
 +	return;
++=======
+ 			return;
+ 	} while (refcount_read(&clp->cl_count) > 1);
+ 	goto out_drain;
+ 
++>>>>>>> 21a446cf1865 (NFSv4: Don't exit the state manager without clearing NFS4CLNT_MANAGER_RUNNING)
  out_error:
  	if (strlen(section))
  		section_sep = ": ";
* Unmerged path fs/nfs/nfs4state.c
