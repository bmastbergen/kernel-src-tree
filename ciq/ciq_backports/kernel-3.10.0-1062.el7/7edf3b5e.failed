ALSA: usb-audio: AudioStreaming Power Domain parsing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jorge Sanjuan <jorge.sanjuan@codethink.co.uk>
commit 7edf3b5e6a4544b42d3572a7058f8ffe96349ee8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/7edf3b5e.failed

Power Domains in the UAC3 spec are mainly intended to be
associated to an Input or Output Terminal so the host
changes the power state of the entire capture or playback
path within the topology.

This patch adds support for finding Power Domains associated
to an Audio Streaming Interface (bTerminalLink) and adds a
reference to them in the usb audio substreams (snd_usb_substream).

	Signed-off-by: Jorge Sanjuan <jorge.sanjuan@codethink.co.uk>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 7edf3b5e6a4544b42d3572a7058f8ffe96349ee8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/stream.c
diff --cc sound/usb/stream.c
index d16e1c23f4e9,c0567fa1e84b..000000000000
--- a/sound/usb/stream.c
+++ b/sound/usb/stream.c
@@@ -106,6 -109,11 +109,14 @@@ static void snd_usb_init_substream(stru
  	subs->ep_num = fp->endpoint;
  	if (fp->channels > subs->channels_max)
  		subs->channels_max = fp->channels;
++<<<<<<< HEAD
++=======
+ 
+ 	if (pd)
+ 		subs->str_pd = pd;
+ 
+ 	snd_usb_preallocate_buffer(subs);
++>>>>>>> 7edf3b5e6a45 (ALSA: usb-audio: AudioStreaming Power Domain parsing)
  }
  
  /* kctl callbacks for usb-audio channel maps */
diff --git a/sound/usb/card.h b/sound/usb/card.h
index 1406292d50ec..0aff57069ad4 100644
--- a/sound/usb/card.h
+++ b/sound/usb/card.h
@@ -36,6 +36,7 @@ struct audioformat {
 
 struct snd_usb_substream;
 struct snd_usb_endpoint;
+struct snd_usb_power_domain;
 
 struct snd_urb_ctx {
 	struct urb *urb;
@@ -114,6 +115,7 @@ struct snd_usb_substream {
 	int interface;	/* current interface */
 	int endpoint;	/* assigned endpoint */
 	struct audioformat *cur_audiofmt;	/* current audioformat pointer (for hw_params callback) */
+	struct snd_usb_power_domain *str_pd;	/* UAC3 Power Domain for streaming path */
 	snd_pcm_format_t pcm_format;	/* current audio format (for hw_params callback) */
 	unsigned int channels;		/* current number of channels (for hw_params callback) */
 	unsigned int channels_max;	/* max channels in the all audiofmts */
* Unmerged path sound/usb/stream.c
