nohz: Fix local_timer_softirq_pending()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Anna-Maria Gleixner <anna-maria@linutronix.de>
commit 80d20d35af1edd632a5e7a3b9c0ab7ceff92769e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/80d20d35.failed

local_timer_softirq_pending() checks whether the timer softirq is
pending with: local_softirq_pending() & TIMER_SOFTIRQ.

This is wrong because TIMER_SOFTIRQ is the softirq number and not a
bitmask. So the test checks for the wrong bit.

Use BIT(TIMER_SOFTIRQ) instead.

Fixes: 5d62c183f9e9 ("nohz: Prevent a timer interrupt storm in tick_nohz_stop_sched_tick()")
	Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
	Reviewed-by: Daniel Bristot de Oliveira <bristot@redhat.com>
	Acked-by: Frederic Weisbecker <frederic@kernel.org>
	Cc: bigeasy@linutronix.de
	Cc: peterz@infradead.org
	Cc: stable@vger.kernel.org
Link: https://lkml.kernel.org/r/20180731161358.29472-1-anna-maria@linutronix.de

(cherry picked from commit 80d20d35af1edd632a5e7a3b9c0ab7ceff92769e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/time/tick-sched.c
diff --cc kernel/time/tick-sched.c
index 8b8d105721e7,5b33e2f5c0ed..000000000000
--- a/kernel/time/tick-sched.c
+++ b/kernel/time/tick-sched.c
@@@ -570,16 -637,18 +570,25 @@@ static void tick_nohz_restart(struct ti
  	 * Reset to make sure next tick stop doesn't get fooled by past
  	 * cached clock deadline.
  	 */
 -	ts->next_tick = 0;
 +	ts->next_tick.tv64 = 0;
  }
  
++<<<<<<< HEAD
 +static ktime_t tick_nohz_stop_sched_tick(struct tick_sched *ts,
 +					 ktime_t now, int cpu)
++=======
+ static inline bool local_timer_softirq_pending(void)
+ {
+ 	return local_softirq_pending() & BIT(TIMER_SOFTIRQ);
+ }
+ 
+ static ktime_t tick_nohz_next_event(struct tick_sched *ts, int cpu)
++>>>>>>> 80d20d35af1e (nohz: Fix local_timer_softirq_pending())
  {
 +	struct clock_event_device *dev = __get_cpu_var(tick_cpu_device).evtdev;
  	u64 basemono, next_tick, next_tmr, next_rcu, delta, expires;
  	unsigned long seq, basejiff;
 +	ktime_t	tick;
  
  	/* Read jiffies and the time when jiffies were updated last */
  	do {
* Unmerged path kernel/time/tick-sched.c
