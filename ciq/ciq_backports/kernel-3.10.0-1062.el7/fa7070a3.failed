perf stat: Move csv_* to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit fa7070a38676d660c0a71ab6981bfdca3b340ccd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/fa7070a3.failed

Move the static csv_* variables to 'struct perf_stat_config', so that it
can be passed around and used outside the 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-21-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit fa7070a38676d660c0a71ab6981bfdca3b340ccd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
diff --cc tools/perf/builtin-stat.c
index a3a835604d08,4c29e5065e02..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -766,16 -658,17 +764,22 @@@ static int run_perf_stat(int argc, cons
  	return ret;
  }
  
 -static void print_running(struct perf_stat_config *config,
 -			  u64 run, u64 ena)
 +static void print_running(u64 run, u64 ena)
  {
++<<<<<<< HEAD
 +	if (csv_output) {
 +		fprintf(stat_config.output, "%s%" PRIu64 "%s%.2f",
 +					csv_sep,
++=======
+ 	if (config->csv_output) {
+ 		fprintf(config->output, "%s%" PRIu64 "%s%.2f",
+ 					config->csv_sep,
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  					run,
- 					csv_sep,
+ 					config->csv_sep,
  					ena ? 100.0 * run / ena : 100.0);
  	} else if (run != ena) {
 -		fprintf(config->output, "  (%.2f%%)", 100.0 * run / ena);
 +		fprintf(stat_config.output, "  (%.2f%%)", 100.0 * run / ena);
  	}
  }
  
@@@ -783,13 -677,14 +787,18 @@@ static void print_noise_pct(double tota
  {
  	double pct = rel_stddev_stats(total, avg);
  
++<<<<<<< HEAD
 +	if (csv_output)
 +		fprintf(stat_config.output, "%s%.2f%%", csv_sep, pct);
++=======
+ 	if (config->csv_output)
+ 		fprintf(config->output, "%s%.2f%%", config->csv_sep, pct);
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  	else if (pct)
 -		fprintf(config->output, "  ( +-%6.2f%% )", pct);
 +		fprintf(stat_config.output, "  ( +-%6.2f%% )", pct);
  }
  
 -static void print_noise(struct perf_stat_config *config,
 -			struct perf_evsel *evsel, double avg)
 +static void print_noise(struct perf_evsel *evsel, double avg)
  {
  	struct perf_stat_evsel *ps;
  
@@@ -797,43 -692,44 +806,58 @@@
  		return;
  
  	ps = evsel->stats;
 -	print_noise_pct(config, stddev_stats(&ps->res_stats[0]), avg);
 +	print_noise_pct(stddev_stats(&ps->res_stats[0]), avg);
  }
  
 -static void aggr_printout(struct perf_stat_config *config,
 -			  struct perf_evsel *evsel, int id, int nr)
 +static void aggr_printout(struct perf_evsel *evsel, int id, int nr)
  {
 -	switch (config->aggr_mode) {
 +	switch (stat_config.aggr_mode) {
  	case AGGR_CORE:
 -		fprintf(config->output, "S%d-C%*d%s%*d%s",
 +		fprintf(stat_config.output, "S%d-C%*d%s%*d%s",
  			cpu_map__id_to_socket(id),
- 			csv_output ? 0 : -8,
+ 			config->csv_output ? 0 : -8,
  			cpu_map__id_to_cpu(id),
- 			csv_sep,
- 			csv_output ? 0 : 4,
+ 			config->csv_sep,
+ 			config->csv_output ? 0 : 4,
  			nr,
- 			csv_sep);
+ 			config->csv_sep);
  		break;
  	case AGGR_SOCKET:
++<<<<<<< HEAD
 +		fprintf(stat_config.output, "S%*d%s%*d%s",
 +			csv_output ? 0 : -5,
++=======
+ 		fprintf(config->output, "S%*d%s%*d%s",
+ 			config->csv_output ? 0 : -5,
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  			id,
- 			csv_sep,
- 			csv_output ? 0 : 4,
+ 			config->csv_sep,
+ 			config->csv_output ? 0 : 4,
  			nr,
- 			csv_sep);
+ 			config->csv_sep);
  			break;
  	case AGGR_NONE:
++<<<<<<< HEAD
 +		fprintf(stat_config.output, "CPU%*d%s",
 +			csv_output ? 0 : -4,
 +			perf_evsel__cpus(evsel)->map[id], csv_sep);
 +		break;
 +	case AGGR_THREAD:
 +		fprintf(stat_config.output, "%*s-%*d%s",
 +			csv_output ? 0 : 16,
++=======
+ 		fprintf(config->output, "CPU%*d%s",
+ 			config->csv_output ? 0 : -4,
+ 			perf_evsel__cpus(evsel)->map[id], config->csv_sep);
+ 		break;
+ 	case AGGR_THREAD:
+ 		fprintf(config->output, "%*s-%*d%s",
+ 			config->csv_output ? 0 : 16,
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  			thread_map__comm(evsel->threads, id),
- 			csv_output ? 0 : -8,
+ 			config->csv_output ? 0 : -8,
  			thread_map__pid(evsel->threads, id),
- 			csv_sep);
+ 			config->csv_sep);
  		break;
  	case AGGR_GLOBAL:
  	case AGGR_UNSET:
@@@ -903,13 -802,14 +927,18 @@@ static void new_line_csv(void *ctx
  
  	fputc('\n', os->fh);
  	if (os->prefix)
++<<<<<<< HEAD
 +		fprintf(os->fh, "%s%s", os->prefix, csv_sep);
 +	aggr_printout(os->evsel, os->id, os->nr);
++=======
+ 		fprintf(os->fh, "%s%s", os->prefix, config->csv_sep);
+ 	aggr_printout(config, os->evsel, os->id, os->nr);
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  	for (i = 0; i < os->nfields; i++)
- 		fputs(csv_sep, os->fh);
+ 		fputs(config->csv_sep, os->fh);
  }
  
 -static void print_metric_csv(struct perf_stat_config *config __maybe_unused,
 -			     void *ctx,
 +static void print_metric_csv(void *ctx,
  			     const char *color __maybe_unused,
  			     const char *fmt, const char *unit, double val)
  {
@@@ -994,10 -896,11 +1023,10 @@@ static void print_metric_only_csv(void 
  	while (isdigit(*ends) || *ends == '.')
  		ends++;
  	*ends = 0;
- 	fprintf(out, "%s%s", vals, csv_sep);
+ 	fprintf(out, "%s%s", vals, config->csv_sep);
  }
  
 -static void new_line_metric(struct perf_stat_config *config __maybe_unused,
 -			    void *ctx __maybe_unused)
 +static void new_line_metric(void *ctx __maybe_unused)
  {
  }
  
@@@ -1082,9 -959,9 +1111,9 @@@ static void abs_printout(int id, int nr
  			fmt = floor(sc) != sc ? "%18.2f%s" : "%18.0f%s";
  	}
  
 -	aggr_printout(config, evsel, id, nr);
 +	aggr_printout(evsel, id, nr);
  
- 	fprintf(output, fmt, avg, csv_sep);
+ 	fprintf(output, fmt, avg, config->csv_sep);
  
  	if (evsel->unit)
  		fprintf(output, "%-*s%s",
@@@ -1162,15 -1041,15 +1191,20 @@@ static void printout(int id, int nr, st
  	}
  	if (run == 0 || ena == 0 || counter->counts->scaled == -1) {
  		if (metric_only) {
 -			pm(config, &os, NULL, "", "", 0);
 +			pm(&os, NULL, "", "", 0);
  			return;
  		}
 -		aggr_printout(config, counter, id, nr);
 +		aggr_printout(counter, id, nr);
  
++<<<<<<< HEAD
 +		fprintf(stat_config.output, "%*s%s",
 +			csv_output ? 0 : 18,
++=======
+ 		fprintf(config->output, "%*s%s",
+ 			config->csv_output ? 0 : 18,
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  			counter->supported ? CNTR_NOT_COUNTED : CNTR_NOT_SUPPORTED,
- 			csv_sep);
+ 			config->csv_sep);
  
  		if (counter->supported) {
  			print_free_counters_hint = 1;
@@@ -1178,24 -1057,24 +1212,45 @@@
  				print_mixed_hw_group_error = 1;
  		}
  
++<<<<<<< HEAD
 +		fprintf(stat_config.output, "%-*s%s",
 +			csv_output ? 0 : unit_width,
 +			counter->unit, csv_sep);
 +
 +		fprintf(stat_config.output, "%*s",
 +			csv_output ? 0 : -25,
 +			perf_evsel__name(counter));
 +
 +		if (counter->cgrp)
 +			fprintf(stat_config.output, "%s%s",
 +				csv_sep, counter->cgrp->name);
 +
 +		if (!csv_output)
 +			pm(&os, NULL, NULL, "", 0);
 +		print_noise(counter, noise);
 +		print_running(run, ena);
 +		if (csv_output)
 +			pm(&os, NULL, NULL, "", 0);
++=======
+ 		fprintf(config->output, "%-*s%s",
+ 			config->csv_output ? 0 : unit_width,
+ 			counter->unit, config->csv_sep);
+ 
+ 		fprintf(config->output, "%*s",
+ 			config->csv_output ? 0 : -25,
+ 			perf_evsel__name(counter));
+ 
+ 		if (counter->cgrp)
+ 			fprintf(config->output, "%s%s",
+ 				config->csv_sep, counter->cgrp->name);
+ 
+ 		if (!config->csv_output)
+ 			pm(config, &os, NULL, NULL, "", 0);
+ 		print_noise(config, counter, noise);
+ 		print_running(config, run, ena);
+ 		if (config->csv_output)
+ 			pm(config, &os, NULL, NULL, "", 0);
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  		return;
  	}
  
@@@ -1211,17 -1086,17 +1266,30 @@@
  	out.ctx = &os;
  	out.force_header = false;
  
++<<<<<<< HEAD
 +	if (csv_output && !metric_only) {
 +		print_noise(counter, noise);
 +		print_running(run, ena);
++=======
+ 	if (config->csv_output && !metric_only) {
+ 		print_noise(config, counter, noise);
+ 		print_running(config, run, ena);
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  	}
  
 -	perf_stat__print_shadow_stats(config, counter, uval,
 +	perf_stat__print_shadow_stats(counter, uval,
  				first_shadow_cpu(counter, id),
++<<<<<<< HEAD
 +				&out, &metric_events);
 +	if (!csv_output && !metric_only) {
 +		print_noise(counter, noise);
 +		print_running(run, ena);
++=======
+ 				&out, &metric_events, st);
+ 	if (!config->csv_output && !metric_only) {
+ 		print_noise(config, counter, noise);
+ 		print_running(config, run, ena);
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  	}
  }
  
@@@ -1561,16 -1508,15 +1629,26 @@@ static void print_metric_headers(const 
  	};
  
  	if (prefix)
 -		fprintf(config->output, "%s", prefix);
 -
 +		fprintf(stat_config.output, "%s", prefix);
 +
++<<<<<<< HEAD
 +	if (!csv_output && !no_indent)
 +		fprintf(stat_config.output, "%*s",
 +			aggr_header_lens[stat_config.aggr_mode], "");
 +	if (csv_output) {
 +		if (stat_config.interval)
 +			fputs("time,", stat_config.output);
 +		fputs(aggr_header_csv[stat_config.aggr_mode],
 +			stat_config.output);
++=======
+ 	if (!config->csv_output && !no_indent)
+ 		fprintf(config->output, "%*s",
+ 			aggr_header_lens[config->aggr_mode], "");
+ 	if (config->csv_output) {
+ 		if (config->interval)
+ 			fputs("time,", config->output);
+ 		fputs(aggr_header_csv[config->aggr_mode], config->output);
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  	}
  
  	/* Print metrics headers only */
@@@ -1599,10 -1547,10 +1677,15 @@@ static void print_interval(char *prefix
  	if (interval_clear)
  		puts(CONSOLE_CLEAR);
  
- 	sprintf(prefix, "%6lu.%09lu%s", ts->tv_sec, ts->tv_nsec, csv_sep);
+ 	sprintf(prefix, "%6lu.%09lu%s", ts->tv_sec, ts->tv_nsec, config->csv_sep);
  
++<<<<<<< HEAD
 +	if ((num_print_interval == 0 && !csv_output) || interval_clear) {
 +		switch (stat_config.aggr_mode) {
++=======
+ 	if ((num_print_interval == 0 && !config->csv_output) || interval_clear) {
+ 		switch (config->aggr_mode) {
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  		case AGGR_SOCKET:
  			fprintf(output, "#           time socket cpus");
  			if (!metric_only)
@@@ -1825,8 -1774,8 +1908,13 @@@ perf_evlist__print_counters(struct perf
  		break;
  	}
  
++<<<<<<< HEAD
 +	if (!interval && !csv_output)
 +		print_footer();
++=======
+ 	if (!interval && !config->csv_output)
+ 		print_footer(config);
++>>>>>>> fa7070a38676 (perf stat: Move csv_* to 'struct perf_stat_config')
  
  	fflush(config->output);
  }
* Unmerged path tools/perf/builtin-stat.c
diff --git a/tools/perf/util/stat.h b/tools/perf/util/stat.h
index 4b88aef959fb..f68e3ec01325 100644
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@ -89,6 +89,7 @@ struct perf_stat_config {
 	bool			 scale;
 	bool			 no_inherit;
 	bool			 identifier;
+	bool			 csv_output;
 	FILE			*output;
 	unsigned int		 interval;
 	unsigned int		 timeout;
@@ -96,6 +97,7 @@ struct perf_stat_config {
 	int			 times;
 	struct runtime_stat	*stats;
 	int			 stats_num;
+	const char		*csv_sep;
 };
 
 void update_stats(struct stats *stats, u64 val);
