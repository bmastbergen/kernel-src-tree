nvmet: implement the changed namespaces log

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Christoph Hellwig <hch@lst.de>
commit c16734ea98f5549fed9a1af47e943a45855274e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c16734ea.failed

Just keep a per-controller buffer of changed namespaces and copy it out
in the get log page implementation.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Daniel Verkamp <daniel.verkamp@intel.com>
(cherry picked from commit c16734ea98f5549fed9a1af47e943a45855274e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/admin-cmd.c
#	drivers/nvme/target/core.c
diff --cc drivers/nvme/target/admin-cmd.c
index 4adff15ff6c3,52129d13770e..000000000000
--- a/drivers/nvme/target/admin-cmd.c
+++ b/drivers/nvme/target/admin-cmd.c
@@@ -116,13 -126,27 +116,37 @@@ out
  	nvmet_req_complete(req, status);
  }
  
++<<<<<<< HEAD
 +static void copy_and_pad(char *dst, int dst_len, const char *src, int src_len)
 +{
 +	int len = min(src_len, dst_len);
 +
 +	memcpy(dst, src, len);
 +	if (dst_len > len)
 +		memset(dst + len, ' ', dst_len - len);
++=======
+ static void nvmet_execute_get_log_changed_ns(struct nvmet_req *req)
+ {
+ 	struct nvmet_ctrl *ctrl = req->sq->ctrl;
+ 	u16 status = NVME_SC_INTERNAL;
+ 	size_t len;
+ 
+ 	if (req->data_len != NVME_MAX_CHANGED_NAMESPACES * sizeof(__le32))
+ 		goto out;
+ 
+ 	mutex_lock(&ctrl->lock);
+ 	if (ctrl->nr_changed_ns == U32_MAX)
+ 		len = sizeof(__le32);
+ 	else
+ 		len = ctrl->nr_changed_ns * sizeof(__le32);
+ 	status = nvmet_copy_to_sgl(req, 0, ctrl->changed_ns_list, len);
+ 	if (!status)
+ 		status = nvmet_zero_sgl(req, len, req->data_len - len);
+ 	ctrl->nr_changed_ns = 0;
+ 	mutex_unlock(&ctrl->lock);
+ out:
+ 	nvmet_req_complete(req, status);
++>>>>>>> c16734ea98f5 (nvmet: implement the changed namespaces log)
  }
  
  static void nvmet_execute_identify_ctrl(struct nvmet_req *req)
diff --cc drivers/nvme/target/core.c
index 81b808ef54e8,4fe88e15c641..000000000000
--- a/drivers/nvme/target/core.c
+++ b/drivers/nvme/target/core.c
@@@ -368,11 -400,8 +400,16 @@@ void nvmet_ns_disable(struct nvmet_ns *
  	percpu_ref_exit(&ns->ref);
  
  	mutex_lock(&subsys->lock);
++<<<<<<< HEAD
 +	list_for_each_entry(ctrl, &subsys->ctrls, subsys_entry)
 +		nvmet_add_async_event(ctrl, NVME_AER_TYPE_NOTICE, 0, 0);
 +
 +	if (ns->bdev)
 +		blkdev_put(ns->bdev, FMODE_WRITE|FMODE_READ);
++=======
+ 	nvmet_ns_changed(subsys, ns->nsid);
+ 	nvmet_ns_dev_disable(ns);
++>>>>>>> c16734ea98f5 (nvmet: implement the changed namespaces log)
  out_unlock:
  	mutex_unlock(&subsys->lock);
  }
* Unmerged path drivers/nvme/target/admin-cmd.c
* Unmerged path drivers/nvme/target/core.c
diff --git a/drivers/nvme/target/nvmet.h b/drivers/nvme/target/nvmet.h
index 292d4d16ab7f..861195d82879 100644
--- a/drivers/nvme/target/nvmet.h
+++ b/drivers/nvme/target/nvmet.h
@@ -132,6 +132,9 @@ struct nvmet_ctrl {
 
 	const struct nvmet_fabrics_ops *ops;
 
+	__le32			*changed_ns_list;
+	u32			nr_changed_ns;
+
 	char			subsysnqn[NVMF_NQN_FIELD_LEN];
 	char			hostnqn[NVMF_NQN_FIELD_LEN];
 };
