perf/x86/intel: Fix memory corruption

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit ede271b059463731cbd6dffe55ffd70d7dbe8392
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ede271b0.failed

Through:

  validate_event()
    x86_pmu.get_event_constraints(.idx=-1)
      tfa_get_event_constraints()
        dyn_constraint()

cpuc->constraint_list[-1] is used, which is an obvious out-of-bound access.

In this case, simply skip the TFA constraint code, there is no event
constraint with just PMC3, therefore the code will never result in the
empty set.

Fixes: 400816f60c54 ("perf/x86/intel: Implement support for TSX Force Abort")
	Reported-by: Tony Jones <tonyj@suse.com>
	Reported-by: "DSouza, Nelson" <nelson.dsouza@intel.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Tony Jones <tonyj@suse.com>
	Tested-by: "DSouza, Nelson" <nelson.dsouza@intel.com>
	Cc: eranian@google.com
	Cc: jolsa@redhat.com
	Cc: stable@kernel.org
Link: https://lkml.kernel.org/r/20190314130705.441549378@infradead.org

(cherry picked from commit ede271b059463731cbd6dffe55ffd70d7dbe8392)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/intel/core.c
diff --cc arch/x86/events/intel/core.c
index f0d6acdd6b07,92dfeb343a6a..000000000000
--- a/arch/x86/events/intel/core.c
+++ b/arch/x86/events/intel/core.c
@@@ -3172,6 -3399,26 +3172,29 @@@ glp_get_event_constraints(struct cpu_hw
  	return c;
  }
  
++<<<<<<< HEAD
++=======
+ static bool allow_tsx_force_abort = true;
+ 
+ static struct event_constraint *
+ tfa_get_event_constraints(struct cpu_hw_events *cpuc, int idx,
+ 			  struct perf_event *event)
+ {
+ 	struct event_constraint *c = hsw_get_event_constraints(cpuc, idx, event);
+ 
+ 	/*
+ 	 * Without TFA we must not use PMC3.
+ 	 */
+ 	if (!allow_tsx_force_abort && test_bit(3, c->idxmsk) && idx >= 0) {
+ 		c = dyn_constraint(cpuc, c, idx);
+ 		c->idxmsk64 &= ~(1ULL << 3);
+ 		c->weight--;
+ 	}
+ 
+ 	return c;
+ }
+ 
++>>>>>>> ede271b05946 (perf/x86/intel: Fix memory corruption)
  /*
   * Broadwell:
   *
* Unmerged path arch/x86/events/intel/core.c
