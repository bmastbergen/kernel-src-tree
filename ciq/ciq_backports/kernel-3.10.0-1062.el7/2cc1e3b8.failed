IB/uverbs: Replace file->ucontext with file in uverbs_cmd.c

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jason Gunthorpe <jgg@mellanox.com>
commit 2cc1e3b80942a7de7dce81f8a86c27a4ba3a695e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/2cc1e3b8.failed

The ucontext isn't needed any more, just pass the uverbs_file directly.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit 2cc1e3b80942a7de7dce81f8a86c27a4ba3a695e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_cmd.c
#	include/rdma/uverbs_std_types.h
diff --cc drivers/infiniband/core/uverbs_cmd.c
index bb6b556a3d12,ed61bd5b9c2b..000000000000
--- a/drivers/infiniband/core/uverbs_cmd.c
+++ b/drivers/infiniband/core/uverbs_cmd.c
@@@ -3574,15 -3532,13 +3566,22 @@@ int ib_uverbs_ex_create_flow(struct ib_
  	flow_attr->flags = kern_flow_attr->flags;
  	flow_attr->size = sizeof(*flow_attr);
  
 -	kern_spec = kern_flow_attr + 1;
 +	kern_spec = kern_flow_attr->flow_specs;
  	ib_spec = flow_attr + 1;
  	for (i = 0; i < flow_attr->num_of_specs &&
++<<<<<<< HEAD
 +			cmd.flow_attr.size >= sizeof(*kern_spec) &&
 +			cmd.flow_attr.size >= kern_spec->size;
 +	     i++) {
 +		err = kern_spec_to_ib_spec(
 +				file->ucontext, (struct ib_uverbs_flow_spec *)kern_spec,
 +				ib_spec, uflow_res);
++=======
+ 	     cmd.flow_attr.size > offsetof(struct ib_uverbs_flow_spec, reserved) &&
+ 	     cmd.flow_attr.size >=
+ 	     ((struct ib_uverbs_flow_spec *)kern_spec)->size; i++) {
+ 		err = kern_spec_to_ib_spec(file, kern_spec, ib_spec, uflow_res);
++>>>>>>> 2cc1e3b80942 (IB/uverbs: Replace file->ucontext with file in uverbs_cmd.c)
  		if (err)
  			goto err_free;
  
diff --cc include/rdma/uverbs_std_types.h
index 6e389a6b0382,3e3f108f0912..000000000000
--- a/include/rdma/uverbs_std_types.h
+++ b/include/rdma/uverbs_std_types.h
@@@ -56,20 -56,24 +56,41 @@@ static inline struct ib_uobject *__uobj
  
  #define uobj_get_type(_object) UVERBS_OBJECT(_object).type_attrs
  
++<<<<<<< HEAD
 +#define uobj_get_read(_type, _id, _ucontext)				\
 +	 __uobj_get(uobj_get_type(_type), false, _ucontext, _id)
 +
 +#define uobj_get_obj_read(_object, _type, _id, _ucontext)		\
 +({									\
 +	struct ib_uobject *__uobj =					\
 +		__uobj_get(uobj_get_type(_type),			\
 +			   false, _ucontext, _id);			\
 +									\
 +	(struct ib_##_object *)(IS_ERR(__uobj) ? NULL : __uobj->object);\
 +})
 +
 +#define uobj_get_write(_type, _id, _ucontext)				\
 +	 __uobj_get(uobj_get_type(_type), true, _ucontext, _id)
++=======
+ #define uobj_get_read(_type, _id, _ufile)                                      \
+ 	__uobj_get(uobj_get_type(_type), false, _ufile, _id)
+ 
+ static inline void *_uobj_get_obj_read(const struct uverbs_obj_type *type,
+ 				       int id, struct ib_uverbs_file *ufile)
+ {
+ 	struct ib_uobject *uobj = __uobj_get(type, false, ufile, id);
+ 
+ 	if (IS_ERR(uobj))
+ 		return NULL;
+ 	return uobj->object;
+ }
+ #define uobj_get_obj_read(_object, _type, _id, _ufile)                         \
+ 	((struct ib_##_object *)_uobj_get_obj_read(uobj_get_type(_type), _id,  \
+ 						   _ufile))
+ 
+ #define uobj_get_write(_type, _id, _ufile)                                     \
+ 	__uobj_get(uobj_get_type(_type), true, _ufile, _id)
++>>>>>>> 2cc1e3b80942 (IB/uverbs: Replace file->ucontext with file in uverbs_cmd.c)
  
  int __uobj_perform_destroy(const struct uverbs_obj_type *type, int id,
  			   struct ib_uverbs_file *ufile, int success_res);
@@@ -105,12 -109,12 +126,15 @@@ static inline void uobj_alloc_abort(str
  }
  
  static inline struct ib_uobject *__uobj_alloc(const struct uverbs_obj_type *type,
- 					      struct ib_ucontext *ucontext)
+ 					      struct ib_uverbs_file *ufile)
  {
++<<<<<<< HEAD
 +	return rdma_alloc_begin_uobject(type, ucontext);
++=======
+ 	return rdma_alloc_begin_uobject(type, ufile);
++>>>>>>> 2cc1e3b80942 (IB/uverbs: Replace file->ucontext with file in uverbs_cmd.c)
  }
  
- #define uobj_alloc(_type, ucontext)	\
- 	__uobj_alloc(uobj_get_type(_type), ucontext)
+ #define uobj_alloc(_type, _ufile) __uobj_alloc(uobj_get_type(_type), _ufile)
  
  #endif
 -
* Unmerged path drivers/infiniband/core/uverbs_cmd.c
* Unmerged path include/rdma/uverbs_std_types.h
