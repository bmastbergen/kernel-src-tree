nvmet: add commands supported and effects log page

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
commit 0866bf0c3778661e65f68a5c93df8e0a1e9e43cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0866bf0c.failed

This patch adds support for Commands Supported and Effects log page
(Log Identifier 05h) for NVMeOF. This also makes it easier to find
which commands are supported, e.g. :-

subnqn    : testnqn1
Admin Command Set
ACS2     [Get Log Page                    ] 00000001
ACS6     [Identify                        ] 00000001
ACS8     [Abort                           ] 00000001
ACS9     [Set Features                    ] 00000001
ACS10    [Get Features                    ] 00000001
ACS12    [Asynchronous Event Request      ] 00000001
ACS24    [Keep Alive                      ] 00000001

NVM Command Set
IOCS0    [Flush                           ] 00000001
IOCS1    [Write                           ] 00000001
IOCS2    [Read                            ] 00000001
IOCS8    [Write Zeroes                    ] 00000001
IOCS9    [Dataset Management              ] 00000001

This partticular functionality can be used from the host side to examine
the NVMeOF ctrl commands supported.

	Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 0866bf0c3778661e65f68a5c93df8e0a1e9e43cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/admin-cmd.c
diff --cc drivers/nvme/target/admin-cmd.c
index c30f0af04aed,e2c6f8b39388..000000000000
--- a/drivers/nvme/target/admin-cmd.c
+++ b/drivers/nvme/target/admin-cmd.c
@@@ -118,13 -128,58 +118,47 @@@ out
  	nvmet_req_complete(req, status);
  }
  
++<<<<<<< HEAD
 +static void copy_and_pad(char *dst, int dst_len, const char *src, int src_len)
++=======
+ static void nvmet_execute_get_log_cmd_effects_ns(struct nvmet_req *req)
+ {
+ 	u16 status = NVME_SC_INTERNAL;
+ 	struct nvme_effects_log *log;
+ 
+ 	log = kzalloc(sizeof(*log), GFP_KERNEL);
+ 	if (!log)
+ 		goto out;
+ 
+ 	log->acs[nvme_admin_get_log_page]	= cpu_to_le32(1 << 0);
+ 	log->acs[nvme_admin_identify]		= cpu_to_le32(1 << 0);
+ 	log->acs[nvme_admin_abort_cmd]		= cpu_to_le32(1 << 0);
+ 	log->acs[nvme_admin_set_features]	= cpu_to_le32(1 << 0);
+ 	log->acs[nvme_admin_get_features]	= cpu_to_le32(1 << 0);
+ 	log->acs[nvme_admin_async_event]	= cpu_to_le32(1 << 0);
+ 	log->acs[nvme_admin_keep_alive]		= cpu_to_le32(1 << 0);
+ 
+ 	log->iocs[nvme_cmd_read]		= cpu_to_le32(1 << 0);
+ 	log->iocs[nvme_cmd_write]		= cpu_to_le32(1 << 0);
+ 	log->iocs[nvme_cmd_flush]		= cpu_to_le32(1 << 0);
+ 	log->iocs[nvme_cmd_dsm]			= cpu_to_le32(1 << 0);
+ 	log->iocs[nvme_cmd_write_zeroes]	= cpu_to_le32(1 << 0);
+ 
+ 	status = nvmet_copy_to_sgl(req, 0, log, sizeof(*log));
+ 
+ 	kfree(log);
+ out:
+ 	nvmet_req_complete(req, status);
+ }
+ 
+ static void nvmet_execute_get_log_changed_ns(struct nvmet_req *req)
++>>>>>>> 0866bf0c3778 (nvmet: add commands supported and effects log page)
  {
 -	struct nvmet_ctrl *ctrl = req->sq->ctrl;
 -	u16 status = NVME_SC_INTERNAL;
 -	size_t len;
 -
 -	if (req->data_len != NVME_MAX_CHANGED_NAMESPACES * sizeof(__le32))
 -		goto out;
 +	int len = min(src_len, dst_len);
  
 -	mutex_lock(&ctrl->lock);
 -	if (ctrl->nr_changed_ns == U32_MAX)
 -		len = sizeof(__le32);
 -	else
 -		len = ctrl->nr_changed_ns * sizeof(__le32);
 -	status = nvmet_copy_to_sgl(req, 0, ctrl->changed_ns_list, len);
 -	if (!status)
 -		status = nvmet_zero_sgl(req, len, req->data_len - len);
 -	ctrl->nr_changed_ns = 0;
 -	clear_bit(NVME_AEN_CFG_NS_ATTR, &ctrl->aen_masked);
 -	mutex_unlock(&ctrl->lock);
 -out:
 -	nvmet_req_complete(req, status);
 +	memcpy(dst, src, len);
 +	if (dst_len > len)
 +		memset(dst + len, ' ', dst_len - len);
  }
  
  static void nvmet_execute_identify_ctrl(struct nvmet_req *req)
@@@ -545,6 -613,12 +579,15 @@@ u16 nvmet_parse_admin_cmd(struct nvmet_
  			 */
  			req->execute = nvmet_execute_get_log_page_noop;
  			return 0;
++<<<<<<< HEAD
++=======
+ 		case NVME_LOG_CHANGED_NS:
+ 			req->execute = nvmet_execute_get_log_changed_ns;
+ 			return 0;
+ 		case NVME_LOG_CMD_EFFECTS:
+ 			req->execute = nvmet_execute_get_log_cmd_effects_ns;
+ 			return 0;
++>>>>>>> 0866bf0c3778 (nvmet: add commands supported and effects log page)
  		}
  		break;
  	case nvme_admin_identify:
* Unmerged path drivers/nvme/target/admin-cmd.c
