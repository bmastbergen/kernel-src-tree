nfp: flower: add infastructure for non-repr priv data

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author John Hurley <john.hurley@netronome.com>
commit 05d2bee6bd76164f7d81f3fde83f7461d0ff12af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/05d2bee6.failed

NFP repr netdevs contain private data that can store per port information.
In certain cases, the NFP driver offloads information from non-repr ports
(e.g. tunnel ports). As the driver does not have control over non-repr
netdevs, it cannot add/track private data directly to the netdev struct.

Add infastructure to store private information on any non-repr netdev that
is offloaded at a given time. This is used in a following patch to track
offloaded MAC addresses for non-reprs and enable correct house keeping on
address changes.

	Signed-off-by: John Hurley <john.hurley@netronome.com>
	Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 05d2bee6bd76164f7d81f3fde83f7461d0ff12af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/flower/main.c
#	drivers/net/ethernet/netronome/nfp/flower/main.h
diff --cc drivers/net/ethernet/netronome/nfp/flower/main.c
index 171014032993,837ef0c72f5c..000000000000
--- a/drivers/net/ethernet/netronome/nfp/flower/main.c
+++ b/drivers/net/ethernet/netronome/nfp/flower/main.c
@@@ -586,6 -639,9 +651,12 @@@ static int nfp_flower_init(struct nfp_a
  		goto err_cleanup_metadata;
  	}
  
++<<<<<<< HEAD
++=======
+ 	INIT_LIST_HEAD(&app_priv->indr_block_cb_priv);
+ 	INIT_LIST_HEAD(&app_priv->non_repr_priv);
+ 
++>>>>>>> 05d2bee6bd76 (nfp: flower: add infastructure for non-repr priv data)
  	return 0;
  
  err_cleanup_metadata:
diff --cc drivers/net/ethernet/netronome/nfp/flower/main.h
index 90cc96d4eae4,2ce898bfc5be..000000000000
--- a/drivers/net/ethernet/netronome/nfp/flower/main.h
+++ b/drivers/net/ethernet/netronome/nfp/flower/main.h
@@@ -163,6 -144,10 +163,13 @@@ struct nfp_fl_lag 
   * @reify_wait_queue:	wait queue for repr reify response counting
   * @mtu_conf:		Configuration of repr MTU value
   * @nfp_lag:		Link aggregation data block
++<<<<<<< HEAD
++=======
+  * @indr_block_cb_priv:	List of priv data passed to indirect block cbs
+  * @non_repr_priv:	List of offloaded non-repr ports and their priv data
+  * @active_mem_unit:	Current active memory unit for flower rules
+  * @total_mem_units:	Total number of available memory units for flower rules
++>>>>>>> 05d2bee6bd76 (nfp: flower: add infastructure for non-repr priv data)
   */
  struct nfp_flower_priv {
  	struct nfp_app *app;
@@@ -193,6 -170,10 +200,13 @@@
  	wait_queue_head_t reify_wait_queue;
  	struct nfp_mtu_conf mtu_conf;
  	struct nfp_fl_lag nfp_lag;
++<<<<<<< HEAD
++=======
+ 	struct list_head indr_block_cb_priv;
+ 	struct list_head non_repr_priv;
+ 	unsigned int active_mem_unit;
+ 	unsigned int total_mem_units;
++>>>>>>> 05d2bee6bd76 (nfp: flower: add infastructure for non-repr priv data)
  };
  
  /**
@@@ -293,6 -283,25 +319,14 @@@ int nfp_flower_setup_tc_egress_cb(enum 
  void nfp_flower_lag_init(struct nfp_fl_lag *lag);
  void nfp_flower_lag_cleanup(struct nfp_fl_lag *lag);
  int nfp_flower_lag_reset(struct nfp_fl_lag *lag);
 -int nfp_flower_lag_netdev_event(struct nfp_flower_priv *priv,
 -				struct net_device *netdev,
 -				unsigned long event, void *ptr);
  bool nfp_flower_lag_unprocessed_msg(struct nfp_app *app, struct sk_buff *skb);
 -int nfp_flower_lag_populate_pre_action(struct nfp_app *app,
 -				       struct net_device *master,
 -				       struct nfp_fl_pre_lag *pre_act);
 -int nfp_flower_lag_get_output_id(struct nfp_app *app,
 -				 struct net_device *master);
 -int nfp_flower_reg_indir_block_handler(struct nfp_app *app,
 -				       struct net_device *netdev,
 -				       unsigned long event);
  
+ void
+ __nfp_flower_non_repr_priv_get(struct nfp_flower_non_repr_priv *non_repr_priv);
+ struct nfp_flower_non_repr_priv *
+ nfp_flower_non_repr_priv_get(struct nfp_app *app, struct net_device *netdev);
+ void
+ __nfp_flower_non_repr_priv_put(struct nfp_flower_non_repr_priv *non_repr_priv);
+ void
+ nfp_flower_non_repr_priv_put(struct nfp_app *app, struct net_device *netdev);
  #endif
* Unmerged path drivers/net/ethernet/netronome/nfp/flower/main.c
* Unmerged path drivers/net/ethernet/netronome/nfp/flower/main.h
