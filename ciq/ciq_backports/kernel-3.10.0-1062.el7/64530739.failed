ixgbe: add initial support for xdp redirect

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author John Fastabend <john.fastabend@gmail.com>
commit 6453073987ba392510ab6c8b657844a9312c67f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/64530739.failed

There are optimizations we can add after the basic feature is
enabled. But, for now keep the patch simple.

	Signed-off-by: John Fastabend <john.fastabend@gmail.com>
	Acked-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6453073987ba392510ab6c8b657844a9312c67f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index 3497b22f2764,3db04736a048..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@@ -2250,8 -2231,16 +2250,15 @@@ static struct sk_buff *ixgbe_run_xdp(st
  	case XDP_TX:
  		result = ixgbe_xmit_xdp_ring(adapter, xdp);
  		break;
+ 	case XDP_REDIRECT:
+ 		err = xdp_do_redirect(adapter->netdev, xdp);
+ 		if (!err)
+ 			result = IXGBE_XDP_TX;
+ 		else
+ 			result = IXGBE_XDP_CONSUMED;
+ 		break;
  	default:
  		bpf_warn_invalid_xdp_action(act);
 -		/* fallthrough */
  	case XDP_ABORTED:
  		trace_xdp_exception(rx_ring->netdev, xdp_prog, act);
  		/* fallthrough -- handle aborts by dropping packet */
@@@ -9933,8 -9830,38 +9940,39 @@@ static int ixgbe_xdp(struct net_device 
  	}
  }
  
+ static int ixgbe_xdp_xmit(struct net_device *dev, struct xdp_buff *xdp)
+ {
+ 	struct ixgbe_adapter *adapter = netdev_priv(dev);
+ 	struct ixgbe_ring *ring;
+ 	int err;
+ 
+ 	if (unlikely(test_bit(__IXGBE_DOWN, &adapter->state)))
+ 		return -EINVAL;
+ 
+ 	/* During program transitions its possible adapter->xdp_prog is assigned
+ 	 * but ring has not been configured yet. In this case simply abort xmit.
+ 	 */
+ 	ring = adapter->xdp_prog ? adapter->xdp_ring[smp_processor_id()] : NULL;
+ 	if (unlikely(!ring))
+ 		return -EINVAL;
+ 
+ 	err = ixgbe_xmit_xdp_ring(adapter, xdp);
+ 	if (err != IXGBE_XDP_TX)
+ 		return -ENOMEM;
+ 
+ 	/* Force memory writes to complete before letting h/w know there
+ 	 * are new descriptors to fetch.
+ 	 */
+ 	wmb();
+ 
+ 	ring = adapter->xdp_ring[smp_processor_id()];
+ 	writel(ring->next_to_use, ring->tail);
+ 
+ 	return 0;
+ }
+ 
  static const struct net_device_ops ixgbe_netdev_ops = {
 +	.ndo_size		= sizeof(struct net_device_ops),
  	.ndo_open		= ixgbe_open,
  	.ndo_stop		= ixgbe_close,
  	.ndo_start_xmit		= ixgbe_xmit_frame,
@@@ -9974,12 -9901,13 +10012,17 @@@
  	.ndo_fdb_add		= ixgbe_ndo_fdb_add,
  	.ndo_bridge_setlink	= ixgbe_ndo_bridge_setlink,
  	.ndo_bridge_getlink	= ixgbe_ndo_bridge_getlink,
 -	.ndo_dfwd_add_station	= ixgbe_fwd_add,
 -	.ndo_dfwd_del_station	= ixgbe_fwd_del,
 -	.ndo_udp_tunnel_add	= ixgbe_add_udp_tunnel_port,
 -	.ndo_udp_tunnel_del	= ixgbe_del_udp_tunnel_port,
 +	.extended.ndo_udp_tunnel_add	= ixgbe_add_udp_tunnel_port,
 +	.extended.ndo_udp_tunnel_del	= ixgbe_del_udp_tunnel_port,
  	.ndo_features_check	= ixgbe_features_check,
++<<<<<<< HEAD
 +	.extended.ndo_dfwd_add_station	= ixgbe_fwd_add,
 +	.extended.ndo_dfwd_del_station	= ixgbe_fwd_del,
 +	.extended.ndo_bpf	= ixgbe_xdp,
++=======
+ 	.ndo_xdp		= ixgbe_xdp,
+ 	.ndo_xdp_xmit		= ixgbe_xdp_xmit,
++>>>>>>> 6453073987ba (ixgbe: add initial support for xdp redirect)
  };
  
  /**
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
