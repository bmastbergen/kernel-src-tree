drm/amdgpu: fix invalid use of change_bit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Christian König <christian.koenig@amd.com>
commit 72464382fc2d3673eb51f21a57f2c0a320c1552f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/72464382.failed

We only need to clear the bit in a 32bit integer.

This fixes a crah on ARM64 and PPC64LE caused by
"drm/amdgpu: update the vm invalidation engine layout V2"

	Signed-off-by: Christian König <christian.koenig@amd.com>
	Acked-by: Alex Deucher <alexander.deucher@amd.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 72464382fc2d3673eb51f21a57f2c0a320c1552f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
diff --cc drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
index e687363900bb,2fe8397241ea..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
@@@ -643,6 -699,58 +643,61 @@@ static int gmc_v9_0_ecc_available(struc
  	return lost_sheep == 0;
  }
  
++<<<<<<< HEAD
++=======
+ static bool gmc_v9_0_keep_stolen_memory(struct amdgpu_device *adev)
+ {
+ 
+ 	/*
+ 	 * TODO:
+ 	 * Currently there is a bug where some memory client outside
+ 	 * of the driver writes to first 8M of VRAM on S3 resume,
+ 	 * this overrides GART which by default gets placed in first 8M and
+ 	 * causes VM_FAULTS once GTT is accessed.
+ 	 * Keep the stolen memory reservation until the while this is not solved.
+ 	 * Also check code in gmc_v9_0_get_vbios_fb_size and gmc_v9_0_late_init
+ 	 */
+ 	switch (adev->asic_type) {
+ 	case CHIP_VEGA10:
+ 		return true;
+ 	case CHIP_RAVEN:
+ 	case CHIP_VEGA12:
+ 	case CHIP_VEGA20:
+ 	default:
+ 		return false;
+ 	}
+ }
+ 
+ static int gmc_v9_0_allocate_vm_inv_eng(struct amdgpu_device *adev)
+ {
+ 	struct amdgpu_ring *ring;
+ 	unsigned vm_inv_engs[AMDGPU_MAX_VMHUBS] =
+ 		{GFXHUB_FREE_VM_INV_ENGS_BITMAP, MMHUB_FREE_VM_INV_ENGS_BITMAP};
+ 	unsigned i;
+ 	unsigned vmhub, inv_eng;
+ 
+ 	for (i = 0; i < adev->num_rings; ++i) {
+ 		ring = adev->rings[i];
+ 		vmhub = ring->funcs->vmhub;
+ 
+ 		inv_eng = ffs(vm_inv_engs[vmhub]);
+ 		if (!inv_eng) {
+ 			dev_err(adev->dev, "no VM inv eng for ring %s\n",
+ 				ring->name);
+ 			return -EINVAL;
+ 		}
+ 
+ 		ring->vm_inv_eng = inv_eng - 1;
+ 		vm_inv_engs[vmhub] &= ~(1 << ring->vm_inv_eng);
+ 
+ 		dev_info(adev->dev, "ring %s uses VM inv eng %u on hub %u\n",
+ 			 ring->name, ring->vm_inv_eng, ring->funcs->vmhub);
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 72464382fc2d (drm/amdgpu: fix invalid use of change_bit)
  static int gmc_v9_0_late_init(void *handle)
  {
  	struct amdgpu_device *adev = (struct amdgpu_device *)handle;
* Unmerged path drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
