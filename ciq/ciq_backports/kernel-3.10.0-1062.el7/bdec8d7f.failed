x86/boot: Fix kexec booting failure in the SEV bit detection code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [x86] boot: Fix kexec booting failure in the SEV bit detection code (Kairui Song) [1628828]
Rebuild_FUZZ: 96.83%
commit-author Kairui Song <kasong@redhat.com>
commit bdec8d7fa55e6f5314ed72e5a0b435d90ff90548
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/bdec8d7f.failed

Commit

  1958b5fc4010 ("x86/boot: Add early boot support when running with SEV active")

can occasionally cause system resets when kexec-ing a second kernel even
if SEV is not active.

That's because get_sev_encryption_bit() uses 32-bit rIP-relative
addressing to read the value of enc_bit - a variable which caches a
previously detected encryption bit position - but kexec may allocate
the early boot code to a higher location, beyond the 32-bit addressing
limit.

In this case, garbage will be read and get_sev_encryption_bit() will
return the wrong value, leading to accessing memory with the wrong
encryption setting.

Therefore, remove enc_bit, and thus get rid of the need to do 32-bit
rIP-relative addressing in the first place.

 [ bp: massage commit message heavily. ]

Fixes: 1958b5fc4010 ("x86/boot: Add early boot support when running with SEV active")
	Suggested-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Kairui Song <kasong@redhat.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Tom Lendacky <thomas.lendacky@amd.com>
	Cc: linux-kernel@vger.kernel.org
	Cc: tglx@linutronix.de
	Cc: mingo@redhat.com
	Cc: hpa@zytor.com
	Cc: brijesh.singh@amd.com
	Cc: kexec@lists.infradead.org
	Cc: dyoung@redhat.com
	Cc: bhe@redhat.com
	Cc: ghook@redhat.com
Link: https://lkml.kernel.org/r/20180927123845.32052-1-kasong@redhat.com
(cherry picked from commit bdec8d7fa55e6f5314ed72e5a0b435d90ff90548)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/mem_encrypt.S
diff --cc arch/x86/boot/compressed/mem_encrypt.S
index 54f5f6625a73,a480356e0ed8..000000000000
--- a/arch/x86/boot/compressed/mem_encrypt.S
+++ b/arch/x86/boot/compressed/mem_encrypt.S
@@@ -112,9 -91,14 +95,18 @@@ ENTRY(get_sev_encryption_mask
  	pop	%rbp
  #endif
  
 -	xor	%rax, %rax
  	ret
 -ENDPROC(set_sev_encryption_mask)
 +ENDPROC(get_sev_encryption_mask)
  
  	.data
++<<<<<<< HEAD
 +enc_bit:
 +	.int	0xffffffff
++=======
+ 
+ #ifdef CONFIG_AMD_MEM_ENCRYPT
+ 	.balign	8
+ GLOBAL(sme_me_mask)
+ 	.quad	0
+ #endif
++>>>>>>> bdec8d7fa55e (x86/boot: Fix kexec booting failure in the SEV bit detection code)
* Unmerged path arch/x86/boot/compressed/mem_encrypt.S
