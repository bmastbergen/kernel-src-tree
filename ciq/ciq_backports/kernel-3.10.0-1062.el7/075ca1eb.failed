perf tools: Make the tool's warning messages optional

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 075ca1ebb25e798e4072a1e3a482b829bb51afb2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/075ca1eb.failed

I want to display the pure events status coming in the next patch and
the tool's warnings are superfluous in the output. Making it optional,
enabled by default.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180107160356.28203-11-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 075ca1ebb25e798e4072a1e3a482b829bb51afb2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/tool.h
diff --cc tools/perf/util/tool.h
index e20e9b931ba6,183c91453522..000000000000
--- a/tools/perf/util/tool.h
+++ b/tools/perf/util/tool.h
@@@ -73,6 -75,8 +73,11 @@@ struct perf_tool 
  	event_op3	auxtrace;
  	bool		ordered_events;
  	bool		ordering_requires_timestamps;
++<<<<<<< HEAD
++=======
+ 	bool		namespace_events;
+ 	bool		no_warn;
++>>>>>>> 075ca1ebb25e (perf tools: Make the tool's warning messages optional)
  	enum show_feature_header show_feat_hdr;
  };
  
diff --git a/tools/perf/util/session.c b/tools/perf/util/session.c
index 5c2eb1a9b34c..3b3d93d1723e 100644
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@ -1761,7 +1761,8 @@ done:
 	err = perf_session__flush_thread_stacks(session);
 out_err:
 	free(buf);
-	perf_session__warn_about_errors(session);
+	if (!tool->no_warn)
+		perf_session__warn_about_errors(session);
 	ordered_events__free(&session->ordered_events);
 	auxtrace__free_events(session);
 	return err;
@@ -1917,7 +1918,8 @@ out:
 	err = perf_session__flush_thread_stacks(session);
 out_err:
 	ui_progress__finish();
-	perf_session__warn_about_errors(session);
+	if (!tool->no_warn)
+		perf_session__warn_about_errors(session);
 	/*
 	 * We may switching perf.data output, make ordered_events
 	 * reusable.
* Unmerged path tools/perf/util/tool.h
