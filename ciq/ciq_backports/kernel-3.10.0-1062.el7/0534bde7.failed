s390/pkey: Define protected key blob format

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [s390] pkey: Define protected key blob format (Hendrik Brueckner) [1641030]
Rebuild_FUZZ: 93.83%
commit-author Ingo Franzki <ifranzki@linux.ibm.com>
commit 0534bde7de19a2e66c2b2bf05fcfd00a7cc849fa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0534bde7.failed

Define a new protected key blob format. Protected key
blobs use a type of 0x00, to be distinguished from other
CCA key blobs. CCA defines type 0x00 as NULL key blob,
but pkey will never use NULL keys anyway, so it is save
to reuse this type. Using another so far undefined type
value would introduce the risk that sometimes in the
future CCA defines this so far unassigned type for a
future key blob.

Also add defines for the key token types and versions,
and use them instead of hard coded hex values.

	Signed-off-by: Ingo Franzki <ifranzki@linux.ibm.com>
	Reviewed-by: Harald Freudenberger <freude@linux.ibm.com>
	Reviewed-by: Hendrik Brueckner <brueckner@linux.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 0534bde7de19a2e66c2b2bf05fcfd00a7cc849fa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/pkey_api.c
diff --cc drivers/s390/crypto/pkey_api.c
index ba897717fd7b,fa1044f93f0e..000000000000
--- a/drivers/s390/crypto/pkey_api.c
+++ b/drivers/s390/crypto/pkey_api.c
@@@ -85,16 -102,16 +106,26 @@@ static int check_secaeskeytoken(const u
  {
  	struct secaeskeytoken *t = (struct secaeskeytoken *) token;
  
- 	if (t->type != 0x01) {
+ 	if (t->type != TOKTYPE_CCA_INTERNAL) {
  		DEBUG_ERR(
++<<<<<<< HEAD
 +			"check_secaeskeytoken secure token check failed, type mismatch 0x%02x != 0x01\n",
 +			(int) t->type);
++=======
+ 			"%s secure token check failed, type mismatch 0x%02x != 0x%02x\n",
+ 			__func__, (int) t->type, TOKTYPE_CCA_INTERNAL);
++>>>>>>> 0534bde7de19 (s390/pkey: Define protected key blob format)
  		return -EINVAL;
  	}
- 	if (t->version != 0x04) {
+ 	if (t->version != TOKVER_CCA_AES) {
  		DEBUG_ERR(
++<<<<<<< HEAD
 +			"check_secaeskeytoken secure token check failed, version mismatch 0x%02x != 0x04\n",
 +			(int) t->version);
++=======
+ 			"%s secure token check failed, version mismatch 0x%02x != 0x%02x\n",
+ 			__func__, (int) t->version, TOKVER_CCA_AES);
++>>>>>>> 0534bde7de19 (s390/pkey: Define protected key blob format)
  		return -EINVAL;
  	}
  	if (keybitsize > 0 && t->bitsize != keybitsize) {
* Unmerged path drivers/s390/crypto/pkey_api.c
