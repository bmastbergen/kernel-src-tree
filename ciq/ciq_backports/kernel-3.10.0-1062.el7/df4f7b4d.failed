perf stat: Move 'unit_width' to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit df4f7b4d4b1e61e6b16ac2e3760be46bac86e4f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/df4f7b4d.failed

Move the static 'unit_width' variable to 'struct perf_stat_config',
so it can be passed around and used outside the 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-24-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit df4f7b4d4b1e61e6b16ac2e3760be46bac86e4f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
diff --cc tools/perf/builtin-stat.c
index a3a835604d08,24171aa6c41f..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -163,9 -161,7 +163,8 @@@ static bool			group				= false
  static const char		*pre_cmd			= NULL;
  static const char		*post_cmd			= NULL;
  static bool			sync_run			= false;
- static unsigned int		unit_width			= 4; /* strlen("unit") */
  static bool			forever				= false;
 +static bool			metric_only			= false;
  static bool			force_metric_only		= false;
  static bool			no_merge			= false;
  static bool			walltime_run_table		= false;
@@@ -1088,13 -963,13 +1088,18 @@@ static void abs_printout(int id, int nr
  
  	if (evsel->unit)
  		fprintf(output, "%-*s%s",
++<<<<<<< HEAD
 +			csv_output ? 0 : unit_width,
 +			evsel->unit, csv_sep);
++=======
+ 			config->csv_output ? 0 : config->unit_width,
+ 			evsel->unit, config->csv_sep);
++>>>>>>> df4f7b4d4b1e (perf stat: Move 'unit_width' to 'struct perf_stat_config')
  
 -	fprintf(output, "%-*s", config->csv_output ? 0 : 25, perf_evsel__name(evsel));
 +	fprintf(output, "%-*s", csv_output ? 0 : 25, perf_evsel__name(evsel));
  
  	if (evsel->cgrp)
 -		fprintf(output, "%s%s", config->csv_sep, evsel->cgrp->name);
 +		fprintf(output, "%s%s", csv_sep, evsel->cgrp->name);
  }
  
  static bool is_mixed_hw_group(struct perf_evsel *counter)
@@@ -1178,12 -1055,12 +1183,18 @@@ static void printout(int id, int nr, st
  				print_mixed_hw_group_error = 1;
  		}
  
++<<<<<<< HEAD
 +		fprintf(stat_config.output, "%-*s%s",
 +			csv_output ? 0 : unit_width,
 +			counter->unit, csv_sep);
++=======
+ 		fprintf(config->output, "%-*s%s",
+ 			config->csv_output ? 0 : config->unit_width,
+ 			counter->unit, config->csv_sep);
++>>>>>>> df4f7b4d4b1e (perf stat: Move 'unit_width' to 'struct perf_stat_config')
  
 -		fprintf(config->output, "%*s",
 -			config->csv_output ? 0 : -25,
 +		fprintf(stat_config.output, "%*s",
 +			csv_output ? 0 : -25,
  			perf_evsel__name(counter));
  
  		if (counter->cgrp)
@@@ -1583,26 -1529,30 +1594,32 @@@ static void print_metric_headers(const 
  		out.new_line = new_line_metric;
  		out.force_header = true;
  		os.evsel = counter;
 -		perf_stat__print_shadow_stats(config, counter, 0,
 +		perf_stat__print_shadow_stats(counter, 0,
  					      0,
  					      &out,
 -					      &metric_events,
 -					      &rt_stat);
 +					      &metric_events);
  	}
 -	fputc('\n', config->output);
 +	fputc('\n', stat_config.output);
  }
  
 -static void print_interval(struct perf_stat_config *config,
 -			   char *prefix, struct timespec *ts)
 +static void print_interval(char *prefix, struct timespec *ts)
  {
++<<<<<<< HEAD
 +	FILE *output = stat_config.output;
++=======
+ 	bool metric_only = config->metric_only;
+ 	unsigned int unit_width = config->unit_width;
+ 	FILE *output = config->output;
++>>>>>>> df4f7b4d4b1e (perf stat: Move 'unit_width' to 'struct perf_stat_config')
  	static int num_print_interval;
  
 -	if (config->interval_clear)
 +	if (interval_clear)
  		puts(CONSOLE_CLEAR);
  
 -	sprintf(prefix, "%6lu.%09lu%s", ts->tv_sec, ts->tv_nsec, config->csv_sep);
 +	sprintf(prefix, "%6lu.%09lu%s", ts->tv_sec, ts->tv_nsec, csv_sep);
  
 -	if ((num_print_interval == 0 && !config->csv_output) || config->interval_clear) {
 -		switch (config->aggr_mode) {
 +	if ((num_print_interval == 0 && !csv_output) || interval_clear) {
 +		switch (stat_config.aggr_mode) {
  		case AGGR_SOCKET:
  			fprintf(output, "#           time socket cpus");
  			if (!metric_only)
* Unmerged path tools/perf/builtin-stat.c
diff --git a/tools/perf/util/stat.h b/tools/perf/util/stat.h
index 4b88aef959fb..5a9922a732de 100644
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@ -93,6 +93,7 @@ struct perf_stat_config {
 	unsigned int		 interval;
 	unsigned int		 timeout;
 	unsigned int		 initial_delay;
+	unsigned int		 unit_width;
 	int			 times;
 	struct runtime_stat	*stats;
 	int			 stats_num;
