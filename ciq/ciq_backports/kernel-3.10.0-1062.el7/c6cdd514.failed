fuse: fix READDIRPLUS skipping an entry

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit c6cdd51404b7ac12dd95173ddfc548c59ecf037f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c6cdd514.failed

Marios Titas running a Haskell program noticed a problem with fuse's
readdirplus: when it is interrupted by a signal, it skips one directory
entry.

The reason is that fuse erronously updates ctx->pos after a failed
dir_emit().

The issue originates from the patch adding readdirplus support.

	Reported-by: Jakob Unterwurzacher <jakobunt@gmail.com>
	Tested-by: Marios Titas <redneb@gmx.com> 
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
Fixes: 0b05b18381ee ("fuse: implement NFS-like readdirplus support")
	Cc: <stable@vger.kernel.org> # v3.9
(cherry picked from commit c6cdd51404b7ac12dd95173ddfc548c59ecf037f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/dir.c
diff --cc fs/fuse/dir.c
index 3e1c8cd01fea,24967382a7b1..000000000000
--- a/fs/fuse/dir.c
+++ b/fs/fuse/dir.c
@@@ -1394,10 -1306,10 +1394,17 @@@ static int parse_dirplusfile(char *buf
  			   we need to send a FORGET for each of those
  			   which we did not link.
  			*/
++<<<<<<< HEAD
 +			over = filldir(dstbuf, dirent->name, dirent->namelen,
 +				       file->f_pos, dirent->ino,
 +				       dirent->type);
 +			file->f_pos = dirent->off;
++=======
+ 			over = !dir_emit(ctx, dirent->name, dirent->namelen,
+ 				       dirent->ino, dirent->type);
+ 			if (!over)
+ 				ctx->pos = dirent->off;
++>>>>>>> c6cdd51404b7 (fuse: fix READDIRPLUS skipping an entry)
  		}
  
  		buf += reclen;
* Unmerged path fs/fuse/dir.c
