KVM/MMU: Combine flushing remote tlb in mmu_set_spte()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Tianyu Lan <Tianyu.Lan@microsoft.com>
commit c2a4eadf7747a1359a80ede64e4ae0e0ba64ca08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c2a4eadf.failed

mmu_set_spte() flushes remote tlbs for drop_parent_pte/drop_spte()
and set_spte() separately. This may introduce redundant flush. This
patch is to combine these flushes and check flush request after
calling set_spte().

	Signed-off-by: Lan Tianyu <Tianyu.Lan@microsoft.com>
	Reviewed-by: Junaid Shahid <junaids@google.com>
	Reviewed-by: Xiao Guangrong <xiaoguangrong@tencent.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit c2a4eadf7747a1359a80ede64e4ae0e0ba64ca08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu.c
diff --cc arch/x86/kvm/mmu.c
index db86a346eaea,8f216321d33b..000000000000
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@@ -2802,6 -2899,9 +2802,12 @@@ static void mmu_set_spte(struct kvm_vcp
  {
  	int was_rmapped = 0;
  	int rmap_count;
++<<<<<<< HEAD
++=======
+ 	int set_spte_ret;
+ 	int ret = RET_PF_RETRY;
+ 	bool flush = false;
++>>>>>>> c2a4eadf7747 (KVM/MMU: Combine flushing remote tlb in mmu_set_spte())
  
  	pgprintk("%s: spte %llx write_fault %d gfn %llx\n", __func__,
  		 *sptep, write_fault, gfn);
@@@ -2828,15 -2928,18 +2834,20 @@@
  			was_rmapped = 1;
  	}
  
 -	set_spte_ret = set_spte(vcpu, sptep, pte_access, level, gfn, pfn,
 -				speculative, true, host_writable);
 -	if (set_spte_ret & SET_SPTE_WRITE_PROTECTED_PT) {
 +	if (set_spte(vcpu, sptep, pte_access, level, gfn, pfn, speculative,
 +	      true, host_writable)) {
  		if (write_fault)
 -			ret = RET_PF_EMULATE;
 +			*emulate = 1;
  		kvm_make_request(KVM_REQ_TLB_FLUSH, vcpu);
  	}
++<<<<<<< HEAD
++=======
+ 	if (set_spte_ret & SET_SPTE_NEED_REMOTE_TLB_FLUSH || flush)
+ 		kvm_flush_remote_tlbs(vcpu->kvm);
++>>>>>>> c2a4eadf7747 (KVM/MMU: Combine flushing remote tlb in mmu_set_spte())
  
 -	if (unlikely(is_mmio_spte(*sptep)))
 -		ret = RET_PF_EMULATE;
 +	if (unlikely(is_mmio_spte(*sptep) && emulate))
 +		*emulate = 1;
  
  	pgprintk("%s: setting spte %llx\n", __func__, *sptep);
  	pgprintk("instantiating %s PTE (%s) at %llx (%llx) addr %p\n",
* Unmerged path arch/x86/kvm/mmu.c
