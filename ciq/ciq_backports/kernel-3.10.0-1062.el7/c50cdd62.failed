mfd: intel-lpss: Add default I2C device properties for Apollo Lake

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [mfd] intel-lpss: Add default I2C device properties for Apollo Lake (David Arcari) [1643267]
Rebuild_FUZZ: 96.06%
commit-author Jarkko Nikula <jarkko.nikula@linux.intel.com>
commit c50cdd62dda3f885c1e6ca8b3d5a0851c911ec54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c50cdd62.failed

Default I2C device properties for Intel Broxton, especially SDA hold time
may not be enough on Intel Apollo Lake. These properties are used in case
we don't get timing parameters from ACPI.

The default SDA hold time for Broxton may fail with arbitration lost errors
on Apollo Lake:

  i2c_designware i2c_designware.1: i2c_dw_handle_tx_abort: lost arbitration

Fix this by using different default device properties on Apollo Lake than
Broxton.

	Reported-by: Paul Liu <paul.liu@canonical.com>
Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=156181
	Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
	Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Signed-off-by: Lee Jones <lee.jones@linaro.org>
(cherry picked from commit c50cdd62dda3f885c1e6ca8b3d5a0851c911ec54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mfd/intel-lpss-acpi.c
#	drivers/mfd/intel-lpss-pci.c
diff --cc drivers/mfd/intel-lpss-acpi.c
index 3ff9e455b378,6bf8d643d942..000000000000
--- a/drivers/mfd/intel-lpss-acpi.c
+++ b/drivers/mfd/intel-lpss-acpi.c
@@@ -36,10 -36,46 +36,52 @@@ static const struct intel_lpss_platform
  	.properties = spt_i2c_properties,
  };
  
++<<<<<<< HEAD
++=======
+ static const struct intel_lpss_platform_info bxt_info = {
+ 	.clk_rate = 100000000,
+ };
+ 
+ static struct property_entry bxt_i2c_properties[] = {
+ 	PROPERTY_ENTRY_U32("i2c-sda-hold-time-ns", 42),
+ 	PROPERTY_ENTRY_U32("i2c-sda-falling-time-ns", 171),
+ 	PROPERTY_ENTRY_U32("i2c-scl-falling-time-ns", 208),
+ 	{ },
+ };
+ 
+ static const struct intel_lpss_platform_info bxt_i2c_info = {
+ 	.clk_rate = 133000000,
+ 	.properties = bxt_i2c_properties,
+ };
+ 
+ static struct property_entry apl_i2c_properties[] = {
+ 	PROPERTY_ENTRY_U32("i2c-sda-hold-time-ns", 207),
+ 	PROPERTY_ENTRY_U32("i2c-sda-falling-time-ns", 171),
+ 	PROPERTY_ENTRY_U32("i2c-scl-falling-time-ns", 208),
+ 	{ },
+ };
+ 
+ static const struct intel_lpss_platform_info apl_i2c_info = {
+ 	.clk_rate = 133000000,
+ 	.properties = apl_i2c_properties,
+ };
+ 
++>>>>>>> c50cdd62dda3 (mfd: intel-lpss: Add default I2C device properties for Apollo Lake)
  static const struct acpi_device_id intel_lpss_acpi_ids[] = {
  	/* SPT */
  	{ "INT3446", (kernel_ulong_t)&spt_i2c_info },
  	{ "INT3447", (kernel_ulong_t)&spt_i2c_info },
++<<<<<<< HEAD
++=======
+ 	/* BXT */
+ 	{ "80860AAC", (kernel_ulong_t)&bxt_i2c_info },
+ 	{ "80860ABC", (kernel_ulong_t)&bxt_info },
+ 	{ "80860AC2", (kernel_ulong_t)&bxt_info },
+ 	/* APL */
+ 	{ "80865AAC", (kernel_ulong_t)&apl_i2c_info },
+ 	{ "80865ABC", (kernel_ulong_t)&bxt_info },
+ 	{ "80865AC2", (kernel_ulong_t)&bxt_info },
++>>>>>>> c50cdd62dda3 (mfd: intel-lpss: Add default I2C device properties for Apollo Lake)
  	{ }
  };
  MODULE_DEVICE_TABLE(acpi, intel_lpss_acpi_ids);
diff --cc drivers/mfd/intel-lpss-pci.c
index 4ca2cef6de56,3228fd182a99..000000000000
--- a/drivers/mfd/intel-lpss-pci.c
+++ b/drivers/mfd/intel-lpss-pci.c
@@@ -100,6 -108,32 +100,35 @@@ static const struct intel_lpss_platform
  
  static const struct intel_lpss_platform_info bxt_i2c_info = {
  	.clk_rate = 133000000,
++<<<<<<< HEAD
++=======
+ 	.properties = bxt_i2c_properties,
+ };
+ 
+ static struct property_entry apl_i2c_properties[] = {
+ 	PROPERTY_ENTRY_U32("i2c-sda-hold-time-ns", 207),
+ 	PROPERTY_ENTRY_U32("i2c-sda-falling-time-ns", 171),
+ 	PROPERTY_ENTRY_U32("i2c-scl-falling-time-ns", 208),
+ 	{ },
+ };
+ 
+ static const struct intel_lpss_platform_info apl_i2c_info = {
+ 	.clk_rate = 133000000,
+ 	.properties = apl_i2c_properties,
+ };
+ 
+ static const struct intel_lpss_platform_info kbl_info = {
+ 	.clk_rate = 120000000,
+ };
+ 
+ static const struct intel_lpss_platform_info kbl_uart_info = {
+ 	.clk_rate = 120000000,
+ 	.clk_con_id = "baudclk",
+ };
+ 
+ static const struct intel_lpss_platform_info kbl_i2c_info = {
+ 	.clk_rate = 133000000,
++>>>>>>> c50cdd62dda3 (mfd: intel-lpss: Add default I2C device properties for Apollo Lake)
  };
  
  static const struct pci_device_id intel_lpss_pci_ids[] = {
@@@ -135,31 -169,16 +164,31 @@@
  	{ PCI_VDEVICE(INTEL, 0x1ac4), (kernel_ulong_t)&bxt_info },
  	{ PCI_VDEVICE(INTEL, 0x1ac6), (kernel_ulong_t)&bxt_info },
  	{ PCI_VDEVICE(INTEL, 0x1aee), (kernel_ulong_t)&bxt_uart_info },
 -
 +	/* GLK */
 +	{ PCI_VDEVICE(INTEL, 0x31ac), (kernel_ulong_t)&bxt_i2c_info },
 +	{ PCI_VDEVICE(INTEL, 0x31ae), (kernel_ulong_t)&bxt_i2c_info },
 +	{ PCI_VDEVICE(INTEL, 0x31b0), (kernel_ulong_t)&bxt_i2c_info },
 +	{ PCI_VDEVICE(INTEL, 0x31b2), (kernel_ulong_t)&bxt_i2c_info },
 +	{ PCI_VDEVICE(INTEL, 0x31b4), (kernel_ulong_t)&bxt_i2c_info },
 +	{ PCI_VDEVICE(INTEL, 0x31b6), (kernel_ulong_t)&bxt_i2c_info },
 +	{ PCI_VDEVICE(INTEL, 0x31b8), (kernel_ulong_t)&bxt_i2c_info },
 +	{ PCI_VDEVICE(INTEL, 0x31ba), (kernel_ulong_t)&bxt_i2c_info },
 +	{ PCI_VDEVICE(INTEL, 0x31bc), (kernel_ulong_t)&bxt_uart_info },
 +	{ PCI_VDEVICE(INTEL, 0x31be), (kernel_ulong_t)&bxt_uart_info },
 +	{ PCI_VDEVICE(INTEL, 0x31c0), (kernel_ulong_t)&bxt_uart_info },
 +	{ PCI_VDEVICE(INTEL, 0x31ee), (kernel_ulong_t)&bxt_uart_info },
 +	{ PCI_VDEVICE(INTEL, 0x31c2), (kernel_ulong_t)&bxt_info },
 +	{ PCI_VDEVICE(INTEL, 0x31c4), (kernel_ulong_t)&bxt_info },
 +	{ PCI_VDEVICE(INTEL, 0x31c6), (kernel_ulong_t)&bxt_info },
  	/* APL */
- 	{ PCI_VDEVICE(INTEL, 0x5aac), (kernel_ulong_t)&bxt_i2c_info },
- 	{ PCI_VDEVICE(INTEL, 0x5aae), (kernel_ulong_t)&bxt_i2c_info },
- 	{ PCI_VDEVICE(INTEL, 0x5ab0), (kernel_ulong_t)&bxt_i2c_info },
- 	{ PCI_VDEVICE(INTEL, 0x5ab2), (kernel_ulong_t)&bxt_i2c_info },
- 	{ PCI_VDEVICE(INTEL, 0x5ab4), (kernel_ulong_t)&bxt_i2c_info },
- 	{ PCI_VDEVICE(INTEL, 0x5ab6), (kernel_ulong_t)&bxt_i2c_info },
- 	{ PCI_VDEVICE(INTEL, 0x5ab8), (kernel_ulong_t)&bxt_i2c_info },
- 	{ PCI_VDEVICE(INTEL, 0x5aba), (kernel_ulong_t)&bxt_i2c_info },
+ 	{ PCI_VDEVICE(INTEL, 0x5aac), (kernel_ulong_t)&apl_i2c_info },
+ 	{ PCI_VDEVICE(INTEL, 0x5aae), (kernel_ulong_t)&apl_i2c_info },
+ 	{ PCI_VDEVICE(INTEL, 0x5ab0), (kernel_ulong_t)&apl_i2c_info },
+ 	{ PCI_VDEVICE(INTEL, 0x5ab2), (kernel_ulong_t)&apl_i2c_info },
+ 	{ PCI_VDEVICE(INTEL, 0x5ab4), (kernel_ulong_t)&apl_i2c_info },
+ 	{ PCI_VDEVICE(INTEL, 0x5ab6), (kernel_ulong_t)&apl_i2c_info },
+ 	{ PCI_VDEVICE(INTEL, 0x5ab8), (kernel_ulong_t)&apl_i2c_info },
+ 	{ PCI_VDEVICE(INTEL, 0x5aba), (kernel_ulong_t)&apl_i2c_info },
  	{ PCI_VDEVICE(INTEL, 0x5abc), (kernel_ulong_t)&bxt_uart_info },
  	{ PCI_VDEVICE(INTEL, 0x5abe), (kernel_ulong_t)&bxt_uart_info },
  	{ PCI_VDEVICE(INTEL, 0x5ac0), (kernel_ulong_t)&bxt_uart_info },
* Unmerged path drivers/mfd/intel-lpss-acpi.c
* Unmerged path drivers/mfd/intel-lpss-pci.c
