net/mlx5e: Re-order fields of struct mlx5e_xdpsq

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Re-order fields of struct mlx5e_xdpsq (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 95.65%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit dac0d15fff6f825e93aafa6ba8bf24fd77ecb2ae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/dac0d15f.failed

In the downstream patch that adds support to XDP_REDIRECT-out,
the XDP xmit frame function doesn't share the same run context as
the NAPI that polls the XDP-SQ completion queue.

Hence, need to re-order the XDP-SQ fields to avoid cacheline
false-sharing.

Take redirect_flush and doorbell out of DB, into separated
cachelines.

Add a cacheline breaker within the stats struct.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit dac0d15fff6f825e93aafa6ba8bf24fd77ecb2ae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en/xdp.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index d500f9aa1bd7,16e219a8f240..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -391,15 -419,12 +395,24 @@@ struct mlx5e_xdpsq 
  
  	struct mlx5e_cq            cq;
  
++<<<<<<< HEAD
 +	/* write@xmit, read@completion */
 +	struct {
 +		struct mlx5e_dma_info     *di;
 +		bool                       doorbell;
 +		bool                       redirect_flush;
 +	} db;
 +
 +	/* read only */
 +	struct mlx5_wq_cyc         wq;
++=======
+ 	/* read only */
+ 	struct mlx5_wq_cyc         wq;
+ 	struct mlx5e_xdpsq_stats  *stats;
+ 	struct {
+ 		struct mlx5e_xdp_info     *xdpi;
+ 	} db;
++>>>>>>> dac0d15fff6f (net/mlx5e: Re-order fields of struct mlx5e_xdpsq)
  	void __iomem              *uar_map;
  	u32                        sqn;
  	struct device             *pdev;
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
index 9c603217203a,7aa8ff389cdd..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
@@@ -205,7 -226,19 +205,18 @@@ struct mlx5e_sq_stats 
  	u64 cqe_err;
  };
  
++<<<<<<< HEAD
++=======
+ struct mlx5e_xdpsq_stats {
+ 	u64 xmit;
+ 	u64 full;
+ 	u64 err;
+ 	/* dirtied @completion */
+ 	u64 cqes ____cacheline_aligned_in_smp;
+ };
+ 
++>>>>>>> dac0d15fff6f (net/mlx5e: Re-order fields of struct mlx5e_xdpsq)
  struct mlx5e_ch_stats {
 -	u64 events;
 -	u64 poll;
 -	u64 arm;
 -	u64 aff_change;
  	u64 eq_rearm;
  };
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/xdp.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/xdp.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 3631c4f3022b..e20d6a9af6bc 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@ -1124,14 +1124,14 @@ int mlx5e_poll_rx_cq(struct mlx5e_cq *cq, int budget)
 		rq->handle_rx_cqe(rq, cqe);
 	} while ((++work_done < budget) && (cqe = mlx5_cqwq_get_cqe(&cq->wq)));
 
-	if (xdpsq->db.doorbell) {
+	if (xdpsq->doorbell) {
 		mlx5e_xmit_xdp_doorbell(xdpsq);
-		xdpsq->db.doorbell = false;
+		xdpsq->doorbell = false;
 	}
 
-	if (xdpsq->db.redirect_flush) {
+	if (xdpsq->redirect_flush) {
 		xdp_do_flush_map();
-		xdpsq->db.redirect_flush = false;
+		xdpsq->redirect_flush = false;
 	}
 
 	mlx5_cqwq_update_db_record(&cq->wq);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
