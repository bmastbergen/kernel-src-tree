perf stat: Move 'run_count' to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit d97ae04b3d5263be242a6a9f9eef6422fc86326a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d97ae04b.failed

Move the static 'run_count' variable to 'struct perf_stat_config', so
that it can be passed around and used outside the 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-28-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d97ae04b3d5263be242a6a9f9eef6422fc86326a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
diff --cc tools/perf/builtin-stat.c
index 13693124ed08,1276596840c9..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -204,6 -198,8 +203,11 @@@ static volatile int done = 0
  static struct perf_stat_config stat_config = {
  	.aggr_mode	= AGGR_GLOBAL,
  	.scale		= true,
++<<<<<<< HEAD
++=======
+ 	.unit_width	= 4, /* strlen("unit") */
+ 	.run_count	= 1,
++>>>>>>> d97ae04b3d52 (perf stat: Move 'run_count' to 'struct perf_stat_config')
  };
  
  static bool is_duration_time(struct perf_evsel *evsel)
@@@ -1658,14 -1614,14 +1662,14 @@@ static void print_header(int argc, cons
  			fprintf(output, "\'%s", argv ? argv[0] : "pipe");
  			for (i = 1; argv && (i < argc); i++)
  				fprintf(output, " %s", argv[i]);
 -		} else if (_target->pid)
 -			fprintf(output, "process id \'%s", _target->pid);
 +		} else if (target.pid)
 +			fprintf(output, "process id \'%s", target.pid);
  		else
 -			fprintf(output, "thread id \'%s", _target->tid);
 +			fprintf(output, "thread id \'%s", target.tid);
  
  		fprintf(output, "\'");
- 		if (run_count > 1)
- 			fprintf(output, " (%d runs)", run_count);
+ 		if (config->run_count > 1)
+ 			fprintf(output, " (%d runs)", config->run_count);
  		fprintf(output, ":\n\n");
  	}
  }
@@@ -2834,7 -2793,7 +2839,11 @@@ int cmd_stat(int argc, const char **arg
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	if (metric_only && run_count > 1) {
++=======
+ 	if (stat_config.metric_only && stat_config.run_count > 1) {
++>>>>>>> d97ae04b3d52 (perf stat: Move 'run_count' to 'struct perf_stat_config')
  		fprintf(stderr, "--metric-only is not supported with -r\n");
  		goto out;
  	}
* Unmerged path tools/perf/builtin-stat.c
diff --git a/tools/perf/util/stat.h b/tools/perf/util/stat.h
index 4b88aef959fb..1bc3d53d113c 100644
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@ -94,6 +94,7 @@ struct perf_stat_config {
 	unsigned int		 timeout;
 	unsigned int		 initial_delay;
 	int			 times;
+	int			 run_count;
 	struct runtime_stat	*stats;
 	int			 stats_num;
 };
