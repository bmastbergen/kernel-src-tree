s390/qeth: convert to ETHTOOL_GLINKSETTINGS API

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [s390] qeth: convert to ETHTOOL_GLINKSETTINGS API (Hendrik Brueckner) [1640651]
Rebuild_FUZZ: 94.38%
commit-author Julian Wiedmann <jwi@linux.vnet.ibm.com>
commit 993e19c0aeaaf4ad21e93a09110a782f4ef0c4d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/993e19c0.failed

get_settings() is deprecated and lacks support for higher link
speeds, so implement get_link_ksettings() instead.

	Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
	Reviewed-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
	Reviewed-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 993e19c0aeaaf4ad21e93a09110a782f4ef0c4d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_core_main.c
diff --cc drivers/s390/net/qeth_core_main.c
index 2a175c0e1f6b,4304bc2a6620..000000000000
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@@ -5933,7 -6085,6 +5936,10 @@@ int qeth_core_ethtool_get_link_ksetting
  	struct qeth_card *card = netdev->ml_priv;
  	enum qeth_link_types link_type;
  	struct carrier_info carrier_info;
++<<<<<<< HEAD
 +	u32 speed;
++=======
++>>>>>>> 993e19c0aeaa (s390/qeth: convert to ETHTOOL_GLINKSETTINGS API)
  	int rc;
  
  	if ((card->info.type == QETH_CARD_TYPE_IQD) || (card->info.guestlan))
@@@ -6038,30 -6184,106 +6040,29 @@@
  
  	return 0;
  }
- EXPORT_SYMBOL_GPL(qeth_core_ethtool_get_settings);
+ EXPORT_SYMBOL_GPL(qeth_core_ethtool_get_link_ksettings);
  
 -/* Callback to handle checksum offload command reply from OSA card.
 - * Verify that required features have been enabled on the card.
 - * Return error in hdr->return_code as this value is checked by caller.
 - *
 - * Always returns zero to indicate no further messages from the OSA card.
 - */
 -static int qeth_ipa_checksum_run_cmd_cb(struct qeth_card *card,
 -					struct qeth_reply *reply,
 -					unsigned long data)
 +static int qeth_send_checksum_command(struct qeth_card *card)
  {
 -	struct qeth_ipa_cmd *cmd = (struct qeth_ipa_cmd *) data;
 -	struct qeth_checksum_cmd *chksum_cb =
 -				(struct qeth_checksum_cmd *)reply->param;
 -
 -	QETH_CARD_TEXT(card, 4, "chkdoccb");
 -	if (cmd->hdr.return_code)
 -		return 0;
 -
 -	memset(chksum_cb, 0, sizeof(*chksum_cb));
 -	if (cmd->data.setassparms.hdr.command_code == IPA_CMD_ASS_START) {
 -		chksum_cb->supported =
 -				cmd->data.setassparms.data.chksum.supported;
 -		QETH_CARD_TEXT_(card, 3, "strt:%x", chksum_cb->supported);
 -	}
 -	if (cmd->data.setassparms.hdr.command_code == IPA_CMD_ASS_ENABLE) {
 -		chksum_cb->supported =
 -				cmd->data.setassparms.data.chksum.supported;
 -		chksum_cb->enabled =
 -				cmd->data.setassparms.data.chksum.enabled;
 -		QETH_CARD_TEXT_(card, 3, "supp:%x", chksum_cb->supported);
 -		QETH_CARD_TEXT_(card, 3, "enab:%x", chksum_cb->enabled);
 -	}
 -	return 0;
 -}
 -
 -/* Send command to OSA card and check results. */
 -static int qeth_ipa_checksum_run_cmd(struct qeth_card *card,
 -				     enum qeth_ipa_funcs ipa_func,
 -				     __u16 cmd_code, long data,
 -				     struct qeth_checksum_cmd *chksum_cb)
 -{
 -	struct qeth_cmd_buffer *iob;
 -	int rc = -ENOMEM;
 -
 -	QETH_CARD_TEXT(card, 4, "chkdocmd");
 -	iob = qeth_get_setassparms_cmd(card, ipa_func, cmd_code,
 -				       sizeof(__u32), QETH_PROT_IPV4);
 -	if (iob)
 -		rc = qeth_send_setassparms(card, iob, sizeof(__u32), data,
 -					   qeth_ipa_checksum_run_cmd_cb,
 -					   chksum_cb);
 -	return rc;
 -}
 -
 -static int qeth_send_checksum_on(struct qeth_card *card, int cstype)
 -{
 -	const __u32 required_features = QETH_IPA_CHECKSUM_IP_HDR |
 -					QETH_IPA_CHECKSUM_UDP |
 -					QETH_IPA_CHECKSUM_TCP;
 -	struct qeth_checksum_cmd chksum_cb;
  	int rc;
  
 -	rc = qeth_ipa_checksum_run_cmd(card, cstype, IPA_CMD_ASS_START, 0,
 -				       &chksum_cb);
 -	if (!rc) {
 -		if ((required_features & chksum_cb.supported) !=
 -		    required_features)
 -			rc = -EIO;
 -		else if (!(QETH_IPA_CHECKSUM_LP2LP & chksum_cb.supported) &&
 -			 cstype == IPA_INBOUND_CHECKSUM)
 -			dev_warn(&card->gdev->dev,
 -				 "Hardware checksumming is performed only if %s and its peer use different OSA Express 3 ports\n",
 -				 QETH_CARD_IFNAME(card));
 -	}
 +	rc = qeth_send_simple_setassparms(card, IPA_INBOUND_CHECKSUM,
 +					  IPA_CMD_ASS_START, 0);
  	if (rc) {
 -		qeth_send_simple_setassparms(card, cstype, IPA_CMD_ASS_STOP, 0);
 -		dev_warn(&card->gdev->dev,
 -			 "Starting HW checksumming for %s failed, using SW checksumming\n",
 -			 QETH_CARD_IFNAME(card));
 +		dev_warn(&card->gdev->dev, "Starting HW checksumming for %s "
 +			"failed, using SW checksumming\n",
 +			QETH_CARD_IFNAME(card));
  		return rc;
  	}
 -	rc = qeth_ipa_checksum_run_cmd(card, cstype, IPA_CMD_ASS_ENABLE,
 -				       chksum_cb.supported, &chksum_cb);
 -	if (!rc) {
 -		if ((required_features & chksum_cb.enabled) !=
 -		    required_features)
 -			rc = -EIO;
 -	}
 +	rc = qeth_send_simple_setassparms(card, IPA_INBOUND_CHECKSUM,
 +					  IPA_CMD_ASS_ENABLE,
 +					  card->info.csum_mask);
  	if (rc) {
 -		qeth_send_simple_setassparms(card, cstype, IPA_CMD_ASS_STOP, 0);
 -		dev_warn(&card->gdev->dev,
 -			 "Enabling HW checksumming for %s failed, using SW checksumming\n",
 -			 QETH_CARD_IFNAME(card));
 +		dev_warn(&card->gdev->dev, "Enabling HW checksumming for %s "
 +			"failed, using SW checksumming\n",
 +			QETH_CARD_IFNAME(card));
  		return rc;
  	}
 -
 -	dev_info(&card->gdev->dev, "HW Checksumming (%sbound) enabled\n",
 -		 cstype == IPA_INBOUND_CHECKSUM ? "in" : "out");
  	return 0;
  }
  
diff --git a/drivers/s390/net/qeth_core.h b/drivers/s390/net/qeth_core.h
index d4437aa7c289..8d6c377d701e 100644
--- a/drivers/s390/net/qeth_core.h
+++ b/drivers/s390/net/qeth_core.h
@@ -998,7 +998,8 @@ void qeth_core_get_ethtool_stats(struct net_device *,
 void qeth_core_get_strings(struct net_device *, u32, u8 *);
 void qeth_core_get_drvinfo(struct net_device *, struct ethtool_drvinfo *);
 void qeth_dbf_longtext(debug_info_t *id, int level, char *text, ...);
-int qeth_core_ethtool_get_settings(struct net_device *, struct ethtool_cmd *);
+int qeth_core_ethtool_get_link_ksettings(struct net_device *netdev,
+					 struct ethtool_link_ksettings *cmd);
 int qeth_set_access_ctrl_online(struct qeth_card *card, int fallback);
 int qeth_hdr_chk_and_bounce(struct sk_buff *, struct qeth_hdr **, int);
 int qeth_configure_cq(struct qeth_card *, enum qeth_cq);
* Unmerged path drivers/s390/net/qeth_core_main.c
diff --git a/drivers/s390/net/qeth_l2_main.c b/drivers/s390/net/qeth_l2_main.c
index b9852de25f9b..6324a20870e1 100644
--- a/drivers/s390/net/qeth_l2_main.c
+++ b/drivers/s390/net/qeth_l2_main.c
@@ -1041,7 +1041,7 @@ static const struct ethtool_ops qeth_l2_ethtool_ops = {
 	.get_ethtool_stats = qeth_core_get_ethtool_stats,
 	.get_sset_count = qeth_core_get_sset_count,
 	.get_drvinfo = qeth_core_get_drvinfo,
-	.get_settings = qeth_core_ethtool_get_settings,
+	.get_link_ksettings = qeth_core_ethtool_get_link_ksettings,
 };
 
 static const struct ethtool_ops qeth_l2_osn_ops = {
diff --git a/drivers/s390/net/qeth_l3_main.c b/drivers/s390/net/qeth_l3_main.c
index faa467771068..985bcb01587c 100644
--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@ -3084,7 +3084,7 @@ static const struct ethtool_ops qeth_l3_ethtool_ops = {
 	.get_ethtool_stats = qeth_core_get_ethtool_stats,
 	.get_sset_count = qeth_core_get_sset_count,
 	.get_drvinfo = qeth_core_get_drvinfo,
-	.get_settings = qeth_core_ethtool_get_settings,
+	.get_link_ksettings = qeth_core_ethtool_get_link_ksettings,
 };
 
 /*
