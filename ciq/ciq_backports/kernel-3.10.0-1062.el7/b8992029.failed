scsi: mpt3sas: Add separate function for aero doorbell reads

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [scsi] mpt3sas: Add separate function for aero doorbell reads (Tomas Henzl) [1660791]
Rebuild_FUZZ: 94.74%
commit-author Suganath Prabu <suganath-prabu.subramani@broadcom.com>
commit b899202901a8add28adc73a1ae077217fa341dfe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/b8992029.failed

Sometimes Aero controllers appears to be returning bad data (0) for
doorbell register read and if retries are performed immediately after the
bad read, they return good data.

Workaround is added to retry read from doorbell registers for maximum three
times if driver get the zero.  Added functions base_readl_aero for Aero IOC
and base_readl for gen35 and other controllers.

	Signed-off-by: Suganath Prabu <suganath-prabu.subramani@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit b899202901a8add28adc73a1ae077217fa341dfe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/mpt3sas/mpt3sas_base.c
diff --cc drivers/scsi/mpt3sas/mpt3sas_base.c
index 47ce8385aae2,d371c8e344d5..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_base.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_base.c
@@@ -153,6 -157,94 +153,97 @@@ module_param_call(mpt3sas_fwfault_debug
  	param_get_int, &mpt3sas_fwfault_debug, 0644);
  
  /**
++<<<<<<< HEAD
++=======
+  * _base_readl_aero - retry readl for max three times.
+  * @addr - MPT Fusion system interface register address
+  *
+  * Retry the readl() for max three times if it gets zero value
+  * while reading the system interface register.
+  */
+ static inline u32
+ _base_readl_aero(const volatile void __iomem *addr)
+ {
+ 	u32 i = 0, ret_val;
+ 
+ 	do {
+ 		ret_val = readl(addr);
+ 		i++;
+ 	} while (ret_val == 0 && i < 3);
+ 
+ 	return ret_val;
+ }
+ 
+ static inline u32
+ _base_readl(const volatile void __iomem *addr)
+ {
+ 	return readl(addr);
+ }
+ 
+ /**
+  * _base_clone_reply_to_sys_mem - copies reply to reply free iomem
+  *				  in BAR0 space.
+  *
+  * @ioc: per adapter object
+  * @reply: reply message frame(lower 32bit addr)
+  * @index: System request message index.
+  */
+ static void
+ _base_clone_reply_to_sys_mem(struct MPT3SAS_ADAPTER *ioc, u32 reply,
+ 		u32 index)
+ {
+ 	/*
+ 	 * 256 is offset within sys register.
+ 	 * 256 offset MPI frame starts. Max MPI frame supported is 32.
+ 	 * 32 * 128 = 4K. From here, Clone of reply free for mcpu starts
+ 	 */
+ 	u16 cmd_credit = ioc->facts.RequestCredit + 1;
+ 	void __iomem *reply_free_iomem = (void __iomem *)ioc->chip +
+ 			MPI_FRAME_START_OFFSET +
+ 			(cmd_credit * ioc->request_sz) + (index * sizeof(u32));
+ 
+ 	writel(reply, reply_free_iomem);
+ }
+ 
+ /**
+  * _base_clone_mpi_to_sys_mem - Writes/copies MPI frames
+  *				to system/BAR0 region.
+  *
+  * @dst_iomem: Pointer to the destination location in BAR0 space.
+  * @src: Pointer to the Source data.
+  * @size: Size of data to be copied.
+  */
+ static void
+ _base_clone_mpi_to_sys_mem(void *dst_iomem, void *src, u32 size)
+ {
+ 	int i;
+ 	u32 *src_virt_mem = (u32 *)src;
+ 
+ 	for (i = 0; i < size/4; i++)
+ 		writel((u32)src_virt_mem[i],
+ 				(void __iomem *)dst_iomem + (i * 4));
+ }
+ 
+ /**
+  * _base_clone_to_sys_mem - Writes/copies data to system/BAR0 region
+  *
+  * @dst_iomem: Pointer to the destination location in BAR0 space.
+  * @src: Pointer to the Source data.
+  * @size: Size of data to be copied.
+  */
+ static void
+ _base_clone_to_sys_mem(void __iomem *dst_iomem, void *src, u32 size)
+ {
+ 	int i;
+ 	u32 *src_virt_mem = (u32 *)(src);
+ 
+ 	for (i = 0; i < size/4; i++)
+ 		writel((u32)src_virt_mem[i],
+ 			(void __iomem *)dst_iomem + (i * 4));
+ }
+ 
+ /**
++>>>>>>> b899202901a8 (scsi: mpt3sas: Add separate function for aero doorbell reads)
   * _base_get_chain - Calculates and Returns virtual chain address
   *			 for the provided smid in BAR0 space.
   *
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_base.c
diff --git a/drivers/scsi/mpt3sas/mpt3sas_base.h b/drivers/scsi/mpt3sas/mpt3sas_base.h
index 158d50690cb2..d5c7944ba9dc 100644
--- a/drivers/scsi/mpt3sas/mpt3sas_base.h
+++ b/drivers/scsi/mpt3sas/mpt3sas_base.h
@@ -855,6 +855,7 @@ typedef void (*MPT_BUILD_ZERO_LEN_SGE)(struct MPT3SAS_ADAPTER *ioc,
 typedef void (*PUT_SMID_IO_FP_HIP) (struct MPT3SAS_ADAPTER *ioc, u16 smid,
 	u16 funcdep);
 typedef void (*PUT_SMID_DEFAULT) (struct MPT3SAS_ADAPTER *ioc, u16 smid);
+typedef u32 (*BASE_READ_REG) (const volatile void __iomem *addr);
 
 /* IOC Facts and Port Facts converted from little endian to cpu */
 union mpi3_version_union {
@@ -1320,6 +1321,7 @@ struct MPT3SAS_ADAPTER {
 	u8		hide_drives;
 	spinlock_t	diag_trigger_lock;
 	u8		diag_trigger_active;
+	BASE_READ_REG	base_readl;
 	struct SL_WH_MASTER_TRIGGER_T diag_trigger_master;
 	struct SL_WH_EVENT_TRIGGERS_T diag_trigger_event;
 	struct SL_WH_SCSI_TRIGGERS_T diag_trigger_scsi;
