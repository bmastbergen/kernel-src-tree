memcg: get rid of kmem_cache_dup()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Vladimir Davydov <vdavydov@parallels.com>
commit 842e2873697e023d140a8905a41fcf39d4e546f1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/842e2873.failed

kmem_cache_dup() is only called from memcg_create_kmem_cache().  The
latter, in fact, does nothing besides this, so let's fold
kmem_cache_dup() into memcg_create_kmem_cache().

This patch also makes the memcg_cache_mutex private to
memcg_create_kmem_cache(), because it is not used anywhere else.

	Signed-off-by: Vladimir Davydov <vdavydov@parallels.com>
	Cc: Michal Hocko <mhocko@suse.cz>
	Cc: Glauber Costa <glommer@gmail.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Balbir Singh <bsingharora@gmail.com>
	Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 842e2873697e023d140a8905a41fcf39d4e546f1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memcontrol.c
diff --cc mm/memcontrol.c
index 5a271ae6c0ad,80197e544764..000000000000
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@@ -3447,33 -3466,15 +3439,37 @@@ static struct kmem_cache *memcg_create_
  	return new;
  }
  
++<<<<<<< HEAD
 +static struct kmem_cache *memcg_create_kmem_cache(struct mem_cgroup *memcg,
 +						  struct kmem_cache *cachep)
 +{
 +	struct kmem_cache *new_cachep;
 +
 +	BUG_ON(!memcg_can_account_kmem(memcg));
 +
 +	mutex_lock(&memcg_cache_mutex);
 +
 +	new_cachep = kmem_cache_dup(memcg, cachep);
 +	if (new_cachep == NULL) {
 +		new_cachep = cachep;
 +		goto out;
 +	}
 +
 +	mem_cgroup_get(memcg);
 +out:
 +	mutex_unlock(&memcg_cache_mutex);
 +	return new_cachep;
 +}
 +
 +static DEFINE_MUTEX(memcg_limit_mutex);
 +
 +int __kmem_cache_destroy_memcg_children(struct kmem_cache *s)
++=======
+ void kmem_cache_destroy_memcg_children(struct kmem_cache *s)
++>>>>>>> 842e2873697e (memcg: get rid of kmem_cache_dup())
  {
  	struct kmem_cache *c;
 -	int i;
 -
 -	if (!s->memcg_params)
 -		return;
 -	if (!s->memcg_params->is_root_cache)
 -		return;
 +	int i, failed = 0;
  
  	/*
  	 * If the cache is being destroyed, we trust that there is no one else
* Unmerged path mm/memcontrol.c
