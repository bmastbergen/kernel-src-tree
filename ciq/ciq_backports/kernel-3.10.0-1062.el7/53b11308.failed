netfilter: nf_nat: register NAT helpers.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Flavio Leitner <fbl@redhat.com>
commit 53b11308a1b53d7e98f65dfd5faea124df99ca14
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/53b11308.failed

Register amanda, ftp, irc, sip and tftp NAT helpers.

	Signed-off-by: Flavio Leitner <fbl@redhat.com>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 53b11308a1b53d7e98f65dfd5faea124df99ca14)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_nat_sip.c
diff --cc net/netfilter/nf_nat_sip.c
index df6e0b9ebd0f,464387b3600f..000000000000
--- a/net/netfilter/nf_nat_sip.c
+++ b/net/netfilter/nf_nat_sip.c
@@@ -625,33 -660,27 +629,44 @@@ static struct nf_ct_helper_expectfn sip
  
  static void __exit nf_nat_sip_fini(void)
  {
++<<<<<<< HEAD
 +	RCU_INIT_POINTER(nf_nat_sip_hook, NULL);
 +	RCU_INIT_POINTER(nf_nat_sip_seq_adjust_hook, NULL);
 +	RCU_INIT_POINTER(nf_nat_sip_expect_hook, NULL);
 +	RCU_INIT_POINTER(nf_nat_sdp_addr_hook, NULL);
 +	RCU_INIT_POINTER(nf_nat_sdp_port_hook, NULL);
 +	RCU_INIT_POINTER(nf_nat_sdp_session_hook, NULL);
 +	RCU_INIT_POINTER(nf_nat_sdp_media_hook, NULL);
++=======
+ 	nf_nat_helper_unregister(&nat_helper_sip);
+ 	RCU_INIT_POINTER(nf_nat_sip_hooks, NULL);
++>>>>>>> 53b11308a1b5 (netfilter: nf_nat: register NAT helpers.)
  	nf_ct_helper_expectfn_unregister(&sip_nat);
  	synchronize_rcu();
  }
  
 -static const struct nf_nat_sip_hooks sip_hooks = {
 -	.msg		= nf_nat_sip,
 -	.seq_adjust	= nf_nat_sip_seq_adjust,
 -	.expect		= nf_nat_sip_expect,
 -	.sdp_addr	= nf_nat_sdp_addr,
 -	.sdp_port	= nf_nat_sdp_port,
 -	.sdp_session	= nf_nat_sdp_session,
 -	.sdp_media	= nf_nat_sdp_media,
 -};
 -
  static int __init nf_nat_sip_init(void)
  {
++<<<<<<< HEAD
 +	BUG_ON(nf_nat_sip_hook != NULL);
 +	BUG_ON(nf_nat_sip_seq_adjust_hook != NULL);
 +	BUG_ON(nf_nat_sip_expect_hook != NULL);
 +	BUG_ON(nf_nat_sdp_addr_hook != NULL);
 +	BUG_ON(nf_nat_sdp_port_hook != NULL);
 +	BUG_ON(nf_nat_sdp_session_hook != NULL);
 +	BUG_ON(nf_nat_sdp_media_hook != NULL);
 +	RCU_INIT_POINTER(nf_nat_sip_hook, nf_nat_sip);
 +	RCU_INIT_POINTER(nf_nat_sip_seq_adjust_hook, nf_nat_sip_seq_adjust);
 +	RCU_INIT_POINTER(nf_nat_sip_expect_hook, nf_nat_sip_expect);
 +	RCU_INIT_POINTER(nf_nat_sdp_addr_hook, nf_nat_sdp_addr);
 +	RCU_INIT_POINTER(nf_nat_sdp_port_hook, nf_nat_sdp_port);
 +	RCU_INIT_POINTER(nf_nat_sdp_session_hook, nf_nat_sdp_session);
 +	RCU_INIT_POINTER(nf_nat_sdp_media_hook, nf_nat_sdp_media);
++=======
+ 	BUG_ON(nf_nat_sip_hooks != NULL);
+ 	nf_nat_helper_register(&nat_helper_sip);
+ 	RCU_INIT_POINTER(nf_nat_sip_hooks, &sip_hooks);
++>>>>>>> 53b11308a1b5 (netfilter: nf_nat: register NAT helpers.)
  	nf_ct_helper_expectfn_register(&sip_nat);
  	return 0;
  }
diff --git a/net/netfilter/nf_nat_amanda.c b/net/netfilter/nf_nat_amanda.c
index b1f32acc5a32..e68556545a70 100644
--- a/net/netfilter/nf_nat_amanda.c
+++ b/net/netfilter/nf_nat_amanda.c
@@ -19,10 +19,15 @@
 #include <net/netfilter/nf_nat_helper.h>
 #include <linux/netfilter/nf_conntrack_amanda.h>
 
+#define NAT_HELPER_NAME "amanda"
+
 MODULE_AUTHOR("Brian J. Murrell <netfilter@interlinx.bc.ca>");
 MODULE_DESCRIPTION("Amanda NAT helper");
 MODULE_LICENSE("GPL");
-MODULE_ALIAS_NF_NAT_HELPER("amanda");
+MODULE_ALIAS_NF_NAT_HELPER(NAT_HELPER_NAME);
+
+static struct nf_conntrack_nat_helper nat_helper_amanda =
+	NF_CT_NAT_HELPER_INIT(NAT_HELPER_NAME);
 
 static unsigned int help(struct sk_buff *skb,
 			 enum ip_conntrack_info ctinfo,
@@ -75,6 +80,7 @@ static unsigned int help(struct sk_buff *skb,
 
 static void __exit nf_nat_amanda_fini(void)
 {
+	nf_nat_helper_unregister(&nat_helper_amanda);
 	RCU_INIT_POINTER(nf_nat_amanda_hook, NULL);
 	synchronize_rcu();
 }
@@ -82,6 +88,7 @@ static void __exit nf_nat_amanda_fini(void)
 static int __init nf_nat_amanda_init(void)
 {
 	BUG_ON(nf_nat_amanda_hook != NULL);
+	nf_nat_helper_register(&nat_helper_amanda);
 	RCU_INIT_POINTER(nf_nat_amanda_hook, help);
 	return 0;
 }
diff --git a/net/netfilter/nf_nat_ftp.c b/net/netfilter/nf_nat_ftp.c
index c139c942d818..4d5a039f6ba0 100644
--- a/net/netfilter/nf_nat_ftp.c
+++ b/net/netfilter/nf_nat_ftp.c
@@ -19,13 +19,18 @@
 #include <net/netfilter/nf_conntrack_expect.h>
 #include <linux/netfilter/nf_conntrack_ftp.h>
 
+#define NAT_HELPER_NAME "ftp"
+
 MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Rusty Russell <rusty@rustcorp.com.au>");
 MODULE_DESCRIPTION("ftp NAT helper");
-MODULE_ALIAS_NF_NAT_HELPER("ftp");
+MODULE_ALIAS_NF_NAT_HELPER(NAT_HELPER_NAME);
 
 /* FIXME: Time out? --RR */
 
+static struct nf_conntrack_nat_helper nat_helper_ftp =
+	NF_CT_NAT_HELPER_INIT(NAT_HELPER_NAME);
+
 static int nf_nat_ftp_fmt_cmd(struct nf_conn *ct, enum nf_ct_ftp_type type,
 			      char *buffer, size_t buflen,
 			      union nf_inet_addr *addr, u16 port)
@@ -122,6 +127,7 @@ out:
 
 static void __exit nf_nat_ftp_fini(void)
 {
+	nf_nat_helper_unregister(&nat_helper_ftp);
 	RCU_INIT_POINTER(nf_nat_ftp_hook, NULL);
 	synchronize_rcu();
 }
@@ -129,6 +135,7 @@ static void __exit nf_nat_ftp_fini(void)
 static int __init nf_nat_ftp_init(void)
 {
 	BUG_ON(nf_nat_ftp_hook != NULL);
+	nf_nat_helper_register(&nat_helper_ftp);
 	RCU_INIT_POINTER(nf_nat_ftp_hook, nf_nat_ftp);
 	return 0;
 }
diff --git a/net/netfilter/nf_nat_irc.c b/net/netfilter/nf_nat_irc.c
index 034fc5ed3f9a..bd345801878d 100644
--- a/net/netfilter/nf_nat_irc.c
+++ b/net/netfilter/nf_nat_irc.c
@@ -21,10 +21,15 @@
 #include <net/netfilter/nf_conntrack_expect.h>
 #include <linux/netfilter/nf_conntrack_irc.h>
 
+#define NAT_HELPER_NAME "irc"
+
 MODULE_AUTHOR("Harald Welte <laforge@gnumonks.org>");
 MODULE_DESCRIPTION("IRC (DCC) NAT helper");
 MODULE_LICENSE("GPL");
-MODULE_ALIAS_NF_NAT_HELPER("irc");
+MODULE_ALIAS_NF_NAT_HELPER(NAT_HELPER_NAME);
+
+static struct nf_conntrack_nat_helper nat_helper_irc =
+	NF_CT_NAT_HELPER_INIT(NAT_HELPER_NAME);
 
 static unsigned int help(struct sk_buff *skb,
 			 enum ip_conntrack_info ctinfo,
@@ -95,6 +100,7 @@ static unsigned int help(struct sk_buff *skb,
 
 static void __exit nf_nat_irc_fini(void)
 {
+	nf_nat_helper_unregister(&nat_helper_irc);
 	RCU_INIT_POINTER(nf_nat_irc_hook, NULL);
 	synchronize_rcu();
 }
@@ -102,6 +108,7 @@ static void __exit nf_nat_irc_fini(void)
 static int __init nf_nat_irc_init(void)
 {
 	BUG_ON(nf_nat_irc_hook != NULL);
+	nf_nat_helper_register(&nat_helper_irc);
 	RCU_INIT_POINTER(nf_nat_irc_hook, help);
 	return 0;
 }
* Unmerged path net/netfilter/nf_nat_sip.c
diff --git a/net/netfilter/nf_nat_tftp.c b/net/netfilter/nf_nat_tftp.c
index dd3a835c111d..e633b3863e33 100644
--- a/net/netfilter/nf_nat_tftp.c
+++ b/net/netfilter/nf_nat_tftp.c
@@ -13,10 +13,15 @@
 #include <net/netfilter/nf_nat_helper.h>
 #include <linux/netfilter/nf_conntrack_tftp.h>
 
+#define NAT_HELPER_NAME "tftp"
+
 MODULE_AUTHOR("Magnus Boden <mb@ozaba.mine.nu>");
 MODULE_DESCRIPTION("TFTP NAT helper");
 MODULE_LICENSE("GPL");
-MODULE_ALIAS_NF_NAT_HELPER("tftp");
+MODULE_ALIAS_NF_NAT_HELPER(NAT_HELPER_NAME);
+
+static struct nf_conntrack_nat_helper nat_helper_tftp =
+	NF_CT_NAT_HELPER_INIT(NAT_HELPER_NAME);
 
 static unsigned int help(struct sk_buff *skb,
 			 enum ip_conntrack_info ctinfo,
@@ -37,6 +42,7 @@ static unsigned int help(struct sk_buff *skb,
 
 static void __exit nf_nat_tftp_fini(void)
 {
+	nf_nat_helper_unregister(&nat_helper_tftp);
 	RCU_INIT_POINTER(nf_nat_tftp_hook, NULL);
 	synchronize_rcu();
 }
@@ -44,6 +50,7 @@ static void __exit nf_nat_tftp_fini(void)
 static int __init nf_nat_tftp_init(void)
 {
 	BUG_ON(nf_nat_tftp_hook != NULL);
+	nf_nat_helper_register(&nat_helper_tftp);
 	RCU_INIT_POINTER(nf_nat_tftp_hook, help);
 	return 0;
 }
