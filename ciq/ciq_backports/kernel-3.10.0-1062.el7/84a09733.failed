net/mlx5e: Enable multi-queue and RSS for VF representors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Enable multi-queue and RSS for VF representors (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 96.36%
commit-author Gavi Teitz <gavi@mellanox.com>
commit 84a0973386c5b6739627372c3725f5826c71f70c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/84a09733.failed

Increased the amount of channels the representors can open to be the
amount of CPUs. The default amount opened remains one.

Used the standard NIC netdev functions to:
* Set RSS params when building the representors' params.
* Setup an indirect TIR and RQT for the representors upon
  initialization.
* Create a TTC flow table for the representors' indirect TIR (when
  creating the TTC table, mlx5e_set_ttc_basic_params() is not called,
  in order to avoid setting the inner_ttc param, which is not needed).

Added ethtool control to the representors for setting and querying
the amount of open channels. Additionally, included logic in the
representors' ethtool set channels handler which controls a
representor's vport rx rule, so that if there is one open channel
the rx rule steers traffic to the representor's direct TIR, whereas
if there is more than one channel, the rx rule steers traffic to the
new TTC flow table.

	Signed-off-by: Gavi Teitz <gavi@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 84a0973386c5b6739627372c3725f5826c71f70c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 0e446984afa7,be435e76d316..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -943,9 -1019,11 +1021,12 @@@ static void mlx5e_build_rep_params(stru
  	mlx5e_set_rx_cq_mode_params(params, cq_period_mode);
  
  	params->num_tc                = 1;
 +	params->lro_wqe_sz            = MLX5E_PARAMS_DEFAULT_LRO_WQE_SZ;
  
  	mlx5_query_min_inline(mdev, &params->tx_min_inline_mode);
+ 
+ 	/* RSS */
+ 	mlx5e_build_rss_params(params);
  }
  
  static void mlx5e_build_rep_netdev(struct net_device *netdev)
@@@ -1095,11 -1210,11 +1213,16 @@@ static const struct mlx5e_profile mlx5e
  	.cleanup_rx		= mlx5e_cleanup_rep_rx,
  	.init_tx		= mlx5e_init_rep_tx,
  	.cleanup_tx		= mlx5e_cleanup_nic_tx,
++<<<<<<< HEAD
 +	.update_stats           = mlx5e_rep_update_stats,
 +	.max_nch		= mlx5e_get_rep_max_num_channels,
++=======
+ 	.update_stats           = mlx5e_rep_update_hw_counters,
+ 	.max_nch		= mlx5e_get_max_num_channels,
++>>>>>>> 84a0973386c5 (net/mlx5e: Enable multi-queue and RSS for VF representors)
  	.update_carrier		= NULL,
  	.rx_handlers.handle_rx_cqe       = mlx5e_handle_rx_cqe_rep,
 -	.rx_handlers.handle_rx_cqe_mpwqe = mlx5e_handle_rx_cqe_mpwrq,
 +	.rx_handlers.handle_rx_cqe_mpwqe = NULL /* Not supported */,
  	.max_tc			= 1,
  };
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
