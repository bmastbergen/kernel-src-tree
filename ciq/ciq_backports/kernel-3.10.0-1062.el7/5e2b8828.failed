fuse: invalidate dir dentry after chmod

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 5e2b8828ff3d79aca8c3a1730652758753205b61
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/5e2b8828.failed

Without "default_permissions" the userspace filesystem's lookup operation
needs to perform the check for search permission on the directory.

If directory does not allow search for everyone (this is quite rare) then
userspace filesystem has to set entry timeout to zero to make sure
permissions are always performed.

Changing the mode bits of the directory should also invalidate the
(previously cached) dentry to make sure the next lookup will have a chance
of updating the timeout, if needed.

	Reported-by: Jean-Pierre Andr√© <jean-pierre.andre@wanadoo.fr>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
	Cc: <stable@vger.kernel.org>
(cherry picked from commit 5e2b8828ff3d79aca8c3a1730652758753205b61)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/dir.c
diff --cc fs/fuse/dir.c
index 3e1c8cd01fea,3d3afa7ea57c..000000000000
--- a/fs/fuse/dir.c
+++ b/fs/fuse/dir.c
@@@ -1769,7 -1702,8 +1769,12 @@@ error
  
  static int fuse_setattr(struct dentry *entry, struct iattr *attr)
  {
++<<<<<<< HEAD
 +	struct inode *inode = entry->d_inode;
++=======
+ 	struct inode *inode = d_inode(entry);
+ 	int ret;
++>>>>>>> 5e2b8828ff3d (fuse: invalidate dir dentry after chmod)
  
  	if (!fuse_allow_current_process(get_fuse_conn(inode)))
  		return -EACCES;
* Unmerged path fs/fuse/dir.c
