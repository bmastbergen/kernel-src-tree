fuse: add FUSE_NO_OPEN_SUPPORT flag to INIT

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Andrew Gallagher <andrewjcg@fb.com>
commit d7afaec0b564f0609e116f562983b8e72fc3e9c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d7afaec0.failed

Here some additional changes to set a capability flag so that clients can
detect when it's appropriate to return -ENOSYS from open.

This amends the following commit introduced in 3.14:

  7678ac50615d  fuse: support clients that don't implement 'open'

However we can only add the flag to 3.15 and later since there was no
protocol version update in 3.14.

	Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
	Cc: <stable@vger.kernel.org> # v3.15+
(cherry picked from commit d7afaec0b564f0609e116f562983b8e72fc3e9c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/inode.c
#	include/uapi/linux/fuse.h
diff --cc fs/fuse/inode.c
index 846d8afa1180,03246cd9d47a..000000000000
--- a/fs/fuse/inode.c
+++ b/fs/fuse/inode.c
@@@ -912,7 -934,8 +912,12 @@@ static void fuse_send_init(struct fuse_
  		FUSE_EXPORT_SUPPORT | FUSE_BIG_WRITES | FUSE_DONT_MASK |
  		FUSE_SPLICE_WRITE | FUSE_SPLICE_MOVE | FUSE_SPLICE_READ |
  		FUSE_FLOCK_LOCKS | FUSE_IOCTL_DIR | FUSE_AUTO_INVAL_DATA |
++<<<<<<< HEAD
 +		FUSE_DO_READDIRPLUS | FUSE_READDIRPLUS_AUTO | FUSE_ASYNC_DIO;
++=======
+ 		FUSE_DO_READDIRPLUS | FUSE_READDIRPLUS_AUTO | FUSE_ASYNC_DIO |
+ 		FUSE_WRITEBACK_CACHE | FUSE_NO_OPEN_SUPPORT;
++>>>>>>> d7afaec0b564 (fuse: add FUSE_NO_OPEN_SUPPORT flag to INIT)
  	req->in.h.opcode = FUSE_INIT;
  	req->in.numargs = 1;
  	req->in.args[0].size = sizeof(*arg);
diff --cc include/uapi/linux/fuse.h
index 5d0f06afda03,25084a052a1e..000000000000
--- a/include/uapi/linux/fuse.h
+++ b/include/uapi/linux/fuse.h
@@@ -101,9 -101,7 +101,13 @@@
   *  - add FATTR_CTIME
   *  - add ctime and ctimensec to fuse_setattr_in
   *  - add FUSE_RENAME2 request
++<<<<<<< HEAD
 + *
 + *  7.24
 + *  - add FUSE_LSEEK for SEEK_HOLE and SEEK_DATA support
++=======
+  *  - add FUSE_NO_OPEN_SUPPORT flag
++>>>>>>> d7afaec0b564 (fuse: add FUSE_NO_OPEN_SUPPORT flag to INIT)
   */
  
  #ifndef _LINUX_FUSE_H
@@@ -230,6 -229,8 +234,11 @@@ struct fuse_file_lock 
   * FUSE_DO_READDIRPLUS: do READDIRPLUS (READDIR+LOOKUP in one)
   * FUSE_READDIRPLUS_AUTO: adaptive readdirplus
   * FUSE_ASYNC_DIO: asynchronous direct I/O submission
++<<<<<<< HEAD
++=======
+  * FUSE_WRITEBACK_CACHE: use writeback cache for buffered writes
+  * FUSE_NO_OPEN_SUPPORT: kernel supports zero-message opens
++>>>>>>> d7afaec0b564 (fuse: add FUSE_NO_OPEN_SUPPORT flag to INIT)
   */
  #define FUSE_ASYNC_READ		(1 << 0)
  #define FUSE_POSIX_LOCKS	(1 << 1)
@@@ -247,6 -248,8 +256,11 @@@
  #define FUSE_DO_READDIRPLUS	(1 << 13)
  #define FUSE_READDIRPLUS_AUTO	(1 << 14)
  #define FUSE_ASYNC_DIO		(1 << 15)
++<<<<<<< HEAD
++=======
+ #define FUSE_WRITEBACK_CACHE	(1 << 16)
+ #define FUSE_NO_OPEN_SUPPORT	(1 << 17)
++>>>>>>> d7afaec0b564 (fuse: add FUSE_NO_OPEN_SUPPORT flag to INIT)
  
  /**
   * CUSE INIT request/reply flags
* Unmerged path fs/fuse/inode.c
* Unmerged path include/uapi/linux/fuse.h
