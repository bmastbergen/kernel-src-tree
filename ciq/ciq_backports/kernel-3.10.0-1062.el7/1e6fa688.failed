xfs: Output warning message when discard option was enabled even though the device does not support discard

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Kenjiro Nakayama <nakayamakenjiro@gmail.com>
commit 1e6fa688bffc0ff419a4c3e78dbaf7aabfb55183
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/1e6fa688.failed

In order to using discard function, it is necessary that not only xfs
is mounted with discard option, but also the discard function is
supported by the device. Current code doesn't output any message when
users mount with discard option on unsupported device, so it is
difficult to notice that it was not enabled actually.

This patch adds the warning message to notice that discard option is
not enabled due to unsupported device when the filesystem is mounted.

Changes in v2 (Suggested by Brian Foster):
  - Move the unsupported device check into xfs_fs_fill_super().
  - Clear the discard flag when device is unsupported.

	Signed-off-by: Kenjiro Nakayama <nakayamakenjiro@gmail.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit 1e6fa688bffc0ff419a4c3e78dbaf7aabfb55183)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_super.c
diff --cc fs/xfs/xfs_super.c
index 34c7dcea47f6,584cf2d573ba..000000000000
--- a/fs/xfs/xfs_super.c
+++ b/fs/xfs/xfs_super.c
@@@ -1650,13 -1649,36 +1650,32 @@@ xfs_fs_fill_super
  			"DAX unsupported by block device. Turning off DAX.");
  			mp->m_flags &= ~XFS_MOUNT_DAX;
  		}
 -		if (xfs_sb_version_hasreflink(&mp->m_sb))
 -			xfs_alert(mp,
 -		"DAX and reflink have not been tested together!");
 -	}
  
++<<<<<<< HEAD
 +		if (!printed) {
 +			mark_tech_preview("xfs direct access (dax)", NULL);
 +			printed = true;
++=======
+ 	if (mp->m_flags & XFS_MOUNT_DISCARD) {
+ 		struct request_queue *q = bdev_get_queue(sb->s_bdev);
+ 
+ 		if (!blk_queue_discard(q)) {
+ 			xfs_warn(mp, "mounting with \"discard\" option, but "
+ 					"the device does not support discard");
+ 			mp->m_flags &= ~XFS_MOUNT_DISCARD;
+ 		}
+ 	}
+ 
+ 	if (xfs_sb_version_hasrmapbt(&mp->m_sb)) {
+ 		if (mp->m_sb.sb_rblocks) {
+ 			xfs_alert(mp,
+ 	"EXPERIMENTAL reverse mapping btree not compatible with realtime device!");
+ 			error = -EINVAL;
+ 			goto out_filestream_unmount;
++>>>>>>> 1e6fa688bffc (xfs: Output warning message when discard option was enabled even though the device does not support discard)
  		}
 -		xfs_alert(mp,
 -	"EXPERIMENTAL reverse mapping btree feature enabled. Use at your own risk!");
  	}
  
 -	if (xfs_sb_version_hasreflink(&mp->m_sb))
 -		xfs_alert(mp,
 -	"EXPERIMENTAL reflink feature enabled. Use at your own risk!");
 -
  	error = xfs_mountfs(mp);
  	if (error)
  		goto out_filestream_unmount;
* Unmerged path fs/xfs/xfs_super.c
