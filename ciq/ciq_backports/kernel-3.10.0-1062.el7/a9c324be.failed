nfp: don't try to register XDP rxq structures on control queues

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit a9c324be72b2243e1cddd3f9e7356849de39ae53
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a9c324be.failed

Some RX rings are used for control messages, those will not have
a netdev pointer in dp.  Skip XDP rxq handling on those rings.

Fixes: 7f1c684a8966 ("nfp: setup xdp_rxq_info")
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit a9c324be72b2243e1cddd3f9e7356849de39ae53)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net_common.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_common.c
index 94881f4ab34d,104d6c520a52..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
@@@ -2294,6 -2253,8 +2294,11 @@@ static void nfp_net_rx_ring_free(struc
  	struct nfp_net_r_vector *r_vec = rx_ring->r_vec;
  	struct nfp_net_dp *dp = &r_vec->nfp_net->dp;
  
++<<<<<<< HEAD
++=======
+ 	if (dp->netdev)
+ 		xdp_rxq_info_unreg(&rx_ring->xdp_rxq);
++>>>>>>> a9c324be72b2 (nfp: don't try to register XDP rxq structures on control queues)
  	kfree(rx_ring->rxbufs);
  
  	if (rx_ring->rxds)
@@@ -2317,7 -2278,14 +2322,18 @@@
  static int
  nfp_net_rx_ring_alloc(struct nfp_net_dp *dp, struct nfp_net_rx_ring *rx_ring)
  {
++<<<<<<< HEAD
 +	int sz;
++=======
+ 	int sz, err;
+ 
+ 	if (dp->netdev) {
+ 		err = xdp_rxq_info_reg(&rx_ring->xdp_rxq, dp->netdev,
+ 				       rx_ring->idx);
+ 		if (err < 0)
+ 			return err;
+ 	}
++>>>>>>> a9c324be72b2 (nfp: don't try to register XDP rxq structures on control queues)
  
  	rx_ring->cnt = dp->rxd_cnt;
  	rx_ring->size = sizeof(*rx_ring->rxds) * rx_ring->cnt;
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_common.c
