net: phy: make use of new MMD accessors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] phy: make use of new MMD accessors (Ivan Vecera) [1685646]
Rebuild_FUZZ: 93.15%
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit b52c018ddccfed4fded59546c502ddb1ea8c7ba1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/b52c018d.failed

Make use of the new MMD accessors.

v2:
- fix SoB

	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b52c018ddccfed4fded59546c502ddb1ea8c7ba1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/dp83867.c
#	drivers/net/phy/dp83tc811.c
#	drivers/net/phy/marvell10g.c
#	drivers/net/phy/phy-c45.c
#	drivers/net/phy/phy.c
diff --cc drivers/net/phy/phy.c
index c89d087511ee,89ead29cec68..000000000000
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@@ -1218,26 -1053,19 +1218,31 @@@ int phy_init_eee(struct phy_device *phy
  		if (eee_adv <= 0)
  			goto eee_exit_err;
  
 -		mmd_eee_adv_to_linkmode(adv, eee_adv);
 -		mmd_eee_adv_to_linkmode(lp, eee_lp);
 -		linkmode_and(common, adv, lp);
 -
 -		if (!phy_check_valid(phydev->speed, phydev->duplex, common))
 +		adv = mmd_eee_adv_to_ethtool_adv_t(eee_adv);
 +		lp = mmd_eee_adv_to_ethtool_adv_t(eee_lp);
 +		idx = phy_find_setting(phydev->speed, phydev->duplex);
 +		if (!(lp & adv & settings[idx].setting))
  			goto eee_exit_err;
  
- 		if (clk_stop_enable) {
+ 		if (clk_stop_enable)
  			/* Configure the PHY to stop receiving xMII
  			 * clock while it is signaling LPI.
  			 */
++<<<<<<< HEAD
 +			int val = phy_read_mmd_indirect(phydev->bus, MDIO_CTRL1,
 +							MDIO_MMD_PCS,
 +							phydev->addr);
 +			if (val < 0)
 +				return val;
 +
 +			val |= MDIO_PCS_CTRL1_CLKSTOP_EN;
 +			phy_write_mmd_indirect(phydev->bus, MDIO_CTRL1,
 +					       MDIO_MMD_PCS, phydev->addr, val);
 +		}
++=======
+ 			phy_set_bits_mmd(phydev, MDIO_MMD_PCS, MDIO_CTRL1,
+ 					 MDIO_PCS_CTRL1_CLKSTOP_EN);
++>>>>>>> b52c018ddccf (net: phy: make use of new MMD accessors)
  
  		return 0; /* EEE supported */
  	}
* Unmerged path drivers/net/phy/dp83867.c
* Unmerged path drivers/net/phy/dp83tc811.c
* Unmerged path drivers/net/phy/marvell10g.c
* Unmerged path drivers/net/phy/phy-c45.c
* Unmerged path drivers/net/phy/dp83867.c
* Unmerged path drivers/net/phy/dp83tc811.c
* Unmerged path drivers/net/phy/marvell10g.c
* Unmerged path drivers/net/phy/phy-c45.c
* Unmerged path drivers/net/phy/phy.c
