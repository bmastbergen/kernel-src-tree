perf stat: Move 'metric_only_len' to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit ee1760e2cf623bc6834fc3e4e89c6ad030a25dfd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ee1760e2.failed

Move the static 'metric_only_len' variable to 'struct perf_stat_config',
so that it can be passed around and used outside the 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-29-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit ee1760e2cf623bc6834fc3e4e89c6ad030a25dfd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
#	tools/perf/util/stat.h
diff --cc tools/perf/builtin-stat.c
index 13693124ed08,e96cef526ef0..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -204,6 -197,9 +203,12 @@@ static volatile int done = 0
  static struct perf_stat_config stat_config = {
  	.aggr_mode	= AGGR_GLOBAL,
  	.scale		= true,
++<<<<<<< HEAD
++=======
+ 	.unit_width	= 4, /* strlen("unit") */
+ 	.run_count	= 1,
+ 	.metric_only_len = METRIC_ONLY_LEN,
++>>>>>>> ee1760e2cf62 (perf stat: Move 'metric_only_len' to 'struct perf_stat_config')
  };
  
  static bool is_duration_time(struct perf_evsel *evsel)
@@@ -956,7 -854,8 +961,12 @@@ static const char *fixunit(char *buf, s
  	return unit;
  }
  
++<<<<<<< HEAD
 +static void print_metric_only(void *ctx, const char *color, const char *fmt,
++=======
+ static void print_metric_only(struct perf_stat_config *config,
+ 			      void *ctx, const char *color, const char *fmt,
++>>>>>>> ee1760e2cf62 (perf stat: Move 'metric_only_len' to 'struct perf_stat_config')
  			      const char *unit, double val)
  {
  	struct outstate *os = ctx;
@@@ -1001,7 -902,8 +1011,12 @@@ static void new_line_metric(void *ctx _
  {
  }
  
++<<<<<<< HEAD
 +static void print_metric_header(void *ctx, const char *color __maybe_unused,
++=======
+ static void print_metric_header(struct perf_stat_config *config,
+ 				void *ctx, const char *color __maybe_unused,
++>>>>>>> ee1760e2cf62 (perf stat: Move 'metric_only_len' to 'struct perf_stat_config')
  				const char *fmt __maybe_unused,
  				const char *unit, double val __maybe_unused)
  {
@@@ -1011,40 -913,12 +1026,40 @@@
  	if (!valid_only_metric(unit))
  		return;
  	unit = fixunit(tbuf, os->evsel, unit);
 -	if (config->csv_output)
 -		fprintf(os->fh, "%s%s", unit, config->csv_sep);
 +	if (csv_output)
 +		fprintf(os->fh, "%s%s", unit, csv_sep);
  	else
- 		fprintf(os->fh, "%*s ", metric_only_len, unit);
+ 		fprintf(os->fh, "%*s ", config->metric_only_len, unit);
  }
  
 +static void nsec_printout(int id, int nr, struct perf_evsel *evsel, double avg)
 +{
 +	FILE *output = stat_config.output;
 +	double msecs = avg / NSEC_PER_MSEC;
 +	const char *fmt_v, *fmt_n;
 +	char name[25];
 +
 +	fmt_v = csv_output ? "%.6f%s" : "%18.6f%s";
 +	fmt_n = csv_output ? "%s" : "%-25s";
 +
 +	aggr_printout(evsel, id, nr);
 +
 +	scnprintf(name, sizeof(name), "%s%s",
 +		  perf_evsel__name(evsel), csv_output ? "" : " (msec)");
 +
 +	fprintf(output, fmt_v, msecs, csv_sep);
 +
 +	if (csv_output)
 +		fprintf(output, "%s%s", evsel->unit, csv_sep);
 +	else
 +		fprintf(output, "%-*s%s", unit_width, evsel->unit, csv_sep);
 +
 +	fprintf(output, fmt_n, name);
 +
 +	if (evsel->cgrp)
 +		fprintf(output, "%s%s", csv_sep, evsel->cgrp->name);
 +}
 +
  static int first_shadow_cpu(struct perf_evsel *evsel, int id)
  {
  	int i;
diff --cc tools/perf/util/stat.h
index 4b88aef959fb,e70e6d93ee1b..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -93,9 -98,13 +93,14 @@@ struct perf_stat_config 
  	unsigned int		 interval;
  	unsigned int		 timeout;
  	unsigned int		 initial_delay;
++<<<<<<< HEAD
++=======
+ 	unsigned int		 unit_width;
+ 	unsigned int		 metric_only_len;
++>>>>>>> ee1760e2cf62 (perf stat: Move 'metric_only_len' to 'struct perf_stat_config')
  	int			 times;
 -	int			 run_count;
  	struct runtime_stat	*stats;
  	int			 stats_num;
 -	const char		*csv_sep;
  };
  
  void update_stats(struct stats *stats, u64 val);
* Unmerged path tools/perf/builtin-stat.c
* Unmerged path tools/perf/util/stat.h
