kvm/x86: Rearrange func's declarations inside Hyper-V header

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Andrey Smetanin <asmetanin@virtuozzo.com>
commit e18eaeed2b056094a5626288d47ceefc740c90e5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e18eaeed.failed

This rearrangement places functions declarations together
according to their functionality, so future additions
will be simplier.

	Signed-off-by: Andrey Smetanin <asmetanin@virtuozzo.com>
	Reviewed-by: Roman Kagan <rkagan@virtuozzo.com>
CC: Gleb Natapov <gleb@kernel.org>
CC: Paolo Bonzini <pbonzini@redhat.com>
CC: "K. Y. Srinivasan" <kys@microsoft.com>
CC: Haiyang Zhang <haiyangz@microsoft.com>
CC: Vitaly Kuznetsov <vkuznets@redhat.com>
CC: Roman Kagan <rkagan@virtuozzo.com>
CC: Denis V. Lunev <den@openvz.org>
CC: qemu-devel@nongnu.org
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit e18eaeed2b056094a5626288d47ceefc740c90e5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/hyperv.h
diff --cc arch/x86/kvm/hyperv.h
index 638d4fbc7358,9483d49a5afa..000000000000
--- a/arch/x86/kvm/hyperv.h
+++ b/arch/x86/kvm/hyperv.h
@@@ -24,12 -24,32 +24,42 @@@
  #ifndef __ARCH_X86_KVM_HYPERV_H__
  #define __ARCH_X86_KVM_HYPERV_H__
  
++<<<<<<< HEAD
 +int kvm_hv_set_msr_common(struct kvm_vcpu *vcpu, u32 msr, u64 data, bool host);
 +int kvm_hv_get_msr_common(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata);
 +bool kvm_hv_hypercall_enabled(struct kvm *kvm);
 +int kvm_hv_hypercall(struct kvm_vcpu *vcpu);
 +
 +void kvm_hv_setup_tsc_page(struct kvm *kvm,
 +			   struct pvclock_vcpu_time_info *hv_clock);
++=======
+ static inline struct kvm_vcpu_hv_synic *vcpu_to_synic(struct kvm_vcpu *vcpu)
+ {
+ 	return &vcpu->arch.hyperv.synic;
+ }
+ 
+ static inline struct kvm_vcpu *synic_to_vcpu(struct kvm_vcpu_hv_synic *synic)
+ {
+ 	struct kvm_vcpu_hv *hv;
+ 	struct kvm_vcpu_arch *arch;
+ 
+ 	hv = container_of(synic, struct kvm_vcpu_hv, synic);
+ 	arch = container_of(hv, struct kvm_vcpu_arch, hyperv);
+ 	return container_of(arch, struct kvm_vcpu, arch);
+ }
+ 
+ int kvm_hv_set_msr_common(struct kvm_vcpu *vcpu, u32 msr, u64 data, bool host);
+ int kvm_hv_get_msr_common(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata);
+ 
+ bool kvm_hv_hypercall_enabled(struct kvm *kvm);
+ int kvm_hv_hypercall(struct kvm_vcpu *vcpu);
+ 
+ void kvm_hv_irq_routing_update(struct kvm *kvm);
+ int kvm_hv_synic_set_irq(struct kvm *kvm, u32 vcpu_id, u32 sint);
+ void kvm_hv_synic_send_eoi(struct kvm_vcpu *vcpu, int vector);
+ int kvm_hv_activate_synic(struct kvm_vcpu *vcpu);
+ 
+ void kvm_hv_vcpu_init(struct kvm_vcpu *vcpu);
++>>>>>>> e18eaeed2b05 (kvm/x86: Rearrange func's declarations inside Hyper-V header)
  
  #endif
* Unmerged path arch/x86/kvm/hyperv.h
