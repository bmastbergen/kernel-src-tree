net/mlx5e: Refactor XDP counters

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Refactor XDP counters (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 93.33%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit 890388ad6f6b3740265173fa5296ece5d945e977
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/890388ad.failed

Separate the XDP counters into two sets:
(1) One set reside in the RQ stats, and they monitor XDP stats
in the RQ side.
(2) Another set is per XDP-SQ, and they monitor XDP stats that
are related to XDP transmit flow.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Eugenia Emantayev <eugenia@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 890388ad6f6b3740265173fa5296ece5d945e977)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/xdp.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 6cb0654a5d0a,5a6c4403a3e2..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -864,12 -1000,14 +864,17 @@@ static int mlx5e_alloc_xdpsq(struct mlx
  	sq->channel   = c;
  	sq->uar_map   = mdev->mlx5e_res.bfreg.map;
  	sq->min_inline_mode = params->tx_min_inline_mode;
++<<<<<<< HEAD
++=======
+ 	sq->hw_mtu    = MLX5E_SW2HW_MTU(params, params->sw_mtu);
+ 	sq->stats     = &c->priv->channel_stats[c->ix].rq_xdpsq;
++>>>>>>> 890388ad6f6b (net/mlx5e: Refactor XDP counters)
  
  	param->wq.db_numa_node = cpu_to_node(c->cpu);
 -	err = mlx5_wq_cyc_create(mdev, &param->wq, sqc_wq, wq, &sq->wq_ctrl);
 +	err = mlx5_wq_cyc_create(mdev, &param->wq, sqc_wq, &sq->wq, &sq->wq_ctrl);
  	if (err)
  		return err;
 -	wq->db = &wq->db[MLX5_SND_DBR];
 +	sq->wq.db = &sq->wq.db[MLX5_SND_DBR];
  
  	err = mlx5e_alloc_xdpsq_db(sq, cpu_to_node(c->cpu));
  	if (err)
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
index 764a2db65154,85b1827b76c6..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
@@@ -51,9 -59,11 +51,16 @@@ static const struct counter_desc sw_sta
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_csum_complete) },
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_csum_unnecessary_inner) },
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_xdp_drop) },
++<<<<<<< HEAD
 +	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_xdp_tx) },
 +	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_xdp_tx_cqe) },
++=======
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_xdp_redirect) },
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_xdp_tx_xmit) },
++>>>>>>> 890388ad6f6b (net/mlx5e: Refactor XDP counters)
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_xdp_tx_full) },
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_xdp_tx_err) },
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_xdp_tx_cqe) },
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, tx_csum_none) },
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, tx_csum_partial) },
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, tx_csum_partial_inner) },
@@@ -125,10 -144,12 +133,19 @@@ static void mlx5e_grp_sw_update_stats(s
  		s->rx_csum_complete += rq_stats->csum_complete;
  		s->rx_csum_unnecessary += rq_stats->csum_unnecessary;
  		s->rx_csum_unnecessary_inner += rq_stats->csum_unnecessary_inner;
++<<<<<<< HEAD
 +		s->rx_xdp_drop += rq_stats->xdp_drop;
 +		s->rx_xdp_tx += rq_stats->xdp_tx;
 +		s->rx_xdp_tx_cqe  += rq_stats->xdp_tx_cqe;
 +		s->rx_xdp_tx_full += rq_stats->xdp_tx_full;
++=======
+ 		s->rx_xdp_drop     += rq_stats->xdp_drop;
+ 		s->rx_xdp_redirect += rq_stats->xdp_redirect;
+ 		s->rx_xdp_tx_xmit  += xdpsq_stats->xmit;
+ 		s->rx_xdp_tx_full  += xdpsq_stats->full;
+ 		s->rx_xdp_tx_err   += xdpsq_stats->err;
+ 		s->rx_xdp_tx_cqe   += xdpsq_stats->cqes;
++>>>>>>> 890388ad6f6b (net/mlx5e: Refactor XDP counters)
  		s->rx_wqe_err   += rq_stats->wqe_err;
  		s->rx_mpwqe_filler_cqes    += rq_stats->mpwqe_filler_cqes;
  		s->rx_mpwqe_filler_strides += rq_stats->mpwqe_filler_strides;
@@@ -141,7 -162,12 +158,16 @@@
  		s->rx_cache_empty += rq_stats->cache_empty;
  		s->rx_cache_busy  += rq_stats->cache_busy;
  		s->rx_cache_waive += rq_stats->cache_waive;
++<<<<<<< HEAD
 +		s->ch_eq_rearm += ch_stats->eq_rearm;
++=======
+ 		s->rx_congst_umr  += rq_stats->congst_umr;
+ 		s->ch_events      += ch_stats->events;
+ 		s->ch_poll        += ch_stats->poll;
+ 		s->ch_arm         += ch_stats->arm;
+ 		s->ch_aff_change  += ch_stats->aff_change;
+ 		s->ch_eq_rearm    += ch_stats->eq_rearm;
++>>>>>>> 890388ad6f6b (net/mlx5e: Refactor XDP counters)
  
  		for (j = 0; j < priv->max_opened_tc; j++) {
  			struct mlx5e_sq_stats *sq_stats = &channel_stats->sq[j];
@@@ -1073,9 -1131,7 +1099,13 @@@ static const struct counter_desc rq_sta
  	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, csum_unnecessary_inner) },
  	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, csum_none) },
  	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, xdp_drop) },
++<<<<<<< HEAD
 +	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, xdp_tx) },
 +	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, xdp_tx_cqe) },
 +	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, xdp_tx_full) },
++=======
+ 	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, xdp_redirect) },
++>>>>>>> 890388ad6f6b (net/mlx5e: Refactor XDP counters)
  	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, lro_packets) },
  	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, lro_bytes) },
  	{ MLX5E_DECLARE_RX_STAT(struct mlx5e_rq_stats, removed_vlan_packets) },
@@@ -1112,7 -1168,21 +1142,14 @@@ static const struct counter_desc sq_sta
  	{ MLX5E_DECLARE_TX_STAT(struct mlx5e_sq_stats, cqe_err) },
  };
  
+ static const struct counter_desc rq_xdpsq_stats_desc[] = {
+ 	{ MLX5E_DECLARE_RQ_XDPSQ_STAT(struct mlx5e_xdpsq_stats, xmit) },
+ 	{ MLX5E_DECLARE_RQ_XDPSQ_STAT(struct mlx5e_xdpsq_stats, full) },
+ 	{ MLX5E_DECLARE_RQ_XDPSQ_STAT(struct mlx5e_xdpsq_stats, err) },
+ 	{ MLX5E_DECLARE_RQ_XDPSQ_STAT(struct mlx5e_xdpsq_stats, cqes) },
+ };
+ 
  static const struct counter_desc ch_stats_desc[] = {
 -	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, events) },
 -	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, poll) },
 -	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, arm) },
 -	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, aff_change) },
  	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, eq_rearm) },
  };
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
index 9c603217203a,95e1f32c67d9..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
@@@ -69,9 -71,11 +70,16 @@@ struct mlx5e_sw_stats 
  	u64 rx_csum_complete;
  	u64 rx_csum_unnecessary_inner;
  	u64 rx_xdp_drop;
++<<<<<<< HEAD
 +	u64 rx_xdp_tx;
 +	u64 rx_xdp_tx_cqe;
++=======
+ 	u64 rx_xdp_redirect;
+ 	u64 rx_xdp_tx_xmit;
++>>>>>>> 890388ad6f6b (net/mlx5e: Refactor XDP counters)
  	u64 rx_xdp_tx_full;
+ 	u64 rx_xdp_tx_err;
+ 	u64 rx_xdp_tx_cqe;
  	u64 tx_csum_none;
  	u64 tx_csum_partial;
  	u64 tx_csum_partial_inner;
@@@ -167,9 -181,7 +175,13 @@@ struct mlx5e_rq_stats 
  	u64 lro_bytes;
  	u64 removed_vlan_packets;
  	u64 xdp_drop;
++<<<<<<< HEAD
 +	u64 xdp_tx;
 +	u64 xdp_tx_cqe;
 +	u64 xdp_tx_full;
++=======
+ 	u64 xdp_redirect;
++>>>>>>> 890388ad6f6b (net/mlx5e: Refactor XDP counters)
  	u64 wqe_err;
  	u64 mpwqe_filler_cqes;
  	u64 mpwqe_filler_strides;
@@@ -205,7 -226,18 +217,14 @@@ struct mlx5e_sq_stats 
  	u64 cqe_err;
  };
  
+ struct mlx5e_xdpsq_stats {
+ 	u64 xmit;
+ 	u64 full;
+ 	u64 err;
+ 	u64 cqes;
+ };
+ 
  struct mlx5e_ch_stats {
 -	u64 events;
 -	u64 poll;
 -	u64 arm;
 -	u64 aff_change;
  	u64 eq_rearm;
  };
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/xdp.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en.h b/drivers/net/ethernet/mellanox/mlx5/core/en.h
index d500f9aa1bd7..a7a50aff44d3 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@ -400,6 +400,7 @@ struct mlx5e_xdpsq {
 
 	/* read only */
 	struct mlx5_wq_cyc         wq;
+	struct mlx5e_xdpsq_stats  *stats;
 	void __iomem              *uar_map;
 	u32                        sqn;
 	struct device             *pdev;
@@ -581,6 +582,7 @@ struct mlx5e_channel_stats {
 	struct mlx5e_ch_stats ch;
 	struct mlx5e_sq_stats sq[MLX5E_MAX_NUM_TC];
 	struct mlx5e_rq_stats rq;
+	struct mlx5e_xdpsq_stats rq_xdpsq;
 } ____cacheline_aligned_in_smp;
 
 enum mlx5e_traffic_types {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/xdp.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
