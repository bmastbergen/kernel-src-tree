fuse: extract fuse_find_writeback() helper

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 2fe93bd43264242e4568763d1b183b1cc58066ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/2fe93bd4.failed

Call this from fuse_range_is_writeback() and fuse_writepage_in_flight().

Turn a BUG_ON() into a WARN_ON() in the process.

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 2fe93bd43264242e4568763d1b183b1cc58066ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/file.c
diff --cc fs/fuse/file.c
index d851e606d416,927d40dec376..000000000000
--- a/fs/fuse/file.c
+++ b/fs/fuse/file.c
@@@ -369,21 -358,10 +387,24 @@@ static bool fuse_range_is_writeback(str
  {
  	struct fuse_conn *fc = get_fuse_conn(inode);
  	struct fuse_inode *fi = get_fuse_inode(inode);
- 	struct fuse_req *req;
- 	bool found = false;
+ 	bool found;
  
  	spin_lock(&fc->lock);
++<<<<<<< HEAD
 +	list_for_each_entry(req, &fi->writepages, writepages_entry) {
 +		pgoff_t curr_index;
 +
 +		BUG_ON(req->inode != inode);
 +		curr_index = req->misc.write.in.offset >> PAGE_CACHE_SHIFT;
 +		if (idx_from < curr_index + req->num_pages &&
 +		    curr_index <= idx_to) {
 +			found = true;
 +			break;
 +		}
 +	}
++=======
+ 	found = fuse_find_writeback(fi, idx_from, idx_to);
++>>>>>>> 2fe93bd43264 (fuse: extract fuse_find_writeback() helper)
  	spin_unlock(&fc->lock);
  
  	return found;
@@@ -1789,18 -1757,11 +1809,24 @@@ static bool fuse_writepage_in_flight(st
  
  	spin_lock(&fc->lock);
  	list_del(&new_req->writepages_entry);
++<<<<<<< HEAD
 +	list_for_each_entry(old_req, &fi->writepages, writepages_entry) {
 +		BUG_ON(old_req->inode != new_req->inode);
 +		curr_index = old_req->misc.write.in.offset >> PAGE_CACHE_SHIFT;
 +		if (curr_index <= page->index &&
 +		    page->index < curr_index + old_req->num_pages) {
 +			found = true;
 +			break;
 +		}
 +	}
 +	if (!found) {
++=======
+ 	old_req = fuse_find_writeback(fi, page->index, page->index);
+ 	if (!old_req) {
++>>>>>>> 2fe93bd43264 (fuse: extract fuse_find_writeback() helper)
  		list_add(&new_req->writepages_entry, &fi->writepages);
- 		goto out_unlock;
+ 		spin_unlock(&fc->lock);
+ 		return false;
  	}
  
  	new_req->num_pages = 1;
* Unmerged path fs/fuse/file.c
