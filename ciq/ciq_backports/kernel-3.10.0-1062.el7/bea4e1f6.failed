net/mlx5: Expose new packet reformat capabilities

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [kernel] mlx5: Expose new packet reformat capabilities (Alaa Hleihel) [1641361 1642498]
Rebuild_FUZZ: 95.74%
commit-author Mark Bloch <markb@mellanox.com>
commit bea4e1f6c6c5744d467ebf8b0699f5e391835130
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/bea4e1f6.failed

Expose new abilities when creating a packet reformat context.

The new types which can be created are:
MLX5_REFORMAT_TYPE_L2_TO_L2_TUNNEL: Ability to create generic encap
operation to be done by the HW.

MLX5_REFORMAT_TYPE_L3_TUNNEL_TO_L2: Ability to create generic decap
operation where the inner packet doesn't contain L2.

MLX5_REFORMAT_TYPE_L2_TO_L3_TUNNEL: Ability to create generic encap
operation to be done by the HW. The L2 of the original packet
is dropped.

	Signed-off-by: Mark Bloch <markb@mellanox.com>
	Reviewed-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit bea4e1f6c6c5744d467ebf8b0699f5e391835130)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index fc6678ef9c33,3a4a2e0567e9..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -324,8 -341,15 +324,20 @@@ struct mlx5_ifc_flow_table_prop_layout_
  	u8         reserved_at_9[0x1];
  	u8         pop_vlan[0x1];
  	u8         push_vlan[0x1];
++<<<<<<< HEAD
 +	u8         reserved_at_c[0x14];
 +
++=======
+ 	u8         reserved_at_c[0x1];
+ 	u8         pop_vlan_2[0x1];
+ 	u8         push_vlan_2[0x1];
+ 	u8	   reformat_and_vlan_action[0x1];
+ 	u8	   reserved_at_10[0x2];
+ 	u8	   reformat_l3_tunnel_to_l2[0x1];
+ 	u8	   reformat_l2_to_l3_tunnel[0x1];
+ 	u8	   reformat_and_modify_action[0x1];
+ 	u8         reserved_at_14[0xb];
++>>>>>>> bea4e1f6c6c5 (net/mlx5: Expose new packet reformat capabilities)
  	u8         reserved_at_20[0x2];
  	u8         log_max_ft_size[0x6];
  	u8         log_max_modify_header_context[0x8];
@@@ -4788,11 -4859,14 +4806,19 @@@ struct mlx5_ifc_alloc_encap_header_out_
  };
  
  enum {
++<<<<<<< HEAD
 +	MLX5_HEADER_TYPE_VXLAN = 0x0,
 +	MLX5_HEADER_TYPE_NVGRE = 0x1,
++=======
+ 	MLX5_REFORMAT_TYPE_L2_TO_VXLAN = 0x0,
+ 	MLX5_REFORMAT_TYPE_L2_TO_NVGRE = 0x1,
+ 	MLX5_REFORMAT_TYPE_L2_TO_L2_TUNNEL = 0x2,
+ 	MLX5_REFORMAT_TYPE_L3_TUNNEL_TO_L2 = 0x3,
+ 	MLX5_REFORMAT_TYPE_L2_TO_L3_TUNNEL = 0x4,
++>>>>>>> bea4e1f6c6c5 (net/mlx5: Expose new packet reformat capabilities)
  };
  
 -struct mlx5_ifc_alloc_packet_reformat_context_in_bits {
 +struct mlx5_ifc_alloc_encap_header_in_bits {
  	u8         opcode[0x10];
  	u8         reserved_at_10[0x10];
  
* Unmerged path include/linux/mlx5/mlx5_ifc.h
