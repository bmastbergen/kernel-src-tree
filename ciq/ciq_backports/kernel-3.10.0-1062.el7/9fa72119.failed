kvm: x86: Introduce kvm_mmu_calc_root_page_role()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Junaid Shahid <junaids@google.com>
commit 9fa72119b24db78d665a4034b5a0d349b0289b08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/9fa72119.failed

These functions factor out the base role calculation from the
corresponding kvm_init_*_mmu() functions. The new functions return
what would be the role assigned to a root page in the current VCPU
state. This can be masked with mmu_base_role_mask to derive the base
role.

	Signed-off-by: Junaid Shahid <junaids@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 9fa72119b24db78d665a4034b5a0d349b0289b08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu.c
diff --cc arch/x86/kvm/mmu.c
index db86a346eaea,afb865d054c2..000000000000
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@@ -205,7 -233,8 +216,12 @@@ static const u64 shadow_acc_track_saved
  static const u64 shadow_acc_track_saved_bits_shift = PT64_SECOND_AVAIL_BITS_SHIFT;
  
  static void mmu_spte_set(u64 *sptep, u64 spte);
++<<<<<<< HEAD
 +static void mmu_free_roots(struct kvm_vcpu *vcpu);
++=======
+ static union kvm_mmu_page_role
+ kvm_mmu_calc_root_page_role(struct kvm_vcpu *vcpu);
++>>>>>>> 9fa72119b24d (kvm: x86: Introduce kvm_mmu_calc_root_page_role())
  
  void kvm_mmu_set_mmio_spte_mask(u64 mmio_mask, u64 mmio_value)
  {
@@@ -4513,11 -4743,11 +4576,10 @@@ void kvm_init_shadow_ept_mmu(struct kvm
  	context->sync_page = ept_sync_page;
  	context->invlpg = ept_invlpg;
  	context->update_pte = ept_update_pte;
 -	context->root_level = PT64_ROOT_4LEVEL;
 +	context->root_level = context->shadow_root_level;
  	context->root_hpa = INVALID_PAGE;
 -	context->prev_root = KVM_MMU_ROOT_INFO_INVALID;
  	context->direct_map = false;
- 	context->base_role.ad_disabled = !accessed_dirty;
- 	context->base_role.guest_mode = 1;
+ 	context->base_role.word = root_page_role.word & mmu_base_role_mask.word;
  	update_permission_bitmask(vcpu, context, true);
  	update_pkru_bitmask(vcpu, context, true);
  	update_last_nonleaf_level(vcpu, context);
* Unmerged path arch/x86/kvm/mmu.c
