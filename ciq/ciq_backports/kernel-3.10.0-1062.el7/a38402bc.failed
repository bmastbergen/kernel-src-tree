flow_dissector: dissect tunnel info

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Simon Horman <simon.horman@netronome.com>
commit a38402bc50709aac76796a955a15152a76e3fd4e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a38402bc.failed

Move dissection of tunnel info from the flower classifier to the flow
dissector where all other dissection occurs.  This should not have any
behavioural affect on other users of the flow dissector.

	Signed-off-by: Simon Horman <simon.horman@netronome.com>
	Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a38402bc50709aac76796a955a15152a76e3fd4e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/flow_dissector.c
diff --cc net/core/flow_dissector.c
index ec6a8d0a3cc7,1f5caafb4492..000000000000
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@@ -4,12 -4,12 +4,17 @@@
  #include <linux/ip.h>
  #include <linux/ipv6.h>
  #include <linux/if_vlan.h>
++<<<<<<< HEAD
++=======
+ #include <net/dsa.h>
+ #include <net/dst_metadata.h>
++>>>>>>> a38402bc5070 (flow_dissector: dissect tunnel info)
  #include <net/ip.h>
  #include <net/ipv6.h>
 +#ifndef __GENKSYMS__
  #include <net/gre.h>
  #include <net/pptp.h>
 +#endif
  #include <linux/igmp.h>
  #include <linux/icmp.h>
  #include <linux/sctp.h>
* Unmerged path net/core/flow_dissector.c
diff --git a/net/sched/cls_flower.c b/net/sched/cls_flower.c
index fe81e54c0234..8de818bcec47 100644
--- a/net/sched/cls_flower.c
+++ b/net/sched/cls_flower.c
@@ -155,37 +155,12 @@ static int fl_classify(struct sk_buff *skb, const struct tcf_proto *tp,
 	struct cls_fl_filter *f;
 	struct fl_flow_key skb_key;
 	struct fl_flow_key skb_mkey;
-	struct ip_tunnel_info *info;
 
 	if (!atomic_read(&head->ht.nelems))
 		return -1;
 
 	fl_clear_masked_range(&skb_key, &head->mask);
 
-	info = skb_tunnel_info(skb);
-	if (info) {
-		struct ip_tunnel_key *key = &info->key;
-
-		switch (ip_tunnel_info_af(info)) {
-		case AF_INET:
-			skb_key.enc_control.addr_type =
-				FLOW_DISSECTOR_KEY_IPV4_ADDRS;
-			skb_key.enc_ipv4.src = key->u.ipv4.src;
-			skb_key.enc_ipv4.dst = key->u.ipv4.dst;
-			break;
-		case AF_INET6:
-			skb_key.enc_control.addr_type =
-				FLOW_DISSECTOR_KEY_IPV6_ADDRS;
-			skb_key.enc_ipv6.src = key->u.ipv6.src;
-			skb_key.enc_ipv6.dst = key->u.ipv6.dst;
-			break;
-		}
-
-		skb_key.enc_key_id.keyid = tunnel_id_to_key32(key->tun_id);
-		skb_key.enc_tp.src = key->tp_src;
-		skb_key.enc_tp.dst = key->tp_dst;
-	}
-
 	skb_key.indev_ifindex = skb->skb_iif;
 	/* skb_flow_dissect() does not set n_proto in case an unknown protocol,
 	 * so do it rather here.
