kvm: x86: Add AMD's EX_CFG to the list of ignored MSRs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Eduardo Habkost <ehabkost@redhat.com>
commit 0e1b869fff60c81b510c2d00602d778f8f59dd9a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0e1b869f.failed

Some guests OSes (including Windows 10) write to MSR 0xc001102c
on some cases (possibly while trying to apply a CPU errata).
Make KVM ignore reads and writes to that MSR, so the guest won't
crash.

The MSR is documented as "Execution Unit Configuration (EX_CFG)",
at AMD's "BIOS and Kernel Developer's Guide (BKDG) for AMD Family
15h Models 00h-0Fh Processors".

	Cc: stable@vger.kernel.org
	Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 0e1b869fff60c81b510c2d00602d778f8f59dd9a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/msr-index.h
diff --cc arch/x86/include/asm/msr-index.h
index 49b8d668bfc1,9e39cc8bd989..000000000000
--- a/arch/x86/include/asm/msr-index.h
+++ b/arch/x86/include/asm/msr-index.h
@@@ -362,7 -390,7 +362,11 @@@
  #define MSR_F15H_NB_PERF_CTR		0xc0010241
  #define MSR_F15H_PTSC			0xc0010280
  #define MSR_F15H_IC_CFG			0xc0011021
++<<<<<<< HEAD
 +#define MSR_F15H_IC_CFG_DIS_IND		BIT_ULL(14)
++=======
+ #define MSR_F15H_EX_CFG			0xc001102c
++>>>>>>> 0e1b869fff60 (kvm: x86: Add AMD's EX_CFG to the list of ignored MSRs)
  
  /* Fam 10h MSRs */
  #define MSR_FAM10H_MMIO_CONF_BASE	0xc0010058
* Unmerged path arch/x86/include/asm/msr-index.h
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index bc19a3517278..72cafdbef60c 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -2110,6 +2110,7 @@ int kvm_set_msr_common(struct kvm_vcpu *vcpu, struct msr_data *msr_info)
 	case MSR_AMD64_PATCH_LOADER:
 	case MSR_AMD64_BU_CFG2:
 	case MSR_AMD64_DC_CFG:
+	case MSR_F15H_EX_CFG:
 		break;
 
 	case MSR_EFER:
@@ -2375,6 +2376,7 @@ int kvm_get_msr_common(struct kvm_vcpu *vcpu, struct msr_data *msr_info)
 	case MSR_AMD64_BU_CFG2:
 	case MSR_IA32_PERF_CTL:
 	case MSR_AMD64_DC_CFG:
+	case MSR_F15H_EX_CFG:
 		msr_info->data = 0;
 		break;
 	case MSR_K7_EVNTSEL0 ... MSR_K7_EVNTSEL3:
