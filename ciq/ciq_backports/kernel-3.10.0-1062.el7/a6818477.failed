xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Christoph Hellwig <hch@lst.de>
commit a681847796df31c036810bce97003f687e1db5f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a6818477.failed

Stop poking before and after the index and just increment or decrement
it while doing our operations on it to prepare for a new extent list
implementation.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit a681847796df31c036810bce97003f687e1db5f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_bmap.c
diff --cc fs/xfs/libxfs/xfs_bmap.c
index 905742f2f1f9,3667fb1f3961..000000000000
--- a/fs/xfs/libxfs/xfs_bmap.c
+++ b/fs/xfs/libxfs/xfs_bmap.c
@@@ -2202,14 -2152,11 +2202,20 @@@ xfs_bmap_add_extent_unwritten_real
  		 * Setting all of a previous oldext extent to newext.
  		 * The left and right neighbors are both contiguous with new.
  		 */
++<<<<<<< HEAD
 +		--*idx;
 +
 +		trace_xfs_bmap_pre_update(ip, *idx, state, _THIS_IP_);
 +		LEFT.br_blockcount += PREV.br_blockcount + RIGHT.br_blockcount;
 +		xfs_iext_update_extent(ifp, *idx, &LEFT);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
++=======
+ 		LEFT.br_blockcount += PREV.br_blockcount + RIGHT.br_blockcount;
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
- 		xfs_iext_remove(ip, *idx + 1, 2, state);
+ 		xfs_iext_remove(ip, *idx, 2, state);
+ 		--*idx;
+ 		xfs_iext_update_extent(ip, state, *idx, &LEFT);
  		XFS_IFORK_NEXT_SET(ip, whichfork,
  				XFS_IFORK_NEXTENTS(ip, whichfork) - 2);
  		if (cur == NULL)
@@@ -2246,14 -2190,11 +2252,20 @@@
  		 * Setting all of a previous oldext extent to newext.
  		 * The left neighbor is contiguous, the right is not.
  		 */
++<<<<<<< HEAD
 +		--*idx;
 +
 +		trace_xfs_bmap_pre_update(ip, *idx, state, _THIS_IP_);
 +		LEFT.br_blockcount += PREV.br_blockcount;
 +		xfs_iext_update_extent(ifp, *idx, &LEFT);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
++=======
+ 		LEFT.br_blockcount += PREV.br_blockcount;
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
- 		xfs_iext_remove(ip, *idx + 1, 1, state);
+ 		xfs_iext_remove(ip, *idx, 1, state);
+ 		--*idx;
+ 		xfs_iext_update_extent(ip, state, *idx, &LEFT);
  		XFS_IFORK_NEXT_SET(ip, whichfork,
  				XFS_IFORK_NEXTENTS(ip, whichfork) - 1);
  		if (cur == NULL)
@@@ -2284,13 -2222,14 +2296,20 @@@
  		 * Setting all of a previous oldext extent to newext.
  		 * The right neighbor is contiguous, the left is not.
  		 */
 +		trace_xfs_bmap_pre_update(ip, *idx, state, _THIS_IP_);
  		PREV.br_blockcount += RIGHT.br_blockcount;
  		PREV.br_state = new->br_state;
++<<<<<<< HEAD
 +		xfs_iext_update_extent(ifp, *idx, &PREV);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
++=======
+ 
+ 		++*idx;
+ 		xfs_iext_remove(ip, *idx, 1, state);
+ 		--*idx;
+ 		xfs_iext_update_extent(ip, state, *idx, &PREV);
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
- 		xfs_iext_remove(ip, *idx + 1, 1, state);
  		XFS_IFORK_NEXT_SET(ip, whichfork,
  				XFS_IFORK_NEXTENTS(ip, whichfork) - 1);
  		if (cur == NULL)
@@@ -2349,20 -2280,16 +2368,28 @@@
  		 * Setting the first part of a previous oldext extent to newext.
  		 * The left neighbor is contiguous.
  		 */
 +		trace_xfs_bmap_pre_update(ip, *idx - 1, state, _THIS_IP_);
  		LEFT.br_blockcount += new->br_blockcount;
++<<<<<<< HEAD
 +		xfs_iext_update_extent(ifp, *idx - 1, &LEFT);
 +		trace_xfs_bmap_post_update(ip, *idx - 1, state, _THIS_IP_);
++=======
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
  		old = PREV;
 +		trace_xfs_bmap_pre_update(ip, *idx, state, _THIS_IP_);
  		PREV.br_startoff += new->br_blockcount;
  		PREV.br_startblock += new->br_blockcount;
  		PREV.br_blockcount -= new->br_blockcount;
++<<<<<<< HEAD
 +		xfs_iext_update_extent(ifp, *idx, &PREV);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
++=======
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
+ 		xfs_iext_update_extent(ip, state, *idx, &PREV);
  		--*idx;
+ 		xfs_iext_update_extent(ip, state, *idx, &LEFT);
  
  		if (cur == NULL)
  			rval = XFS_ILOG_DEXT;
@@@ -2400,9 -2320,8 +2427,13 @@@
  		PREV.br_startoff += new->br_blockcount;
  		PREV.br_startblock += new->br_blockcount;
  		PREV.br_blockcount -= new->br_blockcount;
++<<<<<<< HEAD
 +		xfs_iext_update_extent(ifp, *idx, &PREV);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
++=======
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
+ 		xfs_iext_update_extent(ip, state, *idx, &PREV);
  		xfs_iext_insert(ip, *idx, 1, new, state);
  		XFS_IFORK_NEXT_SET(ip, whichfork,
  				XFS_IFORK_NEXTENTS(ip, whichfork) + 1);
@@@ -2434,19 -2349,15 +2465,29 @@@
  		 * The right neighbor is contiguous with the new allocation.
  		 */
  		old = PREV;
 +		trace_xfs_bmap_pre_update(ip, *idx, state, _THIS_IP_);
  		PREV.br_blockcount -= new->br_blockcount;
++<<<<<<< HEAD
 +		xfs_iext_update_extent(ifp, *idx, &PREV);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
 +
 +		++*idx;
++=======
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
 +		trace_xfs_bmap_pre_update(ip, *idx, state, _THIS_IP_);
  		RIGHT.br_startoff = new->br_startoff;
  		RIGHT.br_startblock = new->br_startblock;
  		RIGHT.br_blockcount += new->br_blockcount;
++<<<<<<< HEAD
 +		xfs_iext_update_extent(ifp, *idx, &RIGHT);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
++=======
+ 
+ 		xfs_iext_update_extent(ip, state, *idx, &PREV);
+ 		++*idx;
+ 		xfs_iext_update_extent(ip, state, *idx, &RIGHT);
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
  		if (cur == NULL)
  			rval = XFS_ILOG_DEXT;
@@@ -2480,11 -2385,9 +2521,15 @@@
  		 * The right neighbor is not contiguous.
  		 */
  		old = PREV;
 +		trace_xfs_bmap_pre_update(ip, *idx, state, _THIS_IP_);
  		PREV.br_blockcount -= new->br_blockcount;
++<<<<<<< HEAD
 +		xfs_iext_update_extent(ifp, *idx, &PREV);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
++=======
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
+ 		xfs_iext_update_extent(ip, state, *idx, &PREV);
  		++*idx;
  		xfs_iext_insert(ip, *idx, 1, new, state);
  
@@@ -2524,10 -2421,7 +2569,13 @@@
  		 * One extent becomes three extents.
  		 */
  		old = PREV;
 +		trace_xfs_bmap_pre_update(ip, *idx, state, _THIS_IP_);
  		PREV.br_blockcount = new->br_startoff - PREV.br_startoff;
++<<<<<<< HEAD
 +		xfs_iext_update_extent(ifp, *idx, &PREV);
 +		trace_xfs_bmap_post_update(ip, *idx, state, _THIS_IP_);
++=======
++>>>>>>> a681847796df (xfs: treat idx as a cursor in xfs_bmap_add_extent_unwritten_real)
  
  		r[0] = *new;
  		r[1].br_startoff = new_endoff;
* Unmerged path fs/xfs/libxfs/xfs_bmap.c
