net: Use passed in table for nexthop lookups

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [net] Use passed in table for nexthop lookups (Guillaume Nault) [1535977]
Rebuild_FUZZ: 93.98%
commit-author David Ahern <dsa@cumulusnetworks.com>
commit 3bfd847203c6d89532f836ad3f5b4ff4ced26dd9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/3bfd8472.failed

If a user passes in a table for new routes use that table for nexthop
lookups. Specifically, this solves the case where a connected route does
not exist in the main table, but only another table and then a subsequent
route is added with a next hop using the connected route. ie.,

$ ip route ls
default via 10.0.2.2 dev eth0
10.0.2.0/24 dev eth0  proto kernel  scope link  src 10.0.2.15
169.254.0.0/16 dev eth0  scope link  metric 1003
192.168.56.0/24 dev eth1  proto kernel  scope link  src 192.168.56.51

$ ip route ls table 10
1.1.1.0/24 dev eth2  scope link

Without this patch adding a nexthop route fails:

$ ip route add table 10 2.2.2.0/24 via 1.1.1.10
RTNETLINK answers: Network is unreachable

With this patch the route is added successfully.

	Signed-off-by: David Ahern <dsa@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3bfd847203c6d89532f836ad3f5b4ff4ced26dd9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_semantics.c
diff --cc net/ipv4/fib_semantics.c
index b3ccf81b8829,b7f1d20a9615..000000000000
--- a/net/ipv4/fib_semantics.c
+++ b/net/ipv4/fib_semantics.c
@@@ -787,7 -702,16 +788,20 @@@ static int fib_check_nh(struct fib_conf
  			/* It is not necessary, but requires a bit of thinking */
  			if (fl4.flowi4_scope < RT_SCOPE_LINK)
  				fl4.flowi4_scope = RT_SCOPE_LINK;
++<<<<<<< HEAD
 +			err = fib_lookup(net, &fl4, &res);
++=======
+ 
+ 			if (cfg->fc_table)
+ 				tbl = fib_get_table(net, cfg->fc_table);
+ 
+ 			if (tbl)
+ 				err = fib_table_lookup(tbl, &fl4, &res,
+ 						   FIB_LOOKUP_IGNORE_LINKSTATE);
+ 			else
+ 				err = fib_lookup(net, &fl4, &res,
+ 						 FIB_LOOKUP_IGNORE_LINKSTATE);
++>>>>>>> 3bfd847203c6 (net: Use passed in table for nexthop lookups)
  			if (err) {
  				rcu_read_unlock();
  				return err;
* Unmerged path net/ipv4/fib_semantics.c
