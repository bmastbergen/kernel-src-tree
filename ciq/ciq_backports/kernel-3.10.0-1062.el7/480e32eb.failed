ALSA: pcm: Simplify proc file destruction

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit 480e32ebd524ffdf3d50cc5cac179fb9e44a552d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/480e32eb.failed

The proc files are recursively freed by calling with the root
snd_info_entry object, so we don't have to keep each object for
releasing one by one.  Move the release of the PCM stream proc root at
the beginning, so that we can remove the redundant code and resource.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 480e32ebd524ffdf3d50cc5cac179fb9e44a552d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/core/pcm.c
diff --cc sound/core/pcm.c
index cdf41c403763,bca0bdf3e33c..000000000000
--- a/sound/core/pcm.c
+++ b/sound/core/pcm.c
@@@ -549,14 -546,11 +546,11 @@@ static int snd_pcm_stream_proc_init(str
  	if (entry) {
  		entry->c.text.read = snd_pcm_xrun_debug_read;
  		entry->c.text.write = snd_pcm_xrun_debug_write;
 -		entry->mode |= 0200;
 +		entry->mode |= S_IWUSR;
  		entry->private_data = pstr;
- 		if (snd_info_register(entry) < 0) {
+ 		if (snd_info_register(entry) < 0)
  			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
- 	pstr->proc_xrun_debug_entry = entry;
  #endif
  	return 0;
  }
@@@ -644,13 -620,10 +620,15 @@@ static int snd_pcm_substream_proc_init(
  		entry->private_data = substream;
  		entry->c.text.read = NULL;
  		entry->c.text.write = snd_pcm_xrun_injection_write;
++<<<<<<< HEAD
 +		entry->mode = S_IFREG | S_IWUSR;
 +		if (snd_info_register(entry) < 0) {
++=======
+ 		entry->mode = S_IFREG | 0200;
+ 		if (snd_info_register(entry) < 0)
++>>>>>>> 480e32ebd524 (ALSA: pcm: Simplify proc file destruction)
  			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
- 	substream->proc_xrun_injection_entry = entry;
  #endif /* CONFIG_SND_PCM_XRUN_DEBUG */
  
  	return 0;
diff --git a/include/sound/pcm.h b/include/sound/pcm.h
index dca47ca9a020..b705eab37d97 100644
--- a/include/sound/pcm.h
+++ b/include/sound/pcm.h
@@ -482,15 +482,6 @@ struct snd_pcm_substream {
 #endif
 #ifdef CONFIG_SND_VERBOSE_PROCFS
 	struct snd_info_entry *proc_root;
-	struct snd_info_entry *proc_info_entry;
-	struct snd_info_entry *proc_hw_params_entry;
-	struct snd_info_entry *proc_sw_params_entry;
-	struct snd_info_entry *proc_status_entry;
-	struct snd_info_entry *proc_prealloc_entry;
-	struct snd_info_entry *proc_prealloc_max_entry;
-#ifdef CONFIG_SND_PCM_XRUN_DEBUG
-	struct snd_info_entry *proc_xrun_injection_entry;
-#endif
 #endif /* CONFIG_SND_VERBOSE_PROCFS */
 	/* misc flags */
 	unsigned int hw_opened: 1;
@@ -512,10 +503,8 @@ struct snd_pcm_str {
 #endif
 #ifdef CONFIG_SND_VERBOSE_PROCFS
 	struct snd_info_entry *proc_root;
-	struct snd_info_entry *proc_info_entry;
 #ifdef CONFIG_SND_PCM_XRUN_DEBUG
 	unsigned int xrun_debug;	/* 0 = disabled, 1 = verbose, 2 = stacktrace */
-	struct snd_info_entry *proc_xrun_debug_entry;
 #endif
 #endif
 	struct snd_kcontrol *chmap_kctl; /* channel-mapping controls */
* Unmerged path sound/core/pcm.c
diff --git a/sound/core/pcm_memory.c b/sound/core/pcm_memory.c
index ae33e456708c..c49f7b0f0266 100644
--- a/sound/core/pcm_memory.c
+++ b/sound/core/pcm_memory.c
@@ -93,12 +93,6 @@ static void snd_pcm_lib_preallocate_dma_free(struct snd_pcm_substream *substream
 int snd_pcm_lib_preallocate_free(struct snd_pcm_substream *substream)
 {
 	snd_pcm_lib_preallocate_dma_free(substream);
-#ifdef CONFIG_SND_VERBOSE_PROCFS
-	snd_info_free_entry(substream->proc_prealloc_max_entry);
-	substream->proc_prealloc_max_entry = NULL;
-	snd_info_free_entry(substream->proc_prealloc_entry);
-	substream->proc_prealloc_entry = NULL;
-#endif
 	return 0;
 }
 
@@ -203,21 +197,15 @@ static inline void preallocate_info_init(struct snd_pcm_substream *substream)
 		entry->c.text.write = snd_pcm_lib_preallocate_proc_write;
 		entry->mode |= S_IWUSR;
 		entry->private_data = substream;
-		if (snd_info_register(entry) < 0) {
+		if (snd_info_register(entry) < 0)
 			snd_info_free_entry(entry);
-			entry = NULL;
-		}
 	}
-	substream->proc_prealloc_entry = entry;
 	if ((entry = snd_info_create_card_entry(substream->pcm->card, "prealloc_max", substream->proc_root)) != NULL) {
 		entry->c.text.read = snd_pcm_lib_preallocate_max_proc_read;
 		entry->private_data = substream;
-		if (snd_info_register(entry) < 0) {
+		if (snd_info_register(entry) < 0)
 			snd_info_free_entry(entry);
-			entry = NULL;
-		}
 	}
-	substream->proc_prealloc_max_entry = entry;
 }
 
 #else /* !CONFIG_SND_VERBOSE_PROCFS */
