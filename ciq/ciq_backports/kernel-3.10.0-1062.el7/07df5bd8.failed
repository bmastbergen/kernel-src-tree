r8169: power down chip in probe

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit 07df5bd874f05fbbe694b75df12694f51c344311
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/07df5bd8.failed

The removed code would be called in two situations:
1. interface is brought up never or >10s after driver load
2. after close()

Case 1 we can handle cleaner by ensuring chip is powered down when
leaving probe(). open() callback will power up the chip.

In case 2 we call rtl_pll_power_down() twice currently, from the
close() callback and 10s later when entering runtime-suspend.
This is avoided by this patch.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 07df5bd874f05fbbe694b75df12694f51c344311)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index d6c4a356771b,3d50378a11d7..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -7595,9 -7479,16 +7593,19 @@@ static int rtl_init_one(struct pci_dev 
  
  	pci_set_drvdata(pdev, dev);
  
++<<<<<<< HEAD
++=======
+ 	rc = r8169_mdio_register(tp);
+ 	if (rc)
+ 		return rc;
+ 
+ 	/* chip gets powered up in rtl_open() */
+ 	rtl_pll_power_down(tp);
+ 
++>>>>>>> 07df5bd874f0 (r8169: power down chip in probe)
  	rc = register_netdev(dev);
 -	if (rc)
 -		goto err_mdio_unregister;
 +	if (rc < 0)
 +		return rc;
  
  	netif_info(tp, probe, dev, "%s, %pM, XID %08x, IRQ %d\n",
  		   rtl_chip_infos[chipset].name, dev->dev_addr,
* Unmerged path drivers/net/ethernet/realtek/r8169.c
