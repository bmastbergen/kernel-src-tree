net/mlx5e: RX, Generalise function of SKB frag addition

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: RX, Generalise function of SKB frag addition (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 96.23%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit fa698366b79a07b7cb0e16d3f4b9fd9d89acfd40
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/fa698366.failed

Rename it and pass truesize as an extra argument, as it will be used also
in Legacy RQ in a downstream patch.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit fa698366b79a07b7cb0e16d3f4b9fd9d89acfd40)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 29331bf7aa1d,546e3bc46cd1..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -304,26 -311,17 +304,31 @@@ void mlx5e_dealloc_rx_wqe(struct mlx5e_
  		mlx5e_free_rx_wqe(rq, wi);
  }
  
++<<<<<<< HEAD
 +static inline int mlx5e_mpwqe_strides_per_page(struct mlx5e_rq *rq)
 +{
 +	return rq->mpwqe.num_strides >> MLX5_MPWRQ_WQE_PAGE_ORDER;
 +}
 +
 +static inline void mlx5e_add_skb_frag_mpwqe(struct mlx5e_rq *rq,
 +					    struct sk_buff *skb,
 +					    struct mlx5e_mpw_info *wi,
 +					    u32 page_idx, u32 frag_offset,
 +					    u32 len)
++=======
+ static inline void
+ mlx5e_add_skb_frag(struct mlx5e_rq *rq, struct sk_buff *skb,
+ 		   struct mlx5e_dma_info *di, u32 frag_offset, u32 len,
+ 		   unsigned int truesize)
++>>>>>>> fa698366b79a (net/mlx5e: RX, Generalise function of SKB frag addition)
  {
- 	unsigned int truesize = ALIGN(len, BIT(rq->mpwqe.log_stride_sz));
- 
  	dma_sync_single_for_cpu(rq->pdev,
 -				di->addr + frag_offset,
 +				wi->umr.dma_info[page_idx].addr + frag_offset,
  				len, DMA_FROM_DEVICE);
 -	page_ref_inc(di->page);
 +	wi->skbs_frags[page_idx]++;
  	skb_add_rx_frag(skb, skb_shinfo(skb)->nr_frags,
 -			di->page, frag_offset, len, truesize);
 +			wi->umr.dma_info[page_idx].page, frag_offset,
 +			len, truesize);
  }
  
  static inline void
@@@ -1030,15 -1092,17 +1035,22 @@@ static inline void mlx5e_mpwqe_fill_rx_
  	while (byte_cnt) {
  		u32 pg_consumed_bytes =
  			min_t(u32, PAGE_SIZE - frag_offset, byte_cnt);
+ 		unsigned int truesize =
+ 			ALIGN(pg_consumed_bytes, BIT(rq->mpwqe.log_stride_sz));
  
++<<<<<<< HEAD
 +		mlx5e_add_skb_frag_mpwqe(rq, skb, wi, page_idx, frag_offset,
 +					 pg_consumed_bytes);
++=======
+ 		mlx5e_add_skb_frag(rq, skb, di, frag_offset,
+ 				   pg_consumed_bytes, truesize);
++>>>>>>> fa698366b79a (net/mlx5e: RX, Generalise function of SKB frag addition)
  		byte_cnt -= pg_consumed_bytes;
  		frag_offset = 0;
 -		di++;
 +		page_idx++;
  	}
  	/* copy header */
 -	mlx5e_copy_skb_header_mpwqe(rq->pdev, skb, head_di,
 +	mlx5e_copy_skb_header_mpwqe(rq->pdev, skb, wi, head_page_idx,
  				    head_offset, headlen);
  	/* skb linear part was allocated with headlen and aligned to long */
  	skb->tail += headlen;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
