net/mlx5e: Fix default amount of channels for VF representors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Fix default amount of channels for VF representors (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 96.61%
commit-author Gavi Teitz <gavi@mellanox.com>
commit 8956f0014ea5ed824aae3816fd9e52cf3c85b9d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/8956f001.failed

The default amount of channels a representor opens was erroneously
changed from one to the maximum amount of channels, restore to its
intended value.

Fixes: 779d986d60de ("net/mlx5e: Do not ignore netdevice TX/RX queues number")
	Signed-off-by: Gavi Teitz <gavi@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 8956f0014ea5ed824aae3816fd9e52cf3c85b9d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 0e446984afa7,6a4d782c1de1..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -46,8 -46,7 +46,12 @@@
  
  #define MLX5E_REP_PARAMS_LOG_SQ_SIZE \
  	max(0x6, MLX5E_PARAMS_MINIMUM_LOG_SQ_SIZE)
++<<<<<<< HEAD
 +#define MLX5E_REP_PARAMS_LOG_RQ_SIZE \
 +	max(0x6, MLX5E_PARAMS_MINIMUM_LOG_RQ_SIZE)
++=======
+ #define MLX5E_REP_PARAMS_DEF_NUM_CHANNELS 1
++>>>>>>> 8956f0014ea5 (net/mlx5e: Fix default amount of channels for VF representors)
  
  static const char mlx5e_rep_driver_name[] = "mlx5e_rep";
  
@@@ -977,28 -1067,24 +981,32 @@@ static void mlx5e_build_rep_netdev(stru
  
  	eth_hw_addr_random(netdev);
  
 -	netdev->min_mtu = ETH_MIN_MTU;
 +	netdev->extended->min_mtu = ETH_MIN_MTU;
  	mlx5_query_port_max_mtu(mdev, &max_mtu, 1);
 -	netdev->max_mtu = MLX5E_HW2SW_MTU(&priv->channels.params, max_mtu);
 +	netdev->extended->max_mtu = MLX5E_HW2SW_MTU(&priv->channels.params, max_mtu);
  }
  
 -static int mlx5e_init_rep(struct mlx5_core_dev *mdev,
 -			  struct net_device *netdev,
 -			  const struct mlx5e_profile *profile,
 -			  void *ppriv)
 +static void mlx5e_init_rep(struct mlx5_core_dev *mdev,
 +			   struct net_device *netdev,
 +			   const struct mlx5e_profile *profile,
 +			   void *ppriv)
  {
  	struct mlx5e_priv *priv = netdev_priv(netdev);
 -	int err;
  
 -	err = mlx5e_netdev_init(netdev, priv, mdev, profile, ppriv);
 -	if (err)
 -		return err;
 +	priv->mdev                         = mdev;
 +	priv->netdev                       = netdev;
 +	priv->profile                      = profile;
 +	priv->ppriv                        = ppriv;
 +
++<<<<<<< HEAD
 +	mutex_init(&priv->state_lock);
  
 +	INIT_DELAYED_WORK(&priv->update_stats_work, mlx5e_update_stats_work);
 +
 +	priv->channels.params.num_channels = profile->max_nch(mdev);
++=======
+ 	priv->channels.params.num_channels = MLX5E_REP_PARAMS_DEF_NUM_CHANNELS;
++>>>>>>> 8956f0014ea5 (net/mlx5e: Fix default amount of channels for VF representors)
  
  	mlx5e_build_rep_params(mdev, &priv->channels.params, netdev->mtu);
  	mlx5e_build_rep_netdev(netdev);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
