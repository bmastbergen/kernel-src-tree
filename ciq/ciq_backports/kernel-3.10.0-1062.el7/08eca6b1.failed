ALSA: hda/ca0132 - Add bool variable to enable/disable pci region2 mmio

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Connor McAdams <conmanx360@gmail.com>
commit 08eca6b1f1468a4021bac7b3929fd3eb491e2629
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/08eca6b1.failed

This patch adds the ability to choose whether or not to map the pci
region2, which is used for things such as GPIO on the Recon3D and Sound
Blaster Z.

	Signed-off-by: Connor McAdams <conmanx360@gmail.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 08eca6b1f1468a4021bac7b3929fd3eb491e2629)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_ca0132.c
diff --cc sound/pci/hda/patch_ca0132.c
index 7b95f49cd688,989770797a00..000000000000
--- a/sound/pci/hda/patch_ca0132.c
+++ b/sound/pci/hda/patch_ca0132.c
@@@ -761,6 -964,27 +761,30 @@@ struct ca0132_spec 
  #ifdef ENABLE_TUNING_CONTROLS
  	long cur_ctl_vals[TUNING_CTLS_COUNT];
  #endif
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * The Recon3D, Sound Blaster Z, Sound Blaster ZxR, and Sound Blaster
+ 	 * AE-5 all use PCI region 2 to toggle GPIO and other currently unknown
+ 	 * things.
+ 	 */
+ 	bool use_pci_mmio;
+ 	void __iomem *mem_base;
+ 
+ 	/*
+ 	 * Whether or not to use the alt functions like alt_select_out,
+ 	 * alt_select_in, etc. Only used on desktop codecs for now, because of
+ 	 * surround sound support.
+ 	 */
+ 	bool use_alt_functions;
+ 
+ 	/*
+ 	 * Whether or not to use alt controls:	volume effect sliders, EQ
+ 	 * presets, smart volume presets, and new control names with FX prefix.
+ 	 * Renames PlayEnhancement and CrystalVoice too.
+ 	 */
+ 	bool use_alt_controls;
++>>>>>>> 08eca6b1f146 (ALSA: hda/ca0132 - Add bool variable to enable/disable pci region2 mmio)
  };
  
  /*
@@@ -5096,14 -7564,50 +5120,61 @@@ static int patch_ca0132(struct hda_code
  	else
  		spec->quirk = QUIRK_NONE;
  
++<<<<<<< HEAD
 +	if (spec->quirk == QUIRK_GENERIC_PARSER)
 +		return parse_ca0132_generic(codec);
 +
 +	codec->patch_ops = ca0132_patch_ops;
 +
 +	spec->dsp_state = DSP_DOWNLOAD_INIT;
 +	spec->num_mixers = 1;
 +	spec->mixers[0] = ca0132_mixer;
++=======
+ 	spec->dsp_state = DSP_DOWNLOAD_INIT;
+ 	spec->num_mixers = 1;
+ 
+ 	/* Set which mixers each quirk uses. */
+ 	switch (spec->quirk) {
+ 	case QUIRK_SBZ:
+ 		spec->mixers[0] = sbz_mixer;
+ 		snd_hda_codec_set_name(codec, "Sound Blaster Z");
+ 		break;
+ 	case QUIRK_R3DI:
+ 		spec->mixers[0] = r3di_mixer;
+ 		snd_hda_codec_set_name(codec, "Recon3Di");
+ 		break;
+ 	default:
+ 		spec->mixers[0] = ca0132_mixer;
+ 		break;
+ 	}
+ 
+ 	/* Setup whether or not to use alt functions/controls/pci_mmio */
+ 	switch (spec->quirk) {
+ 	case QUIRK_SBZ:
+ 		spec->use_alt_controls = true;
+ 		spec->use_alt_functions = true;
+ 		spec->use_pci_mmio = true;
+ 		break;
+ 	case QUIRK_R3DI:
+ 		spec->use_alt_controls = true;
+ 		spec->use_alt_functions = true;
+ 		spec->use_pci_mmio = false;
+ 		break;
+ 	default:
+ 		spec->use_alt_controls = false;
+ 		spec->use_alt_functions = false;
+ 		spec->use_pci_mmio = false;
+ 		break;
+ 	}
++>>>>>>> 08eca6b1f146 (ALSA: hda/ca0132 - Add bool variable to enable/disable pci region2 mmio)
+ 
+ 	if (spec->use_pci_mmio) {
+ 		spec->mem_base = pci_iomap(codec->bus->pci, 2, 0xC20);
+ 		if (spec->mem_base == NULL) {
+ 			codec_warn(codec, "pci_iomap failed! Setting quirk to QUIRK_NONE.");
+ 			spec->quirk = QUIRK_NONE;
+ 		}
+ 	}
  
  	spec->base_init_verbs = ca0132_base_init_verbs;
  	spec->base_exit_verbs = ca0132_base_exit_verbs;
* Unmerged path sound/pci/hda/patch_ca0132.c
