console: Expand dummy functions for CFI

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Kees Cook <keescook@chromium.org>
commit c396a5bf457fb60159dcedbd4f48d53a62be030a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c396a5bf.failed

This expands the no-op dummy functions into full prototypes to avoid
indirect call mismatches when running under Control Flow Integrity
checking, like with Clang's -fsanitize=cfi.

Co-Developed-by: Sami Tolvanen <samitolvanen@google.com>
	Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit c396a5bf457fb60159dcedbd4f48d53a62be030a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/console/dummycon.c
#	drivers/video/console/newport_con.c
diff --cc drivers/video/console/dummycon.c
index 459ca88118ec,f2eafe2ed980..000000000000
--- a/drivers/video/console/dummycon.c
+++ b/drivers/video/console/dummycon.c
@@@ -58,20 -90,19 +93,37 @@@ static int dummycon_font_copy(struct vc
   */
  
  const struct consw dummy_con = {
++<<<<<<< HEAD
 +    .owner =		THIS_MODULE,
 +    .con_startup =	dummycon_startup,
 +    .con_init =		dummycon_init,
 +    .con_deinit =	DUMMY,
 +    .con_clear =	DUMMY,
 +    .con_putc =		DUMMY,
 +    .con_putcs =	DUMMY,
 +    .con_cursor =	DUMMY,
 +    .con_scroll =	DUMMY,
 +    .con_switch =	DUMMY,
 +    .con_blank =	DUMMY,
 +    .con_font_set =	DUMMY,
 +    .con_font_get =	DUMMY,
 +    .con_font_default =	DUMMY,
 +    .con_font_copy =	DUMMY,
++=======
+ 	.owner =		THIS_MODULE,
+ 	.con_startup =	dummycon_startup,
+ 	.con_init =		dummycon_init,
+ 	.con_deinit =	dummycon_deinit,
+ 	.con_clear =	dummycon_clear,
+ 	.con_putc =		dummycon_putc,
+ 	.con_putcs =	dummycon_putcs,
+ 	.con_cursor =	dummycon_cursor,
+ 	.con_scroll =	dummycon_scroll,
+ 	.con_switch =	dummycon_switch,
+ 	.con_blank =	dummycon_blank,
+ 	.con_font_set =	dummycon_font_set,
+ 	.con_font_default =	dummycon_font_default,
+ 	.con_font_copy =	dummycon_font_copy,
++>>>>>>> c396a5bf457f (console: Expand dummy functions for CFI)
  };
  EXPORT_SYMBOL_GPL(dummy_con);
diff --cc drivers/video/console/newport_con.c
index a232900417d3,6897bd0fc00e..000000000000
--- a/drivers/video/console/newport_con.c
+++ b/drivers/video/console/newport_con.c
@@@ -673,37 -673,7 +673,41 @@@ static bool newport_scroll(struct vc_da
  	return true;
  }
  
++<<<<<<< HEAD
 +static void newport_bmove(struct vc_data *vc, int sy, int sx, int dy,
 +			  int dx, int h, int w)
 +{
 +	short xs, ys, xe, ye, xoffs, yoffs, tmp;
 +
 +	xs = sx << 3;
 +	xe = ((sx + w) << 3) - 1;
 +	/*
 +	 * as bmove is only used to move stuff around in the same line
 +	 * (h == 1), we don't care about wrap arounds caused by topscan != 0
 +	 */
 +	ys = ((sy << 4) + topscan) & 0x3ff;
 +	ye = (((sy + h) << 4) - 1 + topscan) & 0x3ff;
 +	xoffs = (dx - sx) << 3;
 +	yoffs = (dy - sy) << 4;
 +	if (xoffs > 0) {
 +		/* move to the right, exchange starting points */
 +		tmp = xe;
 +		xe = xs;
 +		xs = tmp;
 +	}
 +	newport_wait(npregs);
 +	npregs->set.drawmode0 = (NPORT_DMODE0_S2S | NPORT_DMODE0_BLOCK |
 +				 NPORT_DMODE0_DOSETUP | NPORT_DMODE0_STOPX
 +				 | NPORT_DMODE0_STOPY);
 +	npregs->set.xystarti = (xs << 16) | ys;
 +	npregs->set.xyendi = (xe << 16) | ye;
 +	npregs->go.xymove = (xoffs << 16) | yoffs;
 +}
 +
 +static int newport_dummy(struct vc_data *c)
++=======
+ static int newport_set_origin(struct vc_data *vc)
++>>>>>>> c396a5bf457f (console: Expand dummy functions for CFI)
  {
  	return 0;
  }
diff --git a/drivers/usb/misc/sisusbvga/sisusb_con.c b/drivers/usb/misc/sisusbvga/sisusb_con.c
index 998df891bdde..a0d6e0af957c 100644
--- a/drivers/usb/misc/sisusbvga/sisusb_con.c
+++ b/drivers/usb/misc/sisusbvga/sisusb_con.c
@@ -1217,7 +1217,7 @@ font_op_error:
 /* Interface routine */
 static int
 sisusbcon_font_set(struct vc_data *c, struct console_font *font,
-							unsigned flags)
+		   unsigned int flags)
 {
 	struct sisusb_usb_data *sisusb;
 	unsigned charcount = font->charcount;
@@ -1338,28 +1338,65 @@ static void sisusbdummycon_init(struct vc_data *vc, int init)
 	vc_resize(vc, 80, 25);
 }
 
-static int sisusbdummycon_dummy(void)
+static void sisusbdummycon_deinit(struct vc_data *vc) { }
+static void sisusbdummycon_clear(struct vc_data *vc, int sy, int sx,
+				 int height, int width) { }
+static void sisusbdummycon_putc(struct vc_data *vc, int c, int ypos,
+				int xpos) { }
+static void sisusbdummycon_putcs(struct vc_data *vc, const unsigned short *s,
+				 int count, int ypos, int xpos) { }
+static void sisusbdummycon_cursor(struct vc_data *vc, int mode) { }
+
+static bool sisusbdummycon_scroll(struct vc_data *vc, unsigned int top,
+				  unsigned int bottom, enum con_scroll dir,
+				  unsigned int lines)
 {
-    return 0;
+	return false;
 }
 
-#define SISUSBCONDUMMY	(void *)sisusbdummycon_dummy
+static int sisusbdummycon_switch(struct vc_data *vc)
+{
+	return 0;
+}
+
+static int sisusbdummycon_blank(struct vc_data *vc, int blank, int mode_switch)
+{
+	return 0;
+}
+
+static int sisusbdummycon_font_set(struct vc_data *vc,
+				   struct console_font *font,
+				   unsigned int flags)
+{
+	return 0;
+}
+
+static int sisusbdummycon_font_default(struct vc_data *vc,
+				       struct console_font *font, char *name)
+{
+	return 0;
+}
+
+static int sisusbdummycon_font_copy(struct vc_data *vc, int con)
+{
+	return 0;
+}
 
 static const struct consw sisusb_dummy_con = {
 	.owner =		THIS_MODULE,
 	.con_startup =		sisusbdummycon_startup,
 	.con_init =		sisusbdummycon_init,
-	.con_deinit =		SISUSBCONDUMMY,
-	.con_clear =		SISUSBCONDUMMY,
-	.con_putc =		SISUSBCONDUMMY,
-	.con_putcs =		SISUSBCONDUMMY,
-	.con_cursor =		SISUSBCONDUMMY,
-	.con_scroll =		SISUSBCONDUMMY,
-	.con_switch =		SISUSBCONDUMMY,
-	.con_blank =		SISUSBCONDUMMY,
-	.con_font_set =		SISUSBCONDUMMY,
-	.con_font_default =	SISUSBCONDUMMY,
-	.con_font_copy =	SISUSBCONDUMMY,
+	.con_deinit =		sisusbdummycon_deinit,
+	.con_clear =		sisusbdummycon_clear,
+	.con_putc =		sisusbdummycon_putc,
+	.con_putcs =		sisusbdummycon_putcs,
+	.con_cursor =		sisusbdummycon_cursor,
+	.con_scroll =		sisusbdummycon_scroll,
+	.con_switch =		sisusbdummycon_switch,
+	.con_blank =		sisusbdummycon_blank,
+	.con_font_set =		sisusbdummycon_font_set,
+	.con_font_default =	sisusbdummycon_font_default,
+	.con_font_copy =	sisusbdummycon_font_copy,
 };
 
 int
* Unmerged path drivers/video/console/dummycon.c
diff --git a/drivers/video/console/fbcon.c b/drivers/video/console/fbcon.c
index ac9e8e1a9d72..120b01346549 100644
--- a/drivers/video/console/fbcon.c
+++ b/drivers/video/console/fbcon.c
@@ -2590,7 +2590,8 @@ static int fbcon_copy_font(struct vc_data *vc, int con)
  *  is ever implemented.
  */
 
-static int fbcon_set_font(struct vc_data *vc, struct console_font *font, unsigned flags)
+static int fbcon_set_font(struct vc_data *vc, struct console_font *font,
+			  unsigned int flags)
 {
 	struct fb_info *info = registered_fb[con2fb_map[vc->vc_num]];
 	unsigned charcount = font->charcount;
* Unmerged path drivers/video/console/newport_con.c
diff --git a/drivers/video/console/vgacon.c b/drivers/video/console/vgacon.c
index e0de08df841b..18f7ef36255f 100644
--- a/drivers/video/console/vgacon.c
+++ b/drivers/video/console/vgacon.c
@@ -1226,7 +1226,8 @@ static int vgacon_adjust_height(struct vc_data *vc, unsigned fontheight)
 	return 0;
 }
 
-static int vgacon_font_set(struct vc_data *c, struct console_font *font, unsigned flags)
+static int vgacon_font_set(struct vc_data *c, struct console_font *font,
+			   unsigned int flags)
 {
 	unsigned charcount = font->charcount;
 	int rc;
@@ -1369,21 +1370,20 @@ static bool vgacon_scroll(struct vc_data *c, unsigned int t, unsigned int b,
  *  The console `switch' structure for the VGA based console
  */
 
-static int vgacon_dummy(struct vc_data *c)
-{
-	return 0;
-}
-
-#define DUMMY (void *) vgacon_dummy
+static void vgacon_clear(struct vc_data *vc, int sy, int sx, int height,
+			 int width) { }
+static void vgacon_putc(struct vc_data *vc, int c, int ypos, int xpos) { }
+static void vgacon_putcs(struct vc_data *vc, const unsigned short *s,
+			 int count, int ypos, int xpos) { }
 
 const struct consw vga_con = {
 	.owner = THIS_MODULE,
 	.con_startup = vgacon_startup,
 	.con_init = vgacon_init,
 	.con_deinit = vgacon_deinit,
-	.con_clear = DUMMY,
-	.con_putc = DUMMY,
-	.con_putcs = DUMMY,
+	.con_clear = vgacon_clear,
+	.con_putc = vgacon_putc,
+	.con_putcs = vgacon_putcs,
 	.con_cursor = vgacon_cursor,
 	.con_scroll = vgacon_scroll,
 	.con_switch = vgacon_switch,
