IB/core: Don't allow default GID addition at non reseved slots

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Parav Pandit <parav@mellanox.com>
commit a66ed149b0da5b97fa7486ee2bcd00f3f9df5442
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a66ed149.failed

Default GIDs are marked reserved at the start of the GID table at index
0 and 1 by gid_table_reserve_default().  Currently when default GID is
requested, it can still allocates an empty slot which was not marked as
RESERVED for default GID, which is incorrect.

At least in current code flow of roce_gid_mgmt.c, in theory we can
still request to allocate more than one/two default GIDs depending
on how upper devices are setup.

Therefore, it is better for cache layer to only allow our reserved slots
to be used by default GID allocation requests.

Fixes: 598ff6bae689 ("IB/core: Refactor GID modify code for RoCE")
	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit a66ed149b0da5b97fa7486ee2bcd00f3f9df5442)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cache.c
diff --cc drivers/infiniband/core/cache.c
index 8ce9acd96a1f,92ec845f9c40..000000000000
--- a/drivers/infiniband/core/cache.c
+++ b/drivers/infiniband/core/cache.c
@@@ -266,6 -285,33 +266,36 @@@ static int find_gid(struct ib_gid_tabl
  
  		i++;
  
++<<<<<<< HEAD
++=======
+ 		/* find_gid() is used during GID addition where it is expected
+ 		 * to return a free entry slot which is not duplicate.
+ 		 * Free entry slot is requested and returned if pempty is set,
+ 		 * so lookup free slot only if requested.
+ 		 */
+ 		if (pempty && empty < 0) {
+ 			if (data->props & GID_TABLE_ENTRY_INVALID &&
+ 			    (default_gid ==
+ 			     !!(data->props & GID_TABLE_ENTRY_DEFAULT))) {
+ 				/*
+ 				 * Found an invalid (free) entry; allocate it.
+ 				 * If default GID is requested, then our
+ 				 * found slot must be one of the DEFAULT
+ 				 * reserved slots or we fail.
+ 				 * This ensures that only DEFAULT reserved
+ 				 * slots are used for default property GIDs.
+ 				 */
+ 				empty = curr_index;
+ 			}
+ 		}
+ 
+ 		/*
+ 		 * Additionally find_gid() is used to find valid entry during
+ 		 * lookup operation, where validity needs to be checked. So
+ 		 * find the empty entry first to continue to search for a free
+ 		 * slot and ignore its INVALID flag.
+ 		 */
++>>>>>>> a66ed149b0da (IB/core: Don't allow default GID addition at non reseved slots)
  		if (data->props & GID_TABLE_ENTRY_INVALID)
  			continue;
  
* Unmerged path drivers/infiniband/core/cache.c
