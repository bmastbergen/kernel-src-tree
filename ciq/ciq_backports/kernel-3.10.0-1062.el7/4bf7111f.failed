x86/efi: Support initrd loaded above 4G

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [x86] efi: Support initrd loaded above 4G (Lenny Szubowicz) [1608955]
Rebuild_FUZZ: 94.59%
commit-author Yinghai Lu <yinghai@kernel.org>
commit 4bf7111f50167133a71c23530ca852a41355e739
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/4bf7111f.failed

For boot efi kernel directly without bootloader.
If the kernel support XLF_CAN_BE_LOADED_ABOVE_4G, we should
not limit initrd under hdr->initrd_add_max.

	Signed-off-by: Yinghai Lu <yinghai@kernel.org>
	Signed-off-by: Matt Fleming <matt.fleming@intel.com>
(cherry picked from commit 4bf7111f50167133a71c23530ca852a41355e739)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/eboot.c
diff --cc arch/x86/boot/compressed/eboot.c
index 79174181d150,385f42c200bc..000000000000
--- a/arch/x86/boot/compressed/eboot.c
+++ b/arch/x86/boot/compressed/eboot.c
@@@ -1106,6 -1036,9 +1106,12 @@@ struct boot_params *make_boot_params(st
  	u16 *s2;
  	u8 *s1;
  	int i;
++<<<<<<< HEAD
++=======
+ 	unsigned long ramdisk_addr;
+ 	unsigned long ramdisk_size;
+ 	unsigned long initrd_addr_max;
++>>>>>>> 4bf7111f5016 (x86/efi: Support initrd loaded above 4G)
  
  	efi_early = c;
  	sys_table = (efi_system_table_t *)(unsigned long)efi_early->table;
@@@ -1169,9 -1101,21 +1175,27 @@@
  
  	memset(sdt, 0, sizeof(*sdt));
  
++<<<<<<< HEAD
 +	status = handle_ramdisks(sys_table, image, hdr);
 +	if (status != EFI_SUCCESS)
 +		goto fail2;
++=======
+ 	if (hdr->xloadflags & XLF_CAN_BE_LOADED_ABOVE_4G)
+ 		initrd_addr_max = -1UL;
+ 	else
+ 		initrd_addr_max = hdr->initrd_addr_max;
+ 
+ 	status = handle_cmdline_files(sys_table, image,
+ 				      (char *)(unsigned long)hdr->cmd_line_ptr,
+ 				      "initrd=", initrd_addr_max,
+ 				      &ramdisk_addr, &ramdisk_size);
+ 	if (status != EFI_SUCCESS)
+ 		goto fail2;
+ 	hdr->ramdisk_image = ramdisk_addr & 0xffffffff;
+ 	hdr->ramdisk_size  = ramdisk_size & 0xffffffff;
+ 	boot_params->ext_ramdisk_image = (u64)ramdisk_addr >> 32;
+ 	boot_params->ext_ramdisk_size  = (u64)ramdisk_size >> 32;
++>>>>>>> 4bf7111f5016 (x86/efi: Support initrd loaded above 4G)
  
  	return boot_params;
  fail2:
* Unmerged path arch/x86/boot/compressed/eboot.c
