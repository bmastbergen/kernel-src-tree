pktgen: Clean read user supplied flag mess

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Dmitry Safonov <dima@arista.com>
commit 52e12d5daea48c92f0b0354f4cdc127a2c0a3c52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/52e12d5d.failed

Don't use error-prone-brute-force way.

	Signed-off-by: Dmitry Safonov <dima@arista.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 52e12d5daea48c92f0b0354f4cdc127a2c0a3c52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/pktgen.c
diff --cc net/core/pktgen.c
index 1bbf705dae1a,b8ab5c829511..000000000000
--- a/net/core/pktgen.c
+++ b/net/core/pktgen.c
@@@ -1197,110 -1228,15 +1229,116 @@@ static ssize_t pktgen_if_write(struct f
  		if (copy_from_user(f, &user_buffer[i], len))
  			return -EFAULT;
  		i += len;
- 		if (strcmp(f, "IPSRC_RND") == 0)
- 			pkt_dev->flags |= F_IPSRC_RND;
  
- 		else if (strcmp(f, "!IPSRC_RND") == 0)
- 			pkt_dev->flags &= ~F_IPSRC_RND;
+ 		flag = pktgen_read_flag(f, &disable);
  
++<<<<<<< HEAD
 +		else if (strcmp(f, "TXSIZE_RND") == 0)
 +			pkt_dev->flags |= F_TXSIZE_RND;
 +
 +		else if (strcmp(f, "!TXSIZE_RND") == 0)
 +			pkt_dev->flags &= ~F_TXSIZE_RND;
 +
 +		else if (strcmp(f, "IPDST_RND") == 0)
 +			pkt_dev->flags |= F_IPDST_RND;
 +
 +		else if (strcmp(f, "!IPDST_RND") == 0)
 +			pkt_dev->flags &= ~F_IPDST_RND;
 +
 +		else if (strcmp(f, "UDPSRC_RND") == 0)
 +			pkt_dev->flags |= F_UDPSRC_RND;
 +
 +		else if (strcmp(f, "!UDPSRC_RND") == 0)
 +			pkt_dev->flags &= ~F_UDPSRC_RND;
 +
 +		else if (strcmp(f, "UDPDST_RND") == 0)
 +			pkt_dev->flags |= F_UDPDST_RND;
 +
 +		else if (strcmp(f, "!UDPDST_RND") == 0)
 +			pkt_dev->flags &= ~F_UDPDST_RND;
 +
 +		else if (strcmp(f, "MACSRC_RND") == 0)
 +			pkt_dev->flags |= F_MACSRC_RND;
 +
 +		else if (strcmp(f, "!MACSRC_RND") == 0)
 +			pkt_dev->flags &= ~F_MACSRC_RND;
 +
 +		else if (strcmp(f, "MACDST_RND") == 0)
 +			pkt_dev->flags |= F_MACDST_RND;
 +
 +		else if (strcmp(f, "!MACDST_RND") == 0)
 +			pkt_dev->flags &= ~F_MACDST_RND;
 +
 +		else if (strcmp(f, "MPLS_RND") == 0)
 +			pkt_dev->flags |= F_MPLS_RND;
 +
 +		else if (strcmp(f, "!MPLS_RND") == 0)
 +			pkt_dev->flags &= ~F_MPLS_RND;
 +
 +		else if (strcmp(f, "VID_RND") == 0)
 +			pkt_dev->flags |= F_VID_RND;
 +
 +		else if (strcmp(f, "!VID_RND") == 0)
 +			pkt_dev->flags &= ~F_VID_RND;
 +
 +		else if (strcmp(f, "SVID_RND") == 0)
 +			pkt_dev->flags |= F_SVID_RND;
 +
 +		else if (strcmp(f, "!SVID_RND") == 0)
 +			pkt_dev->flags &= ~F_SVID_RND;
 +
 +		else if (strcmp(f, "FLOW_SEQ") == 0 || strcmp(f, "!FLOW_RND") == 0)
 +			pkt_dev->flags |= F_FLOW_SEQ;
 +
 +		else if (strcmp(f, "FLOW_RND") == 0 || strcmp(f, "!FLOW_SEQ") == 0)
 +			pkt_dev->flags &= ~F_FLOW_SEQ;
 +
 +		else if (strcmp(f, "QUEUE_MAP_RND") == 0)
 +			pkt_dev->flags |= F_QUEUE_MAP_RND;
 +
 +		else if (strcmp(f, "!QUEUE_MAP_RND") == 0)
 +			pkt_dev->flags &= ~F_QUEUE_MAP_RND;
 +
 +		else if (strcmp(f, "QUEUE_MAP_CPU") == 0)
 +			pkt_dev->flags |= F_QUEUE_MAP_CPU;
 +
 +		else if (strcmp(f, "!QUEUE_MAP_CPU") == 0)
 +			pkt_dev->flags &= ~F_QUEUE_MAP_CPU;
 +#ifdef CONFIG_XFRM
 +		else if (strcmp(f, "IPSEC") == 0)
 +			pkt_dev->flags |= F_IPSEC;
 +
 +		else if (strcmp(f, "!IPSEC") == 0)
 +			pkt_dev->flags &= ~F_IPSEC;
 +#endif
 +
 +		else if (strcmp(f, "!IPV6") == 0)
 +			pkt_dev->flags &= ~F_IPV6;
 +
 +		else if (strcmp(f, "NODE_ALLOC") == 0)
 +			pkt_dev->flags |= F_NODE;
 +
 +		else if (strcmp(f, "!NODE_ALLOC") == 0)
 +			pkt_dev->flags &= ~F_NODE;
 +
 +		else if (strcmp(f, "UDPCSUM") == 0)
 +			pkt_dev->flags |= F_UDPCSUM;
 +
 +		else if (strcmp(f, "!UDPCSUM") == 0)
 +			pkt_dev->flags &= ~F_UDPCSUM;
 +
 +		else if (strcmp(f, "NO_TIMESTAMP") == 0)
 +			pkt_dev->flags |= F_NO_TIMESTAMP;
 +
 +		else {
++=======
+ 		if (flag) {
+ 			if (disable)
+ 				pkt_dev->flags &= ~flag;
+ 			else
+ 				pkt_dev->flags |= flag;
+ 		} else {
++>>>>>>> 52e12d5daea4 (pktgen: Clean read user supplied flag mess)
  			sprintf(pg_result,
  				"Flag -:%s:- unknown\nAvailable flags, (prepend ! to un-set flag):\n%s",
  				f,
* Unmerged path net/core/pktgen.c
