r8169: remove mii_if_info member from struct rtl8169_private

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit f7ffa9ae2bb90fd948b514e2049ef3a904e66743
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/f7ffa9ae.failed

The only remaining usage of the struct mii_if_info member is to store the
information whether the chip is GMII-capable. So we can replace it with
a simple flag.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f7ffa9ae2bb90fd948b514e2049ef3a904e66743)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index 7ff17ed8f19c,724272b78a21..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -15,7 -15,7 +15,11 @@@
  #include <linux/etherdevice.h>
  #include <linux/delay.h>
  #include <linux/ethtool.h>
++<<<<<<< HEAD
 +#include <linux/mii.h>
++=======
+ #include <linux/phy.h>
++>>>>>>> f7ffa9ae2bb9 (r8169: remove mii_if_info member from struct rtl8169_private)
  #include <linux/if_vlan.h>
  #include <linux/crc32.h>
  #include <linux/in.h>
@@@ -753,7 -753,8 +757,12 @@@ struct rtl8169_private 
  		struct work_struct work;
  	} wk;
  
++<<<<<<< HEAD
 +	struct mii_if_info mii;
++=======
+ 	unsigned supports_gmii:1;
+ 	struct mii_bus *mii_bus;
++>>>>>>> f7ffa9ae2bb9 (r8169: remove mii_if_info member from struct rtl8169_private)
  	dma_addr_t counters_phys_addr;
  	struct rtl8169_counters *counters;
  	struct rtl8169_tc_offsets tc_offset;
@@@ -6873,6 -6649,46 +6867,49 @@@ static void rtl8169_rx_missed(struct ne
  	RTL_W32(tp, RxMissed, 0);
  }
  
++<<<<<<< HEAD
++=======
+ static void r8169_phylink_handler(struct net_device *ndev)
+ {
+ 	struct rtl8169_private *tp = netdev_priv(ndev);
+ 
+ 	if (netif_carrier_ok(ndev)) {
+ 		rtl_link_chg_patch(tp);
+ 		pm_request_resume(&tp->pci_dev->dev);
+ 	} else {
+ 		pm_runtime_idle(&tp->pci_dev->dev);
+ 	}
+ 
+ 	if (net_ratelimit())
+ 		phy_print_status(ndev->phydev);
+ }
+ 
+ static int r8169_phy_connect(struct rtl8169_private *tp)
+ {
+ 	struct phy_device *phydev = mdiobus_get_phy(tp->mii_bus, 0);
+ 	phy_interface_t phy_mode;
+ 	int ret;
+ 
+ 	phy_mode = tp->supports_gmii ? PHY_INTERFACE_MODE_GMII :
+ 		   PHY_INTERFACE_MODE_MII;
+ 
+ 	ret = phy_connect_direct(tp->dev, phydev, r8169_phylink_handler,
+ 				 phy_mode);
+ 	if (ret)
+ 		return ret;
+ 
+ 	if (!tp->supports_gmii)
+ 		phy_set_max_speed(phydev, SPEED_100);
+ 
+ 	/* Ensure to advertise everything, incl. pause */
+ 	phydev->advertising = phydev->supported;
+ 
+ 	phy_attached_info(phydev);
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> f7ffa9ae2bb9 (r8169: remove mii_if_info member from struct rtl8169_private)
  static void rtl8169_down(struct net_device *dev)
  {
  	struct rtl8169_private *tp = netdev_priv(dev);
* Unmerged path drivers/net/ethernet/realtek/r8169.c
