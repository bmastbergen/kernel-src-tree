nfp: restore correct ordering of fields in rx ring structure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit e76c1d3d2a8313040d8316f760e9476028a27758
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e76c1d3d.failed

Commit 7f1c684a8966 ("nfp: setup xdp_rxq_info") mixed the cache
cold and cache hot data in the nfp_net_rx_ring structure (ignoring
the feedback), to try to fit the structure into 2 cache lines
after struct xdp_rxq_info was added.  Now that we are about to add
a new field the structure will grow back to 3 cache lines, so
order the members correctly.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e76c1d3d2a8313040d8316f760e9476028a27758)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net.h
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net.h
index 401d705a5802,607896910fb0..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net.h
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net.h
@@@ -367,6 -369,8 +368,11 @@@ struct nfp_net_rx_ring 
  	struct nfp_net_rx_buf *rxbufs;
  	struct nfp_net_rx_desc *rxds;
  
++<<<<<<< HEAD
++=======
+ 	struct xdp_rxq_info xdp_rxq;
+ 
++>>>>>>> e76c1d3d2a83 (nfp: restore correct ordering of fields in rx ring structure)
  	dma_addr_t dma;
  	unsigned int size;
  } ____cacheline_aligned;
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net.h
