net/mlx5e: Refactor tc vlan push/pop actions offloading

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Refactor tc vlan push/pop actions offloading (Alaa Hleihel) [1642344 1642498]
Rebuild_FUZZ: 96.23%
commit-author Jianbo Liu <jianbol@mellanox.com>
commit 1482bd3d50d77d28961999ade98854b31b342156
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/1482bd3d.failed

Extract actions offloading code to a new function, and also extend data
structures for double vlan actions.

	Signed-off-by: Jianbo Liu <jianbol@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 1482bd3d50d77d28961999ade98854b31b342156)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index 79628b20ce99,35b3e135ae1d..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -2547,6 -2614,8 +2573,11 @@@ static int parse_tc_fdb_actions(struct 
  	const struct tc_action *a;
  	LIST_HEAD(actions);
  	bool encap = false;
++<<<<<<< HEAD
++=======
+ 	u32 action = 0;
+ 	int err;
++>>>>>>> 1482bd3d50d7 (net/mlx5e: Refactor tc vlan push/pop actions offloading)
  
  	if (!tcf_exts_has_actions(exts))
  		return -EINVAL;
@@@ -2562,17 -2631,7 +2593,15 @@@
  			continue;
  		}
  
 +		if (is_tcf_csum(a)) {
 +			if (csum_offload_supported(priv, attr->action,
 +						   tcf_csum_update_flags(a)))
 +				continue;
 +
 +			return -EOPNOTSUPP;
 +		}
 +
  		if (is_tcf_pedit(a)) {
- 			int err;
- 
  			err = parse_tc_pedit_action(priv, a, MLX5_FLOW_NAMESPACE_FDB,
  						    parse_attr);
  			if (err)
@@@ -2622,23 -2698,12 +2651,32 @@@
  		}
  
  		if (is_tcf_vlan(a)) {
++<<<<<<< HEAD
 +			if (tcf_vlan_action(a) == TCA_VLAN_ACT_POP) {
 +				attr->action |= MLX5_FLOW_CONTEXT_ACTION_VLAN_POP;
 +			} else if (tcf_vlan_action(a) == TCA_VLAN_ACT_PUSH) {
 +				attr->action |= MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH;
 +				attr->vlan_vid = tcf_vlan_push_vid(a);
 +				if (mlx5_eswitch_vlan_actions_supported(priv->mdev)) {
 +					attr->vlan_prio = tcf_vlan_push_prio(a);
 +					attr->vlan_proto = tcf_vlan_push_proto(a);
 +					if (!attr->vlan_proto)
 +						attr->vlan_proto = htons(ETH_P_8021Q);
 +				} else if (tcf_vlan_push_proto(a) != htons(ETH_P_8021Q) ||
 +					   tcf_vlan_push_prio(a)) {
 +					return -EOPNOTSUPP;
 +				}
 +			} else { /* action is TCA_VLAN_ACT_MODIFY */
 +				return -EOPNOTSUPP;
 +			}
++=======
+ 			err = parse_tc_vlan_action(priv, a, attr, &action);
+ 
+ 			if (err)
+ 				return err;
+ 
+ 			attr->mirror_count = attr->out_count;
++>>>>>>> 1482bd3d50d7 (net/mlx5e: Refactor tc vlan push/pop actions offloading)
  			continue;
  		}
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index c66aee7a3bf6,552954d7184e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -64,9 -70,9 +64,15 @@@ mlx5_eswitch_add_offloaded_rule(struct 
  		flow_act.action &= ~(MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH |
  				     MLX5_FLOW_CONTEXT_ACTION_VLAN_POP);
  	else if (flow_act.action & MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH) {
++<<<<<<< HEAD
 +		flow_act.vlan.ethtype = ntohs(attr->vlan_proto);
 +		flow_act.vlan.vid = attr->vlan_vid;
 +		flow_act.vlan.prio = attr->vlan_prio;
++=======
+ 		flow_act.vlan[0].ethtype = ntohs(attr->vlan_proto[0]);
+ 		flow_act.vlan[0].vid = attr->vlan_vid[0];
+ 		flow_act.vlan[0].prio = attr->vlan_prio[0];
++>>>>>>> 1482bd3d50d7 (net/mlx5e: Refactor tc vlan push/pop actions offloading)
  	}
  
  	if (flow_act.action & MLX5_FLOW_CONTEXT_ACTION_FWD_DEST) {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
index dbd6e161f51c..86e413875414 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@ -247,9 +247,9 @@ struct mlx5_esw_flow_attr {
 	struct mlx5_core_dev	*in_mdev;
 
 	int	action;
-	__be16	vlan_proto;
-	u16	vlan_vid;
-	u8	vlan_prio;
+	__be16	vlan_proto[1];
+	u16	vlan_vid[1];
+	u8	vlan_prio[1];
 	bool	vlan_handled;
 	u32	encap_id;
 	u32	mod_hdr_id;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
