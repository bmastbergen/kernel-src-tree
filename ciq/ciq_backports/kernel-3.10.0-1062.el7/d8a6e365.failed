KVM: VMX: cleanup init_rmode_identity_map()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author David Hildenbrand <david@redhat.com>
commit d8a6e365b208a36f9e789ee50c55096b71367431
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d8a6e365.failed

No need for another enable_ept check. kvm->arch.ept_identity_map_addr
only has to be inititalized once. Having alloc_identity_pagetable() is
overkill and dropping BUG_ONs is always nice.

	Reviewed-by: Radim Krčmář <rkrcmar@redhat.com>
	Signed-off-by: David Hildenbrand <david@redhat.com>
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
(cherry picked from commit d8a6e365b208a36f9e789ee50c55096b71367431)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index c5d9f414275b,400b028e5dfb..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -1084,12 -906,11 +1084,19 @@@ static void vmx_get_segment(struct kvm_
  			    struct kvm_segment *var, int seg);
  static bool guest_state_valid(struct kvm_vcpu *vcpu);
  static u32 vmx_segment_access_rights(struct kvm_segment *var);
 +static void copy_vmcs12_to_shadow(struct vcpu_vmx *vmx);
  static void copy_shadow_to_vmcs12(struct vcpu_vmx *vmx);
++<<<<<<< HEAD
 +static int alloc_identity_pagetable(struct kvm *kvm);
 +static void vmx_update_msr_bitmap(struct kvm_vcpu *vcpu);
 +static void __always_inline vmx_disable_intercept_for_msr(unsigned long *msr_bitmap,
 +							  u32 msr, int type);
++=======
+ static bool vmx_get_nmi_mask(struct kvm_vcpu *vcpu);
+ static void vmx_set_nmi_mask(struct kvm_vcpu *vcpu, bool masked);
+ static bool nested_vmx_is_page_fault_vmexit(struct vmcs12 *vmcs12,
+ 					    u16 error_code);
++>>>>>>> d8a6e365b208 (KVM: VMX: cleanup init_rmode_identity_map())
  
  static DEFINE_PER_CPU(struct vmcs *, vmxarea);
  static DEFINE_PER_CPU(struct vmcs *, current_vmcs);
* Unmerged path arch/x86/kvm/vmx.c
