net/mlx5e: Add channel events counter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Add channel events counter (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 94.29%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit a1bf74dc6e66f91325cc8d35231e151a24a1f9ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a1bf74dc.failed

Add per-channel and global ethtool counters for channel events.
Each event indicates an interrupt on one of the channel's
completion queues.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit a1bf74dc6e66f91325cc8d35231e151a24a1f9ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
index 96dab53d64cc,0c18b20c2c18..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
@@@ -73,8 -83,12 +73,16 @@@ static const struct counter_desc sw_sta
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_cache_empty) },
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_cache_busy) },
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_cache_waive) },
++<<<<<<< HEAD
++=======
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, rx_congst_umr) },
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, ch_events) },
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, ch_poll) },
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, ch_arm) },
+ 	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, ch_aff_change) },
++>>>>>>> a1bf74dc6e66 (net/mlx5e: Add channel events counter)
  	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, ch_eq_rearm) },
 +	{ MLX5E_DECLARE_STAT(struct mlx5e_sw_stats, link_down_events_phy) },
  };
  
  #define NUM_SW_COUNTERS			ARRAY_SIZE(sw_stats_desc)
@@@ -139,6 -154,11 +147,14 @@@ static void mlx5e_grp_sw_update_stats(s
  		s->rx_cache_empty += rq_stats->cache_empty;
  		s->rx_cache_busy  += rq_stats->cache_busy;
  		s->rx_cache_waive += rq_stats->cache_waive;
++<<<<<<< HEAD
++=======
+ 		s->rx_congst_umr  += rq_stats->congst_umr;
+ 		s->ch_events      += ch_stats->events;
+ 		s->ch_poll        += ch_stats->poll;
+ 		s->ch_arm         += ch_stats->arm;
+ 		s->ch_aff_change  += ch_stats->aff_change;
++>>>>>>> a1bf74dc6e66 (net/mlx5e: Add channel events counter)
  		s->ch_eq_rearm += ch_stats->eq_rearm;
  
  		for (j = 0; j < priv->max_opened_tc; j++) {
@@@ -1110,6 -1164,10 +1126,13 @@@ static const struct counter_desc sq_sta
  };
  
  static const struct counter_desc ch_stats_desc[] = {
++<<<<<<< HEAD
++=======
+ 	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, events) },
+ 	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, poll) },
+ 	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, arm) },
+ 	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, aff_change) },
++>>>>>>> a1bf74dc6e66 (net/mlx5e: Add channel events counter)
  	{ MLX5E_DECLARE_CH_STAT(struct mlx5e_ch_stats, eq_rearm) },
  };
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
index 2036ba733d42,70a05298851e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
@@@ -91,10 -94,17 +91,18 @@@ struct mlx5e_sw_stats 
  	u64 rx_cache_empty;
  	u64 rx_cache_busy;
  	u64 rx_cache_waive;
++<<<<<<< HEAD
++=======
+ 	u64 rx_congst_umr;
+ 	u64 ch_events;
+ 	u64 ch_poll;
+ 	u64 ch_arm;
+ 	u64 ch_aff_change;
++>>>>>>> a1bf74dc6e66 (net/mlx5e: Add channel events counter)
  	u64 ch_eq_rearm;
  
 -#ifdef CONFIG_MLX5_EN_TLS
 -	u64 tx_tls_ooo;
 -	u64 tx_tls_resync_bytes;
 -#endif
 +	/* Special handling counters */
 +	u64 link_down_events_phy;
  };
  
  struct mlx5e_qcounter_stats {
@@@ -204,6 -223,10 +212,13 @@@ struct mlx5e_sq_stats 
  };
  
  struct mlx5e_ch_stats {
++<<<<<<< HEAD
++=======
+ 	u64 events;
+ 	u64 poll;
+ 	u64 arm;
+ 	u64 aff_change;
++>>>>>>> a1bf74dc6e66 (net/mlx5e: Add channel events counter)
  	u64 eq_rearm;
  };
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c b/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c
index b54d059b5bf3..31816f1dc886 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c
@@ -99,8 +99,9 @@ void mlx5e_completion_event(struct mlx5_core_cq *mcq)
 {
 	struct mlx5e_cq *cq = container_of(mcq, struct mlx5e_cq, mcq);
 
-	cq->event_ctr++;
 	napi_schedule(cq->napi);
+	cq->event_ctr++;
+	cq->channel->stats->events++;
 }
 
 void mlx5e_cq_error_event(struct mlx5_core_cq *mcq, enum mlx5_event event)
