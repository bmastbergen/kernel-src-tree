r8169: enable EEE per default on chip versions from RTL8168g

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit b6c7fa401625d949e5e370f32e74f22c3bbaed51
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/b6c7fa40.failed

Enable EEE per default on chip versions from RTL8168g.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b6c7fa401625d949e5e370f32e74f22c3bbaed51)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index f80daa5053d5,9e335d2c74a5..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -3656,13 -3630,15 +3664,23 @@@ static void rtl8168g_1_hw_phy_config(st
  	rtl_writephy(tp, 0x14, 0x1065);
  
  	rtl8168g_disable_aldps(tp);
++<<<<<<< HEAD
 +
 +	rtl_writephy(tp, 0x1f, 0x0000);
++=======
+ 	rtl8168g_config_eee_phy(tp);
+ 	rtl_enable_eee(tp);
++>>>>>>> b6c7fa401625 (r8169: enable EEE per default on chip versions from RTL8168g)
  }
  
  static void rtl8168g_2_hw_phy_config(struct rtl8169_private *tp)
  {
  	rtl_apply_firmware(tp);
++<<<<<<< HEAD
++=======
+ 	rtl8168g_config_eee_phy(tp);
+ 	rtl_enable_eee(tp);
++>>>>>>> b6c7fa401625 (r8169: enable EEE per default on chip versions from RTL8168g)
  }
  
  static void rtl8168h_1_hw_phy_config(struct rtl8169_private *tp)
@@@ -3768,8 -3744,8 +3786,13 @@@
  	rtl_writephy(tp, 0x1f, 0x0000);
  
  	rtl8168g_disable_aldps(tp);
++<<<<<<< HEAD
 +
 +	rtl_writephy(tp, 0x1f, 0x0000);
++=======
+ 	rtl8168g_config_eee_phy(tp);
+ 	rtl_enable_eee(tp);
++>>>>>>> b6c7fa401625 (r8169: enable EEE per default on chip versions from RTL8168g)
  }
  
  static void rtl8168h_2_hw_phy_config(struct rtl8169_private *tp)
@@@ -3838,8 -3814,8 +3861,13 @@@
  	rtl_writephy(tp, 0x1f, 0x0000);
  
  	rtl8168g_disable_aldps(tp);
++<<<<<<< HEAD
 +
 +	rtl_writephy(tp, 0x1f, 0x0000);
++=======
+ 	rtl8168g_config_eee_phy(tp);
+ 	rtl_enable_eee(tp);
++>>>>>>> b6c7fa401625 (r8169: enable EEE per default on chip versions from RTL8168g)
  }
  
  static void rtl8168ep_1_hw_phy_config(struct rtl8169_private *tp)
@@@ -3868,8 -3844,8 +3896,13 @@@
  	rtl_writephy(tp, 0x1f, 0x0000);
  
  	rtl8168g_disable_aldps(tp);
++<<<<<<< HEAD
 +
 +	rtl_writephy(tp, 0x1f, 0x0000);
++=======
+ 	rtl8168g_config_eee_phy(tp);
+ 	rtl_enable_eee(tp);
++>>>>>>> b6c7fa401625 (r8169: enable EEE per default on chip versions from RTL8168g)
  }
  
  static void rtl8168ep_2_hw_phy_config(struct rtl8169_private *tp)
@@@ -3947,8 -3923,8 +3980,13 @@@
  	rtl_writephy(tp, 0x1f, 0x0000);
  
  	rtl8168g_disable_aldps(tp);
++<<<<<<< HEAD
 +
 +	rtl_writephy(tp, 0x1f, 0x0000);
++=======
+ 	rtl8168g_config_eee_phy(tp);
+ 	rtl_enable_eee(tp);
++>>>>>>> b6c7fa401625 (r8169: enable EEE per default on chip versions from RTL8168g)
  }
  
  static void rtl8102e_hw_phy_config(struct rtl8169_private *tp)
* Unmerged path drivers/net/ethernet/realtek/r8169.c
