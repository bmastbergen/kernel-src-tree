perf tools: Use the "_stest" symbol to identify the kernel map when loading kcore

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit 5654997838c2ac9b1950d633fc97f354cc4180e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/56549978.failed

The first symbol is not necessarily in the kernel text.  Instead of
using the first symbol, use the _stest symbol to identify the kernel map
when loading kcore.

This allows for the introduction of symbols to identify the x86_64 PTI
entry trampolines.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Joerg Roedel <joro@8bytes.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: x86@kernel.org
Link: http://lkml.kernel.org/r/1525866228-30321-6-git-send-email-adrian.hunter@intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 5654997838c2ac9b1950d633fc97f354cc4180e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/symbol.c
diff --cc tools/perf/util/symbol.c
index c8a03ad5581e,4a39f4d0a174..000000000000
--- a/tools/perf/util/symbol.c
+++ b/tools/perf/util/symbol.c
@@@ -1235,13 -1198,13 +1235,23 @@@ static int dso__load_kcore(struct dso *
  		old_map = next;
  	}
  
++<<<<<<< HEAD
 +	/* Find the kernel map using the first symbol */
 +	sym = __dso__first_symbol(dso, map->type);
 +	list_for_each_entry(new_map, &md.maps, node) {
 +		if (sym && sym->start >= new_map->start &&
 +		    sym->start < new_map->end) {
 +			replacement_map = new_map;
 +			break;
++=======
+ 	/* Find the kernel map using the '_stext' symbol */
+ 	if (!kallsyms__get_function_start(kallsyms_filename, "_stext", &stext)) {
+ 		list_for_each_entry(new_map, &md.maps, node) {
+ 			if (stext >= new_map->start && stext < new_map->end) {
+ 				replacement_map = new_map;
+ 				break;
+ 			}
++>>>>>>> 5654997838c2 (perf tools: Use the "_stest" symbol to identify the kernel map when loading kcore)
  		}
  	}
  
* Unmerged path tools/perf/util/symbol.c
