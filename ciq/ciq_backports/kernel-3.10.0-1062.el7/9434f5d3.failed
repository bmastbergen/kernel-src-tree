s390/zcrypt: fix broken zcrypt_send_cprb in-kernel api function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [s390] zcrypt: fix broken zcrypt_send_cprb in-kernel api function (Hendrik Brueckner) [1641030]
Rebuild_FUZZ: 95.87%
commit-author Harald Freudenberger <freude@linux.ibm.com>
commit 9434f5d3bef97c7212ef6d96d7783e3a3a6c1cb5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/9434f5d3.failed

With the new multi zcrypt device node support there came
in a code rework which broke the in-kernel api function
zcrypt_send_cprb(). This function is used by the pkey kernel
module and as an effect, transforming a secure key into a
protected key did not work any more.

	Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 9434f5d3bef97c7212ef6d96d7783e3a3a6c1cb5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/zcrypt_api.c
diff --cc drivers/s390/crypto/zcrypt_api.c
index 1c1ca46a7f0a,eb93c2d27d0a..000000000000
--- a/drivers/s390/crypto/zcrypt_api.c
+++ b/drivers/s390/crypto/zcrypt_api.c
@@@ -446,6 -890,11 +446,14 @@@ out
  			      AP_QID_CARD(qid), AP_QID_QUEUE(qid));
  	return rc;
  }
++<<<<<<< HEAD
++=======
+ 
+ long zcrypt_send_cprb(struct ica_xcRB *xcRB)
+ {
+ 	return _zcrypt_send_cprb(&ap_perms, xcRB);
+ }
++>>>>>>> 9434f5d3bef9 (s390/zcrypt: fix broken zcrypt_send_cprb in-kernel api function)
  EXPORT_SYMBOL(zcrypt_send_cprb);
  
  static bool is_desired_ep11_card(unsigned int dev_id,
* Unmerged path drivers/s390/crypto/zcrypt_api.c
