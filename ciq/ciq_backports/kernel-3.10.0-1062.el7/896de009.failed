RDMA/core: Use dev_name instead of ibdev->name

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jason Gunthorpe <jgg@mellanox.com>
commit 896de0090a85f4c3a2b37fc0f46215a73c5b5429
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/896de009.failed

These return the same thing but dev_name is a more conventional use of the
kernel API.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Reviewed-by: Steve Wise <swise@opengridcomputing.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
(cherry picked from commit 896de0090a85f4c3a2b37fc0f46215a73c5b5429)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
#	drivers/infiniband/core/fmr_pool.c
#	drivers/infiniband/core/sa_query.c
diff --cc drivers/infiniband/core/device.c
index 910f35ee49f7,d105b9b2d118..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -183,7 -182,9 +183,13 @@@ static int alloc_name(char *name
  		return -ENOMEM;
  
  	list_for_each_entry(device, &device_list, core_list) {
++<<<<<<< HEAD
 +		if (!sscanf(device->name, name, &i))
++=======
+ 		char buf[IB_DEVICE_NAME_MAX];
+ 
+ 		if (sscanf(dev_name(&device->dev), name, &i) != 1)
++>>>>>>> 896de0090a85 (RDMA/core: Use dev_name instead of ibdev->name)
  			continue;
  		if (i < 0 || i >= PAGE_SIZE * 8)
  			continue;
diff --cc drivers/infiniband/core/fmr_pool.c
index 593fc31a7a26,83ba0068e8bb..000000000000
--- a/drivers/infiniband/core/fmr_pool.c
+++ b/drivers/infiniband/core/fmr_pool.c
@@@ -265,15 -257,14 +265,23 @@@ struct ib_fmr_pool *ib_create_fmr_pool(
  	atomic_set(&pool->flush_ser, 0);
  	init_waitqueue_head(&pool->force_wait);
  
++<<<<<<< HEAD
 +	pool->thread = kthread_run(ib_fmr_cleanup_thread,
 +				   pool,
 +				   "ib_fmr(%s)",
 +				   device->name);
 +	if (IS_ERR(pool->thread)) {
 +		pr_warn(PFX "couldn't start cleanup thread\n");
 +		ret = PTR_ERR(pool->thread);
++=======
+ 	pool->worker =
+ 		kthread_create_worker(0, "ib_fmr(%s)", dev_name(&device->dev));
+ 	if (IS_ERR(pool->worker)) {
+ 		pr_warn(PFX "couldn't start cleanup kthread worker\n");
+ 		ret = PTR_ERR(pool->worker);
++>>>>>>> 896de0090a85 (RDMA/core: Use dev_name instead of ibdev->name)
  		goto out_free_pool;
  	}
 -	kthread_init_work(&pool->work, ib_fmr_cleanup_func);
  
  	{
  		struct ib_pool_fmr *fmr;
diff --cc drivers/infiniband/core/sa_query.c
index 76de57bb818a,19e1833e13fc..000000000000
--- a/drivers/infiniband/core/sa_query.c
+++ b/drivers/infiniband/core/sa_query.c
@@@ -760,9 -760,8 +760,14 @@@ static void ib_nl_set_path_rec_attrs(st
  	query->mad_buf->context[1] = NULL;
  
  	/* Construct the family header first */
++<<<<<<< HEAD
 +	header = (struct rdma_ls_resolve_header *)
 +		skb_put(skb, NLMSG_ALIGN(sizeof(*header)));
 +	memcpy(header->device_name, query->port->agent->device->name,
++=======
+ 	header = skb_put(skb, NLMSG_ALIGN(sizeof(*header)));
+ 	memcpy(header->device_name, dev_name(&query->port->agent->device->dev),
++>>>>>>> 896de0090a85 (RDMA/core: Use dev_name instead of ibdev->name)
  	       LS_DEVICE_NAME_MAX);
  	header->port_num = query->port->port_num;
  
diff --git a/drivers/infiniband/core/cm.c b/drivers/infiniband/core/cm.c
index ffba11f77b8e..755f42c2203a 100644
--- a/drivers/infiniband/core/cm.c
+++ b/drivers/infiniband/core/cm.c
@@ -4365,7 +4365,7 @@ static void cm_add_one(struct ib_device *ib_device)
 	cm_dev->going_down = 0;
 	cm_dev->device = device_create(&cm_class, &ib_device->dev,
 				       MKDEV(0, 0), NULL,
-				       "%s", ib_device->name);
+				       "%s", dev_name(&ib_device->dev));
 	if (IS_ERR(cm_dev->device)) {
 		kfree(cm_dev);
 		return;
diff --git a/drivers/infiniband/core/cma_configfs.c b/drivers/infiniband/core/cma_configfs.c
index f7c07b4b2e9c..3f267c4728d3 100644
--- a/drivers/infiniband/core/cma_configfs.c
+++ b/drivers/infiniband/core/cma_configfs.c
@@ -65,7 +65,7 @@ static struct cma_dev_port_group *to_dev_port_group(struct config_item *item)
 
 static bool filter_by_name(struct ib_device *ib_dev, void *cookie)
 {
-	return !strcmp(ib_dev->name, cookie);
+	return !strcmp(dev_name(&ib_dev->dev), cookie);
 }
 
 static int cma_configfs_params_get(struct config_item *item,
* Unmerged path drivers/infiniband/core/device.c
* Unmerged path drivers/infiniband/core/fmr_pool.c
diff --git a/drivers/infiniband/core/iwcm.c b/drivers/infiniband/core/iwcm.c
index 5d676cff41f4..ba668d49c751 100644
--- a/drivers/infiniband/core/iwcm.c
+++ b/drivers/infiniband/core/iwcm.c
@@ -509,7 +509,7 @@ static int iw_cm_map(struct iw_cm_id *cm_id, bool active)
 	cm_id->m_local_addr = cm_id->local_addr;
 	cm_id->m_remote_addr = cm_id->remote_addr;
 
-	memcpy(pm_reg_msg.dev_name, cm_id->device->name,
+	memcpy(pm_reg_msg.dev_name, dev_name(&cm_id->device->dev),
 	       sizeof(pm_reg_msg.dev_name));
 	memcpy(pm_reg_msg.if_name, cm_id->device->iwcm->ifname,
 	       sizeof(pm_reg_msg.if_name));
diff --git a/drivers/infiniband/core/nldev.c b/drivers/infiniband/core/nldev.c
index 67368b6847cb..95b3e431e732 100644
--- a/drivers/infiniband/core/nldev.c
+++ b/drivers/infiniband/core/nldev.c
@@ -77,7 +77,8 @@ static int fill_nldev_handle(struct sk_buff *msg, struct ib_device *device)
 {
 	if (nla_put_u32(msg, RDMA_NLDEV_ATTR_DEV_INDEX, device->index))
 		return -EMSGSIZE;
-	if (nla_put_string(msg, RDMA_NLDEV_ATTR_DEV_NAME, device->name))
+	if (nla_put_string(msg, RDMA_NLDEV_ATTR_DEV_NAME,
+			   dev_name(&device->dev)))
 		return -EMSGSIZE;
 
 	return 0;
* Unmerged path drivers/infiniband/core/sa_query.c
diff --git a/drivers/infiniband/core/security.c b/drivers/infiniband/core/security.c
index 9b0bea8303e0..1143c0448666 100644
--- a/drivers/infiniband/core/security.c
+++ b/drivers/infiniband/core/security.c
@@ -685,9 +685,8 @@ static int ib_mad_agent_security_change(struct notifier_block *nb,
 	if (event != LSM_POLICY_CHANGE)
 		return NOTIFY_DONE;
 
-	ag->smp_allowed = !security_ib_endport_manage_subnet(ag->security,
-							     ag->device->name,
-							     ag->port_num);
+	ag->smp_allowed = !security_ib_endport_manage_subnet(
+		ag->security, dev_name(&ag->device->dev), ag->port_num);
 
 	return NOTIFY_OK;
 }
@@ -708,7 +707,7 @@ int ib_mad_agent_security_setup(struct ib_mad_agent *agent,
 		return 0;
 
 	ret = security_ib_endport_manage_subnet(agent->security,
-						agent->device->name,
+						dev_name(&agent->device->dev),
 						agent->port_num);
 	if (ret)
 		return ret;
diff --git a/drivers/infiniband/core/user_mad.c b/drivers/infiniband/core/user_mad.c
index 9c1a619be377..2b041f059962 100644
--- a/drivers/infiniband/core/user_mad.c
+++ b/drivers/infiniband/core/user_mad.c
@@ -1131,7 +1131,7 @@ static ssize_t show_ibdev(struct device *dev, struct device_attribute *attr,
 	if (!port)
 		return -ENODEV;
 
-	return sprintf(buf, "%s\n", port->ib_dev->name);
+	return sprintf(buf, "%s\n", dev_name(&port->ib_dev->dev));
 }
 static DEVICE_ATTR(ibdev, S_IRUGO, show_ibdev, NULL);
 
diff --git a/drivers/infiniband/core/uverbs_main.c b/drivers/infiniband/core/uverbs_main.c
index 8cc3600913c7..b376ab720afc 100644
--- a/drivers/infiniband/core/uverbs_main.c
+++ b/drivers/infiniband/core/uverbs_main.c
@@ -977,7 +977,7 @@ static ssize_t show_ibdev(struct device *device, struct device_attribute *attr,
 	srcu_key = srcu_read_lock(&dev->disassociate_srcu);
 	ib_dev = srcu_dereference(dev->ib_dev, &dev->disassociate_srcu);
 	if (ib_dev)
-		ret = sprintf(buf, "%s\n", ib_dev->name);
+		ret = sprintf(buf, "%s\n", dev_name(&ib_dev->dev));
 	srcu_read_unlock(&dev->disassociate_srcu, srcu_key);
 
 	return ret;
