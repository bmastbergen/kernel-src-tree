ovl: fix recursive oi->lock in ovl_link()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Amir Goldstein <amir73il@gmail.com>
commit 6cd078702f2f33cb6b19a682de3e9184112f1a46
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/6cd07870.failed

linking a non-copied-up file into a non-copied-up parent results in a
nested call to mutex_lock_interruptible(&oi->lock). Fix this by copying up
target parent before ovl_nlink_start(), same as done in ovl_rename().

~/unionmount-testsuite$ ./run --ov -s
~/unionmount-testsuite$ ln /mnt/a/foo100 /mnt/a/dir100/

 WARNING: possible recursive locking detected
 --------------------------------------------
 ln/1545 is trying to acquire lock:
 00000000bcce7c4c (&ovl_i_lock_key[depth]){+.+.}, at:
     ovl_copy_up_start+0x28/0x7d
 but task is already holding lock:
 0000000026d73d5b (&ovl_i_lock_key[depth]){+.+.}, at:
     ovl_nlink_start+0x3c/0xc1

[SzM: this seems to be a false positive, but doing the copy-up first is
harmless and removes the lockdep splat]

	Reported-by: syzbot+3ef5c0d1a5cb0b21e6be@syzkaller.appspotmail.com
Fixes: 5f8415d6b87e ("ovl: persistent overlay inode nlink for...")
	Cc: <stable@vger.kernel.org> # v4.13
	Signed-off-by: Amir Goldstein <amir73il@gmail.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 6cd078702f2f33cb6b19a682de3e9184112f1a46)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/dir.c
diff --cc fs/overlayfs/dir.c
index f6a29de3ac88,e1a55ecb7aba..000000000000
--- a/fs/overlayfs/dir.c
+++ b/fs/overlayfs/dir.c
@@@ -634,6 -663,16 +634,19 @@@ static int ovl_link(struct dentry *old
  	if (err)
  		goto out_drop_write;
  
++<<<<<<< HEAD
++=======
+ 	err = ovl_copy_up(new->d_parent);
+ 	if (err)
+ 		goto out_drop_write;
+ 
+ 	if (ovl_is_metacopy_dentry(old)) {
+ 		err = ovl_set_redirect(old, false);
+ 		if (err)
+ 			goto out_drop_write;
+ 	}
+ 
++>>>>>>> 6cd078702f2f (ovl: fix recursive oi->lock in ovl_link())
  	err = ovl_nlink_start(old, &locked);
  	if (err)
  		goto out_drop_write;
* Unmerged path fs/overlayfs/dir.c
