sctp: sctp_sock_migrate() returns error if sctp_bind_addr_dup() fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Xin Long <lucien.xin@gmail.com>
commit 89664c623617b1d34447a927ac7871ddf3db29d3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/89664c62.failed

It should fail to create the new sk if sctp_bind_addr_dup() fails
when accepting or peeloff an association.

	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 89664c623617b1d34447a927ac7871ddf3db29d3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sctp/socket.c
diff --cc net/sctp/socket.c
index ba0ee1c01518,44f2acb3d433..000000000000
--- a/net/sctp/socket.c
+++ b/net/sctp/socket.c
@@@ -105,15 -102,11 +105,21 @@@ static int sctp_send_asconf(struct sctp
  			    struct sctp_chunk *chunk);
  static int sctp_do_bind(struct sock *, union sctp_addr *, int);
  static int sctp_autobind(struct sock *sk);
++<<<<<<< HEAD
 +static void sctp_sock_migrate(struct sock *, struct sock *,
 +			      struct sctp_association *, sctp_socket_type_t);
++=======
+ static int sctp_sock_migrate(struct sock *oldsk, struct sock *newsk,
+ 			     struct sctp_association *assoc,
+ 			     enum sctp_socket_type type);
++>>>>>>> 89664c623617 (sctp: sctp_sock_migrate() returns error if sctp_bind_addr_dup() fails)
  
 -static unsigned long sctp_memory_pressure;
 +extern struct kmem_cache *sctp_bucket_cachep;
 +extern long sysctl_sctp_mem[3];
 +extern int sysctl_sctp_rmem[3];
 +extern int sysctl_sctp_wmem[3];
 +
 +static int sctp_memory_pressure;
  static atomic_long_t sctp_memory_allocated;
  struct percpu_counter sctp_sockets_allocated;
  
@@@ -7837,9 -9180,9 +7852,15 @@@ static inline void sctp_copy_descendant
  /* Populate the fields of the newsk from the oldsk and migrate the assoc
   * and its messages to the newsk.
   */
++<<<<<<< HEAD
 +static void sctp_sock_migrate(struct sock *oldsk, struct sock *newsk,
 +			      struct sctp_association *assoc,
 +			      sctp_socket_type_t type)
++=======
+ static int sctp_sock_migrate(struct sock *oldsk, struct sock *newsk,
+ 			     struct sctp_association *assoc,
+ 			     enum sctp_socket_type type)
++>>>>>>> 89664c623617 (sctp: sctp_sock_migrate() returns error if sctp_bind_addr_dup() fails)
  {
  	struct sctp_sock *oldsp = sctp_sk(oldsk);
  	struct sctp_sock *newsp = sctp_sk(newsk);
* Unmerged path net/sctp/socket.c
