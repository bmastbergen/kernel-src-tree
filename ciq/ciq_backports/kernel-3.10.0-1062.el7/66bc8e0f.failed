iavf: finish renaming files to iavf

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jesse Brandeburg <jesse.brandeburg@intel.com>
commit 66bc8e0f591a4bb00d6d0423dde6ab839045eaf9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/66bc8e0f.failed

This finishes the process of renaming the files that
make sense to rename (skipping adminq related files that
talk to i40e), and fixes up the build and the #includes
so that everything builds nicely.

	Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 66bc8e0f591a4bb00d6d0423dde6ab839045eaf9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40evf/i40e_osdep.h
#	drivers/net/ethernet/intel/i40evf/i40e_status.h
#	drivers/net/ethernet/intel/i40evf/i40e_txrx.c
#	drivers/net/ethernet/intel/i40evf/i40evf_client.c
#	drivers/net/ethernet/intel/i40evf/i40evf_main.c
#	drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
#	drivers/net/ethernet/intel/i40evf/iavf_alloc.h
#	drivers/net/ethernet/intel/i40evf/iavf_common.c
#	drivers/net/ethernet/intel/i40evf/iavf_devids.h
#	drivers/net/ethernet/intel/i40evf/iavf_osdep.h
#	drivers/net/ethernet/intel/i40evf/iavf_prototype.h
#	drivers/net/ethernet/intel/i40evf/iavf_register.h
#	drivers/net/ethernet/intel/i40evf/iavf_status.h
#	drivers/net/ethernet/intel/i40evf/iavf_type.h
#	drivers/net/ethernet/intel/iavf/Makefile
#	drivers/net/ethernet/intel/iavf/i40e_osdep.h
#	drivers/net/ethernet/intel/iavf/i40e_status.h
#	drivers/net/ethernet/intel/iavf/iavf.h
diff --cc drivers/net/ethernet/intel/i40evf/i40e_txrx.c
index 800d621606e8,edc349f49748..000000000000
--- a/drivers/net/ethernet/intel/i40evf/i40e_txrx.c
+++ b/drivers/net/ethernet/intel/i40evf/i40e_txrx.c
@@@ -4,9 -4,9 +4,15 @@@
  #include <linux/prefetch.h>
  #include <net/busy_poll.h>
  
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40e_txrx.c
 +#include "i40evf.h"
 +#include "i40e_trace.h"
 +#include "i40e_prototype.h"
++=======
+ #include "iavf.h"
+ #include "iavf_trace.h"
+ #include "iavf_prototype.h"
++>>>>>>> 66bc8e0f591a (iavf: finish renaming files to iavf):drivers/net/ethernet/intel/iavf/iavf_txrx.c
  
  static inline __le64 build_ctob(u32 td_cmd, u32 td_offset, unsigned int size,
  				u32 td_tag)
diff --cc drivers/net/ethernet/intel/i40evf/i40evf_client.c
index 3cc9d60d0d72,aea45364fd1c..000000000000
--- a/drivers/net/ethernet/intel/i40evf/i40evf_client.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_client.c
@@@ -4,27 -4,27 +4,33 @@@
  #include <linux/list.h>
  #include <linux/errno.h>
  
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40evf_client.c
 +#include "i40evf.h"
 +#include "i40e_prototype.h"
 +#include "i40evf_client.h"
++=======
+ #include "iavf.h"
+ #include "iavf_prototype.h"
+ #include "iavf_client.h"
++>>>>>>> 66bc8e0f591a (iavf: finish renaming files to iavf):drivers/net/ethernet/intel/iavf/iavf_client.c
  
  static
 -const char iavf_client_interface_version_str[] = IAVF_CLIENT_VERSION_STR;
 +const char i40evf_client_interface_version_str[] = I40EVF_CLIENT_VERSION_STR;
  static struct i40e_client *vf_registered_client;
 -static LIST_HEAD(i40e_devices);
 -static DEFINE_MUTEX(iavf_device_mutex);
 +static LIST_HEAD(i40evf_devices);
 +static DEFINE_MUTEX(i40evf_device_mutex);
  
 -static u32 iavf_client_virtchnl_send(struct i40e_info *ldev,
 -				     struct i40e_client *client,
 -				     u8 *msg, u16 len);
 +static u32 i40evf_client_virtchnl_send(struct i40e_info *ldev,
 +				       struct i40e_client *client,
 +				       u8 *msg, u16 len);
  
 -static int iavf_client_setup_qvlist(struct i40e_info *ldev,
 -				    struct i40e_client *client,
 -				    struct i40e_qvlist_info *qvlist_info);
 +static int i40evf_client_setup_qvlist(struct i40e_info *ldev,
 +				      struct i40e_client *client,
 +				      struct i40e_qvlist_info *qvlist_info);
  
 -static struct i40e_ops iavf_lan_ops = {
 -	.virtchnl_send = iavf_client_virtchnl_send,
 -	.setup_qvlist = iavf_client_setup_qvlist,
 +static struct i40e_ops i40evf_lan_ops = {
 +	.virtchnl_send = i40evf_client_virtchnl_send,
 +	.setup_qvlist = i40evf_client_setup_qvlist,
  };
  
  /**
diff --cc drivers/net/ethernet/intel/i40evf/i40evf_main.c
index 950c8aeb0fc9,59bb9de713f7..000000000000
--- a/drivers/net/ethernet/intel/i40evf/i40evf_main.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
@@@ -1,10 -1,10 +1,17 @@@
  // SPDX-License-Identifier: GPL-2.0
  /* Copyright(c) 2013 - 2018 Intel Corporation. */
  
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40evf_main.c
 +#include "i40evf.h"
 +#include "i40e_prototype.h"
 +#include "i40evf_client.h"
 +/* All i40evf tracepoints are defined by the include below, which must
++=======
+ #include "iavf.h"
+ #include "iavf_prototype.h"
+ #include "iavf_client.h"
+ /* All iavf tracepoints are defined by the include below, which must
++>>>>>>> 66bc8e0f591a (iavf: finish renaming files to iavf):drivers/net/ethernet/intel/iavf/iavf_main.c
   * be included exactly once across the whole kernel with
   * CREATE_TRACE_POINTS defined
   */
diff --cc drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
index 6579dabab78c,e64751da0921..000000000000
--- a/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
@@@ -1,16 -1,16 +1,22 @@@
  // SPDX-License-Identifier: GPL-2.0
  /* Copyright(c) 2013 - 2018 Intel Corporation. */
  
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
 +#include "i40evf.h"
 +#include "i40e_prototype.h"
 +#include "i40evf_client.h"
++=======
+ #include "iavf.h"
+ #include "iavf_prototype.h"
+ #include "iavf_client.h"
++>>>>>>> 66bc8e0f591a (iavf: finish renaming files to iavf):drivers/net/ethernet/intel/iavf/iavf_virtchnl.c
  
  /* busy wait delay in msec */
 -#define IAVF_BUSY_WAIT_DELAY 10
 -#define IAVF_BUSY_WAIT_COUNT 50
 +#define I40EVF_BUSY_WAIT_DELAY 10
 +#define I40EVF_BUSY_WAIT_COUNT 50
  
  /**
 - * iavf_send_pf_msg
 + * i40evf_send_pf_msg
   * @adapter: adapter structure
   * @op: virtual channel opcode
   * @msg: pointer to message buffer
* Unmerged path drivers/net/ethernet/intel/i40evf/i40e_osdep.h
* Unmerged path drivers/net/ethernet/intel/i40evf/i40e_status.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_alloc.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_common.c
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_devids.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_osdep.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_prototype.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_register.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_status.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_type.h
* Unmerged path drivers/net/ethernet/intel/iavf/Makefile
* Unmerged path drivers/net/ethernet/intel/iavf/i40e_osdep.h
* Unmerged path drivers/net/ethernet/intel/iavf/i40e_status.h
* Unmerged path drivers/net/ethernet/intel/iavf/iavf.h
diff --git a/drivers/net/ethernet/intel/i40evf/i40e_adminq.c b/drivers/net/ethernet/intel/i40evf/i40e_adminq.c
index 35630356cd6a..b8c20e0d28c8 100644
--- a/drivers/net/ethernet/intel/i40evf/i40e_adminq.c
+++ b/drivers/net/ethernet/intel/i40evf/i40e_adminq.c
@@ -1,11 +1,11 @@
 // SPDX-License-Identifier: GPL-2.0
 /* Copyright(c) 2013 - 2018 Intel Corporation. */
 
-#include "i40e_status.h"
-#include "i40e_type.h"
-#include "i40e_register.h"
+#include "iavf_status.h"
+#include "iavf_type.h"
+#include "iavf_register.h"
 #include "i40e_adminq.h"
-#include "i40e_prototype.h"
+#include "iavf_prototype.h"
 
 /**
  * i40e_is_nvm_update_op - return true if this is an NVM update operation
diff --git a/drivers/net/ethernet/intel/i40evf/i40e_adminq.h b/drivers/net/ethernet/intel/i40evf/i40e_adminq.h
index 8c3b6e00d5d7..6f1182bba9aa 100644
--- a/drivers/net/ethernet/intel/i40evf/i40e_adminq.h
+++ b/drivers/net/ethernet/intel/i40evf/i40e_adminq.h
@@ -4,8 +4,8 @@
 #ifndef _I40E_ADMINQ_H_
 #define _I40E_ADMINQ_H_
 
-#include "i40e_osdep.h"
-#include "i40e_status.h"
+#include "iavf_osdep.h"
+#include "iavf_status.h"
 #include "i40e_adminq_cmd.h"
 
 #define IAVF_ADMINQ_DESC(R, i)   \
* Unmerged path drivers/net/ethernet/intel/i40evf/i40e_osdep.h
* Unmerged path drivers/net/ethernet/intel/i40evf/i40e_status.h
* Unmerged path drivers/net/ethernet/intel/i40evf/i40e_txrx.c
* Unmerged path drivers/net/ethernet/intel/i40evf/i40evf_client.c
* Unmerged path drivers/net/ethernet/intel/i40evf/i40evf_main.c
* Unmerged path drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_alloc.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_common.c
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_devids.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_osdep.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_prototype.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_register.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_status.h
* Unmerged path drivers/net/ethernet/intel/i40evf/iavf_type.h
* Unmerged path drivers/net/ethernet/intel/iavf/Makefile
* Unmerged path drivers/net/ethernet/intel/iavf/i40e_osdep.h
* Unmerged path drivers/net/ethernet/intel/iavf/i40e_status.h
* Unmerged path drivers/net/ethernet/intel/iavf/iavf.h
