perf symbols: Add BSS symbols when reading from /proc/kallsyms

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 2be732c02adb15ed7f2196f075fe63ba6991642c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/2be732c0.failed

We were not considering 'B' and 'b' (BSS, uninitialized data objects,
that gets set to zero at program start), do it so that we can resolve
more symbols in tools doing resolution of data operands, like 'perf c2c'.

When using vmlinux, i.e. an ELF symbol table, those were already
considered, as the decision was about STT_FUNC or STT_OBJECT, and the
later covers BSS symbols.

  # grep -i ' b ' /proc/kallsyms  | head -20 | tail -5
  ffffffffa789d030 b execute_command
  ffffffffa789d038 b initcall_command_line
  ffffffffa789d040 b static_command_line
  ffffffffa789d048 B ROOT_DEV
  ffffffffa789d050 b once.73786
  #
  # readelf -s /lib/modules/`uname -r`/build/vmlinux | grep ROOT_DEV
  79219: ffffffff8289d048     4 OBJECT  GLOBAL DEFAULT   58 ROOT_DEV
  #

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-z960xobig39ca1pmp5brl2fr@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 2be732c02adb15ed7f2196f075fe63ba6991642c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/symbol.c
diff --cc tools/perf/util/symbol.c
index 6eafab72ae58,d188b7588152..000000000000
--- a/tools/perf/util/symbol.c
+++ b/tools/perf/util/symbol.c
@@@ -67,18 -70,10 +67,22 @@@ static enum dso_binary_type binary_type
  
  #define DSO_BINARY_TYPE__SYMTAB_CNT ARRAY_SIZE(binary_type_symtab)
  
 -static bool symbol_type__filter(char symbol_type)
 +static bool symbol_type__is_a(char symbol_type, enum map_type map_type)
  {
  	symbol_type = toupper(symbol_type);
++<<<<<<< HEAD
 +
 +	switch (map_type) {
 +	case MAP__FUNCTION:
 +		return symbol_type == 'T' || symbol_type == 'W';
 +	case MAP__VARIABLE:
 +		return symbol_type == 'D';
 +	default:
 +		return false;
 +	}
++=======
+ 	return symbol_type == 'T' || symbol_type == 'W' || symbol_type == 'D' || symbol_type == 'B';
++>>>>>>> 2be732c02adb (perf symbols: Add BSS symbols when reading from /proc/kallsyms)
  }
  
  static int prefix_underscores_count(const char *str)
* Unmerged path tools/perf/util/symbol.c
