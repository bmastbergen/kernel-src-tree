net: phy: restart phy autonegotiation after EEE advertisment change

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] phy: restart phy autonegotiation after EEE advertisment change (Ivan Vecera) [1655590]
Rebuild_FUZZ: 96.12%
commit-author Russell King <rmk+kernel@armlinux.org.uk>
commit f75abeb8338e2d5bcdfc393dff3950a7039eab5a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/f75abeb8.failed

When the EEE advertisment is changed, we should restart autonegotiation
to update the link partner with the new EEE settings.  Add this trigger
but only if the advertisment has changed.

	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f75abeb8338e2d5bcdfc393dff3950a7039eab5a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phy.c
diff --cc drivers/net/phy/phy.c
index f64de02dbd2e,345251f21699..000000000000
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@@ -1196,11 -1332,38 +1196,45 @@@ EXPORT_SYMBOL(phy_ethtool_get_eee)
   */
  int phy_ethtool_set_eee(struct phy_device *phydev, struct ethtool_eee *data)
  {
++<<<<<<< HEAD
 +	int val = ethtool_adv_to_mmd_eee_adv_t(data->advertised);
++=======
+ 	int cap, old_adv, adv, ret;
++>>>>>>> f75abeb8338e (net: phy: restart phy autonegotiation after EEE advertisment change)
  
 -	if (!phydev->drv)
 -		return -EIO;
 +	phy_write_mmd_indirect(phydev->bus, MDIO_AN_EEE_ADV, MDIO_MMD_AN,
 +			       phydev->addr, val);
  
++<<<<<<< HEAD
++=======
+ 	/* Get Supported EEE */
+ 	cap = phy_read_mmd(phydev, MDIO_MMD_PCS, MDIO_PCS_EEE_ABLE);
+ 	if (cap < 0)
+ 		return cap;
+ 
+ 	old_adv = phy_read_mmd(phydev, MDIO_MMD_AN, MDIO_AN_EEE_ADV);
+ 	if (old_adv < 0)
+ 		return old_adv;
+ 
+ 	adv = ethtool_adv_to_mmd_eee_adv_t(data->advertised) & cap;
+ 
+ 	/* Mask prohibited EEE modes */
+ 	adv &= ~phydev->eee_broken_modes;
+ 
+ 	if (old_adv != adv) {
+ 		ret = phy_write_mmd(phydev, MDIO_MMD_AN, MDIO_AN_EEE_ADV, adv);
+ 		if (ret < 0)
+ 			return ret;
+ 
+ 		/* Restart autonegotiation so the new modes get sent to the
+ 		 * link partner.
+ 		 */
+ 		ret = genphy_restart_aneg(phydev);
+ 		if (ret < 0)
+ 			return ret;
+ 	}
+ 
++>>>>>>> f75abeb8338e (net: phy: restart phy autonegotiation after EEE advertisment change)
  	return 0;
  }
  EXPORT_SYMBOL(phy_ethtool_set_eee);
* Unmerged path drivers/net/phy/phy.c
