RDMA/mlx5: Use rdma_user_mmap_io

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jason Gunthorpe <jgg@mellanox.com>
commit e2cd1d1ad204664f9ce78cb61c9307c149051f8e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e2cd1d1a.failed

Rely on the new core code helper to map BAR memory from the driver.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit e2cd1d1ad204664f9ce78cb61c9307c149051f8e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
diff --cc drivers/infiniband/hw/mlx5/main.c
index b529cb4f76e1,aeb328100986..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -1751,11 -1734,21 +1751,9 @@@ static struct ib_ucontext *mlx5_ib_allo
  	if (MLX5_CAP_GEN(dev->mdev, dump_fill_mkey)) {
  		err = mlx5_cmd_dump_fill_mkey(dev->mdev, &dump_fill_mkey);
  		if (err)
 -			goto out_mdev;
 +			goto out_td;
  	}
  
- 	INIT_LIST_HEAD(&context->vma_private_list);
- 	mutex_init(&context->vma_private_list_mutex);
  	INIT_LIST_HEAD(&context->db_page_list);
  	mutex_init(&context->db_page_mutex);
  
@@@ -2128,13 -2043,6 +2032,15 @@@ static int uar_mmap(struct mlx5_ib_dev 
  		goto err;
  	}
  
++<<<<<<< HEAD
 +	pa = pfn << PAGE_SHIFT;
 +
 +	err = mlx5_ib_set_vma_data(vma, context);
 +	if (err)
 +		goto err;
 +
++=======
++>>>>>>> e2cd1d1ad204 (RDMA/mlx5: Use rdma_user_mmap_io)
  	if (dyn_uar)
  		bfregi->sys_pages[idx] = uar_index;
  	return 0;
@@@ -2151,6 -2059,27 +2057,30 @@@ free_bfreg
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ static int dm_mmap(struct ib_ucontext *context, struct vm_area_struct *vma)
+ {
+ 	struct mlx5_ib_ucontext *mctx = to_mucontext(context);
+ 	struct mlx5_ib_dev *dev = to_mdev(context->device);
+ 	u16 page_idx = get_extended_index(vma->vm_pgoff);
+ 	size_t map_size = vma->vm_end - vma->vm_start;
+ 	u32 npages = map_size >> PAGE_SHIFT;
+ 	phys_addr_t pfn;
+ 
+ 	if (find_next_zero_bit(mctx->dm_pages, page_idx + npages, page_idx) !=
+ 	    page_idx + npages)
+ 		return -EINVAL;
+ 
+ 	pfn = ((pci_resource_start(dev->mdev->pdev, 0) +
+ 	      MLX5_CAP64_DEV_MEM(dev->mdev, memic_bar_start_addr)) >>
+ 	      PAGE_SHIFT) +
+ 	      page_idx;
+ 	return rdma_user_mmap_io(context, vma, pfn, map_size,
+ 				 pgprot_writecombine(vma->vm_page_prot));
+ }
+ 
++>>>>>>> e2cd1d1ad204 (RDMA/mlx5: Use rdma_user_mmap_io)
  static int mlx5_ib_mmap(struct ib_ucontext *ibcontext, struct vm_area_struct *vma)
  {
  	struct mlx5_ib_ucontext *context = to_mucontext(ibcontext);
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index 71b1991d86b3,81154b598266..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -102,11 -106,14 +102,22 @@@ enum 
  	MLX5_IB_INVALID_BFREG		= BIT(31),
  };
  
++<<<<<<< HEAD
 +struct mlx5_ib_vma_private_data {
 +	struct list_head list;
 +	struct vm_area_struct *vma;
 +	/* protect vma_private_list add/del */
 +	struct mutex *vma_private_list_mutex;
++=======
+ enum {
+ 	MLX5_MAX_MEMIC_PAGES = 0x100,
+ 	MLX5_MEMIC_ALLOC_SIZE_MASK = 0x3f,
+ };
+ 
+ enum {
+ 	MLX5_MEMIC_BASE_ALIGN	= 6,
+ 	MLX5_MEMIC_BASE_SIZE	= 1 << MLX5_MEMIC_BASE_ALIGN,
++>>>>>>> e2cd1d1ad204 (RDMA/mlx5: Use rdma_user_mmap_io)
  };
  
  struct mlx5_ib_ucontext {
@@@ -120,11 -127,12 +131,8 @@@
  	u8			cqe_version;
  	/* Transport Domain number */
  	u32			tdn;
- 	struct list_head	vma_private_list;
- 	/* protect vma_private_list add/del */
- 	struct mutex		vma_private_list_mutex;
  
  	u64			lib_caps;
 -	DECLARE_BITMAP(dm_pages, MLX5_MAX_MEMIC_PAGES);
 -	u16			devx_uid;
 -	/* For RoCE LAG TX affinity */
 -	atomic_t		tx_port_affinity;
  };
  
  static inline struct mlx5_ib_ucontext *to_mucontext(struct ib_ucontext *ibucontext)
* Unmerged path drivers/infiniband/hw/mlx5/main.c
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
