x86/mce/AMD: Pass the bank number to smca_get_bank_type()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [x86] mce/amd: Pass the bank number to smca_get_bank_type() (David Arcari) [1676301]
Rebuild_FUZZ: 96.36%
commit-author Yazen Ghannam <yazen.ghannam@amd.com>
commit e5d6a126d4c473499f354254a15ca0c2d8c84ca3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e5d6a126.failed

Pass the bank number to smca_get_bank_type() since that's all we need.

Also, we should compare the bank number to MAX_NR_BANKS (size of the
smca_banks array) not the number of bank types. Bank types are reused
for multiple banks, so the number of types can be different from the
number of banks in a system and thus we could return an invalid bank
type.

	Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: <stable@vger.kernel.org> # 4.14.x
	Cc: <stable@vger.kernel.org> # 4.14.x: 11cf887728a3 x86/MCE/AMD: Define a function to get SMCA bank type
	Cc: <stable@vger.kernel.org> # 4.14.x: c6708d50f166 x86/MCE: Report only DRAM ECC as memory errors on AMD systems
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
Link: http://lkml.kernel.org/r/20180221101900.10326-6-bp@alien8.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit e5d6a126d4c473499f354254a15ca0c2d8c84ca3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce_amd.c
diff --cc arch/x86/kernel/cpu/mcheck/mce_amd.c
index 89d7b0aeefb3,7fbb19cb1859..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_amd.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_amd.c
@@@ -84,9 -92,25 +84,9 @@@ struct smca_bank_name smca_names[] = 
  	[SMCA_PSP]	= { "psp",		"Platform Security Processor" },
  	[SMCA_SMU]	= { "smu",		"System Management Unit" },
  };
 -
 -const char *smca_get_name(enum smca_bank_types t)
 -{
 -	if (t >= N_SMCA_BANK_TYPES)
 -		return NULL;
 -
 -	return smca_names[t].name;
 -}
 -
 -const char *smca_get_long_name(enum smca_bank_types t)
 -{
 -	if (t >= N_SMCA_BANK_TYPES)
 -		return NULL;
 -
 -	return smca_names[t].long_name;
 -}
 -EXPORT_SYMBOL_GPL(smca_get_long_name);
 +EXPORT_SYMBOL_GPL(smca_names);
  
- static enum smca_bank_types smca_get_bank_type(struct mce *m)
+ static enum smca_bank_types smca_get_bank_type(unsigned int bank)
  {
  	struct smca_bank *b;
  
@@@ -741,25 -754,20 +741,40 @@@ out_err
  }
  EXPORT_SYMBOL_GPL(umc_normaddr_to_sysaddr);
  
++<<<<<<< HEAD
 +static void
 +__log_error(unsigned int bank, bool deferred_err, bool threshold_err, u64 misc)
++=======
+ bool amd_mce_is_memory_error(struct mce *m)
+ {
+ 	/* ErrCodeExt[20:16] */
+ 	u8 xec = (m->status >> 16) & 0x1f;
+ 
+ 	if (mce_flags.smca)
+ 		return smca_get_bank_type(m->bank) == SMCA_UMC && xec == 0x0;
+ 
+ 	return m->bank == 4 && xec == 0x8;
+ }
+ 
+ static void __log_error(unsigned int bank, u64 status, u64 addr, u64 misc)
++>>>>>>> e5d6a126d4c4 (x86/mce/AMD: Pass the bank number to smca_get_bank_type())
  {
 +	u32 msr_status = msr_ops.status(bank);
 +	u32 msr_addr = msr_ops.addr(bank);
  	struct mce m;
 +	u64 status;
 +
 +	WARN_ON_ONCE(deferred_err && threshold_err);
 +
 +	if (deferred_err && mce_flags.smca) {
 +		msr_status = MSR_AMD64_SMCA_MCx_DESTAT(bank);
 +		msr_addr = MSR_AMD64_SMCA_MCx_DEADDR(bank);
 +	}
 +
 +	rdmsrl(msr_status, status);
 +
 +	if (!(status & MCI_STATUS_VAL))
 +		return;
  
  	mce_setup(&m);
  
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_amd.c
