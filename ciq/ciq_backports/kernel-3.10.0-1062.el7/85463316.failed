RDMA/core: Prefix _ib to IB/RoCE specific functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Parav Pandit <parav@mellanox.com>
commit 854633165164d19832225ece148370bb9f3b0034
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/85463316.failed

In rdma cm module, functions which are common between IB and iWarp
are named with cma_.
iWarp specific functions are prefixed with cma_iw.
IB specific functions are perfixed with cma_ib.

However some functions in request processing path didn't follow
cma_ib notion. Prefix them with _ib for better code clarity.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 854633165164d19832225ece148370bb9f3b0034)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cma.c
diff --cc drivers/infiniband/core/cma.c
index 15c755e0a036,f72677291b69..000000000000
--- a/drivers/infiniband/core/cma.c
+++ b/drivers/infiniband/core/cma.c
@@@ -1505,9 -1513,10 +1505,16 @@@ static struct rdma_id_private *cma_find
  	return ERR_PTR(-EINVAL);
  }
  
++<<<<<<< HEAD
 +static struct rdma_id_private *cma_id_from_event(struct ib_cm_id *cm_id,
 +						 struct ib_cm_event *ib_event,
 +						 struct net_device **net_dev)
++=======
+ static struct rdma_id_private *
+ cma_ib_id_from_event(struct ib_cm_id *cm_id,
+ 		     const struct ib_cm_event *ib_event,
+ 		     struct net_device **net_dev)
++>>>>>>> 854633165164 (RDMA/core: Prefix _ib to IB/RoCE specific functions)
  {
  	struct cma_req_info req;
  	struct rdma_bind_list *bind_list;
@@@ -1849,10 -1859,12 +1856,17 @@@ out
  	return ret;
  }
  
++<<<<<<< HEAD
 +static struct rdma_id_private *cma_new_conn_id(struct rdma_cm_id *listen_id,
 +					       struct ib_cm_event *ib_event,
 +					       struct net_device *net_dev)
++=======
+ static struct rdma_id_private *
+ cma_ib_new_conn_id(const struct rdma_cm_id *listen_id,
+ 		   const struct ib_cm_event *ib_event,
+ 		   struct net_device *net_dev)
++>>>>>>> 854633165164 (RDMA/core: Prefix _ib to IB/RoCE specific functions)
  {
 -	struct rdma_id_private *listen_id_priv;
  	struct rdma_id_private *id_priv;
  	struct rdma_cm_id *id;
  	struct rdma_route *rt;
@@@ -1909,10 -1923,12 +1923,17 @@@ err
  	return NULL;
  }
  
++<<<<<<< HEAD
 +static struct rdma_id_private *cma_new_udp_id(struct rdma_cm_id *listen_id,
 +					      struct ib_cm_event *ib_event,
 +					      struct net_device *net_dev)
++=======
+ static struct rdma_id_private *
+ cma_ib_new_udp_id(const struct rdma_cm_id *listen_id,
+ 		  const struct ib_cm_event *ib_event,
+ 		  struct net_device *net_dev)
++>>>>>>> 854633165164 (RDMA/core: Prefix _ib to IB/RoCE specific functions)
  {
 -	const struct rdma_id_private *listen_id_priv;
  	struct rdma_id_private *id_priv;
  	struct rdma_cm_id *id;
  	const sa_family_t ss_family = listen_id->route.addr.src_addr.ss_family;
@@@ -1964,7 -1982,8 +1985,12 @@@ static void cma_set_req_event_data(stru
  	event->param.conn.qp_num = req_data->remote_qpn;
  }
  
++<<<<<<< HEAD
 +static int cma_check_req_qp_type(struct rdma_cm_id *id, struct ib_cm_event *ib_event)
++=======
+ static int cma_ib_check_req_qp_type(const struct rdma_cm_id *id,
+ 				    const struct ib_cm_event *ib_event)
++>>>>>>> 854633165164 (RDMA/core: Prefix _ib to IB/RoCE specific functions)
  {
  	return (((ib_event->event == IB_CM_REQ_RECEIVED) &&
  		 (ib_event->param.req_rcvd.qp_type == id->qp_type)) ||
@@@ -1973,10 -1992,11 +1999,15 @@@
  		(!id->qp_type));
  }
  
++<<<<<<< HEAD
 +static int cma_req_handler(struct ib_cm_id *cm_id, struct ib_cm_event *ib_event)
++=======
+ static int cma_ib_req_handler(struct ib_cm_id *cm_id,
+ 			      const struct ib_cm_event *ib_event)
++>>>>>>> 854633165164 (RDMA/core: Prefix _ib to IB/RoCE specific functions)
  {
  	struct rdma_id_private *listen_id, *conn_id = NULL;
 -	struct rdma_cm_event event = {};
 +	struct rdma_cm_event event;
  	struct net_device *net_dev;
  	u8 offset;
  	int ret;
* Unmerged path drivers/infiniband/core/cma.c
