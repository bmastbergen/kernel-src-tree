PCI: Add "PCIe" to pcie_print_link_status() messages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [pci] Add "PCIe" to pcie_print_link_status() messages (Eelco Chaudron) [1654186]
Rebuild_FUZZ: 94.95%
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 0cf22d6b317ce0103b7d5a47878aa5ef94240433
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0cf22d6b.failed

Currently the pcie_print_link_status() will print PCIe bandwidth and link
width information but does not mention it is pertaining to the PCIe.  Since
this and related functions are used exclusively by networking drivers today
users may get confused into thinking that it's the NIC bandwidth that is
being talked about.  Insert a "PCIe" into the messages.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 0cf22d6b317ce0103b7d5a47878aa5ef94240433)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci.c
diff --cc drivers/pci/pci.c
index 3a64c5971cef,a04197ce767d..000000000000
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@@ -4901,6 -5255,38 +4901,41 @@@ u32 pcie_bandwidth_capable(struct pci_d
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * pcie_print_link_status - Report the PCI device's link speed and width
+  * @dev: PCI device to query
+  *
+  * Report the available bandwidth at the device.  If this is less than the
+  * device is capable of, report the device's maximum possible bandwidth and
+  * the upstream link that limits its performance to less than that.
+  */
+ void pcie_print_link_status(struct pci_dev *dev)
+ {
+ 	enum pcie_link_width width, width_cap;
+ 	enum pci_bus_speed speed, speed_cap;
+ 	struct pci_dev *limiting_dev = NULL;
+ 	u32 bw_avail, bw_cap;
+ 
+ 	bw_cap = pcie_bandwidth_capable(dev, &speed_cap, &width_cap);
+ 	bw_avail = pcie_bandwidth_available(dev, &limiting_dev, &speed, &width);
+ 
+ 	if (bw_avail >= bw_cap)
+ 		pci_info(dev, "%u.%03u Gb/s available PCIe bandwidth (%s x%d link)\n",
+ 			 bw_cap / 1000, bw_cap % 1000,
+ 			 PCIE_SPEED2STR(speed_cap), width_cap);
+ 	else
+ 		pci_info(dev, "%u.%03u Gb/s available PCIe bandwidth, limited by %s x%d link at %s (capable of %u.%03u Gb/s with %s x%d link)\n",
+ 			 bw_avail / 1000, bw_avail % 1000,
+ 			 PCIE_SPEED2STR(speed), width,
+ 			 limiting_dev ? pci_name(limiting_dev) : "<unknown>",
+ 			 bw_cap / 1000, bw_cap % 1000,
+ 			 PCIE_SPEED2STR(speed_cap), width_cap);
+ }
+ EXPORT_SYMBOL(pcie_print_link_status);
+ 
+ /**
++>>>>>>> 0cf22d6b317c (PCI: Add "PCIe" to pcie_print_link_status() messages)
   * pci_select_bars - Make BAR mask from the type of resource
   * @dev: the PCI device for which BAR mask is made
   * @flags: resource type mask to be selected
* Unmerged path drivers/pci/pci.c
