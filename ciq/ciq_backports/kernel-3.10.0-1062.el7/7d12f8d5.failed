IB/uverbs: Add modify ESP flow_action

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Matan Barak <matanb@mellanox.com>
commit 7d12f8d5a1645275dd452138bf1fe478be736704
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/7d12f8d5.failed

flow_actions of ESP type could be modified during runtime. This could be
common for example when ESN should be changed. Adding a new
UVERBS_FLOW_ACTION_ESP_MODIFY method for changing ESP parameters of an
existing ESP flow_action.
The new method uses the UVERBS_FLOW_ACTION_ESP_CREATE attributes, but
adds a new IB_FLOW_ACTION_ESP_FLAGS_MOD_ESP_ATTRS which means ESP_ATTRS
should be changed.
In addition, we add a new FLOW_ACTION_ESP_REPLAY_NONE replay type that
could be used when one wants to disable a replay protection over a
specific flow_action.

	Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
	Signed-off-by: Matan Barak <matanb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 7d12f8d5a1645275dd452138bf1fe478be736704)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_std_types_flow_action.c
#	include/rdma/ib_verbs.h
#	include/uapi/rdma/ib_user_ioctl_cmds.h
diff --cc include/rdma/ib_verbs.h
index 45fa014bc084,8c3ca073016d..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -1987,6 -2011,64 +1987,67 @@@ struct ib_flow 
  	struct ib_uobject	*uobject;
  };
  
++<<<<<<< HEAD
++=======
+ enum ib_flow_action_type {
+ 	IB_FLOW_ACTION_UNSPECIFIED,
+ 	IB_FLOW_ACTION_ESP = 1,
+ };
+ 
+ struct ib_flow_action_attrs_esp_keymats {
+ 	enum ib_uverbs_flow_action_esp_keymat			protocol;
+ 	union {
+ 		struct ib_uverbs_flow_action_esp_keymat_aes_gcm aes_gcm;
+ 	} keymat;
+ };
+ 
+ struct ib_flow_action_attrs_esp_replays {
+ 	enum ib_uverbs_flow_action_esp_replay			protocol;
+ 	union {
+ 		struct ib_uverbs_flow_action_esp_replay_bmp	bmp;
+ 	} replay;
+ };
+ 
+ enum ib_flow_action_attrs_esp_flags {
+ 	/* All user-space flags at the top: Use enum ib_uverbs_flow_action_esp_flags
+ 	 * This is done in order to share the same flags between user-space and
+ 	 * kernel and spare an unnecessary translation.
+ 	 */
+ 
+ 	/* Kernel flags */
+ 	IB_FLOW_ACTION_ESP_FLAGS_ESN_TRIGGERED	= 1ULL << 32,
+ 	IB_FLOW_ACTION_ESP_FLAGS_MOD_ESP_ATTRS	= 1ULL << 33,
+ };
+ 
+ struct ib_flow_spec_list {
+ 	struct ib_flow_spec_list	*next;
+ 	union ib_flow_spec		spec;
+ };
+ 
+ struct ib_flow_action_attrs_esp {
+ 	struct ib_flow_action_attrs_esp_keymats		*keymat;
+ 	struct ib_flow_action_attrs_esp_replays		*replay;
+ 	struct ib_flow_spec_list			*encap;
+ 	/* Used only if IB_FLOW_ACTION_ESP_FLAGS_ESN_TRIGGERED is enabled.
+ 	 * Value of 0 is a valid value.
+ 	 */
+ 	u32						esn;
+ 	u32						spi;
+ 	u32						seq;
+ 	u32						tfc_pad;
+ 	/* Use enum ib_flow_action_attrs_esp_flags */
+ 	u64						flags;
+ 	u64						hard_limit_pkts;
+ };
+ 
+ struct ib_flow_action {
+ 	struct ib_device		*device;
+ 	struct ib_uobject		*uobject;
+ 	enum ib_flow_action_type	type;
+ 	atomic_t			usecnt;
+ };
+ 
++>>>>>>> 7d12f8d5a164 (IB/uverbs: Add modify ESP flow_action)
  struct ib_mad_hdr;
  struct ib_grh;
  
@@@ -2367,6 -2401,14 +2428,17 @@@ struct ib_device 
  							   struct ib_rwq_ind_table_init_attr *init_attr,
  							   struct ib_udata *udata);
  	int                        (*destroy_rwq_ind_table)(struct ib_rwq_ind_table *wq_ind_table);
++<<<<<<< HEAD
++=======
+ 	struct ib_flow_action *	   (*create_flow_action_esp)(struct ib_device *device,
+ 							     const struct ib_flow_action_attrs_esp *attr,
+ 							     struct uverbs_attr_bundle *attrs);
+ 	int			   (*destroy_flow_action)(struct ib_flow_action *action);
+ 	int			   (*modify_flow_action_esp)(struct ib_flow_action *action,
+ 							     const struct ib_flow_action_attrs_esp *attr,
+ 							     struct uverbs_attr_bundle *attrs);
+ 
++>>>>>>> 7d12f8d5a164 (IB/uverbs: Add modify ESP flow_action)
  	/**
  	 * rdma netdev operation
  	 *
diff --cc include/uapi/rdma/ib_user_ioctl_cmds.h
index 77bbbed17ed5,500b64a444ad..000000000000
--- a/include/uapi/rdma/ib_user_ioctl_cmds.h
+++ b/include/uapi/rdma/ib_user_ioctl_cmds.h
@@@ -80,4 -94,10 +80,13 @@@ enum uverbs_methods_cq 
  	UVERBS_METHOD_CQ_DESTROY,
  };
  
++<<<<<<< HEAD
++=======
+ enum uverbs_methods_actions_flow_action_ops {
+ 	UVERBS_METHOD_FLOW_ACTION_ESP_CREATE,
+ 	UVERBS_METHOD_FLOW_ACTION_DESTROY,
+ 	UVERBS_METHOD_FLOW_ACTION_ESP_MODIFY,
+ };
+ 
++>>>>>>> 7d12f8d5a164 (IB/uverbs: Add modify ESP flow_action)
  #endif
* Unmerged path drivers/infiniband/core/uverbs_std_types_flow_action.c
* Unmerged path drivers/infiniband/core/uverbs_std_types_flow_action.c
* Unmerged path include/rdma/ib_verbs.h
* Unmerged path include/uapi/rdma/ib_user_ioctl_cmds.h
