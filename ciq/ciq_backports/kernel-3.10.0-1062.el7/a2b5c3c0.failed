KVM: Hyper-V: do not do hypercall userspace exits if SynIC is disabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit a2b5c3c0c8eea2d5d0eefcfc0fc0bdf386daa260
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a2b5c3c0.failed

If SynIC is disabled, there is nothing that userspace can do to
handle these exits; on the other hand, userspace probably will
not know about KVM_EXIT_HYPERV_HCALL and complain about it or
even exit.  Just prevent anything bad from happening by handling
the hypercall in KVM and returning an "invalid hypercall" code.

Fixes: 83326e43f27e9a8a501427a0060f8af519a39bb2
	Cc: Andrey Smetanin <irqlevel@gmail.com>
	Reviewed-by: Roman Kagan <rkagan@virtuozzo.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit a2b5c3c0c8eea2d5d0eefcfc0fc0bdf386daa260)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/hyperv.c
diff --cc arch/x86/kvm/hyperv.c
index a44fd11c98a7,01bd7b7a6866..000000000000
--- a/arch/x86/kvm/hyperv.c
+++ b/arch/x86/kvm/hyperv.c
@@@ -533,6 -1114,21 +533,24 @@@ int kvm_hv_hypercall(struct kvm_vcpu *v
  	case HVCALL_NOTIFY_LONG_SPIN_WAIT:
  		kvm_vcpu_on_spin(vcpu);
  		break;
++<<<<<<< HEAD
++=======
+ 	case HVCALL_POST_MESSAGE:
+ 	case HVCALL_SIGNAL_EVENT:
+ 		/* don't bother userspace if it has no way to handle it */
+ 		if (!vcpu_to_synic(vcpu)->active) {
+ 			res = HV_STATUS_INVALID_HYPERCALL_CODE;
+ 			break;
+ 		}
+ 		vcpu->run->exit_reason = KVM_EXIT_HYPERV;
+ 		vcpu->run->hyperv.type = KVM_EXIT_HYPERV_HCALL;
+ 		vcpu->run->hyperv.u.hcall.input = param;
+ 		vcpu->run->hyperv.u.hcall.params[0] = ingpa;
+ 		vcpu->run->hyperv.u.hcall.params[1] = outgpa;
+ 		vcpu->arch.complete_userspace_io =
+ 				kvm_hv_hypercall_complete_userspace;
+ 		return 0;
++>>>>>>> a2b5c3c0c8ee (KVM: Hyper-V: do not do hypercall userspace exits if SynIC is disabled)
  	default:
  		res = HV_STATUS_INVALID_HYPERCALL_CODE;
  		break;
* Unmerged path arch/x86/kvm/hyperv.c
