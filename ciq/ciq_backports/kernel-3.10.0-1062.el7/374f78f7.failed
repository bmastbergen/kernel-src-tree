ixgbe: Replace GFP_ATOMIC with GFP_KERNEL

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jia-Ju Bai <baijiaju1990@gmail.com>
commit 374f78f75be98c72876a4d0311b278cd226effba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/374f78f7.failed

ixgbe_fcoe_ddp_setup(), ixgbe_setup_fcoe_ddp_resources() and
ixgbe_sw_init() are never called in atomic context.
They call kmalloc(), dma_pool_alloc() and kzalloc() with GFP_ATOMIC,
which is not necessary.
GFP_ATOMIC can be replaced with GFP_KERNEL.

This is found by a static analysis tool named DCNS written by myself.

	Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
	Acked-by: Sebastian Basierski <sebastianx.basierski@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 374f78f75be98c72876a4d0311b278cd226effba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index ce47199f4e5a,663d59ba527a..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@@ -6226,9 -6199,9 +6226,15 @@@ static int ixgbe_sw_init(struct ixgbe_a
  	for (i = 1; i < IXGBE_MAX_LINK_HANDLE; i++)
  		adapter->jump_tables[i] = NULL;
  
++<<<<<<< HEAD
 +	adapter->mac_table = kzalloc(sizeof(struct ixgbe_mac_addr) *
 +				     hw->mac.num_rar_entries,
 +				     GFP_ATOMIC);
++=======
+ 	adapter->mac_table = kcalloc(hw->mac.num_rar_entries,
+ 				     sizeof(struct ixgbe_mac_addr),
+ 				     GFP_KERNEL);
++>>>>>>> 374f78f75be9 (ixgbe: Replace GFP_ATOMIC with GFP_KERNEL)
  	if (!adapter->mac_table)
  		return -ENOMEM;
  
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
index d1a511478579..1a7b17814d55 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
@@ -192,7 +192,7 @@ static int ixgbe_fcoe_ddp_setup(struct net_device *netdev, u16 xid,
 	}
 
 	/* alloc the udl from per cpu ddp pool */
-	ddp->udl = dma_pool_alloc(ddp_pool->pool, GFP_ATOMIC, &ddp->udp);
+	ddp->udl = dma_pool_alloc(ddp_pool->pool, GFP_KERNEL, &ddp->udp);
 	if (!ddp->udl) {
 		e_err(drv, "failed allocated ddp context\n");
 		goto out_noddp_unmap;
@@ -760,7 +760,7 @@ int ixgbe_setup_fcoe_ddp_resources(struct ixgbe_adapter *adapter)
 		return 0;
 
 	/* Extra buffer to be shared by all DDPs for HW work around */
-	buffer = kmalloc(IXGBE_FCBUFF_MIN, GFP_ATOMIC);
+	buffer = kmalloc(IXGBE_FCBUFF_MIN, GFP_KERNEL);
 	if (!buffer)
 		return -ENOMEM;
 
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
