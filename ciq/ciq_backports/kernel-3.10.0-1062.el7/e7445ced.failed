gfs2: Fix metadata read-ahead during truncate (2)

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit e7445ceddfc220c1aede6d42758a5acb8844e9c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e7445ced.failed

The previous attempt to fix for metadata read-ahead during truncate was
incorrect: for files with a height > 2 (1006989312 bytes with a block
size of 4096 bytes), read-ahead requests were not being issued for some
of the indirect blocks discovered while walking the metadata tree,
leading to significant slow-downs when deleting large files.  Fix that.

In addition, only issue read-ahead requests in the first pass through
the meta-data tree, while deallocating data blocks.

Fixes: c3ce5aa9b0 ("gfs2: Fix metadata read-ahead during truncate")
	Cc: stable@vger.kernel.org # v4.16+
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit e7445ceddfc220c1aede6d42758a5acb8844e9c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/bmap.c
diff --cc fs/gfs2/bmap.c
index 3dae2b1463b5,38d88fcb6988..000000000000
--- a/fs/gfs2/bmap.c
+++ b/fs/gfs2/bmap.c
@@@ -1435,11 -1908,21 +1435,29 @@@ static int trunc_dealloc(struct gfs2_in
  			if (ret < 0)
  				goto out;
  
++<<<<<<< HEAD
 +			/* issue read-ahead on metadata */
 +			if (mp.mp_aheight > 1) {
 +				for (; ret > 1; ret--)
 +					gfs2_metapath_ra(ip->i_gl, &mp,
 +						mp.mp_aheight - ret);
++=======
+ 			/* On the first pass, issue read-ahead on metadata. */
+ 			if (mp.mp_aheight > 1 && strip_h == ip->i_height - 1) {
+ 				unsigned int height = mp.mp_aheight - 1;
+ 
+ 				/* No read-ahead for data blocks. */
+ 				if (mp.mp_aheight - 1 == strip_h)
+ 					height--;
+ 
+ 				for (; height >= mp.mp_aheight - ret; height--) {
+ 					metapointer_range(&mp, height,
+ 							  start_list, start_aligned,
+ 							  end_list, end_aligned,
+ 							  &start, &end);
+ 					gfs2_metapath_ra(ip->i_gl, start, end);
+ 				}
++>>>>>>> e7445ceddfc2 (gfs2: Fix metadata read-ahead during truncate (2))
  			}
  
  			/* If buffers found for the entire strip height */
* Unmerged path fs/gfs2/bmap.c
