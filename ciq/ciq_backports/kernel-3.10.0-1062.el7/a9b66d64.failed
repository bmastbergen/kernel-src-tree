IB/uverbs: Do not block disassociate during write()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jason Gunthorpe <jgg@mellanox.com>
commit a9b66d6453d70ee01f11bdae40d68996cee7474a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a9b66d64.failed

Now that all the callbacks are safe to run concurrently with
disassociation this test can be eliminated. The ufile core infrastructure
becomes entirely self contained and is not sensitive to disassociation.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit a9b66d6453d70ee01f11bdae40d68996cee7474a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs.h
#	drivers/infiniband/core/uverbs_main.c
diff --cc drivers/infiniband/core/uverbs.h
index cbf36c75d546,0fa32009908c..000000000000
--- a/drivers/infiniband/core/uverbs.h
+++ b/drivers/infiniband/core/uverbs.h
@@@ -145,6 -148,19 +145,22 @@@ struct ib_uverbs_file 
  	struct list_head			list;
  	int					is_closed;
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * To access the uobjects list hw_destroy_rwsem must be held for write
+ 	 * OR hw_destroy_rwsem held for read AND uobjects_lock held.
+ 	 * hw_destroy_rwsem should be called across any destruction of the HW
+ 	 * object of an associated uobject.
+ 	 */
+ 	struct rw_semaphore	hw_destroy_rwsem;
+ 	spinlock_t		uobjects_lock;
+ 	struct list_head	uobjects;
+ 
+ 	u64 uverbs_cmd_mask;
+ 	u64 uverbs_ex_cmd_mask;
+ 
++>>>>>>> a9b66d6453d7 (IB/uverbs: Do not block disassociate during write())
  	struct idr		idr;
  	/* spinlock protects write access to idr */
  	spinlock_t		idr_lock;
diff --cc drivers/infiniband/core/uverbs_main.c
index 9b53f7b4a4a8,a3213245aab2..000000000000
--- a/drivers/infiniband/core/uverbs_main.c
+++ b/drivers/infiniband/core/uverbs_main.c
@@@ -751,24 -756,8 +750,22 @@@ static ssize_t ib_uverbs_write(struct f
  		return ret;
  
  	srcu_key = srcu_read_lock(&file->device->disassociate_srcu);
- 	ib_dev = srcu_dereference(file->device->ib_dev,
- 				  &file->device->disassociate_srcu);
- 	if (!ib_dev) {
- 		ret = -EIO;
- 		goto out;
- 	}
  
++<<<<<<< HEAD
 +	/*
 +	 * Must be after the ib_dev check, as once the RCU clears ib_dev ==
 +	 * NULL means ucontext == NULL
 +	 */
 +	if (!file->ucontext &&
 +	    (command != IB_USER_VERBS_CMD_GET_CONTEXT || extended)) {
 +		ret = -EINVAL;
 +		goto out;
 +	}
 +
 +	if (!verify_command_mask(ib_dev, command, extended)) {
++=======
+ 	if (!verify_command_mask(file, command, extended)) {
++>>>>>>> a9b66d6453d7 (IB/uverbs: Do not block disassociate during write())
  		ret = -EOPNOTSUPP;
  		goto out;
  	}
* Unmerged path drivers/infiniband/core/uverbs.h
* Unmerged path drivers/infiniband/core/uverbs_main.c
