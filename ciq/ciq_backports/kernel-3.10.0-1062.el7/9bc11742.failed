PCI: hv: Replace hv_vp_set with hv_vpset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [pci] hv: Replace hv_vp_set with hv_vpset (Vitaly Kuznetsov) [1661654]
Rebuild_FUZZ: 93.33%
commit-author Maya Nakamura <m.maya.nakamura@gmail.com>
commit 9bc1174280ddf7693e8c29a8f1743809e987ac37
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/9bc11742.failed

Remove a duplicate definition of VP set (hv_vp_set) and use the common
definition (hv_vpset) that is used in other places.

Change the order of the members in struct hv_pcibus_device so that the
declaration of retarget_msi_interrupt_params is the last member. Struct
hv_vpset, which contains a flexible array, is nested two levels deep in
struct hv_pcibus_device via retarget_msi_interrupt_params.

Add a comment that retarget_msi_interrupt_params should be the last
member of struct hv_pcibus_device.

	Signed-off-by: Maya Nakamura <m.maya.nakamura@gmail.com>
	Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
	Reviewed-by: Michael Kelley <mikelley@microsoft.com>
	Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Tested-by: Vitaly Kuznetsov <vkuznets@redhat.com>
(cherry picked from commit 9bc1174280ddf7693e8c29a8f1743809e987ac37)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci-hyperv.c
diff --cc drivers/pci/pci-hyperv.c
index 3a3d3c5d60fd,d71695db1ba0..000000000000
--- a/drivers/pci/pci-hyperv.c
+++ b/drivers/pci/pci-hyperv.c
@@@ -460,10 -450,20 +454,27 @@@ struct hv_pcibus_device 
  	struct list_head children;
  	struct list_head dr_list;
  
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
 +	/* hypercall arg, must not cross page boundary */
 +	struct retarget_msi_interrupt retarget_msi_interrupt_params;
 +
 +	spinlock_t retarget_msi_interrupt_lock;
++=======
+ 	struct msi_domain_info msi_info;
+ 	struct msi_controller msi_chip;
+ 	struct irq_domain *irq_domain;
+ 
+ 	spinlock_t retarget_msi_interrupt_lock;
+ 
+ 	struct workqueue_struct *wq;
+ 
+ 	/* hypercall arg, must not cross page boundary */
+ 	struct retarget_msi_interrupt retarget_msi_interrupt_params;
+ 
+ 	/*
+ 	 * Don't put anything here: retarget_msi_interrupt_params must be last
+ 	 */
++>>>>>>> 9bc1174280dd (PCI: hv: Replace hv_vp_set with hv_vpset):drivers/pci/controller/pci-hyperv.c
  };
  
  /*
@@@ -881,7 -972,8 +893,12 @@@ static int hv_set_affinity(struct irq_d
  				res = 1;
  				goto exit_unlock;
  			}
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
 +			params->int_target.vp_set.masks[cpu_vmbus / 64] |=
++=======
+ 
+ 			params->int_target.vp_set.bank_contents[cpu_vmbus / 64]	|=
++>>>>>>> 9bc1174280dd (PCI: hv: Replace hv_vp_set with hv_vpset):drivers/pci/controller/pci-hyperv.c
  				(1ULL << (cpu_vmbus & 63));
  		}
  	} else {
* Unmerged path drivers/pci/pci-hyperv.c
