perf stat: Move 'metric_events' to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit d0192fdba09a8901db133fe5a1fcd22d40fcf545
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d0192fdb.failed

Move the static variable 'metric_events' to 'struct perf_stat_config',
so that it can be passed around and used outside 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-43-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d0192fdba09a8901db133fe5a1fcd22d40fcf545)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
#	tools/perf/util/stat.h
diff --cc tools/perf/builtin-stat.c
index 13693124ed08,f4ddedc8619b..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -1211,17 -1073,17 +1209,26 @@@ static void printout(int id, int nr, st
  	out.ctx = &os;
  	out.force_header = false;
  
 -	if (config->csv_output && !config->metric_only) {
 -		print_noise(config, counter, noise);
 -		print_running(config, run, ena);
 +	if (csv_output && !metric_only) {
 +		print_noise(counter, noise);
 +		print_running(run, ena);
  	}
  
++<<<<<<< HEAD
 +	perf_stat__print_shadow_stats(counter, uval,
 +				first_shadow_cpu(counter, id),
 +				&out, &metric_events);
 +	if (!csv_output && !metric_only) {
 +		print_noise(counter, noise);
 +		print_running(run, ena);
++=======
+ 	perf_stat__print_shadow_stats(config, counter, uval,
+ 				first_shadow_cpu(config, counter, id),
+ 				&out, &config->metric_events, st);
+ 	if (!config->csv_output && !config->metric_only) {
+ 		print_noise(config, counter, noise);
+ 		print_running(config, run, ena);
++>>>>>>> d0192fdba09a (perf stat: Move 'metric_events' to 'struct perf_stat_config')
  	}
  }
  
@@@ -1584,26 -1528,31 +1591,31 @@@ static void print_metric_headers(const 
  		out.new_line = new_line_metric;
  		out.force_header = true;
  		os.evsel = counter;
 -		perf_stat__print_shadow_stats(config, counter, 0,
 +		perf_stat__print_shadow_stats(counter, 0,
  					      0,
  					      &out,
++<<<<<<< HEAD
 +					      &metric_events);
++=======
+ 					      &config->metric_events,
+ 					      &rt_stat);
++>>>>>>> d0192fdba09a (perf stat: Move 'metric_events' to 'struct perf_stat_config')
  	}
 -	fputc('\n', config->output);
 +	fputc('\n', stat_config.output);
  }
  
 -static void print_interval(struct perf_stat_config *config,
 -			   struct perf_evlist *evlist,
 -			   char *prefix, struct timespec *ts)
 +static void print_interval(char *prefix, struct timespec *ts)
  {
 -	bool metric_only = config->metric_only;
 -	unsigned int unit_width = config->unit_width;
 -	FILE *output = config->output;
 +	FILE *output = stat_config.output;
  	static int num_print_interval;
  
 -	if (config->interval_clear)
 +	if (interval_clear)
  		puts(CONSOLE_CLEAR);
  
 -	sprintf(prefix, "%6lu.%09lu%s", ts->tv_sec, ts->tv_nsec, config->csv_sep);
 +	sprintf(prefix, "%6lu.%09lu%s", ts->tv_sec, ts->tv_nsec, csv_sep);
  
 -	if ((num_print_interval == 0 && !config->csv_output) || config->interval_clear) {
 -		switch (config->aggr_mode) {
 +	if ((num_print_interval == 0 && !csv_output) || interval_clear) {
 +		switch (stat_config.aggr_mode) {
  		case AGGR_SOCKET:
  			fprintf(output, "#           time socket cpus");
  			if (!metric_only)
diff --cc tools/perf/util/stat.h
index 4b88aef959fb,8d3354e21e19..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -93,9 -110,22 +93,20 @@@ struct perf_stat_config 
  	unsigned int		 interval;
  	unsigned int		 timeout;
  	unsigned int		 initial_delay;
 -	unsigned int		 unit_width;
 -	unsigned int		 metric_only_len;
  	int			 times;
 -	int			 run_count;
 -	int			 print_free_counters_hint;
 -	int			 print_mixed_hw_group_error;
  	struct runtime_stat	*stats;
  	int			 stats_num;
++<<<<<<< HEAD
++=======
+ 	const char		*csv_sep;
+ 	struct stats		*walltime_nsecs_stats;
+ 	struct rusage		 ru_data;
+ 	struct cpu_map		*aggr_map;
+ 	aggr_get_id_t		 aggr_get_id;
+ 	struct cpu_map		*cpus_aggr_map;
+ 	u64			*walltime_run;
+ 	struct rblist		 metric_events;
++>>>>>>> d0192fdba09a (perf stat: Move 'metric_events' to 'struct perf_stat_config')
  };
  
  void update_stats(struct stats *stats, u64 val);
* Unmerged path tools/perf/builtin-stat.c
* Unmerged path tools/perf/util/stat.h
