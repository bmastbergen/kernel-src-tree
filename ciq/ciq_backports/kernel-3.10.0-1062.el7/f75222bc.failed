r8169: replace open-coded PHY soft reset with genphy_soft_reset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit f75222bce9b5e5a4af01100b949e056f12183c27
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/f75222bc.failed

Use genphy_soft_reset() instead of open-coding a PHY soft reset. We have
to do an explicit PHY soft reset because some chips use the genphy driver
which uses a no-op as soft_reset callback.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f75222bce9b5e5a4af01100b949e056f12183c27)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index ba5aac4e1fe4,0ba8588f92c0..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -1439,24 -1441,6 +1439,27 @@@ static void rtl8169_irq_mask_and_ack(st
  	RTL_R8(tp, ChipCmd);
  }
  
++<<<<<<< HEAD
 +static unsigned int rtl8169_xmii_reset_pending(struct rtl8169_private *tp)
 +{
 +	return rtl_readphy(tp, MII_BMCR) & BMCR_RESET;
 +}
 +
 +static unsigned int rtl8169_xmii_link_ok(struct rtl8169_private *tp)
 +{
 +	return RTL_R8(tp, PHYstatus) & LinkStatus;
 +}
 +
 +static void rtl8169_xmii_reset_enable(struct rtl8169_private *tp)
 +{
 +	unsigned int val;
 +
 +	val = rtl_readphy(tp, MII_BMCR) | BMCR_RESET;
 +	rtl_writephy(tp, MII_BMCR, val & 0xffff);
 +}
 +
++=======
++>>>>>>> f75222bce9b5 (r8169: replace open-coded PHY soft reset with genphy_soft_reset)
  static void rtl_link_chg_patch(struct rtl8169_private *tp)
  {
  	struct net_device *dev = tp->dev;
* Unmerged path drivers/net/ethernet/realtek/r8169.c
