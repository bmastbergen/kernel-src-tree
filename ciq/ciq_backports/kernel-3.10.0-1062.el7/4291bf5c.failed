perf trace: Drop addr_location refcounts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 4291bf5cb93918232f88a3a70d8f70a72fbb6ab0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/4291bf5c.failed

When we use machine__resolve() we grab a reference to
addr_location.thread (and in the future to other elements there) via
machine__findnew_thread(), so we must pair that with
addr_location__put(), else we'll never drop that thread when it exits
and no other remaining data structures have pointers to it. Fix it.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-ivg9hifzeuokb1f5jxc2wob4@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 4291bf5cb93918232f88a3a70d8f70a72fbb6ab0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
diff --cc tools/perf/builtin-trace.c
index 2d5e498ff996,77b8748ad5ed..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -1682,12 -1811,17 +1682,23 @@@ static int trace__resolve_callchain(str
  				    struct callchain_cursor *cursor)
  {
  	struct addr_location al;
++<<<<<<< HEAD
 +
 +	if (machine__resolve(trace->host, &al, sample) < 0 ||
 +	    thread__resolve_callchain(al.thread, cursor, evsel, sample, NULL, NULL, trace->max_stack))
++=======
+ 	int max_stack = evsel->attr.sample_max_stack ?
+ 			evsel->attr.sample_max_stack :
+ 			trace->max_stack;
+ 	int err;
+ 
+ 	if (machine__resolve(trace->host, &al, sample) < 0)
++>>>>>>> 4291bf5cb939 (perf trace: Drop addr_location refcounts)
  		return -1;
  
- 	return 0;
+ 	err = thread__resolve_callchain(al.thread, cursor, evsel, sample, NULL, NULL, max_stack);
+ 	addr_location__put(&al);
+ 	return err;
  }
  
  static int trace__fprintf_callchain(struct trace *trace, struct perf_sample *sample)
* Unmerged path tools/perf/builtin-trace.c
