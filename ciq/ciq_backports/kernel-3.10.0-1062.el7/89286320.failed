s390/qdio: clear intparm during shutdown

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [s390] qdio: clear intparm during shutdown (Hendrik Brueckner) [1720390]
Rebuild_FUZZ: 93.33%
commit-author Julian Wiedmann <jwi@linux.vnet.ibm.com>
commit 89286320a236d245834075fa13adb0bdd827ecaa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/89286320.failed

During shutdown, qdio returns its ccw device back to control by the
upper-layer driver. But there is a remote chance that by the time where the
IRQ handler gets switched back, the interrupt for the preceding
ccw_device_{clear,halt} hasn't been presented yet.
Upper-layer drivers would then need to handle this IRQ - and since the IO
is issued with an intparm, it could very well be confused with whatever
intparm mechanism the driver uses itself (eg intparm == request address).

So when switching over the IRQ handler, also clear the intparm and have
upper-layer drivers deal with any such delayed interrupt as if it was
unsolicited.

	Suggested-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
	Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 89286320a236d245834075fa13adb0bdd827ecaa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/cio/qdio_main.c
diff --cc drivers/s390/cio/qdio_main.c
index 8b57052302da,f4ca72dd862f..000000000000
--- a/drivers/s390/cio/qdio_main.c
+++ b/drivers/s390/cio/qdio_main.c
@@@ -1252,9 -1207,11 +1252,15 @@@ no_cleanup
  	qdio_shutdown_thinint(irq_ptr);
  
  	/* restore interrupt handler */
- 	if ((void *)cdev->handler == (void *)qdio_int_handler)
+ 	if ((void *)cdev->handler == (void *)qdio_int_handler) {
  		cdev->handler = irq_ptr->orig_handler;
++<<<<<<< HEAD
 +	spin_unlock_irqrestore(get_ccwdev_lock(cdev), flags);
++=======
+ 		cdev->private->intparm = 0;
+ 	}
+ 	spin_unlock_irq(get_ccwdev_lock(cdev));
++>>>>>>> 89286320a236 (s390/qdio: clear intparm during shutdown)
  
  	qdio_set_state(irq_ptr, QDIO_IRQ_STATE_INACTIVE);
  	mutex_unlock(&irq_ptr->setup_mutex);
* Unmerged path drivers/s390/cio/qdio_main.c
