RDMA/mlx5: Fix check for supported user flags when creating a QP

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Mark Bloch <markb@mellanox.com>
commit 8af526e035357d2df1d7cacc51bcde0a5d9f9f9f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/8af526e0.failed

When the flags verification was added two flags were missed from the
check:
 * MLX5_QP_FLAG_TIR_ALLOW_SELF_LB_UC
 * MLX5_QP_FLAG_TIR_ALLOW_SELF_LB_MC

This causes user applications that were using these flags to break.

Fixes: 2e43bb31b8df ("IB/mlx5: Verify that driver supports user flags")
	Signed-off-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 8af526e035357d2df1d7cacc51bcde0a5d9f9f9f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/qp.c
diff --cc drivers/infiniband/hw/mlx5/qp.c
index 0e92d3e28641,7db778d96ef5..000000000000
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@@ -1851,13 -1912,16 +1851,25 @@@ static int create_qp_common(struct mlx5
  		}
  
  		if (!check_flags_mask(ucmd.flags,
+ 				      MLX5_QP_FLAG_ALLOW_SCATTER_CQE |
+ 				      MLX5_QP_FLAG_BFREG_INDEX |
+ 				      MLX5_QP_FLAG_PACKET_BASED_CREDIT_MODE |
+ 				      MLX5_QP_FLAG_SCATTER_CQE |
  				      MLX5_QP_FLAG_SIGNATURE |
++<<<<<<< HEAD
 +					      MLX5_QP_FLAG_SCATTER_CQE |
 +					      MLX5_QP_FLAG_TUNNEL_OFFLOADS |
 +					      MLX5_QP_FLAG_BFREG_INDEX |
 +					      MLX5_QP_FLAG_TYPE_DCT |
 +					      MLX5_QP_FLAG_TYPE_DCI |
 +					      MLX5_QP_FLAG_ALLOW_SCATTER_CQE))
++=======
+ 				      MLX5_QP_FLAG_TIR_ALLOW_SELF_LB_MC |
+ 				      MLX5_QP_FLAG_TIR_ALLOW_SELF_LB_UC |
+ 				      MLX5_QP_FLAG_TUNNEL_OFFLOADS |
+ 				      MLX5_QP_FLAG_TYPE_DCI |
+ 				      MLX5_QP_FLAG_TYPE_DCT))
++>>>>>>> 8af526e03535 (RDMA/mlx5: Fix check for supported user flags when creating a QP)
  			return -EINVAL;
  
  		err = get_qp_user_index(to_mucontext(pd->uobject->context),
* Unmerged path drivers/infiniband/hw/mlx5/qp.c
