perf pmu: Auto-merge PMU events created by prefix or glob match

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Agustin Vega-Frias <agustinv@codeaurora.org>
commit c199c11dce197b12ff884ac0cfcb527b1164788b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c199c11d.failed

Auto-merge for these events was disabled when auto-merging of non-alias
events was disabled in commit 63ce844 (perf stat: Only auto-merge events
that are PMU aliases).

Non-merging of legacy events is preserved:

    $ perf stat -ag -e cache-misses,cache-misses sleep 1

     Performance counter stats for 'system wide':

                86,323      cache-misses
                86,323      cache-misses

           1.002623307 seconds time elapsed

But prefix or glob matching auto-merges the events created:

    $ perf stat -a -e l3cache/read-miss/ sleep 1

     Performance counter stats for 'system wide':

                   328      l3cache/read-miss/

           1.002627008 seconds time elapsed

    $ perf stat -a -e l3cache_0_[01]/read-miss/ sleep 1

     Performance counter stats for 'system wide':

                   172      l3cache/read-miss/

           1.002627008 seconds time elapsed

As with events created with aliases, auto-merging can be suppressed with
the --no-merge option:

    $ perf stat -a -e l3cache/read-miss/ --no-merge sleep 1

     Performance counter stats for 'system wide':

                    67      l3cache/read-miss/
                    67      l3cache/read-miss/
                    63      l3cache/read-miss/
                    60      l3cache/read-miss/

           1.002622192 seconds time elapsed

	Signed-off-by: Agustin Vega-Frias <agustinv@codeaurora.org>
	Acked-by: Andi Kleen <ak@linux.intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Timur Tabi <timur@codeaurora.org>
	Cc: linux-arm-kernel@lists.infradead.org
Change-Id: I0a47eed54c05e1982ca964d743b37f50f60c508c
Link: http://lkml.kernel.org/r/1520345084-42646-4-git-send-email-agustinv@codeaurora.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit c199c11dce197b12ff884ac0cfcb527b1164788b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Documentation/perf-stat.txt
#	tools/perf/util/parse-events.y
diff --cc tools/perf/Documentation/perf-stat.txt
index 2b38e222016a,f15b306be183..000000000000
--- a/tools/perf/Documentation/perf-stat.txt
+++ b/tools/perf/Documentation/perf-stat.txt
@@@ -260,6 -267,16 +260,19 @@@ taskset
  --no-merge::
  Do not merge results from same PMUs.
  
++<<<<<<< HEAD
++=======
+ When multiple events are created from a single event specification,
+ stat will, by default, aggregate the event counts and show the result
+ in a single row. This option disables that behavior and shows
+ the individual events and counts.
+ 
+ Multiple events are created from a single event specification when:
+ 1. Prefix or glob matching is used for the PMU name.
+ 2. Aliases, which are listed immediately after the Kernel PMU events
+    by perf list, are used.
+ 
++>>>>>>> c199c11dce19 (perf pmu: Auto-merge PMU events created by prefix or glob match)
  --smi-cost::
  Measure SMI cost if msr/aperf/ and msr/smi/ events are supported.
  
diff --cc tools/perf/util/parse-events.y
index b7975dc972b1,7afeb80cc39e..000000000000
--- a/tools/perf/util/parse-events.y
+++ b/tools/perf/util/parse-events.y
@@@ -221,9 -232,13 +221,9 @@@ PE_NAME opt_event_confi
  		YYABORT;
  
  	ALLOC_LIST(list);
- 	if (parse_events_add_pmu(_parse_state, list, $1, $2)) {
+ 	if (parse_events_add_pmu(_parse_state, list, $1, $2, false)) {
  		struct perf_pmu *pmu = NULL;
  		int ok = 0;
 -		char *pattern;
 -
 -		if (asprintf(&pattern, "%s*", $1) < 0)
 -			YYABORT;
  
  		while ((pmu = perf_pmu__scan(pmu)) != NULL) {
  			char *name = pmu->name;
@@@ -231,10 -246,12 +231,15 @@@
  			if (!strncmp(name, "uncore_", 7) &&
  			    strncmp($1, "uncore_", 7))
  				name += 7;
 -			if (!fnmatch(pattern, name, 0)) {
 -				if (parse_events_copy_term_list(orig_terms, &terms)) {
 -					free(pattern);
 +			if (!strncmp($1, name, strlen($1))) {
 +				if (parse_events_copy_term_list(orig_terms, &terms))
  					YYABORT;
++<<<<<<< HEAD
 +				if (!parse_events_add_pmu(_parse_state, list, pmu->name, terms))
++=======
+ 				}
+ 				if (!parse_events_add_pmu(_parse_state, list, pmu->name, terms, true))
++>>>>>>> c199c11dce19 (perf pmu: Auto-merge PMU events created by prefix or glob match)
  					ok++;
  				parse_events_terms__delete(terms);
  			}
* Unmerged path tools/perf/Documentation/perf-stat.txt
diff --git a/tools/perf/util/parse-events.c b/tools/perf/util/parse-events.c
index d5d5ce52afcc..5b721b6bfebf 100644
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@ -983,7 +983,7 @@ int parse_events_add_numeric(struct parse_events_state *parse_state,
 			 get_config_name(head_config), &config_terms);
 }
 
-static int __parse_events_add_pmu(struct parse_events_state *parse_state,
+int parse_events_add_pmu(struct parse_events_state *parse_state,
 			 struct list_head *list, char *name,
 			 struct list_head *head_config, bool auto_merge_stats)
 {
@@ -1053,13 +1053,6 @@ static int __parse_events_add_pmu(struct parse_events_state *parse_state,
 	return evsel ? 0 : -ENOMEM;
 }
 
-int parse_events_add_pmu(struct parse_events_state *parse_state,
-			 struct list_head *list, char *name,
-			 struct list_head *head_config)
-{
-	return __parse_events_add_pmu(parse_state, list, name, head_config, false);
-}
-
 int parse_events_multi_pmu_add(struct parse_events_state *parse_state,
 			       char *str, struct list_head **listp)
 {
@@ -1089,8 +1082,8 @@ int parse_events_multi_pmu_add(struct parse_events_state *parse_state,
 					return -1;
 				list_add_tail(&term->list, head);
 
-				if (!__parse_events_add_pmu(parse_state, list,
-							    pmu->name, head, true)) {
+				if (!parse_events_add_pmu(parse_state, list,
+							  pmu->name, head, true)) {
 					pr_debug("%s -> %s/%s/\n", str,
 						 pmu->name, alias->str);
 					ok++;
diff --git a/tools/perf/util/parse-events.h b/tools/perf/util/parse-events.h
index 411808bd5db5..c85b75f16261 100644
--- a/tools/perf/util/parse-events.h
+++ b/tools/perf/util/parse-events.h
@@ -143,7 +143,7 @@ int parse_events_add_breakpoint(struct list_head *list, int *idx,
 				void *ptr, char *type, u64 len);
 int parse_events_add_pmu(struct parse_events_state *parse_state,
 			 struct list_head *list, char *name,
-			 struct list_head *head_config);
+			 struct list_head *head_config, bool auto_merge_stats);
 
 int parse_events_multi_pmu_add(struct parse_events_state *parse_state,
 			       char *str,
* Unmerged path tools/perf/util/parse-events.y
