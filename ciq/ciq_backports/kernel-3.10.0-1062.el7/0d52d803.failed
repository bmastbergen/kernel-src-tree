RDMA/uapi: Fix uapi breakage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Doug Ledford <dledford@redhat.com>
commit 0d52d803767e9dfab91348fbc8de1dfd388565fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0d52d803.failed

During this merge window, we added support for addition RDMA netlink
operations.  Unfortunately, we added the items in the middle of our uapi
enum.  Fix that before final release.

Fixes: da5c85078215 ("RDMA/nldev: add driver-specific resource
tracking")
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 0d52d803767e9dfab91348fbc8de1dfd388565fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/rdma/rdma_netlink.h
diff --cc include/uapi/rdma/rdma_netlink.h
index b90c8cd4c303,edba6351ac13..000000000000
--- a/include/uapi/rdma/rdma_netlink.h
+++ b/include/uapi/rdma/rdma_netlink.h
@@@ -349,6 -370,65 +349,68 @@@ enum rdma_nldev_attr 
  	 */
  	RDMA_NLDEV_ATTR_RES_KERN_NAME,		/* string */
  
++<<<<<<< HEAD
++=======
+ 	RDMA_NLDEV_ATTR_RES_CM_ID,		/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_CM_ID_ENTRY,	/* nested table */
+ 	/*
+ 	 * rdma_cm_id port space.
+ 	 */
+ 	RDMA_NLDEV_ATTR_RES_PS,			/* u32 */
+ 	/*
+ 	 * Source and destination socket addresses
+ 	 */
+ 	RDMA_NLDEV_ATTR_RES_SRC_ADDR,		/* __kernel_sockaddr_storage */
+ 	RDMA_NLDEV_ATTR_RES_DST_ADDR,		/* __kernel_sockaddr_storage */
+ 
+ 	RDMA_NLDEV_ATTR_RES_CQ,			/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_CQ_ENTRY,		/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_CQE,		/* u32 */
+ 	RDMA_NLDEV_ATTR_RES_USECNT,		/* u64 */
+ 	RDMA_NLDEV_ATTR_RES_POLL_CTX,		/* u8 */
+ 
+ 	RDMA_NLDEV_ATTR_RES_MR,			/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_MR_ENTRY,		/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_RKEY,		/* u32 */
+ 	RDMA_NLDEV_ATTR_RES_LKEY,		/* u32 */
+ 	RDMA_NLDEV_ATTR_RES_IOVA,		/* u64 */
+ 	RDMA_NLDEV_ATTR_RES_MRLEN,		/* u64 */
+ 
+ 	RDMA_NLDEV_ATTR_RES_PD,			/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_PD_ENTRY,		/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_LOCAL_DMA_LKEY,	/* u32 */
+ 	RDMA_NLDEV_ATTR_RES_UNSAFE_GLOBAL_RKEY,	/* u32 */
+ 	/*
+ 	 * Provides logical name and index of netdevice which is
+ 	 * connected to physical port. This information is relevant
+ 	 * for RoCE and iWARP.
+ 	 *
+ 	 * The netdevices which are associated with containers are
+ 	 * supposed to be exported together with GID table once it
+ 	 * will be exposed through the netlink. Because the
+ 	 * associated netdevices are properties of GIDs.
+ 	 */
+ 	RDMA_NLDEV_ATTR_NDEV_INDEX,		/* u32 */
+ 	RDMA_NLDEV_ATTR_NDEV_NAME,		/* string */
+ 	/*
+ 	 * driver-specific attributes.
+ 	 */
+ 	RDMA_NLDEV_ATTR_DRIVER,			/* nested table */
+ 	RDMA_NLDEV_ATTR_DRIVER_ENTRY,		/* nested table */
+ 	RDMA_NLDEV_ATTR_DRIVER_STRING,		/* string */
+ 	/*
+ 	 * u8 values from enum rdma_nldev_print_type
+ 	 */
+ 	RDMA_NLDEV_ATTR_DRIVER_PRINT_TYPE,	/* u8 */
+ 	RDMA_NLDEV_ATTR_DRIVER_S32,		/* s32 */
+ 	RDMA_NLDEV_ATTR_DRIVER_U32,		/* u32 */
+ 	RDMA_NLDEV_ATTR_DRIVER_S64,		/* s64 */
+ 	RDMA_NLDEV_ATTR_DRIVER_U64,		/* u64 */
+ 
+ 	/*
+ 	 * Always the end
+ 	 */
++>>>>>>> 0d52d803767e (RDMA/uapi: Fix uapi breakage)
  	RDMA_NLDEV_ATTR_MAX
  };
  #endif /* _UAPI_RDMA_NETLINK_H */
* Unmerged path include/uapi/rdma/rdma_netlink.h
