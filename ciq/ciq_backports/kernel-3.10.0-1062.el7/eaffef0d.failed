ALSA: pci: Remove superfluous snd_info_register() calls

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit eaffef0d5fca38939ac986de4625f4f070c49346
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/eaffef0d.failed

The calls of snd_info_register() are superfluous and should be avoided
at the procfs creation time.  They are called at the end of the whole
initialization via snd_card_register().  This patch drops such
superfluous calls, as well as dropping the superfluous setup of
SNDRV_INFO_CONTENT_TEXT.

	Reviewed-by: Jaroslav Kysela <perex@perex.cz>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit eaffef0d5fca38939ac986de4625f4f070c49346)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/ac97/ac97_proc.c
#	sound/pci/cs46xx/dsp_spos.c
diff --cc sound/pci/ac97/ac97_proc.c
index 6320bf084e47,20516b6907b5..000000000000
--- a/sound/pci/ac97/ac97_proc.c
+++ b/sound/pci/ac97/ac97_proc.c
@@@ -436,25 -436,20 +436,20 @@@ void snd_ac97_proc_init(struct snd_ac9
  		return;
  	prefix = ac97_is_audio(ac97) ? "ac97" : "mc97";
  	sprintf(name, "%s#%d-%d", prefix, ac97->addr, ac97->num);
- 	if ((entry = snd_info_create_card_entry(ac97->bus->card, name, ac97->bus->proc)) != NULL) {
+ 	entry = snd_info_create_card_entry(ac97->bus->card, name,
+ 					   ac97->bus->proc);
+ 	if (entry)
  		snd_info_set_text_ops(entry, ac97, snd_ac97_proc_read);
- 		if (snd_info_register(entry) < 0) {
- 			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
- 	}
  	ac97->proc = entry;
  	sprintf(name, "%s#%d-%d+regs", prefix, ac97->addr, ac97->num);
- 	if ((entry = snd_info_create_card_entry(ac97->bus->card, name, ac97->bus->proc)) != NULL) {
+ 	entry = snd_info_create_card_entry(ac97->bus->card, name,
+ 					   ac97->bus->proc);
+ 	if (entry) {
  		snd_info_set_text_ops(entry, ac97, snd_ac97_proc_regs_read);
  #ifdef CONFIG_SND_DEBUG
 -		entry->mode |= 0200;
 +		entry->mode |= S_IWUSR;
  		entry->c.text.write = snd_ac97_proc_regs_write;
  #endif
- 		if (snd_info_register(entry) < 0) {
- 			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
  	ac97->proc_regs = entry;
  }
@@@ -473,13 -468,10 +468,20 @@@ void snd_ac97_bus_proc_init(struct snd_
  	char name[32];
  
  	sprintf(name, "codec97#%d", bus->num);
++<<<<<<< HEAD
 +	if ((entry = snd_info_create_card_entry(bus->card, name, bus->card->proc_root)) != NULL) {
 +		entry->mode = S_IFDIR | S_IRUGO | S_IXUGO;
 +		if (snd_info_register(entry) < 0) {
 +			snd_info_free_entry(entry);
 +			entry = NULL;
 +		}
 +	}
++=======
+ 	entry = snd_info_create_card_entry(bus->card, name,
+ 					   bus->card->proc_root);
+ 	if (entry)
+ 		entry->mode = S_IFDIR | 0555;
++>>>>>>> eaffef0d5fca (ALSA: pci: Remove superfluous snd_info_register() calls)
  	bus->proc = entry;
  }
  
diff --cc sound/pci/cs46xx/dsp_spos.c
index aa61615288ff,3555f839371e..000000000000
--- a/sound/pci/cs46xx/dsp_spos.c
+++ b/sound/pci/cs46xx/dsp_spos.c
@@@ -796,90 -799,60 +796,73 @@@ int cs46xx_dsp_proc_init (struct snd_ca
  
  	ins->snd_card = card;
  
++<<<<<<< HEAD
 +	if ((entry = snd_info_create_card_entry(card, "dsp", card->proc_root)) != NULL) {
 +		entry->content = SNDRV_INFO_CONTENT_TEXT;
 +		entry->mode = S_IFDIR | S_IRUGO | S_IXUGO;
 +      
 +		if (snd_info_register(entry) < 0) {
 +			snd_info_free_entry(entry);
 +			entry = NULL;
 +		}
 +	}
 +
++=======
+ 	entry = snd_info_create_card_entry(card, "dsp", card->proc_root);
+ 	if (entry)
+ 		entry->mode = S_IFDIR | 0555;
++>>>>>>> eaffef0d5fca (ALSA: pci: Remove superfluous snd_info_register() calls)
  	ins->proc_dsp_dir = entry;
  
  	if (!ins->proc_dsp_dir)
  		return -ENOMEM;
  
- 	if ((entry = snd_info_create_card_entry(card, "spos_symbols", ins->proc_dsp_dir)) != NULL) {
- 		entry->content = SNDRV_INFO_CONTENT_TEXT;
+ 	entry = snd_info_create_card_entry(card, "spos_symbols",
+ 					   ins->proc_dsp_dir);
+ 	if (entry) {
  		entry->private_data = chip;
 -		entry->mode = S_IFREG | 0644;
 +		entry->mode = S_IFREG | S_IRUGO | S_IWUSR;
  		entry->c.text.read = cs46xx_dsp_proc_symbol_table_read;
- 		if (snd_info_register(entry) < 0) {
- 			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
  	ins->proc_sym_info_entry = entry;
      
  	if ((entry = snd_info_create_card_entry(card, "spos_modules", ins->proc_dsp_dir)) != NULL) {
  		entry->content = SNDRV_INFO_CONTENT_TEXT;
  		entry->private_data = chip;
 -		entry->mode = S_IFREG | 0644;
 +		entry->mode = S_IFREG | S_IRUGO | S_IWUSR;
  		entry->c.text.read = cs46xx_dsp_proc_modules_read;
- 		if (snd_info_register(entry) < 0) {
- 			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
  	ins->proc_modules_info_entry = entry;
  
  	if ((entry = snd_info_create_card_entry(card, "parameter", ins->proc_dsp_dir)) != NULL) {
  		entry->content = SNDRV_INFO_CONTENT_TEXT;
  		entry->private_data = chip;
 -		entry->mode = S_IFREG | 0644;
 +		entry->mode = S_IFREG | S_IRUGO | S_IWUSR;
  		entry->c.text.read = cs46xx_dsp_proc_parameter_dump_read;
- 		if (snd_info_register(entry) < 0) {
- 			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
  	ins->proc_parameter_dump_info_entry = entry;
  
  	if ((entry = snd_info_create_card_entry(card, "sample", ins->proc_dsp_dir)) != NULL) {
  		entry->content = SNDRV_INFO_CONTENT_TEXT;
  		entry->private_data = chip;
 -		entry->mode = S_IFREG | 0644;
 +		entry->mode = S_IFREG | S_IRUGO | S_IWUSR;
  		entry->c.text.read = cs46xx_dsp_proc_sample_dump_read;
- 		if (snd_info_register(entry) < 0) {
- 			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
  	ins->proc_sample_dump_info_entry = entry;
  
  	if ((entry = snd_info_create_card_entry(card, "task_tree", ins->proc_dsp_dir)) != NULL) {
  		entry->content = SNDRV_INFO_CONTENT_TEXT;
  		entry->private_data = chip;
 -		entry->mode = S_IFREG | 0644;
 +		entry->mode = S_IFREG | S_IRUGO | S_IWUSR;
  		entry->c.text.read = cs46xx_dsp_proc_task_tree_read;
- 		if (snd_info_register(entry) < 0) {
- 			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
  	ins->proc_task_info_entry = entry;
  
  	if ((entry = snd_info_create_card_entry(card, "scb_info", ins->proc_dsp_dir)) != NULL) {
  		entry->content = SNDRV_INFO_CONTENT_TEXT;
  		entry->private_data = chip;
 -		entry->mode = S_IFREG | 0644;
 +		entry->mode = S_IFREG | S_IRUGO | S_IWUSR;
  		entry->c.text.read = cs46xx_dsp_proc_scb_read;
- 		if (snd_info_register(entry) < 0) {
- 			snd_info_free_entry(entry);
- 			entry = NULL;
- 		}
  	}
  	ins->proc_scb_info_entry = entry;
  
* Unmerged path sound/pci/ac97/ac97_proc.c
* Unmerged path sound/pci/cs46xx/dsp_spos.c
diff --git a/sound/pci/cs46xx/dsp_spos_scb_lib.c b/sound/pci/cs46xx/dsp_spos_scb_lib.c
index 7488e1b7a770..dbb3e9c02823 100644
--- a/sound/pci/cs46xx/dsp_spos_scb_lib.c
+++ b/sound/pci/cs46xx/dsp_spos_scb_lib.c
@@ -274,12 +274,6 @@ void cs46xx_dsp_proc_register_scb_desc (struct snd_cs46xx *chip,
 			entry->mode = S_IFREG | S_IRUGO | S_IWUSR;
       
 			entry->c.text.read = cs46xx_dsp_proc_scb_info_read;
-      
-			if (snd_info_register(entry) < 0) {
-				snd_info_free_entry(entry);
-				kfree (scb_info);
-				entry = NULL;
-			}
 		}
 out:
 		scb->proc_info = entry;
