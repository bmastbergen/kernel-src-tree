RDMA/CMA: Add rdma_port_space to UAPI

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Steve Wise <swise@opengridcomputing.com>
commit 2253fc0caa800ba7c1e380446eb3fb7958a85b93
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/2253fc0c.failed

Since the rdma_port_space enum is being passed between user and kernel for
user cm_id setup, we need it in a UAPI header.  So add it to
rdma_user_cm.h.

This also fixes the cm_id restrack changes which pass up the port space
value via the RDMA_NLDEV_ATTR_RES_PS attribute.

Fixes: 00313983cda6 ("RDMA/nldev: provide detailed CM_ID information")
	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 2253fc0caa800ba7c1e380446eb3fb7958a85b93)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cma.c
#	include/rdma/rdma_cm.h
diff --cc drivers/infiniband/core/cma.c
index 0ec7b04eb29b,b3574d4eeea9..000000000000
--- a/drivers/infiniband/core/cma.c
+++ b/drivers/infiniband/core/cma.c
@@@ -740,10 -741,10 +741,17 @@@ static void cma_deref_id(struct rdma_id
  		complete(&id_priv->comp);
  }
  
++<<<<<<< HEAD
 +struct rdma_cm_id *rdma_create_id(struct net *net,
 +				  rdma_cm_event_handler event_handler,
 +				  void *context, enum rdma_port_space ps,
 +				  enum ib_qp_type qp_type)
++=======
+ struct rdma_cm_id *__rdma_create_id(struct net *net,
+ 				    rdma_cm_event_handler event_handler,
+ 				    void *context, enum rdma_ucm_port_space ps,
+ 				    enum ib_qp_type qp_type, const char *caller)
++>>>>>>> 2253fc0caa80 (RDMA/CMA: Add rdma_port_space to UAPI)
  {
  	struct rdma_id_private *id_priv;
  
diff --cc include/rdma/rdma_cm.h
index 8cceabf1cebd,4480e636b934..000000000000
--- a/include/rdma/rdma_cm.h
+++ b/include/rdma/rdma_cm.h
@@@ -156,6 -150,12 +150,15 @@@ struct rdma_cm_id 
  	u8			 port_num;
  };
  
++<<<<<<< HEAD
++=======
+ struct rdma_cm_id *__rdma_create_id(struct net *net,
+ 				    rdma_cm_event_handler event_handler,
+ 				    void *context, enum rdma_ucm_port_space ps,
+ 				    enum ib_qp_type qp_type,
+ 				    const char *caller);
+ 
++>>>>>>> 2253fc0caa80 (RDMA/CMA: Add rdma_port_space to UAPI)
  /**
   * rdma_create_id - Create an RDMA identifier.
   *
* Unmerged path drivers/infiniband/core/cma.c
* Unmerged path include/rdma/rdma_cm.h
diff --git a/include/uapi/rdma/rdma_user_cm.h b/include/uapi/rdma/rdma_user_cm.h
index 8ecb4a4375cd..9206f4ffbf2c 100644
--- a/include/uapi/rdma/rdma_user_cm.h
+++ b/include/uapi/rdma/rdma_user_cm.h
@@ -69,6 +69,14 @@ enum {
 	RDMA_USER_CM_CMD_JOIN_MCAST
 };
 
+/* See IBTA Annex A11, servies ID bytes 4 & 5 */
+enum rdma_ucm_port_space {
+	RDMA_PS_IPOIB = 0x0002,
+	RDMA_PS_IB    = 0x013F,
+	RDMA_PS_TCP   = 0x0106,
+	RDMA_PS_UDP   = 0x0111,
+};
+
 /*
  * command ABI structures.
  */
@@ -81,7 +89,7 @@ struct rdma_ucm_cmd_hdr {
 struct rdma_ucm_create_id {
 	__aligned_u64 uid;
 	__aligned_u64 response;
-	__u16 ps;
+	__u16 ps;                  /* use enum rdma_ucm_port_space */
 	__u8  qp_type;
 	__u8  reserved[5];
 };
