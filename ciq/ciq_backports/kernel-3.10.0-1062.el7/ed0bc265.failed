IB/ipoib: Make ipoib_intercept_dev_id_attr() static

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Kamal Heib <kamalheib1@gmail.com>
commit ed0bc2658e1b7c083fc7f49cc6b56ea66f5ed350
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ed0bc265.failed

The function ipoib_intercept_dev_id_attr() is only used in ipoib_main.c

Fixes: f6350da41dc7 ("IB/ipoib: Log sysfs 'dev_id' accesses from userspace")
	Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit ed0bc2658e1b7c083fc7f49cc6b56ea66f5ed350)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/ipoib/ipoib_main.c
diff --cc drivers/infiniband/ulp/ipoib/ipoib_main.c
index 7e4e2a9adc93,3d3407d1feb4..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib_main.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_main.c
@@@ -2222,18 -2388,33 +2222,25 @@@ int ipoib_add_pkey_attr(struct net_devi
  	return device_create_file(&dev->dev, &dev_attr_pkey);
  }
  
 -/*
 - * We erroneously exposed the iface's port number in the dev_id
 - * sysfs field long after dev_port was introduced for that purpose[1],
 - * and we need to stop everyone from relying on that.
 - * Let's overload the shower routine for the dev_id file here
 - * to gently bring the issue up.
 - *
 - * [1] https://www.spinics.net/lists/netdev/msg272123.html
 - */
 -static ssize_t dev_id_show(struct device *dev,
 -			   struct device_attribute *attr, char *buf)
 +void ipoib_set_dev_features(struct ipoib_dev_priv *priv, struct ib_device *hca)
  {
 -	struct net_device *ndev = to_net_dev(dev);
 +	priv->hca_caps = hca->attrs.device_cap_flags;
  
 -	if (ndev->dev_id == ndev->dev_port)
 -		netdev_info_once(ndev,
 -			"\"%s\" wants to know my dev_id. Should it look at dev_port instead? See Documentation/ABI/testing/sysfs-class-net for more info.\n",
 -			current->comm);
 +	if (priv->hca_caps & IB_DEVICE_UD_IP_CSUM) {
 +		priv->dev->hw_features |= NETIF_F_IP_CSUM | NETIF_F_RXCSUM;
  
 -	return sprintf(buf, "%#x\n", ndev->dev_id);
 -}
 -static DEVICE_ATTR_RO(dev_id);
 +		if (priv->hca_caps & IB_DEVICE_UD_TSO)
 +			priv->dev->hw_features |= NETIF_F_TSO;
  
++<<<<<<< HEAD
 +		priv->dev->features |= priv->dev->hw_features;
 +	}
++=======
+ static int ipoib_intercept_dev_id_attr(struct net_device *dev)
+ {
+ 	device_remove_file(&dev->dev, &dev_attr_dev_id);
+ 	return device_create_file(&dev->dev, &dev_attr_dev_id);
++>>>>>>> ed0bc2658e1b (IB/ipoib: Make ipoib_intercept_dev_id_attr() static)
  }
  
  static struct net_device *ipoib_add_port(const char *format,
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib_main.c
