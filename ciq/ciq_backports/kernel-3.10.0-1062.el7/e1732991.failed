x86/kvm/mmu: get rid of redundant kvm_mmu_setup()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [x86] kvm/mmu: get rid of redundant kvm_mmu_setup() (Vitaly Kuznetsov) [1565739 1497611]
Rebuild_FUZZ: 95.74%
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit e173299101affc677db085b2894a43be4a17a94b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e1732991.failed

Just inline the contents into the sole caller, kvm_init_mmu is now
public.

	Suggested-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
	Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
(cherry picked from commit e173299101affc677db085b2894a43be4a17a94b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu.c
diff --cc arch/x86/kvm/mmu.c
index e7052d2c946d,dd147fa5b3f4..000000000000
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@@ -4980,21 -5423,25 +4980,24 @@@ static int alloc_mmu_pages(struct kvm_v
  
  int kvm_mmu_create(struct kvm_vcpu *vcpu)
  {
 -	uint i;
 -
 -	vcpu->arch.mmu = &vcpu->arch.root_mmu;
 -	vcpu->arch.walk_mmu = &vcpu->arch.root_mmu;
 +	vcpu->arch.walk_mmu = &vcpu->arch.mmu;
 +	vcpu->arch.mmu.root_hpa = INVALID_PAGE;
 +	vcpu->arch.mmu.translate_gpa = translate_gpa;
 +	vcpu->arch.nested_mmu.translate_gpa = translate_nested_gpa;
  
 -	vcpu->arch.root_mmu.root_hpa = INVALID_PAGE;
 -	vcpu->arch.root_mmu.translate_gpa = translate_gpa;
 -	for (i = 0; i < KVM_MMU_NUM_PREV_ROOTS; i++)
 -		vcpu->arch.root_mmu.prev_roots[i] = KVM_MMU_ROOT_INFO_INVALID;
 +	return alloc_mmu_pages(vcpu);
 +}
  
 -	vcpu->arch.guest_mmu.root_hpa = INVALID_PAGE;
 -	vcpu->arch.guest_mmu.translate_gpa = translate_gpa;
 -	for (i = 0; i < KVM_MMU_NUM_PREV_ROOTS; i++)
 -		vcpu->arch.guest_mmu.prev_roots[i] = KVM_MMU_ROOT_INFO_INVALID;
++<<<<<<< HEAD
 +void kvm_mmu_setup(struct kvm_vcpu *vcpu)
 +{
 +	MMU_WARN_ON(VALID_PAGE(vcpu->arch.mmu.root_hpa));
  
 -	vcpu->arch.nested_mmu.translate_gpa = translate_nested_gpa;
 -	return alloc_mmu_pages(vcpu);
 +	init_kvm_mmu(vcpu);
  }
  
++=======
++>>>>>>> e173299101af (x86/kvm/mmu: get rid of redundant kvm_mmu_setup())
  static void kvm_mmu_invalidate_zap_pages_in_memslot(struct kvm *kvm,
  			struct kvm_memory_slot *slot,
  			struct kvm_page_track_notifier_node *node)
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 86bec63d5f8a..888c5e906f7a 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1012,7 +1012,6 @@ void kvm_mmu_module_exit(void);
 
 void kvm_mmu_destroy(struct kvm_vcpu *vcpu);
 int kvm_mmu_create(struct kvm_vcpu *vcpu);
-void kvm_mmu_setup(struct kvm_vcpu *vcpu);
 void kvm_mmu_init_vm(struct kvm *kvm);
 void kvm_mmu_uninit_vm(struct kvm *kvm);
 void kvm_mmu_set_mask_ptes(u64 user_mask, u64 accessed_mask,
* Unmerged path arch/x86/kvm/mmu.c
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index bc19a3517278..a0ddd3edd4b3 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -7538,7 +7538,7 @@ int kvm_arch_vcpu_setup(struct kvm_vcpu *vcpu)
 	if (r)
 		return r;
 	kvm_vcpu_reset(vcpu, false);
-	kvm_mmu_setup(vcpu);
+	kvm_init_mmu(vcpu, false);
 	vcpu_put(vcpu);
 	return r;
 }
