IB/mlx5: Add DEVX support for modify and query commands

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Yishai Hadas <yishaih@mellanox.com>
commit e662e14d801b01a976e58bc3f8d9fe49b9fcec3a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e662e14d.failed

Add support in DEVX for modify and query commands, the required lock is
taken (i.e. READ/WRITE) by the KABI infrastructure accordingly.

	Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit e662e14d801b01a976e58bc3f8d9fe49b9fcec3a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/amso1100/c2_user.h
#	drivers/infiniband/hw/mlx5/devx.c
#	drivers/net/ethernet/mellanox/mlx5/core/cmd.c
#	include/linux/mlx5/mlx5_ifc.h
diff --cc drivers/infiniband/hw/amso1100/c2_user.h
index 7e9e7ad65467,97d216b8d053..000000000000
--- a/drivers/infiniband/hw/amso1100/c2_user.h
+++ b/drivers/infiniband/hw/amso1100/c2_user.h
@@@ -30,53 -28,64 +30,85 @@@
   * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
   * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
 + *
   */
  
 -#ifndef MLX5_USER_IOCTL_CMDS_H
 -#define MLX5_USER_IOCTL_CMDS_H
 +#ifndef C2_USER_H
 +#define C2_USER_H
 +
 +#include <linux/types.h>
  
 -#include <rdma/ib_user_ioctl_cmds.h>
 +/*
 + * Make sure that all structs defined in this file remain laid out so
 + * that they pack the same way on 32-bit and 64-bit architectures (to
 + * avoid incompatibility between 32-bit userspace and 64-bit kernels).
 + * In particular do not use pointer types -- pass pointers in __u64
 + * instead.
 + */
  
 -enum mlx5_ib_create_flow_action_attrs {
 -	/* This attribute belong to the driver namespace */
 -	MLX5_IB_ATTR_CREATE_FLOW_ACTION_FLAGS = (1U << UVERBS_ID_NS_SHIFT),
 +struct c2_alloc_ucontext_resp {
 +	__u32 qp_tab_size;
 +	__u32 uarc_size;
  };
  
 -enum mlx5_ib_alloc_dm_attrs {
 -	MLX5_IB_ATTR_ALLOC_DM_RESP_START_OFFSET = (1U << UVERBS_ID_NS_SHIFT),
 -	MLX5_IB_ATTR_ALLOC_DM_RESP_PAGE_INDEX,
 +struct c2_alloc_pd_resp {
 +	__u32 pdn;
 +	__u32 reserved;
  };
  
 -enum mlx5_ib_devx_methods {
 -	MLX5_IB_METHOD_DEVX_OTHER  = (1U << UVERBS_ID_NS_SHIFT),
 +struct c2_create_cq {
 +	__u32 lkey;
 +	__u32 pdn;
 +	__u64 arm_db_page;
 +	__u64 set_db_page;
 +	__u32 arm_db_index;
 +	__u32 set_db_index;
  };
  
 -enum  mlx5_ib_devx_other_attrs {
 -	MLX5_IB_ATTR_DEVX_OTHER_CMD_IN = (1U << UVERBS_ID_NS_SHIFT),
 -	MLX5_IB_ATTR_DEVX_OTHER_CMD_OUT,
 +struct c2_create_cq_resp {
 +	__u32 cqn;
 +	__u32 reserved;
  };
  
 -enum mlx5_ib_devx_obj_create_attrs {
 -	MLX5_IB_ATTR_DEVX_OBJ_CREATE_HANDLE = (1U << UVERBS_ID_NS_SHIFT),
 -	MLX5_IB_ATTR_DEVX_OBJ_CREATE_CMD_IN,
 -	MLX5_IB_ATTR_DEVX_OBJ_CREATE_CMD_OUT,
 +struct c2_create_qp {
 +	__u32 lkey;
 +	__u32 reserved;
 +	__u64 sq_db_page;
 +	__u64 rq_db_page;
 +	__u32 sq_db_index;
 +	__u32 rq_db_index;
  };
  
++<<<<<<< HEAD:drivers/infiniband/hw/amso1100/c2_user.h
 +#endif				/* C2_USER_H */
++=======
+ enum mlx5_ib_devx_obj_destroy_attrs {
+ 	MLX5_IB_ATTR_DEVX_OBJ_DESTROY_HANDLE = (1U << UVERBS_ID_NS_SHIFT),
+ };
+ 
+ enum mlx5_ib_devx_obj_modify_attrs {
+ 	MLX5_IB_ATTR_DEVX_OBJ_MODIFY_HANDLE = (1U << UVERBS_ID_NS_SHIFT),
+ 	MLX5_IB_ATTR_DEVX_OBJ_MODIFY_CMD_IN,
+ 	MLX5_IB_ATTR_DEVX_OBJ_MODIFY_CMD_OUT,
+ };
+ 
+ enum mlx5_ib_devx_obj_query_attrs {
+ 	MLX5_IB_ATTR_DEVX_OBJ_QUERY_HANDLE = (1U << UVERBS_ID_NS_SHIFT),
+ 	MLX5_IB_ATTR_DEVX_OBJ_QUERY_CMD_IN,
+ 	MLX5_IB_ATTR_DEVX_OBJ_QUERY_CMD_OUT,
+ };
+ 
+ enum mlx5_ib_devx_obj_methods {
+ 	MLX5_IB_METHOD_DEVX_OBJ_CREATE = (1U << UVERBS_ID_NS_SHIFT),
+ 	MLX5_IB_METHOD_DEVX_OBJ_DESTROY,
+ 	MLX5_IB_METHOD_DEVX_OBJ_MODIFY,
+ 	MLX5_IB_METHOD_DEVX_OBJ_QUERY,
+ };
+ 
+ enum mlx5_ib_devx_objects {
+ 	MLX5_IB_OBJECT_DEVX = (1U << UVERBS_ID_NS_SHIFT),
+ 	MLX5_IB_OBJECT_DEVX_OBJ,
+ };
+ 
+ #endif
++>>>>>>> e662e14d801b (IB/mlx5: Add DEVX support for modify and query commands):include/uapi/rdma/mlx5_user_ioctl_cmds.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/cmd.c
index 61e4c8a5f143,9d03a202abb1..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/cmd.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/cmd.c
@@@ -428,6 -428,9 +428,12 @@@ static int mlx5_internal_err_ret_value(
  	case MLX5_CMD_OP_FPGA_MODIFY_QP:
  	case MLX5_CMD_OP_FPGA_QUERY_QP:
  	case MLX5_CMD_OP_FPGA_QUERY_QP_COUNTERS:
++<<<<<<< HEAD
++=======
+ 	case MLX5_CMD_OP_CREATE_GENERAL_OBJECT:
+ 	case MLX5_CMD_OP_MODIFY_GENERAL_OBJECT:
+ 	case MLX5_CMD_OP_QUERY_GENERAL_OBJECT:
++>>>>>>> e662e14d801b (IB/mlx5: Add DEVX support for modify and query commands)
  		*status = MLX5_DRIVER_STATUS_ABORTED;
  		*synd = MLX5_DRIVER_SYND;
  		return -EIO;
@@@ -600,6 -603,11 +606,14 @@@ const char *mlx5_command_str(int comman
  	MLX5_COMMAND_STR_CASE(FPGA_QUERY_QP);
  	MLX5_COMMAND_STR_CASE(FPGA_QUERY_QP_COUNTERS);
  	MLX5_COMMAND_STR_CASE(FPGA_DESTROY_QP);
++<<<<<<< HEAD
++=======
+ 	MLX5_COMMAND_STR_CASE(CREATE_GENERAL_OBJECT);
+ 	MLX5_COMMAND_STR_CASE(DESTROY_GENERAL_OBJECT);
+ 	MLX5_COMMAND_STR_CASE(MODIFY_GENERAL_OBJECT);
+ 	MLX5_COMMAND_STR_CASE(QUERY_GENERAL_OBJECT);
+ 	MLX5_COMMAND_STR_CASE(QUERY_MODIFY_HEADER_CONTEXT);
++>>>>>>> e662e14d801b (IB/mlx5: Add DEVX support for modify and query commands)
  	default: return "unknown command opcode";
  	}
  }
diff --cc include/linux/mlx5/mlx5_ifc.h
index c57762dc5bf3,ac24ed87c67e..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -240,6 -252,10 +241,13 @@@ enum 
  	MLX5_CMD_OP_FPGA_QUERY_QP                 = 0x962,
  	MLX5_CMD_OP_FPGA_DESTROY_QP               = 0x963,
  	MLX5_CMD_OP_FPGA_QUERY_QP_COUNTERS        = 0x964,
++<<<<<<< HEAD
++=======
+ 	MLX5_CMD_OP_CREATE_GENERAL_OBJECT         = 0xa00,
+ 	MLX5_CMD_OP_MODIFY_GENERAL_OBJECT         = 0xa01,
+ 	MLX5_CMD_OP_QUERY_GENERAL_OBJECT          = 0xa02,
+ 	MLX5_CMD_OP_DESTROY_GENERAL_OBJECT        = 0xa03,
++>>>>>>> e662e14d801b (IB/mlx5: Add DEVX support for modify and query commands)
  	MLX5_CMD_OP_MAX
  };
  
* Unmerged path drivers/infiniband/hw/mlx5/devx.c
* Unmerged path drivers/infiniband/hw/amso1100/c2_user.h
* Unmerged path drivers/infiniband/hw/mlx5/devx.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/cmd.c
* Unmerged path include/linux/mlx5/mlx5_ifc.h
