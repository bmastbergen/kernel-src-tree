perf tools: No need to check if the argument to __get() function is NULL

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 362379aad56fdc627a49e30d12c3ece900221898
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/362379aa.failed

Those functions always check if the argument is NULL before trying to
grab a reference count, and also will return the received object, so, to
make code more compact, no need to check for NULL.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Krister Johansen <kjlx@templeofstupid.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-i9wycjdxh0fwhryu55lmafks@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 362379aad56fdc627a49e30d12c3ece900221898)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-probe.c
diff --cc tools/perf/builtin-probe.c
index cf9f9e9c2fc0,99de91698de1..000000000000
--- a/tools/perf/builtin-probe.c
+++ b/tools/perf/builtin-probe.c
@@@ -80,6 -81,8 +80,11 @@@ static int parse_probe_event(const cha
  		params.target_used = true;
  	}
  
++<<<<<<< HEAD
++=======
+ 	pev->nsi = nsinfo__get(params.nsi);
+ 
++>>>>>>> 362379aad56f (perf tools: No need to check if the argument to __get() function is NULL)
  	/* Parse a perf-probe command into event */
  	ret = parse_perf_probe_command(str, pev);
  	pr_debug("%d arguments\n", pev->nargs);
* Unmerged path tools/perf/builtin-probe.c
diff --git a/tools/perf/util/hist.c b/tools/perf/util/hist.c
index 16da04103adc..13f360009207 100644
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@ -1031,7 +1031,7 @@ int hist_entry_iter__add(struct hist_entry_iter *iter, struct addr_location *al,
 	int err, err2;
 	struct map *alm = NULL;
 
-	if (al && al->map)
+	if (al)
 		alm = map__get(al->map);
 
 	err = sample__resolve_callchain(iter->sample, &callchain_cursor, &iter->parent,
