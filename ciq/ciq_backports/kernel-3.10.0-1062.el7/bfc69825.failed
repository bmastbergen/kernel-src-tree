net/mlx5e: RX, Fix wrong early return in receive queue poll

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: RX, Fix wrong early return in receive queue poll (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 96.49%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit bfc698254ba97b3e3e4ebbfae0ffa1f7e2fa0717
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/bfc69825.failed

When the completion queue of the RQ is empty, do not immediately return.
If left-over decompressed CQEs (from the previous cycle) were processed,
need to go to the finalization part of the poll function.

Bug exists only when CQE compression is turned ON.

This solves the following issue:
mlx5_core 0000:82:00.1: mlx5_eq_int:544:(pid 0): CQ error on CQN 0xc08, syndrome 0x1
mlx5_core 0000:82:00.1 p4p2: mlx5e_cq_error_event: cqn=0x000c08 event=0x04

Fixes: 4b7dfc992514 ("net/mlx5e: Early-return on empty completion queues")
	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit bfc698254ba97b3e3e4ebbfae0ffa1f7e2fa0717)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index a60ee24e6b99,0b5ef6d4e815..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -1125,14 -1220,15 +1126,19 @@@ int mlx5e_poll_rx_cq(struct mlx5e_cq *c
  		rq->handle_rx_cqe(rq, cqe);
  	} while ((++work_done < budget) && (cqe = mlx5_cqwq_get_cqe(&cq->wq)));
  
++<<<<<<< HEAD
 +	if (xdpsq->db.doorbell) {
++=======
+ out:
+ 	if (xdpsq->doorbell) {
++>>>>>>> bfc698254ba9 (net/mlx5e: RX, Fix wrong early return in receive queue poll)
  		mlx5e_xmit_xdp_doorbell(xdpsq);
 -		xdpsq->doorbell = false;
 +		xdpsq->db.doorbell = false;
  	}
  
 -	if (xdpsq->redirect_flush) {
 +	if (xdpsq->db.redirect_flush) {
  		xdp_do_flush_map();
 -		xdpsq->redirect_flush = false;
 +		xdpsq->db.redirect_flush = false;
  	}
  
  	mlx5_cqwq_update_db_record(&cq->wq);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
