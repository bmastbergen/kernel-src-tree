IB/mlx5: Enable DEVX on IB

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Yishai Hadas <yishaih@mellanox.com>
commit 3df6e0234aebc55888069997239fe2847d4cf152
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/3df6e023.failed

IB has additional protections with SELinux that cannot be extended to the
DEVX domain. SELinux can restrict access to pkeys. The first version of
DEVX blocked IB entirely until this could be understood.

Since DEVX requires CAP_NET_RAW, it supersedes the SELinux restriction and
allows userspace to form arbitrary packets with arbitrary pkeys.

Thus we enable IB for DEVX when CAP_NET_RAW is given.

	Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 3df6e0234aebc55888069997239fe2847d4cf152)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index b529cb4f76e1,b3294a7e3ff9..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -1744,9 -1758,17 +1744,21 @@@ static struct ib_ucontext *mlx5_ib_allo
  	context->ibucontext.invalidate_range = &mlx5_ib_invalidate_range;
  #endif
  
++<<<<<<< HEAD
 +	err = mlx5_ib_alloc_transport_domain(dev, &context->tdn);
++=======
+ 	if (req.flags & MLX5_IB_ALLOC_UCTX_DEVX) {
+ 		err = mlx5_ib_devx_create(dev);
+ 		if (err < 0)
+ 			goto out_uars;
+ 		context->devx_uid = err;
+ 	}
+ 
+ 	err = mlx5_ib_alloc_transport_domain(dev, &context->tdn,
+ 					     context->devx_uid);
++>>>>>>> 3df6e0234aeb (IB/mlx5: Enable DEVX on IB)
  	if (err)
 -		goto out_devx;
 +		goto out_uars;
  
  	if (MLX5_CAP_GEN(dev->mdev, dump_fill_mkey)) {
  		err = mlx5_cmd_dump_fill_mkey(dev->mdev, &dump_fill_mkey);
* Unmerged path drivers/infiniband/hw/mlx5/main.c
