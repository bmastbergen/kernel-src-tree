i40iw: remove support for ib_get_vector_affinity

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Sagi Grimberg <sagi@grimberg.me>
commit 759ace7832802eaefbca821b2b43a44ab896b449
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/759ace78.failed

Devices that does not use managed affinity can not export a vector
affinity as the consumer relies on having a static mapping it can map to
upper layer affinity (e.g. sw queues). If the driver allows the user to
set the device irq affinity, then the affinitization of a long term
existing entites is not relevant.

For example, nvme-rdma controllers queue-irq affinitization is determined
at init time so if the irq affinity changes over time, we are no longer
aligned.

	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
	Acked-by: Shiraz Saleem <shiraz.saleem@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 759ace7832802eaefbca821b2b43a44ab896b449)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/i40iw/i40iw_verbs.c
diff --cc drivers/infiniband/hw/i40iw/i40iw_verbs.c
index 5d5ea2597836,a773d1edf7fd..000000000000
--- a/drivers/infiniband/hw/i40iw/i40iw_verbs.c
+++ b/drivers/infiniband/hw/i40iw/i40iw_verbs.c
@@@ -2734,47 -2722,6 +2734,50 @@@ static int i40iw_query_pkey(struct ib_d
  }
  
  /**
++<<<<<<< HEAD
 + * i40iw_create_ah - create address handle
 + * @ibpd: ptr of pd
 + * @ah_attr: address handle attributes
 + */
 +static struct ib_ah *i40iw_create_ah(struct ib_pd *ibpd,
 +				     struct rdma_ah_attr *attr,
 +				     struct ib_udata *udata)
 +
 +{
 +	return ERR_PTR(-ENOSYS);
 +}
 +
 +/**
 + * i40iw_destroy_ah - Destroy address handle
 + * @ah: pointer to address handle
 + */
 +static int i40iw_destroy_ah(struct ib_ah *ah)
 +{
 +	return -ENOSYS;
 +}
 +
 +/**
 + * i40iw_get_vector_affinity - report IRQ affinity mask
 + * @ibdev: IB device
 + * @comp_vector: completion vector index
 + */
 +static const struct cpumask *i40iw_get_vector_affinity(struct ib_device *ibdev,
 +						       int comp_vector)
 +{
 +	struct i40iw_device *iwdev = to_iwdev(ibdev);
 +	struct i40iw_msix_vector *msix_vec;
 +
 +	if (iwdev->msix_shared)
 +		msix_vec = &iwdev->iw_msixtbl[comp_vector];
 +	else
 +		msix_vec = &iwdev->iw_msixtbl[comp_vector + 1];
 +
 +	return irq_get_affinity_mask(msix_vec->irq);
 +}
 +
 +/**
++=======
++>>>>>>> 759ace783280 (i40iw: remove support for ib_get_vector_affinity)
   * i40iw_init_rdma_device - initialization of iwarp device
   * @iwdev: iwarp device
   */
* Unmerged path drivers/infiniband/hw/i40iw/i40iw_verbs.c
