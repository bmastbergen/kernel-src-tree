RDMA/restrack: Consolidate task name updates in one place

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Leon Romanovsky <leonro@mellanox.com>
commit 2165fc264079ecb7fbfa5e8b330a92eb3f0fcbe1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/2165fc26.failed

Unify task update and kernel name set in one place.

	Reviewed-by: Artemy Kovalyov <artemyko@mellanox.com>
	Reviewed-by: Yossi Itigin <yosefe@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Reviewed-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 2165fc264079ecb7fbfa5e8b330a92eb3f0fcbe1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cma.c
#	drivers/infiniband/core/restrack.c
#	include/rdma/restrack.h
diff --cc drivers/infiniband/core/cma.c
index 9ce634301eda,f117b755c4c2..000000000000
--- a/drivers/infiniband/core/cma.c
+++ b/drivers/infiniband/core/cma.c
@@@ -832,7 -875,8 +832,12 @@@ struct rdma_cm_id *rdma_create_id(struc
  	if (!id_priv)
  		return ERR_PTR(-ENOMEM);
  
++<<<<<<< HEAD
 +	id_priv->owner = task_pid_nr(current);
++=======
+ 	rdma_restrack_set_task(&id_priv->res, caller);
+ 	id_priv->res.type = RDMA_RESTRACK_CM_ID;
++>>>>>>> 2165fc264079 (RDMA/restrack: Consolidate task name updates in one place)
  	id_priv->state = RDMA_CM_IDLE;
  	id_priv->id.context = context;
  	id_priv->id.event_handler = event_handler;
@@@ -3883,7 -3942,7 +3888,11 @@@ int rdma_accept(struct rdma_cm_id *id, 
  
  	id_priv = container_of(id, struct rdma_id_private, id);
  
++<<<<<<< HEAD
 +	id_priv->owner = task_pid_nr(current);
++=======
+ 	rdma_restrack_set_task(&id_priv->res, caller);
++>>>>>>> 2165fc264079 (RDMA/restrack: Consolidate task name updates in one place)
  
  	if (!cma_comp(id_priv, RDMA_CM_CONNECT))
  		return -EINVAL;
diff --cc drivers/infiniband/core/restrack.c
index 340f64074ccd,035af568ba64..000000000000
--- a/drivers/infiniband/core/restrack.c
+++ b/drivers/infiniband/core/restrack.c
@@@ -131,6 -155,21 +131,24 @@@ static bool res_is_user(struct rdma_res
  	}
  }
  
++<<<<<<< HEAD
++=======
+ void rdma_restrack_set_task(struct rdma_restrack_entry *res,
+ 			    const char *caller)
+ {
+ 	if (caller) {
+ 		res->kern_name = caller;
+ 		return;
+ 	}
+ 
+ 	if (res->task)
+ 		put_task_struct(res->task);
+ 	get_task_struct(current);
+ 	res->task = current;
+ }
+ EXPORT_SYMBOL(rdma_restrack_set_task);
+ 
++>>>>>>> 2165fc264079 (RDMA/restrack: Consolidate task name updates in one place)
  void rdma_restrack_add(struct rdma_restrack_entry *res)
  {
  	struct ib_device *dev = res_to_dev(res);
@@@ -142,8 -181,8 +160,13 @@@
  		res->task = NULL;
  
  	if (res_is_user(res)) {
++<<<<<<< HEAD
 +		get_task_struct(current);
 +		res->task = current;
++=======
+ 		if (!res->task)
+ 			rdma_restrack_set_task(res, NULL);
++>>>>>>> 2165fc264079 (RDMA/restrack: Consolidate task name updates in one place)
  		res->kern_name = NULL;
  	} else {
  		set_kern_name(res);
diff --cc include/rdma/restrack.h
index 5fd84d38d838,2638fa7cd702..000000000000
--- a/include/rdma/restrack.h
+++ b/include/rdma/restrack.h
@@@ -150,4 -169,23 +150,26 @@@ int __must_check rdma_restrack_get(stru
   * @res:  resource entry
   */
  int rdma_restrack_put(struct rdma_restrack_entry *res);
++<<<<<<< HEAD
++=======
+ 
+ /**
+  * rdma_restrack_set_task() - set the task for this resource
+  * @res:  resource entry
+  * @caller: kernel name, the current task will be used if the caller is NULL.
+  */
+ void rdma_restrack_set_task(struct rdma_restrack_entry *res,
+ 			    const char *caller);
+ 
+ /*
+  * Helper functions for rdma drivers when filling out
+  * nldev driver attributes.
+  */
+ int rdma_nl_put_driver_u32(struct sk_buff *msg, const char *name, u32 value);
+ int rdma_nl_put_driver_u32_hex(struct sk_buff *msg, const char *name,
+ 			       u32 value);
+ int rdma_nl_put_driver_u64(struct sk_buff *msg, const char *name, u64 value);
+ int rdma_nl_put_driver_u64_hex(struct sk_buff *msg, const char *name,
+ 			       u64 value);
++>>>>>>> 2165fc264079 (RDMA/restrack: Consolidate task name updates in one place)
  #endif /* _RDMA_RESTRACK_H_ */
* Unmerged path drivers/infiniband/core/cma.c
diff --git a/drivers/infiniband/core/cq.c b/drivers/infiniband/core/cq.c
index 9271f7290005..b1e5365ddafa 100644
--- a/drivers/infiniband/core/cq.c
+++ b/drivers/infiniband/core/cq.c
@@ -161,7 +161,7 @@ struct ib_cq *__ib_alloc_cq(struct ib_device *dev, void *private,
 		goto out_destroy_cq;
 
 	cq->res.type = RDMA_RESTRACK_CQ;
-	cq->res.kern_name = caller;
+	rdma_restrack_set_task(&cq->res, caller);
 	rdma_restrack_add(&cq->res);
 
 	switch (cq->poll_ctx) {
* Unmerged path drivers/infiniband/core/restrack.c
diff --git a/drivers/infiniband/core/verbs.c b/drivers/infiniband/core/verbs.c
index a3a988e6b429..34ce3ac327f4 100644
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@ -264,7 +264,7 @@ struct ib_pd *__ib_alloc_pd(struct ib_device *device, unsigned int flags,
 	}
 
 	pd->res.type = RDMA_RESTRACK_PD;
-	pd->res.kern_name = caller;
+	rdma_restrack_set_task(&pd->res, caller);
 	rdma_restrack_add(&pd->res);
 
 	if (mr_access_flags) {
@@ -1888,7 +1888,7 @@ struct ib_cq *__ib_create_cq(struct ib_device *device,
 		cq->cq_context    = cq_context;
 		atomic_set(&cq->usecnt, 0);
 		cq->res.type = RDMA_RESTRACK_CQ;
-		cq->res.kern_name = caller;
+		rdma_restrack_set_task(&cq->res, caller);
 		rdma_restrack_add(&cq->res);
 	}
 
* Unmerged path include/rdma/restrack.h
