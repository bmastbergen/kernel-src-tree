r8169: fix autoneg issue on resume with RTL8168E

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit 10bc6a6042c900934a097988b5d50e3cf3f91781
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/10bc6a60.failed

It was reported that chip version 33 (RTL8168E) ends up with
10MBit/Half on a 1GBit link after resuming from S3 (with different
link partners). For whatever reason the PHY on this chip doesn't
properly start a renegotiation when soft-reset.
Explicitly requesting a renegotiation fixes this.

Fixes: a2965f12fde6 ("r8169: remove rtl8169_set_speed_xmii")
	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Reported-by: Neil MacLeod <neil@nmacleod.com>
	Tested-by: Neil MacLeod <neil@nmacleod.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 10bc6a6042c900934a097988b5d50e3cf3f91781)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index ea7531c16458,ab30aaeac6d3..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -4274,14 -4067,19 +4274,27 @@@ static void rtl8169_init_phy(struct net
  		rtl_writephy(tp, 0x0b, 0x0000); //w 0x0b 15 0 0
  	}
  
 -	/* We may have called phy_speed_down before */
 -	phy_speed_up(dev->phydev);
 +	rtl8169_phy_reset(dev, tp);
  
++<<<<<<< HEAD
 +	rtl8169_set_speed(dev, AUTONEG_ENABLE, SPEED_1000, DUPLEX_FULL,
 +			  ADVERTISED_10baseT_Half | ADVERTISED_10baseT_Full |
 +			  ADVERTISED_100baseT_Half | ADVERTISED_100baseT_Full |
 +			  (tp->mii.supports_gmii ?
 +			   ADVERTISED_1000baseT_Half |
 +			   ADVERTISED_1000baseT_Full : 0));
++=======
+ 	genphy_soft_reset(dev->phydev);
+ 
+ 	/* It was reported that chip version 33 ends up with 10MBit/Half on a
+ 	 * 1GBit link after resuming from S3. For whatever reason the PHY on
+ 	 * this chip doesn't properly start a renegotiation when soft-reset.
+ 	 * Explicitly requesting a renegotiation fixes this.
+ 	 */
+ 	if (tp->mac_version == RTL_GIGA_MAC_VER_33 &&
+ 	    dev->phydev->autoneg == AUTONEG_ENABLE)
+ 		phy_restart_aneg(dev->phydev);
++>>>>>>> 10bc6a6042c9 (r8169: fix autoneg issue on resume with RTL8168E)
  }
  
  static void rtl_rar_set(struct rtl8169_private *tp, u8 *addr)
* Unmerged path drivers/net/ethernet/realtek/r8169.c
