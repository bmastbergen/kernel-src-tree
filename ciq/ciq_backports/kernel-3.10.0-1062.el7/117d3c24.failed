perf thread: Ditch __thread__find_symbol()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 117d3c2474a24ab842af00972598c25abffee1e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/117d3c24.failed

Simulate having all symbols in just one tree by searching the still
existing two trees.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-uss70e8tvzzbzs326330t83q@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 117d3c2474a24ab842af00972598c25abffee1e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/event.c
#	tools/perf/util/thread.h
diff --cc tools/perf/util/event.c
index 8a7576df2c3b,7b67771cd478..000000000000
--- a/tools/perf/util/event.c
+++ b/tools/perf/util/event.c
@@@ -1416,17 -1561,18 +1416,26 @@@ try_again
  			map__load(al->map);
  		al->addr = al->map->map_ip(al->map, al->addr);
  	}
 -
 -	return al->map;
  }
  
++<<<<<<< HEAD
 +void __thread__find_symbol(struct thread *thread, u8 cpumode,
 +			   enum map_type type, u64 addr,
 +			   struct addr_location *al)
 +{
 +	thread__find_addr_map(thread, cpumode, type, addr, al);
 +	if (al->map != NULL)
++=======
+ struct symbol *thread__find_symbol(struct thread *thread, u8 cpumode,
+ 				   u64 addr, struct addr_location *al)
+ {
+ 	al->sym = NULL;
+ 	if (__thread__find_map(thread, cpumode, MAP__FUNCTION, addr, al) ||
+ 	    __thread__find_map(thread, cpumode, MAP__VARIABLE, addr, al))
++>>>>>>> 117d3c2474a2 (perf thread: Ditch __thread__find_symbol())
  		al->sym = map__find_symbol(al->map, al->addr);
 -	return al->sym;
 +	else
 +		al->sym = NULL;
  }
  
  /*
diff --cc tools/perf/util/thread.h
index 6720c6d2aae4,54aa24d6151e..000000000000
--- a/tools/perf/util/thread.h
+++ b/tools/perf/util/thread.h
@@@ -83,18 -92,17 +83,23 @@@ size_t thread__fprintf(struct thread *t
  
  struct thread *thread__main_thread(struct machine *machine, struct thread *thread);
  
 -struct map *__thread__find_map(struct thread *thread, u8 cpumode, enum map_type type,
 -			       u64 addr, struct addr_location *al);
 +void thread__find_addr_map(struct thread *thread,
 +			   u8 cpumode, enum map_type type, u64 addr,
 +			   struct addr_location *al);
 +
 +void __thread__find_symbol(struct thread *thread, u8 cpumode, enum map_type type,
 +			   u64 addr, struct addr_location *al);
  
 -static inline struct map *thread__find_map(struct thread *thread, u8 cpumode,
 -					   u64 addr, struct addr_location *al)
++<<<<<<< HEAD
 +static inline void thread__find_symbol(struct thread *thread, u8 cpumode,
 +				       u64 addr, struct addr_location *al)
  {
 -	return __thread__find_map(thread, cpumode, MAP__FUNCTION, addr, al);
 +	return __thread__find_symbol(thread, cpumode, MAP__FUNCTION, addr, al);
  }
 -
++=======
+ struct symbol *thread__find_symbol(struct thread *thread, u8 cpumode,
+ 				   u64 addr, struct addr_location *al);
++>>>>>>> 117d3c2474a2 (perf thread: Ditch __thread__find_symbol())
  
  void thread__find_cpumode_addr_location(struct thread *thread, u64 addr,
  					struct addr_location *al);
diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index 5ebdb290eec1..4d1b9f95554b 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -1978,7 +1978,7 @@ static int trace__pgfault(struct trace *trace,
 
 	fprintf(trace->output, "] => ");
 
-	__thread__find_symbol(thread, sample->cpumode, MAP__VARIABLE, sample->addr, &al);
+	thread__find_symbol(thread, sample->cpumode, sample->addr, &al);
 
 	if (!al.map) {
 		thread__find_symbol(thread, sample->cpumode, sample->addr, &al);
* Unmerged path tools/perf/util/event.c
diff --git a/tools/perf/util/machine.c b/tools/perf/util/machine.c
index 80114c951119..59ace46b8950 100644
--- a/tools/perf/util/machine.c
+++ b/tools/perf/util/machine.c
@@ -1641,15 +1641,7 @@ static void ip__resolve_data(struct thread *thread,
 
 	memset(&al, 0, sizeof(al));
 
-	__thread__find_symbol(thread, m, MAP__VARIABLE, addr, &al);
-	if (al.map == NULL) {
-		/*
-		 * some shared data regions have execute bit set which puts
-		 * their mapping in the MAP__FUNCTION type array.
-		 * Check there as a fallback option before dropping the sample.
-		 */
-		thread__find_symbol(thread, m, addr, &al);
-	}
+	thread__find_symbol(thread, m, addr, &al);
 
 	ams->addr = addr;
 	ams->al_addr = al.addr;
* Unmerged path tools/perf/util/thread.h
