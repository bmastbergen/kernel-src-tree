ethernet/realtek: Replace synchronize_sched() with synchronize_rcu()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] realtek: Replace synchronize_sched() with synchronize_rcu() (Corinna Vinschen) [1646441]
Rebuild_FUZZ: 92.91%
commit-author Paul E. McKenney <paulmck@linux.ibm.com>
commit 16f11500842ce022fe654e38bd447e15790911dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/16f11500.failed

Now that synchronize_rcu() waits for preempt-disable regions of code
as well as RCU read-side critical sections, synchronize_sched() can be
replaced by synchronize_rcu().  This commit therefore makes this change.

	Signed-off-by: Paul E. McKenney <paulmck@linux.ibm.com>
	Cc: Realtek linux nic maintainers <nic_swsd@realtek.com>
	Cc: "David S. Miller" <davem@davemloft.net>
	Cc: <netdev@vger.kernel.org>
(cherry picked from commit 16f11500842ce022fe654e38bd447e15790911dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/8139too.c
diff --cc drivers/net/ethernet/realtek/8139too.c
index 6c9a64816945,69d752f0b621..000000000000
--- a/drivers/net/ethernet/realtek/8139too.c
+++ b/drivers/net/ethernet/realtek/8139too.c
@@@ -1650,6 -1659,10 +1650,13 @@@ static void rtl8139_tx_timeout_task (st
  	int i;
  	u8 tmp8;
  
++<<<<<<< HEAD
++=======
+ 	napi_disable(&tp->napi);
+ 	netif_stop_queue(dev);
+ 	synchronize_rcu();
+ 
++>>>>>>> 16f11500842c (ethernet/realtek: Replace synchronize_sched() with synchronize_rcu())
  	netdev_dbg(dev, "Transmit timeout, status %02x %04x %04x media %02x\n",
  		   RTL_R8(ChipCmd), RTL_R16(IntrStatus),
  		   RTL_R16(IntrMask), RTL_R8(MediaStatus));
* Unmerged path drivers/net/ethernet/realtek/8139too.c
diff --git a/drivers/net/ethernet/realtek/r8169.c b/drivers/net/ethernet/realtek/r8169.c
index eb5cb43f9ce0..aae2a414e4a6 100644
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@ -6093,7 +6093,7 @@ static void rtl_reset_work(struct rtl8169_private *tp)
 
 	napi_disable(&tp->napi);
 	netif_stop_queue(dev);
-	synchronize_sched();
+	synchronize_rcu();
 
 	rtl8169_hw_reset(tp);
 
@@ -6827,7 +6827,7 @@ static void rtl8169_down(struct net_device *dev)
 	rtl8169_rx_missed(dev);
 
 	/* Give a racing hard_start_xmit a few cycles to complete. */
-	synchronize_sched();
+	synchronize_rcu();
 
 	rtl8169_tx_clear(tp);
 
