mm: use totalram_pages instead of num_physpages at runtime

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiang Liu <liuj97@gmail.com>
commit 0ed5fd138539940a493dc69359cb2f49de70ad89
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0ed5fd13.failed

The global variable num_physpages is scheduled to be removed, so use
totalram_pages instead of num_physpages at runtime.

	Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
	Cc: Miklos Szeredi <miklos@szeredi.hu>
	Cc: "David S. Miller" <davem@davemloft.net>
	Cc: Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>
	Cc: James Morris <jmorris@namei.org>
	Cc: Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>
	Cc: Patrick McHardy <kaber@trash.net>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0ed5fd138539940a493dc69359cb2f49de70ad89)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/inet_fragment.c
diff --cc net/ipv4/inet_fragment.c
index 32afcd0ea283,cec539458307..000000000000
--- a/net/ipv4/inet_fragment.c
+++ b/net/ipv4/inet_fragment.c
@@@ -93,6 -93,9 +93,12 @@@ void inet_frags_init(struct inet_frags 
  	}
  	rwlock_init(&f->lock);
  
++<<<<<<< HEAD
++=======
+ 	f->rnd = (u32) ((totalram_pages ^ (totalram_pages >> 7)) ^
+ 				   (jiffies ^ (jiffies >> 6)));
+ 
++>>>>>>> 0ed5fd138539 (mm: use totalram_pages instead of num_physpages at runtime)
  	setup_timer(&f->secret_timer, inet_frag_secret_rebuild,
  			(unsigned long)f);
  	f->secret_timer.expires = jiffies + f->secret_interval;
diff --git a/fs/fuse/inode.c b/fs/fuse/inode.c
index 164196e15af5..c0b650abe0a3 100644
--- a/fs/fuse/inode.c
+++ b/fs/fuse/inode.c
@@ -789,7 +789,7 @@ static const struct super_operations fuse_super_operations = {
 static void sanitize_global_limit(unsigned *limit)
 {
 	if (*limit == 0)
-		*limit = ((num_physpages << PAGE_SHIFT) >> 13) /
+		*limit = ((totalram_pages << PAGE_SHIFT) >> 13) /
 			 sizeof(struct fuse_req);
 
 	if (*limit >= 1 << 16)
diff --git a/kernel/power/snapshot.c b/kernel/power/snapshot.c
index c8630400bde0..55042eb76dbf 100644
--- a/kernel/power/snapshot.c
+++ b/kernel/power/snapshot.c
@@ -1657,7 +1657,7 @@ unsigned long snapshot_get_image_size(void)
 static int init_header(struct swsusp_info *info)
 {
 	memset(info, 0, sizeof(struct swsusp_info));
-	info->num_physpages = num_physpages;
+	info->num_physpages = get_num_physpages();
 	info->image_pages = nr_copy_pages;
 	info->pages = snapshot_get_image_size();
 	info->size = info->pages;
@@ -1801,7 +1801,7 @@ static int check_header(struct swsusp_info *info)
 	char *reason;
 
 	reason = check_image_kernel(info);
-	if (!reason && info->num_physpages != num_physpages)
+	if (!reason && info->num_physpages != get_num_physpages())
 		reason = "memory size";
 	if (reason) {
 		printk(KERN_ERR "PM: Image mismatch: %s\n", reason);
* Unmerged path net/ipv4/inet_fragment.c
