net/mlx5e: Replace TC VLAN pop and push actions with VLAN modify

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Eli Britstein <elibr@mellanox.com>
commit 76b496b1bd79bcd669cd7411e80e09512dc6707f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/76b496b1.failed

Changing the VLAN header may be implemented by pop the existing header
and push a new one. Translate those operations as VLAN modify.
Applicable for use cases such as OVS where the controller translates a
vlan modify meta (OF) rule to DP pop+push actions rule.

	Signed-off-by: Eli Britstein <elibr@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 76b496b1bd79bcd669cd7411e80e09512dc6707f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index 5862f33b4ba7,c68edcc84af8..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -2665,40 -2660,86 +2665,81 @@@ static int parse_tc_fdb_actions(struct 
  				encap = true;
  			else
  				return -EOPNOTSUPP;
 +			continue;
 +		}
  
++<<<<<<< HEAD
 +		if (is_tcf_vlan(a)) {
 +			if (tcf_vlan_action(a) == TCA_VLAN_ACT_POP) {
 +				attr->action |= MLX5_FLOW_CONTEXT_ACTION_VLAN_POP;
 +			} else if (tcf_vlan_action(a) == TCA_VLAN_ACT_PUSH) {
 +				attr->action |= MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH;
 +				attr->vlan_vid = tcf_vlan_push_vid(a);
 +				if (mlx5_eswitch_vlan_actions_supported(priv->mdev)) {
 +					attr->vlan_prio = tcf_vlan_push_prio(a);
 +					attr->vlan_proto = tcf_vlan_push_proto(a);
 +					if (!attr->vlan_proto)
 +						attr->vlan_proto = htons(ETH_P_8021Q);
 +				} else if (tcf_vlan_push_proto(a) != htons(ETH_P_8021Q) ||
 +					   tcf_vlan_push_prio(a)) {
 +					return -EOPNOTSUPP;
 +				}
 +			} else { /* action is TCA_VLAN_ACT_MODIFY */
++=======
+ 			break;
+ 		case FLOW_ACTION_VLAN_PUSH:
+ 		case FLOW_ACTION_VLAN_POP:
+ 			if (act->id == FLOW_ACTION_VLAN_PUSH &&
+ 			    (action & MLX5_FLOW_CONTEXT_ACTION_VLAN_POP)) {
+ 				/* Replace vlan pop+push with vlan modify */
+ 				action &= ~MLX5_FLOW_CONTEXT_ACTION_VLAN_POP;
+ 				err = add_vlan_rewrite_action(priv,
+ 							      MLX5_FLOW_NAMESPACE_FDB,
+ 							      act, parse_attr, hdrs,
+ 							      &action, extack);
+ 			} else {
+ 				err = parse_tc_vlan_action(priv, act, attr, &action);
+ 			}
+ 			if (err)
+ 				return err;
+ 
+ 			attr->split_count = attr->out_count;
+ 			break;
+ 		case FLOW_ACTION_VLAN_MANGLE:
+ 			err = add_vlan_rewrite_action(priv,
+ 						      MLX5_FLOW_NAMESPACE_FDB,
+ 						      act, parse_attr, hdrs,
+ 						      &action, extack);
+ 			if (err)
+ 				return err;
+ 
+ 			attr->split_count = attr->out_count;
+ 			break;
+ 		case FLOW_ACTION_TUNNEL_DECAP:
+ 			action |= MLX5_FLOW_CONTEXT_ACTION_DECAP;
+ 			break;
+ 		case FLOW_ACTION_GOTO: {
+ 			u32 dest_chain = act->chain_index;
+ 			u32 max_chain = mlx5_eswitch_get_chain_range(esw);
+ 
+ 			if (dest_chain <= attr->chain) {
+ 				NL_SET_ERR_MSG(extack, "Goto earlier chain isn't supported");
++>>>>>>> 76b496b1bd79 (net/mlx5e: Replace TC VLAN pop and push actions with VLAN modify)
  				return -EOPNOTSUPP;
  			}
 -			if (dest_chain > max_chain) {
 -				NL_SET_ERR_MSG(extack, "Requested destination chain is out of supported range");
 -				return -EOPNOTSUPP;
 -			}
 -			action |= MLX5_FLOW_CONTEXT_ACTION_COUNT;
 -			attr->dest_chain = dest_chain;
 -			break;
 -			}
 -		default:
 -			return -EINVAL;
 +			continue;
  		}
 -	}
  
 -	if (hdrs[TCA_PEDIT_KEY_EX_CMD_SET].pedits ||
 -	    hdrs[TCA_PEDIT_KEY_EX_CMD_ADD].pedits) {
 -		err = alloc_tc_pedit_action(priv, MLX5_FLOW_NAMESPACE_KERNEL,
 -					    parse_attr, hdrs, extack);
 -		if (err)
 -			return err;
 -	}
 -
 -	attr->action = action;
 -	if (!actions_match_supported(priv, flow_action, parse_attr, flow, extack))
 -		return -EOPNOTSUPP;
 -
 -	if (attr->dest_chain) {
 -		if (attr->action & MLX5_FLOW_CONTEXT_ACTION_FWD_DEST) {
 -			NL_SET_ERR_MSG(extack, "Mirroring goto chain rules isn't supported");
 -			return -EOPNOTSUPP;
 +		if (is_tcf_tunnel_release(a)) {
 +			attr->action |= MLX5_FLOW_CONTEXT_ACTION_DECAP;
 +			continue;
  		}
 -		attr->action |= MLX5_FLOW_CONTEXT_ACTION_FWD_DEST;
 +
 +		return -EINVAL;
  	}
  
 -	if (attr->split_count > 0 && !mlx5_esw_has_fwd_fdb(priv->mdev)) {
 -		NL_SET_ERR_MSG_MOD(extack,
 -				   "current firmware doesn't support split rule for port mirroring");
 -		netdev_warn_once(priv->netdev, "current firmware doesn't support split rule for port mirroring\n");
 +	if (!actions_match_supported(priv, exts, parse_attr, flow))
  		return -EOPNOTSUPP;
 -	}
  
  	return 0;
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
