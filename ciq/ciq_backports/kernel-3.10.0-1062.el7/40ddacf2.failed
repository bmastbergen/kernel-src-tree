RDMA/umem: Don't hold mmap_sem for too long

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Leon Romanovsky <leonro@mellanox.com>
commit 40ddacf2dda952e0f33b40d850bf5f7403bdbe0f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/40ddacf2.failed

DMA mapping is time consuming operation and doesn't need to be performed
with mmap_sem semaphore is held.

The semaphore only needs to be held for accounting and get_user_pages
related activities.

	Signed-off-by: Huy Nguyen <huyn@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 40ddacf2dda952e0f33b40d850bf5f7403bdbe0f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/umem.c
diff --cc drivers/infiniband/core/umem.c
index 92842b803b18,abe9924baf7c..000000000000
--- a/drivers/infiniband/core/umem.c
+++ b/drivers/infiniband/core/umem.c
@@@ -172,14 -173,19 +172,24 @@@ struct ib_umem *ib_umem_get(struct ib_u
  	need_release = 1;
  	sg_list_start = umem->sg_head.sgl;
  
+ 	down_read(&current->mm->mmap_sem);
  	while (npages) {
  		ret = get_user_pages_longterm(cur_base,
++<<<<<<< HEAD
 +				min_t(unsigned long, npages,
 +				      PAGE_SIZE / sizeof (struct page *)),
 +				1, !umem->writable, page_list, vma_list);
 +
 +		if (ret < 0)
++=======
+ 				     min_t(unsigned long, npages,
+ 					   PAGE_SIZE / sizeof (struct page *)),
+ 				     gup_flags, page_list, vma_list);
+ 		if (ret < 0) {
+ 			up_read(&current->mm->mmap_sem);
++>>>>>>> 40ddacf2dda9 (RDMA/umem: Don't hold mmap_sem for too long)
  			goto out;
+ 		}
  
  		umem->npages += ret;
  		cur_base += ret * PAGE_SIZE;
* Unmerged path drivers/infiniband/core/umem.c
