i40e: remove ndo_xdp_flush call i40e_xdp_flush

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jesper Dangaard Brouer <brouer@redhat.com>
commit 763ea096f3cf312608317fb1027d509cfd1efc16
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/763ea096.failed

Remove the ndo_xdp_flush call implementation i40e_xdp_flush
as no callers of ndo_xdp_flush are left.

	Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 763ea096f3cf312608317fb1027d509cfd1efc16)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_main.c
#	drivers/net/ethernet/intel/i40e/i40e_txrx.h
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 32248f22b8ed,c944bd10b03d..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -11886,11 -11881,8 +11886,16 @@@ static const struct net_device_ops i40e
  	.ndo_features_check	= i40e_features_check,
  	.ndo_bridge_getlink	= i40e_ndo_bridge_getlink,
  	.ndo_bridge_setlink	= i40e_ndo_bridge_setlink,
++<<<<<<< HEAD
 +#if 0 /* XDP is stubbed in RHEL7 */
 +	.extended.ndo_xdp	= i40e_xdp,
 +	.extended.ndo_xdp_xmit	= i40e_xdp_xmit,
 +	.extended.ndo_xdp_flush	= i40e_xdp_flush,
 +#endif
++=======
+ 	.ndo_bpf		= i40e_xdp,
+ 	.ndo_xdp_xmit		= i40e_xdp_xmit,
++>>>>>>> 763ea096f3cf (i40e: remove ndo_xdp_flush call i40e_xdp_flush)
  };
  
  /**
diff --cc drivers/net/ethernet/intel/i40e/i40e_txrx.h
index 3c953e7ab853,bb04f6a731fe..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_txrx.h
+++ b/drivers/net/ethernet/intel/i40e/i40e_txrx.h
@@@ -489,8 -487,8 +489,13 @@@ u32 i40e_get_tx_pending(struct i40e_rin
  void i40e_detect_recover_hung(struct i40e_vsi *vsi);
  int __i40e_maybe_stop_tx(struct i40e_ring *tx_ring, int size);
  bool __i40e_chk_linearize(struct sk_buff *skb);
++<<<<<<< HEAD
 +int i40e_xdp_xmit(struct net_device *dev, struct xdp_frame *xdpf);
 +void i40e_xdp_flush(struct net_device *dev);
++=======
+ int i40e_xdp_xmit(struct net_device *dev, int n, struct xdp_frame **frames,
+ 		  u32 flags);
++>>>>>>> 763ea096f3cf (i40e: remove ndo_xdp_flush call i40e_xdp_flush)
  
  /**
   * i40e_get_head - Retrieve head from head writeback
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
diff --git a/drivers/net/ethernet/intel/i40e/i40e_txrx.c b/drivers/net/ethernet/intel/i40e/i40e_txrx.c
index 4edb18c5a04c..6128d968438c 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_txrx.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_txrx.c
@@ -3694,22 +3694,3 @@ int i40e_xdp_xmit(struct net_device *dev, struct xdp_frame *xdpf)
 
 	return 0;
 }
-
-/**
- * i40e_xdp_flush - Implements ndo_xdp_flush
- * @dev: netdev
- **/
-void i40e_xdp_flush(struct net_device *dev)
-{
-	struct i40e_netdev_priv *np = netdev_priv(dev);
-	unsigned int queue_index = smp_processor_id();
-	struct i40e_vsi *vsi = np->vsi;
-
-	if (test_bit(__I40E_VSI_DOWN, vsi->state))
-		return;
-
-	if (!i40e_enabled_xdp_vsi(vsi) || queue_index >= vsi->num_queue_pairs)
-		return;
-
-	i40e_xdp_ring_update_tail(vsi->xdp_rings[queue_index]);
-}
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_txrx.h
