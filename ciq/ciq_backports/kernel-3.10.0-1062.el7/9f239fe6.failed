net: phy: Have __phy_modify return 0 on success

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] phy: Have __phy_modify return 0 on success (Ivan Vecera) [1685646]
Rebuild_FUZZ: 94.38%
commit-author Andrew Lunn <andrew@lunn.ch>
commit 9f239fe6a6b9c47b860a577e7334e43464ab7f9e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/9f239fe6.failed

__phy_modify would return the old value of the register before it was
modified. Thus on success, it does not return 0, but a positive value.
Thus functions using phy_modify, which is a wrapper around
__phy_modify, can start returning > 0 on success, rather than 0. As a
result, breakage has been noticed in various places, where 0 was
assumed.

Code inspection does not find any current location where the return of
the old value is currently used. So have __phy_modify return 0 on
success. When there is a real need for the old value, either a new
accessor can be added, or an additional parameter passed.

Fixes: fea23fb591cc ("net: phy: convert read-modify-write to phy_modify()")
Fixes: 2b74e5be17d2 ("net: phy: add phy_modify() accessor")
	Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
	Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Tested-by: Niklas Cassel <niklas.cassel@axis.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9f239fe6a6b9c47b860a577e7334e43464ab7f9e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phy-core.c
* Unmerged path drivers/net/phy/phy-core.c
* Unmerged path drivers/net/phy/phy-core.c
