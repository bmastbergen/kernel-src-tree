ALSA: hda/ca0132 - Use NULL instead of 0

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit bb86124c80780d9d2a2d9bef7f0840e61007ebb7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/bb86124c.failed

Use NULL for initializing the snd_kcontrol_new.tlv field, instead of
0, as warned by sparse:
  sound/pci/hda/patch_ca0132.c:5519:22: warning: Using plain integer as NULL pointer

Also, the driver does the same initialization twice, once for
knew.tlv.c and another for knew.tlv.p while both point to the same
address (these are union).  Drop the latter superfluous one.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit bb86124c80780d9d2a2d9bef7f0840e61007ebb7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_ca0132.c
diff --cc sound/pci/hda/patch_ca0132.c
index 2b8dca7fa057,27d3388cd2a2..000000000000
--- a/sound/pci/hda/patch_ca0132.c
+++ b/sound/pci/hda/patch_ca0132.c
@@@ -3950,6 -5505,42 +3950,45 @@@ static int ca0132_volume_tlv(struct snd
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ /* Add volume slider control for effect level */
+ static int ca0132_alt_add_effect_slider(struct hda_codec *codec, hda_nid_t nid,
+ 					const char *pfx, int dir)
+ {
+ 	char namestr[SNDRV_CTL_ELEM_ID_NAME_MAXLEN];
+ 	int type = dir ? HDA_INPUT : HDA_OUTPUT;
+ 	struct snd_kcontrol_new knew =
+ 		HDA_CODEC_VOLUME_MONO(namestr, nid, 1, 0, type);
+ 
+ 	sprintf(namestr, "FX: %s %s Volume", pfx, dirstr[dir]);
+ 
+ 	knew.tlv.c = NULL;
+ 
+ 	switch (nid) {
+ 	case XBASS_XOVER:
+ 		knew.info = ca0132_alt_xbass_xover_slider_info;
+ 		knew.get = ca0132_alt_xbass_xover_slider_ctl_get;
+ 		knew.put = ca0132_alt_xbass_xover_slider_put;
+ 		break;
+ 	default:
+ 		knew.info = ca0132_alt_effect_slider_info;
+ 		knew.get = ca0132_alt_slider_ctl_get;
+ 		knew.put = ca0132_alt_effect_slider_put;
+ 		knew.private_value =
+ 			HDA_COMPOSE_AMP_VAL(nid, 1, 0, type);
+ 		break;
+ 	}
+ 
+ 	return snd_hda_ctl_add(codec, nid, snd_ctl_new1(&knew, codec));
+ }
+ 
+ /*
+  * Added FX: prefix for the alternative codecs, because otherwise the surround
+  * effect would conflict with the Surround sound volume control. Also seems more
+  * clear as to what the switches do. Left alone for others.
+  */
++>>>>>>> bb86124c8078 (ALSA: hda/ca0132 - Use NULL instead of 0)
  static int add_fx_switch(struct hda_codec *codec, hda_nid_t nid,
  			 const char *pfx, int dir)
  {
* Unmerged path sound/pci/hda/patch_ca0132.c
