ipv4: Fix use-after-free when flushing FIB tables

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit b4681c2829e24943aadd1a7bb3a30d41d0a20050
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/b4681c28.failed

Since commit 0ddcf43d5d4a ("ipv4: FIB Local/MAIN table collapse") the
local table uses the same trie allocated for the main table when custom
rules are not in use.

When a net namespace is dismantled, the main table is flushed and freed
(via an RCU callback) before the local table. In case the callback is
invoked before the local table is iterated, a use-after-free can occur.

Fix this by iterating over the FIB tables in reverse order, so that the
main table is always freed after the local table.

v3: Reworded comment according to Alex's suggestion.
v2: Add a comment to make the fix more explicit per Dave's and Alex's
feedback.

Fixes: 0ddcf43d5d4a ("ipv4: FIB Local/MAIN table collapse")
	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Reported-by: Fengguang Wu <fengguang.wu@intel.com>
	Acked-by: Alexander Duyck <alexander.h.duyck@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b4681c2829e24943aadd1a7bb3a30d41d0a20050)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_frontend.c
diff --cc net/ipv4/fib_frontend.c
index 9ca53ed464e7,08259d078b1c..000000000000
--- a/net/ipv4/fib_frontend.c
+++ b/net/ipv4/fib_frontend.c
@@@ -1198,16 -1298,19 +1198,25 @@@ err_table_hash_alloc
  
  static void ip_fib_net_exit(struct net *net)
  {
- 	unsigned int i;
+ 	int i;
  
  	rtnl_lock();
 +
  #ifdef CONFIG_IP_MULTIPLE_TABLES
  	RCU_INIT_POINTER(net->ipv4.fib_main, NULL);
  	RCU_INIT_POINTER(net->ipv4.fib_default, NULL);
  #endif
++<<<<<<< HEAD
 +
 +	for (i = 0; i < FIB_TABLE_HASHSZ; i++) {
++=======
+ 	/* Destroy the tables in reverse order to guarantee that the
+ 	 * local table, ID 255, is destroyed before the main table, ID
+ 	 * 254. This is necessary as the local table may contain
+ 	 * references to data contained in the main table.
+ 	 */
+ 	for (i = FIB_TABLE_HASHSZ - 1; i >= 0; i--) {
++>>>>>>> b4681c2829e2 (ipv4: Fix use-after-free when flushing FIB tables)
  		struct hlist_head *head = &net->ipv4.fib_table_hash[i];
  		struct hlist_node *tmp;
  		struct fib_table *tb;
* Unmerged path net/ipv4/fib_frontend.c
