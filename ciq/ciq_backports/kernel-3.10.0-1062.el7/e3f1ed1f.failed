RDMA/mlx5: Remove unused port number parameter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Leon Romanovsky <leonro@mellanox.com>
commit e3f1ed1f5ade66620ea727bdbd5a5e0091108a92
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e3f1ed1f.failed

Clean up a little bit code to drop unused port_num parameter.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit e3f1ed1f5ade66620ea727bdbd5a5e0091108a92)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index 04b567fb715b,f86b5ad2dd43..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -5265,12 -5974,9 +5263,17 @@@ static void __mlx5_ib_remove(struct mlx
  	ib_dealloc_device((struct ib_device *)dev);
  }
  
++<<<<<<< HEAD
 +static void *mlx5_ib_add_slave_port(struct mlx5_core_dev *mdev, u8 port_num);
 +
 +static void *__mlx5_ib_add(struct mlx5_core_dev *mdev,
 +			   const struct mlx5_ib_profile *profile)
++=======
+ void *__mlx5_ib_add(struct mlx5_ib_dev *dev,
+ 		    const struct mlx5_ib_profile *profile)
++>>>>>>> e3f1ed1f5ade (RDMA/mlx5: Remove unused port number parameter)
  {
 +	struct mlx5_ib_dev *dev;
  	int err;
  	int i;
  
@@@ -5351,7 -6055,55 +5354,59 @@@ static const struct mlx5_ib_profile pf_
  		     NULL),
  };
  
++<<<<<<< HEAD
 +static void *mlx5_ib_add_slave_port(struct mlx5_core_dev *mdev, u8 port_num)
++=======
+ static const struct mlx5_ib_profile nic_rep_profile = {
+ 	STAGE_CREATE(MLX5_IB_STAGE_INIT,
+ 		     mlx5_ib_stage_init_init,
+ 		     mlx5_ib_stage_init_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_FLOW_DB,
+ 		     mlx5_ib_stage_flow_db_init,
+ 		     mlx5_ib_stage_flow_db_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_CAPS,
+ 		     mlx5_ib_stage_caps_init,
+ 		     NULL),
+ 	STAGE_CREATE(MLX5_IB_STAGE_NON_DEFAULT_CB,
+ 		     mlx5_ib_stage_rep_non_default_cb,
+ 		     NULL),
+ 	STAGE_CREATE(MLX5_IB_STAGE_ROCE,
+ 		     mlx5_ib_stage_rep_roce_init,
+ 		     mlx5_ib_stage_rep_roce_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_DEVICE_RESOURCES,
+ 		     mlx5_ib_stage_dev_res_init,
+ 		     mlx5_ib_stage_dev_res_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_COUNTERS,
+ 		     mlx5_ib_stage_counters_init,
+ 		     mlx5_ib_stage_counters_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_UAR,
+ 		     mlx5_ib_stage_uar_init,
+ 		     mlx5_ib_stage_uar_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_BFREG,
+ 		     mlx5_ib_stage_bfrag_init,
+ 		     mlx5_ib_stage_bfrag_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_PRE_IB_REG_UMR,
+ 		     NULL,
+ 		     mlx5_ib_stage_pre_ib_reg_umr_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_SPECS,
+ 		     mlx5_ib_stage_populate_specs,
+ 		     mlx5_ib_stage_depopulate_specs),
+ 	STAGE_CREATE(MLX5_IB_STAGE_IB_REG,
+ 		     mlx5_ib_stage_ib_reg_init,
+ 		     mlx5_ib_stage_ib_reg_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_POST_IB_REG_UMR,
+ 		     mlx5_ib_stage_post_ib_reg_umr_init,
+ 		     NULL),
+ 	STAGE_CREATE(MLX5_IB_STAGE_CLASS_ATTR,
+ 		     mlx5_ib_stage_class_attr_init,
+ 		     NULL),
+ 	STAGE_CREATE(MLX5_IB_STAGE_REP_REG,
+ 		     mlx5_ib_stage_rep_reg_init,
+ 		     mlx5_ib_stage_rep_reg_cleanup),
+ };
+ 
+ static void *mlx5_ib_add_slave_port(struct mlx5_core_dev *mdev)
++>>>>>>> e3f1ed1f5ade (RDMA/mlx5: Remove unused port number parameter)
  {
  	struct mlx5_ib_multiport_info *mpi;
  	struct mlx5_ib_dev *dev;
@@@ -5401,13 -6152,27 +5454,10 @@@ static void *mlx5_ib_add(struct mlx5_co
  	port_type_cap = MLX5_CAP_GEN(mdev, port_type);
  	ll = mlx5_port_type_cap_to_rdma_ll(port_type_cap);
  
- 	if (mlx5_core_is_mp_slave(mdev) && ll == IB_LINK_LAYER_ETHERNET) {
- 		u8 port_num = mlx5_core_native_port_num(mdev) - 1;
- 
- 		return mlx5_ib_add_slave_port(mdev, port_num);
- 	}
+ 	if (mlx5_core_is_mp_slave(mdev) && ll == IB_LINK_LAYER_ETHERNET)
+ 		return mlx5_ib_add_slave_port(mdev);
  
 -	dev = (struct mlx5_ib_dev *)ib_alloc_device(sizeof(*dev));
 -	if (!dev)
 -		return NULL;
 -
 -	dev->mdev = mdev;
 -	dev->num_ports = max(MLX5_CAP_GEN(mdev, num_ports),
 -			     MLX5_CAP_GEN(mdev, num_vhca_ports));
 -
 -	if (MLX5_VPORT_MANAGER(mdev) &&
 -	    mlx5_ib_eswitch_mode(mdev->priv.eswitch) == SRIOV_OFFLOADS) {
 -		dev->rep = mlx5_ib_vport_rep(mdev->priv.eswitch, 0);
 -
 -		return __mlx5_ib_add(dev, &nic_rep_profile);
 -	}
 -
 -	return __mlx5_ib_add(dev, &pf_profile);
 +	return __mlx5_ib_add(mdev, &pf_profile);
  }
  
  static void mlx5_ib_remove(struct mlx5_core_dev *mdev, void *context)
* Unmerged path drivers/infiniband/hw/mlx5/main.c
