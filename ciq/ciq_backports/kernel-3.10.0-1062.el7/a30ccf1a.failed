SUNRPC: Fix parsing failure in trace points with XIDs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Chuck Lever <chuck.lever@oracle.com>
commit a30ccf1a9eb8c01f37675758f6359a968193d96e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a30ccf1a.failed

mount.nf-11159   8....   905.248380: xprt_transmit:        [FAILED TO PARSE] xid=351291440 status=0 addr=192.168.2.5 port=20049
mount.nf-11159   8....   905.248381: rpc_task_sleep:       task:6210@1 flags=0e80 state=0005 status=0 timeout=60000 queue=xprt_pending
kworker/-1591    1....   905.248419: xprt_lookup_rqst:     [FAILED TO PARSE] xid=351291440 status=0 addr=192.168.2.5 port=20049
kworker/-1591    1....   905.248423: xprt_complete_rqst:   [FAILED TO PARSE] xid=351291440 status=24 addr=192.168.2.5 port=20049

Byte swapping is not available during trace-cmd report.

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit a30ccf1a9eb8c01f37675758f6359a968193d96e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/trace/events/sunrpc.h
diff --cc include/trace/events/sunrpc.h
index 46a50fef6e62,82e5057c7707..000000000000
--- a/include/trace/events/sunrpc.h
+++ b/include/trace/events/sunrpc.h
@@@ -429,23 -455,21 +429,38 @@@ TRACE_EVENT(svc_recv
  	TP_ARGS(rqst, status),
  
  	TP_STRUCT__entry(
++<<<<<<< HEAD
 +		__field(__be32, xid)
++=======
+ 		__field(struct sockaddr *, addr)
+ 		__field(u32, xid)
++>>>>>>> a30ccf1a9eb8 (SUNRPC: Fix parsing failure in trace points with XIDs)
  		__field(int, status)
  		__field(unsigned long, flags)
 +		__dynamic_array(unsigned char, addr, rqst->rq_addrlen)
  	),
  
  	TP_fast_assign(
++<<<<<<< HEAD
 +		__entry->xid = status > 0 ? rqst->rq_xid : 0;
++=======
+ 		__entry->addr = (struct sockaddr *)&rqst->rq_addr;
+ 		__entry->xid = status > 0 ? be32_to_cpu(rqst->rq_xid) : 0;
++>>>>>>> a30ccf1a9eb8 (SUNRPC: Fix parsing failure in trace points with XIDs)
  		__entry->status = status;
  		__entry->flags = rqst->rq_flags;
 +		memcpy(__get_dynamic_array(addr),
 +			&rqst->rq_addr, rqst->rq_addrlen);
  	),
  
++<<<<<<< HEAD
 +	TP_printk("addr=%pIScp xid=0x%x status=%d flags=%s",
 +			(struct sockaddr *)__get_dynamic_array(addr),
 +			be32_to_cpu(__entry->xid), __entry->status,
++=======
+ 	TP_printk("addr=%pIScp xid=0x%08x status=%d flags=%s", __entry->addr,
+ 			__entry->xid, __entry->status,
++>>>>>>> a30ccf1a9eb8 (SUNRPC: Fix parsing failure in trace points with XIDs)
  			show_rqstp_flags(__entry->flags))
  );
  
@@@ -489,23 -513,22 +504,39 @@@ DECLARE_EVENT_CLASS(svc_rqst_status
  	TP_ARGS(rqst, status),
  
  	TP_STRUCT__entry(
++<<<<<<< HEAD
 +		__field(__be32, xid)
++=======
+ 		__field(struct sockaddr *, addr)
+ 		__field(u32, xid)
+ 		__field(int, dropme)
++>>>>>>> a30ccf1a9eb8 (SUNRPC: Fix parsing failure in trace points with XIDs)
  		__field(int, status)
  		__field(unsigned long, flags)
 +		__dynamic_array(unsigned char, addr, rqst->rq_addrlen)
  	),
  
  	TP_fast_assign(
++<<<<<<< HEAD
 +		__entry->xid = rqst->rq_xid;
++=======
+ 		__entry->addr = (struct sockaddr *)&rqst->rq_addr;
+ 		__entry->xid = be32_to_cpu(rqst->rq_xid);
++>>>>>>> a30ccf1a9eb8 (SUNRPC: Fix parsing failure in trace points with XIDs)
  		__entry->status = status;
  		__entry->flags = rqst->rq_flags;
 +		memcpy(__get_dynamic_array(addr),
 +			&rqst->rq_addr, rqst->rq_addrlen);
  	),
  
++<<<<<<< HEAD
 +	TP_printk("addr=%pIScp rq_xid=0x%x status=%d flags=%s",
 +		(struct sockaddr *)__get_dynamic_array(addr),
 +		be32_to_cpu(__entry->xid),
++=======
+ 	TP_printk("addr=%pIScp rq_xid=0x%08x status=%d flags=%s",
+ 		__entry->addr, __entry->xid,
++>>>>>>> a30ccf1a9eb8 (SUNRPC: Fix parsing failure in trace points with XIDs)
  		__entry->status, show_rqstp_flags(__entry->flags))
  );
  
* Unmerged path include/trace/events/sunrpc.h
