iwlwifi: remove support for 9000 A-step devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Luca Coelho <luciano.coelho@intel.com>
commit b7226f104cef442635de488cdfa95b715ae4c6d3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/b7226f10.failed

We don't support 9000 A-step devices anymore, so we can remove support
for loading both the a0/a0 and a0/b0 FWs.

	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit b7226f104cef442635de488cdfa95b715ae4c6d3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/cfg/9000.c
diff --cc drivers/net/wireless/intel/iwlwifi/cfg/9000.c
index 2c80c722feca,09618f176f4f..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
+++ b/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
@@@ -73,27 -73,17 +73,18 @@@
  #define IWL9000_SMEM_OFFSET		0x400000
  #define IWL9000_SMEM_LEN		0x68000
  
- #define  IWL9000A_FW_PRE "iwlwifi-9000-pu-a0-jf-a0-"
- #define  IWL9000B_FW_PRE "iwlwifi-9000-pu-b0-jf-b0-"
- #define  IWL9000RFB_FW_PRE "iwlwifi-9000-pu-a0-jf-b0-"
- #define  IWL9260A_FW_PRE "iwlwifi-9260-th-a0-jf-a0-"
- #define  IWL9260B_FW_PRE "iwlwifi-9260-th-b0-jf-b0-"
- #define IWL9000A_MODULE_FIRMWARE(api) \
- 	IWL9000A_FW_PRE __stringify(api) ".ucode"
- #define IWL9000B_MODULE_FIRMWARE(api) \
- 	IWL9000B_FW_PRE __stringify(api) ".ucode"
- #define IWL9000RFB_MODULE_FIRMWARE(api) \
- 	IWL9000RFB_FW_PRE __stringify(api) ".ucode"
- #define IWL9260A_MODULE_FIRMWARE(api) \
- 	IWL9260A_FW_PRE __stringify(api) ".ucode"
- #define IWL9260B_MODULE_FIRMWARE(api) \
- 	IWL9260B_FW_PRE __stringify(api) ".ucode"
+ #define  IWL9000_FW_PRE "iwlwifi-9000-pu-b0-jf-b0-"
+ #define  IWL9260_FW_PRE "iwlwifi-9260-th-b0-jf-b0-"
+ #define IWL9000_MODULE_FIRMWARE(api) \
+ 	IWL9000_FW_PRE __stringify(api) ".ucode"
+ #define IWL9260_MODULE_FIRMWARE(api) \
+ 	IWL9260_FW_PRE __stringify(api) ".ucode"
  
 +#define NVM_HW_SECTION_NUM_FAMILY_9000		10
 +
  static const struct iwl_base_params iwl9000_base_params = {
 -	.eeprom_size = OTP_LOW_IMAGE_SIZE_32K,
 +	.eeprom_size = OTP_LOW_IMAGE_SIZE_FAMILY_9000,
  	.num_of_queues = 31,
 -	.max_tfd_queue_size = 256,
  	.shadow_ram_support = true,
  	.led_compensation = 57,
  	.wd_timeout = IWL_LONG_WD_TIMEOUT,
@@@ -157,164 -153,92 +148,164 @@@ static const struct iwl_tt_params iwl90
  
  const struct iwl_cfg iwl9160_2ac_cfg = {
  	.name = "Intel(R) Dual Band Wireless AC 9160",
- 	.fw_name_pre = IWL9260A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9260B_FW_PRE,
+ 	.fw_name_pre = IWL9260_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  };
  
  const struct iwl_cfg iwl9260_2ac_cfg = {
  	.name = "Intel(R) Dual Band Wireless AC 9260",
- 	.fw_name_pre = IWL9260A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9260B_FW_PRE,
+ 	.fw_name_pre = IWL9260_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  };
  
  const struct iwl_cfg iwl9260_killer_2ac_cfg = {
  	.name = "Killer (R) Wireless-AC 1550 Wireless Network Adapter (9260NGW)",
- 	.fw_name_pre = IWL9260A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9260B_FW_PRE,
+ 	.fw_name_pre = IWL9260_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  };
  
  const struct iwl_cfg iwl9270_2ac_cfg = {
  	.name = "Intel(R) Dual Band Wireless AC 9270",
- 	.fw_name_pre = IWL9260A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9260B_FW_PRE,
+ 	.fw_name_pre = IWL9260_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  };
  
  const struct iwl_cfg iwl9460_2ac_cfg = {
  	.name = "Intel(R) Dual Band Wireless AC 9460",
- 	.fw_name_pre = IWL9260A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9260B_FW_PRE,
+ 	.fw_name_pre = IWL9260_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  };
  
  const struct iwl_cfg iwl9460_2ac_cfg_soc = {
  	.name = "Intel(R) Dual Band Wireless AC 9460",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  };
  
  const struct iwl_cfg iwl9461_2ac_cfg_soc = {
++<<<<<<< HEAD
 +		.name = "Intel(R) Dual Band Wireless AC 9461",
 +		.fw_name_pre = IWL9000A_FW_PRE,
 +		.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
 +		.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
 +		IWL_DEVICE_9000,
 +		.ht_params = &iwl9000_ht_params,
 +		.nvm_ver = IWL9000_NVM_VERSION,
 +		.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +		.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
 +		.integrated = true,
 +		.soc_latency = 5000,
 +};
 +
 +const struct iwl_cfg iwl9462_2ac_cfg_soc = {
 +		.name = "Intel(R) Dual Band Wireless AC 9462",
 +		.fw_name_pre = IWL9000A_FW_PRE,
 +		.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
 +		.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
 +		IWL_DEVICE_9000,
 +		.ht_params = &iwl9000_ht_params,
 +		.nvm_ver = IWL9000_NVM_VERSION,
 +		.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +		.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
 +		.integrated = true,
 +		.soc_latency = 5000,
++=======
+ 	.name = "Intel(R) Dual Band Wireless AC 9461",
+ 	.fw_name_pre = IWL9000_FW_PRE,
+ 	IWL_DEVICE_9000,
+ 	.integrated = true,
+ 	.soc_latency = 5000,
+ };
+ 
+ const struct iwl_cfg iwl9462_2ac_cfg_soc = {
+ 	.name = "Intel(R) Dual Band Wireless AC 9462",
+ 	.fw_name_pre = IWL9000_FW_PRE,
+ 	IWL_DEVICE_9000,
+ 	.integrated = true,
+ 	.soc_latency = 5000,
++>>>>>>> b7226f104cef (iwlwifi: remove support for 9000 A-step devices)
  };
  
  const struct iwl_cfg iwl9560_2ac_cfg = {
  	.name = "Intel(R) Dual Band Wireless AC 9560",
- 	.fw_name_pre = IWL9260A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9260B_FW_PRE,
+ 	.fw_name_pre = IWL9260_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  };
  
  const struct iwl_cfg iwl9560_2ac_cfg_soc = {
  	.name = "Intel(R) Dual Band Wireless AC 9560",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  };
  
  const struct iwl_cfg iwl9560_killer_2ac_cfg_soc = {
  	.name = "Killer (R) Wireless-AC 1550i Wireless Network Adapter (9560NGW)",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  };
  
  const struct iwl_cfg iwl9560_killer_s_2ac_cfg_soc = {
  	.name = "Killer (R) Wireless-AC 1550s Wireless Network Adapter (9560NGW)",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  };
  
  const struct iwl_cfg iwl9460_2ac_cfg_shared_clk = {
  	.name = "Intel(R) Dual Band Wireless AC 9460",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
@@@ -322,14 -246,8 +313,12 @@@
  
  const struct iwl_cfg iwl9461_2ac_cfg_shared_clk = {
  	.name = "Intel(R) Dual Band Wireless AC 9461",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
@@@ -337,14 -255,8 +326,12 @@@
  
  const struct iwl_cfg iwl9462_2ac_cfg_shared_clk = {
  	.name = "Intel(R) Dual Band Wireless AC 9462",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
@@@ -352,14 -264,8 +339,12 @@@
  
  const struct iwl_cfg iwl9560_2ac_cfg_shared_clk = {
  	.name = "Intel(R) Dual Band Wireless AC 9560",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
@@@ -367,14 -273,8 +352,12 @@@
  
  const struct iwl_cfg iwl9560_killer_2ac_cfg_shared_clk = {
  	.name = "Killer (R) Wireless-AC 1550i Wireless Network Adapter (9560NGW)",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
@@@ -382,14 -282,8 +365,12 @@@
  
  const struct iwl_cfg iwl9560_killer_s_2ac_cfg_shared_clk = {
  	.name = "Killer (R) Wireless-AC 1550s Wireless Network Adapter (9560NGW)",
- 	.fw_name_pre = IWL9000A_FW_PRE,
- 	.fw_name_pre_b_or_c_step = IWL9000B_FW_PRE,
- 	.fw_name_pre_rf_next_step = IWL9000RFB_FW_PRE,
+ 	.fw_name_pre = IWL9000_FW_PRE,
  	IWL_DEVICE_9000,
 +	.ht_params = &iwl9000_ht_params,
 +	.nvm_ver = IWL9000_NVM_VERSION,
 +	.nvm_calib_ver = IWL9000_TX_POWER_VERSION,
 +	.max_ht_ampdu_exponent = IEEE80211_HT_MAX_AMPDU_64K,
  	.integrated = true,
  	.soc_latency = 5000,
  	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
* Unmerged path drivers/net/wireless/intel/iwlwifi/cfg/9000.c
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-config.h b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
index 70f3c327eb4a..39db3477eef7 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@ -288,10 +288,6 @@ struct iwl_pwr_tx_backoff {
  * @fw_name_pre: Firmware filename prefix. The api version and extension
  *	(.ucode) will be added to filename before loading from disk. The
  *	filename is constructed as fw_name_pre<api>.ucode.
- * @fw_name_pre_b_or_c_step: same as @fw_name_pre, only for b or c steps
- *	(if supported)
- * @fw_name_pre_rf_next_step: same as @fw_name_pre_b_or_c_step, only for rf
- *	next step. Supported only in integrated solutions.
  * @ucode_api_max: Highest version of uCode API supported by driver.
  * @ucode_api_min: Lowest version of uCode API supported by driver.
  * @max_inst_size: The maximal length of the fw inst section
@@ -342,8 +338,6 @@ struct iwl_cfg {
 	/* params specific to an individual device within a device family */
 	const char *name;
 	const char *fw_name_pre;
-	const char *fw_name_pre_b_or_c_step;
-	const char *fw_name_pre_rf_next_step;
 	/* params not likely to change within a device family */
 	const struct iwl_base_params *base_params;
 	/* params likely to change within a device family */
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
index 99676d6c4713..82ef56fced8f 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
@@ -213,18 +213,15 @@ static int iwl_request_firmware(struct iwl_drv *drv, bool first)
 {
 	const struct iwl_cfg *cfg = drv->trans->cfg;
 	char tag[8];
-	const char *fw_pre_name;
 
 	if (drv->trans->cfg->device_family == IWL_DEVICE_FAMILY_9000 &&
-	    (CSR_HW_REV_STEP(drv->trans->hw_rev) == SILICON_B_STEP ||
-	     CSR_HW_REV_STEP(drv->trans->hw_rev) == SILICON_C_STEP))
-		fw_pre_name = cfg->fw_name_pre_b_or_c_step;
-	else if (drv->trans->cfg->integrated &&
-		 CSR_HW_RFID_STEP(drv->trans->hw_rf_id) == SILICON_B_STEP &&
-		 cfg->fw_name_pre_rf_next_step)
-		fw_pre_name = cfg->fw_name_pre_rf_next_step;
-	else
-		fw_pre_name = cfg->fw_name_pre;
+	    (CSR_HW_REV_STEP(drv->trans->hw_rev) != SILICON_B_STEP &&
+	     CSR_HW_REV_STEP(drv->trans->hw_rev) != SILICON_C_STEP)) {
+		IWL_ERR(drv,
+			"Only HW steps B and C are currently supported (0x%0x)\n",
+			drv->trans->hw_rev);
+		return -EINVAL;
+	}
 
 	if (first) {
 		drv->fw_index = cfg->ucode_api_max;
@@ -238,15 +235,13 @@ static int iwl_request_firmware(struct iwl_drv *drv, bool first)
 		IWL_ERR(drv, "no suitable firmware found!\n");
 
 		if (cfg->ucode_api_min == cfg->ucode_api_max) {
-			IWL_ERR(drv, "%s%d is required\n", fw_pre_name,
+			IWL_ERR(drv, "%s%d is required\n", cfg->fw_name_pre,
 				cfg->ucode_api_max);
 		} else {
 			IWL_ERR(drv, "minimum version required: %s%d\n",
-				fw_pre_name,
-				cfg->ucode_api_min);
+				cfg->fw_name_pre, cfg->ucode_api_min);
 			IWL_ERR(drv, "maximum version supported: %s%d\n",
-				fw_pre_name,
-				cfg->ucode_api_max);
+				cfg->fw_name_pre, cfg->ucode_api_max);
 		}
 
 		IWL_ERR(drv,
@@ -255,7 +250,7 @@ static int iwl_request_firmware(struct iwl_drv *drv, bool first)
 	}
 
 	snprintf(drv->firmware_name, sizeof(drv->firmware_name), "%s%s.ucode",
-		 fw_pre_name, tag);
+		 cfg->fw_name_pre, tag);
 
 	IWL_DEBUG_INFO(drv, "attempting to load firmware '%s'\n",
 		       drv->firmware_name);
