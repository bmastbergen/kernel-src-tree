IB/core: Introduce counters object and its create/destroy

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Raed Salem <raeds@mellanox.com>
commit fa9b1802d140f4d4a781b3444aadf47fa511cabb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/fa9b1802.failed

A verbs application may need to get statistics and info on various aspects
of a verb object (e.g. Flow, QP, ...), in general case the application
will state which object's counters its interested in (we refer to this
action as attach), bind this new counters object to the appropriate verb
object and on later stage read their values using the counters object.

This series introduces a general API for counters object that may
accumulate any ib object counters type, bound and read on demand.

Counters instance is allocated on an IB context and belongs to that
context.  Upon successful creation the counters can be bound to a verbs
object so that hardware counter instances can be created and read.

Downstream patches in this series will introduce the attach, bind and the
read functionality.

Counters instance can be de-allocated, upon successful destruction the
related hardware resources are released.

Prior to destroy call the user must first make sure that the counters is
not being used by any IB object, e.g. not attached to any of its counted
type otherwise an EBUSY error is invoked.

	Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
	Signed-off-by: Raed Salem <raeds@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit fa9b1802d140f4d4a781b3444aadf47fa511cabb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/rdma/ib_verbs.h
diff --cc include/rdma/ib_verbs.h
index 991a6332b9b0,4f5d9fd4f920..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2159,6 -2180,15 +2159,18 @@@ struct ib_port_pkey_list 
  	struct list_head              pkey_list;
  };
  
++<<<<<<< HEAD
++=======
+ struct ib_counters {
+ 	struct ib_device	*device;
+ 	struct ib_uobject	*uobject;
+ 	/* num of objects attached */
+ 	atomic_t	usecnt;
+ };
+ 
+ struct uverbs_attr_bundle;
+ 
++>>>>>>> fa9b1802d140 (IB/core: Introduce counters object and its create/destroy)
  struct ib_device {
  	/* Do not access @dma_device directly from ULP nor from HW drivers. */
  	struct device                *dma_device;
@@@ -2416,6 -2443,25 +2428,28 @@@
  							   struct ib_rwq_ind_table_init_attr *init_attr,
  							   struct ib_udata *udata);
  	int                        (*destroy_rwq_ind_table)(struct ib_rwq_ind_table *wq_ind_table);
++<<<<<<< HEAD
++=======
+ 	struct ib_flow_action *	   (*create_flow_action_esp)(struct ib_device *device,
+ 							     const struct ib_flow_action_attrs_esp *attr,
+ 							     struct uverbs_attr_bundle *attrs);
+ 	int			   (*destroy_flow_action)(struct ib_flow_action *action);
+ 	int			   (*modify_flow_action_esp)(struct ib_flow_action *action,
+ 							     const struct ib_flow_action_attrs_esp *attr,
+ 							     struct uverbs_attr_bundle *attrs);
+ 	struct ib_dm *             (*alloc_dm)(struct ib_device *device,
+ 					       struct ib_ucontext *context,
+ 					       struct ib_dm_alloc_attr *attr,
+ 					       struct uverbs_attr_bundle *attrs);
+ 	int                        (*dealloc_dm)(struct ib_dm *dm);
+ 	struct ib_mr *             (*reg_dm_mr)(struct ib_pd *pd, struct ib_dm *dm,
+ 						struct ib_dm_mr_attr *attr,
+ 						struct uverbs_attr_bundle *attrs);
+ 	struct ib_counters *	(*create_counters)(struct ib_device *device,
+ 						   struct uverbs_attr_bundle *attrs);
+ 	int	(*destroy_counters)(struct ib_counters	*counters);
+ 
++>>>>>>> fa9b1802d140 (IB/core: Introduce counters object and its create/destroy)
  	/**
  	 * rdma netdev operation
  	 *
* Unmerged path include/rdma/ib_verbs.h
