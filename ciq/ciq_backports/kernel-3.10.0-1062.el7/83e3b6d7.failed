perf tests: Fix record+probe_libc_inet_pton.sh to ensure cleanups

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Sandipan Das <sandipan@linux.ibm.com>
commit 83e3b6d73e66a10088f362b08b99c36fec3a14e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/83e3b6d7.failed

If there is a mismatch in the perf script output, this test fails and
exits before the event and temporary files created during its execution
are cleaned up.

This can be observed on a powerpc64 system running Fedora 27 as shown
below.

  # perf test -v "probe libc's inet_pton & backtrace it with ping"

  62: probe libc's inet_pton & backtrace it with ping       :
  --- start ---
  test child forked, pid 18655
  ping 18674 [013] 24511.496995: probe_libc:inet_pton: (7fffa6b423b0)
  7fffa6b423b0 __GI___inet_pton+0x0 (/usr/lib64/power8/libc-2.26.so)
  7fffa6af90dc gaih_inet.constprop.7+0xf4c (/usr/lib64/power8/libc-2.26.so)
  FAIL: expected backtrace entry "getaddrinfo\+0x[[:xdigit:]]+[[:space:]]\(/usr/lib64/power8/libc-2.26.so\)$" got "7fffa6af90dc gaih_inet.constprop.7+0xf4c (/usr/lib64/power8/libc-2.26.so)"
  test child finished with -1
  ---- end ----
  probe libc's inet_pton & backtrace it with ping: FAILED!

  # ls /tmp/expected.* /tmp/perf.data.* /tmp/perf.script.*

  /tmp/expected.u31  /tmp/perf.data.Pki  /tmp/perf.script.Bhs

  # perf probe --list

    probe_libc:inet_pton (on __inet_pton@resolv/inet_pton.c in /usr/lib64/power8/libc-2.26.so)

Cleanup of the event and the temporary files are now ensured by allowing
the cleanup code to be executed even if the lines from the backtrace do
not match their expected patterns instead of simply exiting from the
point of failure.

	Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Kim Phillips <kim.phillips@arm.com>
	Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
	Cc: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
Link: http://lkml.kernel.org/r/ce9fb091dd3028fba8749a1a267cfbcb264bbfb1.1530724939.git.sandipan@linux.ibm.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 83e3b6d73e66a10088f362b08b99c36fec3a14e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/tests/shell/record+probe_libc_inet_pton.sh
diff --cc tools/perf/tests/shell/record+probe_libc_inet_pton.sh
index 9012a3b54d1a,0502a9e04c79..000000000000
--- a/tools/perf/tests/shell/record+probe_libc_inet_pton.sh
+++ b/tools/perf/tests/shell/record+probe_libc_inet_pton.sh
@@@ -37,18 -39,21 +37,23 @@@ trace_libc_inet_pton_backtrace() 
  		;;
  	esac
  
 -	perf_data=`mktemp -u /tmp/perf.data.XXX`
 -	perf_script=`mktemp -u /tmp/perf.script.XXX`
 -	perf record -e probe_libc:inet_pton/$eventattr/ -o $perf_data ping -6 -c 1 ::1 > /dev/null 2>&1
 -	perf script -i $perf_data > $perf_script
 +	file=`mktemp -u /tmp/perf.data.XXX`
  
 -	exec 3<$perf_script
 -	exec 4<$expected
 -	while read line <&3 && read -r pattern <&4; do
 -		[ -z "$pattern" ] && break
 +	perf record -e probe_libc:inet_pton/$eventattr/ -o $file ping -6 -c 1 ::1 > /dev/null 2>&1
 +	perf script -i $file | while read line ; do
  		echo $line
 -		echo "$line" | egrep -q "$pattern"
 +		echo "$line" | egrep -q "${expected[$idx]}"
  		if [ $? -ne 0 ] ; then
++<<<<<<< HEAD
 +			printf "FAIL: expected backtrace entry %d \"%s\" got \"%s\"\n" $idx "${expected[$idx]}" "$line"
 +			exit 1
++=======
+ 			printf "FAIL: expected backtrace entry \"%s\" got \"%s\"\n" "$pattern" "$line"
+ 			return 1
++>>>>>>> 83e3b6d73e66 (perf tests: Fix record+probe_libc_inet_pton.sh to ensure cleanups)
  		fi
 +		let idx+=1
 +		[ -z "${expected[$idx]}" ] && break
  	done
  
  	# If any statements are executed from this point onwards,
* Unmerged path tools/perf/tests/shell/record+probe_libc_inet_pton.sh
