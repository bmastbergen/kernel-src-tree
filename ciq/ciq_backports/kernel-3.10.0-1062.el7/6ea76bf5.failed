NFSv4: Fix _nfs4_do_setlk()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 6ea76bf51339506e9fb00d6caebf5d6b42a571e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/6ea76bf5.failed

The patch to fix the case where a lock request was interrupted ended up
changing default handling of errors such as NFS4ERR_DENIED and caused the
client to immediately resend the lock request. Let's do a partial revert
of that request so that the default is now to exit, but change the way
we handle resends to take into account the fact that the user may have
interrupted the request.

	Reported-by: Kenneth Johansson <ken@kenjo.org>
Fixes: a3cf9bca2ace ("NFSv4: Don't add a new lock on an interrupted wait..")
	Cc: Benjamin Coddington <bcodding@redhat.com>
	Cc: Jeff Layton <jlayton@kernel.org>
	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
	Reviewed-by: Jeff Layton <jlayton@kernel.org>
(cherry picked from commit 6ea76bf51339506e9fb00d6caebf5d6b42a571e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4proc.c
diff --cc fs/nfs/nfs4proc.c
index ba18322461ff,f6c4ccd693f4..000000000000
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@@ -6181,7 -6502,7 +6181,11 @@@ static void nfs4_lock_release(void *cal
  
  	dprintk("%s: begin!\n", __func__);
  	nfs_free_seqid(data->arg.open_seqid);
++<<<<<<< HEAD
 +	if (data->cancelled != 0) {
++=======
+ 	if (data->cancelled && data->rpc_status == 0) {
++>>>>>>> 6ea76bf51339 (NFSv4: Fix _nfs4_do_setlk())
  		struct rpc_task *task;
  		task = nfs4_do_unlck(&data->fl, data->ctx, data->lsp,
  				data->arg.lock_seqid);
* Unmerged path fs/nfs/nfs4proc.c
