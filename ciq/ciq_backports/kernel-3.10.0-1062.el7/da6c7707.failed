fbdev: Add FBINFO_HIDE_SMEM_START flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit da6c7707caf3736c1cf968606bd97c07e79625d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/da6c7707.failed

DRM drivers really, really, really don't want random userspace to
share buffer behind it's back, bypassing the dma-buf buffer sharing
machanism. For that reason we've ruthlessly rejected any IOCTL
exposing the physical address of any graphics buffer.

Unfortunately fbdev comes with that built-in. We could just set
smem_start to 0, but that means we'd have to hand-roll our own fb_mmap
implementation. For good reasons many drivers do that, but
smem_start/length is still super convenient.

Hence instead just stop the leak in the ioctl, to keep fb mmap working
as-is. A second patch will set this flag for all drm drivers.

	Acked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: linux-fbdev@vger.kernel.org
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20180822085405.10787-3-daniel.vetter@ffwll.ch
(cherry picked from commit da6c7707caf3736c1cf968606bd97c07e79625d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbmem.c
diff --cc drivers/video/fbmem.c
index ea8257aab07c,861bf8081619..000000000000
--- a/drivers/video/fbmem.c
+++ b/drivers/video/fbmem.c
@@@ -1319,22 -1324,15 +1321,32 @@@ static int do_fscreeninfo_to_user(struc
  static int fb_get_fscreeninfo(struct fb_info *info, unsigned int cmd,
  			      unsigned long arg)
  {
 +	mm_segment_t old_fs;
  	struct fb_fix_screeninfo fix;
 +	struct fb_fix_screeninfo32 __user *fix32;
 +	int err;
 +
++<<<<<<< HEAD:drivers/video/fbmem.c
 +	fix32 = compat_ptr(arg);
 +
 +	old_fs = get_fs();
 +	set_fs(KERNEL_DS);
 +	err = do_fb_ioctl(info, cmd, (unsigned long) &fix);
 +	set_fs(old_fs);
  
 +	if (!err)
 +		err = do_fscreeninfo_to_user(&fix, fix32);
 +
 +	return err;
++=======
+ 	if (!lock_fb_info(info))
+ 		return -ENODEV;
+ 	fix = info->fix;
+ 	if (info->flags & FBINFO_HIDE_SMEM_START)
+ 		fix.smem_start = 0;
+ 	unlock_fb_info(info);
+ 	return do_fscreeninfo_to_user(&fix, compat_ptr(arg));
++>>>>>>> da6c7707caf3 (fbdev: Add FBINFO_HIDE_SMEM_START flag):drivers/video/fbdev/core/fbmem.c
  }
  
  static long fb_compat_ioctl(struct file *file, unsigned int cmd,
* Unmerged path drivers/video/fbmem.c
diff --git a/include/linux/fb.h b/include/linux/fb.h
index bfdb4c5c6056..ba42430690f3 100644
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@ -439,6 +439,13 @@ struct fb_tile_ops {
  * and host endianness. Drivers should not use this flag.
  */
 #define FBINFO_BE_MATH  0x100000
+/*
+ * Hide smem_start in the FBIOGET_FSCREENINFO IOCTL. This is used by modern DRM
+ * drivers to stop userspace from trying to share buffers behind the kernel's
+ * back. Instead dma-buf based buffer sharing should be used.
+ */
+#define FBINFO_HIDE_SMEM_START  0x200000
+
 
 /* report to the VT layer that this fb driver can accept forced console
    output like oopses */
