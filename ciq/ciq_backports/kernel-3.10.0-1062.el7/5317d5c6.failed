r8169: use napi_consume_skb where possible

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit 5317d5c6d47eba1a4aa8316610c64329301f20a4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/5317d5c6.failed

Use napi_consume_skb() where possible to profit from
bulk free infrastructure.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5317d5c6d47eba1a4aa8316610c64329301f20a4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index 6e7e11cece50,a7e97e365a2d..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -6493,9 -6204,10 +6493,10 @@@ static void rtl8169_pcierr_interrupt(st
  	rtl_schedule_task(tp, RTL_FLAG_TASK_RESET_PENDING);
  }
  
- static void rtl_tx(struct net_device *dev, struct rtl8169_private *tp)
+ static void rtl_tx(struct net_device *dev, struct rtl8169_private *tp,
+ 		   int budget)
  {
 -	unsigned int dirty_tx, tx_left, bytes_compl = 0, pkts_compl = 0;
 +	unsigned int dirty_tx, tx_left;
  
  	dirty_tx = tp->dirty_tx;
  	smp_rmb();
@@@ -6519,11 -6231,9 +6520,17 @@@
  		rtl8169_unmap_tx_skb(tp_to_dev(tp), tx_skb,
  				     tp->TxDescArray + entry);
  		if (status & LastFrag) {
++<<<<<<< HEAD
 +			u64_stats_update_begin(&tp->tx_stats.syncp);
 +			tp->tx_stats.packets++;
 +			tp->tx_stats.bytes += tx_skb->skb->len;
 +			u64_stats_update_end(&tp->tx_stats.syncp);
 +			dev_consume_skb_any(tx_skb->skb);
++=======
+ 			pkts_compl++;
+ 			bytes_compl += tx_skb->skb->len;
+ 			napi_consume_skb(tx_skb->skb, budget);
++>>>>>>> 5317d5c6d47e (r8169: use napi_consume_skb where possible)
  			tx_skb->skb = NULL;
  		}
  		dirty_tx++;
@@@ -6779,14 -6476,8 +6786,14 @@@ static int rtl8169_poll(struct napi_str
  
  	work_done = rtl_rx(dev, tp, (u32) budget);
  
- 	rtl_tx(dev, tp);
+ 	rtl_tx(dev, tp, budget);
  
 +	if (status & tp->event_slow) {
 +		enable_mask &= ~tp->event_slow;
 +
 +		rtl_schedule_task(tp, RTL_FLAG_TASK_SLOW_PENDING);
 +	}
 +
  	if (work_done < budget) {
  		napi_complete_done(napi, work_done);
  
* Unmerged path drivers/net/ethernet/realtek/r8169.c
