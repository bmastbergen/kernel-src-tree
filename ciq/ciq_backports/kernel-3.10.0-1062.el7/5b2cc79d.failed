RDMA/nldev: Provide netdevice name and index

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Leon Romanovsky <leonro@mellanox.com>
commit 5b2cc79de8782ea98ef22cddb26fcd566c565094
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/5b2cc79d.failed

Export the net device name and index to easily find connection
between IB devices and relevant net devices.

We also updated the comment regarding the devices without FW.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Reviewed-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 5b2cc79de8782ea98ef22cddb26fcd566c565094)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/nldev.c
#	include/uapi/rdma/rdma_netlink.h
diff --cc drivers/infiniband/core/nldev.c
index 67368b6847cb,eb567765f45c..000000000000
--- a/drivers/infiniband/core/nldev.c
+++ b/drivers/infiniband/core/nldev.c
@@@ -71,6 -73,31 +71,34 @@@ static const struct nla_policy nldev_po
  	[RDMA_NLDEV_ATTR_RES_PID]		= { .type = NLA_U32 },
  	[RDMA_NLDEV_ATTR_RES_KERN_NAME]		= { .type = NLA_NUL_STRING,
  						    .len = TASK_COMM_LEN },
++<<<<<<< HEAD
++=======
+ 	[RDMA_NLDEV_ATTR_RES_CM_ID]		= { .type = NLA_NESTED },
+ 	[RDMA_NLDEV_ATTR_RES_CM_ID_ENTRY]	= { .type = NLA_NESTED },
+ 	[RDMA_NLDEV_ATTR_RES_PS]		= { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_SRC_ADDR]	= {
+ 			.len = sizeof(struct __kernel_sockaddr_storage) },
+ 	[RDMA_NLDEV_ATTR_RES_DST_ADDR]	= {
+ 			.len = sizeof(struct __kernel_sockaddr_storage) },
+ 	[RDMA_NLDEV_ATTR_RES_CQ]		= { .type = NLA_NESTED },
+ 	[RDMA_NLDEV_ATTR_RES_CQ_ENTRY]		= { .type = NLA_NESTED },
+ 	[RDMA_NLDEV_ATTR_RES_CQE]		= { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_USECNT]		= { .type = NLA_U64 },
+ 	[RDMA_NLDEV_ATTR_RES_POLL_CTX]		= { .type = NLA_U8 },
+ 	[RDMA_NLDEV_ATTR_RES_MR]		= { .type = NLA_NESTED },
+ 	[RDMA_NLDEV_ATTR_RES_MR_ENTRY]		= { .type = NLA_NESTED },
+ 	[RDMA_NLDEV_ATTR_RES_RKEY]		= { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_LKEY]		= { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_IOVA]		= { .type = NLA_U64 },
+ 	[RDMA_NLDEV_ATTR_RES_MRLEN]		= { .type = NLA_U64 },
+ 	[RDMA_NLDEV_ATTR_RES_PD]		= { .type = NLA_NESTED },
+ 	[RDMA_NLDEV_ATTR_RES_PD_ENTRY]		= { .type = NLA_NESTED },
+ 	[RDMA_NLDEV_ATTR_RES_LOCAL_DMA_LKEY]	= { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_UNSAFE_GLOBAL_RKEY] = { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_NDEV_INDEX]		= { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_NDEV_NAME]		= { .type = NLA_NUL_STRING,
+ 						    .len = IFNAMSIZ },
++>>>>>>> 5b2cc79de878 (RDMA/nldev: Provide netdevice name and index)
  };
  
  static int fill_nldev_handle(struct sk_buff *msg, struct ib_device *device)
diff --cc include/uapi/rdma/rdma_netlink.h
index b90c8cd4c303,0ce0943fc808..000000000000
--- a/include/uapi/rdma/rdma_netlink.h
+++ b/include/uapi/rdma/rdma_netlink.h
@@@ -349,6 -358,49 +349,52 @@@ enum rdma_nldev_attr 
  	 */
  	RDMA_NLDEV_ATTR_RES_KERN_NAME,		/* string */
  
++<<<<<<< HEAD
++=======
+ 	RDMA_NLDEV_ATTR_RES_CM_ID,		/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_CM_ID_ENTRY,	/* nested table */
+ 	/*
+ 	 * rdma_cm_id port space.
+ 	 */
+ 	RDMA_NLDEV_ATTR_RES_PS,			/* u32 */
+ 	/*
+ 	 * Source and destination socket addresses
+ 	 */
+ 	RDMA_NLDEV_ATTR_RES_SRC_ADDR,		/* __kernel_sockaddr_storage */
+ 	RDMA_NLDEV_ATTR_RES_DST_ADDR,		/* __kernel_sockaddr_storage */
+ 
+ 	RDMA_NLDEV_ATTR_RES_CQ,			/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_CQ_ENTRY,		/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_CQE,		/* u32 */
+ 	RDMA_NLDEV_ATTR_RES_USECNT,		/* u64 */
+ 	RDMA_NLDEV_ATTR_RES_POLL_CTX,		/* u8 */
+ 
+ 	RDMA_NLDEV_ATTR_RES_MR,			/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_MR_ENTRY,		/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_RKEY,		/* u32 */
+ 	RDMA_NLDEV_ATTR_RES_LKEY,		/* u32 */
+ 	RDMA_NLDEV_ATTR_RES_IOVA,		/* u64 */
+ 	RDMA_NLDEV_ATTR_RES_MRLEN,		/* u64 */
+ 
+ 	RDMA_NLDEV_ATTR_RES_PD,			/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_PD_ENTRY,		/* nested table */
+ 	RDMA_NLDEV_ATTR_RES_LOCAL_DMA_LKEY,	/* u32 */
+ 	RDMA_NLDEV_ATTR_RES_UNSAFE_GLOBAL_RKEY,	/* u32 */
+ 
+ 	/*
+ 	 * Provides logical name and index of netdevice which is
+ 	 * connected to physical port. This information is relevant
+ 	 * for RoCE and iWARP.
+ 	 *
+ 	 * The netdevices which are associated with containers are
+ 	 * supposed to be exported together with GID table once it
+ 	 * will be exposed through the netlink. Because the
+ 	 * associated netdevices are properties of GIDs.
+ 	 */
+ 	RDMA_NLDEV_ATTR_NDEV_INDEX,		/* u32 */
+ 	RDMA_NLDEV_ATTR_NDEV_NAME,		/* string */
+ 
++>>>>>>> 5b2cc79de878 (RDMA/nldev: Provide netdevice name and index)
  	RDMA_NLDEV_ATTR_MAX
  };
  #endif /* _UAPI_RDMA_NETLINK_H */
* Unmerged path drivers/infiniband/core/nldev.c
* Unmerged path include/uapi/rdma/rdma_netlink.h
