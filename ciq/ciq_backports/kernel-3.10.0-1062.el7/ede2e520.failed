Add some missing debug fields in server and tcon structs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Steve French <smfrench@gmail.com>
commit ede2e520a1484924a55c8fc77a8256f5d33d2ab2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ede2e520.failed

Allow dumping out debug information on dialect, signing, unix extensions
and encryption

	Signed-off-by: Steve French <smfrench@gmail.com>
	Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
(cherry picked from commit ede2e520a1484924a55c8fc77a8256f5d33d2ab2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/cifs_debug.c
diff --cc fs/cifs/cifs_debug.c
index 3ef20d395ab0,e35e711db68e..000000000000
--- a/fs/cifs/cifs_debug.c
+++ b/fs/cifs/cifs_debug.c
@@@ -177,7 -184,76 +181,80 @@@ static int cifs_debug_data_proc_show(st
  	list_for_each(tmp1, &cifs_tcp_ses_list) {
  		server = list_entry(tmp1, struct TCP_Server_Info,
  				    tcp_ses_list);
++<<<<<<< HEAD
 +		seq_printf(m, "\nNumber of credits: %d", server->credits);
++=======
+ 
+ #ifdef CONFIG_CIFS_SMB_DIRECT
+ 		if (!server->rdma)
+ 			goto skip_rdma;
+ 
+ 		seq_printf(m, "\nSMBDirect (in hex) protocol version: %x "
+ 			"transport status: %x",
+ 			server->smbd_conn->protocol,
+ 			server->smbd_conn->transport_status);
+ 		seq_printf(m, "\nConn receive_credit_max: %x "
+ 			"send_credit_target: %x max_send_size: %x",
+ 			server->smbd_conn->receive_credit_max,
+ 			server->smbd_conn->send_credit_target,
+ 			server->smbd_conn->max_send_size);
+ 		seq_printf(m, "\nConn max_fragmented_recv_size: %x "
+ 			"max_fragmented_send_size: %x max_receive_size:%x",
+ 			server->smbd_conn->max_fragmented_recv_size,
+ 			server->smbd_conn->max_fragmented_send_size,
+ 			server->smbd_conn->max_receive_size);
+ 		seq_printf(m, "\nConn keep_alive_interval: %x "
+ 			"max_readwrite_size: %x rdma_readwrite_threshold: %x",
+ 			server->smbd_conn->keep_alive_interval,
+ 			server->smbd_conn->max_readwrite_size,
+ 			server->smbd_conn->rdma_readwrite_threshold);
+ 		seq_printf(m, "\nDebug count_get_receive_buffer: %x "
+ 			"count_put_receive_buffer: %x count_send_empty: %x",
+ 			server->smbd_conn->count_get_receive_buffer,
+ 			server->smbd_conn->count_put_receive_buffer,
+ 			server->smbd_conn->count_send_empty);
+ 		seq_printf(m, "\nRead Queue count_reassembly_queue: %x "
+ 			"count_enqueue_reassembly_queue: %x "
+ 			"count_dequeue_reassembly_queue: %x "
+ 			"fragment_reassembly_remaining: %x "
+ 			"reassembly_data_length: %x "
+ 			"reassembly_queue_length: %x",
+ 			server->smbd_conn->count_reassembly_queue,
+ 			server->smbd_conn->count_enqueue_reassembly_queue,
+ 			server->smbd_conn->count_dequeue_reassembly_queue,
+ 			server->smbd_conn->fragment_reassembly_remaining,
+ 			server->smbd_conn->reassembly_data_length,
+ 			server->smbd_conn->reassembly_queue_length);
+ 		seq_printf(m, "\nCurrent Credits send_credits: %x "
+ 			"receive_credits: %x receive_credit_target: %x",
+ 			atomic_read(&server->smbd_conn->send_credits),
+ 			atomic_read(&server->smbd_conn->receive_credits),
+ 			server->smbd_conn->receive_credit_target);
+ 		seq_printf(m, "\nPending send_pending: %x send_payload_pending:"
+ 			" %x smbd_send_pending: %x smbd_recv_pending: %x",
+ 			atomic_read(&server->smbd_conn->send_pending),
+ 			atomic_read(&server->smbd_conn->send_payload_pending),
+ 			server->smbd_conn->smbd_send_pending,
+ 			server->smbd_conn->smbd_recv_pending);
+ 		seq_printf(m, "\nReceive buffers count_receive_queue: %x "
+ 			"count_empty_packet_queue: %x",
+ 			server->smbd_conn->count_receive_queue,
+ 			server->smbd_conn->count_empty_packet_queue);
+ 		seq_printf(m, "\nMR responder_resources: %x "
+ 			"max_frmr_depth: %x mr_type: %x",
+ 			server->smbd_conn->responder_resources,
+ 			server->smbd_conn->max_frmr_depth,
+ 			server->smbd_conn->mr_type);
+ 		seq_printf(m, "\nMR mr_ready_count: %x mr_used_count: %x",
+ 			atomic_read(&server->smbd_conn->mr_ready_count),
+ 			atomic_read(&server->smbd_conn->mr_used_count));
+ skip_rdma:
+ #endif
+ 		seq_printf(m, "\nNumber of credits: %d Dialect 0x%x",
+ 			server->credits,  server->dialect);
+ 		if (server->sign)
+ 			seq_printf(m, " signed");
++>>>>>>> ede2e520a148 (Add some missing debug fields in server and tcon structs)
  		i++;
  		list_for_each(tmp2, &server->smb_ses_list) {
  			ses = list_entry(tmp2, struct cifs_ses,
* Unmerged path fs/cifs/cifs_debug.c
