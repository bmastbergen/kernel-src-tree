rtnetlink: add helper to put master and link ifindexes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Florian Westphal <fw@strlen.de>
commit 79110a0426d8179a51bf3cb698a84f6ec98ca60c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/79110a04.failed

rtnl_fill_ifinfo currently requires caller to hold the rtnl mutex.
Unfortunately the function is quite large which makes it harder to see
which spots require the lock, which spots assume it and which ones could
do without.

Add helpers to factor out the ifindex dumping, one can use rcu to avoid
rtnl dependency.

	Reviewed-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 79110a0426d8179a51bf3cb698a84f6ec98ca60c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/rtnetlink.c
diff --cc net/core/rtnetlink.c
index c70e7cdc57f8,c801212ee40e..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -1365,12 -1307,35 +1365,41 @@@ static u32 rtnl_get_event(unsigned lon
  	return rtnl_event_type;
  }
  
++<<<<<<< HEAD
 +static int rtnl_fill_ifinfo(struct sk_buff *skb,
 +			    struct net_device *dev, struct net *src_net,
++=======
+ static int put_master_ifindex(struct sk_buff *skb, struct net_device *dev)
+ {
+ 	const struct net_device *upper_dev;
+ 	int ret = 0;
+ 
+ 	rcu_read_lock();
+ 
+ 	upper_dev = netdev_master_upper_dev_get_rcu(dev);
+ 	if (upper_dev)
+ 		ret = nla_put_u32(skb, IFLA_MASTER, upper_dev->ifindex);
+ 
+ 	rcu_read_unlock();
+ 	return ret;
+ }
+ 
+ static int nla_put_iflink(struct sk_buff *skb, const struct net_device *dev)
+ {
+ 	int ifindex = dev_get_iflink(dev);
+ 
+ 	if (dev->ifindex == ifindex)
+ 		return 0;
+ 
+ 	return nla_put_u32(skb, IFLA_LINK, ifindex);
+ }
+ 
+ static int rtnl_fill_ifinfo(struct sk_buff *skb, struct net_device *dev,
++>>>>>>> 79110a0426d8 (rtnetlink: add helper to put master and link ifindexes)
  			    int type, u32 pid, u32 seq, u32 change,
  			    unsigned int flags, u32 ext_filter_mask,
 -			    u32 event)
 +			    u32 event, int *new_nsid, int new_ifindex,
 +			    int tgt_netnsid)
  {
  	struct ifinfomsg *ifm;
  	struct nlmsghdr *nlh;
* Unmerged path net/core/rtnetlink.c
