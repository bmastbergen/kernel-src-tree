xfs: refactor delalloc accounting in xfs_bmap_add_extent_delay_real

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Christoph Hellwig <hch@lst.de>
commit ca1862b0838604aa048120d87ebbf53cf7c8c8bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ca1862b0.failed

Account for all changes to the delalloc reservation in da_new, and use a
single call xfs_mod_fdblocks to reserve/free blocks, including always
checking for an error.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit ca1862b0838604aa048120d87ebbf53cf7c8c8bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_bmap.c
diff --cc fs/xfs/libxfs/xfs_bmap.c
index b813e9db509a,6ca185dbd764..000000000000
--- a/fs/xfs/libxfs/xfs_bmap.c
+++ b/fs/xfs/libxfs/xfs_bmap.c
@@@ -1547,11 -1570,10 +1547,14 @@@ xfs_bmap_one_block
   */
  STATIC int				/* error */
  xfs_bmap_add_extent_delay_real(
 -	struct xfs_bmalloca	*bma,
 -	int			whichfork)
 +	struct xfs_bmalloca	*bma)
  {
  	struct xfs_bmbt_irec	*new = &bma->got;
++<<<<<<< HEAD
 +	int			diff;	/* temp value */
 +	xfs_bmbt_rec_host_t	*ep;	/* extent entry for idx */
++=======
++>>>>>>> ca1862b08386 (xfs: refactor delalloc accounting in xfs_bmap_add_extent_delay_real)
  	int			error;	/* error return value */
  	int			i;	/* temp state */
  	xfs_ifork_t		*ifp;	/* inode fork pointer */
@@@ -2021,30 -2068,10 +2024,36 @@@
  			if (error)
  				goto done;
  		}
++<<<<<<< HEAD
 +		temp = xfs_bmap_worst_indlen(bma->ip, temp);
 +		temp2 = xfs_bmap_worst_indlen(bma->ip, temp2);
 +		diff = (int)(temp + temp2 -
 +			     (startblockval(PREV.br_startblock) -
 +			      (bma->cur ?
 +			       bma->cur->bc_private.b.allocated : 0)));
 +		if (diff > 0) {
 +			error = xfs_mod_fdblocks(bma->ip->i_mount,
 +						 -((int64_t)diff), false);
 +			ASSERT(!error);
 +			if (error)
 +				goto done;
 +		}
 +
 +		ep = xfs_iext_get_ext(ifp, bma->idx);
 +		xfs_bmbt_set_startblock(ep, nullstartblock((int)temp));
 +		trace_xfs_bmap_post_update(bma->ip, bma->idx, state, _THIS_IP_);
 +		trace_xfs_bmap_pre_update(bma->ip, bma->idx + 2, state, _THIS_IP_);
 +		xfs_bmbt_set_startblock(xfs_iext_get_ext(ifp, bma->idx + 2),
 +			nullstartblock((int)temp2));
 +		trace_xfs_bmap_post_update(bma->ip, bma->idx + 2, state, _THIS_IP_);
 +
++=======
+ 
+ 		da_new = startblockval(PREV.br_startblock) +
+ 			 startblockval(RIGHT.br_startblock);
++>>>>>>> ca1862b08386 (xfs: refactor delalloc accounting in xfs_bmap_add_extent_delay_real)
  		bma->idx++;
 +		da_new = temp + temp2;
  		break;
  
  	case BMAP_LEFT_FILLING | BMAP_LEFT_CONTIG | BMAP_RIGHT_CONTIG:
* Unmerged path fs/xfs/libxfs/xfs_bmap.c
