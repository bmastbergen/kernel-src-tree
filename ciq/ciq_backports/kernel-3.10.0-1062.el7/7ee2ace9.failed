net/mlx5e: Switch to Toeplitz RSS hash by default

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Switch to Toeplitz RSS hash by default (Alaa Hleihel) [1695493]
Rebuild_FUZZ: 95.74%
commit-author Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
commit 7ee2ace9c544a0886e02b54b625e521df8692d20
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/7ee2ace9.failed

Although XOR hash function can perform very well on some special use
cases, to align with all drivers, mlx5 driver should use Toeplitz hash
by default.
Toeplitz is more stable for the general use case and it is more standard
and reliable.

On top of that, since XOR (MLX5_RX_HASH_FN_INVERTED_XOR8) gives only a
repeated 8 bits pattern. When used for udp tunneling RSS source port
manipulation it results in fixed source port, which will cause bad RSS
spread.

Fixes: 2be6967cdbc9 ("net/mlx5e: Support ETH_RSS_HASH_XOR")
	Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
	Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 7ee2ace9c544a0886e02b54b625e521df8692d20)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 48dde39aa588,f7eb521db580..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -4139,6 -4557,55 +4139,58 @@@ void mlx5e_build_nic_params(struct mlx5
  		MLX5E_SET_PFLAG(params, MLX5E_PFLAG_RX_STRIDING_RQ, true);
  	mlx5e_set_rq_type(mdev, params);
  	mlx5e_init_rq_type_params(mdev, params);
++<<<<<<< HEAD
++=======
+ }
+ 
+ void mlx5e_build_rss_params(struct mlx5e_rss_params *rss_params,
+ 			    u16 num_channels)
+ {
+ 	enum mlx5e_traffic_types tt;
+ 
+ 	rss_params->hfunc = ETH_RSS_HASH_TOP;
+ 	netdev_rss_key_fill(rss_params->toeplitz_hash_key,
+ 			    sizeof(rss_params->toeplitz_hash_key));
+ 	mlx5e_build_default_indir_rqt(rss_params->indirection_rqt,
+ 				      MLX5E_INDIR_RQT_SIZE, num_channels);
+ 	for (tt = 0; tt < MLX5E_NUM_INDIR_TIRS; tt++)
+ 		rss_params->rx_hash_fields[tt] =
+ 			tirc_default_config[tt].rx_hash_fields;
+ }
+ 
+ void mlx5e_build_nic_params(struct mlx5_core_dev *mdev,
+ 			    struct mlx5e_rss_params *rss_params,
+ 			    struct mlx5e_params *params,
+ 			    u16 max_channels, u16 mtu)
+ {
+ 	u8 rx_cq_period_mode;
+ 
+ 	params->sw_mtu = mtu;
+ 	params->hard_mtu = MLX5E_ETH_HARD_MTU;
+ 	params->num_channels = max_channels;
+ 	params->num_tc       = 1;
+ 
+ 	/* SQ */
+ 	params->log_sq_size = is_kdump_kernel() ?
+ 		MLX5E_PARAMS_MINIMUM_LOG_SQ_SIZE :
+ 		MLX5E_PARAMS_DEFAULT_LOG_SQ_SIZE;
+ 
+ 	/* XDP SQ */
+ 	MLX5E_SET_PFLAG(params, MLX5E_PFLAG_XDP_TX_MPWQE,
+ 			MLX5_CAP_ETH(mdev, enhanced_multi_pkt_send_wqe));
+ 
+ 	/* set CQE compression */
+ 	params->rx_cqe_compress_def = false;
+ 	if (MLX5_CAP_GEN(mdev, cqe_compression) &&
+ 	    MLX5_CAP_GEN(mdev, vport_group_manager))
+ 		params->rx_cqe_compress_def = slow_pci_heuristic(mdev);
+ 
+ 	MLX5E_SET_PFLAG(params, MLX5E_PFLAG_RX_CQE_COMPRESS, params->rx_cqe_compress_def);
+ 	MLX5E_SET_PFLAG(params, MLX5E_PFLAG_RX_NO_CSUM_COMPLETE, false);
+ 
+ 	/* RQ */
+ 	mlx5e_build_rq_params(mdev, params);
++>>>>>>> 7ee2ace9c544 (net/mlx5e: Switch to Toeplitz RSS hash by default)
  
  	/* HW LRO */
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
