ALSA: rawmidi: Initialize allocated buffers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit 5a7b44a8df822e0667fc76ed7130252523993bda
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/5a7b44a8.failed

syzbot reported the uninitialized value exposure in certain situations
using virmidi loop.  It's likely a very small race at writing and
reading, and the influence is almost negligible.  But it's safer to
paper over this just by replacing the existing kvmalloc() with
kvzalloc().

	Reported-by: syzbot+194dffdb8b22fc5d207a@syzkaller.appspotmail.com
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 5a7b44a8df822e0667fc76ed7130252523993bda)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/core/rawmidi.c
diff --cc sound/core/rawmidi.c
index edf6ff52bbea,08d5662039e3..000000000000
--- a/sound/core/rawmidi.c
+++ b/sound/core/rawmidi.c
@@@ -124,7 -129,8 +124,12 @@@ static int snd_rawmidi_runtime_create(s
  		runtime->avail = 0;
  	else
  		runtime->avail = runtime->buffer_size;
++<<<<<<< HEAD
 +	if ((runtime->buffer = kmalloc(runtime->buffer_size, GFP_KERNEL)) == NULL) {
++=======
+ 	runtime->buffer = kvzalloc(runtime->buffer_size, GFP_KERNEL);
+ 	if (!runtime->buffer) {
++>>>>>>> 5a7b44a8df82 (ALSA: rawmidi: Initialize allocated buffers)
  		kfree(runtime);
  		return -ENOMEM;
  	}
@@@ -632,23 -644,18 +637,27 @@@ static int snd_rawmidi_info_select_user
  	return 0;
  }
  
 -static int resize_runtime_buffer(struct snd_rawmidi_runtime *runtime,
 -				 struct snd_rawmidi_params *params,
 -				 bool is_input)
 +int snd_rawmidi_output_params(struct snd_rawmidi_substream *substream,
 +			      struct snd_rawmidi_params * params)
  {
  	char *newbuf, *oldbuf;
 -
 -	if (params->buffer_size < 32 || params->buffer_size > 1024L * 1024L)
 +	struct snd_rawmidi_runtime *runtime = substream->runtime;
 +	
 +	if (substream->append && substream->use_count > 1)
 +		return -EBUSY;
 +	snd_rawmidi_drain_output(substream);
 +	if (params->buffer_size < 32 || params->buffer_size > 1024L * 1024L) {
  		return -EINVAL;
 -	if (params->avail_min < 1 || params->avail_min > params->buffer_size)
 +	}
 +	if (params->avail_min < 1 || params->avail_min > params->buffer_size) {
  		return -EINVAL;
 +	}
  	if (params->buffer_size != runtime->buffer_size) {
++<<<<<<< HEAD
 +		newbuf = kmalloc(params->buffer_size, GFP_KERNEL);
++=======
+ 		newbuf = kvzalloc(params->buffer_size, GFP_KERNEL);
++>>>>>>> 5a7b44a8df82 (ALSA: rawmidi: Initialize allocated buffers)
  		if (!newbuf)
  			return -ENOMEM;
  		spin_lock_irq(&runtime->lock);
* Unmerged path sound/core/rawmidi.c
