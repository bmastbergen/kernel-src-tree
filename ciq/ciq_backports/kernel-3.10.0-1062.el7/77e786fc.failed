IB/core: Replace ib_query_gid with rdma_get_gid_attr

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Parav Pandit <parav@mellanox.com>
commit 77e786fcbe2ecdac57ced610260ffb1f7cfeed00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/77e786fc.failed

These call sites have a use of ib_query_gid with a simple lifetime for the
struct gid_attr pointer, with an easy conversion.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 77e786fcbe2ecdac57ced610260ffb1f7cfeed00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/sysfs.c
diff --cc drivers/infiniband/core/sysfs.c
index 9b0fbab41dc6,7fd14ead7b37..000000000000
--- a/drivers/infiniband/core/sysfs.c
+++ b/drivers/infiniband/core/sysfs.c
@@@ -389,14 -383,28 +383,39 @@@ static ssize_t show_port_gid(struct ib_
  {
  	struct port_table_attribute *tab_attr =
  		container_of(attr, struct port_table_attribute, attr);
++<<<<<<< HEAD
 +	union ib_gid gid;
 +	ssize_t ret;
 +
 +	ret = ib_query_gid(p->ibdev, p->port_num, tab_attr->index, &gid, NULL);
 +	if (ret)
 +		return ret;
 +
 +	return sprintf(buf, "%pI6\n", gid.raw);
++=======
+ 	const struct ib_gid_attr *gid_attr;
+ 	ssize_t ret;
+ 
+ 	gid_attr = rdma_get_gid_attr(p->ibdev, p->port_num, tab_attr->index);
+ 	if (IS_ERR(gid_attr)) {
+ 		const union ib_gid zgid = {};
+ 
+ 		/* If reading GID fails, it is likely due to GID entry being
+ 		 * empty (invalid) or reserved GID in the table.  User space
+ 		 * expects to read GID table entries as long as it given index
+ 		 * is within GID table size.  Administrative/debugging tool
+ 		 * fails to query rest of the GID entries if it hits error
+ 		 * while querying a GID of the given index.  To avoid user
+ 		 * space throwing such error on fail to read gid, return zero
+ 		 * GID as before. This maintains backward compatibility.
+ 		 */
+ 		return sprintf(buf, "%pI6\n", zgid.raw);
+ 	}
+ 
+ 	ret = sprintf(buf, "%pI6\n", gid_attr->gid.raw);
+ 	rdma_put_gid_attr(gid_attr);
+ 	return ret;
++>>>>>>> 77e786fcbe2e (IB/core: Replace ib_query_gid with rdma_get_gid_attr)
  }
  
  static ssize_t show_port_gid_attr_ndev(struct ib_port *p,
* Unmerged path drivers/infiniband/core/sysfs.c
