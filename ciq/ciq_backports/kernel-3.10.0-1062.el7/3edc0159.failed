net/mlx5e: Expose function for building RSS params

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Expose function for building RSS params (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 95.83%
commit-author Gavi Teitz <gavi@mellanox.com>
commit 3edc0159c01406a21a8c850b268d1ac8fb2b4c66
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/3edc0159.failed

Towards enabling RSS for the vport representors, extract the
procedure for building a device's RSS params, and expose the
function.

	Signed-off-by: Gavi Teitz <gavi@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 3edc0159c01406a21a8c850b268d1ac8fb2b4c66)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 173f1daa0751,98390a5b106a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -1110,6 -966,10 +1110,12 @@@ void mlx5e_destroy_netdev(struct mlx5e_
  void mlx5e_build_nic_params(struct mlx5_core_dev *mdev,
  			    struct mlx5e_params *params,
  			    u16 max_channels, u16 mtu);
++<<<<<<< HEAD
++=======
+ void mlx5e_build_rq_params(struct mlx5_core_dev *mdev,
+ 			   struct mlx5e_params *params);
+ void mlx5e_build_rss_params(struct mlx5e_params *params);
++>>>>>>> 3edc0159c014 (net/mlx5e: Expose function for building RSS params)
  u8 mlx5e_params_calculate_tx_min_inline(struct mlx5_core_dev *mdev);
  void mlx5e_rx_dim_work(struct work_struct *work);
 -void mlx5e_tx_dim_work(struct work_struct *work);
  #endif /* __MLX5_EN_H__ */
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 489704305daa,6086f874c7bf..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -4100,6 -4480,31 +4100,34 @@@ static u32 mlx5e_choose_lro_timeout(str
  	return MLX5_CAP_ETH(mdev, lro_timer_supported_periods[i]);
  }
  
++<<<<<<< HEAD
++=======
+ void mlx5e_build_rq_params(struct mlx5_core_dev *mdev,
+ 			   struct mlx5e_params *params)
+ {
+ 	/* Prefer Striding RQ, unless any of the following holds:
+ 	 * - Striding RQ configuration is not possible/supported.
+ 	 * - Slow PCI heuristic.
+ 	 * - Legacy RQ would use linear SKB while Striding RQ would use non-linear.
+ 	 */
+ 	if (!slow_pci_heuristic(mdev) &&
+ 	    mlx5e_striding_rq_possible(mdev, params) &&
+ 	    (mlx5e_rx_mpwqe_is_linear_skb(mdev, params) ||
+ 	     !mlx5e_rx_is_linear_skb(mdev, params)))
+ 		MLX5E_SET_PFLAG(params, MLX5E_PFLAG_RX_STRIDING_RQ, true);
+ 	mlx5e_set_rq_type(mdev, params);
+ 	mlx5e_init_rq_type_params(mdev, params);
+ }
+ 
+ void mlx5e_build_rss_params(struct mlx5e_params *params)
+ {
+ 	params->rss_hfunc = ETH_RSS_HASH_XOR;
+ 	netdev_rss_key_fill(params->toeplitz_hash_key, sizeof(params->toeplitz_hash_key));
+ 	mlx5e_build_default_indir_rqt(params->indirection_rqt,
+ 				      MLX5E_INDIR_RQT_SIZE, params->num_channels);
+ }
+ 
++>>>>>>> 3edc0159c014 (net/mlx5e: Expose function for building RSS params)
  void mlx5e_build_nic_params(struct mlx5_core_dev *mdev,
  			    struct mlx5e_params *params,
  			    u16 max_channels, u16 mtu)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
