ipv4: fix refcount leak in fib_check_nh()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Eric Dumazet <edumazet@google.com>
commit 1e3136789975f03e461798149309034e5213c1b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/1e313678.failed

fib_lookup() forces FIB_LOOKUP_NOREF flag, while fib_table_lookup()
does not.

This patch solves the typical message at reboot time or device
dismantle :

unregister_netdevice: waiting for eth0 to become free. Usage count = 4

Fixes: 3bfd847203c6 ("net: Use passed in table for nexthop lookups")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Cc: David Ahern <dsa@cumulusnetworks.com>
	Acked-by: David Ahern <dsa@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1e3136789975f03e461798149309034e5213c1b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_semantics.c
diff --cc net/ipv4/fib_semantics.c
index b3ccf81b8829,c8025851dac7..000000000000
--- a/net/ipv4/fib_semantics.c
+++ b/net/ipv4/fib_semantics.c
@@@ -787,7 -702,17 +787,21 @@@ static int fib_check_nh(struct fib_conf
  			/* It is not necessary, but requires a bit of thinking */
  			if (fl4.flowi4_scope < RT_SCOPE_LINK)
  				fl4.flowi4_scope = RT_SCOPE_LINK;
++<<<<<<< HEAD
 +			err = fib_lookup(net, &fl4, &res);
++=======
+ 
+ 			if (cfg->fc_table)
+ 				tbl = fib_get_table(net, cfg->fc_table);
+ 
+ 			if (tbl)
+ 				err = fib_table_lookup(tbl, &fl4, &res,
+ 						       FIB_LOOKUP_IGNORE_LINKSTATE |
+ 						       FIB_LOOKUP_NOREF);
+ 			else
+ 				err = fib_lookup(net, &fl4, &res,
+ 						 FIB_LOOKUP_IGNORE_LINKSTATE);
++>>>>>>> 1e3136789975 (ipv4: fix refcount leak in fib_check_nh())
  			if (err) {
  				rcu_read_unlock();
  				return err;
* Unmerged path net/ipv4/fib_semantics.c
