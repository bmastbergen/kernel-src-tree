iavf: replace i40e_debug with iavf version

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jesse Brandeburg <jesse.brandeburg@intel.com>
commit f1aa1abaf5a6facbb5fe68f983564803b2bd11da
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/f1aa1aba.failed

Change another string (i40e_debug)

	Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit f1aa1abaf5a6facbb5fe68f983564803b2bd11da)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40evf/i40e_adminq.c
#	drivers/net/ethernet/intel/i40evf/i40e_common.c
#	drivers/net/ethernet/intel/i40evf/i40e_osdep.h
#	drivers/net/ethernet/intel/iavf/i40e_prototype.h
#	drivers/net/ethernet/intel/iavf/i40e_type.h
diff --cc drivers/net/ethernet/intel/i40evf/i40e_adminq.c
index 35630356cd6a,b68c9f50ea9b..000000000000
--- a/drivers/net/ethernet/intel/i40evf/i40e_adminq.c
+++ b/drivers/net/ethernet/intel/i40evf/i40e_adminq.c
@@@ -753,9 -738,9 +753,15 @@@ i40e_status i40evf_asq_send_command(str
  	}
  
  	/* bump the tail */
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40e_adminq.c
 +	i40e_debug(hw, I40E_DEBUG_AQ_MESSAGE, "AQTX: desc and buffer:\n");
 +	i40evf_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc_on_ring,
 +			buff, buff_size);
++=======
+ 	iavf_debug(hw, I40E_DEBUG_AQ_MESSAGE, "AQTX: desc and buffer:\n");
+ 	iavf_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc_on_ring,
+ 		      buff, buff_size);
++>>>>>>> f1aa1abaf5a6 (iavf: replace i40e_debug with iavf version):drivers/net/ethernet/intel/iavf/i40e_adminq.c
  	(hw->aq.asq.next_to_use)++;
  	if (hw->aq.asq.next_to_use == hw->aq.asq.count)
  		hw->aq.asq.next_to_use = 0;
@@@ -804,10 -789,9 +810,10 @@@
  		hw->aq.asq_last_status = (enum i40e_admin_queue_err)retval;
  	}
  
- 	i40e_debug(hw, I40E_DEBUG_AQ_MESSAGE,
+ 	iavf_debug(hw, I40E_DEBUG_AQ_MESSAGE,
  		   "AQTX: desc and buffer writeback:\n");
 -	iavf_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc, buff, buff_size);
 +	i40evf_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc, buff,
 +			buff_size);
  
  	/* save writeback aq if requested */
  	if (details->wb_desc)
@@@ -816,8 -800,8 +822,13 @@@
  	/* update the error if time out occurred */
  	if ((!cmd_completed) &&
  	    (!details->async && !details->postpone)) {
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40e_adminq.c
 +		if (rd32(hw, hw->aq.asq.len) & I40E_VF_ATQLEN1_ATQCRIT_MASK) {
 +			i40e_debug(hw, I40E_DEBUG_AQ_MESSAGE,
++=======
+ 		if (rd32(hw, hw->aq.asq.len) & IAVF_VF_ATQLEN1_ATQCRIT_MASK) {
+ 			iavf_debug(hw, I40E_DEBUG_AQ_MESSAGE,
++>>>>>>> f1aa1abaf5a6 (iavf: replace i40e_debug with iavf version):drivers/net/ethernet/intel/iavf/i40e_adminq.c
  				   "AQTX: AQ Critical error.\n");
  			status = I40E_ERR_ADMIN_QUEUE_CRITICAL_ERROR;
  		} else {
@@@ -914,9 -897,9 +925,15 @@@ i40e_status i40evf_clean_arq_element(st
  		memcpy(e->msg_buf, hw->aq.arq.r.arq_bi[desc_idx].va,
  		       e->msg_len);
  
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40e_adminq.c
 +	i40e_debug(hw, I40E_DEBUG_AQ_MESSAGE, "AQRX: desc and buffer:\n");
 +	i40evf_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc, e->msg_buf,
 +			hw->aq.arq_buf_size);
++=======
+ 	iavf_debug(hw, I40E_DEBUG_AQ_MESSAGE, "AQRX: desc and buffer:\n");
+ 	iavf_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc, e->msg_buf,
+ 		      hw->aq.arq_buf_size);
++>>>>>>> f1aa1abaf5a6 (iavf: replace i40e_debug with iavf version):drivers/net/ethernet/intel/iavf/i40e_adminq.c
  
  	/* Restore the original datalen and buffer address in the desc,
  	 * FW updates datalen to indicate the event message
diff --cc drivers/net/ethernet/intel/i40evf/i40e_common.c
index eea280ba411e,c830bb6f5943..000000000000
--- a/drivers/net/ethernet/intel/i40evf/i40e_common.c
+++ b/drivers/net/ethernet/intel/i40evf/i40e_common.c
@@@ -279,16 -257,16 +279,20 @@@ const char *i40evf_stat_str(struct i40e
   *
   * Dumps debug log about adminq command with descriptor contents.
   **/
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40e_common.c
 +void i40evf_debug_aq(struct i40e_hw *hw, enum i40e_debug_mask mask, void *desc,
++=======
+ void iavf_debug_aq(struct iavf_hw *hw, enum iavf_debug_mask mask, void *desc,
++>>>>>>> f1aa1abaf5a6 (iavf: replace i40e_debug with iavf version):drivers/net/ethernet/intel/iavf/i40e_common.c
  		   void *buffer, u16 buf_len)
  {
  	struct i40e_aq_desc *aq_desc = (struct i40e_aq_desc *)desc;
  	u8 *buf = (u8 *)buffer;
  
 -	if ((!(mask & hw->debug_mask)) || !desc)
 +	if ((!(mask & hw->debug_mask)) || (desc == NULL))
  		return;
  
- 	i40e_debug(hw, mask,
+ 	iavf_debug(hw, mask,
  		   "AQ CMD: opcode 0x%04X, flags 0x%04X, datalen 0x%04X, retval 0x%04X\n",
  		   le16_to_cpu(aq_desc->opcode),
  		   le16_to_cpu(aq_desc->flags),
@@@ -304,10 -282,10 +308,10 @@@
  		   le32_to_cpu(aq_desc->params.external.addr_high),
  		   le32_to_cpu(aq_desc->params.external.addr_low));
  
 -	if (buffer && aq_desc->datalen) {
 +	if ((buffer != NULL) && (aq_desc->datalen != 0)) {
  		u16 len = le16_to_cpu(aq_desc->datalen);
  
- 		i40e_debug(hw, mask, "AQ CMD Buffer:\n");
+ 		iavf_debug(hw, mask, "AQ CMD Buffer:\n");
  		if (buf_len < len)
  			len = buf_len;
  		/* write the full 16-byte chunks */
diff --cc drivers/net/ethernet/intel/i40evf/i40e_osdep.h
index d394f0fe8516,412d534a4bbe..000000000000
--- a/drivers/net/ethernet/intel/i40evf/i40e_osdep.h
+++ b/drivers/net/ethernet/intel/i40evf/i40e_osdep.h
@@@ -41,12 -41,12 +41,17 @@@ struct i40e_virt_mem 
  	void *va;
  	u32 size;
  };
 -#define i40e_allocate_virt_mem(h, m, s) iavf_allocate_virt_mem_d(h, m, s)
 -#define i40e_free_virt_mem(h, m) iavf_free_virt_mem_d(h, m)
 +#define i40e_allocate_virt_mem(h, m, s) i40evf_allocate_virt_mem_d(h, m, s)
 +#define i40e_free_virt_mem(h, m) i40evf_free_virt_mem_d(h, m)
  
++<<<<<<< HEAD:drivers/net/ethernet/intel/i40evf/i40e_osdep.h
 +#define i40e_debug(h, m, s, ...)  i40evf_debug_d(h, m, s, ##__VA_ARGS__)
 +extern void i40evf_debug_d(void *hw, u32 mask, char *fmt_str, ...)
++=======
+ #define iavf_debug(h, m, s, ...)  iavf_debug_d(h, m, s, ##__VA_ARGS__)
+ extern void iavf_debug_d(void *hw, u32 mask, char *fmt_str, ...)
++>>>>>>> f1aa1abaf5a6 (iavf: replace i40e_debug with iavf version):drivers/net/ethernet/intel/iavf/i40e_osdep.h
  	__attribute__ ((format(gnu_printf, 3, 4)));
  
 -typedef enum i40e_status_code iavf_status;
 +typedef enum i40e_status_code i40e_status;
  #endif /* _I40E_OSDEP_H_ */
* Unmerged path drivers/net/ethernet/intel/iavf/i40e_prototype.h
* Unmerged path drivers/net/ethernet/intel/iavf/i40e_type.h
* Unmerged path drivers/net/ethernet/intel/i40evf/i40e_adminq.c
* Unmerged path drivers/net/ethernet/intel/i40evf/i40e_common.c
* Unmerged path drivers/net/ethernet/intel/i40evf/i40e_osdep.h
* Unmerged path drivers/net/ethernet/intel/iavf/i40e_prototype.h
* Unmerged path drivers/net/ethernet/intel/iavf/i40e_type.h
