powerpc/tm: Add commandline option to disable hardware transactional memory

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [powerpc] tm: Add commandline option to disable hardware transactional memory (Steve Best) [1694778]
Rebuild_FUZZ: 94.37%
commit-author Cyril Bur <cyrilbur@gmail.com>
commit 07fd1761e1cd2b5ecdb470fc228d52ccdf75e05b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/07fd1761.failed

Currently the kernel relies on firmware to inform it whether or not the
CPU supports HTM and as long as the kernel was built with
CONFIG_PPC_TRANSACTIONAL_MEM=y then it will allow userspace to make
use of the facility.

There may be situations where it would be advantageous for the kernel
to not allow userspace to use HTM, currently the only way to achieve
this is to recompile the kernel with CONFIG_PPC_TRANSACTIONAL_MEM=n.

This patch adds a simple commandline option so that HTM can be
disabled at boot time.

	Signed-off-by: Cyril Bur <cyrilbur@gmail.com>
[mpe: Simplify to a bool, move to prom.c, put doco in the right place.
 Always disable, regardless of initial state, to avoid user confusion.]
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 07fd1761e1cd2b5ecdb470fc228d52ccdf75e05b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/kernel-parameters.txt
diff --cc Documentation/kernel-parameters.txt
index f6852ae416ce,ef03e6e16bdb..000000000000
--- a/Documentation/kernel-parameters.txt
+++ b/Documentation/kernel-parameters.txt
@@@ -2857,6 -3173,22 +2857,25 @@@ bytes respectively. Such letter suffixe
  			may be specified.
  			Format: <port>,<port>....
  
++<<<<<<< HEAD:Documentation/kernel-parameters.txt
++=======
+ 	powersave=off	[PPC] This option disables power saving features.
+ 			It specifically disables cpuidle and sets the
+ 			platform machine description specific power_save
+ 			function to NULL. On Idle the CPU just reduces
+ 			execution priority.
+ 
+ 	ppc_strict_facility_enable
+ 			[PPC] This option catches any kernel floating point,
+ 			Altivec, VSX and SPE outside of regions specifically
+ 			allowed (eg kernel_enable_fpu()/kernel_disable_fpu()).
+ 			There is some performance impact when enabling this.
+ 
+ 	ppc_tm=		[PPC]
+ 			Format: {"off"}
+ 			Disable Hardware Transactional Memory
+ 
++>>>>>>> 07fd1761e1cd (powerpc/tm: Add commandline option to disable hardware transactional memory):Documentation/admin-guide/kernel-parameters.txt
  	print-fatal-signals=
  			[KNL] debug: print fatal signals
  
* Unmerged path Documentation/kernel-parameters.txt
diff --git a/arch/powerpc/kernel/prom.c b/arch/powerpc/kernel/prom.c
index 2fe27ea3bb30..269f8bbce54c 100644
--- a/arch/powerpc/kernel/prom.c
+++ b/arch/powerpc/kernel/prom.c
@@ -665,6 +665,35 @@ static void __init early_reserve_mem(void)
 	}
 }
 
+#ifdef CONFIG_PPC_TRANSACTIONAL_MEM
+static bool tm_disabled __initdata;
+
+static int __init parse_ppc_tm(char *str)
+{
+	bool res;
+
+	if (kstrtobool(str, &res))
+		return -EINVAL;
+
+	tm_disabled = !res;
+
+	return 0;
+}
+early_param("ppc_tm", parse_ppc_tm);
+
+static void __init tm_init(void)
+{
+	if (tm_disabled) {
+		pr_info("Disabling hardware transactional memory (HTM)\n");
+		cur_cpu_spec->cpu_user_features2 &=
+			~(PPC_FEATURE2_HTM_NOSC | PPC_FEATURE2_HTM);
+		cur_cpu_spec->cpu_features &= ~CPU_FTR_TM;
+	}
+}
+#else
+static void tm_init(void) { }
+#endif /* CONFIG_PPC_TRANSACTIONAL_MEM */
+
 void __init early_init_devtree(void *params)
 {
 	phys_addr_t limit;
@@ -764,6 +793,8 @@ void __init early_init_devtree(void *params)
 	of_scan_flat_dt(early_init_dt_scan_recoverable_ranges, NULL);
 #endif
 
+	tm_init();
+
 	DBG(" <- early_init_devtree()\n");
 }
 
