ASoC: Intel: hdac_hdmi: add Icelake support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: intel: hdac_hdmi: add Icelake support (Jaroslav Kysela) [1517622]
Rebuild_FUZZ: 93.48%
commit-author Bard liao <bard.liao@intel.com>
commit 019033c854a20e10f691f6cc0e897df8817d9521
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/019033c8.failed

Add Icelake device id. Also, Icelake's pin2port mapping table is
complicated. So we use a mapping table to do the pin2port mapping.

	Signed-off-by: Bard liao <bard.liao@intel.com>
	Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 019033c854a20e10f691f6cc0e897df8817d9521)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/hdac_hdmi.c
diff --cc sound/soc/codecs/hdac_hdmi.c
index 84f7a7a36e4b,fac397326515..000000000000
--- a/sound/soc/codecs/hdac_hdmi.c
+++ b/sound/soc/codecs/hdac_hdmi.c
@@@ -1542,19 -1545,52 +1551,55 @@@ free_widgets
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static int hdac_hdmi_pin2port(void *aptr, int pin)
+ {
+ 	struct hdac_device *hdev = aptr;
+ 	struct hdac_hdmi_priv *hdmi = hdev_to_hdmi_priv(hdev);
+ 	const int *map = hdmi->drv_data->port_map;
+ 	int i;
+ 
+ 	if (!hdmi->drv_data->port_num)
+ 		return pin - 4; /* map NID 0x05 -> port #1 */
+ 
+ 	/*
+ 	 * looking for the pin number in the mapping table and return
+ 	 * the index which indicate the port number
+ 	 */
+ 	for (i = 0; i < hdmi->drv_data->port_num; i++) {
+ 		if (pin == map[i])
+ 			return i + 1;
+ 	}
+ 
+ 	/* return -1 if pin number exceeds our expectation */
+ 	dev_err(&hdev->dev, "Can't find the port for pin %d\n", pin);
+ 	return -1;
+ }
+ 
++>>>>>>> 019033c854a2 (ASoC: Intel: hdac_hdmi: add Icelake support)
  static void hdac_hdmi_eld_notify_cb(void *aptr, int port, int pipe)
  {
 -	struct hdac_device *hdev = aptr;
 -	struct hdac_hdmi_priv *hdmi = hdev_to_hdmi_priv(hdev);
 +	struct hdac_ext_device *edev = aptr;
 +	struct hdac_hdmi_priv *hdmi = hdev_to_hdmi_priv(&edev->hdev);
  	struct hdac_hdmi_pin *pin = NULL;
  	struct hdac_hdmi_port *hport = NULL;
 -	struct snd_soc_component *component = hdmi->component;
 +	struct snd_soc_component *component = edev->scodec;
  	int i;
- 
- 	/* Don't know how this mapping is derived */
- 	hda_nid_t pin_nid = port + 0x04;
+ 	hda_nid_t pin_nid;
+ 
+ 	if (!hdmi->drv_data->port_num) {
+ 		/* for legacy platforms */
+ 		pin_nid = port + 0x04;
+ 	} else if (port < hdmi->drv_data->port_num) {
+ 		/* get pin number from the pin2port mapping table */
+ 		pin_nid = hdmi->drv_data->port_map[port - 1];
+ 	} else {
+ 		dev_err(&hdev->dev, "Can't find the pin for port %d\n", port);
+ 		return;
+ 	}
  
 -	dev_dbg(&hdev->dev, "%s: for pin:%d port=%d\n", __func__,
 +	dev_dbg(&edev->hdev.dev, "%s: for pin:%d port=%d\n", __func__,
  							pin_nid, pipe);
  
  	/*
@@@ -1984,13 -2021,12 +2035,13 @@@ static struct hdac_hdmi_drv_data intel_
  };
  
  static struct hdac_hdmi_drv_data intel_drv_data  = {
- 	.vendor_nid = INTEL_VENDOR_NID,
+ 	.vendor_nid = INTEL_VENDOR_NID_0x8,
  };
  
 -static int hdac_hdmi_dev_probe(struct hdac_device *hdev)
 +static int hdac_hdmi_dev_probe(struct hdac_ext_device *edev)
  {
 -	struct hdac_hdmi_priv *hdmi_priv = NULL;
 +	struct hdac_device *hdev = &edev->hdev;
 +	struct hdac_hdmi_priv *hdmi_priv;
  	struct snd_soc_dai_driver *hdmi_dais = NULL;
  	struct hdac_ext_link *hlink = NULL;
  	int num_dais = 0;
* Unmerged path sound/soc/codecs/hdac_hdmi.c
