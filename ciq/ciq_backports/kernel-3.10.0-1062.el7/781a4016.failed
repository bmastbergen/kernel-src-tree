ib_srpt: use kvmalloc to allocate ring pointers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jan Dakinevich <jan.dakinevich@virtuozzo.com>
commit 781a4016be54ac36b22eac2e84c7fe4cafd3492a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/781a4016.failed

An array of pointers to SRPT contexts in ib_device is over 30KiB even
in default case, in which an amount of contexts is 4095. The patch
is intended to weed out large contigous allocation for non-DMA memory.

	Signed-off-by: Jan Dakinevich <jan.dakinevich@virtuozzo.com>
	Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 781a4016be54ac36b22eac2e84c7fe4cafd3492a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srpt/ib_srpt.c
diff --cc drivers/infiniband/ulp/srpt/ib_srpt.c
index 14a3fdc6ef55,3cb99ca841bb..000000000000
--- a/drivers/infiniband/ulp/srpt/ib_srpt.c
+++ b/drivers/infiniband/ulp/srpt/ib_srpt.c
@@@ -720,7 -719,7 +720,11 @@@ static struct srpt_ioctx **srpt_alloc_i
  	WARN_ON(ioctx_size != sizeof(struct srpt_recv_ioctx)
  		&& ioctx_size != sizeof(struct srpt_send_ioctx));
  
++<<<<<<< HEAD
 +	ring = kmalloc(ring_size * sizeof(ring[0]), GFP_KERNEL);
++=======
+ 	ring = kvmalloc_array(ring_size, sizeof(ring[0]), GFP_KERNEL);
++>>>>>>> 781a4016be54 (ib_srpt: use kvmalloc to allocate ring pointers)
  	if (!ring)
  		goto out;
  	for (i = 0; i < ring_size; ++i) {
* Unmerged path drivers/infiniband/ulp/srpt/ib_srpt.c
