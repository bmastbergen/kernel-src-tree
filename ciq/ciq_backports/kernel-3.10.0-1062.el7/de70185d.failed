netfilter: nf_tables: deconstify walk callback function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit de70185de0333783154863278ac87bfbbc54e384
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/de70185d.failed

The flush operation needs to modify set and element objects, so let's
deconstify this.

	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit de70185de0333783154863278ac87bfbbc54e384)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_api.c
#	net/netfilter/nft_set_hash.c
diff --cc net/netfilter/nf_tables_api.c
index e2ddb2bff2ce,5bd0068320fb..000000000000
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@@ -3156,7 -3321,8 +3156,12 @@@ static int nf_tables_dump_setelem(cons
  static int nf_tables_dump_set(struct sk_buff *skb, struct netlink_callback *cb)
  {
  	struct net *net = sock_net(skb->sk);
++<<<<<<< HEAD
 +	const struct nft_set *set;
++=======
+ 	u8 genmask = nft_genmask_cur(net);
+ 	struct nft_set *set;
++>>>>>>> de70185de033 (netfilter: nf_tables: deconstify walk callback function)
  	struct nft_set_dump_args args;
  	struct nft_ctx ctx;
  	struct nlattr *nla[NFTA_SET_ELEM_LIST_MAX + 1];
@@@ -3649,6 -3889,34 +3654,37 @@@ err1
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ static int nft_flush_set(const struct nft_ctx *ctx,
+ 			 struct nft_set *set,
+ 			 const struct nft_set_iter *iter,
+ 			 struct nft_set_elem *elem)
+ {
+ 	struct nft_trans *trans;
+ 	int err;
+ 
+ 	trans = nft_trans_alloc_gfp(ctx, NFT_MSG_DELSETELEM,
+ 				    sizeof(struct nft_trans_elem), GFP_ATOMIC);
+ 	if (!trans)
+ 		return -ENOMEM;
+ 
+ 	if (!set->ops->deactivate_one(ctx->net, set, elem->priv)) {
+ 		err = -ENOENT;
+ 		goto err1;
+ 	}
+ 
+ 	nft_trans_elem_set(trans) = set;
+ 	nft_trans_elem(trans) = *elem;
+ 	list_add_tail(&trans->list, &ctx->net->nft.commit_list);
+ 
+ 	return 0;
+ err1:
+ 	kfree(trans);
+ 	return err;
+ }
+ 
++>>>>>>> de70185de033 (netfilter: nf_tables: deconstify walk callback function)
  static int nf_tables_delsetelem(struct net *net, struct sock *nlsk,
  				struct sk_buff *skb, const struct nlmsghdr *nlh,
  				const struct nlattr * const nla[])
* Unmerged path net/netfilter/nft_set_hash.c
diff --git a/include/net/netfilter/nf_tables.h b/include/net/netfilter/nf_tables.h
index aefa47fab07d..6e0fb272a9bb 100644
--- a/include/net/netfilter/nf_tables.h
+++ b/include/net/netfilter/nf_tables.h
@@ -204,9 +204,9 @@ struct nft_set_iter {
 	unsigned int	skip;
 	int		err;
 	int		(*fn)(const struct nft_ctx *ctx,
-			      const struct nft_set *set,
+			      struct nft_set *set,
 			      const struct nft_set_iter *iter,
-			      const struct nft_set_elem *elem);
+			      struct nft_set_elem *elem);
 };
 
 /**
@@ -289,7 +289,7 @@ struct nft_set_ops {
 	void				(*remove)(const struct nft_set *set,
 						  const struct nft_set_elem *elem);
 	void				(*walk)(const struct nft_ctx *ctx,
-						const struct nft_set *set,
+						struct nft_set *set,
 						struct nft_set_iter *iter);
 
 	unsigned int			(*privsize)(const struct nlattr * const nla[]);
* Unmerged path net/netfilter/nf_tables_api.c
diff --git a/net/netfilter/nft_rbtree.c b/net/netfilter/nft_rbtree.c
index 1c30f41cff5b..989c7560490c 100644
--- a/net/netfilter/nft_rbtree.c
+++ b/net/netfilter/nft_rbtree.c
@@ -171,7 +171,7 @@ static void *nft_rbtree_deactivate(const struct nft_set *set,
 }
 
 static void nft_rbtree_walk(const struct nft_ctx *ctx,
-			    const struct nft_set *set,
+			    struct nft_set *set,
 			    struct nft_set_iter *iter)
 {
 	const struct nft_rbtree *priv = nft_set_priv(set);
* Unmerged path net/netfilter/nft_set_hash.c
