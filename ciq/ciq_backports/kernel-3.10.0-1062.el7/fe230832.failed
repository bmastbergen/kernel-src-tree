xsk: add umem completion queue support and mmap

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Magnus Karlsson <magnus.karlsson@intel.com>
commit fe2308328cd2f26ebc986f543796e7d13ae00bc4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/fe230832.failed

Here, we add another setsockopt for registered user memory (umem)
called XDP_UMEM_COMPLETION_QUEUE. Using this socket option, the
process can ask the kernel to allocate a queue (ring buffer) and also
mmap it (XDP_UMEM_PGOFF_COMPLETION_QUEUE) into the process.

The queue is used to explicitly pass ownership of umem frames from the
kernel to user process. This will be used by the TX path to tell user
space that a certain frame has been transmitted and user space can use
it for something else, if it wishes.

	Signed-off-by: Magnus Karlsson <magnus.karlsson@intel.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit fe2308328cd2f26ebc986f543796e7d13ae00bc4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/if_xdp.h
#	net/xdp/xdp_umem.c
#	net/xdp/xdp_umem.h
#	net/xdp/xsk.c
* Unmerged path include/uapi/linux/if_xdp.h
* Unmerged path net/xdp/xdp_umem.c
* Unmerged path net/xdp/xdp_umem.h
* Unmerged path net/xdp/xsk.c
* Unmerged path include/uapi/linux/if_xdp.h
* Unmerged path net/xdp/xdp_umem.c
* Unmerged path net/xdp/xdp_umem.h
* Unmerged path net/xdp/xsk.c
