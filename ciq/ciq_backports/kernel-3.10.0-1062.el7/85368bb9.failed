rtc: simplify getting .drvdata

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [watchdog] simplify getting .drvdata (David Arcari) [1666393]
Rebuild_FUZZ: 90.91%
commit-author Wolfram Sang <wsa+renesas@sang-engineering.com>
commit 85368bb9de6366654f442e26fdd571981f205291
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/85368bb9.failed

We should get drvdata from struct device directly. Going via
platform_device is an unneeded step back and forth.

	Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
	Acked-by: Michal Simek <michal.simek@xilinx.com> (for zynqmp)
	Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
(cherry picked from commit 85368bb9de6366654f442e26fdd571981f205291)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/rtc/rtc-ds1685.c
#	drivers/rtc/rtc-m48t59.c
#	drivers/rtc/rtc-mxc.c
#	drivers/rtc/rtc-zynqmp.c
diff --cc drivers/rtc/rtc-m48t59.c
index 130f29af3869,1053a406b3aa..000000000000
--- a/drivers/rtc/rtc-m48t59.c
+++ b/drivers/rtc/rtc-m48t59.c
@@@ -67,9 -65,8 +65,14 @@@ m48t59_mem_readb(struct device *dev, u3
   */
  static int m48t59_rtc_read_time(struct device *dev, struct rtc_time *tm)
  {
++<<<<<<< HEAD
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct m48t59_plat_data *pdata = pdev->dev.platform_data;
 +	struct m48t59_private *m48t59 = platform_get_drvdata(pdev);
++=======
+ 	struct m48t59_plat_data *pdata = dev_get_platdata(dev);
+ 	struct m48t59_private *m48t59 = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	unsigned long flags;
  	u8 val;
  
@@@ -110,9 -107,8 +113,14 @@@
  
  static int m48t59_rtc_set_time(struct device *dev, struct rtc_time *tm)
  {
++<<<<<<< HEAD
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct m48t59_plat_data *pdata = pdev->dev.platform_data;
 +	struct m48t59_private *m48t59 = platform_get_drvdata(pdev);
++=======
+ 	struct m48t59_plat_data *pdata = dev_get_platdata(dev);
+ 	struct m48t59_private *m48t59 = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	unsigned long flags;
  	u8 val = 0;
  	int year = tm->tm_year;
@@@ -157,9 -153,8 +165,14 @@@
   */
  static int m48t59_rtc_readalarm(struct device *dev, struct rtc_wkalrm *alrm)
  {
++<<<<<<< HEAD
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct m48t59_plat_data *pdata = pdev->dev.platform_data;
 +	struct m48t59_private *m48t59 = platform_get_drvdata(pdev);
++=======
+ 	struct m48t59_plat_data *pdata = dev_get_platdata(dev);
+ 	struct m48t59_private *m48t59 = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	struct rtc_time *tm = &alrm->time;
  	unsigned long flags;
  	u8 val;
@@@ -204,9 -199,8 +217,14 @@@
   */
  static int m48t59_rtc_setalarm(struct device *dev, struct rtc_wkalrm *alrm)
  {
++<<<<<<< HEAD
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct m48t59_plat_data *pdata = pdev->dev.platform_data;
 +	struct m48t59_private *m48t59 = platform_get_drvdata(pdev);
++=======
+ 	struct m48t59_plat_data *pdata = dev_get_platdata(dev);
+ 	struct m48t59_private *m48t59 = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	struct rtc_time *tm = &alrm->time;
  	u8 mday, hour, min, sec;
  	unsigned long flags;
@@@ -265,9 -259,8 +283,14 @@@
   */
  static int m48t59_rtc_alarm_irq_enable(struct device *dev, unsigned int enabled)
  {
++<<<<<<< HEAD
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct m48t59_plat_data *pdata = pdev->dev.platform_data;
 +	struct m48t59_private *m48t59 = platform_get_drvdata(pdev);
++=======
+ 	struct m48t59_plat_data *pdata = dev_get_platdata(dev);
+ 	struct m48t59_private *m48t59 = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	unsigned long flags;
  
  	spin_lock_irqsave(&m48t59->lock, flags);
@@@ -282,9 -275,8 +305,14 @@@
  
  static int m48t59_rtc_proc(struct device *dev, struct seq_file *seq)
  {
++<<<<<<< HEAD
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct m48t59_plat_data *pdata = pdev->dev.platform_data;
 +	struct m48t59_private *m48t59 = platform_get_drvdata(pdev);
++=======
+ 	struct m48t59_plat_data *pdata = dev_get_platdata(dev);
+ 	struct m48t59_private *m48t59 = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	unsigned long flags;
  	u8 val;
  
@@@ -303,9 -295,8 +331,14 @@@
  static irqreturn_t m48t59_rtc_interrupt(int irq, void *dev_id)
  {
  	struct device *dev = (struct device *)dev_id;
++<<<<<<< HEAD
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct m48t59_plat_data *pdata = pdev->dev.platform_data;
 +	struct m48t59_private *m48t59 = platform_get_drvdata(pdev);
++=======
+ 	struct m48t59_plat_data *pdata = dev_get_platdata(dev);
+ 	struct m48t59_private *m48t59 = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	u8 event;
  
  	spin_lock(&m48t59->lock);
diff --cc drivers/rtc/rtc-mxc.c
index 9a3895bc4f4d,822ebe4be3c3..000000000000
--- a/drivers/rtc/rtc-mxc.c
+++ b/drivers/rtc/rtc-mxc.c
@@@ -106,10 -107,9 +106,9 @@@ static inline int is_imx1_rtc(struct rt
   * This function is used to obtain the RTC time or the alarm value in
   * second.
   */
 -static time64_t get_alarm_or_time(struct device *dev, int time_alarm)
 +static u32 get_alarm_or_time(struct device *dev, int time_alarm)
  {
- 	struct platform_device *pdev = to_platform_device(dev);
- 	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+ 	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
  	void __iomem *ioaddr = pdata->ioaddr;
  	u32 day = 0, hr = 0, min = 0, sec = 0, hr_min = 0;
  
@@@ -135,23 -135,21 +134,28 @@@
  /*
   * This function sets the RTC alarm value or the time value.
   */
 -static void set_alarm_or_time(struct device *dev, int time_alarm, time64_t time)
 +static void set_alarm_or_time(struct device *dev, int time_alarm, u32 time)
  {
++<<<<<<< HEAD
 +	u32 day, hr, min, sec, temp;
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
++=======
+ 	u32 tod, day, hr, min, sec, temp;
+ 	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	void __iomem *ioaddr = pdata->ioaddr;
  
 -	day = div_s64_rem(time, 86400, &tod);
 +	day = time / 86400;
 +	time -= day * 86400;
  
  	/* time is within a day now */
 -	hr = tod / 3600;
 -	tod -= hr * 3600;
 +	hr = time / 3600;
 +	time -= hr * 3600;
  
  	/* time is within an hour now */
 -	min = tod / 60;
 -	sec = tod - min * 60;
 +	min = time / 60;
 +	sec = time - min * 60;
  
  	temp = (hr << 8) + min;
  
@@@ -173,23 -171,13 +177,28 @@@
   * This function updates the RTC alarm registers and then clears all the
   * interrupt status bits.
   */
 -static void rtc_update_alarm(struct device *dev, struct rtc_time *alrm)
 +static int rtc_update_alarm(struct device *dev, struct rtc_time *alrm)
  {
++<<<<<<< HEAD
 +	struct rtc_time alarm_tm, now_tm;
 +	unsigned long now, time;
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
++=======
+ 	time64_t time;
+ 	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  	void __iomem *ioaddr = pdata->ioaddr;
  
 -	time = rtc_tm_to_time64(alrm);
 +	now = get_alarm_or_time(dev, MXC_RTC_TIME);
 +	rtc_time_to_tm(now, &now_tm);
 +	alarm_tm.tm_year = now_tm.tm_year;
 +	alarm_tm.tm_mon = now_tm.tm_mon;
 +	alarm_tm.tm_mday = now_tm.tm_mday;
 +	alarm_tm.tm_hour = alrm->tm_hour;
 +	alarm_tm.tm_min = alrm->tm_min;
 +	alarm_tm.tm_sec = alrm->tm_sec;
 +	rtc_tm_to_time(&alarm_tm, &time);
  
  	/* clear all the interrupt status bits */
  	writew(readw(ioaddr + RTC_RTCISR), ioaddr + RTC_RTCISR);
@@@ -298,10 -260,9 +306,9 @@@ static int mxc_rtc_read_time(struct dev
  /*
   * This function sets the internal RTC time based on tm in Gregorian date.
   */
 -static int mxc_rtc_set_mmss(struct device *dev, time64_t time)
 +static int mxc_rtc_set_mmss(struct device *dev, unsigned long time)
  {
- 	struct platform_device *pdev = to_platform_device(dev);
- 	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+ 	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
  
  	/*
  	 * TTC_DAYR register is 9-bit in MX1 SoC, save time and day of year only
@@@ -329,11 -290,10 +336,10 @@@
   */
  static int mxc_rtc_read_alarm(struct device *dev, struct rtc_wkalrm *alrm)
  {
- 	struct platform_device *pdev = to_platform_device(dev);
- 	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+ 	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
  	void __iomem *ioaddr = pdata->ioaddr;
  
 -	rtc_time64_to_tm(get_alarm_or_time(dev, MXC_RTC_ALARM), &alrm->time);
 +	rtc_time_to_tm(get_alarm_or_time(dev, MXC_RTC_ALARM), &alrm->time);
  	alrm->pending = ((readw(ioaddr + RTC_RTCISR) & RTC_ALM_BIT)) ? 1 : 0;
  
  	return 0;
@@@ -344,13 -304,9 +350,17 @@@
   */
  static int mxc_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
  {
++<<<<<<< HEAD
 +	struct platform_device *pdev = to_platform_device(dev);
 +	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
 +	int ret;
++=======
+ 	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
++>>>>>>> 85368bb9de63 (rtc: simplify getting .drvdata)
  
 -	rtc_update_alarm(dev, &alrm->time);
 +	ret = rtc_update_alarm(dev, &alrm->time);
 +	if (ret)
 +		return ret;
  
  	memcpy(&pdata->g_rtc_alarm, &alrm->time, sizeof(struct rtc_time));
  	mxc_rtc_irq_enable(dev, RTC_ALM_BIT, alrm->enabled);
* Unmerged path drivers/rtc/rtc-ds1685.c
* Unmerged path drivers/rtc/rtc-zynqmp.c
diff --git a/drivers/rtc/rtc-bq4802.c b/drivers/rtc/rtc-bq4802.c
index af2886784a7b..cd522e087df0 100644
--- a/drivers/rtc/rtc-bq4802.c
+++ b/drivers/rtc/rtc-bq4802.c
@@ -48,8 +48,7 @@ static void bq4802_write_mem(struct bq4802 *p, int off, u8 val)
 
 static int bq4802_read_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct bq4802 *p = platform_get_drvdata(pdev);
+	struct bq4802 *p = dev_get_drvdata(dev);
 	unsigned long flags;
 	unsigned int century;
 	u8 val;
@@ -91,8 +90,7 @@ static int bq4802_read_time(struct device *dev, struct rtc_time *tm)
 
 static int bq4802_set_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct bq4802 *p = platform_get_drvdata(pdev);
+	struct bq4802 *p = dev_get_drvdata(dev);
 	u8 sec, min, hrs, day, mon, yrs, century, val;
 	unsigned long flags;
 	unsigned int year;
diff --git a/drivers/rtc/rtc-ds1216.c b/drivers/rtc/rtc-ds1216.c
index c7702b7269f7..9f380ff389ed 100644
--- a/drivers/rtc/rtc-ds1216.c
+++ b/drivers/rtc/rtc-ds1216.c
@@ -78,8 +78,7 @@ static void ds1216_switch_ds_to_clock(u8 __iomem *ioaddr)
 
 static int ds1216_rtc_read_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct ds1216_priv *priv = platform_get_drvdata(pdev);
+	struct ds1216_priv *priv = dev_get_drvdata(dev);
 	struct ds1216_regs regs;
 
 	ds1216_switch_ds_to_clock(priv->ioaddr);
@@ -106,8 +105,7 @@ static int ds1216_rtc_read_time(struct device *dev, struct rtc_time *tm)
 
 static int ds1216_rtc_set_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct ds1216_priv *priv = platform_get_drvdata(pdev);
+	struct ds1216_priv *priv = dev_get_drvdata(dev);
 	struct ds1216_regs regs;
 
 	ds1216_switch_ds_to_clock(priv->ioaddr);
diff --git a/drivers/rtc/rtc-ds1511.c b/drivers/rtc/rtc-ds1511.c
index 6ce8a997cf51..176ca4660b45 100644
--- a/drivers/rtc/rtc-ds1511.c
+++ b/drivers/rtc/rtc-ds1511.c
@@ -325,8 +325,7 @@ ds1511_rtc_update_alarm(struct rtc_plat_data *pdata)
  static int
 ds1511_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
@@ -345,8 +344,7 @@ ds1511_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
  static int
 ds1511_rtc_read_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
@@ -385,8 +383,7 @@ ds1511_interrupt(int irq, void *dev_id)
 
 static int ds1511_rtc_alarm_irq_enable(struct device *dev, unsigned int enabled)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
diff --git a/drivers/rtc/rtc-ds1553.c b/drivers/rtc/rtc-ds1553.c
index 8c6c952e90b1..89f82179fce9 100644
--- a/drivers/rtc/rtc-ds1553.c
+++ b/drivers/rtc/rtc-ds1553.c
@@ -75,8 +75,7 @@ struct rtc_plat_data {
 
 static int ds1553_rtc_set_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 	void __iomem *ioaddr = pdata->ioaddr;
 	u8 century;
 
@@ -100,8 +99,7 @@ static int ds1553_rtc_set_time(struct device *dev, struct rtc_time *tm)
 
 static int ds1553_rtc_read_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 	void __iomem *ioaddr = pdata->ioaddr;
 	unsigned int year, month, day, hour, minute, second, week;
 	unsigned int century;
@@ -161,8 +159,7 @@ static void ds1553_rtc_update_alarm(struct rtc_plat_data *pdata)
 
 static int ds1553_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
@@ -178,8 +175,7 @@ static int ds1553_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 
 static int ds1553_rtc_read_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
@@ -215,8 +211,7 @@ static irqreturn_t ds1553_rtc_interrupt(int irq, void *dev_id)
 
 static int ds1553_rtc_alarm_irq_enable(struct device *dev, unsigned int enabled)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
* Unmerged path drivers/rtc/rtc-ds1685.c
diff --git a/drivers/rtc/rtc-ds1742.c b/drivers/rtc/rtc-ds1742.c
index eccdc62ae1c0..ab8a8b4814fc 100644
--- a/drivers/rtc/rtc-ds1742.c
+++ b/drivers/rtc/rtc-ds1742.c
@@ -63,8 +63,7 @@ struct rtc_plat_data {
 
 static int ds1742_rtc_set_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 	void __iomem *ioaddr = pdata->ioaddr_rtc;
 	u8 century;
 
@@ -88,8 +87,7 @@ static int ds1742_rtc_set_time(struct device *dev, struct rtc_time *tm)
 
 static int ds1742_rtc_read_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 	void __iomem *ioaddr = pdata->ioaddr_rtc;
 	unsigned int year, month, day, hour, minute, second, week;
 	unsigned int century;
diff --git a/drivers/rtc/rtc-lpc32xx.c b/drivers/rtc/rtc-lpc32xx.c
index 787550d756e9..c71f15a221d0 100644
--- a/drivers/rtc/rtc-lpc32xx.c
+++ b/drivers/rtc/rtc-lpc32xx.c
@@ -314,11 +314,10 @@ static int lpc32xx_rtc_remove(struct platform_device *pdev)
 #ifdef CONFIG_PM
 static int lpc32xx_rtc_suspend(struct device *dev)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct lpc32xx_rtc *rtc = platform_get_drvdata(pdev);
+	struct lpc32xx_rtc *rtc = dev_get_drvdata(dev);
 
 	if (rtc->irq >= 0) {
-		if (device_may_wakeup(&pdev->dev))
+		if (device_may_wakeup(dev))
 			enable_irq_wake(rtc->irq);
 		else
 			disable_irq_wake(rtc->irq);
@@ -329,10 +328,9 @@ static int lpc32xx_rtc_suspend(struct device *dev)
 
 static int lpc32xx_rtc_resume(struct device *dev)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct lpc32xx_rtc *rtc = platform_get_drvdata(pdev);
+	struct lpc32xx_rtc *rtc = dev_get_drvdata(dev);
 
-	if (rtc->irq >= 0 && device_may_wakeup(&pdev->dev))
+	if (rtc->irq >= 0 && device_may_wakeup(dev))
 		disable_irq_wake(rtc->irq);
 
 	return 0;
@@ -341,8 +339,7 @@ static int lpc32xx_rtc_resume(struct device *dev)
 /* Unconditionally disable the alarm */
 static int lpc32xx_rtc_freeze(struct device *dev)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct lpc32xx_rtc *rtc = platform_get_drvdata(pdev);
+	struct lpc32xx_rtc *rtc = dev_get_drvdata(dev);
 
 	spin_lock_irq(&rtc->lock);
 
@@ -357,8 +354,7 @@ static int lpc32xx_rtc_freeze(struct device *dev)
 
 static int lpc32xx_rtc_thaw(struct device *dev)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct lpc32xx_rtc *rtc = platform_get_drvdata(pdev);
+	struct lpc32xx_rtc *rtc = dev_get_drvdata(dev);
 
 	if (rtc->alarm_enabled) {
 		spin_lock_irq(&rtc->lock);
* Unmerged path drivers/rtc/rtc-m48t59.c
diff --git a/drivers/rtc/rtc-mv.c b/drivers/rtc/rtc-mv.c
index baab802f2153..60a308af7dfa 100644
--- a/drivers/rtc/rtc-mv.c
+++ b/drivers/rtc/rtc-mv.c
@@ -175,8 +175,7 @@ static int mv_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alm)
 
 static int mv_rtc_alarm_irq_enable(struct device *dev, unsigned int enabled)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 	void __iomem *ioaddr = pdata->ioaddr;
 
 	if (pdata->irq < 0)
* Unmerged path drivers/rtc/rtc-mxc.c
diff --git a/drivers/rtc/rtc-pcap.c b/drivers/rtc/rtc-pcap.c
index 539a90b98bc5..62b897c1ac32 100644
--- a/drivers/rtc/rtc-pcap.c
+++ b/drivers/rtc/rtc-pcap.c
@@ -43,8 +43,7 @@ static irqreturn_t pcap_rtc_irq(int irq, void *_pcap_rtc)
 
 static int pcap_rtc_read_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct pcap_rtc *pcap_rtc = platform_get_drvdata(pdev);
+	struct pcap_rtc *pcap_rtc = dev_get_drvdata(dev);
 	struct rtc_time *tm = &alrm->time;
 	unsigned long secs;
 	u32 tod;	/* time of day, seconds since midnight */
@@ -63,8 +62,7 @@ static int pcap_rtc_read_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 
 static int pcap_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct pcap_rtc *pcap_rtc = platform_get_drvdata(pdev);
+	struct pcap_rtc *pcap_rtc = dev_get_drvdata(dev);
 	struct rtc_time *tm = &alrm->time;
 	unsigned long secs;
 	u32 tod, days;
@@ -82,8 +80,7 @@ static int pcap_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 
 static int pcap_rtc_read_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct pcap_rtc *pcap_rtc = platform_get_drvdata(pdev);
+	struct pcap_rtc *pcap_rtc = dev_get_drvdata(dev);
 	unsigned long secs;
 	u32 tod, days;
 
@@ -100,8 +97,7 @@ static int pcap_rtc_read_time(struct device *dev, struct rtc_time *tm)
 
 static int pcap_rtc_set_mmss(struct device *dev, unsigned long secs)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct pcap_rtc *pcap_rtc = platform_get_drvdata(pdev);
+	struct pcap_rtc *pcap_rtc = dev_get_drvdata(dev);
 	u32 tod, days;
 
 	tod = secs % SEC_PER_DAY;
@@ -115,8 +111,7 @@ static int pcap_rtc_set_mmss(struct device *dev, unsigned long secs)
 
 static int pcap_rtc_irq_enable(struct device *dev, int pirq, unsigned int en)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct pcap_rtc *pcap_rtc = platform_get_drvdata(pdev);
+	struct pcap_rtc *pcap_rtc = dev_get_drvdata(dev);
 
 	if (en)
 		enable_irq(pcap_to_irq(pcap_rtc->pcap, pirq));
diff --git a/drivers/rtc/rtc-sh.c b/drivers/rtc/rtc-sh.c
index 8d5bd2e36776..7730e5c6acdd 100644
--- a/drivers/rtc/rtc-sh.c
+++ b/drivers/rtc/rtc-sh.c
@@ -352,8 +352,7 @@ static int sh_rtc_alarm_irq_enable(struct device *dev, unsigned int enabled)
 
 static int sh_rtc_read_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct sh_rtc *rtc = platform_get_drvdata(pdev);
+	struct sh_rtc *rtc = dev_get_drvdata(dev);
 	unsigned int sec128, sec2, yr, yr100, cf_bit;
 
 	do {
@@ -412,8 +411,7 @@ static int sh_rtc_read_time(struct device *dev, struct rtc_time *tm)
 
 static int sh_rtc_set_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct sh_rtc *rtc = platform_get_drvdata(pdev);
+	struct sh_rtc *rtc = dev_get_drvdata(dev);
 	unsigned int tmp;
 	int year;
 
@@ -468,8 +466,7 @@ static inline int sh_rtc_read_alarm_value(struct sh_rtc *rtc, int reg_off)
 
 static int sh_rtc_read_alarm(struct device *dev, struct rtc_wkalrm *wkalrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct sh_rtc *rtc = platform_get_drvdata(pdev);
+	struct sh_rtc *rtc = dev_get_drvdata(dev);
 	struct rtc_time *tm = &wkalrm->time;
 
 	spin_lock_irq(&rtc->lock);
@@ -538,8 +535,7 @@ static int sh_rtc_check_alarm(struct rtc_time *tm)
 
 static int sh_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *wkalrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct sh_rtc *rtc = platform_get_drvdata(pdev);
+	struct sh_rtc *rtc = dev_get_drvdata(dev);
 	unsigned int rcr1;
 	struct rtc_time *tm = &wkalrm->time;
 	int mon, err;
@@ -779,8 +775,7 @@ static int __exit sh_rtc_remove(struct platform_device *pdev)
 
 static void sh_rtc_set_irq_wake(struct device *dev, int enabled)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct sh_rtc *rtc = platform_get_drvdata(pdev);
+	struct sh_rtc *rtc = dev_get_drvdata(dev);
 
 	irq_set_irq_wake(rtc->periodic_irq, enabled);
 
diff --git a/drivers/rtc/rtc-stk17ta8.c b/drivers/rtc/rtc-stk17ta8.c
index af5e97e3f272..3c82ec78854d 100644
--- a/drivers/rtc/rtc-stk17ta8.c
+++ b/drivers/rtc/rtc-stk17ta8.c
@@ -76,8 +76,7 @@ struct rtc_plat_data {
 
 static int stk17ta8_rtc_set_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 	void __iomem *ioaddr = pdata->ioaddr;
 	u8 flags;
 
@@ -99,8 +98,7 @@ static int stk17ta8_rtc_set_time(struct device *dev, struct rtc_time *tm)
 
 static int stk17ta8_rtc_read_time(struct device *dev, struct rtc_time *tm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 	void __iomem *ioaddr = pdata->ioaddr;
 	unsigned int year, month, day, hour, minute, second, week;
 	unsigned int century;
@@ -169,8 +167,7 @@ static void stk17ta8_rtc_update_alarm(struct rtc_plat_data *pdata)
 
 static int stk17ta8_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
@@ -186,8 +183,7 @@ static int stk17ta8_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 
 static int stk17ta8_rtc_read_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
@@ -224,8 +220,7 @@ static irqreturn_t stk17ta8_rtc_interrupt(int irq, void *dev_id)
 static int stk17ta8_rtc_alarm_irq_enable(struct device *dev,
 	unsigned int enabled)
 {
-	struct platform_device *pdev = to_platform_device(dev);
-	struct rtc_plat_data *pdata = platform_get_drvdata(pdev);
+	struct rtc_plat_data *pdata = dev_get_drvdata(dev);
 
 	if (pdata->irq <= 0)
 		return -EINVAL;
diff --git a/drivers/rtc/rtc-test.c b/drivers/rtc/rtc-test.c
index 7746e65b93f2..f1e7e12f4a03 100644
--- a/drivers/rtc/rtc-test.c
+++ b/drivers/rtc/rtc-test.c
@@ -74,8 +74,7 @@ static ssize_t test_irq_store(struct device *dev,
 				const char *buf, size_t count)
 {
 	int retval;
-	struct platform_device *plat_dev = to_platform_device(dev);
-	struct rtc_device *rtc = platform_get_drvdata(plat_dev);
+	struct rtc_device *rtc = dev_get_drvdata(dev);
 
 	retval = count;
 	if (strncmp(buf, "tick", 4) == 0 && rtc->pie_enabled)
* Unmerged path drivers/rtc/rtc-zynqmp.c
