cnic: tidy up a size calculation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 5037c6280606396ab4d3065b066d4b574df020dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/5037c628.failed

Static checkers complain that id_tbl->table points to longs and 4 bytes
is smaller than sizeof(long).  But the since other side is dividing by
32 instead of sizeof(long), that means the current code works fine.

Anyway, it's more conventional to use the BITS_TO_LONGS() macro when
we're allocating a bitmap.

	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5037c6280606396ab4d3065b066d4b574df020dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/cnic.c
diff --cc drivers/net/ethernet/broadcom/cnic.c
index 7f987a650bad,4fd829b5e65d..000000000000
--- a/drivers/net/ethernet/broadcom/cnic.c
+++ b/drivers/net/ethernet/broadcom/cnic.c
@@@ -660,7 -660,7 +660,11 @@@ static int cnic_init_id_tbl(struct cnic
  	id_tbl->max = size;
  	id_tbl->next = next;
  	spin_lock_init(&id_tbl->lock);
++<<<<<<< HEAD
 +	id_tbl->table = kzalloc(DIV_ROUND_UP(size, 32) * 4, GFP_KERNEL);
++=======
+ 	id_tbl->table = kcalloc(BITS_TO_LONGS(size), sizeof(long), GFP_KERNEL);
++>>>>>>> 5037c6280606 (cnic: tidy up a size calculation)
  	if (!id_tbl->table)
  		return -ENOMEM;
  
* Unmerged path drivers/net/ethernet/broadcom/cnic.c
