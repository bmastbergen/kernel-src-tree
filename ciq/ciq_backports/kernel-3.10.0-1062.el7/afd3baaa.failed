net/mlx5e: TLS, add software statistics

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: TLS, add software statistics (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 94.59%
commit-author Boris Pismenny <borisp@mellanox.com>
commit afd3baaa938ce85dc738cd9279716cdb684cc707
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/afd3baaa.failed

This patch adds software statistics for TLS to count important
events.

	Signed-off-by: Boris Pismenny <borisp@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit afd3baaa938ce85dc738cd9279716cdb684cc707)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls_rxtx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.h
index 4614c175eac4,3f5d72163b56..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.h
@@@ -38,8 -38,23 +38,28 @@@
  #include <net/tls.h>
  #include "en.h"
  
++<<<<<<< HEAD
 +struct mlx5e_tls_offload_context {
 +	struct tls_offload_context base;
++=======
+ struct mlx5e_tls_sw_stats {
+ 	atomic64_t tx_tls_drop_metadata;
+ 	atomic64_t tx_tls_drop_resync_alloc;
+ 	atomic64_t tx_tls_drop_no_sync_data;
+ 	atomic64_t tx_tls_drop_bypass_required;
+ 	atomic64_t rx_tls_drop_resync_request;
+ 	atomic64_t rx_tls_resync_request;
+ 	atomic64_t rx_tls_resync_reply;
+ 	atomic64_t rx_tls_auth_fail;
+ };
+ 
+ struct mlx5e_tls {
+ 	struct mlx5e_tls_sw_stats sw_stats;
+ };
+ 
+ struct mlx5e_tls_offload_context_tx {
+ 	struct tls_offload_context_tx base;
++>>>>>>> afd3baaa938c (net/mlx5e: TLS, add software statistics)
  	u32 expected_seq;
  	__be32 swid;
  };
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls_rxtx.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
index 821afce60a87..55becee9d6b6 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
@@ -169,7 +169,10 @@ static void mlx5e_tls_resync_rx(struct net_device *netdev, struct sock *sk,
 
 	rx_ctx = mlx5e_get_tls_rx_context(tls_ctx);
 
+	netdev_info(netdev, "resyncing seq %d rcd %lld\n", seq,
+		    be64_to_cpu(rcd_sn));
 	mlx5_accel_tls_resync_rx(priv->mdev, rx_ctx->handle, seq, rcd_sn);
+	atomic64_inc(&priv->tls->sw_stats.rx_tls_resync_reply);
 }
 
 static const struct tlsdev_ops mlx5e_tls_ops = {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls_rxtx.c
