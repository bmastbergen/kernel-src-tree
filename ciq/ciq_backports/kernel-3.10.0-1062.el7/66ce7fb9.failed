net: phy: export phy_{read,write}_mmd_indirect

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [kernel] phy: export phy_{read,write}_mmd_indirect (Ivan Vecera) [1655590]
Rebuild_FUZZ: 94.25%
commit-author Florian Fainelli <f.fainelli@gmail.com>
commit 66ce7fb9807b036058aa380bfd2b3851ae25ce39
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/66ce7fb9.failed

Some PHY drivers might need to access Clause 45 registers in Clause 22
compatibility mode to e.g: properly advertise EEE support when disabled
by default.

Export these two helper functions: phy_read_mmd_indirect() and
phy_write_mmd_indirect() for drivers to use them.

	Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 66ce7fb9807b036058aa380bfd2b3851ae25ce39)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phy.c
diff --cc drivers/net/phy/phy.c
index d633ebe4ad4e,e7a5893f32ff..000000000000
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@@ -933,14 -955,23 +933,20 @@@ static inline void mmd_phy_indirect(str
   * 3) Write reg 13 // MMD Data Command for MMD DEVAD
   * 3) Read  reg 14 // Read MMD data
   */
++<<<<<<< HEAD
 +static int phy_read_mmd_indirect(struct mii_bus *bus, int prtad, int devad,
 +				 int addr)
++=======
+ int phy_read_mmd_indirect(struct phy_device *phydev, int prtad,
+ 				 int devad, int addr)
++>>>>>>> 66ce7fb9807b (net: phy: export phy_{read,write}_mmd_indirect)
  {
 -	struct phy_driver *phydrv = phydev->drv;
 -	int value = -1;
 -
 -	if (phydrv->read_mmd_indirect == NULL) {
 -		mmd_phy_indirect(phydev->bus, prtad, devad, addr);
 +	mmd_phy_indirect(bus, prtad, devad, addr);
  
 -		/* Read the content of the MMD's selected register */
 -		value = phydev->bus->read(phydev->bus, addr, MII_MMD_DATA);
 -	} else {
 -		value = phydrv->read_mmd_indirect(phydev, prtad, devad, addr);
 -	}
 -	return value;
 +	/* Read the content of the MMD's selected register */
 +	return bus->read(bus, addr, MII_MMD_DATA);
  }
+ EXPORT_SYMBOL(phy_read_mmd_indirect);
  
  /**
   * phy_write_mmd_indirect - writes data to the MMD registers
@@@ -958,14 -989,21 +964,20 @@@
   * 3) Write reg 13 // MMD Data Command for MMD DEVAD
   * 3) Write reg 14 // Write MMD data
   */
++<<<<<<< HEAD
 +static void phy_write_mmd_indirect(struct mii_bus *bus, int prtad, int devad,
 +				   int addr, u32 data)
++=======
+ void phy_write_mmd_indirect(struct phy_device *phydev, int prtad,
+ 				   int devad, int addr, u32 data)
++>>>>>>> 66ce7fb9807b (net: phy: export phy_{read,write}_mmd_indirect)
  {
 -	struct phy_driver *phydrv = phydev->drv;
 +	mmd_phy_indirect(bus, prtad, devad, addr);
  
 -	if (phydrv->write_mmd_indirect == NULL) {
 -		mmd_phy_indirect(phydev->bus, prtad, devad, addr);
 -
 -		/* Write the data into MMD's selected register */
 -		phydev->bus->write(phydev->bus, addr, MII_MMD_DATA, data);
 -	} else {
 -		phydrv->write_mmd_indirect(phydev, prtad, devad, addr, data);
 -	}
 +	/* Write the data into MMD's selected register */
 +	bus->write(bus, addr, MII_MMD_DATA, data);
  }
+ EXPORT_SYMBOL(phy_write_mmd_indirect);
  
  /**
   * phy_init_eee - init and check the EEE feature
* Unmerged path drivers/net/phy/phy.c
diff --git a/include/linux/phy.h b/include/linux/phy.h
index d740e3ea3614..1dff93586a0a 100644
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@ -562,6 +562,19 @@ static inline int phy_read_mmd(struct phy_device *phydev, int devad, u32 regnum)
 			    MII_ADDR_C45 | (devad << 16) | (regnum & 0xffff));
 }
 
+/**
+ * phy_read_mmd_indirect - reads data from the MMD registers
+ * @phydev: The PHY device bus
+ * @prtad: MMD Address
+ * @devad: MMD DEVAD
+ * @addr: PHY address on the MII bus
+ *
+ * Description: it reads data from the MMD registers (clause 22 to access to
+ * clause 45) of the specified phy address.
+ */
+int phy_read_mmd_indirect(struct phy_device *phydev, int prtad,
+			  int devad, int addr);
+
 /**
  * phy_read - Convenience function for reading a given PHY register
  * @phydev: the phy_device struct
@@ -633,6 +646,20 @@ static inline int phy_write_mmd(struct phy_device *phydev, int devad,
 	return mdiobus_write(phydev->bus, phydev->addr, regnum, val);
 }
 
+/**
+ * phy_write_mmd_indirect - writes data to the MMD registers
+ * @phydev: The PHY device
+ * @prtad: MMD Address
+ * @devad: MMD DEVAD
+ * @addr: PHY address on the MII bus
+ * @data: data to write in the MMD register
+ *
+ * Description: Write data from the MMD registers of the specified
+ * phy address.
+ */
+void phy_write_mmd_indirect(struct phy_device *phydev, int prtad,
+			    int devad, int addr, u32 data);
+
 struct phy_device *phy_device_create(struct mii_bus *bus, int addr, int phy_id,
 				     bool is_c45,
 				     struct phy_c45_device_ids *c45_ids);
