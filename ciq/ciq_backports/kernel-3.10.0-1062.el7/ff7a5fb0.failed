overlayfs, locking: Remove smp_mb__before_spinlock() usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit ff7a5fb0f1d510997a845e0d227f30831ff38d9d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ff7a5fb0.failed

While we could replace the smp_mb__before_spinlock() with the new
smp_mb__after_spinlock(), the normal pattern is to use
smp_store_release() to publish an object that is used for
lockless_dereference() -- and mirrors the regular rcu_assign_pointer()
/ rcu_dereference() patterns.

	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Al Viro <viro@zeniv.linux.org.uk>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit ff7a5fb0f1d510997a845e0d227f30831ff38d9d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/readdir.c
diff --cc fs/overlayfs/readdir.c
index b6e3c4d4fef5,f0fd3adb1693..000000000000
--- a/fs/overlayfs/readdir.c
+++ b/fs/overlayfs/readdir.c
@@@ -760,14 -446,14 +760,19 @@@ static int ovl_dir_fsync(struct file *f
  
  			ovl_path_upper(dentry, &upperpath);
  			realfile = ovl_path_open(&upperpath, O_RDONLY);
++<<<<<<< HEAD
 +			smp_mb__before_spinlock();
 +			mutex_lock(&inode->i_mutex);
++=======
+ 
+ 			inode_lock(inode);
++>>>>>>> ff7a5fb0f1d5 (overlayfs, locking: Remove smp_mb__before_spinlock() usage)
  			if (!od->upperfile) {
  				if (IS_ERR(realfile)) {
 -					inode_unlock(inode);
 +					mutex_unlock(&inode->i_mutex);
  					return PTR_ERR(realfile);
  				}
- 				od->upperfile = realfile;
+ 				smp_store_release(&od->upperfile, realfile);
  			} else {
  				/* somebody has beaten us to it */
  				if (!IS_ERR(realfile))
* Unmerged path fs/overlayfs/readdir.c
