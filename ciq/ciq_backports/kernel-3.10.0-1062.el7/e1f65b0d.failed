e1000e: allow non-monotonic SYSTIM readings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Miroslav Lichvar <mlichvar@redhat.com>
commit e1f65b0d70e9e5c80e15105cd96fa00174d7c436
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e1f65b0d.failed

It seems with some NICs supported by the e1000e driver a SYSTIM reading
may occasionally be few microseconds before the previous reading and if
enabled also pass e1000e_sanitize_systim() without reaching the maximum
number of rereads, even if the function is modified to check three
consecutive readings (i.e. it doesn't look like a double read error).
This causes an underflow in the timecounter and the PHC time jumps hours
ahead.

This was observed on 82574, I217 and I219. The fastest way to reproduce
it is to run a program that continuously calls the PTP_SYS_OFFSET ioctl
on the PHC.

Modify e1000e_phc_gettime() to use timecounter_cyc2time() instead of
timecounter_read() in order to allow non-monotonic SYSTIM readings and
prevent the PHC from jumping.

	Cc: Richard Cochran <richardcochran@gmail.com>
	Signed-off-by: Miroslav Lichvar <mlichvar@redhat.com>
	Acked-by: Jacob Keller <jacob.e.keller@intel.com>
	Tested-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit e1f65b0d70e9e5c80e15105cd96fa00174d7c436)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/e1000e/ptp.c
diff --cc drivers/net/ethernet/intel/e1000e/ptp.c
index ccf9e1ac7bfd,e1f821edbc21..000000000000
--- a/drivers/net/ethernet/intel/e1000e/ptp.c
+++ b/drivers/net/ethernet/intel/e1000e/ptp.c
@@@ -250,10 -236,14 +254,18 @@@ static void e1000e_systim_overflow_work
  						     systim_overflow_work.work);
  	struct e1000_hw *hw = &adapter->hw;
  	struct timespec64 ts;
+ 	u64 ns;
  
- 	adapter->ptp_clock_info.gettime64(&adapter->ptp_clock_info, &ts);
+ 	/* Update the timecounter */
+ 	ns = timecounter_read(&adapter->tc);
  
++<<<<<<< HEAD
 +	e_dbg("SYSTIM overflow check at %lld.%09lu\n", ts.tv_sec, ts.tv_nsec);
++=======
+ 	ts = ns_to_timespec64(ns);
+ 	e_dbg("SYSTIM overflow check at %lld.%09lu\n",
+ 	      (long long) ts.tv_sec, ts.tv_nsec);
++>>>>>>> e1f65b0d70e9 (e1000e: allow non-monotonic SYSTIM readings)
  
  	schedule_delayed_work(&adapter->systim_overflow_work,
  			      E1000_SYSTIM_OVERFLOW_PERIOD);
* Unmerged path drivers/net/ethernet/intel/e1000e/ptp.c
