net/sched: cls_flower: Reject duplicated rules also under skip_sw

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [net] sched: cls_flower: Reject duplicated rules also under skip_sw (Ivan Vecera) [1666481]
Rebuild_FUZZ: 96.83%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 35cc3cefc4de90001c9137e2d01dd9d06b11acfb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/35cc3cef.failed

Currently, duplicated rules are rejected only for skip_hw or "none",
hence allowing users to push duplicates into HW for no reason.

Use the flower tables to protect for that.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Paul Blakey <paulb@mellanox.com>
	Reported-by: Chris Mi <chrism@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 35cc3cefc4de90001c9137e2d01dd9d06b11acfb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_flower.c
diff --cc net/sched/cls_flower.c
index eb4e6a91f3e1,71312d7bd8f4..000000000000
--- a/net/sched/cls_flower.c
+++ b/net/sched/cls_flower.c
@@@ -984,25 -1238,20 +984,36 @@@ static int fl_change(struct net *net, s
  	if (err)
  		goto errout_idr;
  
++<<<<<<< HEAD
 +	if (!tc_skip_sw(fnew->flags)) {
 +		if (!fold && fl_lookup(head, &fnew->mkey)) {
 +			err = -EEXIST;
 +			goto errout_idr;
 +		}
 +
 +		err = rhashtable_insert_fast(&head->ht, &fnew->ht_node,
 +					     head->ht_params);
 +		if (err)
 +			goto errout_idr;
++=======
+ 	if (!fold && fl_lookup(fnew->mask, &fnew->mkey)) {
+ 		err = -EEXIST;
+ 		goto errout_mask;
++>>>>>>> 35cc3cefc4de (net/sched: cls_flower: Reject duplicated rules also under skip_sw)
  	}
  
+ 	err = rhashtable_insert_fast(&fnew->mask->ht, &fnew->ht_node,
+ 				     fnew->mask->filter_ht_params);
+ 	if (err)
+ 		goto errout_mask;
+ 
  	if (!tc_skip_hw(fnew->flags)) {
 -		err = fl_hw_replace_filter(tp, fnew, extack);
 +		err = fl_hw_replace_filter(tp,
 +					   &head->dissector,
 +					   &mask.key,
 +					   fnew);
  		if (err)
 -			goto errout_mask;
 +			goto errout_idr;
  	}
  
  	if (!tc_in_hw(fnew->flags))
@@@ -1048,11 -1301,10 +1059,18 @@@ static int fl_delete(struct tcf_proto *
  	struct cls_fl_head *head = rtnl_dereference(tp->root);
  	struct cls_fl_filter *f = arg;
  
++<<<<<<< HEAD
 +	if (!tc_skip_sw(f->flags))
 +		rhashtable_remove_fast(&head->ht, &f->ht_node,
 +				       head->ht_params);
 +	__fl_delete(tp, f);
 +	*last = list_empty(&head->filters);
++=======
+ 	rhashtable_remove_fast(&f->mask->ht, &f->ht_node,
+ 			       f->mask->filter_ht_params);
+ 	__fl_delete(tp, f, extack);
+ 	*last = list_empty(&head->masks);
++>>>>>>> 35cc3cefc4de (net/sched: cls_flower: Reject duplicated rules also under skip_sw)
  	return 0;
  }
  
* Unmerged path net/sched/cls_flower.c
