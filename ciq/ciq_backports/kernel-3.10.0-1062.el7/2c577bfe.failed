svcrdma: Remove sc_rq_depth

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 2c577bfea85e421bfa91df16ccf5156361aa8d4b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/2c577bfe.failed

Clean up: No need to retain rq_depth in struct svcrdma_xprt, it is
used only in svc_rdma_accept().

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 2c577bfea85e421bfa91df16ccf5156361aa8d4b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtrdma/svc_rdma_transport.c
diff --cc net/sunrpc/xprtrdma/svc_rdma_transport.c
index c28ee7409658,ef32c46a234c..000000000000
--- a/net/sunrpc/xprtrdma/svc_rdma_transport.c
+++ b/net/sunrpc/xprtrdma/svc_rdma_transport.c
@@@ -695,9 -588,9 +695,13 @@@ static struct svc_xprt *svc_rdma_accept
  	struct rdma_conn_param conn_param;
  	struct rpcrdma_connect_private pmsg;
  	struct ib_qp_init_attr qp_attr;
+ 	unsigned int ctxts, rq_depth;
  	struct ib_device *dev;
  	struct sockaddr *sap;
++<<<<<<< HEAD
 +	unsigned int i, ctxts;
++=======
++>>>>>>> 2c577bfea85e (svcrdma: Remove sc_rq_depth)
  	int ret = 0;
  
  	listen_rdma = container_of(xprt, struct svcxprt_rdma, sc_xprt);
@@@ -728,14 -621,12 +732,19 @@@
  	newxprt->sc_max_req_size = svcrdma_max_req_size;
  	newxprt->sc_max_requests = svcrdma_max_requests;
  	newxprt->sc_max_bc_requests = svcrdma_max_bc_requests;
++<<<<<<< HEAD
 +	newxprt->sc_rq_depth = newxprt->sc_max_requests +
 +			       newxprt->sc_max_bc_requests;
 +	if (newxprt->sc_rq_depth > dev->attrs.max_qp_wr) {
 +		gmb();
++=======
+ 	rq_depth = newxprt->sc_max_requests + newxprt->sc_max_bc_requests;
+ 	if (rq_depth > dev->attrs.max_qp_wr) {
++>>>>>>> 2c577bfea85e (svcrdma: Remove sc_rq_depth)
  		pr_warn("svcrdma: reducing receive depth to %d\n",
  			dev->attrs.max_qp_wr);
- 		newxprt->sc_rq_depth = dev->attrs.max_qp_wr;
- 		newxprt->sc_max_requests = newxprt->sc_rq_depth - 2;
+ 		rq_depth = dev->attrs.max_qp_wr;
+ 		newxprt->sc_max_requests = rq_depth - 2;
  		newxprt->sc_max_bc_requests = 2;
  	}
  	newxprt->sc_fc_credits = cpu_to_be32(newxprt->sc_max_requests);
diff --git a/include/linux/sunrpc/svc_rdma.h b/include/linux/sunrpc/svc_rdma.h
index 88da0c9bd7b1..534346d24779 100644
--- a/include/linux/sunrpc/svc_rdma.h
+++ b/include/linux/sunrpc/svc_rdma.h
@@ -101,7 +101,6 @@ struct svcxprt_rdma {
 
 	atomic_t             sc_sq_avail;	/* SQEs ready to be consumed */
 	unsigned int	     sc_sq_depth;	/* Depth of SQ */
-	unsigned int	     sc_rq_depth;	/* Depth of RQ */
 	__be32		     sc_fc_credits;	/* Forward credits */
 	u32		     sc_max_requests;	/* Max requests */
 	u32		     sc_max_bc_requests;/* Backward credits */
* Unmerged path net/sunrpc/xprtrdma/svc_rdma_transport.c
