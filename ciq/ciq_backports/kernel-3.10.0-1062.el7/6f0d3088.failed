r8169: use PCI_VDEVICE macro

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit 6f0d308855a26fd20c1994a322a3ebee768e0615
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/6f0d3088.failed

Using macro PCI_VDEVICE helps to simplify the PCI ID table.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6f0d308855a26fd20c1994a322a3ebee768e0615)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index a5e031e17b8a,243aa60ad4c0..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -270,19 -212,19 +270,35 @@@ enum cfg_version 
  };
  
  static const struct pci_device_id rtl8169_pci_tbl[] = {
++<<<<<<< HEAD
 +	{ PCI_DEVICE(PCI_VENDOR_ID_REALTEK,	0x8129), 0, 0, RTL_CFG_0 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_REALTEK,	0x8136), 0, 0, RTL_CFG_2 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_REALTEK,	0x8161), 0, 0, RTL_CFG_1 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_REALTEK,	0x8167), 0, 0, RTL_CFG_0 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_REALTEK,	0x8168), 0, 0, RTL_CFG_1 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_NCUBE,	0x8168), 0, 0, RTL_CFG_1 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_REALTEK,	0x8169), 0, 0, RTL_CFG_0 },
 +	{ PCI_VENDOR_ID_DLINK,			0x4300,
 +		PCI_VENDOR_ID_DLINK, 0x4b10,		 0, 0, RTL_CFG_1 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_DLINK,	0x4300), 0, 0, RTL_CFG_0 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_DLINK,	0x4302), 0, 0, RTL_CFG_0 },
 +	{ PCI_DEVICE(PCI_VENDOR_ID_AT,		0xc107), 0, 0, RTL_CFG_0 },
 +	{ PCI_DEVICE(0x16ec,			0x0116), 0, 0, RTL_CFG_0 },
++=======
+ 	{ PCI_VDEVICE(REALTEK,	0x8129), RTL_CFG_0 },
+ 	{ PCI_VDEVICE(REALTEK,	0x8136), RTL_CFG_2 },
+ 	{ PCI_VDEVICE(REALTEK,	0x8161), RTL_CFG_1 },
+ 	{ PCI_VDEVICE(REALTEK,	0x8167), RTL_CFG_0 },
+ 	{ PCI_VDEVICE(REALTEK,	0x8168), RTL_CFG_1 },
+ 	{ PCI_VDEVICE(NCUBE,	0x8168), RTL_CFG_1 },
+ 	{ PCI_VDEVICE(REALTEK,	0x8169), RTL_CFG_0 },
+ 	{ PCI_VENDOR_ID_DLINK,	0x4300,
+ 		PCI_VENDOR_ID_DLINK, 0x4b10, 0, 0, RTL_CFG_1 },
+ 	{ PCI_VDEVICE(DLINK,	0x4300), RTL_CFG_0 },
+ 	{ PCI_VDEVICE(DLINK,	0x4302), RTL_CFG_0 },
+ 	{ PCI_VDEVICE(AT,	0xc107), RTL_CFG_0 },
+ 	{ PCI_VDEVICE(USR,	0x0116), RTL_CFG_0 },
++>>>>>>> 6f0d308855a2 (r8169: use PCI_VDEVICE macro)
  	{ PCI_VENDOR_ID_LINKSYS,		0x1032,
  		PCI_ANY_ID, 0x0024, 0, 0, RTL_CFG_0 },
  	{ 0x0001,				0x8168,
* Unmerged path drivers/net/ethernet/realtek/r8169.c
