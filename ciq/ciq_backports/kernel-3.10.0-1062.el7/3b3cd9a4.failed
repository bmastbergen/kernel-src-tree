perf stat: Move 'print_mixed_hw_group_error' to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 3b3cd9a41c2b5d97309099ba6eae69b2d3177226
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/3b3cd9a4.failed

Move the 'print_mixed_hw_group_error' global variable to 'struct perf_stat_config',
so that it can be passed around and used outside the 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-35-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 3b3cd9a41c2b5d97309099ba6eae69b2d3177226)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
#	tools/perf/util/stat.h
diff --cc tools/perf/builtin-stat.c
index 13693124ed08,f61c2dc8c7e8..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -174,11 -168,8 +174,14 @@@ static struct cpu_map		*aggr_map
  static aggr_get_id_t		aggr_get_id;
  static bool			append_file;
  static bool			interval_count;
 +static bool			interval_clear;
  static const char		*output_name;
  static int			output_fd;
++<<<<<<< HEAD
 +static int			print_free_counters_hint;
 +static int			print_mixed_hw_group_error;
++=======
++>>>>>>> 3b3cd9a41c2b (perf stat: Move 'print_mixed_hw_group_error' to 'struct perf_stat_config')
  static u64			*walltime_run;
  static bool			ru_display			= false;
  static struct rusage		ru_data;
@@@ -1161,29 -1037,29 +1164,29 @@@ static void printout(int id, int nr, st
  			os.nfields++;
  	}
  	if (run == 0 || ena == 0 || counter->counts->scaled == -1) {
 -		if (config->metric_only) {
 -			pm(config, &os, NULL, "", "", 0);
 +		if (metric_only) {
 +			pm(&os, NULL, "", "", 0);
  			return;
  		}
 -		aggr_printout(config, counter, id, nr);
 +		aggr_printout(counter, id, nr);
  
 -		fprintf(config->output, "%*s%s",
 -			config->csv_output ? 0 : 18,
 +		fprintf(stat_config.output, "%*s%s",
 +			csv_output ? 0 : 18,
  			counter->supported ? CNTR_NOT_COUNTED : CNTR_NOT_SUPPORTED,
 -			config->csv_sep);
 +			csv_sep);
  
  		if (counter->supported) {
 -			config->print_free_counters_hint = 1;
 +			print_free_counters_hint = 1;
  			if (is_mixed_hw_group(counter))
- 				print_mixed_hw_group_error = 1;
+ 				config->print_mixed_hw_group_error = 1;
  		}
  
 -		fprintf(config->output, "%-*s%s",
 -			config->csv_output ? 0 : config->unit_width,
 -			counter->unit, config->csv_sep);
 +		fprintf(stat_config.output, "%-*s%s",
 +			csv_output ? 0 : unit_width,
 +			counter->unit, csv_sep);
  
 -		fprintf(config->output, "%*s",
 -			config->csv_output ? 0 : -25,
 +		fprintf(stat_config.output, "%*s",
 +			csv_output ? 0 : -25,
  			perf_evsel__name(counter));
  
  		if (counter->cgrp)
diff --cc tools/perf/util/stat.h
index 4b88aef959fb,6fb4dac26ccc..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -93,9 -99,16 +93,15 @@@ struct perf_stat_config 
  	unsigned int		 interval;
  	unsigned int		 timeout;
  	unsigned int		 initial_delay;
 -	unsigned int		 unit_width;
 -	unsigned int		 metric_only_len;
  	int			 times;
++<<<<<<< HEAD
++=======
+ 	int			 run_count;
+ 	int			 print_free_counters_hint;
+ 	int			 print_mixed_hw_group_error;
++>>>>>>> 3b3cd9a41c2b (perf stat: Move 'print_mixed_hw_group_error' to 'struct perf_stat_config')
  	struct runtime_stat	*stats;
  	int			 stats_num;
 -	const char		*csv_sep;
 -	struct stats		*walltime_nsecs_stats;
  };
  
  void update_stats(struct stats *stats, u64 val);
* Unmerged path tools/perf/builtin-stat.c
* Unmerged path tools/perf/util/stat.h
