cpufreq: intel_pstate: Add Skylake servers support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [cpufreq] intel_pstate: Add Skylake servers support (David Arcari) [1698453]
Rebuild_FUZZ: 90.11%
commit-author Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
commit d8de7a44e11f98f2c2a4c2e12e79ba9ffb839306
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d8de7a44.failed

Currently intel_pstate can function only in HWP mode on Skylake servers.
When HWP feature is not enabled on the processor then acpi-cpufreq is
driver is used.

Based on the power and performance tests using intel_pstate scaling
algorithm the results are comparable. But intel_pstate brings in
additional features:
 - Display of turbo frequency range, which many users like to see
 - Place limits in the turbo frequency range when platform allows

Since these tests are done only using non PID algorithm introduced in
kernel version 4.14, this patch is not a backport candidate. So each user
has to carefully weigh the benefits before he backports.

	Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit d8de7a44e11f98f2c2a4c2e12e79ba9ffb839306)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index ee3ebc51c030,7edf7a0e5a96..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -1841,8 -1618,9 +1841,14 @@@ static const struct x86_cpu_id intel_ps
  	ICPU(INTEL_FAM6_BROADWELL_XEON_D,	core_funcs),
  	ICPU(INTEL_FAM6_XEON_PHI_KNL,		knl_funcs),
  	ICPU(INTEL_FAM6_XEON_PHI_KNM,		knl_funcs),
++<<<<<<< HEAD
 +	ICPU(INTEL_FAM6_ATOM_GOLDMONT,		bxt_funcs),
 +	ICPU(INTEL_FAM6_ATOM_GEMINI_LAKE,       bxt_funcs),
++=======
+ 	ICPU(INTEL_FAM6_ATOM_GOLDMONT,		core_funcs),
+ 	ICPU(INTEL_FAM6_ATOM_GEMINI_LAKE,       core_funcs),
+ 	ICPU(INTEL_FAM6_SKYLAKE_X,		core_funcs),
++>>>>>>> d8de7a44e11f (cpufreq: intel_pstate: Add Skylake servers support)
  	{}
  };
  MODULE_DEVICE_TABLE(x86cpu, intel_pstate_cpu_ids);
* Unmerged path drivers/cpufreq/intel_pstate.c
