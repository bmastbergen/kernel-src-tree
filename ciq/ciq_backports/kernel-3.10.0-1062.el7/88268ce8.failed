ALSA: hda/ca0132 - Set AE-5 bools and select mixer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Connor McAdams <conmanx360@gmail.com>
commit 88268ce8a64e707bd67d7025f5947f46cabbb98d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/88268ce8.failed

This patch sets the bool values for the AE-5, as well as selects the
mixer it will use.

	Signed-off-by: Connor McAdams <conmanx360@gmail.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 88268ce8a64e707bd67d7025f5947f46cabbb98d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_ca0132.c
diff --cc sound/pci/hda/patch_ca0132.c
index 20ce308ff039,9caa2678866b..000000000000
--- a/sound/pci/hda/patch_ca0132.c
+++ b/sound/pci/hda/patch_ca0132.c
@@@ -5014,7 -7597,15 +5014,19 @@@ static int ca0132_prepare_verbs(struct 
  	struct ca0132_spec *spec = codec->spec;
  
  	spec->chip_init_verbs = ca0132_init_verbs0;
++<<<<<<< HEAD
 +	spec->spec_init_verbs = kzalloc(sizeof(struct hda_verb) * NUM_SPEC_VERBS, GFP_KERNEL);
++=======
+ 	/*
+ 	 * Since desktop cards use pci_mmio, this can be used to determine
+ 	 * whether or not to use these verbs instead of a separate bool.
+ 	 */
+ 	if (spec->use_pci_mmio)
+ 		spec->desktop_init_verbs = ca0132_init_verbs1;
+ 	spec->spec_init_verbs = kcalloc(NUM_SPEC_VERBS,
+ 					sizeof(struct hda_verb),
+ 					GFP_KERNEL);
++>>>>>>> 88268ce8a64e (ALSA: hda/ca0132 - Set AE-5 bools and select mixer)
  	if (!spec->spec_init_verbs)
  		return -ENOMEM;
  
@@@ -5145,14 -7658,60 +5157,69 @@@ static int patch_ca0132(struct hda_code
  	else
  		spec->quirk = QUIRK_NONE;
  
 +	if (spec->quirk == QUIRK_GENERIC_PARSER)
 +		return parse_ca0132_generic(codec);
 +
 +	codec->patch_ops = ca0132_patch_ops;
 +
  	spec->dsp_state = DSP_DOWNLOAD_INIT;
  	spec->num_mixers = 1;
++<<<<<<< HEAD
 +	spec->mixers[0] = ca0132_mixer;
++=======
+ 
+ 	/* Set which mixers each quirk uses. */
+ 	switch (spec->quirk) {
+ 	case QUIRK_SBZ:
+ 		spec->mixers[0] = desktop_mixer;
+ 		snd_hda_codec_set_name(codec, "Sound Blaster Z");
+ 		break;
+ 	case QUIRK_R3D:
+ 		spec->mixers[0] = desktop_mixer;
+ 		snd_hda_codec_set_name(codec, "Recon3D");
+ 		break;
+ 	case QUIRK_R3DI:
+ 		spec->mixers[0] = r3di_mixer;
+ 		snd_hda_codec_set_name(codec, "Recon3Di");
+ 		break;
+ 	case QUIRK_AE5:
+ 		spec->mixers[0] = desktop_mixer;
+ 		snd_hda_codec_set_name(codec, "Sound BlasterX AE-5");
+ 		break;
+ 	default:
+ 		spec->mixers[0] = ca0132_mixer;
+ 		break;
+ 	}
+ 
+ 	/* Setup whether or not to use alt functions/controls/pci_mmio */
+ 	switch (spec->quirk) {
+ 	case QUIRK_SBZ:
+ 	case QUIRK_R3D:
+ 	case QUIRK_AE5:
+ 		spec->use_alt_controls = true;
+ 		spec->use_alt_functions = true;
+ 		spec->use_pci_mmio = true;
+ 		break;
+ 	case QUIRK_R3DI:
+ 		spec->use_alt_controls = true;
+ 		spec->use_alt_functions = true;
+ 		spec->use_pci_mmio = false;
+ 		break;
+ 	default:
+ 		spec->use_alt_controls = false;
+ 		spec->use_alt_functions = false;
+ 		spec->use_pci_mmio = false;
+ 		break;
+ 	}
+ 
+ 	if (spec->use_pci_mmio) {
+ 		spec->mem_base = pci_iomap(codec->bus->pci, 2, 0xC20);
+ 		if (spec->mem_base == NULL) {
+ 			codec_warn(codec, "pci_iomap failed! Setting quirk to QUIRK_NONE.");
+ 			spec->quirk = QUIRK_NONE;
+ 		}
+ 	}
++>>>>>>> 88268ce8a64e (ALSA: hda/ca0132 - Set AE-5 bools and select mixer)
  
  	spec->base_init_verbs = ca0132_base_init_verbs;
  	spec->base_exit_verbs = ca0132_base_exit_verbs;
* Unmerged path sound/pci/hda/patch_ca0132.c
