watchdog: iTCO_wdt: Replace shutdown function with call to watchdog_stop_on_reboot

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [watchdog] itco_wdt: Replace shutdown function with call to watchdog_stop_on_reboot (David Arcari) [1645537]
Rebuild_FUZZ: 93.51%
commit-author Guenter Roeck <linux@roeck-us.net>
commit d3d77b5abc175684a3c42a240ee49931ca51d10d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d3d77b5a.failed

The shutdown function calls the stop function.
Call watchdog_stop_on_reboot() from probe instead.

The conversion was done automatically with coccinelle using the
following semantic patches. The semantic patches and the scripts used
to generate this commit log are available at
https://github.com/groeck/coccinelle-patches

- Replace shutdown function with call to watchdog_stop_on_reboot()

	Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
	Signed-off-by: Guenter Roeck <linux@roeck-us.net>
(cherry picked from commit d3d77b5abc175684a3c42a240ee49931ca51d10d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/watchdog/iTCO_wdt.c
diff --cc drivers/watchdog/iTCO_wdt.c
index 8dfafe4078c8,3d0abc0d59b4..000000000000
--- a/drivers/watchdog/iTCO_wdt.c
+++ b/drivers/watchdog/iTCO_wdt.c
@@@ -548,10 -520,11 +548,15 @@@ static int iTCO_wdt_probe(struct platfo
  			WATCHDOG_TIMEOUT);
  	}
  
++<<<<<<< HEAD
 +	ret = watchdog_register_device(&iTCO_wdt_watchdog_dev);
++=======
+ 	watchdog_stop_on_reboot(&p->wddev);
+ 	ret = devm_watchdog_register_device(dev, &p->wddev);
++>>>>>>> d3d77b5abc17 (watchdog: iTCO_wdt: Replace shutdown function with call to watchdog_stop_on_reboot)
  	if (ret != 0) {
  		pr_err("cannot register watchdog device (err=%d)\n", ret);
 -		return ret;
 +		goto unreg_tco;
  	}
  
  	pr_info("initialized. heartbeat=%d sec (nowayout=%d)\n",
@@@ -589,11 -544,6 +594,14 @@@ static int iTCO_wdt_remove(struct platf
  	return 0;
  }
  
++<<<<<<< HEAD
 +static void iTCO_wdt_shutdown(struct platform_device *dev)
 +{
 +	iTCO_wdt_stop(NULL);
 +}
 +
++=======
++>>>>>>> d3d77b5abc17 (watchdog: iTCO_wdt: Replace shutdown function with call to watchdog_stop_on_reboot)
  #ifdef CONFIG_PM_SLEEP
  /*
   * Suspend-to-idle requires this, because it stops the ticks and timekeeping, so
@@@ -644,9 -597,7 +652,8 @@@ static const struct dev_pm_ops iTCO_wdt
  static struct platform_driver iTCO_wdt_driver = {
  	.probe          = iTCO_wdt_probe,
  	.remove         = iTCO_wdt_remove,
- 	.shutdown       = iTCO_wdt_shutdown,
  	.driver         = {
 +		.owner  = THIS_MODULE,
  		.name   = DRV_NAME,
  		.pm     = ITCO_WDT_PM_OPS,
  	},
* Unmerged path drivers/watchdog/iTCO_wdt.c
