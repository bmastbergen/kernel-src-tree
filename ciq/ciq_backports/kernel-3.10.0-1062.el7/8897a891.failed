perf stat: Move ru_* data to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 8897a8916efb29fa8bbe9e5f6e5d56362aedf64e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/8897a891.failed

Move the 'ru_*' global variables to 'struct perf_stat_config', so that
it can be passed around and used outside the 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-36-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 8897a8916efb29fa8bbe9e5f6e5d56362aedf64e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
#	tools/perf/util/stat.h
diff --cc tools/perf/builtin-stat.c
index 13693124ed08,942ebfd8ef2e..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -174,15 -168,9 +174,18 @@@ static struct cpu_map		*aggr_map
  static aggr_get_id_t		aggr_get_id;
  static bool			append_file;
  static bool			interval_count;
 +static bool			interval_clear;
  static const char		*output_name;
  static int			output_fd;
 +static int			print_free_counters_hint;
 +static int			print_mixed_hw_group_error;
  static u64			*walltime_run;
++<<<<<<< HEAD
 +static bool			ru_display			= false;
 +static struct rusage		ru_data;
 +static unsigned int		metric_only_len			= METRIC_ONLY_LEN;
++=======
++>>>>>>> 8897a8916efb (perf stat: Move ru_* data to 'struct perf_stat_config')
  
  struct perf_stat {
  	bool			 record;
@@@ -1710,21 -1665,21 +1713,21 @@@ static double timeval2double(struct tim
  	return t->tv_sec + (double) t->tv_usec/USEC_PER_SEC;
  }
  
 -static void print_footer(struct perf_stat_config *config)
 +static void print_footer(void)
  {
 -	double avg = avg_stats(config->walltime_nsecs_stats) / NSEC_PER_SEC;
 -	FILE *output = config->output;
 +	double avg = avg_stats(&walltime_nsecs_stats) / NSEC_PER_SEC;
 +	FILE *output = stat_config.output;
  	int n;
  
 -	if (!config->null_run)
 +	if (!null_run)
  		fprintf(output, "\n");
  
 -	if (config->run_count == 1) {
 +	if (run_count == 1) {
  		fprintf(output, " %17.9f seconds time elapsed", avg);
  
- 		if (ru_display) {
- 			double ru_utime = timeval2double(&ru_data.ru_utime);
- 			double ru_stime = timeval2double(&ru_data.ru_stime);
+ 		if (config->ru_display) {
+ 			double ru_utime = timeval2double(&config->ru_data.ru_utime);
+ 			double ru_stime = timeval2double(&config->ru_data.ru_stime);
  
  			fprintf(output, "\n\n");
  			fprintf(output, " %17.9f seconds user\n", ru_utime);
@@@ -2895,10 -2852,10 +2898,15 @@@ int cmd_stat(int argc, const char **arg
  	 * Display user/system times only for single
  	 * run and when there's specified tracee.
  	 */
++<<<<<<< HEAD
 +	if ((run_count == 1) && target__none(&target))
 +		ru_display = true;
++=======
+ 	if ((stat_config.run_count == 1) && target__none(&target))
+ 		stat_config.ru_display = true;
++>>>>>>> 8897a8916efb (perf stat: Move ru_* data to 'struct perf_stat_config')
  
 -	if (stat_config.run_count < 0) {
 +	if (run_count < 0) {
  		pr_err("Run count must be a positive number\n");
  		parse_options_usage(stat_usage, stat_options, "r", 1);
  		goto out;
diff --cc tools/perf/util/stat.h
index 4b88aef959fb,1fd0b7e196c6..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -89,13 -95,26 +93,27 @@@ struct perf_stat_config 
  	bool			 scale;
  	bool			 no_inherit;
  	bool			 identifier;
++<<<<<<< HEAD
++=======
+ 	bool			 csv_output;
+ 	bool			 interval_clear;
+ 	bool			 metric_only;
+ 	bool			 null_run;
+ 	bool			 ru_display;
++>>>>>>> 8897a8916efb (perf stat: Move ru_* data to 'struct perf_stat_config')
  	FILE			*output;
  	unsigned int		 interval;
  	unsigned int		 timeout;
  	unsigned int		 initial_delay;
 -	unsigned int		 unit_width;
 -	unsigned int		 metric_only_len;
  	int			 times;
 -	int			 run_count;
 -	int			 print_free_counters_hint;
 -	int			 print_mixed_hw_group_error;
  	struct runtime_stat	*stats;
  	int			 stats_num;
++<<<<<<< HEAD
++=======
+ 	const char		*csv_sep;
+ 	struct stats		*walltime_nsecs_stats;
+ 	struct rusage		 ru_data;
++>>>>>>> 8897a8916efb (perf stat: Move ru_* data to 'struct perf_stat_config')
  };
  
  void update_stats(struct stats *stats, u64 val);
* Unmerged path tools/perf/builtin-stat.c
* Unmerged path tools/perf/util/stat.h
