perf test: Enhance the LLVM tests: add kbuild test

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit 7af3f3d55b80cce40ad94b6b8e173dccedaf25e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/7af3f3d5.failed

This patch adds a kbuild testcase to check whether kernel headers can be
correctly found.

For example:
  # mv /lib/modules/4.3.0-rc5{,.bak}
  # perf test LLVM

    38: Test LLVM searching and compiling                        : Skip

  # perf test -v LLVM
  ...
  <stdin>:11:10: fatal error: 'uapi/linux/fs.h' file not found
  #include <uapi/linux/fs.h>
          ^
  1 error generated.
  ERROR:	unable to compile -
  Hint:	Check error message shown above.
  Hint:	You can also pre-compile it into .o using:
     		 clang -target bpf -O2 -c -
	 with proper -I and -D options.
  Failed to compile test case: 'Test kbuild searching'
  test child finished with -2

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/1446817783-86722-7-git-send-email-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 7af3f3d55b80cce40ad94b6b8e173dccedaf25e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/tests/Build
#	tools/perf/tests/llvm.c
#	tools/perf/tests/llvm.h
diff --cc tools/perf/tests/Build
index 40bdfc01aafe,a47b21193fb2..000000000000
--- a/tools/perf/tests/Build
+++ b/tools/perf/tests/Build
@@@ -31,21 -31,24 +31,43 @@@ perf-y += sample-parsing.
  perf-y += parse-no-sample-id-all.o
  perf-y += kmod-path.o
  perf-y += thread-map.o
++<<<<<<< HEAD
++=======
+ perf-y += llvm.o llvm-src-base.o llvm-src-kbuild.o
++>>>>>>> 7af3f3d55b80 (perf test: Enhance the LLVM tests: add kbuild test)
  perf-y += topology.o
 +perf-y += mem.o
 +perf-y += cpumap.o
 +perf-y += stat.o
 +perf-y += event_update.o
 +perf-y += event-times.o
 +perf-y += expr.o
 +perf-y += backward-ring-buffer.o
 +perf-y += sdt.o
 +perf-y += is_printable_array.o
 +perf-y += bitmap.o
 +perf-y += perf-hooks.o
 +perf-y += unit_number__scnprintf.o
  
++<<<<<<< HEAD
 +ifeq ($(SRCARCH),$(filter $(SRCARCH),x86 arm arm64 powerpc))
++=======
+ $(OUTPUT)tests/llvm-src-base.c: tests/bpf-script-example.c
+ 	$(call rule_mkdir)
+ 	$(Q)echo '#include <tests/llvm.h>' > $@
+ 	$(Q)echo 'const char test_llvm__bpf_base_prog[] =' >> $@
+ 	$(Q)sed -e 's/"/\\"/g' -e 's/\(.*\)/"\1\\n"/g' $< >> $@
+ 	$(Q)echo ';' >> $@
+ 
+ $(OUTPUT)tests/llvm-src-kbuild.c: tests/bpf-script-test-kbuild.c
+ 	$(call rule_mkdir)
+ 	$(Q)echo '#include <tests/llvm.h>' > $@
+ 	$(Q)echo 'const char test_llvm__bpf_test_kbuild_prog[] =' >> $@
+ 	$(Q)sed -e 's/"/\\"/g' -e 's/\(.*\)/"\1\\n"/g' $< >> $@
+ 	$(Q)echo ';' >> $@
+ 
+ ifeq ($(ARCH),$(filter $(ARCH),x86 arm arm64))
++>>>>>>> 7af3f3d55b80 (perf test: Enhance the LLVM tests: add kbuild test)
  perf-$(CONFIG_DWARF_UNWIND) += dwarf-unwind.o
  endif
  
* Unmerged path tools/perf/tests/llvm.c
* Unmerged path tools/perf/tests/llvm.h
* Unmerged path tools/perf/tests/Build
diff --git a/tools/perf/tests/bpf-script-test-kbuild.c b/tools/perf/tests/bpf-script-test-kbuild.c
new file mode 100644
index 000000000000..3626924740d8
--- /dev/null
+++ b/tools/perf/tests/bpf-script-test-kbuild.c
@@ -0,0 +1,21 @@
+/*
+ * bpf-script-test-kbuild.c
+ * Test include from kernel header
+ */
+#ifndef LINUX_VERSION_CODE
+# error Need LINUX_VERSION_CODE
+# error Example: for 4.2 kernel, put 'clang-opt="-DLINUX_VERSION_CODE=0x40200" into llvm section of ~/.perfconfig'
+#endif
+#define SEC(NAME) __attribute__((section(NAME), used))
+
+#include <uapi/linux/fs.h>
+#include <uapi/asm/ptrace.h>
+
+SEC("func=vfs_llseek")
+int bpf_func__vfs_llseek(void *ctx)
+{
+	return 0;
+}
+
+char _license[] SEC("license") = "GPL";
+int _version SEC("version") = LINUX_VERSION_CODE;
* Unmerged path tools/perf/tests/llvm.c
* Unmerged path tools/perf/tests/llvm.h
