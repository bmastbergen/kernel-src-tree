nvme: cancel request synchronously

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [nvme] cancel request synchronously (Ming Lei) [1688518]
Rebuild_FUZZ: 90.32%
commit-author Ming Lei <ming.lei@redhat.com>
commit eb3afb75b57c28599af0dfa03a99579d410749e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/eb3afb75.failed

nvme_cancel_request() is used in error handler, and it is always
reliable to cancel request synchronously, and avoids possible race
in which request may be completed after real hw queue is destroyed.

One issue is reported by our customer on NVMe RDMA, in which freed ib
queue pair may be used in nvme_rdma_complete_rq().

	Cc: Sagi Grimberg <sagi@grimberg.me>
	Cc: Bart Van Assche <bvanassche@acm.org>
	Cc: James Smart <james.smart@broadcom.com>
	Cc: linux-nvme@lists.infradead.org
	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit eb3afb75b57c28599af0dfa03a99579d410749e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index cb5cd8fffb1e,2c43e12b70af..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -233,12 -287,9 +233,18 @@@ void nvme_cancel_request(struct reques
  	dev_dbg_ratelimited(((struct nvme_ctrl *) data)->device,
  				"Cancelling I/O %d", req->tag);
  
++<<<<<<< HEAD
 +	status = NVME_SC_ABORT_REQ;
 +	if (blk_queue_dying(req->q))
 +		status |= NVME_SC_DNR;
 +	nvme_req(req)->status = status;
 +	blk_mq_complete_request(req, 0);
 +
++=======
+ 	nvme_req(req)->status = NVME_SC_ABORT_REQ;
+ 	blk_mq_complete_request_sync(req);
+ 	return true;
++>>>>>>> eb3afb75b57c (nvme: cancel request synchronously)
  }
  EXPORT_SYMBOL_GPL(nvme_cancel_request);
  
* Unmerged path drivers/nvme/host/core.c
