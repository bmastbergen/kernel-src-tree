kvm/x86: Added Hyper-V vcpu_to_hv_vcpu()/hv_vcpu_to_vcpu() helpers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Andrey Smetanin <asmetanin@virtuozzo.com>
commit 0ae80384b257b0a1ffa4e5d9eab2eb559bb063c5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0ae80384.failed

	Signed-off-by: Andrey Smetanin <asmetanin@virtuozzo.com>
	Reviewed-by: Roman Kagan <rkagan@virtuozzo.com>
CC: Gleb Natapov <gleb@kernel.org>
CC: Paolo Bonzini <pbonzini@redhat.com>
CC: "K. Y. Srinivasan" <kys@microsoft.com>
CC: Haiyang Zhang <haiyangz@microsoft.com>
CC: Vitaly Kuznetsov <vkuznets@redhat.com>
CC: Roman Kagan <rkagan@virtuozzo.com>
CC: Denis V. Lunev <den@openvz.org>
CC: qemu-devel@nongnu.org
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 0ae80384b257b0a1ffa4e5d9eab2eb559bb063c5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/hyperv.h
diff --cc arch/x86/kvm/hyperv.h
index 638d4fbc7358,d5d8217c59bb..000000000000
--- a/arch/x86/kvm/hyperv.h
+++ b/arch/x86/kvm/hyperv.h
@@@ -24,8 -24,32 +24,34 @@@
  #ifndef __ARCH_X86_KVM_HYPERV_H__
  #define __ARCH_X86_KVM_HYPERV_H__
  
++<<<<<<< HEAD
++=======
+ static inline struct kvm_vcpu_hv *vcpu_to_hv_vcpu(struct kvm_vcpu *vcpu)
+ {
+ 	return &vcpu->arch.hyperv;
+ }
+ 
+ static inline struct kvm_vcpu *hv_vcpu_to_vcpu(struct kvm_vcpu_hv *hv_vcpu)
+ {
+ 	struct kvm_vcpu_arch *arch;
+ 
+ 	arch = container_of(hv_vcpu, struct kvm_vcpu_arch, hyperv);
+ 	return container_of(arch, struct kvm_vcpu, arch);
+ }
+ 
+ static inline struct kvm_vcpu_hv_synic *vcpu_to_synic(struct kvm_vcpu *vcpu)
+ {
+ 	return &vcpu->arch.hyperv.synic;
+ }
+ 
+ static inline struct kvm_vcpu *synic_to_vcpu(struct kvm_vcpu_hv_synic *synic)
+ {
+ 	return hv_vcpu_to_vcpu(container_of(synic, struct kvm_vcpu_hv, synic));
+ }
+ 
++>>>>>>> 0ae80384b257 (kvm/x86: Added Hyper-V vcpu_to_hv_vcpu()/hv_vcpu_to_vcpu() helpers)
  int kvm_hv_set_msr_common(struct kvm_vcpu *vcpu, u32 msr, u64 data, bool host);
  int kvm_hv_get_msr_common(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata);
 -
  bool kvm_hv_hypercall_enabled(struct kvm *kvm);
  int kvm_hv_hypercall(struct kvm_vcpu *vcpu);
  
* Unmerged path arch/x86/kvm/hyperv.h
