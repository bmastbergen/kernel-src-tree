ext4: fix spectre gadget in ext4_mb_regular_allocator()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jeremy Cline <jcline@redhat.com>
commit 1a5d5e5d51e75a5bca67dadbcea8c841934b7b85
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/1a5d5e5d.failed

'ac->ac_g_ex.fe_len' is a user-controlled value which is used in the
derivation of 'ac->ac_2order'. 'ac->ac_2order', in turn, is used to
index arrays which makes it a potential spectre gadget. Fix this by
sanitizing the value assigned to 'ac->ac2_order'.  This covers the
following accesses found with the help of smatch:

* fs/ext4/mballoc.c:1896 ext4_mb_simple_scan_group() warn: potential
  spectre issue 'grp->bb_counters' [w] (local cap)

* fs/ext4/mballoc.c:445 mb_find_buddy() warn: potential spectre issue
  'EXT4_SB(e4b->bd_sb)->s_mb_offsets' [r] (local cap)

* fs/ext4/mballoc.c:446 mb_find_buddy() warn: potential spectre issue
  'EXT4_SB(e4b->bd_sb)->s_mb_maxs' [r] (local cap)

	Suggested-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Signed-off-by: Jeremy Cline <jcline@redhat.com>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Cc: stable@vger.kernel.org
(cherry picked from commit 1a5d5e5d51e75a5bca67dadbcea8c841934b7b85)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/mballoc.c
diff --cc fs/ext4/mballoc.c
index c307b4ddd7a7,8b24d3d42cb3..000000000000
--- a/fs/ext4/mballoc.c
+++ b/fs/ext4/mballoc.c
@@@ -26,6 -14,8 +26,11 @@@
  #include <linux/log2.h>
  #include <linux/module.h>
  #include <linux/slab.h>
++<<<<<<< HEAD
++=======
+ #include <linux/nospec.h>
+ #include <linux/backing-dev.h>
++>>>>>>> 1a5d5e5d51e7 (ext4: fix spectre gadget in ext4_mb_regular_allocator())
  #include <trace/events/ext4.h>
  
  #ifdef CONFIG_EXT4_DEBUG
* Unmerged path fs/ext4/mballoc.c
