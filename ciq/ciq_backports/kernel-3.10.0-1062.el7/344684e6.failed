RDMA/device: Use __ib_device_get_by_name() in ib_device_rename()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jason Gunthorpe <jgg@mellanox.com>
commit 344684e6d02ff21ff2fce8cf1b2de3fd3cafcac7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/344684e6.failed

No reason to open code this loop.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Reviewed-by: Steve Wise <swise@opengridcomputing.com>
(cherry picked from commit 344684e6d02ff21ff2fce8cf1b2de3fd3cafcac7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
diff --cc drivers/infiniband/core/device.c
index 0df20870c5f9,4a9aa6d10c5e..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -171,10 -181,31 +171,36 @@@ static struct ib_device *__ib_device_ge
  	return NULL;
  }
  
++<<<<<<< HEAD
 +static int alloc_name(char *name)
++=======
+ int ib_device_rename(struct ib_device *ibdev, const char *name)
+ {
+ 	int ret = 0;
+ 
+ 	if (!strcmp(name, dev_name(&ibdev->dev)))
+ 		return ret;
+ 
+ 	mutex_lock(&device_mutex);
+ 	if (__ib_device_get_by_name(name)) {
+ 		ret = -EEXIST;
+ 		goto out;
+ 	}
+ 
+ 	ret = device_rename(&ibdev->dev, name);
+ 	if (ret)
+ 		goto out;
+ 	strlcpy(ibdev->name, name, IB_DEVICE_NAME_MAX);
+ out:
+ 	mutex_unlock(&device_mutex);
+ 	return ret;
+ }
+ 
+ static int alloc_name(struct ib_device *ibdev, const char *name)
++>>>>>>> 344684e6d02f (RDMA/device: Use __ib_device_get_by_name() in ib_device_rename())
  {
  	unsigned long *inuse;
 +	char buf[IB_DEVICE_NAME_MAX];
  	struct ib_device *device;
  	int i;
  
* Unmerged path drivers/infiniband/core/device.c
