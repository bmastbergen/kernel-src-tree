RDMA/core: Rename rdma_copy_addr to rdma_copy_src_l2_addr

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Parav Pandit <parav@mellanox.com>
commit 77addc524473ee9a85d2ef5747a32173c85768d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/77addc52.failed

Now that rdma_copy_addr() only copies the source addresses and all callers
are interested in copying only source addresses, simplify it to drop the
destination address argument.

Given that it only copies source layer2 addresses, rename it to
rdma_copy_src_l2_addr for better code readability.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 77addc524473ee9a85d2ef5747a32173c85768d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/addr.c
#	include/rdma/ib_addr.h
diff --cc drivers/infiniband/core/addr.c
index b709ca011384,c9d14d6996b2..000000000000
--- a/drivers/infiniband/core/addr.c
+++ b/drivers/infiniband/core/addr.c
@@@ -220,31 -219,17 +220,45 @@@ int rdma_addr_size_kss(struct __kernel_
  }
  EXPORT_SYMBOL(rdma_addr_size_kss);
  
++<<<<<<< HEAD
 +static struct rdma_addr_client self;
 +
 +void rdma_addr_register_client(struct rdma_addr_client *client)
 +{
 +	atomic_set(&client->refcount, 1);
 +	init_completion(&client->comp);
 +}
 +EXPORT_SYMBOL(rdma_addr_register_client);
 +
 +static inline void put_client(struct rdma_addr_client *client)
 +{
 +	if (atomic_dec_and_test(&client->refcount))
 +		complete(&client->comp);
 +}
 +
 +void rdma_addr_unregister_client(struct rdma_addr_client *client)
 +{
 +	put_client(client);
 +	wait_for_completion(&client->comp);
 +}
 +EXPORT_SYMBOL(rdma_addr_unregister_client);
 +
 +void rdma_copy_addr(struct rdma_dev_addr *dev_addr,
 +		    const struct net_device *dev,
 +		    const unsigned char *dst_dev_addr)
++=======
+ /**
+  * rdma_copy_src_l2_addr - Copy netdevice source addresses
+  * @dev_addr:	Destination address pointer where to copy the addresses
+  * @dev:	Netdevice whose source addresses to copy
+  *
+  * rdma_copy_src_l2_addr() copies source addresses from the specified netdevice.
+  * This includes unicast address, broadcast address, device type and
+  * interface index.
+  */
+ void rdma_copy_src_l2_addr(struct rdma_dev_addr *dev_addr,
+ 			   const struct net_device *dev)
++>>>>>>> 77addc524473 (RDMA/core: Rename rdma_copy_addr to rdma_copy_src_l2_addr)
  {
  	dev_addr->dev_type = dev->type;
  	memcpy(dev_addr->src_dev_addr, dev->dev_addr, MAX_ADDR_LEN);
diff --cc include/rdma/ib_addr.h
index acab7b5dca8b,676514a930ab..000000000000
--- a/include/rdma/ib_addr.h
+++ b/include/rdma/ib_addr.h
@@@ -123,11 -105,7 +123,15 @@@ int rdma_resolve_ip(struct rdma_addr_cl
  
  void rdma_addr_cancel(struct rdma_dev_addr *addr);
  
++<<<<<<< HEAD
 +void rdma_copy_addr(struct rdma_dev_addr *dev_addr,
 +		    const struct net_device *dev,
 +		    const unsigned char *dst_dev_addr);
 +
 +int rdma_addr_size(struct sockaddr *addr);
++=======
+ int rdma_addr_size(const struct sockaddr *addr);
++>>>>>>> 77addc524473 (RDMA/core: Rename rdma_copy_addr to rdma_copy_src_l2_addr)
  int rdma_addr_size_in6(struct sockaddr_in6 *addr);
  int rdma_addr_size_kss(struct __kernel_sockaddr_storage *addr);
  
* Unmerged path drivers/infiniband/core/addr.c
diff --git a/drivers/infiniband/core/cma.c b/drivers/infiniband/core/cma.c
index 744a59d24274..ea845e4e033f 100644
--- a/drivers/infiniband/core/cma.c
+++ b/drivers/infiniband/core/cma.c
@@ -1888,7 +1888,7 @@ static struct rdma_id_private *cma_new_conn_id(struct rdma_cm_id *listen_id,
 		rt->path_rec[1] = *ib_event->param.req_rcvd.alternate_path;
 
 	if (net_dev) {
-		rdma_copy_addr(&rt->addr.dev_addr, net_dev, NULL);
+		rdma_copy_src_l2_addr(&rt->addr.dev_addr, net_dev);
 	} else {
 		if (!cma_protocol_roce(listen_id) &&
 		    cma_any_addr(cma_src_addr(id_priv))) {
@@ -1934,7 +1934,7 @@ static struct rdma_id_private *cma_new_udp_id(struct rdma_cm_id *listen_id,
 		goto err;
 
 	if (net_dev) {
-		rdma_copy_addr(&id->route.addr.dev_addr, net_dev, NULL);
+		rdma_copy_src_l2_addr(&id->route.addr.dev_addr, net_dev);
 	} else {
 		if (!cma_any_addr(cma_src_addr(id_priv))) {
 			ret = cma_translate_addr(cma_src_addr(id_priv),
diff --git a/drivers/infiniband/core/core_priv.h b/drivers/infiniband/core/core_priv.h
index 7655943ecf62..c8f38f496261 100644
--- a/drivers/infiniband/core/core_priv.h
+++ b/drivers/infiniband/core/core_priv.h
@@ -307,5 +307,7 @@ int rdma_addr_find_l2_eth_by_grh(const union ib_gid *sgid,
 				 const union ib_gid *dgid,
 				 u8 *dmac, const struct net_device *ndev,
 				 int *hoplimit);
+void rdma_copy_src_l2_addr(struct rdma_dev_addr *dev_addr,
+			   const struct net_device *dev);
 
 #endif /* _CORE_PRIV_H */
* Unmerged path include/rdma/ib_addr.h
