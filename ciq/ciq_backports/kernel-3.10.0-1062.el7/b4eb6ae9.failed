arcmsr: call scsi_scan_host at the end of host initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Ching Huang <ching2048@areca.com.tw>
commit b4eb6ae9075a958ffe24620f985f6bd729a1b138
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/b4eb6ae9.failed

Call scsi_scan_host at the end of host initialization and fix and error path
to free allocated resource.

	Signed-off-by: Ching Huang <ching2048@areca.com.tw>
	Reviewed-by: Tomas Henzl <thenzl@redhat.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit b4eb6ae9075a958ffe24620f985f6bd729a1b138)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/arcmsr/arcmsr_hba.c
diff --cc drivers/scsi/arcmsr/arcmsr_hba.c
index 278c9fa62067,3d3cdfe07089..000000000000
--- a/drivers/scsi/arcmsr/arcmsr_hba.c
+++ b/drivers/scsi/arcmsr/arcmsr_hba.c
@@@ -667,17 -754,13 +668,21 @@@ static int arcmsr_probe(struct pci_dev 
  	if(error){
  		goto free_hbb_mu;
  	}
 +	arcmsr_iop_init(acb);
  	error = scsi_add_host(host, &pdev->dev);
  	if(error){
- 		goto RAID_controller_stop;
+ 		goto free_ccb_pool;
  	}
 -	if (arcmsr_request_irq(pdev, acb) == FAILED)
 +	error = request_irq(pdev->irq, arcmsr_do_interrupt, IRQF_SHARED, "arcmsr", acb);
 +	if(error){
  		goto scsi_host_remove;
++<<<<<<< HEAD
 +	}
 +	host->irq = pdev->irq;
 +    	scsi_scan_host(host);
++=======
+ 	arcmsr_iop_init(acb);
++>>>>>>> b4eb6ae9075a (arcmsr: call scsi_scan_host at the end of host initialization)
  	INIT_WORK(&acb->arcmsr_do_message_isr_bh, arcmsr_message_isr_bh_fn);
  	atomic_set(&acb->rq_map_token, 16);
  	atomic_set(&acb->ante_token_value, 16);
@@@ -689,16 -772,20 +694,20 @@@
  	add_timer(&acb->eternal_timer);
  	if(arcmsr_alloc_sysfs_attr(acb))
  		goto out_free_sysfs;
+ 	scsi_scan_host(host);
  	return 0;
  out_free_sysfs:
- scsi_host_remove:
- 	scsi_remove_host(host);
- RAID_controller_stop:
+ 	del_timer_sync(&acb->eternal_timer);
+ 	flush_work(&acb->arcmsr_do_message_isr_bh);
  	arcmsr_stop_adapter_bgrb(acb);
  	arcmsr_flush_adapter_cache(acb);
+ 	arcmsr_free_irq(pdev, acb);
+ scsi_host_remove:
+ 	scsi_remove_host(host);
+ free_ccb_pool:
  	arcmsr_free_ccb_pool(acb);
  free_hbb_mu:
 -	arcmsr_free_mu(acb);
 +	arcmsr_free_hbb_mu(acb);
  unmap_pci_region:
  	arcmsr_unmap_pciregion(acb);
  pci_release_regs:
* Unmerged path drivers/scsi/arcmsr/arcmsr_hba.c
