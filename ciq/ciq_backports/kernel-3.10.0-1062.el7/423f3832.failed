xsk: add umem fill queue support and mmap

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Magnus Karlsson <magnus.karlsson@intel.com>
commit 423f38329d267969130fb6f2c685f73d72687558
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/423f3832.failed

Here, we add another setsockopt for registered user memory (umem)
called XDP_UMEM_FILL_QUEUE. Using this socket option, the process can
ask the kernel to allocate a queue (ring buffer) and also mmap it
(XDP_UMEM_PGOFF_FILL_QUEUE) into the process.

The queue is used to explicitly pass ownership of umem frames from the
user process to the kernel. These frames will in a later patch be
filled in with Rx packet data by the kernel.

v2: Fixed potential crash in xsk_mmap.

	Signed-off-by: Magnus Karlsson <magnus.karlsson@intel.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit 423f38329d267969130fb6f2c685f73d72687558)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/xsk_queue.c
#	include/linux/xsk_queue.h
#	include/uapi/linux/if_xdp.h
#	net/xdp/Makefile
#	net/xdp/xdp_umem.c
#	net/xdp/xdp_umem.h
#	net/xdp/xsk.c
* Unmerged path include/linux/xsk_queue.c
* Unmerged path include/linux/xsk_queue.h
* Unmerged path include/uapi/linux/if_xdp.h
* Unmerged path net/xdp/Makefile
* Unmerged path net/xdp/xdp_umem.c
* Unmerged path net/xdp/xdp_umem.h
* Unmerged path net/xdp/xsk.c
* Unmerged path include/linux/xsk_queue.c
* Unmerged path include/linux/xsk_queue.h
* Unmerged path include/uapi/linux/if_xdp.h
* Unmerged path net/xdp/Makefile
* Unmerged path net/xdp/xdp_umem.c
* Unmerged path net/xdp/xdp_umem.h
* Unmerged path net/xdp/xsk.c
