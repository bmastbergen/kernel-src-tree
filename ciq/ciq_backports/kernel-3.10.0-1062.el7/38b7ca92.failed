net/mlx5: Expose DEVX specification

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [kernel] mlx5: Expose DEVX specification (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 93.94%
commit-author Yishai Hadas <yishaih@mellanox.com>
commit 38b7ca927d6a12bf4466be22a90b7d998f5ae69a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/38b7ca92.failed

This patch updates the mlx5_ifc structures and
command interface to support DEVX.

	Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit 38b7ca927d6a12bf4466be22a90b7d998f5ae69a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index c57762dc5bf3,f810772e80c0..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -8993,4 -9075,109 +9006,112 @@@ struct mlx5_ifc_destroy_vport_lag_in_bi
  	u8         reserved_at_40[0x40];
  };
  
++<<<<<<< HEAD
++=======
+ struct mlx5_ifc_alloc_memic_in_bits {
+ 	u8         opcode[0x10];
+ 	u8         reserved_at_10[0x10];
+ 
+ 	u8         reserved_at_20[0x10];
+ 	u8         op_mod[0x10];
+ 
+ 	u8         reserved_at_30[0x20];
+ 
+ 	u8	   reserved_at_40[0x18];
+ 	u8	   log_memic_addr_alignment[0x8];
+ 
+ 	u8         range_start_addr[0x40];
+ 
+ 	u8         range_size[0x20];
+ 
+ 	u8         memic_size[0x20];
+ };
+ 
+ struct mlx5_ifc_alloc_memic_out_bits {
+ 	u8         status[0x8];
+ 	u8         reserved_at_8[0x18];
+ 
+ 	u8         syndrome[0x20];
+ 
+ 	u8         memic_start_addr[0x40];
+ };
+ 
+ struct mlx5_ifc_dealloc_memic_in_bits {
+ 	u8         opcode[0x10];
+ 	u8         reserved_at_10[0x10];
+ 
+ 	u8         reserved_at_20[0x10];
+ 	u8         op_mod[0x10];
+ 
+ 	u8         reserved_at_40[0x40];
+ 
+ 	u8         memic_start_addr[0x40];
+ 
+ 	u8         memic_size[0x20];
+ 
+ 	u8         reserved_at_e0[0x20];
+ };
+ 
+ struct mlx5_ifc_dealloc_memic_out_bits {
+ 	u8         status[0x8];
+ 	u8         reserved_at_8[0x18];
+ 
+ 	u8         syndrome[0x20];
+ 
+ 	u8         reserved_at_40[0x40];
+ };
+ 
+ struct mlx5_ifc_general_obj_in_cmd_hdr_bits {
+ 	u8         opcode[0x10];
+ 	u8         uid[0x10];
+ 
+ 	u8         reserved_at_20[0x10];
+ 	u8         obj_type[0x10];
+ 
+ 	u8         obj_id[0x20];
+ 
+ 	u8         reserved_at_60[0x20];
+ };
+ 
+ struct mlx5_ifc_general_obj_out_cmd_hdr_bits {
+ 	u8         status[0x8];
+ 	u8         reserved_at_8[0x18];
+ 
+ 	u8         syndrome[0x20];
+ 
+ 	u8         obj_id[0x20];
+ 
+ 	u8         reserved_at_60[0x20];
+ };
+ 
+ struct mlx5_ifc_umem_bits {
+ 	u8         modify_field_select[0x40];
+ 
+ 	u8         reserved_at_40[0x5b];
+ 	u8         log_page_size[0x5];
+ 
+ 	u8         page_offset[0x20];
+ 
+ 	u8         num_of_mtt[0x40];
+ 
+ 	struct mlx5_ifc_mtt_bits  mtt[0];
+ };
+ 
+ struct mlx5_ifc_uctx_bits {
+ 	u8         modify_field_select[0x40];
+ 
+ 	u8         reserved_at_40[0x1c0];
+ };
+ 
+ struct mlx5_ifc_create_umem_in_bits {
+ 	struct mlx5_ifc_general_obj_in_cmd_hdr_bits   hdr;
+ 	struct mlx5_ifc_umem_bits                     umem;
+ };
+ 
+ struct mlx5_ifc_create_uctx_in_bits {
+ 	struct mlx5_ifc_general_obj_in_cmd_hdr_bits   hdr;
+ 	struct mlx5_ifc_uctx_bits                     uctx;
+ };
+ 
++>>>>>>> 38b7ca927d6a (net/mlx5: Expose DEVX specification)
  #endif /* MLX5_IFC_H */
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/cmd.c b/drivers/net/ethernet/mellanox/mlx5/core/cmd.c
index 61e4c8a5f143..98d96760b008 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/cmd.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/cmd.c
@@ -311,6 +311,7 @@ static int mlx5_internal_err_ret_value(struct mlx5_core_dev *dev, u16 op,
 	case MLX5_CMD_OP_DEALLOC_ENCAP_HEADER:
 	case MLX5_CMD_OP_DEALLOC_MODIFY_HEADER_CONTEXT:
 	case MLX5_CMD_OP_FPGA_DESTROY_QP:
+	case MLX5_CMD_OP_DESTROY_GENERAL_OBJECT:
 		return MLX5_CMD_STAT_OK;
 
 	case MLX5_CMD_OP_QUERY_HCA_CAP:
@@ -428,6 +429,7 @@ static int mlx5_internal_err_ret_value(struct mlx5_core_dev *dev, u16 op,
 	case MLX5_CMD_OP_FPGA_MODIFY_QP:
 	case MLX5_CMD_OP_FPGA_QUERY_QP:
 	case MLX5_CMD_OP_FPGA_QUERY_QP_COUNTERS:
+	case MLX5_CMD_OP_CREATE_GENERAL_OBJECT:
 		*status = MLX5_DRIVER_STATUS_ABORTED;
 		*synd = MLX5_DRIVER_SYND;
 		return -EIO;
@@ -600,6 +602,8 @@ const char *mlx5_command_str(int command)
 	MLX5_COMMAND_STR_CASE(FPGA_QUERY_QP);
 	MLX5_COMMAND_STR_CASE(FPGA_QUERY_QP_COUNTERS);
 	MLX5_COMMAND_STR_CASE(FPGA_DESTROY_QP);
+	MLX5_COMMAND_STR_CASE(CREATE_GENERAL_OBJECT);
+	MLX5_COMMAND_STR_CASE(DESTROY_GENERAL_OBJECT);
 	default: return "unknown command opcode";
 	}
 }
diff --git a/include/linux/mlx5/device.h b/include/linux/mlx5/device.h
index b7227cb1b564..d0398ff0e316 100644
--- a/include/linux/mlx5/device.h
+++ b/include/linux/mlx5/device.h
@@ -1066,6 +1066,9 @@ enum mlx5_qcam_feature_groups {
 #define MLX5_CAP_GEN(mdev, cap) \
 	MLX5_GET(cmd_hca_cap, mdev->caps.hca_cur[MLX5_CAP_GENERAL], cap)
 
+#define MLX5_CAP_GEN_64(mdev, cap) \
+	MLX5_GET64(cmd_hca_cap, mdev->caps.hca_cur[MLX5_CAP_GENERAL], cap)
+
 #define MLX5_CAP_GEN_MAX(mdev, cap) \
 	MLX5_GET(cmd_hca_cap, mdev->caps.hca_max[MLX5_CAP_GENERAL], cap)
 
* Unmerged path include/linux/mlx5/mlx5_ifc.h
