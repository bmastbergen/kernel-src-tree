perf thread: Make thread__find_symbol() return the symbol searched

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit d9a5f274603bea1c89d59baaf37eef8f57851a09
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/d9a5f274.failed

Instead of just returning it in al.sym, allowing for some simplification
in its users, and to make it consistent with thread__find_map().

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-4axi2sigslffdixzxbehvgoj@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d9a5f274603bea1c89d59baaf37eef8f57851a09)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/event.c
diff --cc tools/perf/util/event.c
index e9c7fd1b5a4e,9d94c59046d1..000000000000
--- a/tools/perf/util/event.c
+++ b/tools/perf/util/event.c
@@@ -1417,17 -1562,18 +1417,21 @@@ try_again
  			map__load(al->map);
  		al->addr = al->map->map_ip(al->map, al->addr);
  	}
 -
 -	return al->map;
  }
  
- void __thread__find_symbol(struct thread *thread, u8 cpumode,
- 			   enum map_type type, u64 addr,
- 			   struct addr_location *al)
+ struct symbol *__thread__find_symbol(struct thread *thread, u8 cpumode,
+ 				     enum map_type type, u64 addr,
+ 				     struct addr_location *al)
  {
++<<<<<<< HEAD
 +	thread__find_addr_map(thread, cpumode, type, addr, al);
 +	if (al->map != NULL)
++=======
+ 	al->sym = NULL;
+ 	if (__thread__find_map(thread, cpumode, type, addr, al))
++>>>>>>> d9a5f274603b (perf thread: Make thread__find_symbol() return the symbol searched)
  		al->sym = map__find_symbol(al->map, al->addr);
- 	else
- 		al->sym = NULL;
+ 	return al->sym;
  }
  
  /*
diff --git a/tools/perf/builtin-timechart.c b/tools/perf/builtin-timechart.c
index 38fcbb5ddce8..a827919c6263 100644
--- a/tools/perf/builtin-timechart.c
+++ b/tools/perf/builtin-timechart.c
@@ -533,11 +533,8 @@ static const char *cat_backtrace(union perf_event *event,
 		}
 
 		tal.filtered = 0;
-		thread__find_symbol(al.thread, cpumode, ip, &tal);
-
-		if (tal.sym)
-			fprintf(f, "..... %016" PRIx64 " %s\n", ip,
-				tal.sym->name);
+		if (thread__find_symbol(al.thread, cpumode, ip, &tal))
+			fprintf(f, "..... %016" PRIx64 " %s\n", ip, tal.sym->name);
 		else
 			fprintf(f, "..... %016" PRIx64 "\n", ip);
 	}
* Unmerged path tools/perf/util/event.c
diff --git a/tools/perf/util/thread.h b/tools/perf/util/thread.h
index 4c0d3984bed4..cf8713783a31 100644
--- a/tools/perf/util/thread.h
+++ b/tools/perf/util/thread.h
@@ -87,11 +87,11 @@ void thread__find_addr_map(struct thread *thread,
 			   u8 cpumode, enum map_type type, u64 addr,
 			   struct addr_location *al);
 
-void __thread__find_symbol(struct thread *thread, u8 cpumode, enum map_type type,
-			   u64 addr, struct addr_location *al);
+struct symbol *__thread__find_symbol(struct thread *thread, u8 cpumode, enum map_type type,
+				     u64 addr, struct addr_location *al);
 
-static inline void thread__find_symbol(struct thread *thread, u8 cpumode,
-				       u64 addr, struct addr_location *al)
+static inline struct symbol *thread__find_symbol(struct thread *thread, u8 cpumode,
+						 u64 addr, struct addr_location *al)
 {
 	return __thread__find_symbol(thread, cpumode, MAP__FUNCTION, addr, al);
 }
diff --git a/tools/perf/util/unwind-libunwind-local.c b/tools/perf/util/unwind-libunwind-local.c
index 1e7f7f1b7fec..576eb6634f70 100644
--- a/tools/perf/util/unwind-libunwind-local.c
+++ b/tools/perf/util/unwind-libunwind-local.c
@@ -585,11 +585,9 @@ static int entry(u64 ip, struct thread *thread,
 	struct unwind_entry e;
 	struct addr_location al;
 
-	thread__find_symbol(thread, PERF_RECORD_MISC_USER, ip, &al);
-
+	e.sym = thread__find_symbol(thread, PERF_RECORD_MISC_USER, ip, &al);
 	e.ip = al.addr;
 	e.map = al.map;
-	e.sym = al.sym;
 
 	pr_debug("unwind: %s:ip = 0x%" PRIx64 " (0x%" PRIx64 ")\n",
 		 al.sym ? al.sym->name : "''",
