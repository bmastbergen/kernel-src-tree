net/mlx5e: Always initialize update stats delayed work

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Always initialize update stats delayed work (Alaa Hleihel) [1576416 1642498]
Rebuild_FUZZ: 96.15%
commit-author Feras Daoud <ferasda@mellanox.com>
commit 303211b44ce3faa4456f78ed725d80e0212aa842
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/303211b4.failed

mlx5e_detach_netdev cancels update_stats work which was not initialized
in ipoib netdevice profile, as a result, the following assert occurs:

ODEBUG: assert_init not available (active state 0) object type:
timer_list hint:(null)

This change moves the update stats work to be initialized for all
mlx5e netdevices.

Fixes: cd565b4b51e5 ("IB/IPoIB: Support acceleration options callbacks")
	Signed-off-by: Feras Daoud <ferasda@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 303211b44ce3faa4456f78ed725d80e0212aa842)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 489704305daa,9cf5863b7949..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -4543,6 -4949,25 +4542,28 @@@ static const struct mlx5e_profile mlx5e
  
  /* mlx5e generic netdev management API (move to en_common.c) */
  
++<<<<<<< HEAD
++=======
+ /* mlx5e_netdev_init/cleanup must be called from profile->init/cleanup callbacks */
+ int mlx5e_netdev_init(struct net_device *netdev, struct mlx5e_priv *priv)
+ {
+ 	netif_carrier_off(netdev);
+ 
+ 	INIT_DELAYED_WORK(&priv->update_stats_work, mlx5e_update_stats_work);
+ 
+ 	priv->wq = create_singlethread_workqueue("mlx5e");
+ 	if (!priv->wq)
+ 		return -ENOMEM;
+ 
+ 	return 0;
+ }
+ 
+ void mlx5e_netdev_cleanup(struct net_device *netdev, struct mlx5e_priv *priv)
+ {
+ 	destroy_workqueue(priv->wq);
+ }
+ 
++>>>>>>> 303211b44ce3 (net/mlx5e: Always initialize update stats delayed work)
  struct net_device *mlx5e_create_netdev(struct mlx5_core_dev *mdev,
  				       const struct mlx5e_profile *profile,
  				       void *ppriv)
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 0e446984afa7,bd8caac2e572..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -994,9 -1091,11 +994,13 @@@ static void mlx5e_init_rep(struct mlx5_
  	priv->profile                      = profile;
  	priv->ppriv                        = ppriv;
  
 -	err = mlx5e_netdev_init(netdev, priv);
 -	if (err)
 -		return err;
 +	mutex_init(&priv->state_lock);
  
++<<<<<<< HEAD
 +	INIT_DELAYED_WORK(&priv->update_stats_work, mlx5e_update_stats_work);
++=======
+ 	mutex_init(&priv->state_lock);
++>>>>>>> 303211b44ce3 (net/mlx5e: Always initialize update stats delayed work)
  
  	priv->channels.params.num_channels = profile->max_nch(mdev);
  
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en.h b/drivers/net/ethernet/mellanox/mlx5/core/en.h
index 4a9c2819d01c..c96d40782442 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@ -1067,7 +1067,6 @@ int mlx5e_create_tises(struct mlx5e_priv *priv);
 void mlx5e_cleanup_nic_tx(struct mlx5e_priv *priv);
 int mlx5e_close(struct net_device *netdev);
 int mlx5e_open(struct net_device *netdev);
-void mlx5e_update_stats_work(struct work_struct *work);
 
 int mlx5e_bits_invert(unsigned long a, int size);
 
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
