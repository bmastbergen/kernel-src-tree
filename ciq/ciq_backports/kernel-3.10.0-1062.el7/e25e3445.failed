ALSA: hda/ca0132 - Change mixer controls for Recon3D

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Connor McAdams <conmanx360@gmail.com>
commit e25e3445049c353223752fd1bacead9d413b0a5a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/e25e3445.failed

This patch adds changes to setup the Recon3D's mixer controls.

	Signed-off-by: Connor McAdams <conmanx360@gmail.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit e25e3445049c353223752fd1bacead9d413b0a5a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_ca0132.c
diff --cc sound/pci/hda/patch_ca0132.c
index 7b95f49cd688,601efaa5c610..000000000000
--- a/sound/pci/hda/patch_ca0132.c
+++ b/sound/pci/hda/patch_ca0132.c
@@@ -4013,6 -5779,51 +4013,54 @@@ static struct snd_kcontrol_new ca0132_m
  	{ } /* end */
  };
  
++<<<<<<< HEAD
++=======
+ /*
+  * Desktop specific control mixer. Removes auto-detect for mic, and adds
+  * surround controls. Also sets both the Front Playback and Capture Volume
+  * controls to alt so they set the DSP's decibel level.
+  */
+ static const struct snd_kcontrol_new desktop_mixer[] = {
+ 	CA0132_ALT_CODEC_VOL("Front Playback Volume", 0x02, HDA_OUTPUT),
+ 	CA0132_CODEC_MUTE("Front Playback Switch", VNID_SPK, HDA_OUTPUT),
+ 	HDA_CODEC_VOLUME("Surround Playback Volume", 0x04, 0, HDA_OUTPUT),
+ 	HDA_CODEC_MUTE("Surround Playback Switch", 0x04, 0, HDA_OUTPUT),
+ 	HDA_CODEC_VOLUME_MONO("Center Playback Volume", 0x03, 1, 0, HDA_OUTPUT),
+ 	HDA_CODEC_MUTE_MONO("Center Playback Switch", 0x03, 1, 0, HDA_OUTPUT),
+ 	HDA_CODEC_VOLUME_MONO("LFE Playback Volume", 0x03, 2, 0, HDA_OUTPUT),
+ 	HDA_CODEC_MUTE_MONO("LFE Playback Switch", 0x03, 2, 0, HDA_OUTPUT),
+ 	CA0132_ALT_CODEC_VOL("Capture Volume", 0x07, HDA_INPUT),
+ 	CA0132_CODEC_MUTE("Capture Switch", VNID_MIC, HDA_INPUT),
+ 	HDA_CODEC_VOLUME("What U Hear Capture Volume", 0x0a, 0, HDA_INPUT),
+ 	HDA_CODEC_MUTE("What U Hear Capture Switch", 0x0a, 0, HDA_INPUT),
+ 	CA0132_CODEC_MUTE_MONO("HP/Speaker Auto Detect Playback Switch",
+ 				VNID_HP_ASEL, 1, HDA_OUTPUT),
+ 	{ } /* end */
+ };
+ 
+ /*
+  * Same as the Sound Blaster Z, except doesn't use the alt volume for capture
+  * because it doesn't set decibel levels for the DSP for capture.
+  */
+ static const struct snd_kcontrol_new r3di_mixer[] = {
+ 	CA0132_ALT_CODEC_VOL("Front Playback Volume", 0x02, HDA_OUTPUT),
+ 	CA0132_CODEC_MUTE("Front Playback Switch", VNID_SPK, HDA_OUTPUT),
+ 	HDA_CODEC_VOLUME("Surround Playback Volume", 0x04, 0, HDA_OUTPUT),
+ 	HDA_CODEC_MUTE("Surround Playback Switch", 0x04, 0, HDA_OUTPUT),
+ 	HDA_CODEC_VOLUME_MONO("Center Playback Volume", 0x03, 1, 0, HDA_OUTPUT),
+ 	HDA_CODEC_MUTE_MONO("Center Playback Switch", 0x03, 1, 0, HDA_OUTPUT),
+ 	HDA_CODEC_VOLUME_MONO("LFE Playback Volume", 0x03, 2, 0, HDA_OUTPUT),
+ 	HDA_CODEC_MUTE_MONO("LFE Playback Switch", 0x03, 2, 0, HDA_OUTPUT),
+ 	CA0132_CODEC_VOL("Capture Volume", VNID_MIC, HDA_INPUT),
+ 	CA0132_CODEC_MUTE("Capture Switch", VNID_MIC, HDA_INPUT),
+ 	HDA_CODEC_VOLUME("What U Hear Capture Volume", 0x0a, 0, HDA_INPUT),
+ 	HDA_CODEC_MUTE("What U Hear Capture Switch", 0x0a, 0, HDA_INPUT),
+ 	CA0132_CODEC_MUTE_MONO("HP/Speaker Auto Detect Playback Switch",
+ 				VNID_HP_ASEL, 1, HDA_OUTPUT),
+ 	{ } /* end */
+ };
+ 
++>>>>>>> e25e3445049c (ALSA: hda/ca0132 - Change mixer controls for Recon3D)
  static int ca0132_build_controls(struct hda_codec *codec)
  {
  	struct ca0132_spec *spec = codec->spec;
@@@ -4031,6 -5855,13 +4079,16 @@@
  	 */
  	num_fx = OUT_EFFECTS_COUNT + IN_EFFECTS_COUNT;
  	for (i = 0; i < num_fx; i++) {
++<<<<<<< HEAD
++=======
+ 		/* SBZ and R3D break if Echo Cancellation is used. */
+ 		if (spec->quirk == QUIRK_SBZ || spec->quirk == QUIRK_R3D) {
+ 			if (i == (ECHO_CANCELLATION - IN_EFFECT_START_NID +
+ 						OUT_EFFECTS_COUNT))
+ 				continue;
+ 		}
+ 
++>>>>>>> e25e3445049c (ALSA: hda/ca0132 - Change mixer controls for Recon3D)
  		err = add_fx_switch(codec, ca0132_effects[i].nid,
  				    ca0132_effects[i].name,
  				    ca0132_effects[i].direct);
@@@ -5096,14 -7602,55 +5154,64 @@@ static int patch_ca0132(struct hda_code
  	else
  		spec->quirk = QUIRK_NONE;
  
 +	if (spec->quirk == QUIRK_GENERIC_PARSER)
 +		return parse_ca0132_generic(codec);
 +
 +	codec->patch_ops = ca0132_patch_ops;
 +
  	spec->dsp_state = DSP_DOWNLOAD_INIT;
  	spec->num_mixers = 1;
++<<<<<<< HEAD
 +	spec->mixers[0] = ca0132_mixer;
++=======
+ 
+ 	/* Set which mixers each quirk uses. */
+ 	switch (spec->quirk) {
+ 	case QUIRK_SBZ:
+ 		spec->mixers[0] = desktop_mixer;
+ 		snd_hda_codec_set_name(codec, "Sound Blaster Z");
+ 		break;
+ 	case QUIRK_R3D:
+ 		spec->mixers[0] = desktop_mixer;
+ 		snd_hda_codec_set_name(codec, "Recon3D");
+ 		break;
+ 	case QUIRK_R3DI:
+ 		spec->mixers[0] = r3di_mixer;
+ 		snd_hda_codec_set_name(codec, "Recon3Di");
+ 		break;
+ 	default:
+ 		spec->mixers[0] = ca0132_mixer;
+ 		break;
+ 	}
+ 
+ 	/* Setup whether or not to use alt functions/controls/pci_mmio */
+ 	switch (spec->quirk) {
+ 	case QUIRK_SBZ:
+ 	case QUIRK_R3D:
+ 		spec->use_alt_controls = true;
+ 		spec->use_alt_functions = true;
+ 		spec->use_pci_mmio = true;
+ 		break;
+ 	case QUIRK_R3DI:
+ 		spec->use_alt_controls = true;
+ 		spec->use_alt_functions = true;
+ 		spec->use_pci_mmio = false;
+ 		break;
+ 	default:
+ 		spec->use_alt_controls = false;
+ 		spec->use_alt_functions = false;
+ 		spec->use_pci_mmio = false;
+ 		break;
+ 	}
+ 
+ 	if (spec->use_pci_mmio) {
+ 		spec->mem_base = pci_iomap(codec->bus->pci, 2, 0xC20);
+ 		if (spec->mem_base == NULL) {
+ 			codec_warn(codec, "pci_iomap failed! Setting quirk to QUIRK_NONE.");
+ 			spec->quirk = QUIRK_NONE;
+ 		}
+ 	}
++>>>>>>> e25e3445049c (ALSA: hda/ca0132 - Change mixer controls for Recon3D)
  
  	spec->base_init_verbs = ca0132_base_init_verbs;
  	spec->base_exit_verbs = ca0132_base_exit_verbs;
* Unmerged path sound/pci/hda/patch_ca0132.c
