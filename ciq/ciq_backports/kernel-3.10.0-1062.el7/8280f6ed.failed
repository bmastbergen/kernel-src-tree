xfs: rename bno to end in __xfs_bunmapi

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 8280f6ed4645549154103da9f037ceb4f7c733b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/8280f6ed.failed

Rename the bno variable that's used as the end of the range in
__xfs_bunmapi to end, which better describes it.  Additionally change
the start variable which takes the initial value of bno to be the
function parameter itself.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit 8280f6ed4645549154103da9f037ceb4f7c733b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_bmap.c
diff --cc fs/xfs/libxfs/xfs_bmap.c
index 7800126fabda,f4469e542c18..000000000000
--- a/fs/xfs/libxfs/xfs_bmap.c
+++ b/fs/xfs/libxfs/xfs_bmap.c
@@@ -5016,12 -5432,14 +5015,13 @@@ __xfs_bunmapi
  	int			whichfork;	/* data or attribute fork */
  	xfs_fsblock_t		sum;
  	xfs_filblks_t		len = *rlen;	/* length to unmap in file */
 -	xfs_fileoff_t		max_len;
  	xfs_agnumber_t		prev_agno = NULLAGNUMBER, agno;
+ 	xfs_fileoff_t		end;
  
- 	trace_xfs_bunmap(ip, bno, len, flags, _RET_IP_);
+ 	trace_xfs_bunmap(ip, start, len, flags, _RET_IP_);
  
 -	whichfork = xfs_bmapi_whichfork(flags);
 -	ASSERT(whichfork != XFS_COW_FORK);
 +	whichfork = (flags & XFS_BMAPI_ATTRFORK) ?
 +		XFS_ATTR_FORK : XFS_DATA_FORK;
  	ifp = XFS_IFORK_PTR(ip, whichfork);
  	if (unlikely(
  	    XFS_IFORK_FORMAT(ip, whichfork) != XFS_DINODE_FMT_EXTENTS &&
@@@ -5080,13 -5508,13 +5079,18 @@@
  	}
  
  	extno = 0;
++<<<<<<< HEAD
 +	while (bno != (xfs_fileoff_t)-1 && bno >= start && lastx >= 0 &&
 +	       (nexts == 0 || extno < nexts)) {
++=======
+ 	while (end != (xfs_fileoff_t)-1 && end >= start && lastx >= 0 &&
+ 	       (nexts == 0 || extno < nexts) && max_len > 0) {
++>>>>>>> 8280f6ed4645 (xfs: rename bno to end in __xfs_bunmapi)
  		/*
- 		 * Is the found extent after a hole in which bno lives?
+ 		 * Is the found extent after a hole in which end lives?
  		 * Just back up to the previous extent, if so.
  		 */
- 		if (got.br_startoff > bno) {
+ 		if (got.br_startoff > end) {
  			if (--lastx < 0)
  				break;
  			xfs_iext_get_extent(ifp, lastx, &got);
@@@ -5122,8 -5550,17 +5126,22 @@@
  			if (!wasdel)
  				del.br_startblock += start - got.br_startoff;
  		}
++<<<<<<< HEAD
 +		if (del.br_startoff + del.br_blockcount > bno + 1)
 +			del.br_blockcount = bno + 1 - del.br_startoff;
++=======
+ 		if (del.br_startoff + del.br_blockcount > end + 1)
+ 			del.br_blockcount = end + 1 - del.br_startoff;
+ 
+ 		/* How much can we safely unmap? */
+ 		if (max_len < del.br_blockcount) {
+ 			del.br_startoff += del.br_blockcount - max_len;
+ 			if (!wasdel)
+ 				del.br_startblock += del.br_blockcount - max_len;
+ 			del.br_blockcount = max_len;
+ 		}
+ 
++>>>>>>> 8280f6ed4645 (xfs: rename bno to end in __xfs_bunmapi)
  		sum = del.br_startblock + del.br_blockcount;
  		if (isrt &&
  		    (mod = do_mod(sum, mp->m_sb.sb_rextsize))) {
@@@ -5140,13 -5577,13 +5158,13 @@@
  				 * This piece is unwritten, or we're not
  				 * using unwritten extents.  Skip over it.
  				 */
- 				ASSERT(bno >= mod);
- 				bno -= mod > del.br_blockcount ?
+ 				ASSERT(end >= mod);
+ 				end -= mod > del.br_blockcount ?
  					del.br_blockcount : mod;
- 				if (bno < got.br_startoff) {
+ 				if (end < got.br_startoff) {
  					if (--lastx >= 0)
 -						xfs_iext_get_extent(ifp, lastx,
 -								&got);
 +						xfs_bmbt_get_all(xfs_iext_get_ext(
 +							ifp, lastx), &got);
  				}
  				continue;
  			}
@@@ -5298,7 -5733,8 +5316,12 @@@
  		if (!isrt && wasdel)
  			xfs_mod_fdblocks(mp, (int64_t)del.br_blockcount, false);
  
++<<<<<<< HEAD
 +		bno = del.br_startoff - 1;
++=======
+ 		max_len -= del.br_blockcount;
+ 		end = del.br_startoff - 1;
++>>>>>>> 8280f6ed4645 (xfs: rename bno to end in __xfs_bunmapi)
  nodelete:
  		/*
  		 * If not done go on to the next (previous) record.
* Unmerged path fs/xfs/libxfs/xfs_bmap.c
