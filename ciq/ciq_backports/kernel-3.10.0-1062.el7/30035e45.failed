string: provide strscpy()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Chris Metcalf <cmetcalf@ezchip.com>
commit 30035e45753b708e7d47a98398500ca005e02b86
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/30035e45.failed

The strscpy() API is intended to be used instead of strlcpy(),
and instead of most uses of strncpy().

- Unlike strlcpy(), it doesn't read from memory beyond (src + size).

- Unlike strlcpy() or strncpy(), the API provides an easy way to check
  for destination buffer overflow: an -E2BIG error return value.

- The provided implementation is robust in the face of the source
  buffer being asynchronously changed during the copy, unlike the
  current implementation of strlcpy().

- Unlike strncpy(), the destination buffer will be NUL-terminated
  if the string in the source buffer is too long.

- Also unlike strncpy(), the destination buffer will not be updated
  beyond the NUL termination, avoiding strncpy's behavior of zeroing
  the entire tail end of the destination buffer.  (A memset() after
  the strscpy() can be used if this behavior is desired.)

- The implementation should be reasonably performant on all
  platforms since it uses the asm/word-at-a-time.h API rather than
  simple byte copy.  Kernel-to-kernel string copy is not considered
  to be performance critical in any case.

	Signed-off-by: Chris Metcalf <cmetcalf@ezchip.com>
(cherry picked from commit 30035e45753b708e7d47a98398500ca005e02b86)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/string.c
diff --cc lib/string.c
index bf3486da38b7,8dbb7b1eab50..000000000000
--- a/lib/string.c
+++ b/lib/string.c
@@@ -27,9 -27,13 +27,17 @@@
  #include <linux/bug.h>
  #include <linux/errno.h>
  
++<<<<<<< HEAD
 +#ifndef __HAVE_ARCH_STRNICMP
++=======
+ #include <asm/byteorder.h>
+ #include <asm/word-at-a-time.h>
+ #include <asm/page.h>
+ 
+ #ifndef __HAVE_ARCH_STRNCASECMP
++>>>>>>> 30035e45753b (string: provide strscpy())
  /**
 - * strncasecmp - Case insensitive, length-limited string comparison
 + * strnicmp - Case insensitive, length-limited string comparison
   * @s1: One string
   * @s2: The other string
   * @len: the maximum number of characters to compare
diff --git a/include/linux/string.h b/include/linux/string.h
index 31c64befcec8..3a47b8ed366d 100644
--- a/include/linux/string.h
+++ b/include/linux/string.h
@@ -26,6 +26,9 @@ extern char * strncpy(char *,const char *, __kernel_size_t);
 #ifndef __HAVE_ARCH_STRLCPY
 size_t strlcpy(char *, const char *, size_t);
 #endif
+#ifndef __HAVE_ARCH_STRSCPY
+ssize_t __must_check strscpy(char *, const char *, size_t);
+#endif
 #ifndef __HAVE_ARCH_STRCAT
 extern char * strcat(char *, const char *);
 #endif
* Unmerged path lib/string.c
