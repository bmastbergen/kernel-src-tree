net/mlx5: E-Switch, Have explicit API to delete fwd rules

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5: E-Switch, Have explicit API to delete fwd rules (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 96.36%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 482650069a2b84c9c87ea85b56d7b310c6005c6f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/48265006.failed

Be symmetric with the e-switch API to add rules which has a
specific function to add fwd rules which are used as part of
vport mirroring.

This patch doesn't change any functionality.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Reviewed-by: Paul Blakey <paulb@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 482650069a2b84c9c87ea85b56d7b310c6005c6f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index 3a01f0d3c372,7487bdd55f23..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -887,7 -919,9 +887,13 @@@ static void mlx5e_tc_del_fdb_flow(struc
  
  	if (flow->flags & MLX5E_TC_FLOW_OFFLOADED) {
  		flow->flags &= ~MLX5E_TC_FLOW_OFFLOADED;
++<<<<<<< HEAD
 +		mlx5_eswitch_del_offloaded_rule(esw, flow->rule, attr);
++=======
+ 		if (attr->mirror_count)
+ 			mlx5_eswitch_del_fwd_rule(esw, flow->rule[1], attr);
+ 		mlx5_eswitch_del_offloaded_rule(esw, flow->rule[0], attr);
++>>>>>>> 482650069a2b (net/mlx5: E-Switch, Have explicit API to delete fwd rules)
  	}
  
  	mlx5_eswitch_del_vlan_action(esw, attr);
@@@ -942,8 -992,12 +948,14 @@@ void mlx5e_tc_encap_flows_del(struct ml
  
  	list_for_each_entry(flow, &e->flows, encap) {
  		if (flow->flags & MLX5E_TC_FLOW_OFFLOADED) {
 -			struct mlx5_esw_flow_attr *attr = flow->esw_attr;
 -
  			flow->flags &= ~MLX5E_TC_FLOW_OFFLOADED;
++<<<<<<< HEAD
 +			mlx5_eswitch_del_offloaded_rule(esw, flow->rule, flow->esw_attr);
++=======
+ 			if (attr->mirror_count)
+ 				mlx5_eswitch_del_fwd_rule(esw, flow->rule[1], attr);
+ 			mlx5_eswitch_del_offloaded_rule(esw, flow->rule[0], attr);
++>>>>>>> 482650069a2b (net/mlx5: E-Switch, Have explicit API to delete fwd rules)
  		}
  	}
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
index 21bc97b70ed9..867758fc24d9 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@ -224,6 +224,10 @@ void
 mlx5_eswitch_del_offloaded_rule(struct mlx5_eswitch *esw,
 				struct mlx5_flow_handle *rule,
 				struct mlx5_esw_flow_attr *attr);
+void
+mlx5_eswitch_del_fwd_rule(struct mlx5_eswitch *esw,
+			  struct mlx5_flow_handle *rule,
+			  struct mlx5_esw_flow_attr *attr);
 
 struct mlx5_flow_handle *
 mlx5_eswitch_create_vport_rx_rule(struct mlx5_eswitch *esw, int vport,
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index 84864631953e..97e9b0f91818 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@ -147,6 +147,14 @@ mlx5_eswitch_del_offloaded_rule(struct mlx5_eswitch *esw,
 	esw->offloads.num_flows--;
 }
 
+void
+mlx5_eswitch_del_fwd_rule(struct mlx5_eswitch *esw,
+			  struct mlx5_flow_handle *rule,
+			  struct mlx5_esw_flow_attr *attr)
+{
+	mlx5_eswitch_del_offloaded_rule(esw, rule, attr);
+}
+
 static int esw_set_global_vlan_pop(struct mlx5_eswitch *esw, u8 val)
 {
 	struct mlx5_eswitch_rep *rep;
