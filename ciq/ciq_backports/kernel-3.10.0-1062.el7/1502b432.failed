ALSA: hda/ca0132 - Add error checking in ca0132_build_controls()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Connor McAdams <conmanx360@gmail.com>
commit 1502b432781ea5ab5a769f6d217503166ad775cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/1502b432.failed

This patch adds error checking to functions creating controls inside of
ca0132_build_controls().

	Signed-off-by: Connor McAdams <conmanx360@gmail.com>
	Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 1502b432781ea5ab5a769f6d217503166ad775cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_ca0132.c
diff --cc sound/pci/hda/patch_ca0132.c
index e10b8cea0b28,693b0630efb2..000000000000
--- a/sound/pci/hda/patch_ca0132.c
+++ b/sound/pci/hda/patch_ca0132.c
@@@ -4055,6 -6354,20 +4055,23 @@@ static int ca0132_build_controls(struc
  		if (err < 0)
  			return err;
  	}
++<<<<<<< HEAD
++=======
+ 	/* Setup vmaster with surround slaves for desktop ca0132 devices */
+ 	if (spec->use_alt_functions) {
+ 		snd_hda_set_vmaster_tlv(codec, spec->dacs[0], HDA_OUTPUT,
+ 					spec->tlv);
+ 		snd_hda_add_vmaster(codec, "Master Playback Volume",
+ 					spec->tlv, ca0132_alt_slave_pfxs,
+ 					"Playback Volume");
+ 		err = __snd_hda_add_vmaster(codec, "Master Playback Switch",
+ 					    NULL, ca0132_alt_slave_pfxs,
+ 					    "Playback Switch",
+ 					    true, &spec->vmaster_mute.sw_kctl);
+ 		if (err < 0)
+ 			return err;
+ 	}
++>>>>>>> 1502b432781e (ALSA: hda/ca0132 - Add error checking in ca0132_build_controls())
  
  	/* Add in and out effects controls.
  	 * VoiceFX, PE and CrystalVoice are added separately.
@@@ -4067,17 -6387,97 +4084,98 @@@
  		if (err < 0)
  			return err;
  	}
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * If codec has use_alt_controls set to true, add effect level sliders,
+ 	 * EQ presets, and Smart Volume presets. Also, change names to add FX
+ 	 * prefix, and change PlayEnhancement and CrystalVoice to match.
+ 	 */
+ 	if (spec->use_alt_controls) {
+ 		err = ca0132_alt_add_svm_enum(codec);
+ 		if (err < 0)
+ 			return err;
+ 
+ 		err = add_ca0132_alt_eq_presets(codec);
+ 		if (err < 0)
+ 			return err;
+ 
+ 		err = add_fx_switch(codec, PLAY_ENHANCEMENT,
+ 					"Enable OutFX", 0);
+ 		if (err < 0)
+ 			return err;
++>>>>>>> 1502b432781e (ALSA: hda/ca0132 - Add error checking in ca0132_build_controls())
  
 -		err = add_fx_switch(codec, CRYSTAL_VOICE,
 -					"Enable InFX", 1);
 -		if (err < 0)
 -			return err;
 +	err = add_fx_switch(codec, PLAY_ENHANCEMENT, "PlayEnhancement", 0);
 +	if (err < 0)
 +		return err;
  
 -		num_sliders = OUT_EFFECTS_COUNT - 1;
 -		for (i = 0; i < num_sliders; i++) {
 -			err = ca0132_alt_add_effect_slider(codec,
 -					    ca0132_effects[i].nid,
 -					    ca0132_effects[i].name,
 -					    ca0132_effects[i].direct);
 -			if (err < 0)
 -				return err;
 -		}
 +	err = add_fx_switch(codec, CRYSTAL_VOICE, "CrystalVoice", 1);
 +	if (err < 0)
 +		return err;
  
++<<<<<<< HEAD
 +	add_voicefx(codec);
 +
++=======
+ 		err = ca0132_alt_add_effect_slider(codec, XBASS_XOVER,
+ 					"X-Bass Crossover", EFX_DIR_OUT);
+ 
+ 		if (err < 0)
+ 			return err;
+ 	} else {
+ 		err = add_fx_switch(codec, PLAY_ENHANCEMENT,
+ 					"PlayEnhancement", 0);
+ 		if (err < 0)
+ 			return err;
+ 
+ 		err = add_fx_switch(codec, CRYSTAL_VOICE,
+ 					"CrystalVoice", 1);
+ 		if (err < 0)
+ 			return err;
+ 	}
+ 	err = add_voicefx(codec);
+ 	if (err < 0)
+ 		return err;
+ 
+ 	/*
+ 	 * If the codec uses alt_functions, you need the enumerated controls
+ 	 * to select the new outputs and inputs, plus add the new mic boost
+ 	 * setting control.
+ 	 */
+ 	if (spec->use_alt_functions) {
+ 		err = ca0132_alt_add_output_enum(codec);
+ 		if (err < 0)
+ 			return err;
+ 		err = ca0132_alt_add_mic_boost_enum(codec);
+ 		if (err < 0)
+ 			return err;
+ 		/*
+ 		 * ZxR only has microphone input, there is no front panel
+ 		 * header on the card, and aux-in is handled by the DBPro board.
+ 		 */
+ 		if (spec->quirk != QUIRK_ZXR) {
+ 			err = ca0132_alt_add_input_enum(codec);
+ 			if (err < 0)
+ 				return err;
+ 		}
+ 	}
+ 
+ 	if (spec->quirk == QUIRK_AE5) {
+ 		err = ae5_add_headphone_gain_enum(codec);
+ 		if (err < 0)
+ 			return err;
+ 		err = ae5_add_sound_filter_enum(codec);
+ 		if (err < 0)
+ 			return err;
+ 	}
+ 
+ 	if (spec->quirk == QUIRK_ZXR) {
+ 		err = zxr_add_headphone_gain_switch(codec);
+ 		if (err < 0)
+ 			return err;
+ 	}
++>>>>>>> 1502b432781e (ALSA: hda/ca0132 - Add error checking in ca0132_build_controls())
  #ifdef ENABLE_TUNING_CONTROLS
  	add_tuning_ctls(codec);
  #endif
* Unmerged path sound/pci/hda/patch_ca0132.c
