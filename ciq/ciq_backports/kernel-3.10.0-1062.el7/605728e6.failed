IB/umem: Set correct address to the invalidation function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Artemy Kovalyov <artemyko@mellanox.com>
commit 605728e65ad303a1b639bcae7c0abd2e24e6a930
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/605728e6.failed

The invalidate range was using PAGE_SIZE instead of the computed 'end',
and had the wrong transformation of page_index due the weird
construction. This can trigger during error unwind and would cause
malfunction.

Inline the code and correct the math.

Fixes: 403cd12e2cf7 ("IB/umem: Add contiguous ODP support")
	Signed-off-by: Artemy Kovalyov <artemyko@mellanox.com>
	Signed-off-by: Moni Shoua <monis@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 605728e65ad303a1b639bcae7c0abd2e24e6a930)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/umem_odp.c
diff --cc drivers/infiniband/core/umem_odp.c
index 505862826f1c,676c1fd1119d..000000000000
--- a/drivers/infiniband/core/umem_odp.c
+++ b/drivers/infiniband/core/umem_odp.c
@@@ -177,29 -126,17 +177,32 @@@ static int ib_umem_notifier_release_tra
  static void ib_umem_notifier_release(struct mmu_notifier *mn,
  				     struct mm_struct *mm)
  {
 -	struct ib_ucontext_per_mm *per_mm =
 -		container_of(mn, struct ib_ucontext_per_mm, mn);
 -
 -	down_read(&per_mm->umem_rwsem);
 -	if (per_mm->active)
 -		rbt_ib_umem_for_each_in_range(
 -			&per_mm->umem_tree, 0, ULLONG_MAX,
 -			ib_umem_notifier_release_trampoline, true, NULL);
 -	up_read(&per_mm->umem_rwsem);
 +	struct ib_ucontext *context = container_of(mn, struct ib_ucontext, mn);
 +
 +	if (!context->invalidate_range)
 +		return;
 +
 +	ib_ucontext_notifier_start_account(context);
 +	down_read(&context->umem_rwsem);
 +	rbt_ib_umem_for_each_in_range(&context->umem_tree, 0,
 +				      ULLONG_MAX,
 +				      ib_umem_notifier_release_trampoline,
 +				      NULL);
 +	up_read(&context->umem_rwsem);
 +}
 +
++<<<<<<< HEAD
 +static int invalidate_page_trampoline(struct ib_umem_odp *item, u64 start,
 +				      u64 end, void *cookie)
 +{
 +	ib_umem_notifier_start_account(item);
 +	item->umem->context->invalidate_range(item, start, start + PAGE_SIZE);
 +	ib_umem_notifier_end_account(item);
 +	return 0;
  }
  
++=======
++>>>>>>> 605728e65ad3 (IB/umem: Set correct address to the invalidation function)
  static int invalidate_range_start_trampoline(struct ib_umem_odp *item,
  					     u64 start, u64 end, void *cookie)
  {
* Unmerged path drivers/infiniband/core/umem_odp.c
