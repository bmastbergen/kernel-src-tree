scsi: mpt3sas: Use dma_pool_zalloc

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [scsi] mpt3sas: Use dma_pool_zalloc (Tomas Henzl) [1642370]
Rebuild_FUZZ: 90.32%
commit-author Souptick Joarder <jrdr.linux@gmail.com>
commit c39a4d755393936d406516e32faf925f167bcfe5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c39a4d75.failed

Replaced dma_pool_alloc + memset with dma_pool_zalloc.

	Signed-off-by: Brajeswar Ghosh <brajeswar.linux@gmail.com>
	Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
	Acked-by: Suganath Prabu <suganath-prabu.subramani@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit c39a4d755393936d406516e32faf925f167bcfe5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/mpt3sas/mpt3sas_base.c
diff --cc drivers/scsi/mpt3sas/mpt3sas_base.c
index c8e9286b81af,4f51cee8f2c7..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_base.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_base.c
@@@ -3666,21 -4467,17 +3666,32 @@@ _base_allocate_memory_pools(struct MPT3
  		    GFP_KERNEL,
  		    &ioc->reply_post[i].reply_post_free_dma);
  		if (!ioc->reply_post[i].reply_post_free) {
 -			ioc_err(ioc, "reply_post_free pool: dma_pool_alloc failed\n");
 +			pr_err(MPT3SAS_FMT
 +			"reply_post_free pool: dma_pool_alloc failed\n",
 +			ioc->name);
  			goto out;
  		}
++<<<<<<< HEAD
 +		memset(ioc->reply_post[i].reply_post_free, 0, sz);
 +		dinitprintk(ioc, pr_info(MPT3SAS_FMT
 +		    "reply post free pool (0x%p): depth(%d),"
 +		    "element_size(%d), pool_size(%d kB)\n", ioc->name,
 +		    ioc->reply_post[i].reply_post_free,
 +		    ioc->reply_post_queue_depth, 8, sz/1024));
 +		dinitprintk(ioc, pr_info(MPT3SAS_FMT
 +		    "reply_post_free_dma = (0x%llx)\n", ioc->name,
 +		    (unsigned long long)
 +		    ioc->reply_post[i].reply_post_free_dma));
++=======
+ 		dinitprintk(ioc,
+ 			    ioc_info(ioc, "reply post free pool (0x%p): depth(%d), element_size(%d), pool_size(%d kB)\n",
+ 				     ioc->reply_post[i].reply_post_free,
+ 				     ioc->reply_post_queue_depth,
+ 				     8, sz / 1024));
+ 		dinitprintk(ioc,
+ 			    ioc_info(ioc, "reply_post_free_dma = (0x%llx)\n",
+ 				     (u64)ioc->reply_post[i].reply_post_free_dma));
++>>>>>>> c39a4d755393 (scsi: mpt3sas: Use dma_pool_zalloc)
  		total_sz += sz;
  	} while (ioc->rdpq_array_enable && (++i < ioc->reply_queue_count));
  
@@@ -3919,24 -4777,22 +3930,34 @@@
  	ioc->reply_free_dma_pool = dma_pool_create("reply_free pool",
  	    &ioc->pdev->dev, sz, 16, 0);
  	if (!ioc->reply_free_dma_pool) {
 -		ioc_err(ioc, "reply_free pool: dma_pool_create failed\n");
 +		pr_err(MPT3SAS_FMT "reply_free pool: dma_pool_create failed\n",
 +			ioc->name);
  		goto out;
  	}
- 	ioc->reply_free = dma_pool_alloc(ioc->reply_free_dma_pool, GFP_KERNEL,
+ 	ioc->reply_free = dma_pool_zalloc(ioc->reply_free_dma_pool, GFP_KERNEL,
  	    &ioc->reply_free_dma);
  	if (!ioc->reply_free) {
 -		ioc_err(ioc, "reply_free pool: dma_pool_alloc failed\n");
 +		pr_err(MPT3SAS_FMT "reply_free pool: dma_pool_alloc failed\n",
 +			ioc->name);
  		goto out;
  	}
++<<<<<<< HEAD
 +	memset(ioc->reply_free, 0, sz);
 +	dinitprintk(ioc, pr_info(MPT3SAS_FMT "reply_free pool(0x%p): " \
 +	    "depth(%d), element_size(%d), pool_size(%d kB)\n", ioc->name,
 +	    ioc->reply_free, ioc->reply_free_queue_depth, 4, sz/1024));
 +	dinitprintk(ioc, pr_info(MPT3SAS_FMT
 +		"reply_free_dma (0x%llx)\n",
 +		ioc->name, (unsigned long long)ioc->reply_free_dma));
++=======
+ 	dinitprintk(ioc,
+ 		    ioc_info(ioc, "reply_free pool(0x%p): depth(%d), element_size(%d), pool_size(%d kB)\n",
+ 			     ioc->reply_free, ioc->reply_free_queue_depth,
+ 			     4, sz / 1024));
+ 	dinitprintk(ioc,
+ 		    ioc_info(ioc, "reply_free_dma (0x%llx)\n",
+ 			     (unsigned long long)ioc->reply_free_dma));
++>>>>>>> c39a4d755393 (scsi: mpt3sas: Use dma_pool_zalloc)
  	total_sz += sz;
  
  	if (ioc->rdpq_array_enable) {
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_base.c
