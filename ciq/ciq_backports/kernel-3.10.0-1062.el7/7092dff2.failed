debugobj, workqueue: remove keventd_up() usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Tejun Heo <tj@kernel.org>
commit 7092dff2af0bd734b91e963d693b9123de7e4414
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/7092dff2.failed

Now that workqueue can handle work item queueing from very early
during boot, there is no need to gate schedule_work() while
!keventd_up().  Remove it.

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Acked-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit 7092dff2af0bd734b91e963d693b9123de7e4414)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/debugobjects.c
diff --cc lib/debugobjects.c
index a1b85ba90d32,8458ec9d3d9f..000000000000
--- a/lib/debugobjects.c
+++ b/lib/debugobjects.c
@@@ -221,8 -198,8 +221,13 @@@ static void free_object(struct debug_ob
  	 * schedule work when the pool is filled and the cache is
  	 * initialized:
  	 */
++<<<<<<< HEAD
 +	if (obj_pool_free > debug_objects_pool_size && obj_cache)
 +		sched = keventd_up() && !work_pending(&debug_obj_work);
++=======
+ 	if (obj_pool_free > ODEBUG_POOL_SIZE && obj_cache)
+ 		sched = 1;
++>>>>>>> 7092dff2af0b (debugobj, workqueue: remove keventd_up() usage)
  	hlist_add_head(&obj->node, &obj_pool);
  	obj_pool_free++;
  	obj_pool_used--;
* Unmerged path lib/debugobjects.c
