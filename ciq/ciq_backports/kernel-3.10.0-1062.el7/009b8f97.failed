ALSA: hda/ca0132: update core functions for sbz + r3di

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Connor McAdams <conmanx360@gmail.com>
commit 009b8f979bf8cb5f7ec6d3dd7683585122ed10f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/009b8f97.failed

This patch updates core functions to accommodate the Sound Blaster Z and
Recon3Di by changing which functions they use. It also adds the ability
to enable/disable streams.

	Signed-off-by: Connor McAdams <conmanx360@gmail.com>
	Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 009b8f979bf8cb5f7ec6d3dd7683585122ed10f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_ca0132.c
diff --cc sound/pci/hda/patch_ca0132.c
index 267302056b78,096eb3bbeb48..000000000000
--- a/sound/pci/hda/patch_ca0132.c
+++ b/sound/pci/hda/patch_ca0132.c
@@@ -761,6 -769,18 +761,21 @@@ struct ca0132_spec 
  #ifdef ENABLE_TUNING_CONTROLS
  	long cur_ctl_vals[TUNING_CTLS_COUNT];
  #endif
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * Sound Blaster Z PCI region 2 iomem, used for input and output
+ 	 * switching, and other unknown commands.
+ 	 */
+ 	void __iomem *mem_base;
+ 
+ 	/*
+ 	 * Whether or not to use the alt functions like alt_select_out,
+ 	 * alt_select_in, etc. Only used on desktop codecs for now, because of
+ 	 * surround sound support.
+ 	 */
+ 	bool use_alt_functions;
++>>>>>>> 009b8f979bf8 (ALSA: hda/ca0132: update core functions for sbz + r3di)
  };
  
  /*
@@@ -4445,13 -4661,17 +4565,14 @@@ static void ca0132_download_dsp(struct 
  		return; /* don't retry failures */
  
  	chipio_enable_clocks(codec);
 -	if (spec->dsp_state != DSP_DOWNLOADED) {
 -		spec->dsp_state = DSP_DOWNLOADING;
 -
 -		if (!ca0132_download_dsp_images(codec))
 -			spec->dsp_state = DSP_DOWNLOAD_FAILED;
 -		else
 -			spec->dsp_state = DSP_DOWNLOADED;
 -	}
 +	spec->dsp_state = DSP_DOWNLOADING;
 +	if (!ca0132_download_dsp_images(codec))
 +		spec->dsp_state = DSP_DOWNLOAD_FAILED;
 +	else
 +		spec->dsp_state = DSP_DOWNLOADED;
  
- 	if (spec->dsp_state == DSP_DOWNLOADED)
+ 	/* For codecs using alt functions, this is already done earlier */
+ 	if (spec->dsp_state == DSP_DOWNLOADED && (!spec->use_alt_functions))
  		ca0132_set_dsp_msr(codec, true);
  }
  
@@@ -4746,7 -5149,17 +4872,21 @@@ static int ca0132_init(struct hda_code
  
  	init_input(codec, cfg->dig_in_pin, spec->dig_in);
  
++<<<<<<< HEAD
 +	snd_hda_sequence_write(codec, spec->chip_init_verbs);
++=======
+ 	if (!spec->use_alt_functions) {
+ 		snd_hda_sequence_write(codec, spec->chip_init_verbs);
+ 		snd_hda_codec_write(codec, WIDGET_CHIP_CTRL, 0,
+ 			    VENDOR_CHIPIO_PARAM_EX_ID_SET, 0x0D);
+ 		snd_hda_codec_write(codec, WIDGET_CHIP_CTRL, 0,
+ 			    VENDOR_CHIPIO_PARAM_EX_VALUE_SET, 0x20);
+ 	}
+ 
+ 	if (spec->quirk == QUIRK_SBZ)
+ 		ca0132_gpio_setup(codec);
+ 
++>>>>>>> 009b8f979bf8 (ALSA: hda/ca0132: update core functions for sbz + r3di)
  	snd_hda_sequence_write(codec, spec->spec_init_verbs);
  
  	ca0132_select_out(codec);
@@@ -5079,10 -5427,15 +5219,22 @@@ static int patch_ca0132(struct hda_code
  	else
  		spec->quirk = QUIRK_NONE;
  
++<<<<<<< HEAD
 +	if (spec->quirk == QUIRK_GENERIC_PARSER)
 +		return parse_ca0132_generic(codec);
 +
 +	codec->patch_ops = ca0132_patch_ops;
++=======
+ 	/* Setup BAR Region 2 for Sound Blaster Z */
+ 	if (spec->quirk == QUIRK_SBZ) {
+ 		spec->mem_base = pci_iomap(codec->bus->pci, 2, 0xC20);
+ 		if (spec->mem_base == NULL) {
+ 			codec_warn(codec, "pci_iomap failed!");
+ 			codec_info(codec, "perhaps this is not an SBZ?");
+ 			spec->quirk = QUIRK_NONE;
+ 		}
+ 	}
++>>>>>>> 009b8f979bf8 (ALSA: hda/ca0132: update core functions for sbz + r3di)
  
  	spec->dsp_state = DSP_DOWNLOAD_INIT;
  	spec->num_mixers = 1;
* Unmerged path sound/pci/hda/patch_ca0132.c
