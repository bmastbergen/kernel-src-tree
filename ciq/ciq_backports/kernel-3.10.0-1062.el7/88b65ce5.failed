gfs2: Minor gfs2_page_add_databufs cleanup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 88b65ce5fdd9ac75df1534cf6503db0ccb230ecb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/88b65ce5.failed

The to parameter of gfs2_page_add_databufs is passed inconsistently:
once as from + len, once as from + len - 1.  Just pass len instead.

In addition, once we're past the end, we can immediately break out of
the loop.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit 88b65ce5fdd9ac75df1534cf6503db0ccb230ecb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/aops.c
diff --cc fs/gfs2/aops.c
index cacd7512318a,ac4a1e89da1e..000000000000
--- a/fs/gfs2/aops.c
+++ b/fs/gfs2/aops.c
@@@ -214,9 -190,9 +217,9 @@@ static int __gfs2_jdata_writepage(struc
  		ClearPageChecked(page);
  		if (!page_has_buffers(page)) {
  			create_empty_buffers(page, inode->i_sb->s_blocksize,
 -					     BIT(BH_Dirty)|BIT(BH_Uptodate));
 +					     (1 << BH_Dirty)|(1 << BH_Uptodate));
  		}
- 		gfs2_page_add_databufs(ip, page, 0, sdp->sd_vfs->s_blocksize-1);
+ 		gfs2_page_add_databufs(ip, page, 0, sdp->sd_vfs->s_blocksize);
  	}
  	return gfs2_write_full_page(page, gfs2_get_block_noalloc, wbc);
  }
@@@ -932,8 -892,6 +935,11 @@@ static int gfs2_write_end(struct file *
  	struct gfs2_sbd *sdp = GFS2_SB(inode);
  	struct gfs2_inode *m_ip = GFS2_I(sdp->sd_statfs_inode);
  	struct buffer_head *dibh;
++<<<<<<< HEAD
 +	unsigned int from = pos & (PAGE_CACHE_SIZE - 1);
 +	unsigned int to = from + len;
++=======
++>>>>>>> 88b65ce5fdd9 (gfs2: Minor gfs2_page_add_databufs cleanup)
  	int ret;
  	struct gfs2_trans *tr = current->journal_info;
  	BUG_ON(!tr);
* Unmerged path fs/gfs2/aops.c
