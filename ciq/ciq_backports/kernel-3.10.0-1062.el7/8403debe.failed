vlan: Keep NETIF_F_HW_CSUM similar to other software devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Vlad Yasevich <vyasevich@gmail.com>
commit 8403debeead8e8b296d7a7db2174af524695ab42
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/8403debe.failed

Vlan devices, like all other software devices, enable
NETIF_F_HW_CSUM feature.  However, unlike all the othe other
software devices, vlans will switch to using IP|IPV6_CSUM
features, if the underlying devices uses them.  In these situations,
checksum offload features on the vlan device can't be controlled
via ethtool.

This patch makes vlans keep HW_CSUM feature if the underlying
device supports checksum offloading.  This makes vlan devices
behave like other software devices, and restores control to the
user.

A side-effect is that some offload settings (typically UFO)
may be enabled on the vlan device while being disabled on the HW.
However, the GSO code will correctly process the packets. This
actually results in slightly better raw throughput.

	Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
	Acked-by: Alexander Duyck <alexander.h.duyck@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8403debeead8e8b296d7a7db2174af524695ab42)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/8021q/vlan_dev.c
diff --cc net/8021q/vlan_dev.c
index 965619d9001c,953b6728bd00..000000000000
--- a/net/8021q/vlan_dev.c
+++ b/net/8021q/vlan_dev.c
@@@ -658,12 -626,19 +658,23 @@@ static netdev_features_t vlan_dev_fix_f
  {
  	struct net_device *real_dev = vlan_dev_priv(dev)->real_dev;
  	netdev_features_t old_features = features;
+ 	netdev_features_t lower_features;
  
- 	features = netdev_intersect_features(features, real_dev->vlan_features);
- 	features |= NETIF_F_RXCSUM;
- 	features = netdev_intersect_features(features, real_dev->features);
+ 	lower_features = netdev_intersect_features((real_dev->vlan_features |
+ 						    NETIF_F_RXCSUM),
+ 						   real_dev->features);
  
++<<<<<<< HEAD
 +	features |= old_features & NETIF_F_SOFT_FEATURES;
++=======
+ 	/* Add HW_CSUM setting to preserve user ability to control
+ 	 * checksum offload on the vlan device.
+ 	 */
+ 	if (lower_features & (NETIF_F_IP_CSUM|NETIF_F_IPV6_CSUM))
+ 		lower_features |= NETIF_F_HW_CSUM;
+ 	features = netdev_intersect_features(features, lower_features);
+ 	features |= old_features & (NETIF_F_SOFT_FEATURES | NETIF_F_GSO_SOFTWARE);
++>>>>>>> 8403debeead8 (vlan: Keep NETIF_F_HW_CSUM similar to other software devices)
  	features |= NETIF_F_LLTX;
  
  	return features;
* Unmerged path net/8021q/vlan_dev.c
