efi/x86: Use non-blocking SetVariable() for efi_delete_dummy_variable()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Sai Praneeth <sai.praneeth.prakhya@intel.com>
commit 5a58bc1b1edc18a9edff606ec99e6f6b723975f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/5a58bc1b.failed

Presently, efi_delete_dummy_variable() uses set_variable() which might
block, which the scheduler is rightfully upset about when used from
the idle thread, producing this splat:

  "bad: scheduling from the idle thread!"

So, make efi_delete_dummy_variable() use set_variable_nonblocking(),
which, as the name suggests, doesn't block.

	Signed-off-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-efi@vger.kernel.org
Link: http://lkml.kernel.org/r/20180711094040.12506-3-ard.biesheuvel@linaro.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 5a58bc1b1edc18a9edff606ec99e6f6b723975f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/platform/efi/quirks.c
diff --cc arch/x86/platform/efi/quirks.c
index 8678178b5929,6af39dc40325..000000000000
--- a/arch/x86/platform/efi/quirks.c
+++ b/arch/x86/platform/efi/quirks.c
@@@ -49,11 -105,38 +49,19 @@@ early_param("efi_no_storage_paranoia", 
  */
  void efi_delete_dummy_variable(void)
  {
++<<<<<<< HEAD
 +	efi.set_variable(efi_dummy_name, &EFI_DUMMY_GUID,
 +			 EFI_VARIABLE_NON_VOLATILE |
 +			 EFI_VARIABLE_BOOTSERVICE_ACCESS |
 +			 EFI_VARIABLE_RUNTIME_ACCESS,
 +			 0, NULL);
++=======
+ 	efi.set_variable_nonblocking((efi_char16_t *)efi_dummy_name,
+ 				     &EFI_DUMMY_GUID,
+ 				     EFI_VARIABLE_NON_VOLATILE |
+ 				     EFI_VARIABLE_BOOTSERVICE_ACCESS |
+ 				     EFI_VARIABLE_RUNTIME_ACCESS, 0, NULL);
 -}
 -
 -/*
 - * In the nonblocking case we do not attempt to perform garbage
 - * collection if we do not have enough free space. Rather, we do the
 - * bare minimum check and give up immediately if the available space
 - * is below EFI_MIN_RESERVE.
 - *
 - * This function is intended to be small and simple because it is
 - * invoked from crash handler paths.
 - */
 -static efi_status_t
 -query_variable_store_nonblocking(u32 attributes, unsigned long size)
 -{
 -	efi_status_t status;
 -	u64 storage_size, remaining_size, max_size;
 -
 -	status = efi.query_variable_info_nonblocking(attributes, &storage_size,
 -						     &remaining_size,
 -						     &max_size);
 -	if (status != EFI_SUCCESS)
 -		return status;
 -
 -	if (remaining_size - size < EFI_MIN_RESERVE)
 -		return EFI_OUT_OF_RESOURCES;
 -
 -	return EFI_SUCCESS;
++>>>>>>> 5a58bc1b1edc (efi/x86: Use non-blocking SetVariable() for efi_delete_dummy_variable())
  }
  
  /*
* Unmerged path arch/x86/platform/efi/quirks.c
