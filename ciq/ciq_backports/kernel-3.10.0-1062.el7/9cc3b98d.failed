sunrpc: remove redundant variables 'checksumlen','blocksize' and 'data'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [net] sunrpc: remove redundant variables 'checksumlen', 'blocksize' and 'data' (Kamal Heib) [1655920]
Rebuild_FUZZ: 99.30%
commit-author YueHaibing <yuehaibing@huawei.com>
commit 9cc3b98d1fdb0d279c6ba9264cac1ae2210497d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/9cc3b98d.failed

Variables 'checksumlen','blocksize' and 'data' are being assigned,
but are never used, hence they are redundant and can be removed.

Fix the following warning:

  net/sunrpc/auth_gss/gss_krb5_wrap.c:443:7: warning: variable ‘blocksize’ set but not used [-Wunused-but-set-variable]
  net/sunrpc/auth_gss/gss_krb5_crypto.c:376:15: warning: variable ‘checksumlen’ set but not used [-Wunused-but-set-variable]
  net/sunrpc/xprtrdma/svc_rdma.c:97:9: warning: variable ‘data’ set but not used [-Wunused-but-set-variable]

	Signed-off-by: YueHaibing <yuehaibing@huawei.com>
	Reviewed-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 9cc3b98d1fdb0d279c6ba9264cac1ae2210497d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/auth_gss/gss_krb5_crypto.c
#	net/sunrpc/auth_gss/gss_krb5_wrap.c
diff --cc net/sunrpc/auth_gss/gss_krb5_crypto.c
index c2f38a839efe,84a16fd03431..000000000000
--- a/net/sunrpc/auth_gss/gss_krb5_crypto.c
+++ b/net/sunrpc/auth_gss/gss_krb5_crypto.c
@@@ -356,14 -389,17 +355,17 @@@ make_checksum_v2(struct krb5_ctx *kctx
  	if (!checksumdata)
  		return GSS_S_FAILURE;
  
 -	tfm = crypto_alloc_ahash(kctx->gk5e->cksum_name, 0, CRYPTO_ALG_ASYNC);
 -	if (IS_ERR(tfm))
 +	desc.tfm = crypto_alloc_hash(kctx->gk5e->cksum_name, 0,
 +							CRYPTO_ALG_ASYNC);
 +	if (IS_ERR(desc.tfm))
  		goto out_free_cksum;
++<<<<<<< HEAD
 +	checksumlen = crypto_hash_digestsize(desc.tfm);
 +	desc.flags = CRYPTO_TFM_REQ_MAY_SLEEP;
++=======
++>>>>>>> 9cc3b98d1fdb (sunrpc: remove redundant variables 'checksumlen','blocksize' and 'data')
  
 -	req = ahash_request_alloc(tfm, GFP_NOFS);
 -	if (!req)
 -		goto out_free_ahash;
 -
 -	ahash_request_set_callback(req, CRYPTO_TFM_REQ_MAY_SLEEP, NULL, NULL);
 -
 -	err = crypto_ahash_setkey(tfm, cksumkey, kctx->gk5e->keylength);
 +	err = crypto_hash_setkey(desc.tfm, cksumkey, kctx->gk5e->keylength);
  	if (err)
  		goto out;
  
diff --cc net/sunrpc/auth_gss/gss_krb5_wrap.c
index 18b5916f9f7b,9a1347fec6f4..000000000000
--- a/net/sunrpc/auth_gss/gss_krb5_wrap.c
+++ b/net/sunrpc/auth_gss/gss_krb5_wrap.c
@@@ -473,7 -472,6 +472,10 @@@ gss_wrap_kerberos_v2(struct krb5_ctx *k
  	*ptr++ = 0xff;
  	be16ptr = (__be16 *)ptr;
  
++<<<<<<< HEAD
 +	blocksize = crypto_blkcipher_blocksize(kctx->acceptor_enc);
++=======
++>>>>>>> 9cc3b98d1fdb (sunrpc: remove redundant variables 'checksumlen','blocksize' and 'data')
  	*be16ptr++ = 0;
  	/* "inner" token header always uses 0 for RRC */
  	*be16ptr++ = 0;
* Unmerged path net/sunrpc/auth_gss/gss_krb5_crypto.c
* Unmerged path net/sunrpc/auth_gss/gss_krb5_wrap.c
diff --git a/net/sunrpc/xprtrdma/svc_rdma.c b/net/sunrpc/xprtrdma/svc_rdma.c
index 357ba90c382d..134bef6a451e 100644
--- a/net/sunrpc/xprtrdma/svc_rdma.c
+++ b/net/sunrpc/xprtrdma/svc_rdma.c
@@ -94,7 +94,6 @@ static int read_reset_stat(struct ctl_table *table, int write,
 		atomic_set(stat, 0);
 	else {
 		char str_buf[32];
-		char *data;
 		int len = snprintf(str_buf, 32, "%d\n", atomic_read(stat));
 		if (len >= 32)
 			return -EFAULT;
@@ -103,7 +102,6 @@ static int read_reset_stat(struct ctl_table *table, int write,
 			*lenp = 0;
 			return 0;
 		}
-		data = &str_buf[*ppos];
 		len -= *ppos;
 		if (len > *lenp)
 			len = *lenp;
