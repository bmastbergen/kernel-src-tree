r8169: don't configure max jumbo frame size per chip version

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit abe8b2f71e28f0193e7a4c989ef5fae227e5a9f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/abe8b2f7.failed

We don't have to configure the max jumbo frame size per chip
(sub-)version. It can be easily determined based on the chip family.
And new members of the RTL8168 family (if there are any) should be
automatically covered.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit abe8b2f71e28f0193e7a4c989ef5fae227e5a9f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index 0a2f12cfa51f,14d185b10cda..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -7394,10 -7247,9 +7358,10 @@@ static int rtl_init_one(struct pci_dev 
  {
  	const struct rtl_cfg_info *cfg = rtl_cfg_infos + ent->driver_data;
  	struct rtl8169_private *tp;
 +	struct mii_if_info *mii;
  	struct net_device *dev;
  	int chipset, region, i;
- 	int rc;
+ 	int jumbo_max, rc;
  
  	dev = devm_alloc_etherdev(&pdev->dev, sizeof (*tp));
  	if (!dev)
@@@ -7565,6 -7410,11 +7529,14 @@@
  	dev->hw_features |= NETIF_F_RXALL;
  	dev->hw_features |= NETIF_F_RXFCS;
  
++<<<<<<< HEAD
++=======
+ 	/* MTU range: 60 - hw-specific max */
+ 	dev->min_mtu = ETH_ZLEN;
+ 	jumbo_max = rtl_jumbo_max(tp);
+ 	dev->max_mtu = jumbo_max;
+ 
++>>>>>>> abe8b2f71e28 (r8169: don't configure max jumbo frame size per chip version)
  	tp->hw_start = cfg->hw_start;
  	tp->event_slow = cfg->event_slow;
  	tp->coalesce_info = cfg->coalesce_info;
* Unmerged path drivers/net/ethernet/realtek/r8169.c
