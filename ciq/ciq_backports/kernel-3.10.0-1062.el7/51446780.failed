sctp: fix identification of new acks for SFR-CACC

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
commit 51446780fc33e45cb790c05a7fa2c5bf7e8bc53b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/51446780.failed

It's currently written as:

if (!tchunk->tsn_gap_acked) {   [1]
	tchunk->tsn_gap_acked = 1;
	...
}

if (TSN_lte(tsn, sack_ctsn)) {
	if (!tchunk->tsn_gap_acked) {
		/* SFR-CACC processing */
		...
	}
}

Which causes the SFR-CACC processing on ack reception to never process,
as tchunk->tsn_gap_acked is always true by then. Block [1] was
moved to that position by the commit marked below.

This patch fixes it by doing SFR-CACC processing earlier, before
tsn_gap_acked is set to true.

Fixes: 31b02e154940 ("sctp: Failover transmitted list on transport delete")
	Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
	Reviewed-by: Xin Long <lucien.xin@gmail.com>
	Acked-by: Neil Horman <nhorman@tuxdriver.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 51446780fc33e45cb790c05a7fa2c5bf7e8bc53b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sctp/outqueue.c
diff --cc net/sctp/outqueue.c
index 7acab4f446ec,dee7cbd54831..000000000000
--- a/net/sctp/outqueue.c
+++ b/net/sctp/outqueue.c
@@@ -1452,8 -1469,7 +1452,12 @@@ static void sctp_check_transmitted(stru
  				 * first instance of the packet or a later
  				 * instance).
  				 */
++<<<<<<< HEAD
 +				if (!tchunk->tsn_gap_acked &&
 +				    !tchunk->resent &&
++=======
+ 				if (!sctp_chunk_retransmitted(tchunk) &&
++>>>>>>> 51446780fc33 (sctp: fix identification of new acks for SFR-CACC)
  				    tchunk->rtt_in_progress) {
  					tchunk->rtt_in_progress = 0;
  					rtt = jiffies - tchunk->sent_at;
* Unmerged path net/sctp/outqueue.c
