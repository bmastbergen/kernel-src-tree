perf script: Extend misc field decoding with switch out event type

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Alexey Budankov <alexey.budankov@linux.intel.com>
commit bf30cc1882d2c65aaf92842cc9bcf06565eab73c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/bf30cc18.failed

Append 'p' sign to 'S' tag designating the type of context switch out event so
'Sp' means preemption context switch. Documentation is extended to cover
new presentation changes.

  $ perf script --show-switch-events -F +misc -I -i perf.data:

          hdparm 4073 [004] U  762.198265:     380194 cycles:ppp:      7faf727f5a23 strchr (/usr/lib64/ld-2.26.so)
          hdparm 4073 [004] K  762.198366:     441572 cycles:ppp:  ffffffffb9218435 alloc_set_pte (/lib/modules/4.16.0-rc6+/build/vmlinux)
          hdparm 4073 [004] S  762.198391: PERF_RECORD_SWITCH_CPU_WIDE OUT          next pid/tid:    0/0
         swapper    0 [004]    762.198392: PERF_RECORD_SWITCH_CPU_WIDE IN           prev pid/tid: 4073/4073
         swapper    0 [004] Sp 762.198477: PERF_RECORD_SWITCH_CPU_WIDE OUT preempt  next pid/tid: 4073/4073
          hdparm 4073 [004]    762.198478: PERF_RECORD_SWITCH_CPU_WIDE IN           prev pid/tid:    0/0
         swapper    0 [007] K  762.198514:    2303073 cycles:ppp:  ffffffffb98b0c66 intel_idle (/lib/modules/4.16.0-rc6+/build/vmlinux)
         swapper    0 [007] Sp 762.198561: PERF_RECORD_SWITCH_CPU_WIDE OUT preempt  next pid/tid: 1134/1134
  kworker/u16:18 1134 [007]    762.198562: PERF_RECORD_SWITCH_CPU_WIDE IN           prev pid/tid:    0/0
  kworker/u16:18 1134 [007] S  762.198567: PERF_RECORD_SWITCH_CPU_WIDE OUT          next pid/tid:    0/0

	Signed-off-by: Alexey Budankov <alexey.budankov@linux.intel.com>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/5fc65ce7-8ca5-53ae-8858-8ddd27290575@linux.intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit bf30cc1882d2c65aaf92842cc9bcf06565eab73c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Documentation/perf-script.txt
#	tools/perf/builtin-script.c
diff --cc tools/perf/Documentation/perf-script.txt
index a5c8259c4832,afdafe2110a1..000000000000
--- a/tools/perf/Documentation/perf-script.txt
+++ b/tools/perf/Documentation/perf-script.txt
@@@ -217,6 -217,33 +217,36 @@@ OPTION
  
  	The brstackoff field will print an offset into a specific dso/binary.
  
++<<<<<<< HEAD
++=======
+ 	With the metric option perf script can compute metrics for
+ 	sampling periods, similar to perf stat. This requires
+ 	specifying a group with multiple metrics with the :S option
+ 	for perf record. perf will sample on the first event, and
+ 	compute metrics for all the events in the group. Please note
+ 	that the metric computed is averaged over the whole sampling
+ 	period, not just for the sample point.
+ 
+ 	For sample events it's possible to display misc field with -F +misc option,
+ 	following letters are displayed for each bit:
+ 
+ 	  PERF_RECORD_MISC_KERNEL               K
+ 	  PERF_RECORD_MISC_USER                 U
+ 	  PERF_RECORD_MISC_HYPERVISOR           H
+ 	  PERF_RECORD_MISC_GUEST_KERNEL         G
+ 	  PERF_RECORD_MISC_GUEST_USER           g
+ 	  PERF_RECORD_MISC_MMAP_DATA*           M
+ 	  PERF_RECORD_MISC_COMM_EXEC            E
+ 	  PERF_RECORD_MISC_SWITCH_OUT           S
+ 	  PERF_RECORD_MISC_SWITCH_OUT_PREEMPT   Sp
+ 
+ 	  $ perf script -F +misc ...
+ 	   sched-messaging  1414 K     28690.636582:       4590 cycles ...
+ 	   sched-messaging  1407 U     28690.636600:     325620 cycles ...
+ 	   sched-messaging  1414 K     28690.636608:      19473 cycles ...
+ 	  misc field ___________/
+ 
++>>>>>>> bf30cc1882d2 (perf script: Extend misc field decoding with switch out event type)
  -k::
  --vmlinux=<file>::
          vmlinux pathname
diff --cc tools/perf/builtin-script.c
index a9b367022c45,e0a9845b6cbc..000000000000
--- a/tools/perf/builtin-script.c
+++ b/tools/perf/builtin-script.c
@@@ -611,6 -628,50 +611,53 @@@ static int perf_sample__fprintf_start(s
  			printed += fprintf(fp, "[%03d] ", sample->cpu);
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (PRINT_FIELD(MISC)) {
+ 		int ret = 0;
+ 
+ 		#define has(m) \
+ 			(sample->misc & PERF_RECORD_MISC_##m) == PERF_RECORD_MISC_##m
+ 
+ 		if (has(KERNEL))
+ 			ret += fprintf(fp, "K");
+ 		if (has(USER))
+ 			ret += fprintf(fp, "U");
+ 		if (has(HYPERVISOR))
+ 			ret += fprintf(fp, "H");
+ 		if (has(GUEST_KERNEL))
+ 			ret += fprintf(fp, "G");
+ 		if (has(GUEST_USER))
+ 			ret += fprintf(fp, "g");
+ 
+ 		switch (type) {
+ 		case PERF_RECORD_MMAP:
+ 		case PERF_RECORD_MMAP2:
+ 			if (has(MMAP_DATA))
+ 				ret += fprintf(fp, "M");
+ 			break;
+ 		case PERF_RECORD_COMM:
+ 			if (has(COMM_EXEC))
+ 				ret += fprintf(fp, "E");
+ 			break;
+ 		case PERF_RECORD_SWITCH:
+ 		case PERF_RECORD_SWITCH_CPU_WIDE:
+ 			if (has(SWITCH_OUT)) {
+ 				ret += fprintf(fp, "S");
+ 				if (sample->misc & PERF_RECORD_MISC_SWITCH_OUT_PREEMPT)
+ 					ret += fprintf(fp, "p");
+ 			}
+ 		default:
+ 			break;
+ 		}
+ 
+ 		#undef has
+ 
+ 		ret += fprintf(fp, "%*s", 6 - ret, " ");
+ 		printed += ret;
+ 	}
+ 
++>>>>>>> bf30cc1882d2 (perf script: Extend misc field decoding with switch out event type)
  	if (PRINT_FIELD(TIME)) {
  		nsecs = sample->time;
  		secs = nsecs / NSEC_PER_SEC;
* Unmerged path tools/perf/Documentation/perf-script.txt
* Unmerged path tools/perf/builtin-script.c
