net/mlx5e: vxlan.c depends on CONFIG_VXLAN

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: vxlan.c depends on CONFIG_VXLAN (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 95.00%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit c5791ab0abecb5e4a41673b83e3660f731b0717b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/c5791ab0.failed

When vxlan is not enabled by kernel, no need to enable it in mlx5.
Compile out lib/vxlan.c if CONFIG_VXLAN is not selected.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Reviewed-by: Moshe Shemesh <moshe@mellanox.com>
	Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
(cherry picked from commit c5791ab0abecb5e4a41673b83e3660f731b0717b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/Kconfig
#	drivers/net/ethernet/mellanox/mlx5/core/Makefile
#	drivers/net/ethernet/mellanox/mlx5/core/vxlan.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/Kconfig
index 19634241cc72,37a551436e4a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/Kconfig
+++ b/drivers/net/ethernet/mellanox/mlx5/core/Kconfig
@@@ -6,7 -6,8 +6,12 @@@ config MLX5_COR
  	tristate "Mellanox 5th generation network adapters (ConnectX series) core driver"
  	depends on MAY_USE_DEVLINK
  	depends on PCI
++<<<<<<< HEAD
 +	select PTP_1588_CLOCK
++=======
+ 	imply PTP_1588_CLOCK
+ 	imply VXLAN
++>>>>>>> c5791ab0abec (net/mlx5e: vxlan.c depends on CONFIG_VXLAN)
  	default n
  	---help---
  	  Core driver for low level functionality of the ConnectX-4 and
diff --cc drivers/net/ethernet/mellanox/mlx5/core/Makefile
index 7500fab9286b,09b5e235527b..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/Makefile
+++ b/drivers/net/ethernet/mellanox/mlx5/core/Makefile
@@@ -12,11 -13,15 +12,20 @@@ mlx5_core-$(CONFIG_MLX5_ACCEL) += accel
  mlx5_core-$(CONFIG_MLX5_FPGA) += fpga/cmd.o fpga/core.o fpga/conn.o fpga/sdk.o \
  		fpga/ipsec.o fpga/tls.o
  
+ mlx5_core-$(CONFIG_MLX5_MPFS)  += lib/mpfs.o
+ mlx5_core-$(CONFIG_VXLAN) += lib/vxlan.o
+ 
  mlx5_core-$(CONFIG_MLX5_CORE_EN) += en_main.o en_common.o en_fs.o en_ethtool.o \
++<<<<<<< HEAD
 +		en_tx.o en_rx.o en_dim.o en_txrx.o en_stats.o vxlan.o \
 +		en_arfs.o en_fs_ethtool.o en_selftest.o
++=======
+ 		en_tx.o en_rx.o en_dim.o en_txrx.o en/xdp.o en_stats.o \
+ 		en_selftest.o en/port.o
  
- mlx5_core-$(CONFIG_MLX5_MPFS) += lib/mpfs.o
+ mlx5_core-$(CONFIG_MLX5_EN_ARFS)  += en_arfs.o
+ mlx5_core-$(CONFIG_MLX5_EN_RXNFC) += en_fs_ethtool.o
++>>>>>>> c5791ab0abec (net/mlx5e: vxlan.c depends on CONFIG_VXLAN)
  
  mlx5_core-$(CONFIG_MLX5_ESWITCH) += eswitch.o eswitch_offloads.o en_rep.o en_tc.o
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/vxlan.h
index 6b38b6fbd030,8fb0eb08fa6d..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/vxlan.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/vxlan.h
@@@ -33,20 -33,32 +33,42 @@@
  #define __MLX5_VXLAN_H__
  
  #include <linux/mlx5/driver.h>
 +#include "en.h"
  
 -struct mlx5_vxlan;
  struct mlx5_vxlan_port;
  
++<<<<<<< HEAD:drivers/net/ethernet/mellanox/mlx5/core/vxlan.h
 +static inline bool mlx5e_vxlan_allowed(struct mlx5_core_dev *mdev)
++=======
+ static inline bool mlx5_vxlan_allowed(struct mlx5_vxlan *vxlan)
++>>>>>>> c5791ab0abec (net/mlx5e: vxlan.c depends on CONFIG_VXLAN):drivers/net/ethernet/mellanox/mlx5/core/lib/vxlan.h
  {
 -	/* not allowed reason is encoded in vxlan pointer as error,
 -	 * on mlx5_vxlan_create
 -	 */
 -	return !IS_ERR_OR_NULL(vxlan);
 +	return (MLX5_CAP_ETH(mdev, tunnel_stateless_vxlan) &&
 +		mlx5_core_is_pf(mdev));
  }
  
++<<<<<<< HEAD:drivers/net/ethernet/mellanox/mlx5/core/vxlan.h
 +void mlx5e_vxlan_init(struct mlx5e_priv *priv);
 +void mlx5e_vxlan_cleanup(struct mlx5e_priv *priv);
 +void mlx5e_vxlan_add_port(struct mlx5e_priv *priv, u16 port);
 +void mlx5e_vxlan_del_port(struct mlx5e_priv *priv, u16 port);
 +struct mlx5_vxlan_port *mlx5e_vxlan_lookup_port(struct mlx5e_priv *priv, u16 port);
++=======
+ #if IS_ENABLED(CONFIG_VXLAN)
+ struct mlx5_vxlan *mlx5_vxlan_create(struct mlx5_core_dev *mdev);
+ void mlx5_vxlan_destroy(struct mlx5_vxlan *vxlan);
+ int mlx5_vxlan_add_port(struct mlx5_vxlan *vxlan, u16 port);
+ int mlx5_vxlan_del_port(struct mlx5_vxlan *vxlan, u16 port);
+ struct mlx5_vxlan_port *mlx5_vxlan_lookup_port(struct mlx5_vxlan *vxlan, u16 port);
+ #else
+ static inline struct mlx5_vxlan*
+ mlx5_vxlan_create(struct mlx5_core_dev *mdev) { return ERR_PTR(-EOPNOTSUPP); }
+ static inline void mlx5_vxlan_destroy(struct mlx5_vxlan *vxlan) { return; }
+ static inline int mlx5_vxlan_add_port(struct mlx5_vxlan *vxlan, u16 port) { return -EOPNOTSUPP; }
+ static inline int mlx5_vxlan_del_port(struct mlx5_vxlan *vxlan, u16 port) { return -EOPNOTSUPP; }
+ static inline struct mx5_vxlan_port*
+ mlx5_vxlan_lookup_port(struct mlx5_vxlan *vxlan, u16 port) { return NULL; }
+ #endif
++>>>>>>> c5791ab0abec (net/mlx5e: vxlan.c depends on CONFIG_VXLAN):drivers/net/ethernet/mellanox/mlx5/core/lib/vxlan.h
  
  #endif /* __MLX5_VXLAN_H__ */
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/Kconfig
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/Makefile
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/vxlan.h
