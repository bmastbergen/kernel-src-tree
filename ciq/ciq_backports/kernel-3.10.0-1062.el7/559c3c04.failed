r8169: replace event_slow with irq_mask

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit 559c3c046d4b4f52715ffdac7572302010b6d648
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/559c3c04.failed

Recently the "slow event" handler was removed, therefore the member
name isn't appropriate any longer. In addition store the full mask,
including the RTL_EVENT_NAPI interrupt source bits.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 559c3c046d4b4f52715ffdac7572302010b6d648)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index a5e031e17b8a,5d6eb38c635b..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -720,8 -661,9 +720,8 @@@ struct rtl8169_private 
  	struct ring_info tx_skb[NUM_TX_DESC];	/* Tx data buffers */
  	u16 cp_cmd;
  
- 	u16 event_slow;
+ 	u16 irq_mask;
  	const struct rtl_coalesce_info *coalesce_info;
 -	struct clk *clk;
  
  	struct mdio_ops {
  		void (*write)(struct rtl8169_private *, int, int);
@@@ -1415,9 -1338,9 +1415,13 @@@ static void rtl_irq_enable(struct rtl81
  #define RTL_EVENT_NAPI_TX	(TxOK | TxErr)
  #define RTL_EVENT_NAPI		(RTL_EVENT_NAPI_RX | RTL_EVENT_NAPI_TX)
  
 -static void rtl_irq_enable(struct rtl8169_private *tp)
 +static void rtl_irq_enable_all(struct rtl8169_private *tp)
  {
++<<<<<<< HEAD
 +	rtl_irq_enable(tp, RTL_EVENT_NAPI | tp->event_slow);
++=======
+ 	RTL_W16(tp, IntrMask, tp->irq_mask);
++>>>>>>> 559c3c046d4b (r8169: replace event_slow with irq_mask)
  }
  
  static void rtl8169_irq_mask_and_ack(struct rtl8169_private *tp)
@@@ -6735,45 -6456,32 +6739,45 @@@ static irqreturn_t rtl8169_interrupt(in
  	struct rtl8169_private *tp = dev_instance;
  	u16 status = rtl_get_events(tp);
  
- 	if (status == 0xffff || !(status & (RTL_EVENT_NAPI | tp->event_slow)))
+ 	if (status == 0xffff || !(status & tp->irq_mask))
  		return IRQ_NONE;
  
 -	if (unlikely(status & SYSErr)) {
 -		rtl8169_pcierr_interrupt(tp->dev);
 -		goto out;
 -	}
 +	rtl_irq_disable(tp);
 +	napi_schedule_irqoff(&tp->napi);
  
 -	if (status & LinkChg)
 -		phy_mac_interrupt(tp->dev->phydev);
 +	return IRQ_HANDLED;
 +}
  
 -	if (unlikely(status & RxFIFOOver &&
 -	    tp->mac_version == RTL_GIGA_MAC_VER_11)) {
 -		netif_stop_queue(tp->dev);
 -		/* XXX - Hack alert. See rtl_task(). */
 -		set_bit(RTL_FLAG_TASK_RESET_PENDING, tp->wk.flags);
 -	}
 +/*
 + * Workqueue context.
 + */
 +static void rtl_slow_event_work(struct rtl8169_private *tp)
 +{
 +	struct net_device *dev = tp->dev;
 +	u16 status;
  
 -	if (status & RTL_EVENT_NAPI) {
 -		rtl_irq_disable(tp);
 -		napi_schedule_irqoff(&tp->napi);
 -	}
 -out:
 +	status = rtl_get_events(tp) & tp->event_slow;
  	rtl_ack_events(tp, status);
  
 -	return IRQ_HANDLED;
 +	if (unlikely(status & RxFIFOOver)) {
 +		switch (tp->mac_version) {
 +		/* Work around for rx fifo overflow */
 +		case RTL_GIGA_MAC_VER_11:
 +			netif_stop_queue(dev);
 +			/* XXX - Hack alert. See rtl_task(). */
 +			set_bit(RTL_FLAG_TASK_RESET_PENDING, tp->wk.flags);
 +		default:
 +			break;
 +		}
 +	}
 +
 +	if (unlikely(status & SYSErr))
 +		rtl8169_pcierr_interrupt(dev);
 +
 +	if (status & LinkChg)
 +		rtl8169_check_link_status(dev, tp);
 +
 +	rtl_irq_enable_all(tp);
  }
  
  static void rtl_task(struct work_struct *work)
@@@ -7555,8 -7409,13 +7559,8 @@@ static int rtl_init_one(struct pci_dev 
  	dev->hw_features |= NETIF_F_RXALL;
  	dev->hw_features |= NETIF_F_RXFCS;
  
 -	/* MTU range: 60 - hw-specific max */
 -	dev->min_mtu = ETH_ZLEN;
 -	jumbo_max = rtl_jumbo_max(tp);
 -	dev->max_mtu = jumbo_max;
 -
  	tp->hw_start = cfg->hw_start;
- 	tp->event_slow = cfg->event_slow;
+ 	tp->irq_mask = RTL_EVENT_NAPI | cfg->irq_mask;
  	tp->coalesce_info = cfg->coalesce_info;
  
  	tp->rtl_fw = RTL_FIRMWARE_UNKNOWN;
* Unmerged path drivers/net/ethernet/realtek/r8169.c
