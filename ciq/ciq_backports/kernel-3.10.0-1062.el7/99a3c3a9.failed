perf sched map: Re-annotate shortname if thread comm changed

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Changbin Du <changbin.du@intel.com>
commit 99a3c3a91382a7e5e841a98467a8409b47b540f0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/99a3c3a9.failed

This is to show the real name of thread that created via fork-exec.  See
below example for shortname *A0*.

$ sudo ./perf sched map
              *A0   80393.050639 secs A0 => perf:22368
          *.   A0   80393.050748 secs .  => swapper:0
           .  *.    80393.050887 secs
      *B0  .   .    80393.052735 secs B0 => rcu_sched:8
      *.   .   .    80393.052743 secs
       .  *C0  .    80393.056264 secs C0 => kworker/2:1H:287
       .  *A0  .    80393.056270 secs
       .  *D0  .    80393.056769 secs D0 => ksoftirqd/2:22
-      .  *A0  .    80393.056804 secs
+      .  *A0  .    80393.056804 secs A0 => pi:22368
       .  *.   .    80393.056854 secs
      *B0  .   .    80393.060727 secs
      ...

	Signed-off-by: Changbin Du <changbin.du@intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/1520307457-23668-3-git-send-email-changbin.du@intel.com
[ Optimally pack struct thread_runtime when adding the new bool member ]
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 99a3c3a91382a7e5e841a98467a8409b47b540f0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-sched.c
diff --cc tools/perf/builtin-sched.c
index 6c52a614bdc6,4dfdee668b0c..000000000000
--- a/tools/perf/builtin-sched.c
+++ b/tools/perf/builtin-sched.c
@@@ -3305,7 -3340,8 +3339,12 @@@ int cmd_sched(int argc, const char **ar
  	struct perf_sched sched = {
  		.tool = {
  			.sample		 = perf_sched__process_tracepoint_sample,
++<<<<<<< HEAD
 +			.comm		 = perf_event__process_comm,
++=======
+ 			.comm		 = perf_sched__process_comm,
+ 			.namespaces	 = perf_event__process_namespaces,
++>>>>>>> 99a3c3a91382 (perf sched map: Re-annotate shortname if thread comm changed)
  			.lost		 = perf_event__process_lost,
  			.fork		 = perf_sched__process_fork_event,
  			.ordered_events = true,
* Unmerged path tools/perf/builtin-sched.c
