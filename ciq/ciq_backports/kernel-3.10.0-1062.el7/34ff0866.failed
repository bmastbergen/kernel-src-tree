perf stat: Move 'big_num' data to 'struct perf_stat_config'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 34ff0866d46ae206de884f54e7235f57096e5588
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/34ff0866.failed

Move the static variable 'big_num' to 'struct perf_stat_config', so that
it can be passed around and used outside 'perf stat' command.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180830063252.23729-39-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 34ff0866d46ae206de884f54e7235f57096e5588)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
#	tools/perf/util/stat.h
diff --cc tools/perf/builtin-stat.c
index 13693124ed08,8ca85017a973..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -155,10 -151,7 +155,9 @@@ static bool			transaction_run
  static bool			topdown_run			= false;
  static bool			smi_cost			= false;
  static bool			smi_reset			= false;
- static bool			big_num				=  true;
  static int			big_num_opt			=  -1;
 +static const char		*csv_sep			= NULL;
 +static bool			csv_output			= false;
  static bool			group				= false;
  static const char		*pre_cmd			= NULL;
  static const char		*post_cmd			= NULL;
@@@ -202,8 -185,13 +201,18 @@@ static struct perf_stat		perf_stat
  static volatile int done = 0;
  
  static struct perf_stat_config stat_config = {
++<<<<<<< HEAD
 +	.aggr_mode	= AGGR_GLOBAL,
 +	.scale		= true,
++=======
+ 	.aggr_mode		= AGGR_GLOBAL,
+ 	.scale			= true,
+ 	.unit_width		= 4, /* strlen("unit") */
+ 	.run_count		= 1,
+ 	.metric_only_len	= METRIC_ONLY_LEN,
+ 	.walltime_nsecs_stats	= &walltime_nsecs_stats,
+ 	.big_num		= true,
++>>>>>>> 34ff0866d46a (perf stat: Move 'big_num' data to 'struct perf_stat_config')
  };
  
  static bool is_duration_time(struct perf_evsel *evsel)
@@@ -1073,10 -942,10 +1082,10 @@@ static void abs_printout(int id, int nr
  	double sc =  evsel->scale;
  	const char *fmt;
  
 -	if (config->csv_output) {
 +	if (csv_output) {
  		fmt = floor(sc) != sc ?  "%.2f%s" : "%.0f%s";
  	} else {
- 		if (big_num)
+ 		if (config->big_num)
  			fmt = floor(sc) != sc ? "%'18.2f%s" : "%'18.0f%s";
  		else
  			fmt = floor(sc) != sc ? "%18.2f%s" : "%18.0f%s";
diff --cc tools/perf/util/stat.h
index 4b88aef959fb,843672214cca..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -89,6 -98,12 +89,15 @@@ struct perf_stat_config 
  	bool			 scale;
  	bool			 no_inherit;
  	bool			 identifier;
++<<<<<<< HEAD
++=======
+ 	bool			 csv_output;
+ 	bool			 interval_clear;
+ 	bool			 metric_only;
+ 	bool			 null_run;
+ 	bool			 ru_display;
+ 	bool			 big_num;
++>>>>>>> 34ff0866d46a (perf stat: Move 'big_num' data to 'struct perf_stat_config')
  	FILE			*output;
  	unsigned int		 interval;
  	unsigned int		 timeout;
* Unmerged path tools/perf/builtin-stat.c
* Unmerged path tools/perf/util/stat.h
