tty: audit: Fix audit source

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [tty] audit: Fix audit source (Christoph von Recklinghausen) [1649343]
Rebuild_FUZZ: 90.20%
commit-author Peter Hurley <peter@hurleysoftware.com>
commit 6b2a3d628aa752f0ab825fc6d4d07b09e274d1c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/6b2a3d62.failed

The data to audit/record is in the 'from' buffer (ie., the input
read buffer).

Fixes: 72586c6061ab ("n_tty: Fix auditing support for cannonical mode")
	Cc: stable <stable@vger.kernel.org> # 4.1+
	Cc: Miloslav Trmaƒç <mitr@redhat.com>
	Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
	Acked-by: Laura Abbott <labbott@fedoraproject.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 6b2a3d628aa752f0ab825fc6d4d07b09e274d1c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/n_tty.c
diff --cc drivers/tty/n_tty.c
index 4181bb27f72e,ed776149261e..000000000000
--- a/drivers/tty/n_tty.c
+++ b/drivers/tty/n_tty.c
@@@ -121,54 -162,37 +121,68 @@@ static inline int tty_put_user(struct t
  	return put_user(x, ptr);
  }
  
++<<<<<<< HEAD
++=======
+ static inline int tty_copy_to_user(struct tty_struct *tty,
+ 					void __user *to,
+ 					const void *from,
+ 					unsigned long n)
+ {
+ 	struct n_tty_data *ldata = tty->disc_data;
+ 
+ 	tty_audit_add_data(tty, from, n, ldata->icanon);
+ 	return copy_to_user(to, from, n);
+ }
+ 
++>>>>>>> 6b2a3d628aa7 (tty: audit: Fix audit source)
  /**
 - *	n_tty_kick_worker - start input worker (if required)
 + *	n_tty_set_room	-	receive space
   *	@tty: terminal
   *
 - *	Re-schedules the flip buffer work if it may have stopped
 + *	Updates tty->receive_room to reflect the currently available space
 + *	in the input buffer, and re-schedules the flip buffer work if space
 + *	just became available.
   *
 - *	Caller holds exclusive termios_rwsem
 - *	   or
 - *	n_tty_read()/consumer path:
 - *		holds non-exclusive termios_rwsem
 + *	Locks: Concurrent update is protected with read_lock
   */
  
 -static void n_tty_kick_worker(struct tty_struct *tty)
 +static int set_room(struct tty_struct *tty)
  {
  	struct n_tty_data *ldata = tty->disc_data;
 +	int left;
 +	int old_left;
 +	unsigned long flags;
 +
 +	raw_spin_lock_irqsave(&ldata->read_lock, flags);
 +
 +	if (I_PARMRK(tty)) {
 +		/* Multiply read_cnt by 3, since each byte might take up to
 +		 * three times as many spaces when PARMRK is set (depending on
 +		 * its flags, e.g. parity error). */
 +		left = N_TTY_BUF_SIZE - ldata->read_cnt * 3 - 1;
 +	} else
 +		left = N_TTY_BUF_SIZE - ldata->read_cnt - 1;
 +
 +	/*
 +	 * If we are doing input canonicalization, and there are no
 +	 * pending newlines, let characters through without limit, so
 +	 * that erase characters will be handled.  Other excess
 +	 * characters will be beeped.
 +	 */
 +	if (left <= 0)
 +		left = ldata->icanon && !ldata->canon_data;
 +	old_left = tty->receive_room;
 +	tty->receive_room = left;
  
 -	/* Did the input worker stop? Restart it */
 -	if (unlikely(ldata->no_room)) {
 -		ldata->no_room = 0;
 +	raw_spin_unlock_irqrestore(&ldata->read_lock, flags);
  
 +	return left && !old_left;
 +}
 +
 +static void n_tty_set_room(struct tty_struct *tty)
 +{
 +	/* Did this open up the receive buffer? We may need to flip */
 +	if (set_room(tty)) {
  		WARN_RATELIMIT(tty->port->itty == NULL,
  				"scheduling with invalid itty\n");
  		/* see if ldisc has been killed - if so, this means that
* Unmerged path drivers/tty/n_tty.c
diff --git a/drivers/tty/tty_audit.c b/drivers/tty/tty_audit.c
index 90ca082935f6..3d245cd3d8e6 100644
--- a/drivers/tty/tty_audit.c
+++ b/drivers/tty/tty_audit.c
@@ -265,7 +265,7 @@ static struct tty_audit_buf *tty_audit_buf_get(struct tty_struct *tty,
  *
  *	Audit @data of @size from @tty, if necessary.
  */
-void tty_audit_add_data(struct tty_struct *tty, unsigned char *data,
+void tty_audit_add_data(struct tty_struct *tty, const void *data,
 			size_t size, unsigned icanon)
 {
 	struct tty_audit_buf *buf;
diff --git a/include/linux/tty.h b/include/linux/tty.h
index 6870cd277e73..30f912f8a902 100644
--- a/include/linux/tty.h
+++ b/include/linux/tty.h
@@ -569,7 +569,7 @@ extern void n_tty_inherit_ops(struct tty_ldisc_ops *ops);
 
 /* tty_audit.c */
 #ifdef CONFIG_AUDIT
-extern void tty_audit_add_data(struct tty_struct *tty, unsigned char *data,
+extern void tty_audit_add_data(struct tty_struct *tty, const void *data,
 			       size_t size, unsigned icanon);
 extern void tty_audit_exit(void);
 extern void tty_audit_fork(struct signal_struct *sig);
@@ -577,8 +577,8 @@ extern void tty_audit_tiocsti(struct tty_struct *tty, char ch);
 extern void tty_audit_push(struct tty_struct *tty);
 extern int tty_audit_push_current(void);
 #else
-static inline void tty_audit_add_data(struct tty_struct *tty,
-		unsigned char *data, size_t size, unsigned icanon)
+static inline void tty_audit_add_data(struct tty_struct *tty, const void *data,
+				      size_t size, unsigned icanon)
 {
 }
 static inline void tty_audit_tiocsti(struct tty_struct *tty, char ch)
