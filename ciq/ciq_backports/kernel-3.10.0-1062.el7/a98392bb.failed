perf trace: Use beautifiers on syscalls:sys_enter_ handlers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit a98392bb1e169a04aad83ed28f2b7a63010104ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/a98392bb.failed

We were using the beautifiers only when processing the
raw_syscalls:sys_enter events, but we can as well use them for the
syscalls:sys_enter_NAME events, as the layout is the same.

Some more tweaking is needed as we're processing them straight away,
i.e. there is no buffering in the sys_enter_NAME event to wait for
things like vfs_getname to provide pointer contents and then flushing
at sys_exit_NAME, so we need to state in the syscall_arg that this
is unbuffered, just print the pointer values, beautifying just
non-pointer syscall args.

This just shows an alternative way of processing tracepoints, that we
will end up using when creating "tracepoint" payloads that already copy
pointer contents (or chunks of it, i.e. not the whole filename, but just
the end of it, not all the bf for a read/write, but just the start,
etc), directly in the kernel using eBPF.

E.g.:

  # perf trace -e syscalls:*enter*sleep,*sleep sleep 1
     0.303 (         ): syscalls:sys_enter_nanosleep:rqtp: 0x7ffc93d5ecc0
     0.305 (1000.229 ms): sleep/8746 nanosleep(rqtp: 0x7ffc93d5ecc0) = 0
  # perf trace -e syscalls:*_*sleep,*sleep sleep 1
     0.288 (         ): syscalls:sys_enter_nanosleep:rqtp: 0x7ffecde87e40
     0.289 (         ): sleep/8748 nanosleep(rqtp: 0x7ffecde87e40) ...
  1000.479 (         ): syscalls:sys_exit_nanosleep:0x0
     0.289 (1000.208 ms): sleep/8748  ... [continued]: nanosleep()) = 0
  #

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-jehyd2zwhw00z3p7v7mg9632@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit a98392bb1e169a04aad83ed28f2b7a63010104ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
diff --cc tools/perf/builtin-trace.c
index 2c4af55f3a9b,7336552c22cf..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -1905,10 -1999,15 +1943,22 @@@ static int trace__event_handler(struct 
  
  	fprintf(trace->output, "%s:", evsel->name);
  
++<<<<<<< HEAD
 +	if (evsel->tp_format) {
 +		event_format__fprintf(evsel->tp_format, sample->cpu,
 +				      sample->raw_data, sample->raw_size,
 +				      trace->output);
++=======
+ 	if (perf_evsel__is_bpf_output(evsel)) {
+ 		bpf_output__fprintf(trace, sample);
+ 	} else if (evsel->tp_format) {
+ 		if (strncmp(evsel->tp_format->name, "sys_enter_", 10) ||
+ 		    trace__fprintf_sys_enter(trace, evsel, sample)) {
+ 			event_format__fprintf(evsel->tp_format, sample->cpu,
+ 					      sample->raw_data, sample->raw_size,
+ 					      trace->output);
+ 		}
++>>>>>>> a98392bb1e16 (perf trace: Use beautifiers on syscalls:sys_enter_ handlers)
  	}
  
  	fprintf(trace->output, "\n");
* Unmerged path tools/perf/builtin-trace.c
