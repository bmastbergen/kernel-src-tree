scsi: qla2xxx: Timeouts occur on surprise removal of QLogic adapter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Timeouts occur on surprise removal of QLogic adapter (Himanshu Madhani) [1628301]
Rebuild_FUZZ: 95.31%
commit-author Bill Kuzeja <William.Kuzeja@stratus.com>
commit f2ffd4e5bc7b629b312be48fbe3c3a2afbd67e4a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/f2ffd4e5.failed

When doing a surprise removal of an adapter, some in flight I/Os can get
stuck and take a while to complete (they actually time out and are
retried). We are not handling an early error exit from qla2xxx_eh_abort
properly.

Fixes: 45235022da99 ("scsi: qla2xxx: Fix driver unload by shutting down chip")
	Signed-off-by: Bill Kuzeja <william.kuzeja@stratus.com>
	Reviewed-by: Laurence Oberman <loberman@redhat.com>
	Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit f2ffd4e5bc7b629b312be48fbe3c3a2afbd67e4a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 82a550db08e1,b658b9a5eb1e..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -1745,45 -1786,39 +1745,62 @@@ __qla2x00_abort_all_cmds(struct qla_qpa
  				    !qla2x00_isp_reg_stat(ha) &&
  				    (sp->type == SRB_SCSI_CMD)) {
  					/*
 -					 * Don't abort commands in adapter
 -					 * during EEH recovery as it's not
 +					 * Don't abort commands in
 +					 * adapter during EEH
 +					 * recovery as it's not
  					 * accessible/responding.
  					 *
 -					 * Get a reference to the sp and drop
 -					 * the lock. The reference ensures this
 -					 * sp->done() call and not the call in
 -					 * qla2xxx_eh_abort() ends the SCSI cmd
 -					 * (with result 'res').
 +					 * Get a reference to the sp
 +					 * and drop the lock. The
 +					 * reference ensures this
 +					 * sp->done() call and not the
 +					 * call in qla2xxx_eh_abort()
 +					 * ends the SCSI command (with
 +					 * result 'res').
 +					 */
++<<<<<<< HEAD
 +					sp_get(sp);
 +					spin_unlock_irqrestore(qp->qp_lock_ptr,
 +					    flags);
 +					status = qla2xxx_eh_abort(
 +					    GET_CMD_SP(sp));
 +					spin_lock_irqsave(qp->qp_lock_ptr,
 +					    flags);
 +					/*
 +					 * Get rid of extra reference
 +					 * if immediate exit from
 +					 * ql2xxx_eh_abort
  					 */
 +					if (status == FAILED &&
 +					    (qla2x00_isp_reg_stat(ha)))
 +						atomic_dec(
 +						    &sp->ref_count);
++=======
+ 					if (!sp_get(sp)) {
+ 						spin_unlock_irqrestore
+ 							(qp->qp_lock_ptr, flags);
+ 						status = qla2xxx_eh_abort(
+ 							GET_CMD_SP(sp));
+ 						spin_lock_irqsave
+ 							(qp->qp_lock_ptr, flags);
+ 						/*
+ 						 * Get rid of extra reference caused
+ 						 * by early exit from qla2xxx_eh_abort
+ 						 */
+ 						if (status == FAST_IO_FAIL)
+ 							atomic_dec(&sp->ref_count);
+ 					}
++>>>>>>> f2ffd4e5bc7b (scsi: qla2xxx: Timeouts occur on surprise removal of QLogic adapter)
  				}
  				sp->done(sp, res);
 -				break;
 -			case TYPE_TGT_CMD:
 +			} else {
  				if (!vha->hw->tgt.tgt_ops || !tgt ||
  				    qla_ini_mode_enabled(vha)) {
 -					ql_dbg(ql_dbg_tgt_mgt, vha, 0xf003,
 -					    "HOST-ABORT-HNDLR: dpc_flags=%lx. Target mode disabled\n",
 -					    vha->dpc_flags);
 +					if (!trace)
 +						ql_dbg(ql_dbg_tgt_mgt,
 +						    vha, 0xf003,
 +						    "HOST-ABORT-HNDLR: dpc_flags=%lx. Target mode disabled\n",
 +						    vha->dpc_flags);
  					continue;
  				}
  				cmd = (struct qla_tgt_cmd *)sp;
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
