ipv6: fix possible use-after-free in ip6_xmit()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Eric Dumazet <edumazet@google.com>
commit bbd6528d28c1b8e80832b3b018ec402b6f5c3215
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/bbd6528d.failed

In the unlikely case ip6_xmit() has to call skb_realloc_headroom(),
we need to call skb_set_owner_w() before consuming original skb,
otherwise we risk a use-after-free.

Bring IPv6 in line with what we do in IPv4 to fix this.

Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Reported-by: syzbot <syzkaller@googlegroups.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bbd6528d28c1b8e80832b3b018ec402b6f5c3215)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_output.c
diff --cc net/ipv6/ip6_output.c
index bc6199e828ac,f9f8f554d141..000000000000
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@@ -185,9 -219,10 +185,14 @@@ int ip6_xmit(struct sock *sk, struct sk
  				kfree_skb(skb);
  				return -ENOBUFS;
  			}
+ 			if (skb->sk)
+ 				skb_set_owner_w(skb2, skb->sk);
  			consume_skb(skb);
  			skb = skb2;
++<<<<<<< HEAD
 +			skb_set_owner_w(skb, sk);
++=======
++>>>>>>> bbd6528d28c1 (ipv6: fix possible use-after-free in ip6_xmit())
  		}
  		if (opt->opt_flen)
  			ipv6_push_frag_opts(skb, opt, &proto);
* Unmerged path net/ipv6/ip6_output.c
