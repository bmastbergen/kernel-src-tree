powerpc/bpf: Flush the entire JIT buffer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [powerpc] bpf: Flush the entire JIT buffer (Yauheni Kaliuta) [1637441]
Rebuild_FUZZ: 88.89%
commit-author Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
commit 10528b9c45cfb9e8f45217ef2f5ef8b876bbd3f5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/10528b9c.failed

With bpf_jit_binary_alloc(), we allocate at a page granularity and fill
the rest of the space with illegal instructions to mitigate BPF spraying
attacks, while having the actual JIT'ed BPF program at a random location
within the allocated space. Under this scenario, it would be better to
flush the entire allocated buffer rather than just the part containing
the actual program. We already flush the buffer from start to the end of
the BPF program. Extend this to include the illegal instructions after
the BPF program.

	Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Daniel Borkmann <daniel@iogearbox.net>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 10528b9c45cfb9e8f45217ef2f5ef8b876bbd3f5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/net/bpf_jit_comp64.c
* Unmerged path arch/powerpc/net/bpf_jit_comp64.c
* Unmerged path arch/powerpc/net/bpf_jit_comp64.c
