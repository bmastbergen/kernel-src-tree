net/mlx5: Allocate enough space for the FDB sub-namespaces

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [netdrv] mlx5: Allocate enough space for the FDB sub-namespaces (Alaa Hleihel) [1642498]
Rebuild_FUZZ: 96.43%
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit cc3a4cd3f016a081a29b938f1ad17669bfacc9b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/cc3a4cd3.failed

FDB_MAX_CHAIN is three.  We wanted to allocate enough memory to hold four
structs but there are missing parentheses so we only allocate enough
memory for three structs and the first byte of the fourth one.

Fixes: 328edb499f99 ("net/mlx5: Split FDB fast path prio to multiple namespaces")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cc3a4cd3f016a081a29b938f1ad17669bfacc9b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
index 72297c31a849,9d73eb955f75..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
@@@ -2420,13 -2469,42 +2420,26 @@@ static int init_fdb_root_ns(struct mlx5
  	if (!steering->fdb_root_ns)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	prio = fs_create_prio(&steering->fdb_root_ns->ns, 0, 2);
 +	if (IS_ERR(prio))
++=======
+ 	steering->fdb_sub_ns = kzalloc(sizeof(steering->fdb_sub_ns) *
+ 				       (FDB_MAX_CHAIN + 1), GFP_KERNEL);
+ 	if (!steering->fdb_sub_ns)
+ 		return -ENOMEM;
+ 
+ 	levels = 2 * FDB_MAX_PRIO * (FDB_MAX_CHAIN + 1);
+ 	maj_prio = fs_create_prio_chained(&steering->fdb_root_ns->ns, 0,
+ 					  levels);
+ 	if (IS_ERR(maj_prio)) {
+ 		err = PTR_ERR(maj_prio);
++>>>>>>> cc3a4cd3f016 (net/mlx5: Allocate enough space for the FDB sub-namespaces)
  		goto out_err;
 -	}
 -
 -	for (chain = 0; chain <= FDB_MAX_CHAIN; chain++) {
 -		ns = fs_create_namespace(maj_prio);
 -		if (IS_ERR(ns)) {
 -			err = PTR_ERR(ns);
 -			goto out_err;
 -		}
  
 -		for (prio = 0; prio < FDB_MAX_PRIO * (chain + 1); prio++) {
 -			min_prio = fs_create_prio(ns, prio, 2);
 -			if (IS_ERR(min_prio)) {
 -				err = PTR_ERR(min_prio);
 -				goto out_err;
 -			}
 -		}
 -
 -		steering->fdb_sub_ns[chain] = ns;
 -	}
 -
 -	maj_prio = fs_create_prio(&steering->fdb_root_ns->ns, 1, 1);
 -	if (IS_ERR(maj_prio)) {
 -		err = PTR_ERR(maj_prio);
 +	prio = fs_create_prio(&steering->fdb_root_ns->ns, 1, 1);
 +	if (IS_ERR(prio))
  		goto out_err;
 -	}
  
  	set_prio_attrs(steering->fdb_root_ns);
  	return 0;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
