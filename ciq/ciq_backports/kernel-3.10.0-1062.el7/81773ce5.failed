RDMA/mlx5: Use stages for callback to setup and release DEVX

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Leon Romanovsky <leonro@mellanox.com>
commit 81773ce5f07fd4c3acd4bb7e918ce03a4e652a5f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/81773ce5.failed

Reuse existing infrastructure to initialize and release DEVX uid.
The DevX interface is intended for user space access, so it is supposed
to be initialized before ib_register_device(). Also it isn't supported
in switchdev mode and don't need to initialize it in that mode.

Fixes: 76dc5a8406bf ("IB/mlx5: Manage device uid for DEVX white list commands")
	Reviewed-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit 81773ce5f07fd4c3acd4bb7e918ce03a4e652a5f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
diff --cc drivers/infiniband/hw/mlx5/main.c
index e944c3c2b419,56472fa3e18b..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -5296,9 -6225,37 +5296,43 @@@ static void mlx5_ib_stage_rep_reg_clean
  	mlx5_ib_unregister_vport_reps(dev);
  }
  
++<<<<<<< HEAD
 +static void __mlx5_ib_remove(struct mlx5_ib_dev *dev,
 +			     const struct mlx5_ib_profile *profile,
 +			     int stage)
++=======
+ static int mlx5_ib_stage_dev_notifier_init(struct mlx5_ib_dev *dev)
+ {
+ 	dev->mdev_events.notifier_call = mlx5_ib_event;
+ 	mlx5_notifier_register(dev->mdev, &dev->mdev_events);
+ 	return 0;
+ }
+ 
+ static void mlx5_ib_stage_dev_notifier_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	mlx5_notifier_unregister(dev->mdev, &dev->mdev_events);
+ }
+ 
+ static int mlx5_ib_stage_devx_init(struct mlx5_ib_dev *dev)
+ {
+ 	int uid;
+ 
+ 	uid = mlx5_ib_devx_create(dev);
+ 	if (uid > 0)
+ 		dev->devx_whitelist_uid = uid;
+ 
+ 	return 0;
+ }
+ static void mlx5_ib_stage_devx_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	if (dev->devx_whitelist_uid)
+ 		mlx5_ib_devx_destroy(dev, dev->devx_whitelist_uid);
+ }
+ 
+ void __mlx5_ib_remove(struct mlx5_ib_dev *dev,
+ 		      const struct mlx5_ib_profile *profile,
+ 		      int stage)
++>>>>>>> 81773ce5f07f (RDMA/mlx5: Use stages for callback to setup and release DEVX)
  {
  	/* Number of stages to cleanup */
  	while (stage) {
@@@ -5310,24 -6267,11 +5344,27 @@@
  	ib_dealloc_device((struct ib_device *)dev);
  }
  
 -void *__mlx5_ib_add(struct mlx5_ib_dev *dev,
 -		    const struct mlx5_ib_profile *profile)
 +static void *mlx5_ib_add_slave_port(struct mlx5_core_dev *mdev, u8 port_num);
 +
 +static void *__mlx5_ib_add(struct mlx5_core_dev *mdev,
 +			   const struct mlx5_ib_profile *profile)
  {
 +	struct mlx5_ib_dev *dev;
  	int err;
  	int i;
++<<<<<<< HEAD
 +
 +	printk_once(KERN_INFO "%s", mlx5_version);
 +
 +	dev = (struct mlx5_ib_dev *)ib_alloc_device(sizeof(*dev));
 +	if (!dev)
 +		return NULL;
 +
 +	dev->mdev = mdev;
 +	dev->num_ports = max(MLX5_CAP_GEN(mdev, num_ports),
 +			     MLX5_CAP_GEN(mdev, num_vhca_ports));
++=======
++>>>>>>> 81773ce5f07f (RDMA/mlx5: Use stages for callback to setup and release DEVX)
  
  	for (i = 0; i < MLX5_IB_STAGE_MAX; i++) {
  		if (profile->stage[i].init) {
@@@ -5382,6 -6332,12 +5419,15 @@@ static const struct mlx5_ib_profile pf_
  	STAGE_CREATE(MLX5_IB_STAGE_PRE_IB_REG_UMR,
  		     NULL,
  		     mlx5_ib_stage_pre_ib_reg_umr_cleanup),
++<<<<<<< HEAD
++=======
+ 	STAGE_CREATE(MLX5_IB_STAGE_SPECS,
+ 		     mlx5_ib_stage_populate_specs,
+ 		     NULL),
+ 	STAGE_CREATE(MLX5_IB_STAGE_WHITELIST_UID,
+ 		     mlx5_ib_stage_devx_init,
+ 		     mlx5_ib_stage_devx_cleanup),
++>>>>>>> 81773ce5f07f (RDMA/mlx5: Use stages for callback to setup and release DEVX)
  	STAGE_CREATE(MLX5_IB_STAGE_IB_REG,
  		     mlx5_ib_stage_ib_reg_init,
  		     mlx5_ib_stage_ib_reg_cleanup),
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index 3c57e5c58ad3,332d5c4d8ab3..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -735,6 -782,8 +735,11 @@@ enum mlx5_ib_stages 
  	MLX5_IB_STAGE_UAR,
  	MLX5_IB_STAGE_BFREG,
  	MLX5_IB_STAGE_PRE_IB_REG_UMR,
++<<<<<<< HEAD
++=======
+ 	MLX5_IB_STAGE_SPECS,
+ 	MLX5_IB_STAGE_WHITELIST_UID,
++>>>>>>> 81773ce5f07f (RDMA/mlx5: Use stages for callback to setup and release DEVX)
  	MLX5_IB_STAGE_IB_REG,
  	MLX5_IB_STAGE_POST_IB_REG_UMR,
  	MLX5_IB_STAGE_DELAY_DROP,
* Unmerged path drivers/infiniband/hw/mlx5/main.c
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
