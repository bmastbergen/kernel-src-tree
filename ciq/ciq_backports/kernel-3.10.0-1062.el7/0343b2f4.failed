mfd: intel-lpss: Pass I2C configuration via properties on BXT

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [mfd] intel-lpss: Pass I2C configuration via properties on BXT (David Arcari) [1643267]
Rebuild_FUZZ: 95.73%
commit-author Mika Westerberg <mika.westerberg@linux.intel.com>
commit 0343b2f4e4a52c907d7676ce3159e0b5e7f0301c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/0343b2f4.failed

I2C host controller need to be configured properly in order to meet I2C
timings specified in the I2C protocol specification. Some Intel Broxton
based machines do not have this information in the ACPI namespace (or the
boot firmware does not support ACPI at all) so we use build-in device
properties instead.

	Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Lee Jones <lee.jones@linaro.org>
(cherry picked from commit 0343b2f4e4a52c907d7676ce3159e0b5e7f0301c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mfd/intel-lpss-acpi.c
diff --cc drivers/mfd/intel-lpss-acpi.c
index 3ff9e455b378,5a8d9c766633..000000000000
--- a/drivers/mfd/intel-lpss-acpi.c
+++ b/drivers/mfd/intel-lpss-acpi.c
@@@ -31,9 -31,33 +31,33 @@@ static struct property_entry spt_i2c_pr
  	{ },
  };
  
 -static struct property_set spt_i2c_pset = {
 -	.properties = spt_i2c_properties,
 -};
 -
  static const struct intel_lpss_platform_info spt_i2c_info = {
  	.clk_rate = 120000000,
++<<<<<<< HEAD
 +	.properties = spt_i2c_properties,
++=======
+ 	.pset = &spt_i2c_pset,
+ };
+ 
+ static const struct intel_lpss_platform_info bxt_info = {
+ 	.clk_rate = 100000000,
+ };
+ 
+ static struct property_entry bxt_i2c_properties[] = {
+ 	PROPERTY_ENTRY_U32("i2c-sda-hold-time-ns", 42),
+ 	PROPERTY_ENTRY_U32("i2c-sda-falling-time-ns", 171),
+ 	PROPERTY_ENTRY_U32("i2c-scl-falling-time-ns", 208),
+ 	{ },
+ };
+ 
+ static struct property_set bxt_i2c_pset = {
+ 	.properties = bxt_i2c_properties,
+ };
+ 
+ static const struct intel_lpss_platform_info bxt_i2c_info = {
+ 	.clk_rate = 133000000,
+ 	.pset = &bxt_i2c_pset,
++>>>>>>> 0343b2f4e4a5 (mfd: intel-lpss: Pass I2C configuration via properties on BXT)
  };
  
  static const struct acpi_device_id intel_lpss_acpi_ids[] = {
* Unmerged path drivers/mfd/intel-lpss-acpi.c
diff --git a/drivers/mfd/intel-lpss-pci.c b/drivers/mfd/intel-lpss-pci.c
index 4ca2cef6de56..24f9eac52243 100644
--- a/drivers/mfd/intel-lpss-pci.c
+++ b/drivers/mfd/intel-lpss-pci.c
@@ -98,8 +98,20 @@ static const struct intel_lpss_platform_info bxt_uart_info = {
 	.clk_con_id = "baudclk",
 };
 
+static struct property_entry bxt_i2c_properties[] = {
+	PROPERTY_ENTRY_U32("i2c-sda-hold-time-ns", 42),
+	PROPERTY_ENTRY_U32("i2c-sda-falling-time-ns", 171),
+	PROPERTY_ENTRY_U32("i2c-scl-falling-time-ns", 208),
+	{ },
+};
+
+static struct property_set bxt_i2c_pset = {
+	.properties = bxt_i2c_properties,
+};
+
 static const struct intel_lpss_platform_info bxt_i2c_info = {
 	.clk_rate = 133000000,
+	.pset = &bxt_i2c_pset,
 };
 
 static const struct pci_device_id intel_lpss_pci_ids[] = {
