netfilter: Store net in nf_hook_state

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit b11b1f652dccde707d568f4012b01a8ec5bd5f57
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/b11b1f65.failed

	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b11b1f652dccde707d568f4012b01a8ec5bd5f57)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netfilter.h
#	include/linux/netfilter_ingress.h
diff --cc include/linux/netfilter.h
index 8b4b3ccb3eb8,889ac0e11f01..000000000000
--- a/include/linux/netfilter.h
+++ b/include/linux/netfilter.h
@@@ -54,10 -54,9 +54,15 @@@ struct nf_hook_state 
  	struct net_device *in;
  	struct net_device *out;
  	struct sock *sk;
++<<<<<<< HEAD
++=======
+ 	struct net *net;
+ 	struct list_head *hook_list;
++>>>>>>> b11b1f652dcc (netfilter: Store net in nf_hook_state)
  	int (*okfn)(struct sock *, struct sk_buff *);
 +	/* RHEL: this structure can be extended by adding new fields below
 +	 * this point. Any user of such new field has to check the 'size'
 +	 * field first to determine whether the field is present. */
  };
  
  static inline void nf_hook_state_init(struct nf_hook_state *p,
@@@ -66,15 -66,17 +71,21 @@@
  				      struct net_device *indev,
  				      struct net_device *outdev,
  				      struct sock *sk,
+ 				      struct net *net,
  				      int (*okfn)(struct sock *, struct sk_buff *))
  {
 +	p->size = sizeof(*p);
  	p->hook = hook;
  	p->thresh = thresh;
  	p->pf = pf;
  	p->in = indev;
  	p->out = outdev;
  	p->sk = sk;
++<<<<<<< HEAD
++=======
+ 	p->net = net;
+ 	p->hook_list = hook_list;
++>>>>>>> b11b1f652dcc (netfilter: Store net in nf_hook_state)
  	p->okfn = okfn;
  }
  
@@@ -181,11 -177,14 +192,16 @@@ static inline int nf_hook_thresh(u_int8
  				 int (*okfn)(struct sock *, struct sk_buff *),
  				 int thresh)
  {
 -	struct net *net = dev_net(indev ? indev : outdev);
 -	struct list_head *hook_list = &net->nf.hooks[pf][hook];
 -
 -	if (nf_hook_list_active(hook_list, pf, hook)) {
 +	if (nf_hooks_active(pf, hook)) {
  		struct nf_hook_state state;
  
++<<<<<<< HEAD
 +		nf_hook_state_init(&state, hook, thresh, pf,
 +				   indev, outdev, sk, okfn);
++=======
+ 		nf_hook_state_init(&state, hook_list, hook, thresh,
+ 				   pf, indev, outdev, sk, net, okfn);
++>>>>>>> b11b1f652dcc (netfilter: Store net in nf_hook_state)
  		return nf_hook_slow(skb, &state);
  	}
  	return 1;
* Unmerged path include/linux/netfilter_ingress.h
* Unmerged path include/linux/netfilter.h
* Unmerged path include/linux/netfilter_ingress.h
