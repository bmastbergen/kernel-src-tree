perf script: Add support to display lost events

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 3d7c27b6dbca4c90e7d921b45c2240e7c3cb92a2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/3d7c27b6.failed

Adding option to display lost events:

  $ perf script --show-lost-events ...
   mplayer 13810 [002] 468011.402396:        100 cycles:ppp:  ff..
   mplayer 13810 [002] 468011.402396: PERF_RECORD_LOST lost 3880
   mplayer 13810 [002] 468011.402397:        100 cycles:ppp:  ff..

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20180107160356.28203-10-jolsa@kernel.org
[ Use PRIu64 when printing u64 values, fixing the build in some arches ]
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 3d7c27b6dbca4c90e7d921b45c2240e7c3cb92a2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-script.c
diff --cc tools/perf/builtin-script.c
index 13ce738785df,c1cce474c0f1..000000000000
--- a/tools/perf/builtin-script.c
+++ b/tools/perf/builtin-script.c
@@@ -1351,6 -1488,8 +1351,11 @@@ struct perf_script 
  	bool			show_task_events;
  	bool			show_mmap_events;
  	bool			show_switch_events;
++<<<<<<< HEAD
++=======
+ 	bool			show_namespace_events;
+ 	bool			show_lost_events;
++>>>>>>> 3d7c27b6dbca (perf script: Add support to display lost events)
  	bool			allocated;
  	bool			per_event_dump;
  	struct cpu_map		*cpus;
@@@ -1904,6 -2196,10 +1932,13 @@@ static int __cmd_script(struct perf_scr
  	}
  	if (script->show_switch_events)
  		script->tool.context_switch = process_switch_event;
++<<<<<<< HEAD
++=======
+ 	if (script->show_namespace_events)
+ 		script->tool.namespaces = process_namespaces_event;
+ 	if (script->show_lost_events)
+ 		script->tool.lost = process_lost_event;
++>>>>>>> 3d7c27b6dbca (perf script: Add support to display lost events)
  
  	if (perf_script__setup_per_event_dump(script)) {
  		pr_err("Couldn't create the per event dump files\n");
@@@ -2837,6 -3134,10 +2872,13 @@@ int cmd_script(int argc, const char **a
  		    "Show the mmap events"),
  	OPT_BOOLEAN('\0', "show-switch-events", &script.show_switch_events,
  		    "Show context switch events (if recorded)"),
++<<<<<<< HEAD
++=======
+ 	OPT_BOOLEAN('\0', "show-namespace-events", &script.show_namespace_events,
+ 		    "Show namespace events (if recorded)"),
+ 	OPT_BOOLEAN('\0', "show-lost-events", &script.show_lost_events,
+ 		    "Show lost events (if recorded)"),
++>>>>>>> 3d7c27b6dbca (perf script: Add support to display lost events)
  	OPT_BOOLEAN('\0', "per-event-dump", &script.per_event_dump,
  		    "Dump trace output to files named by the monitored events"),
  	OPT_BOOLEAN('f', "force", &symbol_conf.force, "don't complain, do it"),
diff --git a/tools/perf/Documentation/perf-script.txt b/tools/perf/Documentation/perf-script.txt
index d682d995e0c3..21652755c211 100644
--- a/tools/perf/Documentation/perf-script.txt
+++ b/tools/perf/Documentation/perf-script.txt
@@ -271,6 +271,9 @@ OPTIONS
 	Display context switch events i.e. events of type PERF_RECORD_SWITCH or
 	PERF_RECORD_SWITCH_CPU_WIDE.
 
+--show-lost-events
+	Display lost events i.e. events of type PERF_RECORD_LOST.
+
 --demangle::
 	Demangle symbol names to human readable form. It's enabled by default,
 	disable with --no-demangle.
* Unmerged path tools/perf/builtin-script.c
diff --git a/tools/perf/util/event.c b/tools/perf/util/event.c
index e4a72f29d4ef..8573cf392f45 100644
--- a/tools/perf/util/event.c
+++ b/tools/perf/util/event.c
@@ -1300,6 +1300,11 @@ size_t perf_event__fprintf_switch(union perf_event *event, FILE *fp)
 		       event->context_switch.next_prev_tid);
 }
 
+static size_t perf_event__fprintf_lost(union perf_event *event, FILE *fp)
+{
+	return fprintf(fp, " lost %" PRIu64 "\n", event->lost.lost);
+}
+
 size_t perf_event__fprintf(union perf_event *event, FILE *fp)
 {
 	size_t ret = fprintf(fp, "PERF_RECORD_%s",
@@ -1329,6 +1334,9 @@ size_t perf_event__fprintf(union perf_event *event, FILE *fp)
 	case PERF_RECORD_SWITCH_CPU_WIDE:
 		ret += perf_event__fprintf_switch(event, fp);
 		break;
+	case PERF_RECORD_LOST:
+		ret += perf_event__fprintf_lost(event, fp);
+		break;
 	default:
 		ret += fprintf(fp, "\n");
 	}
