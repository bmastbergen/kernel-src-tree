iommu/vt-d: Relocate struct/function declarations to its header files

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
Rebuild_CHGLOG: - [iommu] vt-d: Relocate struct/function declarations to its header files (Jerry Snitselaar) [1457023]
Rebuild_FUZZ: 95.45%
commit-author Sohil Mehta <sohil.mehta@intel.com>
commit 26b86092c4650311256fa2372ced7e1e17d97d7b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/26b86092.failed

To reuse the static functions and the struct declarations, move them to
corresponding header files and export the needed functions.

	Cc: Lu Baolu <baolu.lu@linux.intel.com>
	Cc: Fenghua Yu <fenghua.yu@intel.com>
	Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
	Cc: Ashok Raj <ashok.raj@intel.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Gayatri Kammela <gayatri.kammela@intel.com>
	Signed-off-by: Sohil Mehta <sohil.mehta@intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 26b86092c4650311256fa2372ced7e1e17d97d7b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel_irq_remapping.c
#	include/linux/intel-iommu.h
diff --cc drivers/iommu/intel_irq_remapping.c
index d7f26e2c2627,c2d6c11431de..000000000000
--- a/drivers/iommu/intel_irq_remapping.c
+++ b/drivers/iommu/intel_irq_remapping.c
@@@ -53,7 -76,8 +53,12 @@@ static struct hpet_scope ir_hpet[MAX_HP
   * in single-threaded environment with interrupt disabled, so no need to tabke
   * the dmar_global_lock.
   */
++<<<<<<< HEAD
 +static DEFINE_RAW_SPINLOCK(irq_2_ir_lock);
++=======
+ DEFINE_RAW_SPINLOCK(irq_2_ir_lock);
+ static const struct irq_domain_ops intel_ir_domain_ops;
++>>>>>>> 26b86092c465 (iommu/vt-d: Relocate struct/function declarations to its header files)
  
  static void iommu_disable_irq_remapping(struct intel_iommu *iommu);
  static int __init parse_ioapics_under_ir(void);
diff --cc include/linux/intel-iommu.h
index 446226a5cddb,b7cf32e8ae1f..000000000000
--- a/include/linux/intel-iommu.h
+++ b/include/linux/intel-iommu.h
@@@ -326,6 -385,73 +326,76 @@@ enum 
  #define VTD_FLAG_TRANS_PRE_ENABLED	(1 << 0)
  #define VTD_FLAG_IRQ_REMAP_PRE_ENABLED	(1 << 1)
  
++<<<<<<< HEAD
++=======
+ struct pasid_entry;
+ struct pasid_state_entry;
+ struct page_req_dsc;
+ 
+ /*
+  * 0: Present
+  * 1-11: Reserved
+  * 12-63: Context Ptr (12 - (haw-1))
+  * 64-127: Reserved
+  */
+ struct root_entry {
+ 	u64     lo;
+ 	u64     hi;
+ };
+ 
+ /*
+  * low 64 bits:
+  * 0: present
+  * 1: fault processing disable
+  * 2-3: translation type
+  * 12-63: address space root
+  * high 64 bits:
+  * 0-2: address width
+  * 3-6: aval
+  * 8-23: domain id
+  */
+ struct context_entry {
+ 	u64 lo;
+ 	u64 hi;
+ };
+ 
+ struct dmar_domain {
+ 	int	nid;			/* node id */
+ 
+ 	unsigned	iommu_refcnt[DMAR_UNITS_SUPPORTED];
+ 					/* Refcount of devices per iommu */
+ 
+ 
+ 	u16		iommu_did[DMAR_UNITS_SUPPORTED];
+ 					/* Domain ids per IOMMU. Use u16 since
+ 					 * domain ids are 16 bit wide according
+ 					 * to VT-d spec, section 9.3 */
+ 
+ 	bool has_iotlb_device;
+ 	struct list_head devices;	/* all devices' list */
+ 	struct iova_domain iovad;	/* iova's that belong to this domain */
+ 
+ 	struct dma_pte	*pgd;		/* virtual address */
+ 	int		gaw;		/* max guest address width */
+ 
+ 	/* adjusted guest address width, 0 is level 2 30-bit */
+ 	int		agaw;
+ 
+ 	int		flags;		/* flags to find out type of domain */
+ 
+ 	int		iommu_coherency;/* indicate coherency of iommu access */
+ 	int		iommu_snooping; /* indicate snooping control feature*/
+ 	int		iommu_count;	/* reference count of iommu */
+ 	int		iommu_superpage;/* Level of superpages supported:
+ 					   0 == 4KiB (no superpages), 1 == 2MiB,
+ 					   2 == 1GiB, 3 == 512GiB, 4 == 1TiB */
+ 	u64		max_addr;	/* maximum mapped address */
+ 
+ 	struct iommu_domain domain;	/* generic domain data structure for
+ 					   iommu core */
+ };
+ 
++>>>>>>> 26b86092c465 (iommu/vt-d: Relocate struct/function declarations to its header files)
  struct intel_iommu {
  	void __iomem	*reg; /* Pointer to hardware regs, virtual addr */
  	u64 		reg_phys; /* physical address of hw register set */
@@@ -386,6 -545,49 +456,9 @@@ extern int qi_submit_sync(struct qi_des
  
  extern int dmar_ir_support(void);
  
 -struct dmar_domain *get_valid_domain_for_dev(struct device *dev);
 -void *alloc_pgtable_page(int node);
 -void free_pgtable_page(void *vaddr);
 -struct intel_iommu *domain_get_iommu(struct dmar_domain *domain);
 -int for_each_device_domain(int (*fn)(struct device_domain_info *info,
 -				     void *data), void *data);
 -
 -#ifdef CONFIG_INTEL_IOMMU_SVM
 -int intel_svm_init(struct intel_iommu *iommu);
 -int intel_svm_exit(struct intel_iommu *iommu);
 -extern int intel_svm_enable_prq(struct intel_iommu *iommu);
 -extern int intel_svm_finish_prq(struct intel_iommu *iommu);
 -
 -struct svm_dev_ops;
 -
 -struct intel_svm_dev {
 -	struct list_head list;
 -	struct rcu_head rcu;
 -	struct device *dev;
 -	struct svm_dev_ops *ops;
 -	int users;
 -	u16 did;
 -	u16 dev_iotlb:1;
 -	u16 sid, qdep;
 -};
 -
 -struct intel_svm {
 -	struct mmu_notifier notifier;
 -	struct mm_struct *mm;
 -	struct intel_iommu *iommu;
 -	int flags;
 -	int pasid;
 -	struct list_head devs;
 -	struct list_head list;
 -};
 -
 -extern int intel_iommu_enable_pasid(struct intel_iommu *iommu, struct intel_svm_dev *sdev);
 -extern struct intel_iommu *intel_svm_device_to_iommu(struct device *dev);
 -#endif
 -
  extern const struct attribute_group *intel_iommu_groups[];
+ bool context_present(struct context_entry *context);
+ struct context_entry *iommu_context_addr(struct intel_iommu *iommu, u8 bus,
+ 					 u8 devfn, int alloc);
  
  #endif
diff --git a/arch/x86/include/asm/irq_remapping.h b/arch/x86/include/asm/irq_remapping.h
index 749b6ba48121..8e346091bb0f 100644
--- a/arch/x86/include/asm/irq_remapping.h
+++ b/arch/x86/include/asm/irq_remapping.h
@@ -37,6 +37,8 @@ enum irq_remap_cap {
 
 #ifdef CONFIG_IRQ_REMAP
 
+extern raw_spinlock_t irq_2_ir_lock;
+
 extern bool irq_remapping_cap(enum irq_remap_cap cap);
 extern void set_irq_remapping_broken(void);
 extern int irq_remapping_prepare(void);
diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index f2592de41396..3ba94fc319cd 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -184,16 +184,6 @@ static int rwbf_quirk;
  */
 static int force_on = 0;
 
-/*
- * 0: Present
- * 1-11: Reserved
- * 12-63: Context Ptr (12 - (haw-1))
- * 64-127: Reserved
- */
-struct root_entry {
-	u64	lo;
-	u64	hi;
-};
 #define ROOT_ENTRY_NR (VTD_PAGE_SIZE/sizeof(struct root_entry))
 
 /*
@@ -219,21 +209,6 @@ static phys_addr_t root_entry_uctp(struct root_entry *re)
 
 	return re->hi & VTD_PAGE_MASK;
 }
-/*
- * low 64 bits:
- * 0: present
- * 1: fault processing disable
- * 2-3: translation type
- * 12-63: address space root
- * high 64 bits:
- * 0-2: address width
- * 3-6: aval
- * 8-23: domain id
- */
-struct context_entry {
-	u64 lo;
-	u64 hi;
-};
 
 static inline void context_clear_pasid_enable(struct context_entry *context)
 {
@@ -260,7 +235,7 @@ static inline bool __context_present(struct context_entry *context)
 	return (context->lo & 1);
 }
 
-static inline bool context_present(struct context_entry *context)
+bool context_present(struct context_entry *context)
 {
 	return context_pasid_enabled(context) ?
 	     __context_present(context) :
@@ -783,8 +758,8 @@ static void domain_update_iommu_cap(struct dmar_domain *domain)
 	domain->iommu_superpage = domain_update_iommu_superpage(NULL);
 }
 
-static inline struct context_entry *iommu_context_addr(struct intel_iommu *iommu,
-						       u8 bus, u8 devfn, int alloc)
+struct context_entry *iommu_context_addr(struct intel_iommu *iommu, u8 bus,
+					 u8 devfn, int alloc)
 {
 	struct root_entry *root = &iommu->root_entry[bus];
 	struct context_entry *context;
* Unmerged path drivers/iommu/intel_irq_remapping.c
* Unmerged path include/linux/intel-iommu.h
