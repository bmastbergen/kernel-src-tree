phy: add helpers for setting/clearing bits in PHY registers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit ac8322d806d15fd53fd5d70ceda61e05163392ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/ac8322d8.failed

Based on the recent introduction of phy_modify add helpers for setting
and clearing bits in PHY registers.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ac8322d806d15fd53fd5d70ceda61e05163392ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/phy.h
diff --cc include/linux/phy.h
index 2a7a15321caa,5a0c3e53e7c2..000000000000
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@@ -594,6 -748,72 +594,75 @@@ static inline int phy_write(struct phy_
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * __phy_write - Convenience function for writing a given PHY register
+  * @phydev: the phy_device struct
+  * @regnum: register number to write
+  * @val: value to write to @regnum
+  *
+  * The caller must have taken the MDIO bus lock.
+  */
+ static inline int __phy_write(struct phy_device *phydev, u32 regnum, u16 val)
+ {
+ 	return __mdiobus_write(phydev->mdio.bus, phydev->mdio.addr, regnum,
+ 			       val);
+ }
+ 
+ int __phy_modify(struct phy_device *phydev, u32 regnum, u16 mask, u16 set);
+ int phy_modify(struct phy_device *phydev, u32 regnum, u16 mask, u16 set);
+ 
+ /**
+  * __phy_set_bits - Convenience function for setting bits in a PHY register
+  * @phydev: the phy_device struct
+  * @regnum: register number to write
+  * @val: bits to set
+  *
+  * The caller must have taken the MDIO bus lock.
+  */
+ static inline int __phy_set_bits(struct phy_device *phydev, u32 regnum, u16 val)
+ {
+ 	return __phy_modify(phydev, regnum, 0, val);
+ }
+ 
+ /**
+  * __phy_clear_bits - Convenience function for clearing bits in a PHY register
+  * @phydev: the phy_device struct
+  * @regnum: register number to write
+  * @val: bits to clear
+  *
+  * The caller must have taken the MDIO bus lock.
+  */
+ static inline int __phy_clear_bits(struct phy_device *phydev, u32 regnum,
+ 				   u16 val)
+ {
+ 	return __phy_modify(phydev, regnum, val, 0);
+ }
+ 
+ /**
+  * phy_set_bits - Convenience function for setting bits in a PHY register
+  * @phydev: the phy_device struct
+  * @regnum: register number to write
+  * @val: bits to set
+  */
+ static inline int phy_set_bits(struct phy_device *phydev, u32 regnum, u16 val)
+ {
+ 	return phy_modify(phydev, regnum, 0, val);
+ }
+ 
+ /**
+  * phy_clear_bits - Convenience function for clearing bits in a PHY register
+  * @phydev: the phy_device struct
+  * @regnum: register number to write
+  * @val: bits to clear
+  */
+ static inline int phy_clear_bits(struct phy_device *phydev, u32 regnum, u16 val)
+ {
+ 	return phy_modify(phydev, regnum, val, 0);
+ }
+ 
+ /**
++>>>>>>> ac8322d806d1 (phy: add helpers for setting/clearing bits in PHY registers)
   * phy_interrupt_is_valid - Convenience function for testing a given PHY irq
   * @phydev: the phy_device struct
   *
* Unmerged path include/linux/phy.h
