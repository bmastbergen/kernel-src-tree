workqueue: remove keventd_up()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1062.el7
commit-author Tejun Heo <tj@kernel.org>
commit 863b710b664bdcb90c0c682ee24adb368f497a5b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1062.el7/863b710b.failed

keventd_up() no longer has in-kernel users.  Remove it and make
wq_online static.

	Signed-off-by: Tejun Heo <tj@kernel.org>
(cherry picked from commit 863b710b664bdcb90c0c682ee24adb368f497a5b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/workqueue.h
#	kernel/workqueue.c
diff --cc include/linux/workqueue.h
index fe516e9255b5,56417133c672..000000000000
--- a/include/linux/workqueue.h
+++ b/include/linux/workqueue.h
@@@ -380,20 -358,6 +380,23 @@@ extern struct workqueue_struct *system_
  extern struct workqueue_struct *system_power_efficient_wq;
  extern struct workqueue_struct *system_freezable_power_efficient_wq;
  
++<<<<<<< HEAD
 +static inline struct workqueue_struct * __deprecated __system_nrt_wq(void)
 +{
 +	return system_wq;
 +}
 +
 +static inline struct workqueue_struct * __deprecated __system_nrt_freezable_wq(void)
 +{
 +	return system_freezable_wq;
 +}
 +
 +/* equivlalent to system_wq and system_freezable_wq, deprecated */
 +#define system_nrt_wq			__system_nrt_wq()
 +#define system_nrt_freezable_wq		__system_nrt_freezable_wq()
 +
++=======
++>>>>>>> 863b710b664b (workqueue: remove keventd_up())
  extern struct workqueue_struct *
  __alloc_workqueue_key(const char *fmt, unsigned int flags, int max_active,
  	struct lock_class_key *key, const char *lock_name, ...) __printf(1, 6);
@@@ -599,41 -589,6 +602,44 @@@ static inline bool schedule_delayed_wor
  	return queue_delayed_work(system_wq, dwork, delay);
  }
  
++<<<<<<< HEAD
 +/**
 + * keventd_up - is workqueue initialized yet?
 + */
 +static inline bool keventd_up(void)
 +{
 +	return system_wq != NULL;
 +}
 +
 +/*
 + * Like above, but uses del_timer() instead of del_timer_sync(). This means,
 + * if it returns 0 the timer function may be running and the queueing is in
 + * progress.
 + */
 +static inline bool __deprecated __cancel_delayed_work(struct delayed_work *work)
 +{
 +	bool ret;
 +
 +	ret = del_timer(&work->timer);
 +	if (ret)
 +		work_clear_pending(&work->work);
 +	return ret;
 +}
 +
 +/* used to be different but now identical to flush_work(), deprecated */
 +static inline bool __deprecated flush_work_sync(struct work_struct *work)
 +{
 +	return flush_work(work);
 +}
 +
 +/* used to be different but now identical to flush_delayed_work(), deprecated */
 +static inline bool __deprecated flush_delayed_work_sync(struct delayed_work *dwork)
 +{
 +	return flush_delayed_work(dwork);
 +}
 +
++=======
++>>>>>>> 863b710b664b (workqueue: remove keventd_up())
  #ifndef CONFIG_SMP
  static inline long work_on_cpu(int cpu, long (*fn)(void *), void *arg)
  {
diff --cc kernel/workqueue.c
index ddaafa97bdb8,ad0cd439223b..000000000000
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@@ -284,13 -287,10 +284,17 @@@ static bool wq_disable_numa
  module_param_named(disable_numa, wq_disable_numa, bool, 0444);
  
  /* see the comment above the definition of WQ_POWER_EFFICIENT */
 -static bool wq_power_efficient = IS_ENABLED(CONFIG_WQ_POWER_EFFICIENT_DEFAULT);
 -module_param_named(power_efficient, wq_power_efficient, bool, 0444);
 +#ifdef CONFIG_WQ_POWER_EFFICIENT_DEFAULT
 +static bool wq_power_efficient = true;
 +#else
 +static bool wq_power_efficient;
 +#endif
  
++<<<<<<< HEAD
 +module_param_named(power_efficient, wq_power_efficient, bool, 0444);
++=======
+ static bool wq_online;			/* can kworkers be created yet? */
++>>>>>>> 863b710b664b (workqueue: remove keventd_up())
  
  static bool wq_numa_enabled;		/* unbound NUMA affinity enabled */
  
* Unmerged path include/linux/workqueue.h
* Unmerged path kernel/workqueue.c
