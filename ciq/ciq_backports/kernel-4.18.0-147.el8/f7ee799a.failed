nfp: flower: replace CFI with vlan present

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
commit f7ee799a51ddbcc205ef615fe424fb5084e9e0aa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/f7ee799a.failed

Replace vlan CFI bit with a vlan present bit that indicates the
presence of a vlan tag. Previously the driver incorrectly assumed
that an vlan id of 0 is not matchable, therefore we indicate vlan
presence with a vlan present bit.

Fixes: 5571e8c9f241 ("nfp: extend flower matching capabilities")
	Signed-off-by: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
	Signed-off-by: Louis Peens <louis.peens@netronome.com>
	Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f7ee799a51ddbcc205ef615fe424fb5084e9e0aa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/flower/match.c
diff --cc drivers/net/ethernet/netronome/nfp/flower/match.c
index c7e562a3162e,9b8b843d0340..000000000000
--- a/drivers/net/ethernet/netronome/nfp/flower/match.c
+++ b/drivers/net/ethernet/netronome/nfp/flower/match.c
@@@ -8,32 -8,41 +8,48 @@@
  #include "main.h"
  
  static void
 -nfp_flower_compile_meta_tci(struct nfp_flower_meta_tci *ext,
 -			    struct nfp_flower_meta_tci *msk,
 -			    struct tc_cls_flower_offload *flow, u8 key_type)
 +nfp_flower_compile_meta_tci(struct nfp_flower_meta_tci *frame,
 +			    struct tc_cls_flower_offload *flow, u8 key_type,
 +			    bool mask_version)
  {
 -	struct flow_rule *rule = tc_cls_flower_offload_flow_rule(flow);
 +	struct fl_flow_key *target = mask_version ? flow->mask : flow->key;
 +	struct flow_dissector_key_vlan *flow_vlan;
  	u16 tmp_tci;
  
 -	memset(ext, 0, sizeof(struct nfp_flower_meta_tci));
 -	memset(msk, 0, sizeof(struct nfp_flower_meta_tci));
 -
 +	memset(frame, 0, sizeof(struct nfp_flower_meta_tci));
  	/* Populate the metadata frame. */
 -	ext->nfp_flow_key_layer = key_type;
 -	ext->mask_id = ~0;
 -
 -	msk->nfp_flow_key_layer = key_type;
 -	msk->mask_id = ~0;
 +	frame->nfp_flow_key_layer = key_type;
 +	frame->mask_id = ~0;
  
 -	if (flow_rule_match_key(rule, FLOW_DISSECTOR_KEY_VLAN)) {
 -		struct flow_match_vlan match;
 -
 -		flow_rule_match_vlan(rule, &match);
 +	if (dissector_uses_key(flow->dissector, FLOW_DISSECTOR_KEY_VLAN)) {
 +		flow_vlan = skb_flow_dissector_target(flow->dissector,
 +						      FLOW_DISSECTOR_KEY_VLAN,
 +						      target);
  		/* Populate the tci field. */
++<<<<<<< HEAD
 +		if (flow_vlan->vlan_id || flow_vlan->vlan_priority) {
 +			tmp_tci = FIELD_PREP(NFP_FLOWER_MASK_VLAN_PRIO,
 +					     flow_vlan->vlan_priority) |
 +				  FIELD_PREP(NFP_FLOWER_MASK_VLAN_VID,
 +					     flow_vlan->vlan_id) |
 +				  NFP_FLOWER_MASK_VLAN_CFI;
 +			frame->tci = cpu_to_be16(tmp_tci);
 +		}
++=======
+ 		tmp_tci = NFP_FLOWER_MASK_VLAN_PRESENT;
+ 		tmp_tci |= FIELD_PREP(NFP_FLOWER_MASK_VLAN_PRIO,
+ 				      match.key->vlan_priority) |
+ 			   FIELD_PREP(NFP_FLOWER_MASK_VLAN_VID,
+ 				      match.key->vlan_id);
+ 		ext->tci = cpu_to_be16(tmp_tci);
+ 
+ 		tmp_tci = NFP_FLOWER_MASK_VLAN_PRESENT;
+ 		tmp_tci |= FIELD_PREP(NFP_FLOWER_MASK_VLAN_PRIO,
+ 				      match.mask->vlan_priority) |
+ 			   FIELD_PREP(NFP_FLOWER_MASK_VLAN_VID,
+ 				      match.mask->vlan_id);
+ 		msk->tci = cpu_to_be16(tmp_tci);
++>>>>>>> f7ee799a51dd (nfp: flower: replace CFI with vlan present)
  	}
  }
  
diff --git a/drivers/net/ethernet/netronome/nfp/flower/cmsg.h b/drivers/net/ethernet/netronome/nfp/flower/cmsg.h
index f56eb85d8622..c2742d6cfaad 100644
--- a/drivers/net/ethernet/netronome/nfp/flower/cmsg.h
+++ b/drivers/net/ethernet/netronome/nfp/flower/cmsg.h
@@ -26,7 +26,7 @@
 #define NFP_FLOWER_LAYER2_GENEVE_OP	BIT(6)
 
 #define NFP_FLOWER_MASK_VLAN_PRIO	GENMASK(15, 13)
-#define NFP_FLOWER_MASK_VLAN_CFI	BIT(12)
+#define NFP_FLOWER_MASK_VLAN_PRESENT	BIT(12)
 #define NFP_FLOWER_MASK_VLAN_VID	GENMASK(11, 0)
 
 #define NFP_FLOWER_MASK_MPLS_LB		GENMASK(31, 12)
* Unmerged path drivers/net/ethernet/netronome/nfp/flower/match.c
