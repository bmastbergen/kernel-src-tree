net: ethernet: Add helper for MACs which support pause

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [netdrv] ethernet: Add helper for MACs which support pause (Petr Oros) [1691720]
Rebuild_FUZZ: 95.15%
commit-author Andrew Lunn <andrew@lunn.ch>
commit c306ad36184fb7d0bd53f45441f45c1810e88a53
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/c306ad36.failed

Rather than have the MAC drivers manipulate phydev members, add a
helper function for MACs supporting Pause, but not Asym Pause.

	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c306ad36184fb7d0bd53f45441f45c1810e88a53)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bcm63xx_enet.c
#	drivers/net/phy/phy_device.c
#	include/linux/phy.h
diff --cc drivers/net/ethernet/broadcom/bcm63xx_enet.c
index 897302adc38e,9f25667c38e6..000000000000
--- a/drivers/net/ethernet/broadcom/bcm63xx_enet.c
+++ b/drivers/net/ethernet/broadcom/bcm63xx_enet.c
@@@ -890,14 -890,8 +890,19 @@@ static int bcm_enet_open(struct net_dev
  		}
  
  		/* mask with MAC supported features */
++<<<<<<< HEAD
 +		phydev->supported &= (SUPPORTED_10baseT_Half |
 +				      SUPPORTED_10baseT_Full |
 +				      SUPPORTED_100baseT_Half |
 +				      SUPPORTED_100baseT_Full |
 +				      SUPPORTED_Autoneg |
 +				      SUPPORTED_Pause |
 +				      SUPPORTED_MII);
 +		phydev->advertising = phydev->supported;
++=======
+ 		phy_support_sym_pause(phydev);
+ 		phy_set_max_speed(phydev, SPEED_100);
++>>>>>>> c306ad36184f (net: ethernet: Add helper for MACs which support pause)
  
  		if (priv->pause_auto && priv->pause_rx && priv->pause_tx)
  			phydev->advertising |= SUPPORTED_Pause;
diff --cc drivers/net/phy/phy_device.c
index b9f5f40a7ac1,e657d5ae2ab8..000000000000
--- a/drivers/net/phy/phy_device.c
+++ b/drivers/net/phy/phy_device.c
@@@ -1757,6 -1765,51 +1757,54 @@@ int phy_set_max_speed(struct phy_devic
  }
  EXPORT_SYMBOL(phy_set_max_speed);
  
++<<<<<<< HEAD
++=======
+ /**
+  * phy_remove_link_mode - Remove a supported link mode
+  * @phydev: phy_device structure to remove link mode from
+  * @link_mode: Link mode to be removed
+  *
+  * Description: Some MACs don't support all link modes which the PHY
+  * does.  e.g. a 1G MAC often does not support 1000Half. Add a helper
+  * to remove a link mode.
+  */
+ void phy_remove_link_mode(struct phy_device *phydev, u32 link_mode)
+ {
+ 	WARN_ON(link_mode > 31);
+ 
+ 	phydev->supported &= ~BIT(link_mode);
+ 	phydev->advertising = phydev->supported;
+ }
+ EXPORT_SYMBOL(phy_remove_link_mode);
+ 
+ /**
+  * phy_support_sym_pause - Enable support of symmetrical pause
+  * @phydev: target phy_device struct
+  *
+  * Description: Called by the MAC to indicate is supports symmetrical
+  * Pause, but not asym pause.
+  */
+ void phy_support_sym_pause(struct phy_device *phydev)
+ {
+ 	phydev->supported |= SUPPORTED_Pause;
+ 	phydev->advertising = phydev->supported;
+ }
+ EXPORT_SYMBOL(phy_support_sym_pause);
+ 
+ /**
+  * phy_support_asym_pause - Enable support of asym pause
+  * @phydev: target phy_device struct
+  *
+  * Description: Called by the MAC to indicate is supports Asym Pause.
+  */
+ void phy_support_asym_pause(struct phy_device *phydev)
+ {
+ 	phydev->supported |= SUPPORTED_Pause | SUPPORTED_Asym_Pause;
+ 	phydev->advertising = phydev->supported;
+ }
+ EXPORT_SYMBOL(phy_support_asym_pause);
+ 
++>>>>>>> c306ad36184f (net: ethernet: Add helper for MACs which support pause)
  static void of_set_phy_supported(struct phy_device *phydev)
  {
  	struct device_node *node = phydev->mdio.dev.of_node;
diff --cc include/linux/phy.h
index 075c2f770d3e,bc5d6c3f1388..000000000000
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@@ -1039,6 -1049,9 +1039,12 @@@ int phy_mii_ioctl(struct phy_device *ph
  int phy_start_interrupts(struct phy_device *phydev);
  void phy_print_status(struct phy_device *phydev);
  int phy_set_max_speed(struct phy_device *phydev, u32 max_speed);
++<<<<<<< HEAD
++=======
+ void phy_remove_link_mode(struct phy_device *phydev, u32 link_mode);
+ void phy_support_sym_pause(struct phy_device *phydev);
+ void phy_support_asym_pause(struct phy_device *phydev);
++>>>>>>> c306ad36184f (net: ethernet: Add helper for MACs which support pause)
  
  int phy_register_fixup(const char *bus_id, u32 phy_uid, u32 phy_uid_mask,
  		       int (*run)(struct phy_device *));
* Unmerged path drivers/net/ethernet/broadcom/bcm63xx_enet.c
diff --git a/drivers/net/ethernet/freescale/fec_main.c b/drivers/net/ethernet/freescale/fec_main.c
index c729665107f5..621d25d83479 100644
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@ -1948,14 +1948,12 @@ static int fec_enet_mii_probe(struct net_device *ndev)
 		phy_dev->supported &= PHY_GBIT_FEATURES;
 		phy_dev->supported &= ~SUPPORTED_1000baseT_Half;
 #if !defined(CONFIG_M5272)
-		phy_dev->supported |= SUPPORTED_Pause;
+		phy_support_sym_pause(phy_dev);
 #endif
 	}
 	else
 		phy_dev->supported &= PHY_BASIC_FEATURES;
 
-	phy_dev->advertising = phy_dev->supported;
-
 	fep->link = 0;
 	fep->full_duplex = 0;
 
* Unmerged path drivers/net/phy/phy_device.c
* Unmerged path include/linux/phy.h
