nvmet: ignore EOPNOTSUPP for discard

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 005c674f705ee308e23b8e4e7047419d12122fde
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/005c674f.failed

NVMe DSM is a pure hint, so if the underlying device / file system
does not support discard-like operations we should not fail the
operation but rather return success.

Fixes: 3b031d15995f ("nvmet: add error log support for bdev backend")
	Signed-off-by: Christoph Hellwig <hch@lst.de>
Reviewed by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Tested-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 005c674f705ee308e23b8e4e7047419d12122fde)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/io-cmd-bdev.c
#	drivers/nvme/target/io-cmd-file.c
diff --cc drivers/nvme/target/io-cmd-bdev.c
index c07184926ad7,a065dbfc43b1..000000000000
--- a/drivers/nvme/target/io-cmd-bdev.c
+++ b/drivers/nvme/target/io-cmd-bdev.c
@@@ -138,9 -194,11 +138,17 @@@ static u16 nvmet_bdev_discard_range(str
  			le64_to_cpu(range->slba) << (ns->blksize_shift - 9),
  			le32_to_cpu(range->nlb) << (ns->blksize_shift - 9),
  			GFP_KERNEL, 0, bio);
++<<<<<<< HEAD
 +	if (ret && ret != -EOPNOTSUPP)
 +		return NVME_SC_INTERNAL | NVME_SC_DNR;
 +	return 0;
++=======
+ 	if (ret && ret != -EOPNOTSUPP) {
+ 		req->error_slba = le64_to_cpu(range->slba);
+ 		return blk_to_nvme_status(req, errno_to_blk_status(ret));
+ 	}
+ 	return NVME_SC_SUCCESS;
++>>>>>>> 005c674f705e (nvmet: ignore EOPNOTSUPP for discard)
  }
  
  static void nvmet_bdev_execute_discard(struct nvmet_req *req)
diff --cc drivers/nvme/target/io-cmd-file.c
index 1500690046b1,3e43212d3c1c..000000000000
--- a/drivers/nvme/target/io-cmd-file.c
+++ b/drivers/nvme/target/io-cmd-file.c
@@@ -231,8 -296,10 +231,15 @@@ static void nvmet_file_execute_discard(
  			break;
  		}
  
++<<<<<<< HEAD
 +		if (vfs_fallocate(req->ns->file, mode, offset, len)) {
 +			ret = NVME_SC_INTERNAL | NVME_SC_DNR;
++=======
+ 		ret = vfs_fallocate(req->ns->file, mode, offset, len);
+ 		if (ret && ret != -EOPNOTSUPP) {
+ 			req->error_slba = le64_to_cpu(range.slba);
+ 			status = errno_to_nvme_status(req, ret);
++>>>>>>> 005c674f705e (nvmet: ignore EOPNOTSUPP for discard)
  			break;
  		}
  	}
* Unmerged path drivers/nvme/target/io-cmd-bdev.c
* Unmerged path drivers/nvme/target/io-cmd-file.c
