IB/uverbs: Lower the test for ongoing disassociation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Jason Gunthorpe <jgg@ziepe.ca>
commit cc2e14e68004e6dec70842f990085f67c1f6fec7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/cc2e14e6.failed

Commands that are reading/writing to objects can test for an ongoing
disassociation during their initial call to rdma_lookup_get_uobject.  This
directly prevents all of these commands from conflicting with an ongoing
disassociation.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit cc2e14e68004e6dec70842f990085f67c1f6fec7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/rdma_core.c
diff --cc drivers/infiniband/core/rdma_core.c
index 7abca5514e4d,d4de1fed98f2..000000000000
--- a/drivers/infiniband/core/rdma_core.c
+++ b/drivers/infiniband/core/rdma_core.c
@@@ -284,12 -449,20 +284,28 @@@ struct ib_uobject *rdma_lookup_get_uobj
  		goto free;
  	}
  
++<<<<<<< HEAD
 +	ret = uverbs_try_lock_object(uobj, exclusive);
 +	if (ret) {
 +		WARN(ucontext->cleanup_reason,
 +		     "ib_uverbs: Trying to lookup_get while cleanup context\n");
++=======
+ 	/*
+ 	 * If we have been disassociated block every command except for
+ 	 * DESTROY based commands.
+ 	 */
+ 	if (mode != UVERBS_LOOKUP_DESTROY &&
+ 	    !srcu_dereference(ufile->device->ib_dev,
+ 			      &ufile->device->disassociate_srcu)) {
+ 		ret = -EIO;
+ 		goto free;
+ 	}
+ 
+ 	ret = uverbs_try_lock_object(uobj, mode);
+ 	if (ret)
++>>>>>>> cc2e14e68004 (IB/uverbs: Lower the test for ongoing disassociation)
  		goto free;
 +	}
  
  	return uobj;
  free:
* Unmerged path drivers/infiniband/core/rdma_core.c
