drm/qxl: get vga ioports

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Gerd Hoffmann <kraxel@redhat.com>
commit fbf0a7f44cdd4041b5a3e2b14deaa0adebaf40da
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/fbf0a7f4.failed

qxl has two modes: "native" (used by the drm driver) and "vga" (vga
compatibility mode, typically used for boot display and firmware
framebuffers).

Accessing any vga ioport will switch the qxl device into vga mode.
The qxl driver never does that, but other drivers accessing vga ports
can trigger that too and therefore disturb qxl operation.  So aquire
the legacy vga ioports from vgaarb to avoid that.

Reproducer: Boot kvm guest with both qxl and i915 vgpu, with qxl being
first in pci scan order.

v2: Skip this for secondary qxl cards which don't have vga mode in the
    first place (Frediano).

	Cc: Frediano Ziglio <fziglio@redhat.com>
	Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
	Reviewed-by: Dave Airlie <airlied@redhat.com>
Link: http://patchwork.freedesktop.org/patch/msgid/20190805105401.29874-1-kraxel@redhat.com
(cherry picked from commit fbf0a7f44cdd4041b5a3e2b14deaa0adebaf40da)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/qxl/qxl_drv.c
diff --cc drivers/gpu/drm/qxl/qxl_drv.c
index 2445e75cf7ea,952201c6d821..000000000000
--- a/drivers/gpu/drm/qxl/qxl_drv.c
+++ b/drivers/gpu/drm/qxl/qxl_drv.c
@@@ -78,10 -84,22 +83,25 @@@ qxl_pci_probe(struct pci_dev *pdev, con
  	if (ret)
  		goto free_dev;
  
- 	ret = qxl_device_init(qdev, &qxl_driver, pdev);
++<<<<<<< HEAD
++=======
+ 	ret = drm_fb_helper_remove_conflicting_pci_framebuffers(pdev, 0, "qxl");
  	if (ret)
  		goto disable_pci;
  
+ 	if (is_vga(pdev)) {
+ 		ret = vga_get_interruptible(pdev, VGA_RSRC_LEGACY_IO);
+ 		if (ret) {
+ 			DRM_ERROR("can't get legacy vga ioports\n");
+ 			goto disable_pci;
+ 		}
+ 	}
+ 
++>>>>>>> fbf0a7f44cdd (drm/qxl: get vga ioports)
+ 	ret = qxl_device_init(qdev, &qxl_driver, pdev);
+ 	if (ret)
+ 		goto put_vga;
+ 
  	ret = qxl_modeset_init(qdev);
  	if (ret)
  		goto unload;
* Unmerged path drivers/gpu/drm/qxl/qxl_drv.c
