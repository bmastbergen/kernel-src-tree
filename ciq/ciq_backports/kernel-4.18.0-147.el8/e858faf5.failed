tcp: Reset bytes_acked and bytes_received when disconnecting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Christoph Paasch <cpaasch@apple.com>
commit e858faf556d4e14c750ba1e8852783c6f9520a0e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/e858faf5.failed

If an app is playing tricks to reuse a socket via tcp_disconnect(),
bytes_acked/received needs to be reset to 0. Otherwise tcp_info will
report the sum of the current and the old connection..

	Cc: Eric Dumazet <edumazet@google.com>
Fixes: 0df48c26d841 ("tcp: add tcpi_bytes_acked to tcp_info")
Fixes: bdd1f9edacb5 ("tcp: add tcpi_bytes_received to tcp_info")
	Signed-off-by: Christoph Paasch <cpaasch@apple.com>
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e858faf556d4e14c750ba1e8852783c6f9520a0e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp.c
diff --cc net/ipv4/tcp.c
index e270c3ad798f,2eebd092c3c1..000000000000
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@@ -2600,6 -2613,31 +2600,34 @@@ int tcp_disconnect(struct sock *sk, in
  	sk->sk_rx_dst = NULL;
  	tcp_saved_syn_free(tp);
  	tp->compressed_ack = 0;
++<<<<<<< HEAD
++=======
+ 	tp->bytes_sent = 0;
+ 	tp->bytes_acked = 0;
+ 	tp->bytes_received = 0;
+ 	tp->bytes_retrans = 0;
+ 	tp->duplicate_sack[0].start_seq = 0;
+ 	tp->duplicate_sack[0].end_seq = 0;
+ 	tp->dsack_dups = 0;
+ 	tp->reord_seen = 0;
+ 	tp->retrans_out = 0;
+ 	tp->sacked_out = 0;
+ 	tp->tlp_high_seq = 0;
+ 	tp->last_oow_ack_time = 0;
+ 	/* There's a bubble in the pipe until at least the first ACK. */
+ 	tp->app_limited = ~0U;
+ 	tp->rack.mstamp = 0;
+ 	tp->rack.advanced = 0;
+ 	tp->rack.reo_wnd_steps = 1;
+ 	tp->rack.last_delivered = 0;
+ 	tp->rack.reo_wnd_persist = 0;
+ 	tp->rack.dsack_seen = 0;
+ 	tp->syn_data_acked = 0;
+ 	tp->rx_opt.saw_tstamp = 0;
+ 	tp->rx_opt.dsack = 0;
+ 	tp->rx_opt.num_sacks = 0;
+ 
++>>>>>>> e858faf556d4 (tcp: Reset bytes_acked and bytes_received when disconnecting)
  
  	/* Clean up fastopen related fields */
  	tcp_free_fastopen_req(tp);
* Unmerged path net/ipv4/tcp.c
