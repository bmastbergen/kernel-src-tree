net/ipv6: don't return positive numbers when nothing was dumped

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [net] ipv6: don't return positive numbers when nothing was dumped (Petr Oros) [1700306]
Rebuild_FUZZ: 96.72%
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 1518039f6b5ac794313c24c76f85cead0cd60f6c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/1518039f.failed

in6_dump_addrs() returns a positive 1 if there was nothing to dump.
This return value can not be passed as return from inet6_dump_addr()
as is, because it will confuse rtnetlink, resulting in NLMSG_DONE
never getting set:

$ ip addr list dev lo
EOF on netlink
Dump terminated

v2: flip condition to avoid a new goto (DaveA)

Fixes: 7c1e8a3817c5 ("netlink: fixup regression in RTM_GETADDR")
	Reported-by: Brendan Galloway <brendan.galloway@netronome.com>
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: David Ahern <dsahern@gmail.com>
	Tested-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1518039f6b5ac794313c24c76f85cead0cd60f6c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/addrconf.c
diff --cc net/ipv6/addrconf.c
index ff031adf9e83,0c9e20ac01ab..000000000000
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@@ -5035,16 -5100,30 +5035,34 @@@ static int inet6_dump_addr(struct sk_bu
  
  	s_h = cb->args[0];
  	s_idx = idx = cb->args[1];
 -	s_ip_idx = cb->args[2];
 -
 -	if (cb->strict_check) {
 -		err = inet6_valid_dump_ifaddr_req(nlh, &fillargs, &tgt_net,
 -						  skb->sk, cb);
 -		if (err < 0)
 -			goto put_tgt_net;
 -
 +	s_ip_idx = ip_idx = cb->args[2];
 +
 +	if (nlmsg_parse(cb->nlh, sizeof(struct ifaddrmsg), tb, IFA_MAX,
 +			ifa_ipv6_policy, NULL) >= 0) {
 +		if (tb[IFA_TARGET_NETNSID]) {
 +			netnsid = nla_get_s32(tb[IFA_TARGET_NETNSID]);
 +
++<<<<<<< HEAD
 +			tgt_net = rtnl_get_net_ns_capable(skb->sk, netnsid);
 +			if (IS_ERR(tgt_net))
 +				return PTR_ERR(tgt_net);
++=======
+ 		err = 0;
+ 		if (fillargs.ifindex) {
+ 			dev = __dev_get_by_index(tgt_net, fillargs.ifindex);
+ 			if (!dev) {
+ 				err = -ENODEV;
+ 				goto put_tgt_net;
+ 			}
+ 			idev = __in6_dev_get(dev);
+ 			if (idev) {
+ 				err = in6_dump_addrs(idev, skb, cb, s_ip_idx,
+ 						     &fillargs);
+ 				if (err > 0)
+ 					err = 0;
+ 			}
+ 			goto put_tgt_net;
++>>>>>>> 1518039f6b5a (net/ipv6: don't return positive numbers when nothing was dumped)
  		}
  	}
  
* Unmerged path net/ipv6/addrconf.c
