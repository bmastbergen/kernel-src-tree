x86/kvm/hyper-v: avoid open-coding stimer_mark_pending() in kvm_hv_notify_acked_sint()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit 08a800ac257a2eeed1fad34b55ed55b2578e9b4e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/08a800ac.failed

stimers_pending optimization only helps us to avoid multiple
kvm_make_request() calls. This doesn't happen very often and these
calls are very cheap in the first place, remove open-coded version of
stimer_mark_pending() from kvm_hv_notify_acked_sint().

	Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Reviewed-by: Roman Kagan <rkagan@virtuozzo.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 08a800ac257a2eeed1fad34b55ed55b2578e9b4e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/hyperv.c
diff --cc arch/x86/kvm/hyperv.c
index bd5751b7365c,209ca485a2c7..000000000000
--- a/arch/x86/kvm/hyperv.c
+++ b/arch/x86/kvm/hyperv.c
@@@ -170,15 -188,10 +170,18 @@@ static void kvm_hv_notify_acked_sint(st
  	for (idx = 0; idx < ARRAY_SIZE(hv_vcpu->stimer); idx++) {
  		stimer = &hv_vcpu->stimer[idx];
  		if (stimer->msg_pending && stimer->config.enable &&
++<<<<<<< HEAD
 +		    stimer->config.sintx == sint) {
 +			set_bit(stimer->index,
 +				hv_vcpu->stimer_pending_bitmap);
 +			stimers_pending++;
 +		}
++=======
+ 		    !stimer->config.direct_mode &&
+ 		    stimer->config.sintx == sint)
+ 			stimer_mark_pending(stimer, false);
++>>>>>>> 08a800ac257a (x86/kvm/hyper-v: avoid open-coding stimer_mark_pending() in kvm_hv_notify_acked_sint())
  	}
- 	if (stimers_pending)
- 		kvm_make_request(KVM_REQ_HV_STIMER, vcpu);
  
  	idx = srcu_read_lock(&kvm->irq_srcu);
  	gsi = atomic_read(&synic->sint_to_gsi[sint]);
* Unmerged path arch/x86/kvm/hyperv.c
