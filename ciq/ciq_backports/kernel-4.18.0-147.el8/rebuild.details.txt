Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 12676
Number of commits matched with upstream: 12533 (98.87%)
Number of commits in upstream but not in rpm: 475704
Number of commits NOT found in upstream: 143 (1.13%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-147.el8 for kernel-4.18.0-147.el8
Clean Cherry Picks: 10511 (83.87%)
Empty Cherry Picks: 1897 (15.14%)
_______________________________

__EMPTY COMMITS__________________________
579b9239c1f38665b21e8d0e6ee83ecc96dbd6bb powerpc/radix: Fix kernel crash with mremap()
e7afe6c1d486b516ed586dcc10b3e7e3e85a9c2b sunrpc: fix 4 more call sites that were using stack memory with a scatterlist
d021613ee3acb0d9a45038204e5699727719fe8a scsi: lpfc: Remove set but not used variables 'tgtp'
e8c8b53ccaff568fef4c13a6ccaf08bf241aa01a net/mlx5e: Force CHECKSUM_UNNECESSARY for short ethernet frames
3e32131abc311a5cb9fddecc72cbd0b95ffcc10d arm64: Add workaround for Fujitsu A64FX erratum 010001
96d4f267e40f9509e8a66e2b39e8b95655617693 Remove 'type' argument from access_ok() function
4caf4ebfe4cf0ea262eb9e829bb254a6a6d58acc Fix access_ok() fallout for sparc32 and powerpc
6df6ba974a55678a2c7d9a0c06eb15cde0c4b184 PCI: aardvark: Remove PCIe outbound window configuration
fc8efd2ddfed3f343c11b693e87140ff358d7ff5 mm/memory.c: do_fault: avoid usage of stale vm_area_struct
48acad099074984f6b0b6e4da011856ba25d12ba scsi: qla2xxx: Fix N2N link re-connect
23dd98a6555897f65306c6937b428c8742fef610 scsi: qla2xxx: Fix login retry count
b63d8b895a1038e5ff762e19b46e9fe9fa3a19a2 scsi: qla2xxx: Fix redundant fc_rport registration
8777e4314d397c4e3615dc02fe8537e571e3922f scsi: qla2xxx: Migrate NVME N2N handling into state machine
cb873ba4002095d1e2fc60521bc4d860c7b72b92 scsi: qla2xxx: Update rscn_rcvd field to more meaningful scan_needed
cd4ed6b470f1569692b5d0d295b207f870570829 scsi: qla2xxx: Move rport registration out of internal work_list
0754d5e003bccaf30ebb2a75db2017d68696fdd5 scsi: qla2xxx: Decrement login retry count for only plogi
b6faaaf796d7bfb00e32ca5c905d55cc43e89448 scsi: qla2xxx: Serialize mailbox request
6b0431d6fa20bd1b600a1e6df76bf7425fe178b5 scsi: qla2xxx: Fix out of order Termination and ABTS response
8b4673ba3a1b992b757a32667d2d3adae80e11fd scsi: qla2xxx: Add support for ZIO6 interrupt threshold
0aca77843e2803bf4fab1598b7891c56c16be979 scsi: qla2xxx: Reduce holding sess_lock to prevent CPU lock-up
aecf043443d38bded9f57b272d97b2aea4cee616 scsi: qla2xxx: Fix Remote port registration
585def9b2f47d35aab6cf116d63ec6c70e929e51 scsi: qla2xxx: Move ABTS code behind qpair
0645cb8350cdb60bfbf91caa722984b81c215add scsi: qla2xxx: Add mode control for each physical port
a110af851a82fb7f35d75755101b36a0517a6d29 scsi: qla2xxx: Fix double increment of switch scan retry count
1703659dada8a5bfe9c31db6436792cbca1e26ea scsi: qla2xxx: don't allow negative thresholds
9fe278f44b4bc06cc61e33b2af65f87d507d13d0 scsi: qla2xxx: Move log messages before issuing command to firmware
ef801f07e7b3cc1786d8ab1b4fdf069cc2a136d2 scsi: qla2xxx: Return switch command on a timeout
50435d4211a784e1577b4af72b07276c3851d324 scsi: qla2xxx: Modify fall-through annotations
8f9a214823c9806386760b9f8624a376bbcd5232 scsi: qla2xxx: Declare local functions 'static'
109a5987d9ead316523647d6310d609dc95bdaa2 scsi: qla2xxx: Make qla2x00_sysfs_write_nvram() easier to analyze
eb023220f4eac1703e22e48ed62310a6565b3a1f scsi: qla2xxx: Remove a set-but-not-used variable
c4e521b654e15e372a6429e269e7e907b4698224 scsi: qla2xxx: Split the __qla2x00_abort_all_cmds() function
835aa4f2691e4ed4ed16de81f3cabf17a87a164f scsi: qla2xxx: Fix for FC-NVMe discovery for NPIV port
50b812755e9766fa0a1a28533f4d11a34a5b813e scsi: qla2xxx: Fix DMA error when the DIF sg buffer crosses 4GB boundary
4825034afba894cc2533e91ff411bfd5b49a632c scsi: qla2xxx: Change default ZIO threshold.
87d6814a28d943acb969a9b415f66eaea95a882e scsi: qla2xxx: Fix fw options handle eh_bus_reset()
f233e8c000c6ff93481c8e867e06637c90e69a01 scsi: qla2xxx: Move debug messages before sending srb preventing panic
ec322937a7f152d68755dc8316523bf6f831b48f scsi: qla2xxx: Fix LUN discovery if loop id is not assigned yet by firmware
4910b524ac9e61b70e35280877361b790a657d48 scsi: qla2xxx: Add support for setting port speed
21497857ef48ef00b47fbc18639dc5cf80c60d90 scsi: qla2xxx: Update driver version to 10.00.00.14-k
e9f7be0c4316a0ea1c47b1e800baa58fb937096c scsi: qla2xxx: Fix issue reported by static checker for qla2x00_els_dcmd2_sp_done()
038d710fca5bb149d3af2e0b71f1284f8430a979 scsi: qla2xxx: avoid printf format warning
0d0b660f214dc4905db7b6bc998bad0c16dfb1ba nvme: add ANA support
8f220c418d070a097f7d292cf6b37f88d67845ad nvme: fixup crash on failed discovery
bb830add192e9d8338082c0fc2c209e23b43d865 nvme: properly propagate errors in nvme_mpath_init
783f4a4408e1251d17f333ad56abac24dde988b9 nvme: call nvme_complete_rq when nvmf_check_ready fails for mpath I/O
f333444708f82c4a4d3ccac004da0bfd9cfdfa42 nvme: take node locality into account when selecting a path
103e515efa89be33d04e45aae82de136f0c49865 nvme: add a numa_node field to struct nvme_ctrl
06f3d71ea071b70e62bcc146cd9ff7ed1f9d4e43 nvme-fc: fix numa_node when dev is null
c7055fd15ff46d92eb0dd1c16a4fe010d58224c8 nvme-multipath: zero out ANA log buffer
78a61cd42a64f3587862b372a79e1d6aaf131fd7 nvme-multipath: drop optimization for static ANA group IDs
75c10e73272484bc3a940a9c8e4ec39a7a1b8c21 nvme-multipath: round-robin I/O policy
bc50ad7501dd3629af9aa423ed0d1eae0061bcf1 nvme: convert to SPDX identifiers
1dfce294577120ec60399a64094ea00e4247103d IB: Replace ib_query_gid/ib_get_cached_gid with rdma_query_gid
b4c296f9c96420b8e7e92466ea5960f10ee20aae RDMA/smc: Replace ib_query_gid with rdma_get_gid_attr
7dc08dcfc8c86cb4457e383734ff6844ddaff876 IB/core: Expose ib_ucontext from a given ib_uverbs_file
b7403217656dcf6c51f09d0bca7a12db0de8934a IB: Make ib_init_ah_attr_from_wc set sgid_attr
e99028ad76e788574a7eafaee2e5916c5b9bbf87 RDMA/uverbs: Check existence of create_flow callback
87fc2a620a398e970872064841b0db7cc6d0149f RDMA/uverbs: Store the specs_root in the struct ib_uverbs_device
d108dac08085b6fe3947df9625c76fc9f66c1bbb RDMA/uverbs: Simplify UVERBS_ATTR family of macros
595c7736d48037d67e7926f5d3ebf484b95b1d13 RDMA/uverbs: Simplify method definition macros
6c61d2a55c4e5980e231fac9bb54e6ff1a5e811b RDMA/uverbs: Simplify UVERBS_OBJECT and _TREE family of macros
1c77483e4c50339b0306572167ccbff6b55d051b IB: Improve uverbs_cleanup_ucontext algorithm
9a119cd597769e0dd432110361ed1deec729ac06 RDMA/uverbs: Get rid of the & in method specifications
83bb4442330f035bd68ec5d2f5b87bfef1c1a4ab RDMA/uverbs: Remove UA_FLAGS
540cd69209682a351ab76b83b85ea856b8192720 RDMA/uverbs: Use UVERBS_ATTR_MIN_SIZE correctly and uniformly
422e3d37ed7ea8b421208a44913c420055334976 RDMA/uverbs: Combine MIN_SZ_OR_ZERO with UVERBS_ATTR_STRUCT
6a5e9c88419828a487204e35291ae4459697a9bd IB/uverbs: Move non driver related elements from ib_ucontext to ib_ufile
6ef1c82821b2ae9bfa26fe65e6f0a66dfd79b7d7 IB/uverbs: Replace ib_ucontext with ib_uverbs_file in core function calls
2cc1e3b80942a7de7dce81f8a86c27a4ba3a695e IB/uverbs: Replace file->ucontext with file in uverbs_cmd.c
d0259e82e7d214340aed33732e9a5ce448564921 IB/uverbs: Remove ib_uobject_file
528922afd41cdd1da6a4b33e2c82e38c1746561c IB: Enable uverbs_destroy_def_handler to be used by drivers
3df593bfe6455f28cda879be8299b30b8601ce3b IB/uverbs: Get rid of null_obj_type
1250c3048cf1632f5dbb99a0242410baff67955d IB/uverbs: Handle IDR and FD types without truncation
c561c288463102b12c9089a42c6c2a9f55c4fb53 IB/uverbs: Clarify the kref'ing ordering for alloc_commit
5671f79b42da197466bf0908bce6f7ab4e35488f IB/uverbs: Revise the placement of get/puts on uobject
e6d5d5ddd0869cf44a554289cd213007ccc0afde IB/uverbs: Clarify and revise uverbs_close_fd
87064277c4d3b0ddb251a91324f2525048027ee2 IB/uverbs: Revise and clarify the rwsem and uobjects_lock
e951747a087a8655f467833bb367ebf53d57527c IB/uverbs: Rework the locking for cleaning up the ucontext
2c96eb7d62de5048aa08e9ee4fbb607f29e2638c IB/uverbs: Always propagate errors from rdma_alloc_commit_uobject()
aba94548c9e49939fafc92bb406a7f8e7ed87643 IB/uverbs: Move the FD uobj type struct file allocation to alloc_commit
22fa27fbc64d01cbbe1e4da751e64cc22d24a6e4 IB/uverbs: Fix locking around struct ib_uverbs_file ucontext
d34ac5cd3a73aacd11009c4fc3ba15d7ea62c411 RDMA, core and ULPs: Declare ib_post_send() and ib_post_recv() arguments const
e7ff98aefc9e532a2067d5a2112a23902726e9a3 RDMA/cma: Constify path record, ib_cm_event, listen_id pointers
854633165164d19832225ece148370bb9f3b0034 RDMA/core: Prefix _ib to IB/RoCE specific functions
aa72c9a5f986444f5e245767402ed1f3066fca2c IB/uverbs: Remove rdma_explicit_destroy() from the ioctl methods
32ed5c00ac5fdea49058fd49bf8707e101dc3dfe IB/uverbs: Make the write path destroy methods use the same flow as ioctl
87ad80abc70d2d5a4e383bc7e63867c9bc660838 IB/uverbs: Consolidate uobject destruction
9867f5c6695f0a17cde9a4dc140fe026b4e40d4a IB/uverbs: Convert 'bool exclusive' into an enum
7452a3c745a2e7eb70d09dc5bb870759b1f26c91 IB/uverbs: Allow RDMA_REMOVE_DESTROY to work concurrently with disassociate
1e857e65d4bb76738d3fb3b15ce9b73a0ce550f8 IB/uverbs: Allow uobject allocation to work concurrently with disassociate
cc2e14e68004e6dec70842f990085f67c1f6fec7 IB/uverbs: Lower the test for ongoing disassociation
bbd51e881ff05aa6dccda025e335438f3b3a1dba IB/uverbs: Do not pass struct ib_device to the write based methods
e83f0ecdc40f2c3d63ff0e7f17462a29d12684a2 IB/uverbs: Do not pass struct ib_device to the ioctl methods
a9b66d6453d70ee01f11bdae40d68996cee7474a IB/uverbs: Do not block disassociate during write()
0f50d88a6e9ae6d9dd14ed1a7d6b309280a9c23b IB/uverbs: Allow all DESTROY commands to succeed after disassociate
922983c2a1a2f679cd576eb7162f413c15a4e979 IB/uverbs: Fix reading of 32 bit flags
7d96c9b17636b6148534617ddf95dead18617776 IB/uverbs: Have the core code create the uverbs_root_spec
9ed3e5f447723a41de6bcc29633e9f7e6246d2f7 IB/uverbs: Build the specs into a radix tree at runtime
6b0d08f4a27134e6fb49aa33ceb53356081bc92e IB/uverbs: Use uverbs_api to manage the object type inside the uobject
4b3dd2bbf0818ccb23e7f2831f2ca4a86789cd1f IB/uverbs: Provide implementation private memory for the uverbs_attr_bundle
6a1f444fefeba392d1232b408aaf5902e33e0982 IB/uverbs: Remove the ib_uverbs_attr pointer from each attr
461bb2eee4e162617e790c74d9b4ab10056cad7f IB/uverbs: Add a simple allocator to uverbs_attr_bundle
3a863577a7496278892360a69d90d8465733100c IB/uverbs: Use uverbs_api to unmarshal ioctl commands
51d0a2b4cfa9979fd8a59faf483b4e84587ab4ea IB/uverbs: Remove struct uverbs_root_spec and all supporting code
4ce719f846a4177f2631e4149503e3baf3dce87b IB/uverbs: Do not check for device disassociation during ioctl
e4ff3d22c11dd505353896cdcad0ee8f3251be68 IB/core: Release object lock if destroy failed
08e74be103051861eb2c1ee52a2dcf119cde264f RDMA/uverbs: Fix error cleanup path of ib_uverbs_add_one()
a9360abd3de0aad745d25d003923d56afb28a04b IB/uverbs: Free uapi on destroy
1ffba6264268e3a3f32f963ef3f44006ea9ebd35 RDMA/providers: Remove pointless functions
a8dd9c4df18edc873d244790d163564a5d17626b proc/kcore: don't grab lock for kclist_add()
37e949bd5293ddb70acf236eedf2ae8caa1db57b proc/kcore: clean up ELF header generation
bf991c2231117d50a7645792b514354fc8d19dae proc/kcore: optimize multiple page reads
23c85094fe1895caefdd19ef624ee687ec5f4507 proc/kcore: add vmcoreinfo note to /proc/kcore
c40f7d74c741a907cfaeb73a7697081881c497d0 sched/fair: Fix infinite loop in update_blocked_averages() by reverting a9e7f6544b9c
5d299eabea5a251fbf66e8277704b874bbba92dc sched/fair: Add tmp_alone_branch assertion
f6783319737f28e4436a69611853a5a098cbe974 sched/fair: Fix insertion in rq->leaf_cfs_rq_list
039ae8bcf7a5f4476f4487e6bf816885fb3fb617 sched/fair: Fix O(nr_cgroups) in the load balancing path
61cce6f6eeced5ddd9cac55e807fe28b4f18c1ba scsi: sd: use mempool for discard special page
8001b717f09460d9e17457f6bade6699aa14604f rdma/cxgb4: fix some info leaks
b9855f4ca0fe582aabfdbd08f0d856b22486e157 iw_cxgb4: RDMA write with immediate support
ba6f3ec198d555d0c9b7e038cb003922aea2797d powercap/intel_rapl: add Ice Lake mobile
65749f7375ae7a3cc14237c9972e5a3c14116c85 net: hns3: reuse reinitialization interface in the hns3_set_channels
c8a8045b2d0a974149d65bbe6a7acbcde93cf85b net: hns3: Fix NULL deref when unloading driver
e215278548f9ea412e2be794efa1c84c6817c657 net: hns3: fix netif_napi_del() not do problem when unloading
3b9a907223d7f6b9d1dadea29436842ae9bcd76d ipmi: fix sleep-in-atomic in free_user at cleanup SRCU user->release_barrier
7da66670775d201f633577f5b15a4bbeebaaa2b0 crypto: testmgr - add AES-CFB tests
0953fffec9ba022f63bfe01e86427530d8320d5c RDMA/uverbs: Add UVERBS_ATTR_CONST_IN to the specs language
6ceb6331b3291694fb6ceba625219f51447c3fa2 RDMA/uverbs: Declare closing variable as boolean
adee9f3f3bbb317c5469f84deba01eef4b86515b RDMA/core: Depend on device_add() to add device attributes
c5c4d92e70f37369b5bdca5e85f9fc55dc2c8a3b RDMA/uverbs: Use cdev_device_add() instead of cdev_add()
b53b1c08a23eb1091982daacb2122f90a7094a77 RDMA/uverbs: Use device.groups to initialize device attributes
70cd20aed00f719f3536154df02596106e431e45 IB/uverbs: Add IDRs array attribute type to ioctl() interface
86e1d464a8ccd627b6ea3e9a98a0389b0d27fd1f RDMA/uverbs: Move flow resources initialization
0e9d2c19bff1d351005afb2f990a913e395ba6d4 RDMA/core: Consider net ns of gid attribute for RoCE
0099103926b68e6675a1be4644848f5b1c1b6f97 RDMA/uverbs: Fix error unwind in ib_uverbs_add_one
5f9794dc94f59ad1eb821724a8ae1f8e803ea188 RDMA/ucontext: Add a core API for mmaping driver IO memory
ce92db1ca84de2ebc5be7a81a68f2e220799fcf5 RDMA/ucontext: Get rid of the old disassociate flow
597ecc5a095406a668e53ab330495ddb65327f77 RDMA/umem: Get rid of struct ib_umem.odp_data
c9990ab39b6e911003bab10a6da96e98ab1503a3 RDMA/umem: Move all the ODP related stuff out of ucontext and into per_mm
f27a0d50a4bc2861b472c2e3740d63a29d1ac460 RDMA/umem: Use umem->owning_mm inside ODP
ca748c39ea3f3c755295d64d69ba0b4375e34b5d RDMA/umem: Get rid of per_mm->notifier_count
be7a57b41ad824dbc59d1ffa91160ee73f2999ee RDMA/umem: Handle a half-complete start/end sequence
56ac9dd9177ce451ac8176311915b29e8b5f0ac2 RDMA/umem: Avoid synchronize_srcu in the ODP MR destruction path
e349f858d29f300ad9ad327fd57735a1d15e147f RDMA: Fully setup the device name in ib_register_device
43c7c851b9bce9e6091f2c882871a3b388aa38c3 RDMA/core: Use dev_err/dbg/etc instead of pr_* + ibdev->name
896de0090a85f4c3a2b37fc0f46215a73c5b5429 RDMA/core: Use dev_name instead of ibdev->name
41ab1cb7d1cd5d53d68bcf5fb3fddad77af15545 RDMA/cma: Introduce and use cma_ib_acquire_dev()
e73798f20ecb35f7d6c672d48d6b9da57c8cbf64 RDMA/uverbs: Fix RCU annotation for radix slot deference
9549c2bd094f0f54b8827d64886f5b1de370dff3 RDMA/core: Align multiple functions to kernel coding style
dbace111e5b320682eee63d7173959a2b2bd9ccb RDMA/core: Annotate timeout as unsigned long
d21943dd19b5c79dc09bb0e8bf80cd5ee09c41c2 RDMA/core: Implement IB device rename function
1ae4cfa03902c83d1d77123e5ac8f0812c61b90e RDMA/core: Rename ports_parent to ports_kobj
90f6e41cc03a4055d56e94ad7c97df4b1add7f61 RDMA/uverbs: Use kernel API to allocate uverbs indexes
d4122f5abef844112799d2056fdc7bbedbc913f3 RDMA/core: Allow existing drivers to set one sysfs group per device
548cb4fbe80d68b9d1b8b30aca179636e74bec36 RDMA/core: Refactor ib_register_device() function
019f118b94c895294debfaa394b267638fe2f648 IB/{hfi1, qib, rdmavt}: Move copy SGE logic into rdmavt
116aa0330ec71b9872dfb3a3cc5202a72b5a1666 IB/{hfi1, qib, rdmavt}: Move send completion logic to rdmavt
15703461533a5ffd775722390431625daaae7618 IB/{hfi1, qib, rdmavt}: Move ruc_loopback to rdmavt
508a523f6bc6cdfbf7031d66559d4ad24956b741 RDMA/drivers: Use core provided API for registering device attributes
2a3ccfdbeb6a5f832d7203e230799f1ffa46e0fc RDMA/uverbs: Get rid of ucontext->tgid
36feaac35405e932ad9c321d7a2db8a7e4a4d7ca ip6_tunnel: respect ttl inherit for ip6tnl
661b8d1b0e3a745e25f05adef2ebd00d830eeea7 net: add umem reference in netdev{_rx}_queue
0e6160f3f5a9a817c3100f02e1605c49cbb2fe78 vxlan: vxlan_fdb_notify(): Make switchdev notification configurable
45598c1cee69b9c7ce111fa634226ab335fafabe vxlan: Mark user-added FDB entries
d17d9f5e5143125f9274194d8f7368f76b9d141f switchdev: Replace port obj add/del SDO with a notification
69b7320e14e6e8c7a77fa5803cecc86434a1162d net: switchdev: Add extack argument to switchdev_port_obj_add()
ff23b91ce1ae686e436e9926de1fda3342ef26f8 vxlan: Add a function to init switchdev_notifier_vxlan_fdb_info
479c86dc551c9720765ed19433990eae6a1f899f net: switchdev: Add extack to struct switchdev_notifier_info
55eb942eda2ccbbbea61db4c1a774ba22b618046 nvmet: add buffered I/O support for file backed ns
793c7cfce02ce88b7bd67d43834c052d16c096e3 nvmet: track and limit the number of namespaces per subsystem
72efd25dcf4f6310e9e6fa85620aa443b27c23fe nvmet: add minimal ANA support
62ac0d32f74ea511d5813be728dc589d03f866a3 nvmet: support configuring ANA groups
b369b30cf510fe94d8884837039362e2ec223cec nvmet: use Retain Async Event bit to clear AEN
dedf0be544614b6d9d395e78d72cc8c30d03e440 nvmet: add ns write protect support
be1277f5eb17a2e5788139eabb0b53dd04c695f3 nvme: count all ANA groups for ANA Log page
fef912bf860e8e7e48a2bfb978a356bba743a8b7 block: genhd: add 'groups' argument to device_add_disk
33b14f67a4e1eabd219fd6543da8f15ed86b641c nvme: register ns_id attributes as default sysfs groups
ea96d6496ff59b2b26dc9e13dc8f57d77731eb37 nvmet_fc: support target port removal with nvmet layer
09bd1ff4b15143bc0e6dd2adf39f59f6ab6e2621 nvme-core: add async event trace helper
886fabf693263e8651c0c4ab84fc626ad6d3a6e7 nvme: update node paths after adding new path
14a1336e6fff47dd1028b484d6c802105c58e2ee nvme: warn when finding multi-port subsystems without multipathing enabled
3e53ba38a9404434a8b57683825279f4305b5a76 nvme: cache controller attributes
6e3ca03ee934572d5de4fb2224c01e12c4d422c8 nvme: support traffic based keep-alive
50a909db36f244bcfec6e02598d31c0b0a468175 nvmet: use IOCB_NOWAIT for file-ns buffered I/O
7114ddeb40c0ccc584d86df598da4054ca4cd79f nvmet: change aen mask functions to use bit numbers
90107455cce753c05a5e1e80cb84b09da1c87eef nvmet: make kato and AEN processing for use by other controllers
f301c2b1368905340133ff8ef4485befdd0b7e2d nvmet: add defines for discovery change async events
253928eec61a52935584777f0dfba6cdb63967b6 nvmet: allow host connect even if no allowed subsystems are exported
6e2e312ea7ff73acfafaa5c9851e151e9483c761 nvmet-fc: remove the IN_ISR deferred scheduling options
b662a078576e7d6e235b4e1b94863f0474cd8555 nvmet: enable Discovery Controller AENs
49cd84b6f8b677ef45731ed56ddb802cdbb94c9e nvme: implement Enhanced Command Retry
cb5b7262b011cfb793519bf97e54dff5282da23c nvme: provide fallback for discard alloc failure
b7c8f3663d0e0773aca3324c26bce3ca8343ec14 nvme: remove nvme_common command cdw10 array
76574f37bf4caa7150ea1559cd98e3017b9752d2 nvmet: add interface to update error-log page
e81446afc7f5ee45fd90b1b5a22ffa247dca5b15 nvmet: add error log support in the core
2da6e00580f5bc13ed0ba0acaa9d7ce0df226e7e nvmet: add error log support for admin-cmd
3b031d15995f3e4c43e38159072f07efe3fa35d9 nvmet: add error log support for bdev backend
c6aa3542e01026a94d24713ee2c0dce517e9b6de nvmet: add error log support for file backend
092ff0520070fad8407b196f3bb6156ce77a6f98 nvme: fix kernel paging oops
66c6afbd7321983be4c4160aff4d79e52af84a60 nvmet: fix comparison of a u16 with -1
5698b805fbf09a5dfa60829f5a179c0568a8dc3b nvmet: use a macro for default error location
604c01d567cb9ee7d19dc598272cb90ab6229a8a nvme-pci: trace SQ status on completions
7bb25a89aad2cc96de188c9ecc89a175360f6fb4 scsi: hisi_sas: Set protection parameters prior to adding SCSI host
4ad78b8651aacf26b3ab6d1e784952eb70469c43 s390/setup: set control program code via diag 318
cf94db21905333e610e479688add629397a4b384 virtio: Honour 'may_reduce_num' in vring_create_virtqueue
f5a4c76ad7de96d47baef3d8810a88b10d60ec82 tools/power turbostat: consolidate duplicate model numbers
937807d355a375393557674e3233662a7131c46b tools/power turbostat: Add Icelake support
ec882da5cda911e799b8a5ede94d099fdc0c656b selinux: implement the kernfs_init_security hook
c72c4cde8095aa0e4336cb337dac25d6e347240d selinux: Make selinux_kernfs_init_security static
1537ad15c9c59ce852748578eb5633139053e86b kernfs: fix xattr name handling in LSM helpers
3dbcea54b3ff706c58f8e8d4470f5e5d3d24a6a0 arm64: apply workaround on A64FX v1r0
1e8b15a1988ed3c7429402017d589422628cdf47 drm/i915/gvt: Add in context mmio 0x20D8 to gen9 mmio list
4c9e7e649a3f291e1b939299458e6844c16afe70 arm64: kexec_file: invoke the kernel without purgatory
f6827526279d75f0b1c1605b1bf560024bd7696f selftests: bpf: modify urandom_read and link it non-statically
c10c21efa4bccab486c2e6a047c13dfa6cf7426c powerpc/vfio/iommu/kvm: Do not pin device memory
46a1449d9e39478a35d35d9d9025776f6cee24fb powerpc/powernv: Move npu struct from pnv_phb to pci_controller
0e759bd75285e96fbb4013d1303b08fdb8ba58e1 powerpc/powernv/npu: Move OPAL calls away from context manipulation
c4e9d3c1e65aac3f65995e9cb1cede7330c594dc powerpc/powernv/pseries: Rework device adding to IOMMU groups
5eada8a3f087df74af1c2797770a3e2249374fe1 powerpc/iommu_api: Move IOMMU groups setup to a single place
83fb8ccf975138283c7f6d3685d9c5e2292381dd powerpc/powernv/npu: Convert NPU IOMMU helpers to iommu_table_group_ops
0bd971676e68f14427406f4dbbdeb9586e4f24b3 powerpc/powernv/npu: Add compound IOMMU groups
1b785611e1191751e1fb44ac3e89a0bd68ec7971 powerpc/powernv/npu: Add release_ownership hook
135ef954051b102870a8d47a8eb822af1f1b1ec1 powerpc/powernv/npu: Check mmio_atsd array bounds when populating
d1fc1176c055c9ec9c6ec4d113a284e0bad9d09a vfio/pci: set TRACE_INCLUDE_PATH to fix the build error
33e5ee780e37bcf494013e2497580b00b7676507 vfio/pci: Cleanup license mess
9a71ac7e15a723e90fc40388b4b92eefaabf747c vfio-pci/nvlink2: Fix ancient gcc warnings
01d5d7fa8376c6b5acda86e16fcad22de6bba486 PCI: Add macro for Switchtec quirk declarations
742bbe1ee35b5699c092541f97c7cec326556bb1 PCI: Fix Switchtec DMA aliasing quirk dmesg noise
7e8eda734d30de81d06a949c9bf9853c445ede4e ntp: Audit NTP parameters adjustment
f1b70d16389de2a6eac838ca378a8334d771bcfe crypto: mxc-scc - Remove broken driver
d7198ce46d10712b6fdd66e35237d7d0d51afcd6 crypto: des_generic - Forbid 2-key in 3DES and add helpers
55902d8514483bd2c94f375b5259224520a1fd6b crypto: s390 - Forbid 2-key 3DES in FIPS mode
eee25da50baaa32790dbe82d60754936ceb82042 crypto: sparc - Forbid 2-key 3DES in FIPS mode
a66082441369339033841ba554ef41150bb900e2 crypto: bcm - Forbid 2-key 3DES in FIPS mode
1b52c40919e60cbc65af6b15ed5cdda0b3775f54 crypto: caam - Forbid 2-key 3DES in FIPS mode
76a329cdcb1f3f000b58c67829b00e17b6a9fa27 crypto: ccp - Forbid 2-key 3DES in FIPS mode
dba434a9c18945a5d8c545908f580e0063c8aca6 crypto: ixp4xx - Forbid 2-key 3DES in FIPS mode
1ad2267cb6202002f318103e12233fea7a60671a crypto: rockchip - Forbid 2-key 3DES in FIPS mode
ef7c5c854859d25157aae950d8112c04eb9cc96d crypto: talitos - Forbid 2-key 3DES in FIPS mode
3c2bc636219fc0c2ea82c8f0d3fb0c9936cf5146 crypto: ux500 - Forbid 2-key 3DES in FIPS mode
2e8e19226398db8265a8e675fcc0118b9e80c9e8 sched/fair: Limit sched_cfs_period_timer() loop to avoid hard lockup
ee13cb249fabdff8b90aaff61add347749280087 powerpc/64s: Add support for software count cache flush
92edf8df0ff2ae86cc632eeca0e651fd8431d40d powerpc/security: Fix spectre_v2 reporting
284ce4011ba60d6c487b668eea729b6294930806 x86/memory_failure: Introduce {set, clear}_mce_nospec()
a97673a1c43d005a3ae215f4ca8b4bbb5691aea1 x86: Fix various typos in comments
04f5866e41fb70690e28397487d8bd8eea7d712a coredump: fix race condition between mmget_not_zero()/get_task_mm() and core dumping
c27f6aa8c9df7f3270d5f5f2957a2a024262eb99 RDMA/uverbs: Factor out the add/get pattern into a helper
6829c1c2b371674a05562a39d608b5cf48351bea RDMA/uverbs: Add helpers to mark uapi functions as unsupported
0bd01f3d090788188d3766bac044292de2789d03 RDMA/uverbs: Require all objects to have a driver destroy function
6884c6c4bd09fb35b79a3967d15821cdfcbe77a3 RDMA/verbs: Store the write/write_ex uapi entry points in the uverbs_api
d120c3c91871650699ac8e71795925cc98358c3d RDMA/uverbs: Convert the write interface to use uverbs_api
1de751caf7d52debd9820dbcd0190c6306f3f7b0 RDMA/uverbs: Make all the method functions in uverbs_cmd static
a140692a52d2e12ba6a76dd042d556348e8bb55a RDMA/uverbs: Check for NULL driver methods for every write call
8313c10fa8be032fccc1e757bccc21207f533127 RDMA/uverbs: Replace ib_uverbs_file with uverbs_attr_bundle for write
7106a9769715bb4c0448927a29aa3b505855871c RDMA/uverbs: Make write() handlers return 0 on success
15a1b4becba886176aa1426604548c34904fd054 RDMA/uverbs: Do not pass ib_uverbs_file to ioctl methods
669dac1e00c50a65cb8ecf08862c3c9dd7a29a98 RDMA/uverbs: Add structure size info to write commands
da0f60df7bd5a045aa423ec64fe5d7e29ba803ff RDMA/uverbs: Prohibit write() calls with too small buffers
ef87df2c7a8f04d31cbf06f0b14b8dd5feafe473 RDMA/uverbs: Use uverbs_attr_bundle to pass udata for write_ex
3a6532c9af1a7836da2d597f1aaca73cb16c3b97 RDMA/uverbs: Use uverbs_attr_bundle to pass udata for write
07f05f40d956d40f32852a7b3ff109a72d254cf9 RDMA/uverbs: Use uverbs_attr_bundle to pass udata for ioctl()
90849f4d059ca8764f9c4273996d4fab3c1603b3 RDMA/uverbs: fix ptr_ret.cocci warnings
bbb28ad9035f8efa9c5581b3809ff8055cc1f4b2 RDMA/uverbs: Remove out_len checks that are now done by the core
c2a939fda468bb5c4144a64fd2b9cbdad323bf68 RDMA/uverbs: Use uverbs_attr_bundle to pass ucore for write/write_ex
931373a118acce816561f04dc9832b85172e65b8 RDMA/uverbs: Get rid of the 'callback' scheme in the compat path
9a0738575f2691d3a417fb5f83b6dcdaf0dcc36e RDMA/uverbs: Use uverbs_response() for remaining response copying
3c2c20947ddbb897a1459f149509ac03e35043e1 RDMA/uverbs: Use uverbs_request() for request copying
29a29d18523235e749916a0154435f26f3238639 RDMA/uverbs: Use uverbs_request() and core for write_ex handlers
40efca7a46a04223e6792fbe23ba337f54cff794 RDMA/uverbs: Fill in the response for IB_USER_VERBS_EX_CMD_MODIFY_QP
7eebced1bae034e11a86c454383b24715eb087b6 RDMA/uverbs: Simplify ib_uverbs_ex_query_device
335708c751c1462b674892212e965fdde4c9b0d9 RDMA/uverbs: Add a simple iterator interface for reading the command
c3bea3d2dc5358e05541527283279102383b0231 RDMA/uverbs: Use the iterator for ib_uverbs_unmarshall_recv()
ece9ca97ccdc845c0c48e204e5a6d9149b7a24b3 RDMA/uverbs: Do not check the input length on create_cq/qp paths
974d6b4b2bc33c53334e086a40715b384f48f2e2 RDMA/uverbs: Use only attrs for the write() handler signature
12d23a91983348bafcf646d5520de320a6a6f8e3 RDMA/uverbs: Annotate alloc/deallloc paths with context tracking
4d7e8cc57429e1874658acbff98d3877c81cd0a4 IB/core: Introduce UVERBS_IDR_ANY_OBJECT
04ca16cc198c2bd2fc51749123c118a284d1605e IB/core: Enable getting an object type from a given uobject
9435ef4caeea0a1141e461f9ee6f91b173867c05 RDMA/uverbs: Optimize clearing of extra bytes in response
9615f86be981a41a830ae088856da3e5ac362ab6 RDMA/bnxt_re: Initialize ib_device_ops struct
071b2ca40ae31bf1ce0c4a6edb5fc52988dafa54 RDMA/cxgb3: Initialize ib_device_ops struct
dad3b05d050a8ce5825b2bd7c680fc127b3c2c69 RDMA/cxgb4: Initialize ib_device_ops struct
7f645a58d00155b93800fdd4e157c8f58fb3122f RDMA/hns: Initialize ib_device_ops struct
15644f57cb6659349bc1ca7419fa89a28fbcfe61 RDMA/i40iw: Initialize ib_device_ops struct
4725c4ba8d1c81c0b44a7a4f9b7f21bb0331e705 RDMA/mlx4: Initialize ib_device_ops struct
96458233ee73b6082f75c1a55c9a4ad6ea7913d5 RDMA/mlx5: Initialize ib_device_ops struct
5a6c6e71acb069f0d7707fbc9b29a93cbe241d46 RDMA/nes: Initialize ib_device_ops struct
a263c1241a18975756fcdbb6ccdb6460c89b04a5 RDMA/ocrdma: Initialize ib_device_ops struct
bd59461e57b4163dbba8aaa131a6c2a61e1bdaab RDMA/qedr: Initialize ib_device_ops struct
20a6b5886102bac96e7dc5f1c6ffb6543ad4b479 RDMA/vmw_pvrdma: Initialize ib_device_ops struct
3023a1e93656c02b8d6a3a46e712b815843fa514 RDMA: Start use ib_device_ops
4785860e04bc8d7e244b25257168e1cf8a5529ab RDMA/uverbs: Implement an ioctl that can call write and write_ex handlers
be5914c124bc3179536e5c4598f59aeb4b880517 RDMA/core: Delete RoCE GID in hw when corresponding IP is deleted
149d3845f4a548dbc83932fab3491aeb0b070b3a RDMA/uverbs: Add a method to introspect handles in a context
bbc13cda37711eb7baa4091017887a57074f5410 RDMA/uverbs: Add an ioctl method to destroy an object
ad8a4496757f6f7344011a20a07195bd27e3989c IB/uverbs: Add support to advise_mr
af8d70375d562034d375ca7a8b08997422223258 RDMA/restrack: Resource-tracker should not use uobject pointers
b090c4e3a07c33ffdf95fb7601551b38fc2a4bbb RDMA: Mark if create address handle is in a sleepable context
2553ba217eea37dc6291635ecddb883fb5c36a8b RDMA: Mark if destroy address handle is in a sleepable context
2e8039c656224b4a21e1947f45946d32a59bae53 IB/core: uverbs copy to struct or zero helper
641d1207d2ed0ef21ff5ad61e067d630028e2f62 IB/core: Move query port to ioctl
d53ec8af56d5163f8a42e961ece3aeb5c560e79d RDMA/iwcm: Don't copy past the end of dev_name() string
573671a5f6509c4139770452d4516720a84d5b61 IB/uverbs: Signedness bug in UVERBS_HANDLER()
2f1927b090345d7e65e6e873baba1599b18a0e26 IB/core: Add advise_mr to the list of known ops
f687ccea10d23a9b0faed67ceac535b76604669a RDMA/uverbs: Fix post send success return value in case of error
917cb8a72a94d198073ad1e087685f801292042d RDMA/cma: Add cm_id restrack resource based on kernel or user cm_id type
d6f4a21f309dfe10a5693ad236358dd6fcc46f7a RDMA/uverbs: Mark ioctl responses with UVERBS_ATTR_F_VALID_OUTPUT
a2093dd35f8cfb28dd7c878ccbd020c1bb20d0d7 RDMA/umem: Add missing initialization of owning_mm
425784aa5b029eeb80498c73a68f62c3ad1d3b3f IB/uverbs: Fix OOPs upon device disassociation
f8ade8e2429758efa1eddf0a6e2cc936714afc8d IB/uverbs: Fix ioctl query port to consider device disassociation
7b21b69ab203136fdc153c7707fa6c409e523c2e IB/uverbs: Fix OOPs in uverbs_user_mmap_disassociate
0c0829bcf51aef713806e49b8ea2bac7962f54e2 xprtrdma: Don't wake pending tasks until disconnect is done
7fef92ccadd744492526d7749eebfe24dd8dcc48 s390/kasan: double the stack size
9e8df6daed9e59153624e52aa4832ddaf39f1ae8 s390/smp: kasan stack instrumentation support
ac1256f82619724357242eb514f162c40d5b64d8 s390/kasan: reipl and kexec support
19733fe8721b8d91b799c91082ebb9c139ca6710 s390/head: avoid doubling early boot stack size under KASAN
9fed920e6817218ad786c3f28e14b4c877cc2aed s390/kasan: increase instrumented stack size to 64k
163c8d54a997153ee1a1e07fcac087492ad85b37 compiler: remove __no_sanitize_address_or_inline again
00ae831dfe4474ef6029558f5eb3ef0332d80043 x86/cpu: Add Atom Tremont (Jacobsville)
df7f8e00a50f4d35b660ea2a2bc734decc1343e6 powercap: intel_rapl: add support for Jacobsville
6fc0de37f663278af160e8e1f0c38b27e6c06206 x86/intel_rdt: Limit C-states dynamically when pseudo-locking active
ce730f1cc1255be152c879a2bc5f295d341d8036 x86/intel_rdt: Move pseudo_lock_region_clear()
2989360d9c6669d8ae64edc933088e640481b48b x86/intel_rdt: Fix possible circular lock dependency
0a701c9dd5351cbaef1677a0c8d37950e158cd55 x86/intel_rdt: Create required perf event attributes
dd45407c0b2445bc2aa0ecfea744d5af3a146577 x86/intel_rdt: Use perf infrastructure for measurements
fa7d949337ccad32c76740c88e0e0351c349053b x86/resctrl: Rename and move rdt files to a separate directory
6fe07ce35e8ad870ba1cf82e0481e0fc0f526eff x86/resctrl: Rename the config option INTEL_RDT to RESCTRL
723f1a0dd8e26a7523ba068204bee11c95ded38d x86/resctrl: Fixup the user-visible strings
7cb3026411cf2b64797eb6b1caacfba6ca4258d9 PCI: Remove unnecessary space before function pointer arguments
6e846239e5487cbb89ac8192d5f11437d010130e EDAC/amd64: Add Family 17h Model 30h PCI IDs
7ea817f4e8322fa27fb860d15025bf72f68b179f tipc: check session number before accepting link protocol messages
26574db0c17fb29fac8b57f94ed1dfd46cc89887 tipc: add trace_events for tipc link
01e661ebfbad40e6280fb8ec25f2861d39ba4387 tipc: add trace_events for tipc socket
eb18a510b5cd4daeb9736ad8db57a9fc49db185b tipc: add trace_events for tipc node
cf5f55f7f01397015dfa390256f2c20ceaabfcfb tipc: add trace_events for tipc bearer
c53e0c787e672b4edbf719b7c1ec5833db3af2da tipc: mark expected switch fall-throughs
91986ee166cf0816ae92668476ea7872d51b0c6e tipc: fix link session and re-establish issues
5cbf777cfdf6e5a7b7149006e4881a255da78fdd route: add support for directed broadcast forwarding
c2b200e0bac0a0667f2de18e0806fcf71b745080 vxlan: Move up vxlan_fdb_free(), vxlan_fdb_destroy()
a76d1ca296a7eefba5d186014fc4cd14ee98c28b vxlan: Split vxlan_fdb_update() in two
ccdfd4f71d10937504cac8663cb1782063319e39 vxlan: Have vxlan_fdb_replace() save original rdst value
61f46fe8c646c1cc7810ee0963d7870b6d901a96 vxlan: Allow vetoing of FDB notifications
038a5a99e95214d0549401c74711152d9869ead3 vxlan: changelink: Postpone vxlan_config_apply()
1cdc98c2711e42d956c4a5ce525d3f8e90c58f9e vxlan: changelink: Delete remote after update
4c59b7d16096e5e2cfbc7f8cba972eb72f6b96c0 vxlan: Add extack to switchdev operations
6685987c29582afc79b7fa3998dfbf36b4295791 switchdev: Add extack argument to call_switchdev_notifiers()
fc4aa1ca1628d31d1e2770b96a3bd8e25eef118d net: vxlan: Free a leaked vetoed multicast rdst
9641b8cc733f70a5400aa7e6831de4542c46a94c s390/ipl: read IPL report at early boot
61f3f8fc223524692aaa87cf46d95ca3015e83a9 s390/purgatory: Reduce purgatory size
4c0f032d496385fa8071e404a1bc33f4abbc2f81 s390/purgatory: Omit use of bin2c
e23a8020ce4e094e10d717d39a8ce799243bf8c1 s390/kexec_file: Signature verification prototype
99feaa717e558cf4f2ad0faf53acac3cf9cc7438 s390/kexec_file: Create ipl report and pass to next kernel
c9896acc7851109d4e84c1e3a54cb1b9794dea6b s390/ipl: Provide has_secure sysfs attribute
c4a6bf7f6cc7eb4cce120fb7eb1e1fb8b2d65e09 xfs: don't ever put nlink > 0 inodes on the unlinked list
4d3c5c69191f98c7f7e699ff08d2fd96d7070ddb Drivers: hv: vmbus: Remove the useless API vmbus_get_outgoing_channel()
445640a563493f28d15f47e151e671281101e7dc tools/power turbostat: fix goldmont C-state limit decoding
50717a37db032ce783f50685a73bb2ac68471a5a net/smc: nonblocking connect rework
4907c68abd3f60f650f98d5a69d4ec77c0bde44f x86/tsc: Force inlining of cyc2ns bits
6b03061f882de49b83ccf44beb3a12c920a2da1b spi: add support for octal mode I/O data transfer
c7e2d94b3d1634988a95ac4d77a72dc7487ece06 blk-mq: free hw queue's resource in hctx's release handler
2f8f1336a48bd5186de3476da0a3e2ec06d0533a blk-mq: always free hctx after request queue is freed
1b97871b501f1bac0fd39a073c4c8473ee457a55 blk-mq: move cancel of hctx->run_work into blk_mq_hw_sysfs_release
913a89f009d98c85a902d718cd54bb32ab11d167 ipmi: Don't initialize anything in the core until something uses it
efaffc5e40aeced0bcb497ed7a0a5b8c14abfcdf mm, sched/numa: Remove rate-limiting of automatic NUMA balancing migration
e054637597ba36d3729ba6a3a3dd7aad8e2a3003 mm, sched/numa: Remove remaining traces of NUMA rate-limiting
72deb455b5ec619ff043c30bc90025aa3de3cdda block: remove CONFIG_LBDAF
07a85fe14254e01bcf37f4d2e0a13f093378620b cross-tree: phase out dma_zalloc_coherent() on headers
63f545ed1285a5f904c260ff22c958609c3c11c5 ice: Add support for adaptive interrupt moderation
67fe64d78c437d3f5a280a074e8467fa9b16216d ice: Implement getting and setting ethtool coalesce
a8939784a17a54566e8d8ab26e9a9c36e4598281 ice: Allow for software timestamping
0e04e8e14b558c84a7c7a64d3e94655f5071eef5 ice: fix issue where host reboots on unload when iommu=on
70457520bab82bd758307837964ef7bbd5dd9dc8 ice: configure GLINT_ITR to always have an ITR gran of 2
c8b7abdd7d8e4696d5ffa25cebaa82931e0e39b3 ice: fix some function prototype and signature style issues
5eda8afd6bcc89d4e4aa5d56b5f54276f63158ae ice: Add support for PF/VF promiscuous mode
d84b899a946ea590355ab5f9ce13f56767ec312d ice: Don't let VF know that it is untrusted
f1ef73f50b3ef097569b9bccb66a7b09955ce049 ice: Get VF VSI instances directly via PF
6c869cb7a8f02b0c5f5494bb37c29b6686711ec8 ice: Retrieve rx_buf in separate function
bbb97808a0eff71fd841d297dba8cd3ebc4d700d ice: Pull out page reuse checks onto separate function
1857ca42a734d41261f4c30e5f625fa7e2b70b0d ice: Get rid of ice_pull_tail
03c66a1376616015b04b6783feadfcf02ba37c3f ice: Introduce bulk update for page count
1d032bc77bb8f85d8adfd14a1a8c67c12b07eece ice: Gather the rx buf clean-up logic for better reuse
712edbbb67d404bae055d88e162e13980b426663 ice: Limit the ice_add_rx_frag to frag addition
a65f71fed5add2ec5713fcc605842f5f2dff22a3 ice: map Rx buffer pages with DMA attributes
cf6c6e01bf5debe1d144bab6c8c903b926fa8882 ice: use virt channel status codes
64a59d05a4b3ddb37eb5ad3a3be0f17148f449f5 ice: Fix for adaptive interrupt moderation
4e1af7bf22ca913502fb04c06477b9265b54684f ice: Fix issue with VF attempt to delete default MAC address
8244dd2d23b251dcba3238e42216e9277beb5729 ice: Audit hotpath structures with pahole
92414f329262c9240223b8279aa9f544a754d78f ice: Update comment regarding the ITR_GRAN_S
f9867df6d96593fe678a138230379cda78403429 ice: Fix incorrect use of abbreviations
7b9ffc76bf5998aad8feaa26d9d3fcb65ec7a21b ice: Add code for DCB initialization part 3/4
0deab659a615a480a68ae17ad36a0f3c37c62e01 ice: Add code for DCB initialization part 4/4
00cc3f1b3a3011b5fee9711244ffcec418b519f0 ice: Add code to process LLDP MIB change events
a629cf0a018b8d80b65bfd2b7f0d209a52834315 ice: Update rings based on TC information
5f6aa50e4ece6b9464130d819a2caa75c783c603 ice: Add priority information into VLAN header
4b0fdceb81ba60a8caea1993f0951a91de7a6f52 ice: Add code to get DCB related statistics
b832c2f63108a6c38b25c4bbc1d2aef582260970 ice: Add code for DCB rebuild
711987bbad18e6d5fc5d8ff07c8991700e2ed1b6 ice: Calculate ITR increment based on direct calculation
bb87ee0efb7396d79ba5f37ff8e8721d01c87d4a ice: Create framework for VSI queue context
a92e1bb6ade7526f0c2b7b462516b1941e965504 ice: Validate ring existence and its q_vector per VSI
b9c8bb06b53d28c83c47988f645b6cf4543c2685 ice: Add ability to update rx-usecs-high
5079b853b221005ac06192265c917ea79c11c0e2 ice: Fix issue when adding more than allowed VLANs
b07833a00d70fb731bb3aba8876a56e37b549f3e ice: Add reg_idx variable in ice_q_vector structure
c2a23e00613bde4a6d5f88c2b4facd5c7be6be87 ice: Refactor link event flow
bb877b22bcb5334fc4e1752fe77e96ab762c3738 ice: Don't remove VLAN filters that were never programmed
ba0db585bdb696d28bd6ec3ae9908d45c0bdeb37 ice: Add more validation in ice_vc_cfg_irq_map_msg
e40c899a64ca6222ea45a045b2d7a09491274163 ice: Refactor getting/setting coalesce
64439f8f0bc4e9da1c6cb31c2ee642e3139f5731 ice: Disable sniffing VF traffic on PF
52d3b4949192e93b948daaa40678fcd4b94bcbd0 hv_netvsc: fix typos in code comments
b81a327dbc0d07c219ac48b7daf155ea6a51672b RDMA/i40iw: Make sure to initialize ib_device_ops
f37385919045ad611bcf40bbb899591ec8aac86c IB/core: Declare local functions 'static'
535005ca8e5e71918d64074032f4b9d4fef8981e IB/core: Destroy QP if XRC QP fails
c66f67414c1f88554485bb2a0abf8b5c0d741de7 IB/core: Don't register each MAD agent for LSM notifier
d0e02bf6cd6da339a31f7ef6a10aba9ad362a4d9 RDMA/core: Verify that memory window type is legal
4438ee3f130c9deeebaf39bb9108d02c0b57cc7f IB/core: Abort page fault handler silently during owning process exit
9a7786784dcbec2f6ad52fd98a8d076f808e59f2 RDMA/uverbs: Fix an error flow in ib_uverbs_poll_cq
b34b269ad85d7dd4a512487f2395c3be3e40f76a RDMA/device: Ensure that security memory is always freed
d45f89d59bcd42d6b8575d0af69d7a3a98e73bb6 RDMA/device: Call ib_cache_release_one() only from ib_device_release()
1882ab867863531ab9caab81fd6ac5fee6d1a314 RDMA/iwcm: Fix string truncation error
09ce351dff8e7636af0beb72cd4a86c3904a0500 IB/hfi1: Add limit test for RC/UC send via loopback
38bbc9f0381550d1d227fc57afa08436e36b32fc IB/rdmavt: Fix loopback send with invalidate ordering
d757c60eca9b22f4d108929a24401e0fdecda0b1 IB/rdmavt: Fix concurrency panics in QP post_send and modify to error
da6a496a34f2fdcab14362cdc5068aac385e7b47 IB/mlx5: Ranges in implicit ODP MR inherit its write access
67f269b37f9b4d52c5e7f97acea26c0852e9b8a1 RDMA/ucontext: Fix regression with disassociate
6a5c5d26c4c6c3cc486fef0bf04ff9551132611b rdma: fix build errors on s390 and MIPS due to bad ZERO_PAGE use
cfc30ad3d098b63ac08d2d2d61ef9aeff659c57a IB/usnic: Remove stub functions
67810e8c3c01ed80b5118391a8939ff24f08acd3 RDMA/qib: Remove all occurrences of BUG_ON()
87fc34b575fdb90994c6063541d79cd18b31b14d IB/{hfi1,qib}: Cleanup open coded sge sizing
db421a54996c602503204345171c662e65f20527 IB/{hfi1, qib, rvt} Cleanup open coded sge usage
ddf922c31fedd19c5b89a269c35e5c8b68c64327 IB/hfi1, IB/rdmavt: Allow for extending of QP's s_ack_queue
48a615dc00aed68d58244b835b10eb3244aae31d IB/hfi1: Integrate OPFN into RC transactions
385156c5f2a61834666f079ee66338f177c65c28 IB/hfi: Move RC functions into a header file
37356e78328186814e994e0ad1a1cfd6a142bef4 IB/hfi1: TID RDMA flow allocation
838b6fd2d9ca29998869e4d1ecf4566efe807666 IB/hfi1: TID RDMA RcvArray programming and TID allocation
2f16a696a05d34ba8c920b2133a51f18107fdb8b IB/hfi1: Add the counter n_tidwait
84f4a40d46d83003bc762df0d3dd051087cc30ea IB/hfi1: Add static trace for flow and TID management functions
742a3826cf82395e304df99f6494d04b0dd03a84 IB/hfi1: Add functions to build TID RDMA READ request
d0d564a1caacc7f3f28f3e351ed89ed000e2de75 IB/hfi1: Add functions to receive TID RDMA READ request
1db21b50502856c1da5628e3644bd29710e928f0 IB/hfi1: Add a function to build TID RDMA READ response
9905bf06e890c2a845ac8fd19d7e6b8987ef8df6 IB/hfi1: Add functions to receive TID RDMA READ response
b126078e8957f3aea4a44b8916f2f3752b5c392d IB/hfi1: Add functions for restarting TID RDMA READ request
24b11923da4c7dbf5690d3ac74710affaf564196 IB/hfi1: Integrate TID RDMA READ protocol into RC protocol
a0b34f75ec209e40f06912380533ec525691544f IB/hfi1: Add interlock between a TID RDMA request and other requests
f1ab4efa6d32e98f9e604c9dde57cfe7b89a6c07 IB/hfi1: Enable TID RDMA READ protocol
3ce5daa2c1798a530db9a01cd35122e0958538ad IB/hfi1: Add static trace for TID RDMA READ protocol
c098bbb00cd1986cbb58ed1712643f80ed00fcc3 IB/hfi1: Build TID RDMA WRITE request
f5a4a95f4dd8a09d28936c2e1e357e4c8dcca6c1 IB/hfi1: Allow for extra entries in QP's s_ack_queue
4f9264d156dc6c154a8a6cfae780730bad45c6f8 IB/hfi1: Add an s_acked_ack_queue pointer
07b923701e38f93b4725e64318e6483f890c1c1d IB/hfi1: Add functions to receive TID RDMA WRITE request
38d46d3676ed6ecba284eb49e4b675ca9891801a IB/hfi1: Add a function to build TID RDMA WRITE response
3c759e003a6a4d4b8fd0472f9501e8c45d775c26 IB/hfi1: Add TID resource timer
72a0ea99ec13bcb27784c1a48f4e8fda61586c26 IB/hfi1: Add a function to receive TID RDMA WRITE response
539e1908e45b5cdcc72bded272f8adb52ad2c913 IB/hfi1: Add a function to build TID RDMA WRITE DATA packet
d72fe7d5008b5600a11f03a0dcb743fd7acb0085 IB/hfi1: Add a function to receive TID RDMA WRITE DATA packet
0f75e325aa11552599a18d7558970be16fc15c1a IB/hfi1: Add a function to build TID RDMA ACK packet
9e93e967f7b452e6c9e4a33d0b42ff64fa7293c4 IB/hfi1: Add a function to receive TID RDMA ACK packet
829eaee5d09a7500bdce9ed0bc6ec6861f8ae45b IB/hfi1: Add TID RDMA retry timer
6e391c6a4a8f97d34fa859c906387c05e91adbe9 IB/hfi1: Add a function to build TID RDMA RESYNC packet
7cf0ad679de46c61739238c3f4542f14cc7bbc69 IB/hfi1: Add a function to receive TID RDMA RESYNC packet
6e38fca6b1524e9a9aa0d2a10d99975eef1791c1 IB/hfi1: Resend the TID RDMA WRITE DATA packets
70dcb2e3dc6aa827d74e09c830ea06c660274880 IB/hfi1: Add the TID second leg send packet builder
24c5bfeaf1e66efbc15cd9a6f5565c38d8cdb630 IB/hfi1: Add the TID second leg ACK packet builder
572f0c3301138961a596c522729afb5801135d6e IB/hfi1: Add the dual leg code
3c6cb20a0d17d7a75778fb0935d6fa427c8177af IB/hfi1: Add TID RDMA WRITE functionality into RDMA verbs
c6c231175ccdf188d443c27e5456b9e2f65e44d4 IB/hfi1: Add interlock between TID RDMA WRITE and other requests
ad00889e7ca226a2bed2b210f17c93b7be1b1542 IB/hfi1: Enable TID RDMA WRITE protocol
a05c9bdcfd16cec3a004cca339ab45de4cdf4799 IB/hfi1: Add static trace for TID RDMA WRITE protocol
34025fb0c4c9d6b2e294f8f8f0a82491a13c83a2 IB/hfi1: Prioritize the sending of ACK packets
e50838c27ff7e1438ea2f9ab4bfcb227f90a107f IB/hfi1: Fix a build warning for TID RDMA READ
7264235ee74f51d26fbdf97bf98c6102a460484f IB/hfi1: Add missing break in switch statement
662d66466637862ef955f7f6e78a286d8cf0ebef IB/hfi1: Failed to drain send queue when QP is put into error state
93b289b9aff66eca7575b09f36f5abbeca8e6167 IB/hfi1: Clear the IOWAIT pending bits when QP is put into error state
d737b25b1ae0540ba13cbd45ebb9b58a1d6d7f0d IB/hfi1: Do not flush send queue in the TID RDMA second leg
f6f3f532556e4fcaa2d259fd04a800bfb4f9670d IB/hfi1: Delay the release of destination mr for TID RDMA WRITE DATA
6a40693a884dacae68c1771d369ad3be0594ba1c IB/hfi1: Add a function to read next expected psn from hardware flow
b885d5be9ca10dff6110a8738c45eb4b3fb5a40a IB/hfi1: Unify the software PSN check for TID RDMA READ/WRITE
747b931fbe2362366dee30617f816501f3126882 IB/hfi1: Implement CCA for TID RDMA protocol
b353ce556d521351eb7daf609e446f3595a6fad6 RDMA/bnxt_re: Add 64bit doorbells for 57500 series
374c5285abee0aa1b9e04c6beb86e13b6813db09 RDMA/bnxt_re: Enable GSI QP support for 57500 series
532ae2f10e6eab2ec66ecad805d57d3d70cea020 sctp: do reuseport_select_sock in __sctp_rcv_lookup_endpoint
76c6d988aeb3c15d57ea0c245a3b5f27802c1fbe sctp: add sock_reuseport for the sock in __sctp_hash_endpoint
af98c5a78517c04adb5fd68bb64b1ad6fe3d473f sctp: set stream ext to NULL after freeing it in sctp_stream_outq_migrate
e3ab786b42535da00c731c3585165e88bf35ab09 flow_offload: add flow action infrastructure
3a7b68617de749d930b5503c3c5f30a17524f0bd cls_api: add translator to flow_action representation
3b1903ef97c080a80ead3a6a2305f55108e08269 flow_offload: add statistics retrieval infrastructure and use it
8bec2833fb28d7c8fcc25127190abbe3eb0ca260 flow_offload: add wake-up-on-lan and queue to flow_action
6663cf821c133b36dee65fb9eb2d976abc706512 flow_offload: Fix flow action infrastructure
1f15bb4f399ceccd85522b24af31198f53516f9b net: sched: flower: only return error from hw offload if skip_sw
9f9dc493f724b311c84d88b8e77dad14abd06bcc flow_offload: fix block stats
875e8939953483d856de226b72d14c6a000f9457 skbuff: Rename 'offload_mr_fwd_mark' to 'offload_l3_fwd_mark'
c23f35d19db3b36ffb9e04b08f1d91565d15f84f net: IP defrag: encapsulate rbtree defrag code into callable functions
d4289fcc9b16b89619ee1c54f829e05e56de8b9a net: IP6 defrag: use rbtrees for IPv6 defrag
997dd96471641e147cb2c33ad54284000d0f5e35 net: IP6 defrag: use rbtrees in nf_conntrack_reasm.c
02c7f38b7ace9f1b2ddb7a88139127eef4cf8706 selftests/net: add ip_defrag selftest
bccc17118bcf3c62c947361d51760334f6602f43 selftests/net: add ipv6 tests to ip_defrag selftest
6f8474922b443fd4a89a5dd5b891a3c6a144b9c7 selftests: net: Clean up an unused variable
9dffa76c21268f6188b04b966089b5110a7447ef selftests: use posix-style redirection in ip_defrag.sh
3271a4821882a64214acc1bd7b173900ec70c9bf selftests: net: fix/improve ip_defrag selftest
4c3510483d26420d2c2c7cc075ad872286cc5932 selftests: net: ip_defrag: cover new IPv6 defrag behavior
58056c1e1b0e4951f3486bd552d8278194f8b84b net: ethernet: Use phy_set_max_speed() to limit advertised speed
04b7d41d8046ded18fa32d9c7cb524ba28947188 net: ethernet: Fix up drivers masking pause support
41124fa64d4b298b82266b7ddbefc43540b77b44 net: ethernet: Add helper to remove a supported link mode
af8d9bb2f2f405ad541794b46f9d7bc70f13e5cb net: ethernet: Add helper for MACs which support asym pause
c306ad36184fb7d0bd53f45441f45c1810e88a53 net: ethernet: Add helper for MACs which support pause
70814e819c1139e5e7faacb3700eab5eac559272 net: ethernet: Add helper for set_pauseparam for Asym Pause
0c122405d4c3ec638ba00865c872ec5a3ed1a6c0 net: ethernet: Add helper for set_pauseparam for Pause
22b7d29926b577ff4f480611380d03268545b787 net: ethernet: Add helper to determine if pause configuration is supported
65c5877f64623dcb603082e7b3533a25a2601f1b ravb: Disable Pause Advertisement
d0939c26c53a2b2cecfbe6953858a58abb0158c7 net: ethernet: xgbe: expand PHY_GBIT_FEAUTRES
92c9d5627a79b02299dd13e3e0ec695475726cf8 net: phy: phy_support_sym_pause: Clear Asym Pause
9e857a40dc4eba15a739b4194d7db873d82c28a0 net: phy: Add missing features to PHY drivers
c0ec3c2736774c69bf5c641aea7712132c0f0eba net: phy: Convert u32 phydev->lp_advertising to linkmode
cb6402fe26358a33e32fb71054b248c76dcfe491 net: phy: Add support for resolving 5G and 2.5G autoneg
30beabb3c32122d533ce0e2fc712f9d720a82f9f net: phy: marvell: remove set but not used variable 'pause'
935b8a59ac80bf3d3caae6460fb95d028f7c92c8 net: phy: remove unused code in phy_probe
5f15eed245bc6d7c82d44f0ebcaf62071a9d55bd net: mii: Fix autoneg in mii_lpa_to_linkmode_lpa_t()
78a24df370072ea3b7c0a466efd776fc8f87c73a net: mii: Rename mii_stat1000_to_linkmode_lpa_t
ab9cb729ab0d4151f7ba76dd3ff592242a694754 phy: marvell: Rename mii_lpa_to_linkmode_lpa_t
d3351931a37bdb329b5ea761424579fa91c866ee net: mii: Add mii_lpa_mod_linkmode_lpa_t
9db299c736eea35ea97dbc9d80a58befc067bcd8 net: phy: Fix ioctl handler when modifing MII_ADVERTISE
e7c4d8e6045171896d763c551b90c672fb5ab42b IB/mlx4: Remove set but not used variable 'pd'
f45f8edbe1d345273ba0d8d8a9872bb30966869b IB/mlx4: Fix using wrong function to destroy sqp AHs under SRIOV
015496c43f399675589132d3dd48a55d8c5fc5ba broadcom: Mark expected switch fall-throughs
456824896de2b68df40b3ea5777ef49dc6cc8fda x86/resctrl: Use rdt_last_cmd_puts() where possible
7390619ab9ea9fd0ba9f4c3e4749ee20262cba7d x86/resctrl: Move per RDT domain initialization to a separate function
47820e73f5b3a1fdb8ebd1219191edc96e0c85c1 x86/resctrl: Initialize a new resource group with default MBA values
6bca515917515b66b7e1dfc1d1d3b7bd8058315c powerpc/powernv/npu: Fix oops in pnv_try_setup_npu_table_group()
d7b6cc199b2dea602b4a2a681cf6d3223a61e2be powerpc/powernv/npu: Allocate enough memory in pnv_try_setup_npu_table_group()
8f5b27347e88b171c755562f0090ce40e514fc00 powerpc/powernv/sriov: Register IOMMU groups for VFs
3d0186bb068e6cc6c23dc1d2f0b1cf64894c40ea Update email address
3159f943aafdbacb2f94c38fdaadabf2bbde2a14 xarray: Replace exceptional entries
02c02bf12c5d838603eed44195d3e91f094e2ab2 xarray: Change definition of sibling entries
f8d5d0cc145cc21bfc56ef807dc28102aebbf228 xarray: Add definition of struct xarray
01959dfe771c6893365482ec78dc1d9cbbbe6de8 xarray: Define struct xa_node
ad3d6c7263e368abdc151e1cc13dc78aa39cc7a7 xarray: Add XArray load operation
9b89a0355144685a787b0dc5bcf7bdd6f2d02968 xarray: Add XArray marks
58d6ea3085f2e53714810a513c61629f6d2be0a6 xarray: Add XArray unconditional store operations
41aec91f55985e7f14ee75fe2f6e7bcfff0d0fae xarray: Add XArray conditional store operations
b803b42823d0d9e8b6deccf01ffc2aba5d0738df xarray: Add XArray iterators
80a0a1a9a3cde9b23851e8eb7160e2786549306a xarray: Extract entries from an XArray
687149fca1f37c447e5d161e0a4a04cb2c880cb6 xarray: Destroy an XArray
64d3e9a9e0cc51957d243dd2b0adc5d74ff5e128 xarray: Step through an XArray
4e99d4e9579d3b950bf4b38d0d64eb1b9be78761 xarray: Add xas_for_each_conflict
2264f5132fe45571139727ebdeb78696b35d1506 xarray: Add xas_create_range
9f14d4f1f1045f161fd4db8a8e194b7825c2874a xarray: Add xa_reserve and xa_release
371c752dc66948714ee3b66c3306f3ff1ff71d2e xarray: Track free entries in an XArray
f32f004cddf86d63a9c42994bbce9f4e2f07c9fa ida: Convert to XArray
372266ba0267803564824b1c09f1bb7f3f3fc761 radix tree test suite: Convert tag_tagged_items to XArray
47e0fab2b15155e33fdff777c791bebfd5855bbc radix tree test suite: Convert iteration test to XArray
d6427f8179b5dd65eb468c61fc8cc24657c336c9 xarray: Move multiorder account test in-kernel
93eb07f72c8d86f8fe5e90907df1cc037f6ffbb7 xarray: Move multiorder_shrink to kernel tests
4f06d6302da682157890f72c0573e12a73536814 xarray: Move multiorder_check to in-kernel tests
0e9446c35a80931044b6d8d2d74a9cabd248539f xarray: Add range store functionality
8229706e03e4147f3e22d1de0d30630cde6d18a9 XArray: Fix xa_for_each with a single element at 0
9ee5a3b7eeb190eb413e0fac3246022bd1baa05d XArray: Export __xa_foo to non-GPL modules
4c0608f4a0e76dfb82d3accd20081f4bf47ed143 XArray: Regularise xa_reserve
c5beb07e7a06b24f4f27304f6282b5dbd929543b XArray: Unify xa_cmpxchg and __xa_cmpxchg
9c16bb88905456a9b1299338041f05fa7699971b XArray: Turn xa_erase into an exported function
84e5acb76dacb8ebd648a86a53907ce0dd616534 XArray: Add xa_store_bh() and xa_store_irq()
611f318637daa5710a1d7a0e7dc6cda23914094a XArray: Unify xa_store and __xa_store
d9c480435add8257f9069941f0e6196647f6d746 XArray: Handle NULL pointers differently for allocation
804dfaf01bcc9daa4298c608ba9018abf616ec48 XArray: Fix Documentation
44a4a66b619a0a83a52e707ebcd80182207bd50e XArray: Correct xa_store_range
5404a7f1c21cfda061712bedf2d06cc0f6c755e9 XArray tests: Correct some 64-bit assumptions
fffc9a260e38acec3187515738122a3ecb24ac90 XArray tests: Add missing locking
55f3f7eab75c10d9b33d122670b5935ab64db50f XArray: Add xa_cmpxchg_irq and xa_cmpxchg_bh
b7677a132a4c2ff877986c5b30f9427127b9897a XArray tests: Handle larger indices more elegantly
4f145cd66a1a76136ff5a03a99e37ba082715dc6 XArray tests: Check iterating over multiorder entries
48483614de97c4f5219abeda630e62b2bebdce62 XArray: Fix xa_alloc when id exceeds max
490fd30f859572ac97a51faa31860869744ba97b XArray tests: Add RCU locking
02669b17a433c242a40f01f14b691c9c9d1f8a13 XArray: Turn xa_init_flags into a static inline
4a31896c5b5a2715ecf4033426aa0a35066d92d6 XArray: Change xa_for_each iterator
76b4e52995654af260f14558e0e07b5b039ae202 XArray: Permit storing 2-byte-aligned pointers
b0606fed6eece16a421034eca0bbea9a08b90e91 XArray: Honour reserved entries in xa_insert
19ba9ecf24189bd74d070aa1b1c4bcb9fe4ae849 XArray: Fix typo in comment
d69d287a9002b70bdbe2975660b97241ccefc071 XArray tests: Check mark 2 gets squashed
edcddd4c879af48ec922d680b2d56834c085683b XArray: Fix an arithmetic error in xa_is_err
bd54211b8e199ffb701ec98bf4f301e4a6f38a92 XArray tests: RCU lock prohibits GFP_KERNEL
809ab9371ca0a96b44d9866ad82849410759a45b XArray: Update xa_erase family descriptions
fd9dc93e36231fb6d520e0edd467058fad4fd12d XArray: Change xa_insert to return -EBUSY
3ccaf57a6a63ad171a951dcaddffc453b2414c7b XArray: Add support for 1s-based allocation
a3e4d3f97ec844de005a679585c04c5c03dfbdb6 XArray: Redesign xa_alloc API
2fa044e51a1f35d7b04cbde07ec513b0ba195e38 XArray: Add cyclic allocation
f818b82b80164014d7ee3df89bb110808778c796 XArray: Mark xa_insert and xa_reserve as must_check
b38f6c50270683abf35a388f82cafecce971a003 XArray: Fix xa_release in allocating arrays
962033d55d0761e0716a01a715c6659c8c8dfc41 XArray: Use xa_cmpxchg to implement xa_reserve
2fbe967b3eb7466f679307b38564b8271c093241 XArray: Fix xa_erase of 2-byte aligned entries
4a5c8d898948d1ac876522cdd62f07a78104bfe9 XArray: Fix xa_reserve for 2-byte aligned entries
314d53d297980676011e6fd83dac60db4a01dc70 arm64: Handle mismatched cache type
e48d53a91f6e90873e21a5ca5e8c0d7a9f8936a4 arm64: KVM: Add support for Stage-2 control of memory types and cacheability
256c0960b7b6453dc90a4e879da52ab76b4037f9 kvm/arm: use PSR_AA32 definitions
e499a9b6dc488aff7f284bee51936f510ab7ad15 x86/kvmclock: Move kvmclock vsyscall param and init to kvmclock
95a3d4454bb1cf5bfd666c27fdd2dc188e17c14d x86/kvmclock: Switch kvmclock data to a PER_CPU variable
be26b3a73413c2ebf14d5e76a66ad964e6458080 arm64: KVM: export the capability to set guest SError syndrome
688e0581dbe0fa851188dd4fef887ea0c55aab13 KVM: Documentation: rename the capability of KVM_CAP_ARM_SET_SERROR_ESR
b3f0907c71e006e12fde74ea9a745b6096b6f90f x86/mm: Add .bss..decrypted section to hold shared variables
6a1cac56f41f9ea94e440dfcc1cac44b41a1b194 x86/kvm: Use __bss_decrypted attribute in shared variables
95b861a4a6d94f64d5242605569218160ebacdbe arm64: arch_timer: Add workaround for ARM erratum 1188873
214ff83d4473a7757fa18a64dc7efe3b0e158486 KVM: x86: hyperv: implement PV IPI send hypercalls
09abb5e3e5e50eef72b09adaa798b7ef0ce9239b KVM: nVMX: call kvm_skip_emulated_instruction in nested_vmx_{fail,succeed}
f21dd494506ad002a5b6b32e50a5d4ccac6929fe KVM: x86: hyperv: optimize sparse VP set processing
14c07ad89f4d728a468caaea6a769c018c2b8dd6 x86/kvm/mmu: introduce guest_mmu
a336282d7753a92ced7b8e52ff959929f6e550ff x86/kvm/nVMX: introduce source data cache for kvm_init_shadow_ept_mmu()
7dcd575520082f186231777f4ac9f59ce14d6961 x86/kvm/mmu: check if tdp/shadow MMU reconfiguration is needed
a5c214dad1985092bd21c38c2a78befed9b02294 KVM/VMX: Change hv flush logic when ept tables are mismatched.
0804c849f1df0992d39a37c4fc259f7f8b16f385 kvm/x86 : add coalesced pio support
57b119da3594f5145a64fdebe0ac9ee0cc65f371 KVM: nVMX: add KVM_CAP_HYPERV_ENLIGHTENED_VMCS capability
b8bbab928fb187530d6bb0932b86661f99e3a01d KVM: nVMX: implement enlightened VMPTRLD and VMCLEAR
8cab6507f64eff0ccfea01fccbc7e3e05e2aaf7e x86/kvm/nVMX: nested state migration for Enlightened VMCS
59073aaf6de0d2dacc2603cee6d1d6cd5592ac08 kvm: x86: Add exception payload fields to kvm_vcpu_events
c4f55198c7c2b87909b166ffc2f6b68d9af6766c kvm: x86: Introduce KVM_CAP_EXCEPTION_PAYLOAD
fb363e2d20351e1d16629df19e7bce1a31b3227a selftests: kvm: Fix -Wformat warnings
7f9ad1dfa3c768d1116c2dbacd7a09f9a871534e KVM: nVMX: Fix kernel info-leak when enabling KVM_CAP_HYPERV_ENLIGHTENED_VMCS more than once
72aeb60c52bf74a0eeec77d6b41ce40145697d76 KVM: nVMX: Verify eVMCS revision id match supported eVMCS version on eVMCS VMPTRLD
52ad7eb3d668867f9ee2e34d715cfb4860d36a93 KVM: nVMX: vmcs12 revision_id is always VMCS12_REVISION even when copied from eVMCS
09f70c3b70e7d9e209a820b54dda42502fa40711 tools/kvm_stat: switch to python3
8b2cca9ade2c0f1d2ba94e39781e7306c918e544 arm64: KVM: Force VHE for systems affected by erratum 1165522
a457b0f7f50d4d189f0d009617885e4341133e8e arm64: Add configuration/documentation for Cortex-A76 erratum 1165522
aa6eece8ec5095e479a354365f5e5102bfab4f5a arm64: add pointer authentication register bits
b3669b1e1c09890d61109a1a8ece2c5b66804714 arm64: Don't trap host pointer auth use to EL2
2a31b9db153530df4aa02dac8c32837bf5f47019 kvm: introduce manual dirty log reprotect
199b118ab3d528371f6e3ac9f6001a0f3fd11d04 KVM: VMX: Alphabetize the includes in vmx.c
4cebd747d78559d1e8666d3e68a75f08966abc0c KVM: VMX: Drop the "vmx" prefix from vmx_evmcs.h
3077c191088255932c9e3780d8c6a59f147b75b8 KVM: VMX: Move capabilities structs and helpers to dedicated file
2c4fd91d26643504011b7c2b75563a437e19d6a1 KVM: VMX: Expose various module param vars via capabilities.h
cb1d474b322550630841a58ea960a448fe8ddce3 KVM: VMX: Move VMCS definitions to dedicated file
609363cf81fcbd2c7fc93d1f920cef3a71154de8 KVM: nVMX: Move vmcs12 code to dedicated files
8373d25d25d14fe644feae007c15a5a10cf8e888 KVM: VMX: Add vmx.h to hold VMX definitions
75edce8a45486fe5fa5becdb43a7c36354b2a379 KVM: VMX: Move eVMCS code to dedicated files
89b0c9f58350f6820f062ea12000e8a171177f3b KVM: VMX: Move VMX instruction wrappers to a dedicated header file
5158917c7b0196aefc1a4e9bc4458777dd2c41ec KVM: x86: nVMX: Allow nested_enable_evmcs to be NULL
e4027cfafd7846cf795217ce6d1829728d95ad89 KVM: nVMX: Set callbacks for nested functions during hardware setup
3e8eacccae9d998e0f5074f4fe411c747d85dfd8 KVM: nVMX: Call nested_vmx_setup_ctls_msrs() iff @nested is true
ff241486ac90671ddf7c18e38c474f32b832af3a KVM: nVMX: Move "vmcs12 to shadow/evmcs sync" to helper function
cf3646eb3adfd9149e3c29fc765a59e8bd6ff82d KVM: VMX: Expose misc variables needed for nested VMX
97b7ead392637247569818b6603e54b0a6277dd0 KVM: VMX: Expose various getters and setters to nested VMX
7c97fcb3b68cd4d48a071bc1929c753d255dea47 KVM: VMX: Expose nested_vmx_allowed() to nested VMX as a non-inline
55d2375e58a61be072431dd3d3c8a320f4a4a01b KVM: nVMX: Move nested code to dedicated files
e2e871ab2f02dc9ca5f06065234475393dcec38b x86/kvm/hyper-v: Introduce nested_get_evmcs_version() helper
2bc39970e9327ceb06cb210f86ba35f81d00e350 x86/kvm/hyper-v: Introduce KVM_GET_SUPPORTED_HV_CPUID
8644f771e07c52617627dffa4c67ba0ea120fd13 x86/kvm/hyper-v: direct mode for synthetic timers
08a800ac257a2eeed1fad34b55ed55b2578e9b4e x86/kvm/hyper-v: avoid open-coding stimer_mark_pending() in kvm_hv_notify_acked_sint()
87a8d795b2f1d926b4e831d27144d3e6ab7e33dc x86/hyper-v: Stop caring about EOI for direct stimers
a0d4f8034446df402a879dac04cab61f71c4fafc KVM nVMX: MSRs should not be stored if VM-entry fails during or after loading guest state
53963a70ac268c8e813e6d5cd24cbd1b03f56059 KVM/VMX: Check ept_pointer before flushing ept tlb
16322a3b5e7ce8250025361c092903a7259c1677 KVM: nVMX: Prepend "nested_vmx_" to check_vmentry_{pre,post}reqs()
461b4ba4c7ad79137171de2887e5d4d05a0ec8c1 KVM: nVMX: Move the checks for VM-Execution Control Fields to a separate helper function
f9b245e182ac9beb40f48faa0fd04ed3f3830d50 KVM: nVMX: Remove param indirection from nested_vmx_check_msr_switch()
61446ba75e9ad95446e057ac59e23e257493a3b3 KVM: nVMX: Move the checks for VM-Exit Control Fields to a separate helper function
5fbf963400a39919e53d20fe43bd3be072622944 KVM: nVMX: Move the checks for VM-Entry Control Fields to a separate helper function
254b2f3b0f7b45c2f2232a2e0da77577233750e2 KVM: nVMX: Move the checks for Host Control Registers and MSRs to a separate helper function
4e445aee9654dc4aee61919d4f1d379b77cf3435 KVM: nVMX: Move the checks for Guest Non-Register States to a separate helper function
3f58bf63455588a260b6abc8761c48bc8977b919 KVM: arm/arm64: Share common code in user_mem_abort()
6396b852e46e562f4742ed0a9042b537eb26b8aa KVM: arm/arm64: Re-factor setting the Stage 2 entry to exec on fault
f8df73388ee25b5e5f1d26249202e7126ca8139d KVM: arm/arm64: Introduce helpers to manipulate page table entries
4ea5af53114091e23a8fc279f25637e6c4e892c6 KVM: arm64: Support dirty page tracking for PUD hugepages
86d1c55ea605025f78d026e7fc3a2bb4c3fc2d6a KVM: arm64: Support PUD hugepage in stage2_is_exec()
eb3f0624ea082def887acc79e97934e27d0188b7 KVM: arm64: Support handling access faults for PUD hugepages
35a63966194dd994f44150f07398c62f8dca011e KVM: arm64: Update age handlers to support PUD hugepages
b8e0ba7c8bea994011aff3b4c35256b180fab874 KVM: arm64: Add support for creating PUD hugepages at stage 2
987d1149be7ddcc1380ff946cf236874421a7e1b KVM: fix unregistering coalesced mmio zone from wrong bus
ba7424b200d347fbbf9fadecaffb2a0feb740039 KVM: VMX: Remove duplicated include from vmx.c
9ebdfe5230f2e50e3ba05c57723a06e90946815a kvm: nVMX: NMI-window and interrupt-window exiting should wake L2 from HLT
6498e1da84daec4b3ef97e2174b07ea0af3ff06e kvm: selftests: dirty_log_test: always use -t
fd3f6f813976620553e951eb10d3a11b673a8131 kvm: selftests: dirty_log_test: reset guest test phys offset
696ade770f08a194b85dbf22d6f1613285905ae5 kvm: selftests: dirty_log_test: improve mode param management
8cee58161efffcb5ba691c33fe4de3eb75cf46cb kvm: selftests: aarch64: dirty_log_test: support greater than 40-bit IPAs
f99e3daf94ff35dd4a878d32ff66e1fd35223ad6 KVM: x86: Add Intel PT virtualization work mode
86f5201df0d3e3efc78d3eac7fc5a59b813287cd KVM: x86: Add Intel Processor Trace cpuid emulation
2ef444f1600bfc2d8522df0f537aafef79befa7e KVM: x86: Add Intel PT context switch for each vcpu
bf8c55d8dc094c85a3f98cd302a4dddb720dd63f KVM: x86: Implement Intel PT MSRs read/write emulation
b08c28960f254bd246af8e30a468dfc7dd56e03b KVM: x86: Set intercept for Intel PT MSRs read/write
ee85dec2fe9c860c40f6e2e1d53052b80f36cd58 KVM: x86: Disable Intel PT when VMXON in L1 guest
1f3a3e46cc49e81ab84d32710d3dae30697753a5 KVM/VMX: Add hv tlb range flush support
051a2d3e59e51ae49fd56aef34e472832897ce46 KVM: VMX: Explicitly reference RCX as the vmx_vcpu pointer in asm blobs
453eafbe65f72c04fc7c74c5c95c04e78e907dfb KVM: VMX: Move VM-Enter + VM-Exit handling to non-inline sub-routines
98938aa8edd66dc95024d7c936a4bc315f6615ff KVM: validate userspace input in kvm_clear_dirty_log_protect()
b7c1c226f9403c52bf58b0bceef24501429c7351 KVM/VMX: Avoid return error when flush tlb successfully in the hv_remote_flush_tlb_with_range()
9699f970de84292a766709029e5135ea0b6c9aa9 x86/kvm/hyper-v: don't announce GUEST IDLE MSR support
3a33d030daaa7c507e1c12d5adcf828248429593 kvm: x86/vmx: Use kzalloc for cached_vmcs12
1998fd32aa62fbf22cd1d8258e6a9deffd6bc466 x86/kvm/hyper-v: don't recommend doing reset via synthetic MSR
f1adceaf01f0446e69c15b32f24ce98e3c3623f1 x86/kvm/hyper-v: recommend using eVMCS only when it is enabled
8997f657001d1ac5042d368a936987c87251c5ec kvm: vmx: fix some -Wmissing-prototypes warnings
5ad6ece869d46c834976ce383ef200f9116881f8 KVM: VMX: Move vmx_vcpu_run()'s VM-Enter asm blob to a helper function
3a2f5773baab34a9943be4c77e1ff2ac79d16c75 x86/kvm/hyper-v: nested_enable_evmcs() sets vmcs_version incorrectly
358b28f09f0ab074d781df72b8a671edb1547789 arm/arm64: KVM: Allow a VCPU to fully reset itself
280cebfd05c8e381a392c662006dfaa6377feefc KVM: arm64: Relax the restriction on using stage2 PUD huge mapping
61c08aa9606d4e48a8a50639c956448a720174c3 KVM: VMX: Compare only a single byte for VMCS\' "launched" in vCPU-run
1ce072cbfd8dba46f117804850398e0b3040a541 KVM: nVMX: Check a single byte for VMCS "launched" in nested early checks
0e0ab73c9a0243736bcd779b30b717e23ba9a56d KVM: VMX: Zero out *all* general purpose registers after VM-Exit
831a3011294d9aa284afae9194619893d454d708 KVM: VMX: Modify only RSP when creating a placeholder for guest's RCX
f3689e3f17f064fd4cd5f0cb01ae2395c94f39d9 KVM: VMX: Save RSI to an unused output in the vCPU-run asm blob
ccf447434ee624b64a1c215d88453f1921aaa88a KVM: VMX: Manually load RDX in vCPU-run asm blob
6f7c6d23b71af2e65056e777eeb2f1e6e0195f14 KVM: VMX: Let the compiler save/load RDX during vCPU-run
9ce0a07a6f49822238fd4357c02e0dba060a43cc KVM: nVMX: Remove a rogue "rax" clobber from nested_vmx_check_vmentry_hw()
98ff2acc91d836277d34558fbbba7678e04281ed KVM: nVMX: Drop STACK_FRAME_NON_STANDARD from nested_vmx_check_vmentry_hw()
6c1e7e5b40f23b9e754a47852924115febba35df KVM: nVMX: Explicitly reference the scratch reg in nested early checks
f1727b4954772a778df0b73a93c4b646fd3c21f6 KVM: nVMX: Capture VM-Fail to a local var in nested_vmx_check_vmentry_hw()
bbc0b8239257d91cd43fe219de5552dee8bb9123 KVM: nVMX: Capture VM-Fail via CC_{SET,OUT} in nested early checks
74dfa2784e961fae66143b811f45105b43c63046 KVM: nVMX: Reference vmx->loaded_vmcs->launched directly
fbda0fd31a6d683637f848ba17956048dd0c7e48 KVM: nVMX: Let the compiler select the reg for holding HOST_RSP
5a8781607e677eda60b20e0a4c91d2a5f12f9244 KVM: nVMX: Cache host_rsp on a per-VMCS basis
47e97c099bbcb3211b22456679991095c0578da2 KVM: VMX: Load/save guest CR2 via C code in __vmx_vcpu_run()
c09b03eb7f964370149577fdba425623b7f5b0b5 KVM: VMX: Update VMCS.HOST_RSP via helper C function
c9afc58cc368623aaa34a62e321eea2a59240f6f KVM: VMX: Pass "launched" directly to the vCPU-run asm blob
217aaff53c25f03b1d2fc23eff9dc2bae34f690e KVM: VMX: Invert the ordering of saving guest/host scratch reg at VM-Enter
f78d0971b7bd5bf4373a1fac27f176af5d5594ed KVM: VMX: Don't save guest registers after VM-Fail
d55892049171872a8f1aba542aa0691efe3da52d KVM: VMX: Use vcpu->arch.regs directly when saving/loading guest state
6b1971c694975e49af302229202c0043568b1791 x86/kvm/nVMX: read from MSR_IA32_VMX_PROCBASED_CTLS2 only when it is available
bc44121190aea96de171408310db3d3c87e2cc11 KVM: nVMX: Restore a preemption timer consistency check
c112b5f50232a257056903040c66d97efb536889 KVM: x86: Recompute PID.ON when clearing PID.SN
32f139551954512bfdf9d558341af453bb8b12b4 arm/arm64: KVM: Statically configure the host's view of MPIDR
e329fb75d519e3dc3eb11b22d5bb846516be3521 KVM: arm/arm64: Factor out VMID into struct kvm_vmid
c14f9dd50b01b55834a757dd50af35b8e168512d KVM: VMX: Use #defines in place of immediates in VM-Enter inline asm
63c73aa07fcabc090661a586f7ae5200a0fc5cb4 KVM: VMX: Create a stack frame in vCPU-run
5e0781df18990497f4cd96a959ca583d83b6d1e0 KVM: VMX: Move vCPU-run code to a proper assembly routine
c823dd5c0f3fafa595ed51cc72c6e006efc20ad3 KVM: VMX: Fold __vmx_vcpu_run() back into vmx_vcpu_run()
ee2fc635ef714b1d46da3616bbec972067f0d187 KVM: VMX: Rename ____vmx_vcpu_run() to __vmx_vcpu_run()
a62fd5a76c99dd96c74c6638408961b7ff3c71c4 KVM: VMX: Use RAX as the scratch register during vCPU-run
77df549559dbe7f265ab19bd444d6acb3a718b4d KVM: VMX: Pass @launched to the vCPU-run asm via standard ABI regs
e75c3c3a0487da878cbfa7f125dcd080a8606eaf KVM: VMX: Return VM-Fail from vCPU-run assembly via standard ABI reg
3b895ef48615382db03adcf125e0db8437b9acbe KVM: VMX: Preserve callee-save registers in vCPU-run asm sub-routine
fc2ba5a27a1aaa16b664e64f85e0e1307d2bde3a KVM: VMX: Call vCPU-run asm sub-routine from C and remove clobbering
4f44c4eec5b72020c6d99e9e4f3d0505874c98c9 KVM: VMX: Reorder clearing of registers in the vCPU-run assembly flow
b5179ec4187251a751832193693d6e474d3445ac x86/kvmclock: set offset for kvm unstable clock
946c522b603f281195af1df91837a1d4d1eb3bc9 KVM: nVMX: Sign extend displacements of VMX instr's mem operands
8570f9e881e3fde98801bb3a47eef84dd934d405 KVM: nVMX: Apply addr size mask to effective address for VMX instructions
34333cc6c2cb021662fd32e24e618d1b86de95bf KVM: nVMX: Ignore limit checks on VMX instructions using flat segments
e0dfacbfe91ad7947f0c44829c0358ac2e17d3c6 KVM: nVMX: remove useless is_protmode check
81b016676e1c8f58027bd4d2b1d8a981776b36fe KVM: x86: Sync the pending Posted-Interrupts
b4b65b5642d6edd50e35a159f20e793dc478d686 KVM: x86: cleanup freeing of nested state
d92935979adba274b1099e67b7f713f6d8413121 kvm: vmx: Fix typos in vmentry/vmexit control setting
359a6c3ddc5184122989d5152a4b975c1c262d33 KVM: nVMX: do not start the preemption timer hrtimer unnecessarily
b12ce36a43f29dbff0bca14c5a51c276aea5662f kvm: Add memcg accounting to KVM allocations
4183683918efc3549b5ebddde4ed5edfdac45c17 kvm: vmx: Add memcg accounting to KVM allocations
a67794cafbc4594debf53dbe4e2a7708426f492e Revert "KVM: Eliminate extra function calls in kvm_get_dirty_log_protect()"
ad7dc69aeb23138cc23c406cac25003b97e8ee17 x86/kvm/mmu: fix switch between root and guest MMUs
511da98d207d5c0675a10351b01e37cbe50a79e5 kvm: x86: Return LA57 feature based on hardware capability
de3ccd26fafc707b09792d9b633c8b5b48865315 KVM: MMU: record maximum physical address width in kvm_mmu_extended_role
4a605bc08e98381d8df61c30a4acb2eac15eb7da kvm: vmx: fix formatting of a comment
ebff0b0e3d3c862c16c487959db5e0d879632559 KVM: arm64: Reset the PMU in preemptible context
a80868f398554842b14d07060012c06efb57c456 KVM: arm/arm64: Enforce PTE mappings at stage2 when needed
3c3736cd32bf5197aed1410ae826d2d254a5b277 KVM: arm/arm64: Fix handling of stage2 huge mappings
8324c3d518cfd69f2a17866b52c13bf56d3042d8 KVM: arm/arm64: Comments cleanup in mmu.c
552c69b1dc714854a5f4e27d37a43c6d797adf7d KVM: nVMX: Do not inherit quadrant and invalid for the root shadow EPT
47c42e6b4192a2ac8b6c9858ebcf400a9eff7a10 KVM: x86: fix handling of role.cr4_pae and rename it to 'gpte_size'
05d5a48635259e621ea26d01e8316c6feeb34190 KVM: SVM: Workaround errata#1096 (insn_len maybe zero on SMAP violation)
711eff3a8fa1d6193139a895524240912011b4dc kvm: nVMX: Add a vmentry check for HOST_SYSENTER_ESP and HOST_SYSENTER_EIP fields
0cf9135b773bf32fba9dd8e6699c1b331ee4b749 KVM: x86: Emulate MSR_IA32_ARCH_CAPABILITIES on AMD hosts
2bdb76c015df7125783d8394d6339d181cb5bc30 kvm/x86: Move MSR_IA32_ARCH_CAPABILITIES to array emulated_msrs
013cc6ebbf41496ce4badedd71ea6d4a6d198c14 x86/kvm/hyper-v: avoid spurious pending stimer on vCPU init
acff78477b9b4f26ecdf65733a4ed77fe837e9dc KVM: x86: nVMX: close leak of L0's x2APIC MSRs (CVE-2019-3887)
c73f4c998e1fd4249b9edfa39e23f4fda2b9b041 KVM: x86: nVMX: fix x2APIC VTPR read intercept
690908104e39d37947f89d76388c876ce4ec5fda KVM: nVMX: allow tests to use bad virtual-APIC page address
2b27924bb1d48e3775f432b70bdad5e6dd4e7798 KVM: nVMX: always use early vmcs check when EPT is disabled
c68c21ca929771a1f128d886359f9229d31cf80c selftests: kvm/evmcs_test: complete I/O before migrating guest state
0699c64a4be6e4a6137240379a1f82c752e663d8 x86/kvm/mmu: reset MMU context when 32-bit guest switches PAE
76d58e0f07ec203bbdfcaabd9a9fc10a5a3ed5ea KVM: fix KVM_CLEAR_DIRTY_LOG for memory slots of unaligned size
e8ab8d24b488632d07ce5ddb261f1d454114415b KVM: nVMX: Fix size checks in vmx_set_nested_state
f2fde6a5bcfcfcfca8eef59666b20454da055ad7 KVM: VMX: Move RSB stuffing to before the first RET after VM-Exit
2e8010bb71b39ff18aac9fb209b3c3093f4c4783 kvm: arm: Skip stage2 huge mappings for unaligned ipa backed by THP
b0a39d356ae1478a5876bb02ba08af155a3a5554 ASoC: wcd9335: Fix build due to CLASS-H Controller support
fce9ec954a8af7e04cbf5b9daa8bec9c1df5cfe6 ASoC: sta32x: Add support for XTI clock
a43ea44ddda94bc6c4dbe257fcbdeecde8cb06f1 ASoC: amd: add ACP3x TDM mode support
d8ae458eeca9ed686e09a1b894867cb91fc4c1cb ALSA: hda/realtek: ALC294 mic and headset-mode fixups for ASUS X542UN
4e051106730dfc640a8b49db88440af304726f4d ALSA: hda/realtek: Enable audio jacks of ASUS UX533FD with ALC294
0bea4cc8383519f78f3f74caca7bdebdfb346d3b ALSA: hda/realtek: Enable audio jacks of ASUS UX433FN/UX333FA with ALC294
da32d6537802a257879e9ba91a5e351a24ada889 ASoC: simple-scu-card: add dai-link support
e6a3ff2ed4c9c4df217c64e0fc0a280a24055790 ASoC: simple-scu-card: use cpu/codec pointer on graph_dai_props
0a26d6df4fd8aa8f4fb444446d162e01c3e349c0 ASoC: simple-scu-card: care multi DPCM codec_conf
82b01149ec94d746867d7f9156c44d775d4d2d67 ALSA: hda/realtek: Enable the headset mic auto detection for ASUS laptops
22c7d5e7bad1fb2d8b9c611acb55a389f5d848d8 ASoC: rt5682: Fix recording no sound issue
c8ed6aca6b824018a39702a563f2f6591de20d64 ASoC: simple-scu-card: remove simple-scu-card
b0ce7b29bfcd090ddba476f45a75ec0a797b048a regulator/gpio: Allow nonexclusive GPIO access
5e6f3ae5c13b12ecd440da2f511fc5fd3c8de520 regulator: fixed: Let core handle GPIO descriptor
8c4f021d806ac52902856d7cbd148a4b24a88f59 ASoC: wcd9335: add basic controls
354461486f66e4311d9412c53205d773aac85b78 ASoC: wcd9335: add playback dapm widgets
6ccc25f6696cb603ead89b797825d305c7b27798 ASoC: wcd9335: add capture dapm widgets
93f97ff1911a34e2a4662f16b6266b2c309f918b ASoC: wcd9335: add audio routings
a8233b6c1972e1959cf84a021aeb61ddcd23cc26 ASoC: wcd9335: Fix missing slimbus dependency
d22b4117538d42f3dcf7e28210f07f968e46222e ASoC: wcd9335: remove some unnecessary NULL checks
8857c7d065e900a0b3829c97634c99501b606541 i915/snd_hdac: I915 subcomponent for the snd_hdac
8bb37a2a4d7c02affef554f5dc05f6d2e39c31f9 ALSA: hda/realtek: Enable audio jacks of ASUS UX362FA with ALC294
0d3fba3e7a566917f4286dd42b83c780c47dcbf7 ASoC: wm_adsp: Improve logging messages
82ad759143ed77673db0d93d53c1cde7b99917ee ASoC: tlv320aic3x: fix reset gpio reference counting
d4180b4c02e7b04b8479f6237b2bd98b4c5fd19c ASoC: stm32: sai: fix set_sync service
c8a9afa632f0fd45731d3353525faf1fdb362c89 ALSA: hda/realtek: merge alc_fixup_headset_jack to alc295_fixup_chromebook
136824efaab2c095fc911048f7c7ddeda258c965 ALSA: hda/realtek - Add support headset mode for DELL WYSE AIO
da484d00f020af3dd7cfcc6c4b69a7f856832883 ALSA: hda/realtek - Add support headset mode for New DELL WYSE NB
667a8f73753908c4d0171e52b71774f9be5d6713 ALSA: hda/realtek: Enable headset MIC of Acer AIO with ALC286
2733ccebf4a937a0858e7d05a4a003b89715033f ALSA: hda/realtek: Enable headset MIC of Acer Aspire Z24-890 with ALC286
c7531e31c8a440b5fe6bd62664def5bcb6262f96 ALSA: hda/realtek - Add support for Acer Aspire E5-523G/ES1-432 headset mic
e1037354a0a75acdea2b27043c0a371ed85cf262 ALSA: hda/realtek: Enable ASUS X441MB and X705FD headset MIC with ALC256
a806ef1cf3bbc0baadc6cdeb11f12b5dd27e91c2 ALSA: hda/realtek: Enable headset mic of ASUS P5440FF with ALC256
6ac371aa1a74240fb910c98aa3484d5ece8473d3 ALSA: hda/realtek: Enable headset MIC of ASUS X430UN and X512DK with ALC256
e2a829b3da01b9b32c4d0291d042b8a6e2a98ca3 ALSA: hda/realtek - Fix speakers on Acer Predator Helios 500 Ryzen laptops
64b92de9603f22b5455da925ee57268ef7fb4e80 ASoC: wcd9335: fix a leaked reference by adding missing of_node_put
ea5c7eba216e832906e594799b8670f1954a588c ALSA: hda/realtek: Enable headset MIC of Acer TravelMate B114-21 with ALC233
8983eb602af511fc5822f5ff4a82074c68816fd9 ALSA: hda/realtek - Move to ACT_INIT state
ac71317e6be01812cc0c54d8be6d3c1139c8380b ASoC: wcd9335: Fix missing regmap requirement
3887c26c0e24d50a4d0ce20cf4726737cee1a2fd ALSA: hda/realtek - Apply the fixup for ASUS Q325UAR
d3ba58bb895915f7f9105e0844441d2ca7d83340 ALSA: hda/realtek - Support low power consumption for ALC295
c2c616021d64d952dc9d37793924ce57833d7754 ASoC: audio-graph-card: don't select DPCM via audio-graph-card
42bf029a55a9bb8036f1d738a28dba2f7ec1e79d ASoC: simple-card: don't select DPCM via simple-audio-card
f2c4db1bd80720cd8cb2a5aa220d9bc9f374f04e x86/cpu: Sanitize FAM6_ATOM naming
7961cba6f7d8215fa632df3d220e5154bb825249 scsi: lpfc: nvme: avoid hang / use-after-free when destroying localport
7479efc71f6da5fde6c67d91380ebc0fb455c53d selftests/bpf: remove duplicated word from test offloads
005c674f705ee308e23b8e4e7047419d12122fde nvmet: ignore EOPNOTSUPP for discard
f669d24f3dd00beab452c0fc9257f6a942ffca9b i40e: fix WoL support check
117266fd59ddf46e98e36df09326d861738c6180 iommu/vt-d: Check identity map for hot-added devices
c56cba5daf45d2d091ef1cfe2f1d6a930446687b iommu/vt-d: Fix NULL pointer reference in intel_svm_bind_mm()
3491c9e799fb96d909f22f3b39d8cca81e75c3a9 qedr: Add support for kernel mode SRQ's
40b173ddce0fc6653a859889d1a90b5f5817061b qedr: Add user space support for SRQ
b3b43483a26dbb7b05fce1c21f6807d299888617 RDMA/qedr: remove set but not used variable 'ctx'
e00b64f7c54c4cbd88143bbd43e7c3d61a090e5c RDMA: Cleanup undesired pd->uobject usage
37c5d3efd7f801091d1470d7682be474e0ea2bd0 qede: use ethtool_rx_flow_rule() to remove duplicated parser code
784abe24c903b093af04cf1a043140faa556cad7 net: Add decrypted field to skb
16e4edc297ffc9b643b8dd3da6b0d579753ea2b3 net: Add TLS rx resync NDO
b190a587c634a8559e4ceabeb0468e93db49789a tls: Fill software context without allocation
35036b0b09c4311e2879a3101cc61ccf6fd76ddf selftests: forwarding: mirror_gre_vlan_bridge_1q: Fix untagged test
c383edc42403b0bca31cbaabafd44dd58afb202f rtnetlink: add rtnl_get_net_ns_capable()
7e4a8d5a93f649a1c0a0181cab5d965b1f85cf71 rtnetlink: s/IFLA_IF_NETNSID/IFLA_TARGET_NETNSID/g
203651b665f72ba765fc4721842a471f8e9e5739 ipv6: add inet6_fill_args
1923f851eb0baa79d11cd0574c6100c2de840d75 scsi: smartpqi: update driver version
2a71268160b43638e9a6a553b71bc9be1ee7d9c1 scsi: smartpqi: Update copyright
2cc37b1575c6f51cc1bb3ed761de5476917cb6ff scsi: smartpqi: add spdx
4635873c561ac57b66adfcc2487c38106b1c916c scsi: lib/sg_pool.c: improve APIs for allocating sg pool
92524fa12312d1f082a473e14c590c48b4ef3fe5 scsi: core: avoid preallocating big SGL for protection information
3dccdf53c2f38399b11085ded4447ce1467f006c scsi: core: avoid preallocating big SGL for data
b9ac3849af412fd3887d7652bdbabf29d2aecc16 x86/kdump: Fall back to reserve high crashkernel memory
872e192fab643887f143106eb56443d87e5e87c1 scsi: qedi: remove declaration of nvm_image from stack
cffbb3bd444bc95186b6ab0ed3bf1d5bcf4aa620 perf/hw_breakpoint: Remove default hw_breakpoint_arch_parse()
e2da97d328d4951d25f6634eda7213f7257417b6 arm_pmu: Add support for 64bit event counters
db9492cef45efc347beed7b617dfdfac399f662b s390/protvirt: add memory sharing for diag 308 set/store
7c70b896951c84d63e6d71b82668f9c8b8bbd440 gfs2: clean_journal improperly set sd_log_flush_head
6a0b6174d35a141dfa30a32c848a3903e2d7f495 rdma/cxgb4: Add support for kernel mode SRQ's
eb2463bab4bce46b0482a0e7e74575771a32fcf0 rdma/cxgb4: Fix SRQ endianness annotations
dd708e7b4541da1d61cdce2db1d9701444fdb317 rdma/cxgb4: Simplify a structure initialization
26f91da29650177364564d8183907d0229e9afbc RDMA/cxgb4: remove redundant null pointer check before kfree_skb
1b571086e869395b6a11ab24186b0104fe05c057 iw_cxgb4: Use proper enumerated type in c4iw_bar2_addrs
54747231150f0dddf68f2ee29ec2970fcc433909 RDMA: Introduce and use rdma_device_to_ibdev()
8ba0ddd09406e35782259f2ac18187ec77d8c093 RDMA/iw_cxgb4: Drop __GFP_NOFAIL
7810e09bfba56bc0f2aff705ca7086e6c1f103f6 rdma/cxgb4: Remove a set-but-not-used variable
11a27e2121a544cae2dde62df9218b3d5d888a02 iw_cxgb4: complete the cached SRQ buffers
f09ef134a7ca3f0d2ce485a757f5b79809ebb803 iw_cxgb4: cq/qp mask depends on bar2 pages in a host page
cfe876d8e6b0491170d44c8040c518b121957104 RDMA/cxgb4: Remove kref accounting for sync operation
3b8f8b95d9d3c73637bd33a644952a7cfa8e2c2a iw_cxgb4: Make function read_tcb() static
c59c32cdb2abedb39d6ab8ac3be2efebf026aa41 scsi: hpsa: bump driver version
9a14f9b1be7ca55a33e8680918cdcf75ae202be1 scsi: hpsa: update driver version
72c69dcddce103338de558c5c6e9ef9e4f607ce1 powerpc/perf: Trace imc events detection and cpuhotplug
012ae244845f19d5f6ca2a90426851bc5044a0dc powerpc/perf: Trace imc PMU functions
7c5314b88da6d5af98239786772a1c44cc5eb67d perf/x86/intel: Add quirk for Goldmont Plus
0a9fddfaa8ea0f66564329ce89390c8dd38b2df0 s390/sclp: detect DIRQ facility
50a7ca3c6fc86955f99fc432fc8a186b968b365b mm: convert return type of handle_mm_fault() caller to vm_fault_t
25c102d803eacf4741a067384f2d15b35f410ff2 signal/x86: Remove pkey parameter from mm_fault_error
b4d5557caa07a01796ca8a2d756eeaa5308f6876 signal/arm64: Add and use arm64_force_sig_mceerr as appropriate
009f608ab20a25d01a07e9e75e7d246e81252eb8 signal/arm64: Remove arm64_force_sig_info
f3a900b34101bb8df10b83f326b3af796c101a05 signal/arm64: Add and use arm64_force_sig_ptrace_errno_trap
5f0baf95b1edfff5eb9b6f571febb859b047de97 get_maintainer.pl: add -mpath=<path or file> for MAINTAINERS file location
0fbd75fd7feedd9e38fc1d3a01317aa23b83d29e get_maintainer: allow option --mpath <directory> to read all files in <directory>
9e77018eefafbf2d480e5868de11a7e49c9b1858 scsi: megaraid_sas: optimize raid context access in IO path
81b7645223ea5935161c69fc022a75928a79ccd0 scsi: megaraid_sas: Rename scratch_pad registers
de516379e85f51c57ee54b113dbb442e5a862cd8 scsi: megaraid_sas: changes to function prototypes
4b0bce30f39b7733420bb8b28e340aa91c219bc1 xfs: always init bma in xfs_bmapi_write
f664a52695429b68afb4e130a0f69cd5fd1fec86 dma-buf: remove kmap_atomic interface
df2fc43d09d3ee5ede82cab9299df5e78aa427b5 list: introduce list_bulk_move_tail helper
64e3d12f769d60eaee6d2e53a9b7f0b3814f32ed mm, drm/i915: mark pinned shmemfs pages as unevictable
8d7fc2994f4d1f431e280c9e21a139c18dc435ec vt: Remove vc_panic_force_write
4be9bd10e22dfc7fc101c5cf5969ef2d3a042d8a drm/fb_helper: Allow leaking fbdev smem_start
07d0408120216b60625c9a5b8012d1c3a907984d tracing: Avoid calling cc-option -mrecord-mcount for every Makefile
9d5441de28e2b1e5087ce63c4fe9e0b1c5b3fcaa drm/i915: Populate gamma_mode for all platforms
5f29ab23046a4bb08a850e41bdb579b2cb59421d drm/i915: Track pipe gamma enable/disable in crtc state
8271b2ef71aaabac452dc03a6cbe8960cbea4247 drm/i915: Track pipe csc enable in crtc state
0fc3f8e7540f59e0e059b20d5a138e5f81bcf352 drm/i915: Turn off pipe gamma when it's not needed
0593d2cd38134b9db4227897ec81eb18ab90b54a drm/i915: Turn off pipe CSC when it's not needed
02c52f1ed20aba171f2098b8dc03747a60456603 drm/i915: Disable pipe gamma when C8 pixel format is used
73a116be688041149bbdd1f0ba25da5c4c78a306 drm/i915: Update DSPCNTR gamma/csc bits during crtc_enable()
ab98e94435abc493c8fedf5e07b0b3f045424d32 drm/i915: Dump skl+ watermark changes
8957129cb3b0144aceb46b8002cb5d1c45326b01 drm/i915/glk: Fix degamma lut programming
13717cef4c1d627db9ed9288f38893977e4f7eac drm/i915/icl: Add icl pipe degamma and gamma support
a91de580541c37dcd6a82091fdd2d36cca7cda77 drm/i915/icl: Enable pipe output csc
e6ed078d6ddd413751566a55e569106348725fdb drm/i915/icl: Add degamma and gamma lut size to gen11 caps
9194e42a1837b2cbf80418d6fd98f00bf3852f5f drm/i915: Make combo PHY DDI macro definitions consistent for ICL and CNL
58106b7d816e1ddd7828df4f48a3ffc3df12d615 drm/i915: Make MG PHY macros semantically consistent
bfe0cd28518d3bd2a3d278dad5a6ed1c55a65f32 Revert "drm/i915: W/A for underruns with WM1+ disabled on icl"
2ed8e1f560e517baca4763204edbf76255c8e54e drm/i915: Include "ignore lines" in skl+ wm state
290248c27c93ad70262b8112595b95ad9d867929 drm/i915: Implement new w/a for underruns with wm1+ disabled
2a3902bd5c14a4946739c9da14071f5aa6e85549 drm/i915/icl: Drop redundant gamma mode mask
37fc7845df7b6ab9b2885b42e8de8ebcf33bee7a drm/i915: Call MG_DP_MODE() macro with the right parameters order
c384afe35200f090b10ff5b4e8c7e6ea6a54eb19 drm/i915: Finalize Wa_1408961008:icl
510a75a5d2b8540001c5c49ccad310df94623db8 drm/i915/icl: move MG pll hw_state readout
d846325ad0e5cd06f441299cdbec6ab8ba3a3c45 drm/i915/icl: Default to Thread Group preemption for compute workloads
80373fb6be9643d065c57c1030038fe927cfb478 drm/i915: Store DIMM rank information as a number
ea411e6b85df938eaa3ec4e3e34e885ff496a3ce drm/i915: Extract functions to derive SKL+ DIMM info
54561b238b1994d7ffe586b9d85ddf3c39a5a37c drm/i915: Polish skl_is_16gb_dimm()
a62819a301d8d68d6d305adc20fbea6fbcb67a14 drm/i915: Extract BXT DIMM helpers
8860343cc9a7f31fa6d0fb904770924593f6c311 drm/i915: Fix DRAM size reporting for BXT
331ecded7e6cb005a22fea99d3d02402cf19a7b1 drm/i915: Extract DIMM info on GLK too
198b8dd91b7978c01a5cc719ce5bd75b3b9732f4 drm/i915: Use dram_dimm_info more
d75434bc341eca20c4d094bc30946028b53d1281 drm/i915: Generalize intel_is_dram_symmetric()
1d55967dc1cfb50906422f8068e8332ba3821bc7 drm/i914: s/l_info/dimm_l/ etc.
30a533e5774b726621fffdb910d5ae5830f509cc drm/i915: Clean up intel_get_dram_info() a bit
6d9c1e92038507d03f6a25332719ad4b0ad00279 drm/i915: Extract DIMM info on cnl+
b185a35216c003f53149974981389f093523b137 drm/i915: Read out memory type
26eeea1506838c77524fa90c8e6f1cc246762a4a drm/i915/icl: Fix CRC mismatch error for DP link layer compliance
42fd20edf68cd5d8ee13d653f6d44e36dcb60802 drm/i915: Refactor icl_is_hdr_plane
5a0404408d3266fa3116979297b3bb47fdb9dc0b drm/i915: Fix legacy gamma mode for ICL
7c1200456cb0859fba27927feb8322929a4fad83 drm/i915: Turn off the CUS when turning off a HDR plane
a7b4deeb02b978bc59808cb13c93ba84f01023a4 drm/i915/cml: Add CML PCI IDS
3cf963cfe3a9fc83bc235b1892858164b1b83306 drm/i915: Accept alloc_size == blocks
67155a6996841b5167c441bff2724ca86fdd0a2b drm/i915: Don't pass plane state to skl_compute_plane_wm()
c92558aa41722f95160d96b8e1ac8dd36731a836 drm/i915: Extract skl_compute_wm_params()
df331de3f8aac1a8080510d883fa40555809cddf drm/i915: Allocate enough DDB for the cursor
10a7e07b68b9ecf9251f78043fb7b342bf9b04e8 drm/i915: Make sure cursor has enough ddb for the selected wm level
a301cb0fca2d4c5a615d5dac1a3d80baa99518ac drm/i915: Keep plane watermarks enabled more aggressively
5e6037c88ad5f052e317a56cff54df40b7e82e5f drm/i915: Move some variables to tighter scope
96cb7cde1a3009663918b69ab5f8000c67f0a7b8 drm/i915: Don't pass pipe_wm around so much
8cac9fd9bc7967cd114c543bdf70a5d0aa759498 drm/i915: Inline skl_update_pipe_wm() into its only caller
6086e47b35e1a25df31842a49971c277cd84af8f drm/i915: Really calculate the cursor ddb based on the highest enabled wm level
9c11b12184bb01d8ba2c48e655509b184f02c769 drm/i915/icl: Fix MG_DP_MODE() register programming
372b9ffb5799a3d5f4a9c51ac35cf65ed8f40101 drm/i915: Fix skl+ max plane width
d284d5145eb8760b592e64249c1cd85c440fe90f drm/i915: Make sandybridge_pcode_read() deal with the second data register
c457d9cf256e942138a54a2e80349ee7fe20c391 drm/i915: Make sure we have enough memory bandwidth on ICL
09b434d4f6d22e14500569e7e3f951e0eec4d496 drm/i915: introduce REG_BIT() and REG_GENMASK() to define register contents
2ea7414159cdbbab76b55f01b4ff560ff2018a4f drm/i915/icl: Enable media sampler powergate
917dc6b53c273dd7e026f158ad4894ae366da326 drm/i915: Use Engine1 instance for gen11 pm interrupts
3936867dbc1eb8790aa5985a68d53e4303b3616f drm/i915: Disable read only ppgtt support for gen11
e5604e2fb6d440d91f8f729fa5424cc93c802c76 drm/i915: Suppress spurious combo PHY B warning
51eb1a1de7a92a812a3834986260834d5f52e566 drm/i915/icl: Fix clockgating issue when using scalers
bd60a562906b2dfa6db4e9165c1498ea25db0587 drm/i915/icl: Factor out combo PHY lane power setup helper
cfda08cdac3401db03849a62206b539bb4e4632e drm/i915/icl: Add missing combo PHY lane power setup
cbe3e1d103793705204b29c6952faed537c41fe1 drm/i915/icl: Add WaDisableBankHangMode
e15b682aad77f158e4af51d258ed7398036fdf8d drm/nouveau/core: initial support for boards with TU117 chipset
c4a52d669690423ee3c99d8eda1e69cd0821fcad drm/nouveau: fix duplication of nv50_head_atom struct
08e6b3c6e3a054f566367740c94b8c1d18e52056 libnvdimm: Introduce locked DIMM capacity support
b3ed2ce024c36054e51cca2eb31a1cdbe4a5f11e acpi/nfit: Add support for Intel DSM 1.8 commands
f2989396553a0bd13f4b25f567a3dee3d722ce40 acpi/nfit, libnvdimm: Introduce nvdimm_security_ops
37833fb7989a9d3c3e26354e6878e682c340d718 acpi/nfit, libnvdimm: Add freeze security support to Intel nvdimm
4c6926a23b76ea23403976290cd45a7a143f6500 acpi/nfit, libnvdimm: Add unlock of nvdimm support for Intel DIMMs
03b65b22ada8115a7a7bfdf0789f6a94adfd6070 acpi/nfit, libnvdimm: Add disable passphrase support to Intel nvdimm.
d2a4ac73f56a5d0709d28b41fec8d15e4500f8f1 acpi/nfit, libnvdimm: Add enable/update passphrase support for Intel nvdimms
64e77c8c047fb91ea8c7800c1238108a72f0bf9c acpi/nfit, libnvdimm: Add support for issue secure erase DSM to Intel nvdimm
7d988097c546187ada602cc9bccd0f03d473eb8f acpi/nfit, libnvdimm/security: Add security DSM overwrite support
89fa9d8ea7bdfa841d19044485cec5f4171069e5 acpi/nfit, libnvdimm/security: add Intel DSM 1.8 master passphrase support
3c13e2ac747a37e683597d3d875f839f2bc150e1 tools/testing/nvdimm: Add test support for Intel nvdimm security DSMs
926f74802cb1ce0ef0c3b9f806ea542beb57e50d tools/testing/nvdimm: Add overwrite support for nfit_test
ecaa4a97b3908be0bf3ad12181ae8c44d1816d40 tools/testing/nvdimm: add Intel DSM 1.8 support for nfit_test
37379cfc661e51607733f266d9f407b4f8aee16b libnvdimm/security: Quiet security operations
a95c90f1e2c253b280385ecf3d4ebfe476926b28 mm, devm_memremap_pages: fix shutdown handling
ccb7f15a8a3c0c7a35389e4c8e083c424b4df79d nfit: Mark some functions as __maybe_unused
1cb95e072ede5e3d6a54eefd520db21b45985896 libnvdimm/dimm: Fix security capability detection for non-Intel NVDIMMs
faa8bd6e12e6aeea289d8e6ba74777b72a69434c libnvdimm/security: Fix nvdimm_security_state() state request selection
266c7bf52a7fe5cb5a97e78fedcaac629378008f nfit_test: fix security state pull for nvdimm security nfit_test
1cd7386549f9b6f2f230da54aa9e7fe2d6c216d2 libnvdimm/security: Require nvdimm_security_setup_events() to succeed
d5d30d5a5c60628de5e77e3f292a8f9012d51350 libnvdimm/dimm: Add a no-BLK quirk based on NVDIMM family
11cf9d863dcb583345723b0ed72173348761e9c0 fs/dax: Deposit pagetable even when installing zero page
037c8489ade669e0f09ad40d5b91e5e1159a14b1 libnvdimm/security: provide fix for secure-erase to use zero-key
d2e5b6436c28e7ee4988497d31122e06217876fb libnvdimm/security, acpi/nfit: unify zero-key for all security commands
2170a0d53bee1a6c1a4ebd042f99d85aafc6c0ea tools/testing/nvdimm: Retain security state after overwrite
1a74fc0b3f49a0603f230b6f087da33bda3d7c66 drm/i915: Add a new "remapped" gtt_view
e2e394bffa19365aa86eb898f6225919d02d6b6c drm/i915/selftests: Add mock selftest for remapped vmas
bb211c3d0c454a5088dfc94d3b3c3885e4d4935e drm/i915/selftests: Add live vma selftest
a88c40ebb8811c28c39e7cab8ba9c33c86f1fcfd drm/i915: Shuffle stride checking code around
54d4d719fa119c1738f97adc242c05fff224c845 drm/i915: Overcome display engine stride limits via GTT remapping
aa5ca8b7421cdbdd2b1275e0cc4d11bdce043de9 drm/i915: Align dumb buffer stride to 4k to allow for gtt remapping
2033012982231533e545b002f744a60699fe968c drm/i915: Bump fb stride limit to 128KiB for gen4+ and 256KiB for gen7+
5c000fb33b767c3fa10d29a1021edbf4f92b76a2 drm/i915: Bump gen7+ fb size limits to 16kx16k
cc2278c413c3a06a93c23ee8722e4dd3d621de12 nvme-multipath: relax ANA state check
592b6e7b0226b198c12439065f725be00c92d559 nvme-multipath: don't print ANA group state by default
38e967ae1e6022557e579f673fba544cf19cf1c6 Uprobes: Simplify uprobe_register() body
1cc33161a83d20b5462b1e93f95d3ce6388079ee uprobes: Support SDT markers having reference count (semaphore)
22bad38286d9a652d7061a02f9743bb2ebb84e59 uprobes/sdt: Prevent multiple reference counter for same uprobe
1aed58e67a6ec1e7a18bfabe8ba6ec2d27c15636 Uprobes: Fix kernel oops with delayed_uprobe_remove()
750afb08ca71310fcf0c4e2cb1565c63b8235b60 cross-tree: phase out dma_zalloc_coherent()
df617ffbbc5ecb64334548546d4b0cc4ff0527c0 scsi: qla2xxx: Add fw_attr and port_no SysFS node
ecc89f25e225fabfffc709dbc43c928bc276cade scsi: qla2xxx: Add Device ID for ISP28XX
2a3192a3f3bc4fe1b077c55fffb6d8afe3213d57 scsi: qla2xxx: Add Serdes support for ISP28XX
72a92df2109bf62094c25436ded2be0283d9aa24 scsi: qla2xxx: Correctly report max/min supported speeds
f8f97b0c5b7f7c801d80ac78165edf25fff1f5e0 scsi: qla2xxx: Cleanups for NVRAM/Flash read/write path
a28d9e4ef99729d7e4db31d2dfeaf00755be4ab7 scsi: qla2xxx: Add support for multiple fwdump templates/segments
3695310e37b4e571d40593cbe59188b0006a2274 scsi: qla2xxx: Update flash read/write routine
2ff0167151f50f38c103c2e8e08e542cd8727441 scsi: qla2xxx: Correction and improvement to fwdt processing
ce0366df542a214be62bb3250e688f7c6d644ad7 scsi: qla2xxx: Simplification of register address used in qla_tmpl.c
5fa8774c7f38c79f38b672c1a0db0c049da477d6 scsi: qla2xxx: Add 28xx flash primary/secondary status/image mechanism
3f006ac342c033c795aa0ec2d0dde63975e2144b scsi: qla2xxx: Secure flash update support for ISP28XX
1710ac17547ac8b5c44fbd74de41dee3fe26ee81 scsi: qla2xxx: Fix read offset in qla24xx_load_risc_flash()
36ad35131adacc29b328b9c8b6277a8bf0d6fd5d x86/speculation: Consolidate CPU whitelists
ed5194c2732c8084af9fd159c146ea92bf137128 x86/speculation/mds: Add basic bug infrastructure for MDS
e261f209c3666e842fd645a1e31f001c3a26def9 x86/speculation/mds: Add BUG_MSBDS_ONLY
782e69efb3dfed6e8360bc612e8c7827a901a8f9 powerpc/speculation: Support 'mitigations=' cmdline option
0336e04a6520bdaefdb0769d2a70084fa52e81ed s390/speculation: Support 'mitigations=' cmdline option
0a020d416d0af0b0c782e2a8363896e756e9121e lib: introduce initial implementation of object aggregation manager
bb72e68bd1f2a86c37a990e9d905f34b712ae2b6 lib: objagg: fix typo in objagg_stats_put() docstring
204f6a8c413ec41a7ec5e3f0f0590d4318f7a1f2 lib: objagg: add root count to stats
4446eb8dbeb223031fb652dd1e58e59d3d4b4aba lib: objagg: Fix an error code in objagg_hints_get()
951d3d6fcd72f10b50e2a1182fb533dc2c9da0e5 test_objagg: Test the correct variable
e7c2e3b570442d2a50d43ba0da951329ed0c3c19 test_objagg: Uninitialized variable in error handling
fa8ba2cba7f9c75b84f82d174658d959d25d4561 lib: objagg: fix handling of object with 0 users when assembling hints
76f969e8948d82e78e1bc4beb6b9465908e74873 cgroup: cgroup v2 freezer
4c476d8cff48853645abc822154aaad208faebcc cgroup: add tracing points for cgroup v2 freezer
533307dc20a9e84a0687d4ca24aeb669516c0243 cgroup: Remove unused cgrp variable
cb2c4cd87874a7975b7b8615866b3a87bae10aab cgroup: prevent spurious transition into non-frozen state
96b9c592def5d7203bdad1337d9c92a2183de5cb cgroup: get rid of cgroup_freezer_frozen_exit()
f2b31bb598248c04721cb8485e6091a9feb045ac cgroup: never call do_group_exit() with task->frozen bit set
75d9fc7fd94eb43cdf0bec04499a27ced780af19 powerpc/powernv: move OPAL call wrapper tracing and interrupt handling to C
88ec6b93c8e7d6d4ffaf6ad6395ceb3bf552de15 powerpc/xive: add OPAL extensions for the XIVE native exploitation support
eacc56bb9de3e6830ddc169553772cd6de59ee4c KVM: PPC: Book3S HV: XIVE: Introduce a new capability KVM_CAP_PPC_IRQ_XIVE
4131f83c3d64e591014dad14c7f8070c538b9422 KVM: PPC: Book3S HV: XIVE: add a control to initialize a source
e8676ce50e224d507946b1c535bc13584e6b49ff KVM: PPC: Book3S HV: XIVE: Add a control to configure a source
13ce3297c5766b9541b6a7a255794c5168a7ae1a KVM: PPC: Book3S HV: XIVE: Add controls for the EQ configuration
5ca806474859a0e94584b3a63f9509a25758408e KVM: PPC: Book3S HV: XIVE: Add a global reset control
7b46b6169ab80f8f415a0ca2ea4aa7f1afdcc4f3 KVM: PPC: Book3S HV: XIVE: Add a control to sync the sources
e6714bd1671da9d8dfb5332075df251b746fd0fd KVM: PPC: Book3S HV: XIVE: Add a control to dirty the XIVE EQ pages
e4945b9da52b36052b7c509ca31c5ead1d165b24 KVM: PPC: Book3S HV: XIVE: Add get/set accessors for the VP XIVE state
39e9af3de5ca936098bc80ebe14401426673c208 KVM: PPC: Book3S HV: XIVE: Add a TIMA mapping
6520ca64cde71b75dae54f3fcb33517a93d82486 KVM: PPC: Book3S HV: XIVE: Add a mapping for the source ESB pages
232b984b7d55e68971962f07f1dd1d1eb1be52e0 KVM: PPC: Book3S HV: XIVE: Add passthrough support
3fab2d10588e09abd4bd7b9bacce5e4e435993f6 KVM: PPC: Book3S HV: XIVE: Activate XIVE exploitation mode
5422e95103cf9663bc86cf1056a3ea44c2e2f09e KVM: PPC: Book3S HV: XIVE: Replace the 'destroy' method by a 'release' method
6f868405faf067e8cfb6a8349890e82f74616c75 KVM: PPC: Book3S HV: XIVE: Prevent races when releasing device
1702877621ff1c8a737857b71d379510267a17db powerpc/powernv: Fix compile without CONFIG_TRACEPOINTS
38b7ca927d6a12bf4466be22a90b7d998f5ae69a net/mlx5: Expose DEVX specification
e662e14d801b01a976e58bc3f8d9fe49b9fcec3a IB/mlx5: Add DEVX support for modify and query commands
7c043e908a74ae0a935037cdd984d0cb89b2b970 IB/mlx5: Add support for DEVX query UAR
aeae94579caf77406a8a235ea33fdb67abe9a57e IB/mlx5: Add DEVX support for memory registration
f6fe01b7181be1751a5d8f19f230eb0d17b9a7b1 IB/mlx5: Add DEVX query EQN support
c59450c463695a016e823175bac421cff219935d IB/mlx5: Expose DEVX tree
d0e84c0ad39826c38a9d6881fd8f9af476a5d9a7 IB/mlx5: Add support for drain SQ & RQ
b183ee27f5fb07c8428e2fe45d5f35dac611c45d net/mlx5: Add hardware definitions for dump_fill_mkey
05f58ceba123bdb420cf44c6ea04b6db467edd1c RDMA/mlx5: Check that supplied blue flame index doesn't overflow
eff8ea8f24eac76bc21c25e4ca4ac4ee2dade846 net/mlx5: FW tracer, add hardware structures
5e022dd353b74132bf216a77b169c43e39f5be9e net/mlx5: Expose MPEGC (Management PCIe General Configuration) structures
a451733909bcb78aeeecd3066a9411297b514a0f net/mlx5: Add XRQ commands definitions
f53aaa31cce7b543e407da7e97690a700206f7b9 net/mlx5: FW tracer, implement tracer logic
48967ffdeb210266423be11f395c5dc26d3e4eda net/mlx5: FW tracer, create trace buffer and copy strings database
e9cad2cea7f0b2bea253e2681a0a3f5d3940af3c net/mlx5: FW tracer, register log buffer memory key
c71ad41ccb0c29fce95149b74786574b354c9dda net/mlx5: FW tracer, events handling
70dd6fdb8987b14f7b6105f6be0617299e459398 net/mlx5: FW tracer, parse traces and kernel tracing support
244069532fa25183c37305e002d6e26396dadeb0 net/mlx5: FW tracer, Enable tracing
3101d1fc6b8678f45f703293441715a9b5b86cad net/mlx5: FW tracer, Add debug prints
699e96ddf47fe67e28522e511f6e1bce8a20b4e1 net/mlx5e: Support offloading tc double vlan headers match
1482bd3d50d77d28961999ade98854b31b342156 net/mlx5e: Refactor tc vlan push/pop actions offloading
cc495188a8ff0d169ad7c0182acd9c08b90e29ea net/mlx5e: Support offloading double vlan push/pop tc actions
fd44e3853c0155fa82314f341f476d4793415cd2 IB/mlx5: Introduce flow steering matcher uapi object
32269441240064c7475241ae28fee787fcdf55b9 IB/mlx5: Introduce driver create and destroy flow methods
d4be3f4466b8a770ea2c3b57b942efd057fe1c19 IB/mlx5: Support adding flow steering rule by raw description
6346f0bfa07b3a4ed55b8630cf20b6f43d277b51 IB/mlx5: Add support for a flow table destination for driver flow steering
cb80fb189270e7b2c32fa470d40e951852614eb2 IB/mlx5: Enable driver uapi commands for flow steering
58b99ee3e3ebecfaccc5641a4014d92a818494a5 net/mlx5e: Add support for XDP_REDIRECT in device-out side
bccd06223f21654eb268e153426a77deb117c1e8 IB/uverbs: Add UVERBS_ATTR_FLAGS_IN to the specs language
39c64d8c876622e766dd2112baf81151dd82da02 mlx5: handle DMA mapping error case for XDP redirect
b61815e241652096b61f59ca2063edecb23602a2 IB/uverbs: Use uverbs_alloc for allocations
e8ef090a614292db01b5956a6f5467afbe6c5cf7 IB/mlx5: Destroy the DEVX object upon error flow
09adbb5dd01b197d093ec5af82785e49fa0a4a69 net/mlx5: Add memic command opcode to command checker
b4749bf25652689d8e33827460266b78bb2ec42c RDMA/mlx5: Add a new flow action verb - modify header
841eefc5cb57030ad05a0c4bc285f93ffa668ad9 RDMA/uverbs: Add generic function to fill in flow action object
08aeb97cb82483192bd8ad8e60d1b73ce1b75923 RDMA/mlx5: Add new flow action verb - packet reformat
a090d0d859ff88dd4c34614d01cee9b0603f4313 RDMA/mlx5: Extend packet reformat verbs
4adda1122c490e042d4bcb920900f796fc9423e4 RDMA/mlx5: Enable decap and packet reformat on flow tables
5c2db53f62633689632aee7be9659418b2bf291f RDMA/mlx5: Enable reformat on NIC RX if supported
b823dd6d86ce6576d229c865895d0ee5285d0363 RDMA/mlx5: Refactor raw flow creation
fa76d24ee0aa24fff3fa9ba71fc2179fb88fef6a RDMA/mlx5: Add flow actions support to raw create flow
b47fd4ffe2d6422a986f19d47563d72c79ebbc21 RDMA/mlx5: Add NIC TX namespace when getting a flow table
a7ee18bdee837e4703f01588993504b72074ffc6 RDMA/mlx5: Allow creating a matcher for a NIC TX flow table
a560f1d9af4be84ee91d1a47382cacf620eb4a79 RDMA/mlx5: Refactor transport domain bookkeeping logic
0042f9e458a560e13c1da2211cf6429e0c7dd812 RDMA/mlx5: Enable vport loopback when user context or QP mandate
443c1cf9d6c845d0dc389469b78cefec842d5868 IB/mlx5: Set uid as part of TIR commands
1cd6dbd32f986fe05fef90249996f6ba394dfc78 IB/mlx5: Set uid as part of TIS commands
5deba86ee2cddaebaa1d37ad71efcda26b626592 IB/mlx5: Set uid as part of RQT commands
d2d19121ae2f4bc4e818dd770c1746deadf14093 IB/mlx5: Set uid as part of TD commands
ba1a057da2f17411009ecfbdfde4d68bc8c1765e IB/mlx5: Set valid umem bit on DEVX
76dc5a8406bffabf3f466e331a3e9515ddf93954 IB/mlx5: Manage device uid for DEVX white list commands
7e1335a736969a8b5169629e6569779d42fcda2f IB/mlx5: Enable DEVX white list commands
3df6e0234aebc55888069997239fe2847d4cf152 IB/mlx5: Enable DEVX on IB
84a0973386c5b6739627372c3725f5826c71f70c net/mlx5e: Enable multi-queue and RSS for VF representors
f128f138cc4003c66053a5583378da90b4b3a25a net/mlx5e: Add ethtool control of ring params to VF representors
e98bedf5e61beb8ea4707e97ff9ef14d9deeb0c9 net/mlx5e: Add extack messages for TC offload failures
2351776e87a18318b5f4732e7790f0c726cc37a0 IB/mlx5: Verify DEVX object type
ba4a41198324be2e6fbb06c270fdc8500c0e38de RDMA/mlx5: Add support for flow tag to raw create flow
c83954abb221718e961802136078ba04d563cf3a net/mlx5e: Change return type of tc add flow functions
a88780a9499a3bc845f4c8c020a006cd4c973070 net/mlx5e: Split TC add rule path for nic vs e-switch
6d2a3ed011e84287c634ec2b6e4a856ce95fd729 net/mlx5e: Avoid duplicated code for tc offloads add/del fdb rule
5dbe906ff1d5040013d30df1e8c769d28af7e0f9 net/mlx5e: Use a slow path rule instead if vxlan neighbour isn't available
bf07aa730a04a375bc10d09df1e81357af1d4477 net/mlx5e: Support offloading tc priorities and chains for eswitch flows
47f07f03b5ee436fe074c4fb1fb28d013c36a0d8 IB/mlx5: Block DEVX umem from the non applicable cases
e88afe759a49f8d51d6cc5fc89d65b4a5768703f net/mlx5e: Err if asked to mirror a goto chain tc eswitch rule
d14f6f2a84326dd2751962167b2293fc91751ff8 net/mlx5e: Avoid overriding the user provided priority for offloaded tc rules
154e62abe9cd07c9b71735d8456a03a7c5251280 net/mlx5e: Properly initialize flow attributes for slow path eswitch rule deletion
c74d90c11c05bdfd78f8e29ee96b8a6f23daea99 net/mlx5: Fix offsets of ifc reserved fields
ca828cb4686f1aece8d30541e11b8e21de1a7b0e net/mlx5: EQ, Move all EQ logic to eq.c
c8e21b3b576b78fe1b07522aea046af2634a24e8 net/mlx5: EQ, Create all EQs in one place
d674a9aa434409826b2408609be493739e61e6f6 net/mlx5: EQ, irq_info and rmap belong to eq_table
f2f3df5501391bc784c8462dc97d989c2194fb74 net/mlx5: EQ, Privatize eq_table and friends
16d760839ceef510cf95cbfadc069c4473c7a277 net/mlx5: EQ, Different EQ types
7701707cb94ed4d1e63ae4fa5ef62a2345ef9db7 net/mlx5: EQ, Generic EQ
d5d284b829a6eb7127df24d1bd3896a698981e62 {net,IB}/mlx5: Move Page fault EQ and ODP logic to RDMA
6d2d6fc83a281d51863fb5d08b59333ed1b46cc1 net/mlx5: EQ, Make EQE access methods inline
0cbf432db405289216747a8d31d74bab2452337c RDMA/uverbs: Use a linear list to describe the compiled-in uapi
36e235c8829935a59d4652c878cffb08229205c2 RDMA/mlx5: Use the uapi disablement APIs instead of code
0f597ed435b9ea1296e25474b762bedceba97a50 net/mlx5: EQ, Introduce atomic notifier chain subscription API
720a936d407709dcbcf714293112667677d8c967 net/mlx5: FWTrace, Use async events chain
6933a93795590b51a3056b6d66562ca1da1557ae net/mlx5: E-Switch, Use async events chain
0cf53c1247565b339a23d82a1853a0c41e9a2a34 net/mlx5: FWPage, Use async events chain
71edc69ca1a78ce18411a540c550a4ef1eb017cd net/mlx5: CmdIF, Use async events chain
221c14f3d12489ced0f2ca8b31b2221c5dbbf145 net/mlx5: Resource tables, Use async events chain
2742bc90bc102644d67e17758e234646d91ae696 net/mlx5: CQ ERR, Use async events chain
69c1280b1f3b9123bc5154b2062507abcc14c3ef net/mlx5: Device events, Use async events chain
2c89156082b3be7a064b09dfb0bcd274609f355d net/mlx5: Improve core device events handling
bfc5d839184f53cc16d551873f9254f2d4d493be RDMA/mlx5: Attach a DEVX counter via raw flow creation
20902be46c4da59b1891d238801146134e0e06b5 net/mlx5: Driver events notifier API
7a1795553074f90d59b3250b4a9b8aaf6ca2831e net/mlx5: Allow port change event to be forwarded to driver notifiers chain
7cffaddd39b438fab49863ea4602d6294a9d657f net/mlx5e: Use the new mlx5 core notifier API
df097a278c7592873d88571a8c78f987f6ae511b IB/mlx5: Use the new mlx5 core notifier API
02039fb659b366011f55b15890136754f3d82e2d net/mlx5: Remove unused events callback and logic
134e9349ecf0e23c954e205a31f5b665ce25e5f6 IB/mlx5: Handle raw port change event rather than the software version
cb6191bf25f755f47593fc40b8fd39d3eedde884 net/mlx5: Allow forwarding event type general event as is
09e574fa76d6a47e283a7eb18ec1b0cb34174532 IB/mlx5: Handle raw delay drop general event
b8267cd765b333673e05696b517d38a1a7eb5b2e net/mlx5: Remove all deprecated software versions of FW events
451be51c0b474f790e9833cd575fd9a6fbd679df net/mlx5: Forward QP/WorkQueues resource events
4e2df04ad25ab8e627878817e56d6a27645ca4a8 net/mlx5: Forward SRQ resource events
93631211c9c07dd3e60ca8462281ff475d3b87a6 net/mlx5: Debug print for forwarded async events
26d1164dff81096c38d955f00b84a0075563d8c7 net/mlx5: Remove not-used lib/eq.h header file
c23f88cb575fe4a0b49603d7f9e5c3782886269f net/mlx5: Remove references to local mlx5_core functions
f02d0d6e53ac2c8a75b6cc87dc86675a9351d84d net/mlx5: Move SRQ functions to RDMA part
81773ce5f07fd4c3acd4bb7e918ce03a4e652a5f RDMA/mlx5: Use stages for callback to setup and release DEVX
b4990804e1a46321806df6b56e3f04f1803a03d9 RDMA/mlx5: Update SRQ functions signatures to mlx5_ib format
f3da6577da67a3cd44610ca54e308c6838c92157 RDMA/mlx5: Initialize SRQ tables on mlx5_ib
a1eb180238a71797d84bd91acfb1de1d632623c5 RDMA/mlx5: Unfold create RMP function
36ff48805ae457d79886147913ad07056780dca0 RDMA/mlx5: Unfold modify RMP function
9d43faac02e3a4a26171f96f4de69fa650d3b6f6 net/mlx5: Update mlx5_ifc with DEVX UCTX capabilities bits
34613eb1d2ad051cb02cbcf5675482340cbb9bf0 IB/mlx5: Enable modify and query verbs objects via DEVX
fb98153bbf28b627fe52f41e658ae39fa67d2684 IB/mlx5: Enforce DEVX privilege by firmware
719598c98d1961e78e2ad514a2cc15deb5e41db5 IB/mlx5: Update the supported DEVX commands
bbeb53b8b2c92fd4e5b51e8fd9ab1c4000e4d350 net/mlx5e: Move RSS params to a dedicated struct
756c41603a189e4ae9dca77c3c3d80a926d8bedf net/mlx5e: ethtool, Support user configuration for RX hash fields
419822c8b83f37ea4934d5583b5c5fbe9493cfcf IB/mlx5: Enable TX on a DEVX flow table
c2fb3db22d35f01774d0547b1d8e5085df193646 net/mlx5: Rework handling of port module events
37a12aae06fda00f36eadb168d5d7ba0be3a8c86 net/mlx5: Add support for PCIe power slot exceeded error in PME
8d6b57e6445989e9f34077ef1aac80b621029b08 net/mlx5: Add support for plugged-disabled cable status in PME
fd4572b3ff3ff57ca7fa612f9ea42b90afdd8bff net/mlx5: Add monitor commands layout and event data
6c22a11957f46ca7e9b8db20ac7c6b05441c55ed net/mlx5: Remove the get protocol device interface entry
71d82d2a90327c9c816e65471b7859b601993f89 net/mlx5e: Provide the TC filter netdev as parameter to flower callbacks
d11afc2600377c6775abcbc1fd410f199c5bf458 net/mlx5e: Propagate the filter's net device to mlx5e structures
ef381359e3a81422cee85ddee1f7dc3ac90f3c38 net/mlx5e: Replace egdev with indirect block notifications
ea7162ac3a33a44a7bb0b5793057015d25617e68 net/mlx5e: Refactor VXLAN tunnel encap offloading code
4d70564d1c9e812b83f30c8dc23cd506abfcfc08 net/mlx5e: Refactor VXLAN tunnel decap offloading code
54c177ca9c6efe5df516eefb886761b89a82eaf0 net/mlx5e: Branch according to classified tunnel type
101f4de9dd521c6d06dfdacaa35e506a8db8494b net/mlx5e: Move TC tunnel offloading code to separate source file
df2ef3bff193229973830fd3fd8acf29fa92715e net/mlx5e: Add GRE protocol offloading
f94e02ddfd88a511ed64fb68905e35d727635fea IB/mlx5: Remove duplicated include from mlx5_ib.h
a1462351b590a4fa8eed6e5bf14245425635be0d RDMA/mlx5: Fail early if user tries to create flows on IB representors
e85e02bad29e822c3ebde80e7c9e7428329c4a5b net/mlx5: E-Switch, Rename esw attr mirror count field
df65a573eab28059e5dd1d5c32ad270dcf9cbf24 net/mlx5e: Refactor eswitch flow attr for destination specific properties
f493f15534ecb5c2c295ba49a2add5822d05ae19 net/mlx5e: Move flow attr reformat action bit to per dest flags
a18e879d4e45b6aef73f42c765cd0da4b26f4260 net/mlx5e: Annul encap action ordering requirement
38c9d2697b9c0d928875ea45b5e2fd706df7ad7e net/mlx5e: Replace the split logic with extended destination
1cc26d74bb98bd9693f0e630ee1cac87d5ba9f20 net/mlx5e: Support header rewrite actions with remote port mirroring
98b66cb1c9ff6ffbc6133ed649b2731638520992 net/mlx5e: Change parse attr struct to accommodate multiple tunnel infos
79baaec71989afa805a0f2dd532451a6103e11b4 net/mlx5e: Allow association of a flow to multiple encaps
8c4dc42bf6e4ffeda49cf5e26bfc991b548fc0aa net/mlx5e: Support multiple encapsulations for a TC flow
5c7e8bbb025726f9cb9b2bc050509a94262426f8 net/mlx5e: Use monitor counters for update stats
c784a28b025a22f8c791e14096fb7079236739c0 net/mlx5e: Remove set but not used variable 'upriv'
4c8b85187c22ee65637035efd2ae0cb10836d8e8 net/mlx5: Use lowercase 'X' for hex values
06cc74af05c33091a9877b54f1821966b446003c IB/mlx5: Unify e-switch representors load approach between uplink and VFs
fadd59fc50d010145f251db583c7ccef37393d19 net/mlx5: Introduce inter-device communication mechanism
ac004b8321281b9da7d9a99674241e60e49ffc8a net/mlx5e: E-Switch, Add peer miss rules
04de7dda7394fa9c2b0fc9cec65661d9b4f0d04d net/mlx5e: Infrastructure for duplicated offloading of TC flows
f9392795e2e35449a7dca46574b1a86eace20e9c net/mlx5e: Enhance flow counter scheme for offloaded TC eswitch rules
491c37e49b48e7a18dc79e29f3ac13e0c3d0fb54 net/mlx5e: In case of LAG, one switch parent id is used for all representors
7ba58ba7ba5e19324b3879000ef341966b19727b net/mlx5e: Offload TC e-switch rules with egress LAG device
1418ddd96afdb097ab9a2fe09c94e820d596321a net/mlx5e: Duplicate offloaded TC eswitch rules under uplink LAG
7c34ec19e10c0d13ca2f3435fb85d2dddccad917 net/mlx5: Make RoCE and SR-IOV LAG modes explicit
9582466640432c86fb060a4fa4d9d3c48e708ca6 net/mlx5: Handle LAG FW commands failure gracefully
025380b20dc2a3b92a36394799157a63a2fe5814 net/mlx5e: Use single argument for the esw representor build params helper
d9ee0491c2ffbb5bc8bc418dd857a045d0d0130f net/mlx5e: Use dedicated uplink vport netdev representor
13e509a4c1949855ddd5ef2e23bafdfb27b8337a net/mlx5e: Remove leftover code from the PF netdev being uplink rep
aec002f6f82cbfb39f92605614a88dd7a200a766 net/mlx5e: Uninstantiate esw manager vport netdev on switchdev mode
b36cdb42ad4b114d4b9bbba8770d7a4b8e1a62f6 net/mlx5e: Handle port mtu/link, dcb and lag for uplink reps
073caf508822750cde02086a6ac1b9131e69692c net/mlx5e: Add sriov and udp tunnel ndo support for the uplink rep
ff9b85de5d5d292fa07869f194fd9e3966f1e720 net/mlx5e: Add some ethtool port control entries to the uplink rep netdev
8e3b688301863fba914883e3531b406c68cb7501 RDMA/mlx5: Delete unreachable handle_atomic code by simplifying SW completion
cbfdd442c43eab8c62bf2ea5127511cd39e9046d IB/uverbs: Add helper to get array size from ptr attribute
813e90b1aeaa550641332625174d57edb15bc8bd IB/mlx5: Add advise_mr() support
2acc7957dbc354f3349261c2ebc6f56aff5829e7 net/mlx5: Add shared Q counter bits
c9e585ebdc28a334b8100e560c9aaad6d4525a6e IB/mlx5: Fix compile issue when ODP disabled
4c8fb2986d44c5a75949a88ac61deec0ed50a542 net/mlx5e: Increase VF representors' SQ size to 128
a0646c88ed3ac527b71cf365b03ff4fc729d35b6 net/mlx5e: Fail attempt to offload e-switch TC flows with egress upper devices
442e1228cbaccee8a9365624608544460155c5d1 net/mlx5e: Tunnel routing output devs helper function
b168cff0b9b216e68215cdb28db999f542482a56 net/mlx5e: Fail attempt to offload e-switch TC encap flows with vlan on underlay
05ada1adb65acd533f978651e7001e3568e7b98a net/mlx5e: Tunnel encap ETH header helper function
c7bcb277bda46d75819fb2d475fa817c10dc209b net/mlx5e: Re-order route and encap header memory allocation
aa331450b81f071bc8d7b68d5baab1b78f93598a net/mlx5e: Support VLAN encap ETH header generation
e32ee6c78efa6a32bff782bbe7a9970b018996ca net/mlx5e: Support tunnel encap over tagged Ethernet
425518cc5ede0d7a71886816368e4bef60e418db IB/mlx5: Use uid as part of alloc/dealloc transport domain
6e3722baac048fdf95b867c5ee7e270718e8630d IB/mlx5: Use the correct commands for UMEM and UCTX allocation
623d154305c06c83924b8fd2afbfdeba3b396fb7 IB/mlx5: Fix wrong error unwind
4fb2f516186ea25dea326f97880431e14a5b9e9d net/mlx5e: XDP, Precede XDP-related operations in RQ poll by a loaded program check
feb2ff9d74f76a174e284255b7e537b6c090c13c net/mlx5e: XDP, Change the XDP SQ redirect indication
b8180392edd97cd5bfdf12270315a72fe601cf7e net/mlx5e: XDP, Replace boolean doorbell indication with segment pointer
fea28dd6a281045e18c1412ab5bba54436c11088 net/mlx5e: XDP, Maintain a FIFO structure for xdp_info instances
1feeab80078078186b5080fe15c51a5cce724a0e net/mlx5e: XDP, Add array for WQE info descriptors
5e0d2eef771ee78b092bf93d040eac02a0965fea net/mlx5e: XDP, Support Enhanced Multi-Packet TX WQE
6277053afa34253eb8d8d147388e4426e615bae4 net/mlx5e: XDP, Add user control for XDP TX MPWQE feature
58f7c0bfb4e111006ba376df7ab266a6d42d64ba RDMA/mlx5: Signedness bug in UVERBS_HANDLER()
5d1f7354faad4b6210fac9192d0ca4c16b00ae7e net/mlx5e: fix semicolon.cocci warnings
951d01b96f174ded6180e7e4e14929ef22e7da7e IB/mlx5: Fix how advise_mr() launches async work
c1b03c25f5c1503e2db3ac1c0e12ef3e054fa065 RDMA/mlx5: Fix flow creation on representors
6ce966fd2671899a48037abe7bf1df80a5adf029 net/mlx5e: Unblock setting vid 0 for VFs through the uplink rep
6363651d6dd79694d586f4ae68967036dd14bc3a net/mlx5e: Properly set steering match levels for offloaded TC decap rules
1651925d403e077e3fc86f961905e27c6810e132 net/mlx5e: Use the inner headers to determine tc/pedit offload limitation on decap flows
6707f74be8621ae067d2cf1c4485900e2742c20f net/mlx5e: Update hw flows when encap source mac changed
fb35c534b7881c0f7f94b01ddd95a9b17483252f net/mlx5e: Fix NULL pointer derefernce in set channels error flow
4cab346bcf74f44665d57726ec2bccff6e679619 net/mlx5: No command allowed when command interface is not ready
5400261e4d293d741c5b71a07f6eaabe2c8d3f1b net/mlx5: Fix a compilation warning in events.c
407e17b1a69a51ba9a512a04342da56c1f931df4 net/mlx5e: XDP, fix redirect resources availability check
c500c86b0c75da167b59ee82f78e394fd10cb792 net/mlx5e: support for two independent packet edit actions
73c718fbb32adc2df8a7ee00c1a880b97d547d24 net/mlx5e: Remove wrong and superfluous tc pedit header type check
97417f6182f80a80c9b4443f282ef707be74dade net/mlx5e: Fix GRE key by controlling port tunnel entropy calculation
71129676ab59dc63ba9e48a09a3386242a516751 net/mlx5e: Return the allocated flow directly from __mlx5e_add_fdb_flow
988ab9c7363a5b24e9221ea52227b65b3ce3e5db net/mlx5e: Introduce mlx5e_flow_esw_attr_init() helper
7040632df58481424dd958a26ac0fa2d97721f22 net/mlx5e: Remove 'parse_attr' argument in mlx5e_tc_add_fdb_flow()
733d4f367c34c971ce2d4f466d71ae5a189cbe5f net/mlx5e: Cleanup attach encap function
0ad060ee9c8fcf15aa9aa03965276a278247f87e net/mlx5e: Don't make internal use of errno to denote missing neigh
10a193ed78adc6667684981697b050c27a3e42db net/mlx5: Expose lag operations in header file
e6ee5e7166275073c66245043c70ec5dc819a956 net/mlx5: Use own workqueue for lag netdev events processing
724b509ca02367dbd5f5f90b0c8546280c5abc72 net/mlx5: Add multipath mode
544fe7c2e654124870e774157d99da357dce22dc net/mlx5e: Activate HW multipath and handle port affinity based on FIB events
95dc1902c3739a1a44397ea23b52b81375b711b3 net/mlx5e: Don't inherit flow flags on peer flow creation
ef06c9ee8933b182f2ecab101ed697b54171f512 net/mlx5e: Allow one failure when offloading tc encap rules under multipath
6997b1c9cace95c0e67de620a94ab6ba88d044fe net/mlx5: Emit port affinity event for multipath offloads
b4a23329e2e940cdec3b5eae781c1f7d4c669533 net/mlx5e: Re-attempt to offload flows on multipath port affinity events
316d5f72b4c1d4122f83cccbc9002e7b13660077 net/mlx5e: Always query offloaded tc peer rule counter
5fb091e8130bdd3649ca80957e59c87defbb13f9 net/mlx5e: Use hint to resolve route when in HW multipath mode
10fbb1cdd0a36347106f6522c941e67cd9c3e7c1 net/mlx5e: Set peer flow needed also for multipath
0a353c2e9435ecea39f8ffbe09dc88fd931e88fd IB/mlx5: Declare local functions 'static'
f3ffed0ce49a41cdbac5a85f42baeebe334ca9ab IB/mlx5: Make mlx5_ib_stage_odp_cleanup() static
10f56242e3158f6c17579921ebbba4a0d5188dc2 IB/mlx5: Fix the locking of SRQ objects in ODP events
36a73471e55967248a4911517ab8deb410882060 net/mlx5e: Add missing static function annotation
13859d5df418ea535926e2b57c29d5161c522b9d RDMA/mlx5: Embed into the code flow the ODP config option
96f87ee1811306d0c8cf94b8c37b0e4f725b01d1 RDMA: Clean structures from CONFIG_INFINIBAND_ON_DEMAND_PAGING
e355477ed9e4f401e3931043df97325d38552d54 net/mlx5: Make mlx5_cmd_exec_cb() a safe API
a6bc3875f176f52c4a247c341e80d52dd4f5e356 IB/mlx5: Protect against prefetch of invalid MR
8b4d5bc5cf3f813dc4df5d69c2fcde16c40d8abd RDMA/mlx5: Introduce and reuse helper to identify ODP MR
81dd4c4be3a765351189c7572ac963711d2bb652 IB/mlx5: Validate correct PD before prefetch MR
5b33eba99fbcf467b913d444dd65313c27623b1a net/mlx5e: Properly get the PF number phys port name ndo
fa31f14380bea60ccc9d7a314e0cb61f6984627f IB/mlx5: DEVX handling for indirection MKEY
534fd7aac56a7994d16032f32123def9923e339f IB/mlx5: Manage indirection mkey upon DEVX flow for ODP
0da4d48d99dfdb2a69172079f6a56e22689d16ce IB/mlx5: Fix bad flow upon DEVX mkey creation
f84b66b9cce78e8f9d38204fdaa75f07c75f4911 net/mlx5: Fix DCT creation bad flow
c5ae1954c47d3fd8815bd5a592aba18702c93f33 IB/mlx5: Use mlx5 core to create/destroy a DEVX DCT
8998576bd9c695ef1297540a50d7b3abbc69286b net/mlx5e: Allow IPv4 ttl & IPv6 hop_limit rewrite for all L4 protocols
84be899f6fd233ff2aeaf14cc43e6457425122b2 net/mlx5e: Correctly use the namespace type when allocating pedit action
7f1a546e322287ae948e0f5eb8d12b7b638d93a6 net/mlx5e: Consider tunnel type for encap contexts
12fc512f5741443a03adde2ead20724da8ad550a net/mlx5e: Fix use-after-free after xdp_return_frame
092ead48290b43afe5d548797c73b179dbaf6523 net/mlx5: Fix compilation warning in eq.c
ee576ec1c1c66ec1cd0c4735bb12bc08f675f530 net/mlx5e: Fix compilation warning in en_tc.c
bdde9311499491fb75fd1880e4789cf7e60cd691 net/mlx5e: Remove redundant assignment
e5c1bb47cca679e9b9e286981d64fd08792e1e80 IB/mlx5: Remove set but not used variable
fd4f227dea0f24d89f52f7c4eb3207f84ddcbcbd bpf: offload: allow program and map sharing per-ASIC
d7ff7ec573860dc654fa4c8641684ba3db03004e nfp: flower: allow matching on ipv4 UDP tunnel tos and ttl
b5f0cf08340090d1503dbdbfd797e32264974100 nfp: flower: prevent offload if rhashtable insert fails
9b8ca3795199f333269859b0c8393f810b9616a3 tools: bpf: synchronise BPF UAPI header with tools
92b57121ca79b286bef4f304e887272f3f2d86bb bpf: btf: export btf types and name by offset from lib
2d3feca8c44f315624b7c0f5b8361e2f54405c12 bpf: btf: print map dump and lookup with btf info
2cc512c1fa1ee99879d55d1cb4e3fd0e6eab35b3 bpf: btf: fix inconsistent IS_ERR and PTR_ERR
6534770d6f176093b50896961107b2d545ef38f0 tools: bpf: fix BTF code added twice to different trees
736b46027eb4a4c602d3b8b93d2f48c9facbd915 net: Add ID (if needed) to sock_reuseport and expose reuseport_lock
2dbb9b9e6df67d444fbe425c7f6014858d337adf bpf: Introduce BPF_PROG_TYPE_SK_REUSEPORT
1a86ad89da1c06b2a326953309dcb99f0d079a32 tools/bpf: bpftool: add btf percpu map formated dump
f7010770fbac47b1fc9fb723b1d2019eb23c04f2 tools/bpf: move bpf/lib netlink related functions into a new file
36f1678d9e0b5d2e0236046d9659e0348b4719a8 tools/bpf: add more netlink functionalities in lib/bpf
ad3338d2508cd7752accdd39881deced1ec2b8a1 tools/bpf: bpftool: support prog array map and map of maps
9d0b3c1f1451d1b9a33de3c70ae3d50ccd77db1a tools/bpf: fix a netlink recv issue
d58e468b1112dcd1d5193c0a89ff9f98b5a3e8b9 flow_dissector: implements flow dissector BPF hook
50b3ed57dee9cd0e06c59826cec8af14b51bab3e selftests/bpf: test bpf flow dissection
2dfd184abd38fd72d80715fa8b00c9de78490200 flow_dissector: fix build failure without CONFIG_NET
c64b7983288e636356f7f5f652de4813e1cfedac bpf: Add PTR_TO_SOCKET verifier type
fd978bf7fd312581a7ca454a991f0ffb34c4204b bpf: Add reference tracking to verifier
3bd43a8c91cba0493e507ed7baefa9b5613c28a9 bpf: Sync bpf.h uapi to tools/
2f965e3fcd4b4159a5ea832d4b5e9ff2550fa571 bpf: sync bpf.h uapi with tools/
25025e0aab2f91a93a1557b299a79814559b4dc2 bpf: sync include/uapi/linux/bpf.h to tools/include/uapi/linux/bpf.h
7723628101aaeb1d723786747529b4ea65c5b5c5 bpf: Introduce bpf_skb_ancestor_cgroup_id helper
6acc9b432e6714d72d7d77ec7c27f6f8358d0c71 bpf: Add helper to retrieve socket in BPF
434fe9d4b4bfa8becb0959ef32b9b9fa628ef6fe libbpf: Move __dump_nlmsg_t from API to implementation
aae57780107d92de2463e605cb054656ebd233d1 libbpf: Consistent prefixes for interfaces in libbpf.h.
f04bc8a436e1b32f842a631ff889954bdf56b720 libbpf: Consistent prefixes for interfaces in nlattr.h.
eff8190880c005e754d7d1bd315fc53a3ae9f876 libbpf: Make include guards consistent
1bc38b8ff6cc54b1cd925525c0a9ffa7eef4d23b libbpf: relicense libbpf as LGPL-2.1 OR BSD-2-Clause
18a781daa93e67b795976353a6b5d120939c50bc tools/bpf: bpftool, split the function do_dump()
8ec92dc22e0e3460cfd29263731c6214d283ea28 tools/bpf: bpftool, print strerror when map lookup error occurs
4f775448f4d79e2db5791fcc3aa708373497d7e6 bpf: make TC vlan bpf_helpers avail to selftests
97396ff0bc2d31f8fcb29cbb57d2e0bbcb96d6c5 selftests/bpf: add XDP selftests for modifying and popping VLAN headers
d3c72d7a20d8ebb0618d06fc49e83a4d74d96205 selftests: bpf: add config fragment LWTUNNEL
604326b41a6fb9b4a78b6179335decee0365cd8c bpf, sockmap: convert to generic sk_msg interface
d829e9c4112b52f4f00195900fd4c685f61365ab tls: convert to generic sk_msg interface
d3b18ad31f93d0b6bae105c679018a1ba7daa9ca tls: add bpf support to sk_msg handling
eea0d2adcf112dd9e5d9a13779c0ab262583444d bpf, doc: add maintainers entry to related files
ab9e084821221b2eda57a512535fe35b49e672d8 libbpf: Per-symbol visibility for DSO
8734a162c13b1a893e7dff8de0df81fed04c51a6 bpf: skmsg, improve sk_msg_used_element to work in cork context
3f4c3127d332000530349db4843deece27fe5e0c bpf: sockmap, fix skmsg recvmsg handler to track size correctly
02c558b2d5d679fbbcaa5b9689484c7e0f8abb7b bpf: sockmap, support for msg_peek in sk_msg with redirect ingress
f1a2e44a3aeccb3ff18d3ccc0b0203e70b95bd92 bpf: add queue and stack maps
43b987d23d6bd08db41a9c4a85aacfb3f0b2a94c selftests/bpf: add test cases for queue and stack maps
da4e1b15f67613eca7ae998abd996cfee7cff1ba Sync uapi/bpf.h to tools/include
f908d26b2c41d9a924371099c4979e4b5d385165 bpf: libbpf support for msg_push_data
3dca21156b5f809510e8c3efe7f1046e27242e3d bpf, libbpf: simplify and cleanup perf ring buffer walk
a3f49d97c22022666fb94101454520a7adacaf08 selftests/bpf: add config fragments BPF_STREAM_PARSER and XDP_SOCKETS
5d66fa7d9e9e9399ddfdc530f352dd6f7c724485 bpf: fix direct packet access for flow dissector progs
d5563d367c2ce48ea3d675c77f7109f37311943d bpf: fix cg_skb types to hint access type in may_access_direct_pkt_data
80b0d86a176cab6201719b8dfd806902b0c6e046 bpf: fix direct packet write into pop/peek helpers
d3f66e4116aff8dd0d5bd4067295b9ddb5e2c29c bpf: fix leaking uninitialized memory on pop/peek helpers
ede95a63b5e84ddeea6b0c473b36ab8bfd8c6ce3 bpf: add bpf_jit_limit knob to restrict unpriv allocations
b31d30d9be32d41bef3e6076a965565d3a3d8005 tools/bpf: add unlimited rlimit for flow_dissector_load
4d31f30148cea6e97e42616231eed55295117fe7 bpf: don't set id on after map lookup with ptr_to_map_val return
bf598a8f0f771302d4ecb0ef0003c54732221597 bpftool: Improve handling of ENOENT on map dumps
6dc18fa6f4cad69c892d6fb9499f7e41c6a88a8e bpf: call finalize() from its callback in struct bpf_offload_dev
108d50a976db70c59e6f2fc58d3252fd38ef3fc4 selftests/bpf: rename flow dissector section to flow_dissector
0c19a9fbc9cdba29c7effb34fd5a97226bf934e6 libbpf: cleanup after partial failure in bpf_object__pin
fd734c5cca62b7630703244d3613be135d646a0e libbpf: bpf_program__pin: add special case for instances.nr == 1
33a2c75c55e24aa30ff9fed805ae8bea13c1e2a3 libbpf: add internal pin_name
a83d6e76a67424ebbbbed643f51e97934ffc2bc2 bpf: libbpf: Fix bpf_program__next() API
df3f94a0bbeb6cb6a02eb16b8e76f16b33cb2f8f bpf: fix building without CONFIG_INET
67e89ac32828a29adc74e5c9bd59bd70943466f0 bpf: Fix dev pointer dereference from sk_skb
d71019b54bff4b8f52903e354bf3b8cb2b4dfa75 net: core: Fix build with CONFIG_IPV6=m
8a615c6b0352a9ec56151b6c95d68e0a2eef5cf0 bpf: Allow sk_lookup with IPv6 module
5ef0ae84f02a4dbe0e09f89c6481ac13649cb19b bpf: Fix IPv6 dport byte-order in bpf_sk_lookup
6fff607e2f14bd7c63c06c464a6f93b8efbabe28 bpf: sk_msg program helper bpf_msg_push_data
d8fd9e106fbc291167ebb675ad69234597d0fd98 bpf: fix wrong helper enablement in cgroup local storage
7246d8ed4dcce23f7509949a77be15fa9f0e3d28 bpf: helper to pop data from messages
c8123ead13a5c92dc5fd15c0fdfe88eef41e6ac1 bpf: Extend the sk_lookup() helper to XDP hookpoint.
b13b8787c95c156b093305e9f006a6fb7d9119b1 bpf: Fix IPv6 dport byte order in bpf_sk_lookup_udp
6c49e65e0d462963b4fac97ebd87014342167027 bpf: Support socket lookup in CGROUP_SOCK_ADDR progs
592ee43faf860c1f2c0a4c11838db6fdb974bb78 bpf: fix null pointer dereference on pointer offload
608114e441ad3a4fa1fced4d6d00653a34765eee tools: sync linux/bpf.h
838e96904ff3fc6c30e5ebbc611474669856e3c0 bpf: Introduce bpf_func_info
cc19435cb2ee34a3663f0be69f3a4647795b0417 tools/bpf: sync kernel uapi bpf.h header to tools directory
2993e0515bb44e157c17c9ba7309ba46366b6add tools/bpf: add support to read .BTF.ext sections
d7f5b5e051554c91bab995b67101af4625af591a tools/bpf: refactor to implement btf_get_from_id() in lib/bpf
f6161a8f3036caa45f225486be39783e99e0fa29 bpf: fix a compilation error when CONFIG_BPF_SYSCALL is not defined
462c124c590fe633564192dbfa26e99af788a67c bpf: fix a libbpf loader issue
8c4905b995c649ac71e21611abc2fcefc904b56a libbpf: make sure bpf headers are c++ include-able
47eff61777c7b2db58805f974994713c8acbe9a6 bpf, libbpf: introduce bpf_object__probe_caps to test BPF capabilities
5b32a23e1d879b78ee72144311314eccf7581bf4 bpf: libbpf: don't specify prog name if kernel doesn't support it
addb9fc90f13898e7779da54f471792e3dfb0d55 bpf: adding support for map in map in libbpf
b1957c92eba5acad7d8a0a6f968561e08714e978 bpf: adding tests for map_in_map helpber in libbpf
813961de3ee6474dd5703e883471fd941d6c8f69 bpf: fix integer overflow in queue_stack_map
f11216b24219ab26d8d159fbfa12dff886b16e32 bpf: add skb->tstamp r/w access from tc clsact and cg skb progs
47ae7e3d0be539c6af83b7b349ece31a18001aa6 libbpf: make bpf_object__open default to UNSPEC
ba64e7d8525236aa56ab58ba3a3a71615c4ee289 bpf: btf: support proper non-jit func info
1d2f44ca342445f7da56555ca7a43d19aac8996a libbpf: Name changing for btf_get_from_id
306b267cb3c4c2a3d12138041fed10478804da82 libbpf: Verify versioned symbols
d913a2273a8988cd810a031bfa08249ca7dd5f7c bpf: add msg_pop_data helper to tools
295daee4ba108a025b9ac66231b0700e18ff5315 selftests/bpf: add config fragment CONFIG_FTRACE_SYSCALLS
1ad93ab10e24856ea1ae9f0fd3352992afa67e1b bpf: Fix various lib and testsuite build failures on 32-bit.
f71c6143c2038df1cb43a4b9c90740d14f77467c bpf: Support sk lookup in netns with id 0
d74286d2c25ad29dbf9e342955dd8dc31f21653b bpf: Improve socket lookup reuseport documentation
e9ee9efc0d176512cdce9d27ff8549d7ffa2bfcd bpf: Add BPF_F_ANY_ALIGNMENT.
c7665702d3208b77b8e00f0699b6b88241b04360 bpf: Adjust F_NEEDS_EFFICIENT_UNALIGNED_ACCESS handling in test_verifier.c
e3da08d057002f9d0831949d51666c3e15dc6b29 bpf: allow BPF read access to qdisc pkt_len
64a975913b311e5192a76cd10721d4565c9addd1 libbpf: add bpf_prog_test_run_xattr
dc002bb62f10c5905420f8b8a7d5ec0da567fc82 bpf: add __weak hook for allocating executable memory
7337224fc150b3b762190425399ac0e8dee380d1 bpf: Improve the info.func_info and info.func_info_rec_size behavior
d30d42e08c76cb9323ec6121190eb026b07f773b bpf: Change insn_offset to insn_off in bpf_func_info
555249df711b146a2898949ac80503be29fe7340 bpf: tools: Sync uapi bpf.h for the name changes in bpf_func_info
84ecc1f98ca7ce28ede9bc5cc70a557fdfa09caa bpf: Expect !info.func_info and insn_off name changes in test_btf/libbpf/bpftool
13e56ec2cc9860aa22e01ffc7a3160f35a96b728 selftests/bpf: use thoff instead of nhoff in BPF flow dissector
ec3d837aac5dca7cb8a69c9f101690c182da79c4 net/flow_dissector: correctly cap nhoff and thoff in case of BPF
c454a46b5efd8eff8880e88ece2976e60a26bf35 bpf: Add bpf_line_info support
ee491d8dbe496c510fa06a786460638d78428147 bpf: tools: Sync uapi bpf.h
05687352c600930058ca4c68048302502e07a572 bpf: Refactor and bug fix in test_func_type in test_btf.c
4d6304c763551cdb420201b1b754cc625d56bdd6 bpf: Add unit tests for bpf_line_info
f0187f0b17fad7439f510eff4d65606c9ea1190f bpf: libbpf: Refactor and bug fix on the bpf_func_info loading logic
3d65014146c69bbc4d2947f60dbd722d352cdc46 bpf: libbpf: Add btf_line_info support to libbpf
b053b439b72ad152257ecc3f71cfb4c619b0137e bpf: libbpf: bpftool: Print bpf_line_info during prog dump
01d3240a04f4c09392e13c77b54d4423ebce2d72 media: bpf: add bpf function to report mouse movement
10a5ce98539948affbdc28dc0f39a1b6b2307f9d bpf: bpftool: Fix newline and p_err issue
11d8b82d2222cade12caad2c125f23023777dcbc bpf: rename *_info_cnt to nr_*_info in bpf_prog_info
b4f8623c0cefdfb818f99b3eb3c1e4c7708dd84e tools/bpf: sync kernel uapi bpf.h to tools directory
cfc542411bd40ff4f8a70b3d061bd6acdfb05629 tools/bpf: rename *_info_cnt to nr_*_info
fdadd04931c2d7cd294dc5b2b342863f94be53a3 bpf: fix bpf_jit_limit knob for PAGE_SIZE >= 64K
9a1126b63190e2541dd5d643f4bfeb5a7f493729 bpf: add bpffs pretty print for cgroup local storage maps
9e794163a69c103633fefb10a3879408d4e4e2c8 bpf: Remove bpf_dump_raw_ok() check for func_info and line_info
177e77169b0b71587c74382d5f2207a16da34790 bpf: Remove !func_info and !line_info check from test_btf and bpftool
c872bdb38febb4c31ece3599c52cf1f833b89f4e bpf: include sub program tags in bpf_prog_info
cf2c6f08632f127fcab808224f80ea1d3709f242 bpf: Sync tools/include/uapi/linux/bpf.h
23127b33ec80e656921362d7dc82a0064bac20a2 bpf: Create a new btf_name_by_offset() for non type name use case
d9762e84ede3eae9636f5dbbe0c8f0390d37e114 bpf: verbose log bpf_line_info in verifier
8c03ecf712f5bbbb9d353ed69715aef3cc2b4029 tools: bpftool: fix warning on struct bpf_prog_linfo definition
9d5f9f701b1891466fb3dbb1806ad97716f95cc3 bpf: btf: fix struct/union/fwd types with kind_flag
ffa0c1cf59596fba54546ea828305acfcc2cf55e bpf: enable cgroup local storage map pretty print with kind_flag
07a09d1b73c9651289d35449460d10e195e2f197 bpf: libbpf: fix memleak by freeing line_info
0d7410ea6efcdfda56773999f692bbd5d4e4bc00 tools/bpf: check precise {func, line, jited_line}_info_rec_size in test_btf
3bdbd0228e7555ec745e08469b98e5a0966409d6 bpf: sockmap, metadata support for reporting size of msg
76c43ae84e3f455e0b460ed0c43799e018d09ee9 bpf: log struct/union attribute for forward type
0bd72117fba2dd51a65eaa7b480adc0eea9a4409 bpf: fix up uapi helper description and sync bpf header with tools
fdbaa0beb78b7c8847e261fe2c32816e9d1c54cc bpf: Ensure line_info.insn_off cannot point to insn with zero code
e30f5640e32455e02ba08983ebe0b46054f1f6f0 bpf: Add BPF_LD_IMM64 to the line_info test
5a8d5209ac0228c9cf8f335dfdfffa71c54b3201 selftests: bpf: add trivial JSET tests
489c066cfdf1cad776c5e041f32a2e3cdb05050a selftests: bpf: add missing executables to .gitignore
7a69c0f250568e6ab72f401b2c69aa0e666c94f2 bpf: skmsg, replace comments with BUILD bug
51199405f967207de372d9b60989eb87d7ae8809 bpf: skb_verdict, support SK_PASS on RX BPF path
552de91068828daef50a227a665068cf8dde835e bpf: sk_msg, fix socket data_ready events
a136678c0bdbb650daff5df5eec1dab960e074a7 bpf: sk_msg, zap ingress queue on psock down
0608c69c9a805c6264689d7eab4203eab88cf1da bpf: sk_msg, sock{map|hash} redirect through ULP
28cb6f1eaffdc5a6a9707cac55f4a43aa3fd7895 bpf: tls_sw, init TLS ULP removes BPF proto hooks
7fa4bd739fc0fa209fa5120383aab17f6e9600f7 bpf: fix segfault in test_verifier selftest
17e3ac812541f73224299d8958ddb420c2d5bbd8 bpf: fix bpffs bitfield pretty print
73ab1cb2de9e3efe7f818d5453de271e5371df1d umh: add exit routine for UMH process
86edaed379632e216a97e6bcef9f498b64522d50 bpf: libbpf: retry loading program on EAGAIN
d623876646be119439999a229a2c3ce30fd197fb bpf: Fix narrow load on a bpf_sock returned from sk_lookup()
3f6e138d41ddff196f452993528cfe75762ede0f bpf: fix build error with clang
808c43b7c7f70360ed7b9e43e2cf980f388e71fa cgroup: Simplify cgroup_ancestor
d0e13a1488ad30dc3c2c9347b931cb10f892e3a4 flow_dissector: lookup netns by skb->sk if skb->dev is NULL
5032d079909d1ac5c2535acc32d5f01cd245d8ea bpf: skmsg, fix psock create on existing kcm/tls port
27b31e68bc9fc25c519c7772fa23913687218d5f bpf: tcp_bpf_recvmsg should return EAGAIN when nonblocking and no data
b7df9ada9a7700dbcca1ba53d217c01e3d48179c bpf: fix pointer offsets in context for 32 bit
65a10e28aee72903a41670170cd5330ad73c490e tls: Do not call sk_memcopy_from_iter with zero length
5c1e7e94a7faca70760f5a2939c6a6bb0e18a5d4 Prevent overflow of sk_msg in sk_msg_clone()
8c76e77f9069f10505c08e02646c3ee11ad79038 tap: call skb_probe_transport_header after setting skb->dev
32eb67b93c9e3cd62cb423e30b090cdd4aa8d275 net: tls: Save iv in tls_rec for async crypto requests
8461ef8b7ef286212ca954d8b82dac3ceecb219d tools/bpf: move libbpf pr_* debug print functions to headers
9d100a19ffa519b17a0e998918337da5386e47fb tools/bpf: print out btf log at LIBBPF_WARN level
1bf4b05810fe38c5f09973295e8d4234a4fd5d87 tools: bpftool: add probes for eBPF program types
f99e166397f0298fe78bce24c55c6d074f9bf196 tools: bpftool: add probes for eBPF map types
2d3ea5e85dd867712ba8747cb01c2d88376ead5c tools: bpftool: add probes for eBPF helper functions
d267cff46753b0e8b2f169ff4a3f1bb40c2387a8 tools: bpftool: add C-style "#define" output for probes
f9499fedf28547b496066b65de9180eaf3a7dc50 tools: bpftool: add probes for a network device
df5d22facd78e475da2e0d506f239e32cdffaf99 libbpf: introduce bpf_map_lookup_elem_flags()
f3cea32d56e96c510af454616104e3979f7626dd libbpf: Add a helper for retrieving a map fd for a given name
50db9f0731889b9f3839cab5f44163733eb44f04 libbpf: Add a support for getting xdp prog id on ifindex
b8dcf8d149db5999d3db937822d3e374eca68b9f tools/bpf: expose functions btf_ext__* as API functions
96408c43447aff5091a6938f29d8b6f2d0aa2064 tools/bpf: implement libbpf btf__get_map_kv_tids() API function
f7748e2952387f1a67db3bc618050149427420c9 tools/bpf: silence a libbpf unnecessary warning
69eaab04c675ef2d0127a80b3395aa90dfd1061f btf: extract BTF type size calculation
d5caef5b56555bfa2ac0cf730f075864a023437e btf: add BTF types deduplication algorithm
9c651127445c2fb3dca7b000bce6de97290288ff selftests/btf: add initial BTF dedup tests
d29d87f7e61226c339d1212beff6b82f653acd67 btf: separate btf creation and loading
94850257cf0f88b20db7644f28bfedc7d284de15 tls: Fix tls_device handling of partial records
7463d3a2db0efea3701aab5eeb310e0d8157aff7 tls: Fix write space handling
f38a1f0a5a5710b14c0e899628c815522c6111cf libbpf: handle BTF parsing and loading properly
4504ab0e6eb801555368cbb3011ab0530f659d4b net/tls: Inform user space about send buffer availability
35b71a34ada62c9573847a324bf06a133fe11b11 net/tls: don't leak partially sent record in device mode
903f1a187776bb8d79b13618ec05b25f86318885 net/tls: fix build without CONFIG_TLS_DEVICE
88c80bee883e7687d2672f84fd6d0fa1cee3d348 net/tls: remove set but not used variables
c42253cc88206fd0e9868c8b2fd7f9e79f9e0e03 bpf: sockmap remove duplicate queue free
cabede8b4f2b746232aa25730a0b752de1cb82ca bpf: sockmap fix msg->sg.size account on ingress skb
5fa2ca7c4a3fc176f31b495e1a704862d8188b53 bpf, tcp: correctly handle DONT_WAIT flags and timeo == 0
9acea337ef570faa14f13232d1b2fa6615aaf569 selftests/bpf: skip verifier tests for unsupported map types
6f1ae8b6628b9e054d3a8c959cf472234944a578 tools/bpf: simplify libbpf API function libbpf_set_print()
a8a1f7d09cfc7e18874786c7634c9e71384fcd4e libbpf: fix libbpf_print
3d8669e63751b7a3f8fac109cd350c5f6c14e3e1 tools/libbpf: signedness bug in btf_dedup_ref_type()
91097fbee4c025ac72f91ae41feba3a822cc1316 btf: fix bug with resolving STRUCT/UNION into corresponding FWD
1d382264d911d91a8be5dbed1f0e053eb3245d81 bpf, libbpf: fix version info and add it to shared object
83d163124cf1104cca5b668d5fe6325715a60855 bpf: verifier: propagate liveness on all frames
aaa5d90b395a72faff797b00d815165ee0e664c0 net: use indirect call wrappers at GRO network layer
028e0a4766844e7eeb31b93479ea6dd40cfc2895 net: use indirect call wrappers at GRO transport layer
4f24ed77dec9b067d08f7958a287cbf48665f35e udp: use indirect call wrappers for GRO socket lookup
f5737cbadb7d07c4f71fc5f073ccc7d8d8985a8f net: use indirect calls helpers for ptype hook
0e219ae48c3bbf382ef96adf3825457315728c03 net: use indirect calls helpers for L3 handler hooks
97ff7ffb11fe7a859a490771e7ce23f1f335176b net: use indirect calls helpers at early demux stage
dac9c9790e542777079999900594fd069ba10489 net: Add extack to nlmsg_parse
6ba1e6e856ab0531c5e0a5ecefc9fff8490d9a04 net/ipv6: Refactor address dump to push inet6_fill_args to in6_dump_addrs
89d35528d17d25819a755a2b52931e911baebc66 netlink: Add new socket option to enable strict checking on dumps
c33078e3dfb194489b2f0875f078dc76647cfecf net/ipv4: Update inet_dump_ifaddr for strict data checking
ed6eff11790a5bf1ce9b0421667e46ab1cf368f4 net/ipv6: Update inet6_dump_addr for strict data checking
905cf0abe8c2c892313f08e38d808eee4e794987 rtnetlink: Update rtnl_dump_ifinfo for strict data checking
51183d233b5a5f1cfe2a782c86d6fcfc187173fe net/neighbor: Update neigh_dump_info for strict data checking
8dfbda19a21b30475b7e6dcf2141a98ed2a19af5 rtnetlink: Move input checking for rtnl_fdb_dump to helper
8c6e137fbc7f207cd1e3f3080bfad0d4fd538254 rtnetlink: Update rtnl_fdb_dump for strict data checking
22e6c58b8c2843337ec4e8464b1ce6e869ca5bf4 netlink: Add answer_flags to netlink_callback
1c98eca412e1f183070e76d103a296d7afccfd64 net/ipv4: Move loop over addresses on a device into in_dev_dump_addr
fe884c2be0b329042eaf0371ebdbb636ba3ccc39 net/ipv6: Remove ip_idx arg to in6_dump_addrs
5fcd266a9f64bc75707f7ddc96427f2e8caaacd5 net/ipv4: Add support for dumping addresses for a specific device
6371a71f3a3b2bc47880dd76c2f176495802d0df net/ipv6: Add support for dumping addresses for a specific device
d7e38611b81e6d7e14969c361f2b9fc07403a6c3 net/ipv4: Put target net when address dump fails due to bad attributes
242afaa6968cde96824247ab984c24c466ca29f3 net/ipv6: Put target net when address dump fails due to bad attributes
c0fde870d96e42bbdcc0d9af7ae5e190c767aab8 neighbor: NTF_PROXY is a valid ndm_flag for a dump request
4565d7e5a300fcc3a41d40dbcf7ff9d1fe316814 rtnetlink: Move ifm in valid_fdb_dump_legacy to closer to use
bf4cc40e9343bbe6c7400ff6f4feb46fb9338087 net/{ipv4,ipv6}: Do not put target net if input nsid is invalid
7c1e8a3817c55d73b27cc29b84075999c8894179 netlink: fixup regression in RTM_GETADDR
1518039f6b5ac794313c24c76f85cead0cd60f6c net/ipv6: don't return positive numbers when nothing was dumped
785bd550c4fb0e12cb29dd24cf0a0be103f145a0 devlink: add generic info version names
14fd1901e718138b22ae7cbd8995bfdeb4df578f devlink: add a generic board.manufacture version name
880ee82f0313453ec5a6cb122866ac057263066b devlink: Add health reporter create/destroy functionality
c7af343b4e33578b7de91786a3f639c8cfa0d97b devlink: Add health report functionality
ff253fedab961b22117a73ab808fcfa9e6852b50 devlink: Add health get command
6f9d56132eb6d2603d4273cfc65bed914ec47acb devlink: Add health set command
fcd852c69d776c0f46c8f79e8e431e5cc6ddc7b7 devlink: Add health recover command
8a66704a13d9713593342e29b4f0c19762f5746b devlink: Add health diagnose command
12bd0dcefe88782ac1c9fff632958dd1b71d27e5 devlink: Add health dump {get,clear} commands
a0a21adb6a935c24111ae3a68ed406025753ce98 devlink: Update reporter state to error even if recover aborted
574b1e1f457c631d356e55aaef26ee638a96d548 devlink: Modify reply of DEVLINK_CMD_HEALTH_REPORTER_GET
54719527fd06e80fce52b98537414035cd21e8d4 devlink: Rename devlink health attributes
76726ccb7f461c83040e7082cf95fe1dea2afd1f devlink: add flash update command
8217ca653ec601246832d562207bc24bdf652d2f bpf: Enable BPF_PROG_TYPE_SK_REUSEPORT bpf prog in reuseport selection
e224c390a6259c529f7b2a6bd215a087b3344f5c bpf: fix SO_MAX_PACING_RATE to support TCP internal pacing
1d79895aef18fa05789995d86d523c9b2ee58a02 sk_msg: Always cancel strp work before freeing the psock
4597b62f7a60d912a2bd00ca574e6bc7b87be905 net: filter: mark expected switch fall-through
bd8e1afe6436558de3a7b25eaef34b69d98e5719 selftests: add dummy xdp test helper
e8e3437762ad938880dd48a3c52d702e7cf3c124 bpf: Stop the psock parser before canceling its work
014894360ec95abe868e94416b3dd6569f6e2c0c bpf: sockmap, only stop/flush strp if it was enabled at some point
b1c17a9a353878602fd5bfe9103e4afe5e9a3f96 flow_dissector: disable preemption around BPF calls
f7355a6c049711ecfbeed573e43d48bee7acb83a bpf: Check sk_fullsock() before returning from bpf_sk_lookup()
9b28ae243ef3b13d8a88b5451d025475c75ebdef bpf: fix out-of-bounds read in __bpf_skc_lookup
a36e185e8c85523413c1ae3e03a0bdde5501f403 udp: Handle ICMP errors for tunnels with same destination port on both endpoints
0a90478b93a46bdcd56ba33c37566a993e455d54 ipv4: not do cache for local delivery if bc_forwarding is enabled
ca96534630e2edfd73121c487c957b17eca3b7d7 openvswitch: check for null pointer return from nla_nest_start_noflag
8203e2d844d34af247a151d8ebd68553a6e91785 net: clear skb->tstamp in forwarding paths
ec90ad334986fa5856d11dd272f7f22fa86c55c4 ipv6: Consider sk_bound_dev_if when binding a socket to a v4 mapped address
d4a7e9bb74b5aaf07b89f6531c080b1130bdf019 ipv6: Take rcu_read_lock in __inet6_bind for mapped addresses
61fb0d01680771f72cc9d39783fb2c122aaad51e ipv6: prevent possible fib6 leaks
f4b6bcc7002f0e3a3428bac33cf1945abff95450 net: devlink: turn devlink into a built-in
7a474c36586f4277f930ab7e6865c97e44dfc3bc xfrm: policy: increment xfrm_hash_generation on hash rebuild
6ed69184ed9c43873b8a1ee721e3bf3c08c2c6be xfrm: Reset secpath in xfrm failure
0ed3015c9964dab7a1693b3e40650f329c16691e selftests/tls: Fix recv(MSG_PEEK) & splice() test cases
fda497e5f5b89ac3b2b3715e2571021c2ad55234 Optimize sk_msg_clone() by data merge to end dst sg entry
f3de19af0f5b18dcbb6d445db02120656ebf9cfb net/tls: remove unused function tls_sw_sendpage_locked
01cb8a1a6445e3dcb4ea949ad6771890f224b46d net/tls: Make function tls_sw_do_sendpage static
692d7b5d1f9125a1cf0595e979e3b5fb7210547e tls: Fix recvmsg() to be able to peek across multiple records
63a6b3fee428aeb0288670fc061fa9559b5aca1b net/tls: build_protos moved to common routine
76f7164d02d4c596b396fc2e868276d1db3c5e1e net/tls: free ctx in sock destruct
fb99bce7120014307dde57b3d7def6977a9a62a1 net: tls: Support 256 bit keys
a2ef9b6a22bd22841bde53e52cc50476fb4d1a5d net: tls: Refactor tls aad space size calculation
fedf201e12960bd2fab0596422851b20a8d80d20 net: tls: Refactor control message handling on recv
130b392c6cd6b2aed1b7eb32253d4920babb4891 net: tls: Add tls 1.3 support
8debd67e79daf655820557c51222004d0c43af43 net: tls: Add tests for TLS 1.3
5b053e121ffdec851dc3a7046e9bece287a3c5b1 net: tls: Set async_capable for tls zerocopy only if we see EINPROGRESS
8497ded2d16caabad1d9be7e7ec9b085e48ddfe4 net/tls: Disable async decrytion for tls1.3
c0ab4732d4c658f74eb929d3f615d390f03d660c net/tls: Do not use async crypto for non-data records
4509de14680084141d3514c3b87bd9d070fc366d net/tls: Move protocol constants from cipher context to tls context
2b794c4098b525836e37d16045abee3091fdfe18 tls: Return type of non-data records retrieved using MSG_PEEK in recvmsg
7754bd63ed081fa7c0aedd79ae0e8003465b641b tls: Fix mixing between async capable and async
d069b780e367149a42d92be85ab21ac8c0281aad tls: Fix tls_device receive
a88c26f671b0860cc93c654d45f472e43831fb33 net/tls: Replace kfree_skb() with consume_skb()
c43ac97bac987e56c179598ce3398a95d55067bc net: tls: prevent false connection termination with offload
9e9957973c7785b1f8fa77f099cac661cc5e7e5b net/tls: remove old exports of sk_destruct functions
b53f4976fb1f738573b5b76e21d3c2652fffb46b net/tls: handle errors from padding_length()
46a1695960d0600d58da7af33c65f24f3d839674 net/tls: fix lowat calculation if some data came from previous record
7718a855cd7ae9fc27a2aa1532ee105d52eb7634 selftests/tls: test for lowat overshoot with multiple records
04b25a5411f966c2e586909a8496553b71876fae net/tls: fix no wakeup on partial reads
990da41530b31ed7de29340ce1d78c04bee9670c staging: typec: tcpci: move tcpci drivers out of staging
0bc26314957504e82dc9e3704422959db99b38ef usb: update for tcpci drivers moving out of staging
9e1725b410594911cc5981b6c7b4cea4ec054ca8 x86/refcount: Work around GCC inlining bug
288e4521f0f6717909933116563e66bb894ae2af x86/asm: 'Simplify' GEN_*_RMWcc() macros
ac180540b04d7ffaf8ba6f13bf628c4f50dc9820 Revert "x86/refcount: Work around GCC inlining bug"
89f579ce99f7e028e81885d3965f973c0f787611 x86/headers: Fix -Wmissing-prototypes warning
46ad0840b1584b92b5ff2cc3ed0b011dd6b8e0f1 locking/rwsem: Remove arch specific rwsem files
390a0c62c23cb026cd4664a66f6f45fed3a215f6 locking/rwsem: Remove rwsem-spinlock.c & use rwsem-xadd.c for all archs
ddb20d1d3aed8f130519c0a29cd5392efcc067b8 locking/rwsem: Optimize down_read_trylock()
c7580c1e84435c9ccc6c612d9fee8e71811f7be6 locking/rwsem: Move owner setting code from rwsem.c to rwsem.h
12a30a7fc142a123c61da9623bd824d95d36c12e locking/rwsem: Move rwsem internal function declarations to rwsem-xadd.h
a68e2c4c637918da47b3aa270051545cff7d8245 locking/rwsem: Add debug check for __down_read*()
3b4ba6643d26a95e08067fca9a5da1828f9afabf locking/rwsem: Enhance DEBUG_RWSEMS_WARN_ON() macro
fb346fd9fc081c3d978c3f3d26d39334527a2662 locking/lock_events: Make lock_events available for all archs & other locks
bf20616f46e536fe8affed6f138db4b3040b55a6 locking/lock_events: Don't show pvqspinlock events on bare metal
a8654596f0371c2604c4d475422c48f4fc6a56c9 locking/rwsem: Enable lock event counting
26536e7c242e2b0f73c25c46fc50d2525ebe400b locking/rwsem: Prevent unneeded warning during locking selftest
02db99548d3608a625cf481cff2bb7b626829b3f nvmet: fix building bvec from sg list
b1d29ba82cf2bc784f4c963ddd6a2cf29e229b33 delayacct: track delays from thrashing cache pages
8508cf3ffad4defa202b303e5b6379efc4cd9054 sched: loadavg: consolidate LOAD_INT, LOAD_FRAC, CALC_LOAD
5c54f5b9edb1aa2eabbb1091c458f1b6776a1896 sched: loadavg: make calc_load_n() public
eb414681d5a07d28d2ff90dc05f69ec6b232ebd2 psi: pressure stall information for CPU, memory, and IO
2ce7135adc9ad081aa3c49744144376ac74fea60 psi: cgroup support
8fcb2312d1e3300e81aa871aad00d4c038cfc184 kernel/sched/psi.c: simplify cgroup_move_task()
e0c274472d5d27f277af722e017525e0b33784cd psi: make disabling/enabling easier for vendor kernels
428a1cb4baeb9e5c7feda93af7372ba6d2491558 psi: fix reference to kernel commandline enable
1b69ac6b40ebd85eed73e4dbccde2a36961ab990 psi: fix aggregation idle shut-off
7b2489d37e1e355228f7c55724f77580e1dec22a psi: clarify the Kconfig text for the default-disable option
4e37504d1c49eec6434d0cc97278d2b51c9e8763 psi: avoid divide-by-zero crash inside virtual machines
be87ab0afd680ac35486d16c0963c56d9be1d8a0 psi: clarify the units used in pressure files
33b2d6302abc4ccea1d9b3f095e2e27b02ca264e psi: introduce state_mask to represent stalled psi states
9289c5e6a78a5a9397df5fa60eb82b105abcfecf psi: make psi_enable static
bcc78db64168eb6dede056fed2999f75f7ace309 psi: rename psi fields in preparation for psi trigger addition
7fc70a3999366560ad1d4f2389a78360300c2c6a psi: split update_stats into parts
333f3017c5a893b000b2b4a3529814ce93fa83d7 psi: track changed states
0e94682b73bfa6c44c98af7a26771c9c08c055d5 psi: introduce psi monitor
df5ba5be7425e1df296d40c5f37a39d98ec666a2 kernel/sched/psi.c: expose pressure metrics on root cgroup
3c1bcc8614db10803f1f57ef0295363917448cb2 net: ethernet: Convert phydev advertize and supported from u32 to link mode
bd7153bd83b806bfcc2e79b7a6f43aa653d06ef3 r8169: remove unneeded mmiowb barriers
c8248c6c1a3d5db944753dd8e1c143d92c2c74fc r8169: don't read interrupt mask register in interrupt handler
9c10812afe3ad45325145787973bcf863d51b057 mlxsw: core_acl_flex_actions: Add extack messages
7c62cfb8c5744b377e9f33806e0db87a00dc6884 devlink: publish params only after driver init is done
9069a3817d82b01b3a55da382c774e3575946130 lib: objagg: implement optimization hints assembly and use hints for object creation
a339bf8aafbc4b9a9234da290b0cc50c50e9c15b mlxsw: spectrum_acl: Pass hints priv all the way to ERP code
e5e7962ee5c277f769791d1d857d3641200ee0eb mlxsw: spectrum_acl: Implement region migration according to hints
98bbf70c1c41fb9547c3a18c0f1b96f6ebb8eb1d mlxsw: spectrum: add "acl_region_rehash_interval" devlink param
3985de7260a7342a474a0792fcd23737341657ce mlxsw: spectrum_acl: Add couple of vregion rehash tracepoints
384c2f7473bc4f6b25f62060ab4d5985726bb12d mlxsw: spectrum_flower: Fix VLAN modify action support
cc0c207a5d18333fbfecc964a47ddb182fbcb720 net: Remove SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS_SUPPORT
2802aadfcff32a61d4afe78c07137dac63cd8d3c mlxsw: spectrum_acl: Split TCAM group structure into two
5ec2ee28d27b9232d1cae08ec597b9f3464fd8be mlxsw: spectrum_acl: Introduce a mutex to guard region list updates
79604b6e17426d64435bc947532a89fa8b0cf6b4 mlxsw: spectrum_acl: Refactor vregion association code
1263a9ab82249a5af42302a522ea8453affc5fda mlxsw: spectrum_acl: Introduce vregion mutex
6b861682474ca0dd78bcaebbd3f471c8244689de mlxsw: spectrum_acl: Enable vregion rehash per-profile
7b0f62eefc7f04a6fd3bddc88cf39c7a60f28672 mlxsw: spectrum_acl: Don't take rtnl lock during vregion_rehash_intrvl_set()
2bffc5322fd8679e879cd6370881ee50cf141ada mlxsw: spectrum_acl: Don't take mutex in mlxsw_sp_acl_tcam_vregion_rehash_work()
6375da3dc07f7c9a3f006646e4a03c6ded7b163e mlxsw: spectrum_acl: Add vregion migration end tracepoint
f9b274ce014421899b62cb0e41e5e7b72773782b mlxsw: spectrum_acl: Push rehash dw struct into rehash sub-struct
6ca219e7de9fb54b4eac9c3f14a0cdf2b39d723d mlxsw: spectrum_acl: Don't migrate already migrated entry
559c27681058783c4c3d50ddb5ed8a64792e78ec mlxsw: spectrum_acl: Introduce new rehash context struct and save hint_priv there
1667f7667d85e184bc731884bf9588bed89cca80 mlxsw: spectrum_acl: Push rehash start/end code into separate functions
a9550d0f075a0c59dc199c817d31354bacde9906 mlxsw: spectrum_acl: Push code start/end from mlxsw_sp_acl_tcam_vregion_migrate()
a86838e46b1dc1f7ecc2eb769ea1966380409025 mlxsw: spectrum_acl: assign vregion->region by the newly created region
e1d2f7a97261dc0e5bec44edb64fe5bcfb994971 mlxsw: spectrum_acl: assign vchunk->chunk by the newly created chunk
2c331593c99e0c9bf9bb27b8afa92d96d4decac8 mlxsw: spectrum_acl: Rename variables in mlxsw_sp_acl_tcam_ventry_migrate()
220f4fba3d64b484840d451cd1367de03dbb836e mlxsw: spectrum_acl: Put this_is_rollback to rehash context struct
844f01da9301a71fbed1e768837f4a1a6aa60529 mlxsw: spectrum_acl: Put vchunk migrate start/end code into separate functions
843500518509128a935edab96bd8efef7c54669e mlxsw: spectrum_acl: Do rollback as another call to mlxsw_sp_acl_tcam_vchunk_migrate_all()
c9c9af91f1d9a636aecc55302c792538e549a430 mlxsw: spectrum_acl: Allow to interrupt/continue rehash work
6f9579d4e3021b17b0a4cde6b04a6c94c9575cdf mlxsw: spectrum_acl: Remember where to continue rehash migration
b2c091ce46a7e08d776160d2f1b8ccabc85410b3 mlxsw: spectrum_acl: Make mlxsw_sp_acl_tcam_vregion_rehash() return void
60f1bf29c0b2519989927cae640cd1f50f59dc7f s390/smp: Fix calling smp_call_ipl_cpu() from ipl CPU
f070ef2ac66716357066b683fb0baf55f8191a2e tcp: tcp_fragment() should apply sane memory limits
88463497dd1f64eef9f21c6bbd19acabd0d8f88e Input: elantech - add helper function elantech_is_buttonpad()
2aa632c5ffbedb2ee0e68857683466ea788f17eb drm/amd/display: Initialize stream_update with memset
7996a8b5511a72465b0b286763c2d8f412b8874a blk-mq: fix hang caused by freeze/unfreeze sequence
36f10f55ff1d2867bfc48ed898a9cc0dc6b49dd2 fsnotify: let connector point to an abstract object
3ac70bfcde812b1b97d8a88a832df59941fa293f fsnotify: add helper to get mask from connector
eaa2c6b0c9181c3c70f773361bd81d9efd5804d9 fanotify: factor out helpers to add/remove mark
d3bc0fa8411c35194f99046157e2e26fe60e1d91 fsnotify: fix false positive warning on inode delete
a72fd224e37bf6a0630bce302deebbccbc236ba2 fanotify: simplify handling of FAN_ONDIR
23c9deeb3285d34fd243abb3d6b9f07db60c3cf4 fanotify: deprecate uapi FAN_ALL_* constants
bdd5a46fe30653cb4d26c7c787a22159bf79eed9 fanotify: add BUILD_BUG_ON() to count the bits of fanotify constants
d0a6a87e40da49cfc7954c491d3065a25a641b29 fanotify: support reporting thread id instead of process id
2d10b23082a7eb8be508b3789f2e7250a88a5ddb fanotify: return only user requested event types in event mask
9b076f1c0f4869b838a1b7aa0edb5664d47ec8aa fanotify: introduce new event mask FAN_OPEN_EXEC
66917a3130f218dcef9eeab4fd11a71cd00cd7c9 fanotify: introduce new event mask FAN_OPEN_EXEC_PERM
d6f7aa9820f21a879af8ceda17b2ebd1cf4beb25 fsnotify/fdinfo: include fdinfo.h for inotify_show_fdinfo()
3f61f40947e88b069ac1103727c81582d6e91dea KVM: arm64: Add missing #includes to kvm_host.h
7dd32a0d0103a5941efbb971f85a3e930cc5665e KVM: arm/arm64: Add KVM_ARM_VCPU_FINALIZE ioctl
9033bba4b53527b57bec217509a967a25cb19357 KVM: arm64/sve: Add pseudo-register for the guest's vector lengths
9a3cdf26e3363ec5460ebe20c508114fa63bcf26 KVM: arm64/sve: Allow userspace to enable SVE for vcpus
555f3d03e7fb43a539050aee91337978da14a25e KVM: arm64: Add a capability to advertise SVE support
a3be836df7cb777fa8ecbfd662224bfe0394f771 KVM: arm/arm64: Demote kvm_arm_init_arch_resources() to just set up SVE
f8d4635aff7e2e46beedaf61517a1caa4a06ee42 KVM: arm64/sve: Miscellaneous tidyups in guest.c
52110aa95948deba724739fc9933070c3e2c7239 KVM: arm64/sve: Make register ioctl access errors more consistent
4bd774e57b29f5bbf296d1daf69cc761e1e75fa8 KVM: arm64/sve: Simplify KVM_REG_ARM64_SVE_VLS array sizing
ecfb6ed4f66e68129c3ab675c68cb6578c28ef9b KVM: arm64/sve: Explain validity checks in set_sve_vls()
92e68b2b1ba004be55b2094fb8b5c11d0b24d11d KVM: arm/arm64: Clean up vcpu finalization function parameter naming
329e09893909d409039f6a79757d9b80b67efe39 treewide: Replace more open-coded allocation size multiplications
a030598690c604c17b5288160d9d7b40274b2f79 net: sched: cls_u32: simplify the hell out u32_delete() emptiness check
35cc3cefc4de90001c9137e2d01dd9d06b11acfb net/sched: cls_flower: Reject duplicated rules also under skip_sw
211929fd3f7c8de4d541b1cc243b82830e5ea1e8 selftests: Fix test errors related to lib.mk khdr target
8f2566225ae2d62d532bb1810ed74fa4bbc5bbdb flow_offload: add flow_rule and flow_match structures and use them
738678817573ce45698e1bb13222f2e53622c555 drivers: net: use flow action infrastructure
2cd173e6d542f8e96369608db849b71135d65afb cls_flower: don't expose TC actions to drivers anymore
12db03b65c2b90752e4c37666977fd4a1b5f5824 net: sched: extend proto ops to support unlocked classifiers
470502de5bdb1ed0def643a4458593a40b8f6b66 net: sched: unlock rules update API
fb14b096355b8c947a256e8e5259a4ebaca00866 net: sched: remove duplicated include from cls_api.c
6676d5e416eecaf4e823a2c3903aa132ffc2ede0 net: sched: set dedicated tcf_walker flag when tp is empty
268a351d4a77b50a59094cb4592f851880fe8518 net: sched: fix typo in walker_check_empty()
ecb3dea400d3beaf611ce76ac7a51d4230492cf2 net: sched: flower: insert new filter to idr after setting its mask
3eed52842b9fd291233c15f65fed34c5d3241183 net: sched: don't set tunnel for decap action
a3d43c0d56f1b94e74963a2fbadfb70126d92213 taprio: Add support adding an admin schedule
6ca6a6654225f3cd001304d33429c817e0c0b85f taprio: Add support for setting the cycle-time manually
c25031e993440debdd530278ce2171ce477df029 taprio: Add support for cycle-time-extension
a7a7be6087b07563490725f61f4dbf4826f099e2 net/sched: add sample action to the hardware intermediate representation
0496743b202ac0f2710ae243a493118ca5096c04 nfp: flower: fix masks for tcp and ip flags fields
bae9ed69029c7d499c57485593b2faae475fd704 flow_offload: support CVLAN match
12d5cbf89a6599f6bbd7b373dba0e74b5bd9c505 net/mlx5e: Fix calling wrong function to get inner vlan key and mask
c0bc5d8e2badeebe14b4005da794a8705b69320e nfp: flower: remove unused index from nfp_fl_pedit()
e4acf4274169fb6106d4ac854c87071b9764a00d taprio: add null check on sched_nest to avoid potential null pointer dereference
ff2ebbfba6186adf3964eb816f8f255c6e664dc4 tipc: introduce new capability flag for cluster
9195948fbf3406f75b1f133ddb57304169c44341 tipc: improve TIPC throughput by Gap ACK blocks
382f598fb66b14a8451f2794abf70ea7b5826c96 tipc: reduce duplicate packets for unicast traffic
909620ff72c8fcf95b6ef1dca850b24bf016dd27 tipc: use standard write_lock & unlock functions when creating node
f7a937801b9f8788519a23b12cb4d6c2c84d84be tipc: fix link established but not in session
c0b14a0854fab0a0164aabfe49a76aae9216fe97 tipc: fix missing Name entries due to half-failover
a0d56cb911ca301de81735f1d73c2aab424654ba netfilter: ipv6: nf_defrag: fix leakage of unqueued fragments
8a3dca632538c550930ce8bafa8c906b130d35cf netfilter: ipv6: nf_defrag: accept duplicate fragments again
b6653b3629e5b88202be3c9abc44713973f5c4b4 tcp: refine memory limit test in tcp_fragment()
c395fe1d8e49a5aa03504fcacfb7c95b5a4c6e04 KVM: PPC: Book3S HV: Avoid touching arch.mmu_ready in XIVE release functions
d47aacdb8e0bc03dcaa1a5630a3c633cdcd4cfa7 KVM: PPC: Book3S HV: XIVE: Clear file mapping when device is released
c468bc4e8468cb4b85ad61294ddd88efb2e47d8d KVM: PPC: Book3S HV: XIVE: Do not test the EQ flag validity when resetting
e717d0ae10041d18fa97da1e6bb4942b5eb9f77c KVM: PPC: Book3S HV: XIVE: Fix the enforced limit on the vCPU identifier
7e10b9a6da619bcee243980d9c45112761a86e11 KVM: PPC: Book3S HV: XIVE: Introduce a new mutex for the XIVE device
aedb5b19429c807331e8387bcb98cb5dc4c2a75e KVM: PPC: Book3S HV: XIVE: Take the srcu read lock when accessing memslots
bcaa3110d584f982a17e9ddbfc03e1130bca2bc9 KVM: PPC: Book3S HV: XIVE: Fix page offset when clearing ESB pages
4bfc0bb2c60e2f4cc8eb60f03cf8dfa72336272a bpf: decouple the lifetime of cgroup_bpf from cgroup itself
0ff8409b521b7b315bd69c4f1fbff024dc6219f6 nfp: flower: remove double new line
f7ee799a51ddbcc205ef615fe424fb5084e9e0aa nfp: flower: replace CFI with vlan present
42cd5484a22f1a1b947e21e2af65fa7dab09d017 nfp: flower: remove vlan CFI bit from push vlan action
11c6cbe706f218a8dc7e1f962f12b3a52ddd33a9 tools build feature: Check if eventfd() is available
35ea7e4bbb89ecd32057f5f6a2a8feb0d7224e51 perf script python: Add Python3 support to tests/attr.py
ca72d88378b2f2444d3ec145dd442d449d3fefbc powerpc/mm/64s/hash: Reallocate context ids on fork
d71be2b6c0e19180b5f80a6d42039cc074a693a2 arm64: cpufeature: Detect SSBS and advertise to userspace
8f04e8e6e29c93421a95b61cad62e3918425eac7 arm64: ssbd: Add support for PSTATE.SSBS rather than trapping to EL3
efd00c722ca855745fcc35a7e6675b5a782a3fc8 arm64: Add MIDR encoding for HiSilicon Taishan CPUs
e59f5bd759b7dee57593c5b6c0441609bda5d530 powerpc/fsl: Add FSL_PPC_BOOK3E as supported arch for nospectre_v2 boot arg
e5ce5e7267ddcbe13ab9ead2542524e1b7993e5a arm64: Provide a command line to disable spectre_v2 mitigation
1b3ccf4be0e7be8c4bd8522066b6cbc92591e912 arm64: add sysfs vulnerability show for meltdown
73f38166095947f3b86b02fbed6bd592223a7ac8 arm64: Advertise mitigation of Spectre-v2, or lack thereof
517953c2c47f9c00a002f588ac856a5bc70cede3 arm64: Use firmware to detect CPUs that are not affected by Spectre-v2
8c1e3d2bb44cbb998cb28ff9a18f105fee7f1eb3 arm64: Always enable spectre-v2 vulnerability detection
d2532e27b5638bb2e2dd52b80b7ea2ec65135377 arm64: add sysfs vulnerability show for spectre-v2
d42281b6e49510f078ace15a8ea10f71e6262581 arm64: Always enable ssb vulnerability detection
526e065dbca6df0b5a130b84b836b8b3c9f54e21 arm64: add sysfs vulnerability show for speculative store bypass
eb337cdfcd5dd3b10522c2f34140a73a4c285c30 arm64: ssbs: Don't treat CPUs with SSBS as unaffected by SSB
a111b7c0f20e13b54df2fa959b3dc0bdf1925ae6 arm64/speculation: Support 'mitigations=' cmdline option
133d624b1cee16906134e92d5befb843b58bcf31 dma: Introduce dma_max_mapping_size()
e6d6dd6c875eb3c9b69bb640419405726e6e0bbe virtio: Introduce virtio_max_dma_size()
f35f54f11f7f96dc6d43fa79c4a7297a9115627f virtio/s390: DMA support for virtio-ccw
64e1f0c531d1072cd97939bf0d8df42b26713543 s390/mm: force swiotlb for protected virtualization
bb99332a2b558e1f28b4c5011f9ea3b46f1c8806 s390/cio: introduce DMA pools to cio
37db8985b2116c89a3cbaf87083a02f83afaba5b s390/cio: add basic protected virtualization support
b50623e5db802e41736f3305cb54c03bc7f0e30a s390/airq: use DMA memory for adapter interrupts
48720ba56891570e3b750b271d80efb631478630 virtio/s390: use DMA memory for ccw I/O and classic notifiers
e7f7b6f38a44697428f5a2e7c606de028df2b0e3 scsi: lpfc: change snprintf to scnprintf for possible overflow
c492d4c74dd3f87559883ffa0f94a8f1ae3fe5f5 tipc: change to use register_pernet_device
04d210c98e11d863ebe38a7e482e40fb90d9ad82 scsi: lpfc: Fix memory leak in abnormal exit path from lpfc_eq_create
852eb63a7179249f95ba2e1faaabf403e39d88b3 scsi: lpfc: Update lpfc version to 12.2.0.3
5da04cc86d1215fd9fe0e5c88ead6e8428a75e56 x86/mm: Rework ioremap resource mapping determination
357d065a44cdd77ed5ff35155a989f2a763e96ef crypto: vmx - ghash: do nosimd fallback manually
6cea1d569d24af6f9e95f70cb301807440ae2981 mm: memcg/slab: unify SLAB and SLUB page accounting
4d96ba3530750fae3f3f01150adfecde96157815 mm: memcg/slab: stop setting page->mem_cgroup pointer for slab pages
fb2f2b0adb98bbbbbb51c5a5327f3f90f5dc417e mm: memcg/slab: reparent memcg kmem_caches on cgroup removal
f9bc5227652df4900eff12a9b8b38e9a8c7c78ea KVM: nVMX: use correct clean fields when copying from eVMCS
a21a39c206f8a541ce9670666c0025d73383aa1a x86/KVM/nVMX: don't use clean fields data on enlightened VMLAUNCH
11e349143e3289ab99f1b4858649f60703b7bf35 x86/kvm/nVMX: fix VMCLEAR when Enlightened VMCS is in use
880f7cc47265e7b195781dfa9a0cd62ef78304e3 arm64: cpu_errata: Remove ARM64_MISMATCHED_CACHE_LINE_SIZE
1602df02f33f61fe0de1bbfeba0d1c97c14bff19 arm64: cpufeature: Fix handling of CTR_EL0.IDC field
4afe8e79da920bdf6698b01bc668fffc6758f37b arm64: cpufeature: Trap CTR_EL0 access only where it is necessary
2705c93742e91730d335838025d75d8043861174 block: kill QUEUE_FLAG_NO_SG_MERGE
818e9dfa2c145c7b0d241c5c419f4b897a1af564 mac80211: remove set but not used variable 'old'
25d16d124a5e249e947c0487678b61dcff25cf8b mac80211: fix rate reporting inside cfg80211_calculate_bitrate_he()
8a03447dd311da2ad2df74dcf730a1a15f673379 rtw88: fix subscript above array bounds compiler warning
a24bad74737f4c8814e0669d38dba5f2ddb86514 rtw88: fix unassigned rssi_level in rtw_sta_info
5b0efb4d670c8b53b25c166967efd2a02b309e05 rtw88: avoid circular locking between local->iflist_mtx and rtwdev->mutex
6aca09771db4277a78853d6ac680d8d5f0d915e3 rtw88: Make some symbols static
23f57bfac7c283746ffba5caf4046b152074b2d9 iwlwifi: mvm: remove d3_sram debugfs file
b3500b472c880b5abe90ffd5c4a25aa736f906ad iwlwifi: fix load in rfkill flow for unified firmware
44f61b5c832c4085fcf476484efeaeef96dcfb8b iwlwifi: clear persistence bit according to device family
cc5470df4495049170d49466415680ee3c2a9a42 iwlwifi: print fseq info upon fw assert
b17dc0632a17fbfe66b34ee7c24e1cc10cfc503e iwlwifi: fix AX201 killer sku loading firmware issue
5f4d55d5791a8b7150dbaba239e92719ae0f94d4 iwlwifi: mvm: change TLC config cmd sent by rs to be async
69ae4f6aac1578575126319d3f55550e7e440449 mwifiex: Fix heap overflow in mwifiex_uap_parse_tail_ies()
ebb3ca3b4477bbc118976c77fe1913507df718ec cfg80211: use BIT_ULL in cfg80211_parse_mbssid_data()
1a473d6092d5d182914bea854ce0b21e6d12519d cfg80211: util: fix bit count off by one
b65842025335711e2a0259feb4dbadb0c9ffb6d9 cfg80211: report measurement start TSF correctly
abdd5dcc00207e7c38680f3754d1bfffafff1093 Revert "brcmfmac: disable command decode in sdio_aos"
d2912cb15bdda8ba4a5dd73396ad62641af2f520 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
7f904d7e1f3ec7c2de47c024a5a5c30988b54703 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 505
cfb21b11b891b08b79be07be57c40a85bb926668 iwlwifi: mvm: disable TX-AMSDU on older NICs
104b48592b5441c722dcd95c38ab9300f2d94856 s390/qeth: be drop monitor friendly
d3cbd4254df881777e2efb68ee10ede0d9dc0647 net/mlx5e: Add ndo_set_feature for uplink representor
d1f0b5dce8fda09a7f5f04c1878f181d548e42f5 bnx2x: Disable multi-cos feature.
15fab63e1e57be9fdb5eec1bbc5916e9825e9acb fs: prevent page refcount overflow in pipe_buf_get
ec269475cba7bcdd1eb8fdf8e87f4c6c81a376fe Revert "kvm: x86: Use task structs fpu field for user"
d9a710e5fc4941944d565b013414e9fdc66242b5 KVM: X86: Dynamically allocate user_fpu
da1e3071d53d79b00b07b34a5853c8e42f35d745 tests: kvm: Add tests for KVM_SET_NESTED_STATE
3b339e2527a6db257fa8f2a4cab3c510432a98d5 kvm: selftests: avoid type punning
332d079735f5add26f4443cec2991ee03ed2ae19 KVM: nVMX: KVM_SET_NESTED_STATE - Tear down old EVMCS state before setting new state
9b5db6c762adcca120667b683af55700ffd7ae29 kvm: nVMX: Set nested_run_pending in vmx_set_nested_state after checks complete
db80927ea1977a845230a161df643b48fd1e1ea4 KVM: nVMX: really fix the size checks on KVM_SET_NESTED_STATE
21be4ca1ea685ab3ccc2fd18babb89bc477a9e5c KVM: nVMX: Clear nested_run_pending if setting nested state fails
6ca00dfafda731d6eafdc164326e7336cdf42d74 KVM: x86: Modify struct kvm_nested_state to have explicit fields for data
9fd588772636bcbe48669d880efa2e1cc0575ebd KVM: nVMX: reorganize initial steps of vmx_set_nested_state
65b712f1560abdd9ebec005e9bd17c21ecacc849 KVM: nVMX: Allow restore nested-state to enable eVMCS when vCPU in SMM
323d73a8ecad22bf3284f11112a7cce576ade6af KVM: nVMX: Change KVM_STATE_NESTED_EVMCS to signal vmcs12 is copied from eVMCS
cf64527bb33f6cec2ed50f89182fc4688d0056b6 KVM: nVMX: Clear pending KVM_REQ_GET_VMCS12_PAGES when leaving nested
88dddc11a8d6b09201b4db9d255b3394d9bc9e57 KVM: nVMX: do not use dangling shadow VMCS after guest reset
c6bf2ae931adbd3e10967e12142856439a211813 KVM: nVMX: Set cached_vmcs12 and cached_shadow_vmcs12 NULL after free
b617158dc096709d8600c53b6052144d12b89fab tcp: be more careful in tcp_fragment()
d7fefcc8de9147cc37d0c00df12e7ea4f77999b5 mm/cma: add PF flag to force non cma alloc
678e174c4c16a940ecfd94e52b7bad73062507f0 powerpc/mm/iommu: allow migration of cma allocated pages during mm_iommu_do_alloc
7f18825174203526a47c127c12a50f897ee0b511 powerpc/mm/iommu: allow large IOMMU page size only for hugetlb backing
eb9d7a62c38628ab0ba6e59d22d7cb7930e415d1 powerpc/mm_iommu: Fix potential deadlock
7a3a4d763837d3aa654cd1059030950410c04d77 powerpc/mm_iommu: Allow pinning large regions
a38352de4495a6a4662609a560b2db4b03d6b352 perf script python: Remove explicit shebang from Python scripts
d72eadbc1d2866fc047edd4535ffb0298fe240be perf script python: Remove explicit shebang from tests/attr.c
e1b98fa316648420d0434d9ff5b92ad6609ba6c3 locking/rwsem: Add missing ACQUIRE to read_slowpath exit when queue is empty
e49f69363adf8920883fff7e8ffecb802d897c6b drm/amd/display: use proper formula to calculate bandwidth from timing
6752bea8b03e77c98be7d8d25b0a9d86a00b3cf7 drm/amd/display: Prevent cursor hotspot overflow for RV overlay planes
66acd4418d7de131ef3831e52a8af3d2480e5b15 drm/amd/display: Link train only when link is DP and backend is enabled
b05e2c5e81f9a0be4a145e0926b1dfe62f6347d4 drm/amd/display: Update ABM crtc state on non-modeset
e6bddf6c67f9a3abf6f1ef75e52bc1cd228dfe4d drm/amd/display: add pipe lock during stream update
f91813992c343272813e707343b50f8d06383659 drm/amd/display: Re-add custom degamma support
162f807858d15bde60cf373a3ad46e03200ad9d8 drm/amd/display: half bandwidth for YCbCr420 during validation
b9952f93cd2cf5fca82b06a8179c0f5f7b769e83 drm/amd/display: Set stream->mode_changed when connectors change
e482ae9b5fdc01a343f22f52930e85a6cfdf85eb drm: writeback: Fix leak of writeback job
dcf1a988678e2e39ce2b4115b8ce14d208c8c481 drm/amd/display: Fix exception from AUX acquire failure
4bc46da4a3aeeb4d55e83dd276cf72756e908286 drm/amd/display: Reset planes that were disabled in init_pipes
8407f8a1d940fe28c4243ad4f0cb6a44dcee88f6 drm/vmwgfx: Fix user space handle equal to zero
e41c20cf50a8a7d0dfa337a7530590aacef4193b drm/vmwgfx: Fix compat mode shader operation
6e3f17ee73f7e3c2ef0e2c8fd8624b2ece8ef2c9 drm/fb-helper: generic: Call drm_client_add() after setup is done
36e4523aaf4a35de963e190064b53839fa131653 drm/atomic: Wire file_priv through for property changes
c8f005684c98f4d9942baec13ad98054dbf312a0 drm: Expose "FB_DAMAGE_CLIPS" property to atomic aware user-space only
23e35c0eb81a23d40c079a7eb187fc321fa1deb7 drm/cma-helper: Fix drm_gem_cma_free_object()
30d62d4453e49f85dd17b2ba60bbb68b6593dba0 drm: add non-desktop quirk for Valve HMDs
9d6fea5744d6798353f37ac42a8a653a2607ca69 drm/amdgpu/psp: move psp version specific function pointers to early_init
bdb1ccb080dafc1b4224873a5b759ff85a7d1c10 drm/amdgpu: remove ATPX_DGPU_REQ_POWER_FOR_DISPLAYS check when hotplug-in
5887a59961e2295c5b02f39dbc0ecf9212709b7b drm/amdgpu/soc15: skip reset on init
ce0e22f5d886d1b56c7ab4347c45b9ac5fcc058d drm/amdgpu: fix ring test failure issue during s3 in vce 3.0 (V2)
a8c2d5ab9e71be3f9431c47bd45329a36e1fc650 drm/i915/gvt: emit init breadcrumb for gvt request
332af874db929f92931727bfe191b2c666438c81 drm/amd: fix fb references in async update
15ae3b28f8ca406b449d36d36021e96b66aedb5d drm/amd/display: disable link before changing link settings
e038b9016aa88a9e1429f1b016644c509b8e58a6 drm/amdgpu/{uvd,vcn}: fetch ring's read_ptr after alloc
2c1c55252647abd989b94f725b190c700312d053 drm/i915/dsi: Use a fuzzy check for burst mode clock check
bc7b488b1d1c71dc4c5182206911127bc6c410d6 drm/i915/dmc: protect against reading random memory
379109351f4f6f2405cf54e7a296055f589c3ad1 drm/amdgpu: keep stolen memory on picasso
5ed7f4b5eca11c3c69e7c8b53e4321812bc1ee1e drm/vmwgfx: integer underflow in vmw_cmd_dx_set_shader() leading to an invalid read
cc0ba0d8624f210995924bb57a8b181ce8976606 drm/vmwgfx: Use the backdoor port if the HB port is not available
f0521558a2a89d58a08745e225025d338572e60a drm/i915: Don't clobber M/N values during fastset check
905801fe72377b4dc53c6e13eea1a91c6a4aa0c4 drm/i915: Force 2*96 MHz cdclk on glk/cnl when audio power is enabled
48d9f87ddd2108663fd866b254e05d422243cc56 drm/i915: Save the old CDCLK atomic state
59f9e9cab3a1e6762fb707d0d829b982930f1349 drm/i915: Skip modeset for cdclk changes if possible
928f8f42310f244501a7c70daac82c196112c190 drm/i915/ringbuffer: EMIT_INVALIDATE *before* switch context
02d7a73b5048a82d4344ba598cbf19dcc9df913f drm/amdgpu/gfx9: use reset default for PA_SC_FIFO_SIZE
41de4be6f6efa4132b29af51158cd672d93f2543 drm/virtio: move drm_connector_update_edid_property() call
efe2bf965522bf0796d413b47a2abbf81d471d6f drm/virtio: set seqno for dma-fence
e371e19c10a264bd72c2ff1d21e2167b994710d1 drm/amd/display: Disable cursor when offscreen in negative direction
6ad34adeaec5b56a5ba90e90099cabf1c1fe9dd2 drm/amd/display: CS_TFM_1D only applied post EOTF
e25228b02e4833e5b0fdd262801a2ae6cc72b39d drm/amd/display: Increase Backlight Gain Step Size
d99004d7201aa653658ff2390d6e516567c96ebc drm/crc-debugfs: Also sprinkle irqrestore over early exits
7355965da22b8d9ebac8bce4b776399fb0bb9d32 drm/vkms: Forward timer right after drm_crtc_handle_vblank
f9a393875d3af13cc3267477746608dadb7f17c1 drm/i915: Disable SAMPLER_STATE prefetching on all Gen11 steppings.
5380d0b781c491d94b4f4690ecf9762c1946c4ec drm/i915: Support flags in whitlist WAs
2c903da50f5a9522b134e488bd0f92646c46f3c0 drm/i915: whitelist PS_(DEPTH|INVOCATION)_COUNT
3fe0107e45ab396342497e06b8924cdd485cde3b drm/i915/icl: whitelist PS_(DEPTH|INVOCATION)_COUNT
18ec54fdd6d18d92025af097cd042a75cf0ea24c x86/speculation: Prepare entry code for Spectre v1 swapgs mitigations
a2059825986a1c8143fd6698774fa9d83733bb11 x86/speculation: Enable Spectre v1 swapgs mitigations
64dbc122b20f75183d8822618c24f85144a5a94d x86/entry/64: Use JMP instead of JMPQ
f36cf386e3fec258a341d446915862eded3e13d8 x86/speculation/swapgs: Exclude ATOMs from speculation through SWAPGS
b36a1552d7319bbfd5cf7f08726c23c5c66d4f73 Bluetooth: hci_uart: check for missing tty operations
4ac30c4b3659efac031818c418beb51e630d512d bpf: udp: ipv6: Avoid running reuseport's bpf_prog from __udp6_lib_err
2948a1fcd77a8bb11604387e3fc52f0ebf5729e9 tipc: fix unitilized skb list crash
2c4cc9712364c051b1de2d175d5fbea6be948ebf tcp: tcp_v4_err() should be more careful
e858faf556d4e14c750ba1e8852783c6f9520a0e tcp: Reset bytes_acked and bytes_received when disconnecting
648ee6cea7dde4a5cdf817e5d964fd60b22006a4 net: tls, correctly account for copied bytes with multiple sk_msgs
9354544cbccf68da1b047f8fb7b47630e3c8a59d net/tls: fix page double free on TX cleanup
acd3e96d53a24d219f720ed4012b62723ae05da1 net/tls: make sure offload also gets the keys wiped
13aecb17acabc2a92187d08f7ca93bb8aad62c6f net/tls: fix poll ignoring partially copied records
7be8ef2cdbfe41a2e524b7c6cc3f8e6cfaa906e4 net: sched: use temporary variable for actions indexes
f4f5748bfec94cf418e49bf05f0c81a1b9ebc950 netfilter: ipset: fix a missing check of nla_parse
13c6ba1f855415cf3b9c58ea926ae8858050ec1c netfilter: ipset: Fix the last missing check of nla_parse_deprecated()
c7036d97acd2527cef145b5ef9ad1a37ed21bbe6 ipv6: Default fib6_type to RTN_UNICAST when not set
54851aa90cf27041d64b12f65ac72e9f97bd90fd ipv6: Unlink sibling route in case of failure
d209df3e7f7002d9099fdb0f6df0f972b4386a63 netfilter: nf_tables: fix register ordering
d97e7f198b10ea9d17ea64606f18102260870782 selftests/powerpc: Give some tests longer to run
bf03d4f9334728bf7c8ffc7de787df48abd6340e KVM: x86: introduce is_pae_paging
1b2be2071aca9aab22e3f902bcb0fca46a1d3b00 s390/ipl: Fix detection of has_secure attribute
582a32e708823e5957fd73ccd78dc4a9e49d21ea efi/arm: Revert "Defer persistent reservations until after paging_init()"
c3f3ce049f7d97cc7ec9c01cb51d9ec74e0f37c2 userfaultfd: use RCU to free the task struct when fork fails
3461a0a02141b2612f2916e9250a430de41b0290 selftests/bpf: fix "alu with different scalars 1" on s390
fed84c78527009d4f799a3ed9a566502fa026d82 mm/memblock.c: skip kmemleak for kasan_init()
412e85b605315fd129a849599cf4a5a7959573a8 drm/nouveau: Only release VCPI slots on mode changes
db1231ddc04682f60d56ff42447f13099c6c4a4c drm/nouveau: Only recalculate PBN/VCPI on mode/connector changes
bff9e34c678552eb172916d9288913e8bd8cc9d1 docs: fix broken doc references due to renames
164477c2331be75d9bd57fb76704e676b2bcd1cd x86/mm: Clarify hardware vs. software "error_code"
1d8ca3be86ebc6a38dad8236f45c7a9c61681e78 x86/mm/fault: Allow stack access below %rsp
e82b9b0727ff6d665fff2d326162b460dded554d vhost: introduce vhost_exceeds_weight()
e2412c07f8f3040593dfb88207865a3cd58680c0 vhost_net: fix possible infinite loop
a9e9bcb45b1525ba7aea26ed9441e8632aeeda58 locking/rwsem: Prevent decrement of reader count before increment
891584f48a9084ba462f10da4c6bb28b6181b543 inet: frags: re-introduce skb coalescing for local delivery
3453d5708b33efe76f40eca1c0ed60923094b971 NFSv4.1: Avoid false retries when RPC calls are interrupted
67b886d290052dbf2bcfc876a5ae41a5fe461edf dma-buf: Remove leftover [un]map_atomic comments
d5ae7712b7ffbb435e8f3d98f2123eff4734c77f dma-buf: Update [un]map documentation to match the other functions
13bf5ced93775ffccb53527a9d862e023a9daa03 dma-mapping: add a Kconfig symbol to indicate arch_dma_prep_coherent presence
347cb6af8710b72cf9685fdc09d07873cf42d51f dma-mapping: add a kconfig symbol for arch_setup_dma_ops availability
d253ca0c3865a8d9a8c01143cf20425e0be4d0ce x86/mm/cpa: Add set_direct_map_*() functions
d63326928611600ad65baff54a70f53b02b3cdfe mm/hibernation: Make hibernation handle unmapped pages
4739d53fcd1df8a9f6f72bb02a3a1d852ad252b3 arm64/mm: wire up CONFIG_ARCH_HAS_SET_DIRECT_MAP
a667d7456f189e3422725dddcd067537feac49c0 mm: introduce new vm_map_pages() and vm_map_pages_zero() API
c30700db9eaabb35e0b123301df35a6846e6b6b4 dma-direct: provide generic support for uncached kernel segments
4b85faed211ccfbcc7f3adf1cd62f0b00d1a172b dma-mapping: add a dma_alloc_need_uncached helper
c2f2124e0d447ad02a41a92361b3734366797680 dma-direct: handle DMA_ATTR_NON_CONSISTENT in common code
d98849aff87911013aadb730138ab728b52fc547 dma-direct: handle DMA_ATTR_NO_KERNEL_MAPPING in common code
cf14be0b41c659ede89abef3f7ec0e98e6cfea5b dma-direct: fix DMA_ATTR_NO_KERNEL_MAPPING
71602fe6d4e9291af105adfef8e893b57c735906 swiotlb: add debugfs to track swiotlb buffer usage
a0bf842e89a3842162aa8514b9bf4611c86fee10 swiotlb: add checks for the return value of memblock_alloc*()
1be51474f99bcfdecef3f34b9a9a8cf4393fd8f9 swiotlb: no need to check return value of debugfs_create functions
79a986721decf428ba539e6e2c941c987acce655 dma-mapping: remove dma_max_pfn
795ee30648c708502da9df637f83c33361d68dcc lib/genalloc: introduce chunk owners
9087c37584fb7d8315877bb55f85e4268cc0b4f4 dma-direct: Force unencrypted DMA under SME for certain DMA masks
b866455423e040813f113d8b87e8297778ee2014 dma-mapping: add a dma_addressing_limited helper
a5008b59cd9d8de12ab623cb5052bb4735330e5c dma-direct: only limit the mapping size if swiotlb could be used
449fa54d6815be8c2c1f68fa9dbbae9384a7c03e dma-direct: correct the physical addr in dma_direct_sync_sg_for_cpu/device
06532750010e06dd4b6d69983773677df7fc5291 dma-mapping: use dma_get_mask in dma_addressing_limited
ea1529873ab18c204688cf31746df851c098cbea KVM: x86: hyper-v: don't crash on KVM_GET_SUPPORTED_HV_CPUID when kvm_intel.nested is disabled
a4226ec3ef1214b0973abdba64db66e10f6b0a1c scsi: qla2xxx: Fix fw dump corruption
b2d1453a45aa8477b1d33ee94a7694146bb8b340 scsi: qla2xxx: Fix driver unload when FC-NVMe LUNs are connected
711a08d79f718abcdd3f86f44ffa8473ef1486ef scsi: qla2xxx: Change abort wait_loop from msleep to wait_event_timeout
982cc4be05d6d0d8b15b1340416737ad60bddcae scsi: qla2xxx: Use an on-stack completion in qla24xx_control_vp()
219d27d7147e07fe899a781bd72f9180b78c3852 scsi: qla2xxx: Fix race conditions in the code for aborting SCSI commands
db4bf822c58cd2b4a6718c982ce48a5292f5cc6a scsi: qla2xxx: Complain loudly about reference count underflow
4c2a2d0178d5d8006a6bc50c8dc0ed122e4e946e scsi: qla2xxx: Fix NVME cmd and LS cmd timeout race condition
baf23eddbf2a4ba9bf2bdb342686c71a8042e39b scsi: qla2xxx: move IO flush to the front of NVME rport unregistration
a6b95d1c71e9adef5ab5ba77c42a50d0b7b409d6 scsi: qla2xxx: Use mutex protection during qla2x00_sysfs_read_fw_dump()
3cf92f4bfccbb3e378cd86dc46e09c2bc18cda26 scsi: qla2xxx: cleanup trace buffer initialization
388a49959ee4e4e99f160241d9599efa62cd4299 scsi: qla2xxx: Fix panic from use after free in qla2x00_async_tm_cmd
4d0b32b853f52760bf70288f2751d2ca86581352 scsi: qla2xxx: Update driver version to 10.01.00.18-k
5589b08e5be47e426158f659a892153b4a831921 scsi: qla2xxx: Fix hardlockup in abort command during driver remove
2ad7a27deaf6d78545d97ab80874584f6990360e KVM: PPC: Book3S: Enable XIVE native capability only if OPAL has required functions
4ef360dd6a65f6ef337645e1b65e744034754b19 netfilter: nft_set: fix allocation size overflow in privsize callback.
fbf0a7f44cdd4041b5a3e2b14deaa0adebaf40da drm/qxl: get vga ioports
51b86f9a8d1c4bb4e3862ee4b4c5f46072f7520d dm: make sure to obey max_io_len_target_boundary
66929812955bbec808c94d7a3916f41638a98a0a iommu/amd: Add support for X2APIC IOMMU interrupts
b60fe990c6b07ef6d4df67bc0530c7c90a62623a KVM: coalesced_mmio: add bounds checking

__CHANGES NOT IN UPSTREAM________________
Apply debranding changes'
drivers: tap.c: fix wrong backport causing WARN_ON_ONCE(1) in skb_flow_dissect()
x86/kdump: Reserve extra memory when SME or SEV is active
kvm: disable nested virt on pre-haswell processors
kvm: taint kernel for tech-preview when using nested virtualization
include/list: Backport list_cut_before()
scsi: hpsa: update revision to RH3
RDMA/srp: turn off 'use_imm_data' by default
perf: package tips.txt
s390/kasan: Fix recursion loop when triggering kdump
rpmspec: use make macro to do headers_install with rpm CFLAGS/LDFLAGS
rpmspec: use tools_make for building tools
nvmet: fix setting ns queue's segment boundary
networking: fix default_ttl typo in mpls-sysctl
IB/umem: Add missing down_read on umem_rwsem
fs: fix kABI for struct pipe_buf_operations
powerpc: ignore __GFP_DMA/DMA32 if we left an empty ZONE_DMA/DMA32 enabled for kABI purposes
kvm: fix guest initialization code mismerge
selftests: bpf: disable test_lwt_seg6local
sched: cls_flower: fix infinite loop in fl_walk()
redhat: fix vmlinux debuginfo on ppc64le
arm64/crashkernel: Reduce crashkernel size to 448M by default
redhat: perf kABI-check failure fix
perf trace: Fix alignment forlines
Backport mt76 drivers from linux-5.2-rc5
Add rtw88 driver from linux-5.2-rc5
Backport mt7601u driver from linux-5.2-rc5
Backport mwifiex driver from linux-5.2-rc2
Backport rtl8xxxu driver from linux-5.2-rc5
Backport rtlwifi drivers from linux-5.2-rc5
Backport ath9k driver from linux-5.2-rc5
Backport ath10k driver from linux-5.2-rc5
Backport brcm80211 drivers from linux-5.2-rc5
Backport iwlwifi drivers from linux-5.2-rc5
Backport mac80211 from linux-5.2-rc5
Backport core wireless code from linux-5.2-rc5
Enable kernel signing for ppc64le
redhat: fix missing files for mlxsw specific self-tests
redhat: Package the signing key for s390
redhat: Enable kernel signing for s390
redhat: Rename secure boot sources
powerpc: fix max_zone_pfns initialization
correct the ghost initramfs attributes
kvm/nested: mark as TechPreview on first VM creation
fanotify: clean up handling of "mark type"
RHEL: fix build of spec_ctrl.h for older assemblers
kernel packaging: Fix extra namespace collision
redhat: kernel-selftests-internal: add dependencies
vmw_pvscsi: Fixed to work with SG_CHAIN
mark AMD Rome processors supported
r8169: restore previous behavior to accept BIOS WoL settings
Revert "r8169: restore previous behavior to accept BIOS WoL settings"
nvme-tcp: mark NVMe/TCP as a technical preview
nvme-tcp: use older iov_iter API to fix panic
nvmet: set loop queue's segment boundary mask as PAGE_SIZE - 1
netdevsim: use skb_sec_path helper
geneve: Don't assume linear buffers in vxlan_err_lookup()
vxlan: Don't assume linear buffers in vxlan_err_lookup()
net: enable mpls_ptr in net_device
rpmspec: pack bpf-helpers, bpftool-net, bpftool-feature manpages
bpf: Fix -> rewrite in sys_sendmsg
bpf: deal with kABI breakage in cgroups
mlx5-core: Mark ConnectX-6 Dx as unsupported device
x86/speculation: Cast ~SPEC_CTRL_STIBP atomic value to int
drm: Main backport to rebase from 4.18 to 5.1
list: Backport list_is_first()
megaraid_sas: remove tech preview from Aero series
megaraid_sas: sync with mainline
get_maintainer.pl: Add default .get_maintainer.conf file for RHEL
Revert "get_maintainer.pl: Add optional .get_maintainer.MAINTAINERS override"
mpt3sas: remove tech preview from Aero series
cifs: fix copy_file_range to allow write on the same file
Revert "IB/usnic: Remove stub functions"
Update stepping values for Whiskey Lake U/Y
hpsa: correct-static-checker-issue-in-reset-handler
Revert "add KABI padding to dentry structure"
iw_cxgb4: Declare ib_post_send() and ib_post_recv() arguments const
perf: remove bpf examples
Revert "x86/kdump: make the behavior of crashkernel=X consistent with kaslr"
ALSA: ASoC: SOF: Add utils
ALSA: Revert "ALSA: Replace snd_malloc_pages() and snd_free_pages() with standard helpers"
tools/power turbostat: Increase default buffer size
redhat: exclude kvm_stat from pathfix.py's tenure
rhel-kabi: Add RH_KABI_FORCE_CHANGE() to radix-tree and idr functions
rh_kabi: Indirect EXTEND macros so nesting of other macros will resolve.
powerpc/tm: Fix stack pointer corruption
redhat: do not generate debuginfo for self-tests and samples
Update the kernel rpm package description to mention backports/bug fixes
sched/fair: Consider SD_NUMA when selecting the most idle group to schedule on
ixgbevf: Update driver version for RHEL-8.1.0
ixgbe: Update driver version for RHEL-8.1.0
hv: kvp: Use u to print U32
kernel-packaging: Remove kernel files from kernel-modules-extra package
Disable kexec_load via kernel_lockdown for s390
tipc: remainder of commit ignore STATE_MSG on wrong link session
Update stepping values for coffee lake desktop
x86/resctrl: Update Documentation/x86/resctrl_ui.txt
exit from RHEL 8.1 early ystream mode
vfio_pci: Add NVIDIA GV100GL subdriver
redhat: add TC selftests to kernel-selftests-internal
redhat: add net selftests to kernel-selftests-internal
redhat: add pktgen samples to kernel-selftests-internal
redhat: rename bpf_samples to kernel-selftests-internal
redhat: remove bpf_samples dependency on glibc-static and build it by default
qed: Fix qed_mcp_halt|resume()
redhat: Reuse other arch's cpuhp_state to protect kABI
nbd: restrict use to AF_UNIX sockets
redhat: limit headers_install_all to arches we care about
PCI: pciehp: Fix re-enabling the slot marked for safe removal
redhat: Enable gdb_index
mark the intel igc driver as tech preview
Fix cross builds
usnic_verbs: fix deadlock
pci: remove unused functionality
Revert "aacraid: add removed id table"
Revert "be2iscsi: add removed id table"
Revert "mpt3sas: add removed id table"
Revert "qla2xxx: add removed id table"
Revert "qla4xxx: add removed id table"
Revert "megaraid_sas: add removed id table"
lfpc: remove Lancer FCoE
Revert "lpfc: add removed id table"
Revert "lfpc: add Lancer FCoE to the removed devices"
Merge branch 'linus/master' into rdma.git for-next
nvme: allow ANA support to be independent of native multipathing
nvme: multipath: Change default of kernel NVMe multipath to be disabled
dm writecache: set "Tech Preview" taint using mark_tech_preview()
dm integrity: replace open-coded allocation size multiplication
apply linux-kernel-test.patch when building
redhat: speed up binary rpm compression
debugfs: Fix EPERM regression from kernel lockdown check
redhat: parallelize modules compression
Fix RH_KABI_SET_SIZE to use dereference operator
parallelize "make mrproper"
use "make -jN" (via _smp_mflags) for modules_install
powerpc/mm/hash: Increase vmalloc space with hash translation mode
HDLC Frame Relay: mark driver unsupported in RHEL8
DLCI: mark driver unsupported in RHEL8
ethoc: mark hardware unsupported in RHEL8
dnet: mark hardware unsupported in RHEL8
dl2k: mark hardware unsupported in RHEL8
mark qla3xxx driver as unsupported
Revert "switch secureboot kernel image signing to release keys"
