iommu/vt-d: Fix NULL pointer reference in intel_svm_bind_mm()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit c56cba5daf45d2d091ef1cfe2f1d6a930446687b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/c56cba5d.failed

Intel IOMMU could be turned off with intel_iommu=off. If Intel
IOMMU is off,  the intel_iommu struct will not be initialized.
When device drivers call intel_svm_bind_mm(), the NULL pointer
reference will happen there.

Add dmar_disabled check to avoid NULL pointer reference.

	Cc: Ashok Raj <ashok.raj@intel.com>
	Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
	Reported-by: Dave Jiang <dave.jiang@intel.com>
Fixes: 2f26e0a9c9860 ("iommu/vt-d: Add basic SVM PASID support")
	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit c56cba5daf45d2d091ef1cfe2f1d6a930446687b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-svm.c
diff --cc drivers/iommu/intel-svm.c
index f2adf1c9c194,3a4b09ae8561..000000000000
--- a/drivers/iommu/intel-svm.c
+++ b/drivers/iommu/intel-svm.c
@@@ -309,7 -234,7 +309,11 @@@ int intel_svm_bind_mm(struct device *de
  	int pasid_max;
  	int ret;
  
++<<<<<<< HEAD
 +	if (!iommu || !iommu->pasid_table)
++=======
+ 	if (!iommu || dmar_disabled)
++>>>>>>> c56cba5daf45 (iommu/vt-d: Fix NULL pointer reference in intel_svm_bind_mm())
  		return -EINVAL;
  
  	if (dev_is_pci(dev)) {
* Unmerged path drivers/iommu/intel-svm.c
