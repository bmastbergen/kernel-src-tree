ASoC: stm32: sai: fix set_sync service

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: stm32: sai: fix set_sync service (Jaroslav Kysela) [1683051]
Rebuild_FUZZ: 92.68%
commit-author Olivier Moysan <olivier.moysan@st.com>
commit d4180b4c02e7b04b8479f6237b2bd98b4c5fd19c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/d4180b4c.failed

Add error check on set_sync function return.
Add of_node_put() as of_get_parent() takes a reference
which has to be released.

	Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit d4180b4c02e7b04b8479f6237b2bd98b4c5fd19c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/stm/stm32_sai.c
diff --cc sound/soc/stm/stm32_sai.c
index 37aab505c532,d68d62f12df5..000000000000
--- a/sound/soc/stm/stm32_sai.c
+++ b/sound/soc/stm/stm32_sai.c
@@@ -104,7 -104,8 +104,12 @@@ static int stm32_sai_set_sync(struct st
  
  	if (!pdev) {
  		dev_err(&sai_client->pdev->dev,
++<<<<<<< HEAD
 +			"Device not found for node %s\n", np_provider->name);
++=======
+ 			"Device not found for node %pOFn\n", np_provider);
+ 		of_node_put(np_provider);
++>>>>>>> d4180b4c02e7 (ASoC: stm32: sai: fix set_sync service)
  		return -ENODEV;
  	}
  
* Unmerged path sound/soc/stm/stm32_sai.c
diff --git a/sound/soc/stm/stm32_sai_sub.c b/sound/soc/stm/stm32_sai_sub.c
index 4f940ccb5840..e645957a929e 100644
--- a/sound/soc/stm/stm32_sai_sub.c
+++ b/sound/soc/stm/stm32_sai_sub.c
@@ -1106,7 +1106,7 @@ static int stm32_sai_pcm_new(struct snd_soc_pcm_runtime *rtd,
 static int stm32_sai_dai_probe(struct snd_soc_dai *cpu_dai)
 {
 	struct stm32_sai_sub_data *sai = dev_get_drvdata(cpu_dai->dev);
-	int cr1 = 0, cr1_mask;
+	int cr1 = 0, cr1_mask, ret;
 
 	sai->cpu_dai = cpu_dai;
 
@@ -1136,8 +1136,10 @@ static int stm32_sai_dai_probe(struct snd_soc_dai *cpu_dai)
 	/* Configure synchronization */
 	if (sai->sync == SAI_SYNC_EXTERNAL) {
 		/* Configure synchro client and provider */
-		sai->pdata->set_sync(sai->pdata, sai->np_sync_provider,
-				     sai->synco, sai->synci);
+		ret = sai->pdata->set_sync(sai->pdata, sai->np_sync_provider,
+					   sai->synco, sai->synci);
+		if (ret)
+			return ret;
 	}
 
 	cr1_mask |= SAI_XCR1_SYNCEN_MASK;
