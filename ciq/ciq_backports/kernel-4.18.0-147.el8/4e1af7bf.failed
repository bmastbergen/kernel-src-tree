ice: Fix issue with VF attempt to delete default MAC address

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
commit 4e1af7bf22ca913502fb04c06477b9265b54684f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/4e1af7bf.failed

This patch fixes issue that occurs when VF is attempting to remove
default LAN/MAC address, which is programmed by the administrator.
We shouldn't return error for the call by the VF, but continue with
the remaining steps to handle MAC opcode. Also update the dev_err
message to explicitly say that VF can't change MAC programmed by PF.

Also change "mac" to "MAC" for kernel print statements in the same file.

	Signed-off-by: Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
	Signed-off-by: Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 4e1af7bf22ca913502fb04c06477b9265b54684f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
diff --cc drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
index fe5b94261bae,84e51a0a0795..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
+++ b/drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
@@@ -1962,28 -2067,27 +1962,32 @@@ ice_vc_handle_mac_addr_msg(struct ice_v
  			} else {
  				/* VF can't remove dflt_lan_addr/bcast mac */
  				dev_err(&pf->pdev->dev,
- 					"can't remove mac %pM for VF %d\n",
+ 					"VF can't remove default MAC address or MAC %pM programmed by PF for VF %d\n",
  					maddr, vf->vf_id);
++<<<<<<< HEAD
 +				ret = ICE_ERR_PARAM;
 +				goto handle_mac_exit;
++=======
+ 				continue;
++>>>>>>> 4e1af7bf22ca (ice: Fix issue with VF attempt to delete default MAC address)
  			}
  		}
  
  		/* check for the invalid cases and bail if necessary */
  		if (is_zero_ether_addr(maddr)) {
  			dev_err(&pf->pdev->dev,
- 				"invalid mac %pM provided for VF %d\n",
+ 				"invalid MAC %pM provided for VF %d\n",
  				maddr, vf->vf_id);
 -			v_ret = VIRTCHNL_STATUS_ERR_PARAM;
 +			ret = ICE_ERR_PARAM;
  			goto handle_mac_exit;
  		}
  
  		if (is_unicast_ether_addr(maddr) &&
  		    !ice_can_vf_change_mac(vf)) {
  			dev_err(&pf->pdev->dev,
- 				"can't change unicast mac for untrusted VF %d\n",
+ 				"can't change unicast MAC for untrusted VF %d\n",
  				vf->vf_id);
 -			v_ret = VIRTCHNL_STATUS_ERR_PARAM;
 +			ret = ICE_ERR_PARAM;
  			goto handle_mac_exit;
  		}
  
@@@ -1997,14 -2101,14 +2001,19 @@@
  
  	/* program the updated filter list */
  	if (set)
 -		v_ret = ice_err_to_virt_err(ice_add_mac(&pf->hw, &mac_list));
 +		ret = ice_add_mac(&pf->hw, &mac_list);
  	else
 -		v_ret = ice_err_to_virt_err(ice_remove_mac(&pf->hw, &mac_list));
 +		ret = ice_remove_mac(&pf->hw, &mac_list);
  
 -	if (v_ret) {
 +	if (ret) {
  		dev_err(&pf->pdev->dev,
++<<<<<<< HEAD
 +			"can't update mac filters for VF %d, error %d\n",
 +			vf->vf_id, ret);
++=======
+ 			"can't update MAC filters for VF %d, error %d\n",
+ 			vf->vf_id, v_ret);
++>>>>>>> 4e1af7bf22ca (ice: Fix issue with VF attempt to delete default MAC address)
  	} else {
  		if (set)
  			vf->num_mac += mac_count;
* Unmerged path drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
