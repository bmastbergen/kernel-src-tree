drm/virtio: move drm_connector_update_edid_property() call

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Gerd Hoffmann <kraxel@redhat.com>
commit 41de4be6f6efa4132b29af51158cd672d93f2543
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/41de4be6.failed

drm_connector_update_edid_property can sleep, we must not
call it while holding a spinlock.  Move the callsite.

Fixes: b4b01b4995fb ("drm/virtio: add edid support")
	Reported-by: Max Filippov <jcmvbkbc@gmail.com>
	Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
	Tested-by: Max Filippov <jcmvbkbc@gmail.com>
	Tested-by: Cornelia Huck <cohuck@redhat.com>
	Acked-by: Cornelia Huck <cohuck@redhat.com>
Link: http://patchwork.freedesktop.org/patch/msgid/20190405044602.2334-1-kraxel@redhat.com
(cherry picked from commit 41de4be6f6efa4132b29af51158cd672d93f2543)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/virtio/virtgpu_vq.c
diff --cc drivers/gpu/drm/virtio/virtgpu_vq.c
index 020070d483d3,5bb0f0a084e9..000000000000
--- a/drivers/gpu/drm/virtio/virtgpu_vq.c
+++ b/drivers/gpu/drm/virtio/virtgpu_vq.c
@@@ -596,6 -591,45 +596,48 @@@ static void virtio_gpu_cmd_capset_cb(st
  	wake_up(&vgdev->resp_wq);
  }
  
++<<<<<<< HEAD
++=======
+ static int virtio_get_edid_block(void *data, u8 *buf,
+ 				 unsigned int block, size_t len)
+ {
+ 	struct virtio_gpu_resp_edid *resp = data;
+ 	size_t start = block * EDID_LENGTH;
+ 
+ 	if (start + len > le32_to_cpu(resp->size))
+ 		return -1;
+ 	memcpy(buf, resp->edid + start, len);
+ 	return 0;
+ }
+ 
+ static void virtio_gpu_cmd_get_edid_cb(struct virtio_gpu_device *vgdev,
+ 				       struct virtio_gpu_vbuffer *vbuf)
+ {
+ 	struct virtio_gpu_cmd_get_edid *cmd =
+ 		(struct virtio_gpu_cmd_get_edid *)vbuf->buf;
+ 	struct virtio_gpu_resp_edid *resp =
+ 		(struct virtio_gpu_resp_edid *)vbuf->resp_buf;
+ 	uint32_t scanout = le32_to_cpu(cmd->scanout);
+ 	struct virtio_gpu_output *output;
+ 	struct edid *new_edid, *old_edid;
+ 
+ 	if (scanout >= vgdev->num_scanouts)
+ 		return;
+ 	output = vgdev->outputs + scanout;
+ 
+ 	new_edid = drm_do_get_edid(&output->conn, virtio_get_edid_block, resp);
+ 	drm_connector_update_edid_property(&output->conn, new_edid);
+ 
+ 	spin_lock(&vgdev->display_info_lock);
+ 	old_edid = output->edid;
+ 	output->edid = new_edid;
+ 	spin_unlock(&vgdev->display_info_lock);
+ 
+ 	kfree(old_edid);
+ 	wake_up(&vgdev->resp_wq);
+ }
+ 
++>>>>>>> 41de4be6f6ef (drm/virtio: move drm_connector_update_edid_property() call)
  int virtio_gpu_cmd_get_display_info(struct virtio_gpu_device *vgdev)
  {
  	struct virtio_gpu_ctrl_hdr *cmd_p;
* Unmerged path drivers/gpu/drm/virtio/virtgpu_vq.c
