bpf: libbpf: don't specify prog name if kernel doesn't support it

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Stanislav Fomichev <sdf@google.com>
commit 5b32a23e1d879b78ee72144311314eccf7581bf4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/5b32a23e.failed

Use recently added capability check.

See commit 23499442c319 ("bpf: libbpf: retry map creation without
the name") for rationale.

	Signed-off-by: Stanislav Fomichev <sdf@google.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 5b32a23e1d879b78ee72144311314eccf7581bf4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 9ac238289908,edbae2b1b046..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -1320,9 -1437,10 +1320,16 @@@ load_program(enum bpf_prog_type type, e
  	int ret;
  
  	memset(&load_attr, 0, sizeof(struct bpf_load_program_attr));
++<<<<<<< HEAD
 +	load_attr.prog_type = type;
 +	load_attr.expected_attach_type = expected_attach_type;
 +	load_attr.name = name;
++=======
+ 	load_attr.prog_type = prog->type;
+ 	load_attr.expected_attach_type = prog->expected_attach_type;
+ 	if (prog->caps->name)
+ 		load_attr.name = prog->name;
++>>>>>>> 5b32a23e1d87 (bpf: libbpf: don't specify prog name if kernel doesn't support it)
  	load_attr.insns = insns;
  	load_attr.insns_cnt = insns_cnt;
  	load_attr.license = license;
* Unmerged path tools/lib/bpf/libbpf.c
