r8169: don't read interrupt mask register in interrupt handler

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit c8248c6c1a3d5db944753dd8e1c143d92c2c74fc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/c8248c6c.failed

After the original patch network starts to crash on heavy load.
It's not fully clear why this additional register read has such side
effects, but removing it fixes the issue.

Thanks also to Alex for his contribution and hints.

[0] https://marc.info/?t=155268170400002&r=1&w=2

Fixes: e782410ed237 ("r8169: improve spurious interrupt detection")
	Reported-by: VDR User <user.vdr@gmail.com>
	Tested-by: VDR User <user.vdr@gmail.com>
	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Reviewed-by: Alexander Duyck <alexander.h.duyck@linux.intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c8248c6c1a3d5db944753dd8e1c143d92c2c74fc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169.c
diff --cc drivers/net/ethernet/realtek/r8169.c
index f8f6fbd7e2ad,9dd1cd2c0c68..000000000000
--- a/drivers/net/ethernet/realtek/r8169.c
+++ b/drivers/net/ethernet/realtek/r8169.c
@@@ -1294,7 -1294,7 +1295,11 @@@ static void rtl_ack_events(struct rtl81
  static void rtl_irq_disable(struct rtl8169_private *tp)
  {
  	RTL_W16(tp, IntrMask, 0);
++<<<<<<< HEAD
 +	mmiowb();
++=======
+ 	tp->irq_enabled = 0;
++>>>>>>> c8248c6c1a3d (r8169: don't read interrupt mask register in interrupt handler)
  }
  
  #define RTL_EVENT_NAPI_RX	(RxOK | RxErr)
* Unmerged path drivers/net/ethernet/realtek/r8169.c
