net/mlx5: Fix DCT creation bad flow

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yishai Hadas <yishaih@mellanox.com>
commit f84b66b9cce78e8f9d38204fdaa75f07c75f4911
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/f84b66b9.failed

In case the DCT creation command has succeeded a DRAIN must be issued
before calling DESTROY.

In addition, the original code used the wrong parameter for the DESTROY
command, 'in' instead of 'din', which caused another creation try instead
of destroying.

	Cc: <stable@vger.kernel.org> # 4.15
Fixes: 57cda166bbe0 ("net/mlx5: Add DCT command interface")
	Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
	Reviewed-by: Artemy Kovalyov <artemyko@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit f84b66b9cce78e8f9d38204fdaa75f07c75f4911)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/qp.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/qp.c
index d5bdd62c21bb,c7c2920c05c4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/qp.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/qp.c
@@@ -38,11 -38,14 +38,19 @@@
  #include <linux/mlx5/transobj.h>
  
  #include "mlx5_core.h"
 -#include "lib/eq.h"
  
++<<<<<<< HEAD
 +static struct mlx5_core_rsc_common *mlx5_get_rsc(struct mlx5_core_dev *dev,
 +						 u32 rsn)
++=======
+ static int mlx5_core_drain_dct(struct mlx5_core_dev *dev,
+ 			       struct mlx5_core_dct *dct);
+ 
+ static struct mlx5_core_rsc_common *
+ mlx5_get_rsc(struct mlx5_qp_table *table, u32 rsn)
++>>>>>>> f84b66b9cce7 (net/mlx5: Fix DCT creation bad flow)
  {
 +	struct mlx5_qp_table *table = &dev->priv.qp_table;
  	struct mlx5_core_rsc_common *common;
  	unsigned long flags;
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/qp.c
