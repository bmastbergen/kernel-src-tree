net/tls: build_protos moved to common routine

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [net] tls: build_protos moved to common routine (Sabrina Dubroca) [1711821]
Rebuild_FUZZ: 95.35%
commit-author Atul Gupta <atul.gupta@chelsio.com>
commit 63a6b3fee428aeb0288670fc061fa9559b5aca1b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/63a6b3fe.failed

build protos is required for tls_hw_prot also hence moved to
'tls_build_proto' and called as required from tls_init
and tls_hw_proto. This is required since build_protos
for v4 is moved from tls_register to tls_init in
commit <28cb6f1eaffdc5a6a9707cac55f4a43aa3fd7895>

	Signed-off-by: Atul Gupta <atul.gupta@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 63a6b3fee428aeb0288670fc061fa9559b5aca1b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tls/tls_main.c
diff --cc net/tls/tls_main.c
index a3694e64e12d,fc97a105ebc2..000000000000
--- a/net/tls/tls_main.c
+++ b/net/tls/tls_main.c
@@@ -55,10 -55,14 +55,12 @@@ enum 
  
  static struct proto *saved_tcpv6_prot;
  static DEFINE_MUTEX(tcpv6_prot_mutex);
 -static struct proto *saved_tcpv4_prot;
 -static DEFINE_MUTEX(tcpv4_prot_mutex);
  static LIST_HEAD(device_list);
 -static DEFINE_SPINLOCK(device_spinlock);
 +static DEFINE_MUTEX(device_mutex);
  static struct proto tls_prots[TLS_NUM_PROTS][TLS_NUM_CONFIG][TLS_NUM_CONFIG];
  static struct proto_ops tls_sw_proto_ops;
+ static void build_protos(struct proto prot[TLS_NUM_CONFIG][TLS_NUM_CONFIG],
+ 			 struct proto *base);
  
  static void update_sk_prot(struct sock *sk, struct tls_context *ctx)
  {
@@@ -676,17 -721,7 +706,21 @@@ static int tls_init(struct sock *sk
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	/* Build IPv6 TLS whenever the address of tcpv6	_prot changes */
 +	if (ip_ver == TLSV6 &&
 +	    unlikely(sk->sk_prot != smp_load_acquire(&saved_tcpv6_prot))) {
 +		mutex_lock(&tcpv6_prot_mutex);
 +		if (likely(sk->sk_prot != saved_tcpv6_prot)) {
 +			build_protos(tls_prots[TLSV6], sk->sk_prot);
 +			smp_store_release(&saved_tcpv6_prot, sk->sk_prot);
 +		}
 +		mutex_unlock(&tcpv6_prot_mutex);
 +	}
 +
++=======
+ 	tls_build_proto(sk);
++>>>>>>> 63a6b3fee428 (net/tls: build_protos moved to common routine)
  	ctx->tx_conf = TLS_BASE;
  	ctx->rx_conf = TLS_BASE;
  	update_sk_prot(sk, ctx);
* Unmerged path net/tls/tls_main.c
