net: mii: Rename mii_stat1000_to_linkmode_lpa_t

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [netdrv] mii: Rename mii_stat1000_to_linkmode_lpa_t (Petr Oros) [1691676]
Rebuild_FUZZ: 94.38%
commit-author Andrew Lunn <andrew@lunn.ch>
commit 78a24df370072ea3b7c0a466efd776fc8f87c73a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/78a24df3.failed

Rename mii_stat1000_to_linkmode_lpa_t to
mii_stat1000_mod_linkmode_lpa_t to indicate it modifies the passed
linkmode bitmap, without clearing any other bits.

Add a helper to set/clear bits in a linkmode.

Use this helper to ensure bit are clear which the stat1000 indicates
should not be set.

Fixes: c0ec3c273677 ("net: phy: Convert u32 phydev->lp_advertising to linkmode")
	Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 78a24df370072ea3b7c0a466efd776fc8f87c73a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/marvell.c
#	drivers/net/phy/marvell10g.c
#	drivers/net/phy/phy_device.c
#	include/linux/mii.h
diff --cc drivers/net/phy/marvell.c
index f46f1b5bde0c,03dafe0e68a2..000000000000
--- a/drivers/net/phy/marvell.c
+++ b/drivers/net/phy/marvell.c
@@@ -1155,9 -1137,8 +1155,14 @@@ static int marvell_read_status_page_an(
  	}
  
  	if (!fiber) {
++<<<<<<< HEAD
 +		phydev->lp_advertising =
 +			mii_stat1000_to_ethtool_lpa_t(lpagb) |
 +			mii_lpa_to_ethtool_lpa_t(lpa);
++=======
+ 		mii_lpa_to_linkmode_lpa_t(phydev->lp_advertising, lpa);
+ 		mii_stat1000_mod_linkmode_lpa_t(phydev->lp_advertising, lpagb);
++>>>>>>> 78a24df37007 (net: mii: Rename mii_stat1000_to_linkmode_lpa_t)
  
  		if (phydev->duplex == DUPLEX_FULL) {
  			phydev->pause = lpa & LPA_PAUSE_CAP ? 1 : 0;
diff --cc drivers/net/phy/marvell10g.c
index 1c9d039eec63,82ab6ed3b74e..000000000000
--- a/drivers/net/phy/marvell10g.c
+++ b/drivers/net/phy/marvell10g.c
@@@ -491,7 -490,7 +491,11 @@@ static int mv3310_read_status(struct ph
  		if (val < 0)
  			return val;
  
++<<<<<<< HEAD
 +		phydev->lp_advertising |= mii_stat1000_to_ethtool_lpa_t(val);
++=======
+ 		mii_stat1000_mod_linkmode_lpa_t(phydev->lp_advertising, val);
++>>>>>>> 78a24df37007 (net: mii: Rename mii_stat1000_to_linkmode_lpa_t)
  
  		if (phydev->autoneg == AUTONEG_ENABLE)
  			phy_resolve_aneg_linkmode(phydev);
diff --cc drivers/net/phy/phy_device.c
index e0d479da7531,c20b5ecc0f4b..000000000000
--- a/drivers/net/phy/phy_device.c
+++ b/drivers/net/phy/phy_device.c
@@@ -1699,8 -1731,16 +1699,21 @@@ int genphy_read_status(struct phy_devic
  			if (adv < 0)
  				return adv;
  
++<<<<<<< HEAD
 +			phydev->lp_advertising =
 +				mii_stat1000_to_ethtool_lpa_t(lpagb);
++=======
+ 			if (lpagb & LPA_1000MSFAIL) {
+ 				if (adv & CTL1000_ENABLE_MASTER)
+ 					phydev_err(phydev, "Master/Slave resolution failed, maybe conflicting manual settings?\n");
+ 				else
+ 					phydev_err(phydev, "Master/Slave resolution failed\n");
+ 				return -ENOLINK;
+ 			}
+ 
+ 			mii_stat1000_mod_linkmode_lpa_t(phydev->lp_advertising,
+ 							lpagb);
++>>>>>>> 78a24df37007 (net: mii: Rename mii_stat1000_to_linkmode_lpa_t)
  			common_adv_gb = lpagb & adv << 2;
  		}
  
diff --cc include/linux/mii.h
index b1ce53b7dcd6,b915ef6c3692..000000000000
--- a/include/linux/mii.h
+++ b/include/linux/mii.h
@@@ -288,6 -288,25 +288,28 @@@ static inline u32 mii_stat1000_to_ethto
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * mii_stat1000_mod_linkmode_lpa_t
+  * @advertising: target the linkmode advertisement settings
+  * @adv: value of the MII_STAT1000 register
+  *
+  * A small helper function that translates MII_STAT1000 bits, when in
+  * 1000Base-T mode, to linkmode advertisement settings. Other bits in
+  * advertising are not changes.
+  */
+ static inline void mii_stat1000_mod_linkmode_lpa_t(unsigned long *advertising,
+ 						   u32 lpa)
+ {
+ 	linkmode_mod_bit(ETHTOOL_LINK_MODE_1000baseT_Half_BIT,
+ 			 advertising, lpa & LPA_1000HALF);
+ 
+ 	linkmode_mod_bit(ETHTOOL_LINK_MODE_1000baseT_Full_BIT,
+ 			 advertising, lpa & LPA_1000FULL);
+ }
+ 
+ /**
++>>>>>>> 78a24df37007 (net: mii: Rename mii_stat1000_to_linkmode_lpa_t)
   * ethtool_adv_to_mii_adv_x
   * @ethadv: the ethtool advertisement settings
   *
* Unmerged path drivers/net/phy/marvell.c
* Unmerged path drivers/net/phy/marvell10g.c
* Unmerged path drivers/net/phy/phy_device.c
diff --git a/include/linux/linkmode.h b/include/linux/linkmode.h
index 22443d7fb5cd..a99c58866860 100644
--- a/include/linux/linkmode.h
+++ b/include/linux/linkmode.h
@@ -57,6 +57,15 @@ static inline void linkmode_clear_bit(int nr, volatile unsigned long *addr)
 	__clear_bit(nr, addr);
 }
 
+static inline void linkmode_mod_bit(int nr, volatile unsigned long *addr,
+				    int set)
+{
+	if (set)
+		linkmode_set_bit(nr, addr);
+	else
+		linkmode_clear_bit(nr, addr);
+}
+
 static inline void linkmode_change_bit(int nr, volatile unsigned long *addr)
 {
 	__change_bit(nr, addr);
* Unmerged path include/linux/mii.h
