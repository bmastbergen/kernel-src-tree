ice: Don't remove VLAN filters that were never programmed

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
commit bb877b22bcb5334fc4e1752fe77e96ab762c3738
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/bb877b22.failed

In case of non-trusted VFs, it is possible to program VLAN filter far
less than what is requested by the VF originally, thereby makes number of
VLAN elements being tracked by VF different from actual VLAN tags. This
patch makes sure that we are not attempting to remove VLAN filter that
does not exist.

	Signed-off-by: Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
	Signed-off-by: Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit bb877b22bcb5334fc4e1752fe77e96ab762c3738)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_lib.c
diff --cc drivers/net/ethernet/intel/ice/ice_lib.c
index 3e0e04a561d0,83d0aef7f77e..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_lib.c
+++ b/drivers/net/ethernet/intel/ice/ice_lib.c
@@@ -1607,10 -1615,16 +1607,23 @@@ int ice_vsi_kill_vlan(struct ice_vsi *v
  	INIT_LIST_HEAD(&list->list_entry);
  	list_add(&list->list_entry, &tmp_add_list);
  
++<<<<<<< HEAD
 +	if (ice_remove_vlan(&pf->hw, &tmp_add_list)) {
 +		dev_err(&pf->pdev->dev, "Error removing VLAN %d on vsi %i\n",
 +			vid, vsi->vsi_num);
 +		status = -EIO;
++=======
+ 	status = ice_remove_vlan(&pf->hw, &tmp_add_list);
+ 	if (status == ICE_ERR_DOES_NOT_EXIST) {
+ 		dev_dbg(&pf->pdev->dev,
+ 			"Failed to remove VLAN %d on VSI %i, it does not exist, status: %d\n",
+ 			vid, vsi->vsi_num, status);
+ 	} else if (status) {
+ 		dev_err(&pf->pdev->dev,
+ 			"Error removing VLAN %d on vsi %i error: %d\n",
+ 			vid, vsi->vsi_num, status);
+ 		err = -EIO;
++>>>>>>> bb877b22bcb5 (ice: Don't remove VLAN filters that were never programmed)
  	}
  
  	ice_free_fltr_list(&pf->pdev->dev, &tmp_add_list);
* Unmerged path drivers/net/ethernet/intel/ice/ice_lib.c
diff --git a/drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c b/drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
index 1a8c205aca82..6b10cee3b205 100644
--- a/drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
+++ b/drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
@@ -2254,7 +2254,17 @@ static int ice_vc_process_vlan_msg(struct ice_vf *vf, u8 *msg, bool add_v)
 			}
 		}
 	} else {
-		for (i = 0; i < vfl->num_elements; i++) {
+		/* In case of non_trusted VF, number of VLAN elements passed
+		 * to PF for removal might be greater than number of VLANs
+		 * filter programmed for that VF - So, use actual number of
+		 * VLANS added earlier with add VLAN opcode. In order to avoid
+		 * removing VLAN that doesn't exist, which result to sending
+		 * erroneous failed message back to the VF
+		 */
+		int num_vf_vlan;
+
+		num_vf_vlan = vf->num_vlan;
+		for (i = 0; i < vfl->num_elements && i < num_vf_vlan; i++) {
 			u16 vid = vfl->vlan_id[i];
 
 			/* Make sure ice_vsi_kill_vlan is successful before
