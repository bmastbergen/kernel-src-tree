Revert "drm/i915: W/A for underruns with WM1+ disabled on icl"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Ville Syrj채l채 <ville.syrjala@linux.intel.com>
commit bfe0cd28518d3bd2a3d278dad5a6ed1c55a65f32
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/bfe0cd28.failed

This reverts commit bf002c100740f4ae01d0d86b44f65a712ee14031.

The hw team has come up with a better workaround. So
let's get rid of this one.

	Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20190213165424.22904-1-ville.syrjala@linux.intel.com
	Reviewed-by: Clint Taylor <Clinton.A.Taylor@intel.com>
(cherry picked from commit bfe0cd28518d3bd2a3d278dad5a6ed1c55a65f32)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_reg.h
#	drivers/gpu/drm/i915/intel_display.c
diff --cc drivers/gpu/drm/i915/i915_reg.h
index a78c6ef1f608,2ee810d466ad..000000000000
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@@ -7269,13 -7640,21 +7269,25 @@@ enum 
  
  /* WaCatErrorRejectionIssue */
  #define GEN7_SQ_CHICKEN_MBCUNIT_CONFIG		_MMIO(0x9030)
 -#define  GEN7_SQ_CHICKEN_MBCUNIT_SQINTMOB	(1 << 11)
 +#define  GEN7_SQ_CHICKEN_MBCUNIT_SQINTMOB	(1<<11)
  
  #define HSW_SCRATCH1				_MMIO(0xb038)
 -#define  HSW_SCRATCH1_L3_DATA_ATOMICS_DISABLE	(1 << 27)
 +#define  HSW_SCRATCH1_L3_DATA_ATOMICS_DISABLE	(1<<27)
  
  #define BDW_SCRATCH1					_MMIO(0xb11c)
++<<<<<<< HEAD
 +#define  GEN9_LBS_SLA_RETRY_TIMER_DECREMENT_ENABLE	(1<<2)
++=======
+ #define  GEN9_LBS_SLA_RETRY_TIMER_DECREMENT_ENABLE	(1 << 2)
+ 
+ /*GEN11 chicken */
+ #define _PIPEA_CHICKEN			0x70038
+ #define _PIPEB_CHICKEN			0x71038
+ #define _PIPEC_CHICKEN			0x72038
+ #define  PER_PIXEL_ALPHA_BYPASS_EN	(1 << 7)
+ #define PIPE_CHICKEN(pipe)		_MMIO_PIPE(pipe, _PIPEA_CHICKEN,\
+ 						   _PIPEB_CHICKEN)
++>>>>>>> bfe0cd28518d (Revert "drm/i915: W/A for underruns with WM1+ disabled on icl")
  
  /* PCH */
  
diff --cc drivers/gpu/drm/i915/intel_display.c
index dec0d60921bf,5e126234a70d..000000000000
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@@ -3857,6 -3947,24 +3857,27 @@@ unlock
  	clear_bit(I915_RESET_MODESET, &dev_priv->gpu_error.flags);
  }
  
++<<<<<<< HEAD
++=======
+ static void icl_set_pipe_chicken(struct intel_crtc *crtc)
+ {
+ 	struct drm_i915_private *dev_priv = to_i915(crtc->base.dev);
+ 	enum pipe pipe = crtc->pipe;
+ 	u32 tmp;
+ 
+ 	tmp = I915_READ(PIPE_CHICKEN(pipe));
+ 
+ 	/*
+ 	 * Display WA #1153: icl
+ 	 * enable hardware to bypass the alpha math
+ 	 * and rounding for per-pixel values 00 and 0xff
+ 	 */
+ 	tmp |= PER_PIXEL_ALPHA_BYPASS_EN;
+ 
+ 	I915_WRITE(PIPE_CHICKEN(pipe), tmp);
+ }
+ 
++>>>>>>> bfe0cd28518d (Revert "drm/i915: W/A for underruns with WM1+ disabled on icl")
  static void intel_update_pipe_config(const struct intel_crtc_state *old_crtc_state,
  				     const struct intel_crtc_state *new_crtc_state)
  {
* Unmerged path drivers/gpu/drm/i915/i915_reg.h
* Unmerged path drivers/gpu/drm/i915/intel_display.c
