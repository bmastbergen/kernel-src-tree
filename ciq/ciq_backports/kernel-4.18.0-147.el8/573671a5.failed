IB/uverbs: Signedness bug in UVERBS_HANDLER()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 573671a5f6509c4139770452d4516720a84d5b61
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/573671a5.failed

The "num_sge" variable needs to be signed for the error handling to work.
The uverbs_attr_ptr_get_array_size() returns int so this change is safe.

Fixes: ad8a4496757f ("IB/uverbs: Add support to advise_mr")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 573671a5f6509c4139770452d4516720a84d5b61)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_std_types_mr.c
diff --cc drivers/infiniband/core/uverbs_std_types_mr.c
index 68f7cadf088f,4d4be0c2b752..000000000000
--- a/drivers/infiniband/core/uverbs_std_types_mr.c
+++ b/drivers/infiniband/core/uverbs_std_types_mr.c
@@@ -39,14 -39,54 +39,55 @@@ static int uverbs_free_mr(struct ib_uob
  	return ib_dereg_mr((struct ib_mr *)uobject->object);
  }
  
++<<<<<<< HEAD
 +static int UVERBS_HANDLER(UVERBS_METHOD_DM_MR_REG)(struct ib_device *ib_dev,
 +						   struct ib_uverbs_file *file,
 +						   struct uverbs_attr_bundle *attrs)
++=======
+ static int UVERBS_HANDLER(UVERBS_METHOD_ADVISE_MR)(
+ 	struct uverbs_attr_bundle *attrs)
+ {
+ 	struct ib_pd *pd =
+ 		uverbs_attr_get_obj(attrs, UVERBS_ATTR_ADVISE_MR_PD_HANDLE);
+ 	enum ib_uverbs_advise_mr_advice advice;
+ 	struct ib_device *ib_dev = pd->device;
+ 	struct ib_sge *sg_list;
+ 	int num_sge;
+ 	u32 flags;
+ 	int ret;
+ 
+ 	/* FIXME: Extend the UAPI_DEF_OBJ_NEEDS_FN stuff.. */
+ 	if (!ib_dev->ops.advise_mr)
+ 		return -EOPNOTSUPP;
+ 
+ 	ret = uverbs_get_const(&advice, attrs, UVERBS_ATTR_ADVISE_MR_ADVICE);
+ 	if (ret)
+ 		return ret;
+ 
+ 	ret = uverbs_get_flags32(&flags, attrs, UVERBS_ATTR_ADVISE_MR_FLAGS,
+ 				 IB_UVERBS_ADVISE_MR_FLAG_FLUSH);
+ 	if (ret)
+ 		return ret;
+ 
+ 	num_sge = uverbs_attr_ptr_get_array_size(
+ 		attrs, UVERBS_ATTR_ADVISE_MR_SGE_LIST, sizeof(struct ib_sge));
+ 	if (num_sge < 0)
+ 		return num_sge;
+ 
+ 	sg_list = uverbs_attr_get_alloced_ptr(attrs,
+ 					      UVERBS_ATTR_ADVISE_MR_SGE_LIST);
+ 	return ib_dev->ops.advise_mr(pd, advice, flags, sg_list, num_sge,
+ 				     attrs);
+ }
+ 
+ static int UVERBS_HANDLER(UVERBS_METHOD_DM_MR_REG)(
+ 	struct uverbs_attr_bundle *attrs)
++>>>>>>> 573671a5f650 (IB/uverbs: Signedness bug in UVERBS_HANDLER())
  {
  	struct ib_dm_mr_attr attr = {};
 -	struct ib_uobject *uobj =
 -		uverbs_attr_get_uobject(attrs, UVERBS_ATTR_REG_DM_MR_HANDLE);
 -	struct ib_dm *dm =
 -		uverbs_attr_get_obj(attrs, UVERBS_ATTR_REG_DM_MR_DM_HANDLE);
 -	struct ib_pd *pd =
 -		uverbs_attr_get_obj(attrs, UVERBS_ATTR_REG_DM_MR_PD_HANDLE);
 -	struct ib_device *ib_dev = pd->device;
 -
 +	struct ib_uobject *uobj;
 +	struct ib_dm *dm;
 +	struct ib_pd *pd;
  	struct ib_mr *mr;
  	int ret;
  
* Unmerged path drivers/infiniband/core/uverbs_std_types_mr.c
