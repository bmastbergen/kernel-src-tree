scsi: qla2xxx: Fix for FC-NVMe discovery for NPIV port

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Giridhar Malavali <gmalavali@marvell.com>
commit 835aa4f2691e4ed4ed16de81f3cabf17a87a164f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/835aa4f2.failed

This patch fixes NVMe discovery by setting SKIP_PRLI flag, so that PRLI is
driven by driver and is retried when the NPIV port is detected to have NVMe
capability.

	Signed-off-by: Giridhar Malavali <gmalavali@marvell.com>
	Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 835aa4f2691e4ed4ed16de81f3cabf17a87a164f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_init.c
diff --cc drivers/scsi/qla2xxx/qla_init.c
index 92877aa6a237,d403b56522ba..000000000000
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@@ -221,13 -237,20 +221,29 @@@ qla2x00_async_login(struct scsi_qla_hos
  	qla2x00_init_timer(sp, qla2x00_get_async_timeout(vha) + 2);
  
  	sp->done = qla2x00_async_login_sp_done;
++<<<<<<< HEAD
 +	lio->u.logio.flags |= SRB_LOGIN_COND_PLOGI;
 +
 +	if (fcport->fc4f_nvme)
 +		lio->u.logio.flags |= SRB_LOGIN_SKIP_PRLI;
++=======
+ 	if (N2N_TOPO(fcport->vha->hw) && fcport_is_bigger(fcport))
+ 		lio->u.logio.flags |= SRB_LOGIN_PRLI_ONLY;
+ 	else
+ 		lio->u.logio.flags |= SRB_LOGIN_COND_PLOGI;
+ 
+ 	if (fcport->fc4f_nvme)
+ 		lio->u.logio.flags |= SRB_LOGIN_SKIP_PRLI;
+ 
+ 	ql_dbg(ql_dbg_disc, vha, 0x2072,
+ 	    "Async-login - %8phC hdl=%x, loopid=%x portid=%02x%02x%02x "
+ 		"retries=%d.\n", fcport->port_name, sp->handle, fcport->loop_id,
+ 	    fcport->d_id.b.domain, fcport->d_id.b.area, fcport->d_id.b.al_pa,
+ 	    fcport->login_retry);
++>>>>>>> 835aa4f2691e (scsi: qla2xxx: Fix for FC-NVMe discovery for NPIV port)
  
 +	if (data[1] & QLA_LOGIO_LOGIN_RETRIED)
 +		lio->u.logio.flags |= SRB_LOGIN_RETRIED;
  	rval = qla2x00_start_sp(sp);
  	if (rval != QLA_SUCCESS) {
  		fcport->flags |= FCF_LOGIN_NEEDED;
diff --git a/drivers/scsi/qla2xxx/qla_attr.c b/drivers/scsi/qla2xxx/qla_attr.c
index c8731568f9c4..98bfac684cb4 100644
--- a/drivers/scsi/qla2xxx/qla_attr.c
+++ b/drivers/scsi/qla2xxx/qla_attr.c
@@ -2140,6 +2140,8 @@ qla24xx_vport_delete(struct fc_vport *fc_vport)
 	    test_bit(FCPORT_UPDATE_NEEDED, &vha->dpc_flags))
 		msleep(1000);
 
+	qla_nvme_delete(vha);
+
 	qla24xx_disable_vp(vha);
 	qla2x00_wait_for_sess_deletion(vha);
 
* Unmerged path drivers/scsi/qla2xxx/qla_init.c
