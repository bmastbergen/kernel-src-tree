IB/hfi1: Clear the IOWAIT pending bits when QP is put into error state

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Kaike Wan <kaike.wan@intel.com>
commit 93b289b9aff66eca7575b09f36f5abbeca8e6167
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/93b289b9.failed

When a QP is put into error state, it may be waiting for send engine
resources. In this case, the QP will be removed from the send engine's
waiting list, but its IOWAIT pending bits are not cleared. This will
normally not have any major impact as the QP is being destroyed.  However,
the QP still needs to wind down its operations, such as draining the send
queue by scheduling the send engine. Clearing the pending bits will avoid
any potential complications. In addition, if the QP will eventually hang,
clearing the pending bits can help debugging by presenting a consistent
picture if the user dumps the qp_stats.

This patch clears a QP's IOWAIT_PENDING_IB and IO_PENDING_TID bits in
priv->s_iowait.flags in this case.

Fixes: 5da0fc9dbf89 ("IB/hfi1: Prepare resource waits for dual leg")
	Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Reviewed-by: Alex Estrin <alex.estrin@intel.com>
	Signed-off-by: Kaike Wan <kaike.wan@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 93b289b9aff66eca7575b09f36f5abbeca8e6167)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/hfi1/qp.c
diff --cc drivers/infiniband/hw/hfi1/qp.c
index 5344e8993b28,eba300330a02..000000000000
--- a/drivers/infiniband/hw/hfi1/qp.c
+++ b/drivers/infiniband/hw/hfi1/qp.c
@@@ -832,8 -896,11 +832,16 @@@ void notify_error_qp(struct rvt_qp *qp
  	if (lock) {
  		write_seqlock(lock);
  		if (!list_empty(&priv->s_iowait.list) &&
++<<<<<<< HEAD
 +		    !(qp->s_flags & RVT_S_BUSY)) {
 +			qp->s_flags &= ~RVT_S_ANY_WAIT_IO;
++=======
+ 		    !(qp->s_flags & RVT_S_BUSY) &&
+ 		    !(priv->s_flags & RVT_S_BUSY)) {
+ 			qp->s_flags &= ~HFI1_S_ANY_WAIT_IO;
+ 			iowait_clear_flag(&priv->s_iowait, IOWAIT_PENDING_IB);
+ 			iowait_clear_flag(&priv->s_iowait, IOWAIT_PENDING_TID);
++>>>>>>> 93b289b9aff6 (IB/hfi1: Clear the IOWAIT pending bits when QP is put into error state)
  			list_del_init(&priv->s_iowait.list);
  			priv->s_iowait.lock = NULL;
  			rvt_put_qp(qp);
* Unmerged path drivers/infiniband/hw/hfi1/qp.c
