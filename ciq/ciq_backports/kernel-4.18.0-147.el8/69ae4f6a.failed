mwifiex: Fix heap overflow in mwifiex_uap_parse_tail_ies()

jira LE-1907
cve CVE-2019-10126
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 69ae4f6aac1578575126319d3f55550e7e440449
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/69ae4f6a.failed

A few places in mwifiex_uap_parse_tail_ies() perform memcpy()
unconditionally, which may lead to either buffer overflow or read over
boundary.

This patch addresses the issues by checking the read size and the
destination size at each place more properly.  Along with the fixes,
the patch cleans up the code slightly by introducing a temporary
variable for the token size, and unifies the error path with the
standard goto statement.

	Reported-by: huangwen <huangwen@venustech.com.cn>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
(cherry picked from commit 69ae4f6aac1578575126319d3f55550e7e440449)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/marvell/mwifiex/ie.c
diff --cc drivers/net/wireless/marvell/mwifiex/ie.c
index b10baacb51c9,653d347a9a19..000000000000
--- a/drivers/net/wireless/marvell/mwifiex/ie.c
+++ b/drivers/net/wireless/marvell/mwifiex/ie.c
@@@ -355,16 -363,26 +363,29 @@@ static int mwifiex_uap_parse_tail_ies(s
  		case WLAN_EID_HT_OPERATION:
  		case WLAN_EID_VHT_CAPABILITY:
  		case WLAN_EID_VHT_OPERATION:
 -			break;
  		case WLAN_EID_VENDOR_SPECIFIC:
++<<<<<<< HEAD
 +			break;
++=======
+ 			/* Skip only Microsoft WMM IE */
+ 			if (cfg80211_find_vendor_ie(WLAN_OUI_MICROSOFT,
+ 						    WLAN_OUI_TYPE_MICROSOFT_WMM,
+ 						    (const u8 *)hdr,
+ 						    token_len))
+ 				break;
+ 			/* fall through */
++>>>>>>> 69ae4f6aac15 (mwifiex: Fix heap overflow in mwifiex_uap_parse_tail_ies())
  		default:
- 			memcpy(gen_ie->ie_buffer + ie_len, hdr,
- 			       hdr->len + sizeof(struct ieee_types_header));
- 			ie_len += hdr->len + sizeof(struct ieee_types_header);
+ 			if (ie_len + token_len > IEEE_MAX_IE_SIZE) {
+ 				err = -EINVAL;
+ 				goto out;
+ 			}
+ 			memcpy(gen_ie->ie_buffer + ie_len, hdr, token_len);
+ 			ie_len += token_len;
  			break;
  		}
- 		left_len -= hdr->len + sizeof(struct ieee_types_header);
- 		parsed_len += hdr->len + sizeof(struct ieee_types_header);
+ 		left_len -= token_len;
+ 		parsed_len += token_len;
  	}
  
  	/* parse only WPA vendor IE from tail, WMM IE is configured by
* Unmerged path drivers/net/wireless/marvell/mwifiex/ie.c
