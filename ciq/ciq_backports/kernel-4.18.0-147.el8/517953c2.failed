arm64: Use firmware to detect CPUs that are not affected by Spectre-v2

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Marc Zyngier <marc.zyngier@arm.com>
commit 517953c2c47f9c00a002f588ac856a5bc70cede3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/517953c2.failed

The SMCCC ARCH_WORKAROUND_1 service can indicate that although the
firmware knows about the Spectre-v2 mitigation, this particular
CPU is not vulnerable, and it is thus not necessary to call
the firmware on this CPU.

Let's use this information to our benefit.

	Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
	Signed-off-by: Jeremy Linton <jeremy.linton@arm.com>
	Reviewed-by: Andre Przywara <andre.przywara@arm.com>
	Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
	Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit 517953c2c47f9c00a002f588ac856a5bc70cede3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/cpu_errata.c
diff --cc arch/arm64/kernel/cpu_errata.c
index fde6f87a8b7e,60cf87c4deb7..000000000000
--- a/arch/arm64/kernel/cpu_errata.c
+++ b/arch/arm64/kernel/cpu_errata.c
@@@ -213,22 -230,36 +213,53 @@@ enable_smccc_arch_workaround_1(const st
  	case PSCI_CONDUIT_HVC:
  		arm_smccc_1_1_hvc(ARM_SMCCC_ARCH_FEATURES_FUNC_ID,
  				  ARM_SMCCC_ARCH_WORKAROUND_1, &res);
++<<<<<<< HEAD
 +		if ((int)res.a0 < 0)
 +			return;
 +		cb = call_hvc_arch_workaround_1;
 +		/* This is a guest, no need to patch KVM vectors */
 +		smccc_start = NULL;
 +		smccc_end = NULL;
++=======
+ 		switch ((int)res.a0) {
+ 		case 1:
+ 			/* Firmware says we're just fine */
+ 			return 0;
+ 		case 0:
+ 			cb = call_hvc_arch_workaround_1;
+ 			/* This is a guest, no need to patch KVM vectors */
+ 			smccc_start = NULL;
+ 			smccc_end = NULL;
+ 			break;
+ 		default:
+ 			return -1;
+ 		}
++>>>>>>> 517953c2c47f (arm64: Use firmware to detect CPUs that are not affected by Spectre-v2)
  		break;
  
  	case PSCI_CONDUIT_SMC:
  		arm_smccc_1_1_smc(ARM_SMCCC_ARCH_FEATURES_FUNC_ID,
  				  ARM_SMCCC_ARCH_WORKAROUND_1, &res);
++<<<<<<< HEAD
 +		if ((int)res.a0 < 0)
 +			return;
 +		cb = call_smc_arch_workaround_1;
 +		smccc_start = __smccc_workaround_1_smc_start;
 +		smccc_end = __smccc_workaround_1_smc_end;
++=======
+ 		switch ((int)res.a0) {
+ 		case 1:
+ 			/* Firmware says we're just fine */
+ 			return 0;
+ 		case 0:
+ 			cb = call_smc_arch_workaround_1;
+ 			smccc_start = __smccc_workaround_1_smc_start;
+ 			smccc_end = __smccc_workaround_1_smc_end;
+ 			break;
+ 		default:
+ 			return -1;
+ 		}
++>>>>>>> 517953c2c47f (arm64: Use firmware to detect CPUs that are not affected by Spectre-v2)
  		break;
  
  	default:
* Unmerged path arch/arm64/kernel/cpu_errata.c
