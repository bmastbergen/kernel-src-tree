IB/core: Add advise_mr to the list of known ops

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Moni Shoua <monis@mellanox.com>
commit 2f1927b090345d7e65e6e873baba1599b18a0e26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/2f1927b0.failed

We need to add advise_mr to the list of operation setters on the ib_device
or otherwise callers to ib_set_device_ops() for advise_mr operation will
not have their callback registered.

When the advise_mr series was merged with the device ops series the
SET_DEVICE_OPS() was missed.

Fixes: 813e90b1aeaa ("IB/mlx5: Add advise_mr() support")
	Signed-off-by: Moni Shoua <monis@mellanox.com>
	Reviewed-by: Majd Dibbiny <majd@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 2f1927b090345d7e65e6e873baba1599b18a0e26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
diff --cc drivers/infiniband/core/device.c
index 11bcc4462310,8872453e26c0..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -1190,92 -1231,93 +1190,182 @@@ void ib_set_device_ops(struct ib_devic
  				(ptr)->name = ops->name;                       \
  	} while (0)
  
++<<<<<<< HEAD
 +	SET_DEVICE_OP(dev, add_gid);
 +	SET_DEVICE_OP(dev, alloc_dm);
 +	SET_DEVICE_OP(dev, alloc_fmr);
 +	SET_DEVICE_OP(dev, alloc_hw_stats);
 +	SET_DEVICE_OP(dev, alloc_mr);
 +	SET_DEVICE_OP(dev, alloc_mw);
 +	SET_DEVICE_OP(dev, alloc_pd);
 +	SET_DEVICE_OP(dev, alloc_rdma_netdev);
 +	SET_DEVICE_OP(dev, alloc_ucontext);
 +	SET_DEVICE_OP(dev, alloc_xrcd);
 +	SET_DEVICE_OP(dev, attach_mcast);
 +	SET_DEVICE_OP(dev, check_mr_status);
 +	SET_DEVICE_OP(dev, create_ah);
 +	SET_DEVICE_OP(dev, create_counters);
 +	SET_DEVICE_OP(dev, create_cq);
 +	SET_DEVICE_OP(dev, create_flow);
 +	SET_DEVICE_OP(dev, create_flow_action_esp);
 +	SET_DEVICE_OP(dev, create_qp);
 +	SET_DEVICE_OP(dev, create_rwq_ind_table);
 +	SET_DEVICE_OP(dev, create_srq);
 +	SET_DEVICE_OP(dev, create_wq);
 +	SET_DEVICE_OP(dev, dealloc_dm);
 +	SET_DEVICE_OP(dev, dealloc_fmr);
 +	SET_DEVICE_OP(dev, dealloc_mw);
 +	SET_DEVICE_OP(dev, dealloc_pd);
 +	SET_DEVICE_OP(dev, dealloc_ucontext);
 +	SET_DEVICE_OP(dev, dealloc_xrcd);
 +	SET_DEVICE_OP(dev, del_gid);
 +	SET_DEVICE_OP(dev, dereg_mr);
 +	SET_DEVICE_OP(dev, destroy_ah);
 +	SET_DEVICE_OP(dev, destroy_counters);
 +	SET_DEVICE_OP(dev, destroy_cq);
 +	SET_DEVICE_OP(dev, destroy_flow);
 +	SET_DEVICE_OP(dev, destroy_flow_action);
 +	SET_DEVICE_OP(dev, destroy_qp);
 +	SET_DEVICE_OP(dev, destroy_rwq_ind_table);
 +	SET_DEVICE_OP(dev, destroy_srq);
 +	SET_DEVICE_OP(dev, destroy_wq);
 +	SET_DEVICE_OP(dev, detach_mcast);
 +	SET_DEVICE_OP(dev, disassociate_ucontext);
 +	SET_DEVICE_OP(dev, drain_rq);
 +	SET_DEVICE_OP(dev, drain_sq);
 +	SET_DEVICE_OP(dev, get_dev_fw_str);
 +	SET_DEVICE_OP(dev, get_dma_mr);
 +	SET_DEVICE_OP(dev, get_hw_stats);
 +	SET_DEVICE_OP(dev, get_link_layer);
 +	SET_DEVICE_OP(dev, get_netdev);
 +	SET_DEVICE_OP(dev, get_port_immutable);
 +	SET_DEVICE_OP(dev, get_vector_affinity);
 +	SET_DEVICE_OP(dev, get_vf_config);
 +	SET_DEVICE_OP(dev, get_vf_stats);
 +	SET_DEVICE_OP(dev, map_mr_sg);
 +	SET_DEVICE_OP(dev, map_phys_fmr);
 +	SET_DEVICE_OP(dev, mmap);
 +	SET_DEVICE_OP(dev, modify_ah);
 +	SET_DEVICE_OP(dev, modify_cq);
 +	SET_DEVICE_OP(dev, modify_device);
 +	SET_DEVICE_OP(dev, modify_flow_action_esp);
 +	SET_DEVICE_OP(dev, modify_port);
 +	SET_DEVICE_OP(dev, modify_qp);
 +	SET_DEVICE_OP(dev, modify_srq);
 +	SET_DEVICE_OP(dev, modify_wq);
 +	SET_DEVICE_OP(dev, peek_cq);
 +	SET_DEVICE_OP(dev, poll_cq);
 +	SET_DEVICE_OP(dev, post_recv);
 +	SET_DEVICE_OP(dev, post_send);
 +	SET_DEVICE_OP(dev, post_srq_recv);
 +	SET_DEVICE_OP(dev, process_mad);
 +	SET_DEVICE_OP(dev, query_ah);
 +	SET_DEVICE_OP(dev, query_device);
 +	SET_DEVICE_OP(dev, query_gid);
 +	SET_DEVICE_OP(dev, query_pkey);
 +	SET_DEVICE_OP(dev, query_port);
 +	SET_DEVICE_OP(dev, query_qp);
 +	SET_DEVICE_OP(dev, query_srq);
 +	SET_DEVICE_OP(dev, rdma_netdev_get_params);
 +	SET_DEVICE_OP(dev, read_counters);
 +	SET_DEVICE_OP(dev, reg_dm_mr);
 +	SET_DEVICE_OP(dev, reg_user_mr);
 +	SET_DEVICE_OP(dev, req_ncomp_notif);
 +	SET_DEVICE_OP(dev, req_notify_cq);
 +	SET_DEVICE_OP(dev, rereg_user_mr);
 +	SET_DEVICE_OP(dev, resize_cq);
 +	SET_DEVICE_OP(dev, set_vf_guid);
 +	SET_DEVICE_OP(dev, set_vf_link_state);
 +	SET_DEVICE_OP(dev, unmap_fmr);
++=======
+ 	SET_DEVICE_OP(dev_ops, add_gid);
+ 	SET_DEVICE_OP(dev_ops, advise_mr);
+ 	SET_DEVICE_OP(dev_ops, alloc_dm);
+ 	SET_DEVICE_OP(dev_ops, alloc_fmr);
+ 	SET_DEVICE_OP(dev_ops, alloc_hw_stats);
+ 	SET_DEVICE_OP(dev_ops, alloc_mr);
+ 	SET_DEVICE_OP(dev_ops, alloc_mw);
+ 	SET_DEVICE_OP(dev_ops, alloc_pd);
+ 	SET_DEVICE_OP(dev_ops, alloc_rdma_netdev);
+ 	SET_DEVICE_OP(dev_ops, alloc_ucontext);
+ 	SET_DEVICE_OP(dev_ops, alloc_xrcd);
+ 	SET_DEVICE_OP(dev_ops, attach_mcast);
+ 	SET_DEVICE_OP(dev_ops, check_mr_status);
+ 	SET_DEVICE_OP(dev_ops, create_ah);
+ 	SET_DEVICE_OP(dev_ops, create_counters);
+ 	SET_DEVICE_OP(dev_ops, create_cq);
+ 	SET_DEVICE_OP(dev_ops, create_flow);
+ 	SET_DEVICE_OP(dev_ops, create_flow_action_esp);
+ 	SET_DEVICE_OP(dev_ops, create_qp);
+ 	SET_DEVICE_OP(dev_ops, create_rwq_ind_table);
+ 	SET_DEVICE_OP(dev_ops, create_srq);
+ 	SET_DEVICE_OP(dev_ops, create_wq);
+ 	SET_DEVICE_OP(dev_ops, dealloc_dm);
+ 	SET_DEVICE_OP(dev_ops, dealloc_fmr);
+ 	SET_DEVICE_OP(dev_ops, dealloc_mw);
+ 	SET_DEVICE_OP(dev_ops, dealloc_pd);
+ 	SET_DEVICE_OP(dev_ops, dealloc_ucontext);
+ 	SET_DEVICE_OP(dev_ops, dealloc_xrcd);
+ 	SET_DEVICE_OP(dev_ops, del_gid);
+ 	SET_DEVICE_OP(dev_ops, dereg_mr);
+ 	SET_DEVICE_OP(dev_ops, destroy_ah);
+ 	SET_DEVICE_OP(dev_ops, destroy_counters);
+ 	SET_DEVICE_OP(dev_ops, destroy_cq);
+ 	SET_DEVICE_OP(dev_ops, destroy_flow);
+ 	SET_DEVICE_OP(dev_ops, destroy_flow_action);
+ 	SET_DEVICE_OP(dev_ops, destroy_qp);
+ 	SET_DEVICE_OP(dev_ops, destroy_rwq_ind_table);
+ 	SET_DEVICE_OP(dev_ops, destroy_srq);
+ 	SET_DEVICE_OP(dev_ops, destroy_wq);
+ 	SET_DEVICE_OP(dev_ops, detach_mcast);
+ 	SET_DEVICE_OP(dev_ops, disassociate_ucontext);
+ 	SET_DEVICE_OP(dev_ops, drain_rq);
+ 	SET_DEVICE_OP(dev_ops, drain_sq);
+ 	SET_DEVICE_OP(dev_ops, get_dev_fw_str);
+ 	SET_DEVICE_OP(dev_ops, get_dma_mr);
+ 	SET_DEVICE_OP(dev_ops, get_hw_stats);
+ 	SET_DEVICE_OP(dev_ops, get_link_layer);
+ 	SET_DEVICE_OP(dev_ops, get_netdev);
+ 	SET_DEVICE_OP(dev_ops, get_port_immutable);
+ 	SET_DEVICE_OP(dev_ops, get_vector_affinity);
+ 	SET_DEVICE_OP(dev_ops, get_vf_config);
+ 	SET_DEVICE_OP(dev_ops, get_vf_stats);
+ 	SET_DEVICE_OP(dev_ops, map_mr_sg);
+ 	SET_DEVICE_OP(dev_ops, map_phys_fmr);
+ 	SET_DEVICE_OP(dev_ops, mmap);
+ 	SET_DEVICE_OP(dev_ops, modify_ah);
+ 	SET_DEVICE_OP(dev_ops, modify_cq);
+ 	SET_DEVICE_OP(dev_ops, modify_device);
+ 	SET_DEVICE_OP(dev_ops, modify_flow_action_esp);
+ 	SET_DEVICE_OP(dev_ops, modify_port);
+ 	SET_DEVICE_OP(dev_ops, modify_qp);
+ 	SET_DEVICE_OP(dev_ops, modify_srq);
+ 	SET_DEVICE_OP(dev_ops, modify_wq);
+ 	SET_DEVICE_OP(dev_ops, peek_cq);
+ 	SET_DEVICE_OP(dev_ops, poll_cq);
+ 	SET_DEVICE_OP(dev_ops, post_recv);
+ 	SET_DEVICE_OP(dev_ops, post_send);
+ 	SET_DEVICE_OP(dev_ops, post_srq_recv);
+ 	SET_DEVICE_OP(dev_ops, process_mad);
+ 	SET_DEVICE_OP(dev_ops, query_ah);
+ 	SET_DEVICE_OP(dev_ops, query_device);
+ 	SET_DEVICE_OP(dev_ops, query_gid);
+ 	SET_DEVICE_OP(dev_ops, query_pkey);
+ 	SET_DEVICE_OP(dev_ops, query_port);
+ 	SET_DEVICE_OP(dev_ops, query_qp);
+ 	SET_DEVICE_OP(dev_ops, query_srq);
+ 	SET_DEVICE_OP(dev_ops, rdma_netdev_get_params);
+ 	SET_DEVICE_OP(dev_ops, read_counters);
+ 	SET_DEVICE_OP(dev_ops, reg_dm_mr);
+ 	SET_DEVICE_OP(dev_ops, reg_user_mr);
+ 	SET_DEVICE_OP(dev_ops, req_ncomp_notif);
+ 	SET_DEVICE_OP(dev_ops, req_notify_cq);
+ 	SET_DEVICE_OP(dev_ops, rereg_user_mr);
+ 	SET_DEVICE_OP(dev_ops, resize_cq);
+ 	SET_DEVICE_OP(dev_ops, set_vf_guid);
+ 	SET_DEVICE_OP(dev_ops, set_vf_link_state);
+ 	SET_DEVICE_OP(dev_ops, unmap_fmr);
++>>>>>>> 2f1927b09034 (IB/core: Add advise_mr to the list of known ops)
  }
  EXPORT_SYMBOL(ib_set_device_ops);
  
* Unmerged path drivers/infiniband/core/device.c
