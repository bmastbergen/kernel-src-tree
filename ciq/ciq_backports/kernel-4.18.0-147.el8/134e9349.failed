IB/mlx5: Handle raw port change event rather than the software version

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 134e9349ecf0e23c954e205a31f5b665ce25e5f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/134e9349.failed

Use the FW version of the port change event as forwarded via new mlx5
notifiers API.

After this patch, processed software version of the port change event
will become deprecated and will be totally removed in downstream
patches.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 134e9349ecf0e23c954e205a31f5b665ce25e5f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index 72ce00f38f1d,a0668b923f78..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -82,10 -82,13 +82,20 @@@ static char mlx5_version[] 
  
  struct mlx5_ib_event_work {
  	struct work_struct	work;
++<<<<<<< HEAD
 +	struct mlx5_core_dev	*dev;
 +	void			*context;
 +	enum mlx5_dev_event	event;
 +	unsigned long		param;
++=======
+ 	union {
+ 		struct mlx5_ib_dev	      *dev;
+ 		struct mlx5_ib_multiport_info *mpi;
+ 	};
+ 	bool			is_slave;
+ 	unsigned int		event;
+ 	void			*param;
++>>>>>>> 134e9349ecf0 (IB/mlx5: Handle raw port change event rather than the software version)
  };
  
  enum {
@@@ -3962,10 -4288,9 +4017,13 @@@ static void mlx5_ib_handle_event(struc
  	struct mlx5_ib_dev *ibdev;
  	struct ib_event ibev;
  	bool fatal = false;
++<<<<<<< HEAD
 +	u8 port = (u8)work->param;
++=======
++>>>>>>> 134e9349ecf0 (IB/mlx5: Handle raw port change event rather than the software version)
  
 -	if (work->is_slave) {
 -		ibdev = mlx5_ib_get_ibdev_from_mpi(work->mpi);
 +	if (mlx5_core_is_mp_slave(work->dev)) {
 +		ibdev = mlx5_ib_get_ibdev_from_mpi(work->context);
  		if (!ibdev)
  			goto out;
  	} else {
@@@ -3976,38 -4301,12 +4034,24 @@@
  	case MLX5_DEV_EVENT_SYS_ERROR:
  		ibev.event = IB_EVENT_DEVICE_FATAL;
  		mlx5_ib_handle_internal_error(ibdev);
+ 		ibev.element.port_num  = (u8)(unsigned long)work->param;
  		fatal = true;
  		break;
++<<<<<<< HEAD
 +
 +	case MLX5_DEV_EVENT_PORT_UP:
 +	case MLX5_DEV_EVENT_PORT_DOWN:
 +	case MLX5_DEV_EVENT_PORT_INITIALIZED:
 +		/* In RoCE, port up/down events are handled in
 +		 * mlx5_netdev_event().
 +		 */
 +		if (mlx5_ib_port_link_layer(&ibdev->ib_dev, port) ==
 +			IB_LINK_LAYER_ETHERNET)
++=======
+ 	case MLX5_EVENT_TYPE_PORT_CHANGE:
+ 		if (handle_port_change(ibdev, work->param, &ibev))
++>>>>>>> 134e9349ecf0 (IB/mlx5: Handle raw port change event rather than the software version)
  			goto out;
- 
- 		ibev.event = (work->event == MLX5_DEV_EVENT_PORT_UP) ?
- 			     IB_EVENT_PORT_ACTIVE : IB_EVENT_PORT_ERR;
- 		break;
- 
- 	case MLX5_DEV_EVENT_LID_CHANGE:
- 		ibev.event = IB_EVENT_LID_CHANGE;
- 		break;
- 
- 	case MLX5_DEV_EVENT_PKEY_CHANGE:
- 		ibev.event = IB_EVENT_PKEY_CHANGE;
- 		schedule_work(&ibdev->devr.ports[port - 1].pkey_change_work);
- 		break;
- 
- 	case MLX5_DEV_EVENT_GUID_CHANGE:
- 		ibev.event = IB_EVENT_GID_CHANGE;
- 		break;
- 
- 	case MLX5_DEV_EVENT_CLIENT_REREG:
- 		ibev.event = IB_EVENT_CLIENT_REREGISTER;
  		break;
  	case MLX5_DEV_EVENT_DELAY_DROP_TIMEOUT:
  		schedule_work(&ibdev->delay_drop.delay_drop_work);
* Unmerged path drivers/infiniband/hw/mlx5/main.c
