ice: Update comment regarding the ITR_GRAN_S

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Brett Creeley <brett.creeley@intel.com>
commit 92414f329262c9240223b8279aa9f544a754d78f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/92414f32.failed

Since the driver now hard codes the ITR granularity to 2 us in the
GLINT_CTL register the comment next to ITR_GRAN_S needs to be updated.

	Signed-off-by: Brett Creeley <brett.creeley@intel.com>
	Signed-off-by: Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 92414f329262c9240223b8279aa9f544a754d78f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_txrx.h
diff --cc drivers/net/ethernet/intel/ice/ice_txrx.h
index 75d0eaf6c9dd,60131b84b021..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_txrx.h
+++ b/drivers/net/ethernet/intel/ice/ice_txrx.h
@@@ -116,16 -120,24 +116,35 @@@ enum ice_rx_dtype 
  /* indices into GLINT_ITR registers */
  #define ICE_RX_ITR	ICE_IDX_ITR0
  #define ICE_TX_ITR	ICE_IDX_ITR1
 -#define ICE_ITR_8K	124
 +#define ICE_ITR_DYNAMIC	0x8000  /* use top bit as a flag */
 +#define ICE_ITR_8K	125
  #define ICE_ITR_20K	50
++<<<<<<< HEAD
 +#define ICE_DFLT_TX_ITR	ICE_ITR_20K
 +#define ICE_DFLT_RX_ITR	ICE_ITR_20K
 +/* apply ITR granularity translation to program the register. itr_gran is either
 + * 2 or 4 usecs so we need to divide by 2 first then shift by that value
 + */
 +#define ITR_TO_REG(val, itr_gran) (((val) & ~ICE_ITR_DYNAMIC) >> \
 +				   ((itr_gran) / 2))
++=======
+ #define ICE_ITR_MAX	8160
+ #define ICE_DFLT_TX_ITR	(ICE_ITR_20K | ICE_ITR_DYNAMIC)
+ #define ICE_DFLT_RX_ITR	(ICE_ITR_20K | ICE_ITR_DYNAMIC)
+ #define ICE_ITR_DYNAMIC	0x8000  /* used as flag for itr_setting */
+ #define ITR_IS_DYNAMIC(setting) (!!((setting) & ICE_ITR_DYNAMIC))
+ #define ITR_TO_REG(setting)	((setting) & ~ICE_ITR_DYNAMIC)
+ #define ICE_ITR_GRAN_S		1	/* ITR granularity is always 2us */
+ #define ICE_ITR_GRAN_US		BIT(ICE_ITR_GRAN_S)
+ #define ICE_ITR_MASK		0x1FFE	/* ITR register value alignment mask */
+ #define ITR_REG_ALIGN(setting)	__ALIGN_MASK(setting, ~ICE_ITR_MASK)
+ 
+ #define ICE_ITR_ADAPTIVE_MIN_INC	0x0002
+ #define ICE_ITR_ADAPTIVE_MIN_USECS	0x0002
+ #define ICE_ITR_ADAPTIVE_MAX_USECS	0x00FA
+ #define ICE_ITR_ADAPTIVE_LATENCY	0x8000
+ #define ICE_ITR_ADAPTIVE_BULK		0x0000
++>>>>>>> 92414f329262 (ice: Update comment regarding the ITR_GRAN_S)
  
  #define ICE_DFLT_INTRL	0
  
* Unmerged path drivers/net/ethernet/intel/ice/ice_txrx.h
