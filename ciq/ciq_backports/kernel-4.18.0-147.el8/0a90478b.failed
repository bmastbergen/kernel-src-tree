ipv4: not do cache for local delivery if bc_forwarding is enabled

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Xin Long <lucien.xin@gmail.com>
commit 0a90478b93a46bdcd56ba33c37566a993e455d54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/0a90478b.failed

With the topo:

    h1 ---| rp1            |
          |     route  rp3 |--- h3 (192.168.200.1)
    h2 ---| rp2            |

If rp1 bc_forwarding is set while rp2 bc_forwarding is not, after
doing "ping 192.168.200.255" on h1, then ping 192.168.200.255 on
h2, and the packets can still be forwared.

This issue was caused by the input route cache. It should only do
the cache for either bc forwarding or local delivery. Otherwise,
local delivery can use the route cache for bc forwarding of other
interfaces.

This patch is to fix it by not doing cache for local delivery if
all.bc_forwarding is enabled.

Note that we don't fix it by checking route cache local flag after
rt_cache_valid() in "local_input:" and "ip_mkroute_input", as the
common route code shouldn't be touched for bc_forwarding.

Fixes: 5cbf777cfdf6 ("route: add support for directed broadcast forwarding")
	Reported-by: Jianlin Shi <jishi@redhat.com>
	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0a90478b93a46bdcd56ba33c37566a993e455d54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/route.c
diff --cc net/ipv4/route.c
index c10cc84fb5ef,91bf75b8ac1c..000000000000
--- a/net/ipv4/route.c
+++ b/net/ipv4/route.c
@@@ -2000,8 -2059,14 +2000,17 @@@ static int ip_route_input_slow(struct s
  		goto no_route;
  	}
  
++<<<<<<< HEAD
 +	if (res->type == RTN_BROADCAST)
++=======
+ 	if (res->type == RTN_BROADCAST) {
+ 		if (IN_DEV_BFORWARD(in_dev))
+ 			goto make_route;
+ 		/* not do cache if bc_forwarding is enabled */
+ 		if (IPV4_DEVCONF_ALL(net, BC_FORWARDING))
+ 			do_cache = false;
++>>>>>>> 0a90478b93a4 (ipv4: not do cache for local delivery if bc_forwarding is enabled)
  		goto brd_input;
 -	}
  
  	if (res->type == RTN_LOCAL) {
  		err = fib_validate_source(skb, saddr, daddr, tos,
@@@ -2036,16 -2102,15 +2045,28 @@@ brd_input
  	RT_CACHE_STAT_INC(in_brd);
  
  local_input:
++<<<<<<< HEAD
 +	do_cache = false;
 +	if (res->fi) {
 +		if (!itag) {
 +			rth = rcu_dereference(FIB_RES_NH(*res).nh_rth_input);
 +			if (rt_cache_valid(rth)) {
 +				skb_dst_set_noref(skb, &rth->dst);
 +				err = 0;
 +				goto out;
 +			}
 +			do_cache = true;
++=======
+ 	do_cache &= res->fi && !itag;
+ 	if (do_cache) {
+ 		struct fib_nh_common *nhc = FIB_RES_NHC(*res);
+ 
+ 		rth = rcu_dereference(nhc->nhc_rth_input);
+ 		if (rt_cache_valid(rth)) {
+ 			skb_dst_set_noref(skb, &rth->dst);
+ 			err = 0;
+ 			goto out;
++>>>>>>> 0a90478b93a4 (ipv4: not do cache for local delivery if bc_forwarding is enabled)
  		}
  	}
  
* Unmerged path net/ipv4/route.c
