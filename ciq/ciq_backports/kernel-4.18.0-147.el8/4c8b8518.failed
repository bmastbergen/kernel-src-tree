net/mlx5: Use lowercase 'X' for hex values

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 4c8b85187c22ee65637035efd2ae0cb10836d8e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/4c8b8518.failed

Apparently gcc is cool with upper case '0X' but it is not commonly used.
Replace '0X' with lowercase '0x' in mlx5_ifc.h file.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 4c8b85187c22ee65637035efd2ae0cb10836d8e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 5b199be49a95,a56bd3b1f579..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -3803,6 -3838,83 +3803,86 @@@ enum 
  	MLX5_VPORT_STATE_OP_MOD_ESW_VPORT   = 0x1,
  };
  
++<<<<<<< HEAD
++=======
+ struct mlx5_ifc_arm_monitor_counter_in_bits {
+ 	u8         opcode[0x10];
+ 	u8         uid[0x10];
+ 
+ 	u8         reserved_at_20[0x10];
+ 	u8         op_mod[0x10];
+ 
+ 	u8         reserved_at_40[0x20];
+ 
+ 	u8         reserved_at_60[0x20];
+ };
+ 
+ struct mlx5_ifc_arm_monitor_counter_out_bits {
+ 	u8         status[0x8];
+ 	u8         reserved_at_8[0x18];
+ 
+ 	u8         syndrome[0x20];
+ 
+ 	u8         reserved_at_40[0x40];
+ };
+ 
+ enum {
+ 	MLX5_QUERY_MONITOR_CNT_TYPE_PPCNT     = 0x0,
+ 	MLX5_QUERY_MONITOR_CNT_TYPE_Q_COUNTER = 0x1,
+ };
+ 
+ enum mlx5_monitor_counter_ppcnt {
+ 	MLX5_QUERY_MONITOR_PPCNT_IN_RANGE_LENGTH_ERRORS      = 0x0,
+ 	MLX5_QUERY_MONITOR_PPCNT_OUT_OF_RANGE_LENGTH_FIELD   = 0x1,
+ 	MLX5_QUERY_MONITOR_PPCNT_FRAME_TOO_LONG_ERRORS       = 0x2,
+ 	MLX5_QUERY_MONITOR_PPCNT_FRAME_CHECK_SEQUENCE_ERRORS = 0x3,
+ 	MLX5_QUERY_MONITOR_PPCNT_ALIGNMENT_ERRORS            = 0x4,
+ 	MLX5_QUERY_MONITOR_PPCNT_IF_OUT_DISCARDS             = 0x5,
+ };
+ 
+ enum {
+ 	MLX5_QUERY_MONITOR_Q_COUNTER_RX_OUT_OF_BUFFER     = 0x4,
+ };
+ 
+ struct mlx5_ifc_monitor_counter_output_bits {
+ 	u8         reserved_at_0[0x4];
+ 	u8         type[0x4];
+ 	u8         reserved_at_8[0x8];
+ 	u8         counter[0x10];
+ 
+ 	u8         counter_group_id[0x20];
+ };
+ 
+ #define MLX5_CMD_SET_MONITOR_NUM_PPCNT_COUNTER_SET1 (6)
+ #define MLX5_CMD_SET_MONITOR_NUM_Q_COUNTERS_SET1    (1)
+ #define MLX5_CMD_SET_MONITOR_NUM_COUNTER (MLX5_CMD_SET_MONITOR_NUM_PPCNT_COUNTER_SET1 +\
+ 					  MLX5_CMD_SET_MONITOR_NUM_Q_COUNTERS_SET1)
+ 
+ struct mlx5_ifc_set_monitor_counter_in_bits {
+ 	u8         opcode[0x10];
+ 	u8         uid[0x10];
+ 
+ 	u8         reserved_at_20[0x10];
+ 	u8         op_mod[0x10];
+ 
+ 	u8         reserved_at_40[0x10];
+ 	u8         num_of_counters[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
+ 
+ 	struct mlx5_ifc_monitor_counter_output_bits monitor_counter[MLX5_CMD_SET_MONITOR_NUM_COUNTER];
+ };
+ 
+ struct mlx5_ifc_set_monitor_counter_out_bits {
+ 	u8         status[0x8];
+ 	u8         reserved_at_8[0x18];
+ 
+ 	u8         syndrome[0x20];
+ 
+ 	u8         reserved_at_40[0x40];
+ };
+ 
++>>>>>>> 4c8b85187c22 (net/mlx5: Use lowercase 'X' for hex values)
  struct mlx5_ifc_query_vport_state_in_bits {
  	u8         opcode[0x10];
  	u8         reserved_at_10[0x10];
* Unmerged path include/linux/mlx5/mlx5_ifc.h
