RDMA/cxgb3: Initialize ib_device_ops struct

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Kamal Heib <kamalheib1@gmail.com>
commit 071b2ca40ae31bf1ce0c4a6edb5fc52988dafa54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/071b2ca4.failed

Initialize ib_device_ops with the supported operations using
ib_set_device_ops().

	Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 071b2ca40ae31bf1ce0c4a6edb5fc52988dafa54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb3/iwch_provider.c
diff --cc drivers/infiniband/hw/cxgb3/iwch_provider.c
index 68bc2f9a532f,7a1dc83ba588..000000000000
--- a/drivers/infiniband/hw/cxgb3/iwch_provider.c
+++ b/drivers/infiniband/hw/cxgb3/iwch_provider.c
@@@ -1390,42 -1389,7 +1423,43 @@@ int iwch_register_device(struct iwch_de
  	dev->ibdev.phys_port_cnt = dev->rdev.port_info.nports;
  	dev->ibdev.num_comp_vectors = 1;
  	dev->ibdev.dev.parent = &dev->rdev.rnic_info.pdev->dev;
++<<<<<<< HEAD
 +	dev->ibdev.query_device = iwch_query_device;
 +	dev->ibdev.query_port = iwch_query_port;
 +	dev->ibdev.query_pkey = iwch_query_pkey;
 +	dev->ibdev.query_gid = iwch_query_gid;
 +	dev->ibdev.alloc_ucontext = iwch_alloc_ucontext;
 +	dev->ibdev.dealloc_ucontext = iwch_dealloc_ucontext;
 +	dev->ibdev.mmap = iwch_mmap;
 +	dev->ibdev.alloc_pd = iwch_allocate_pd;
 +	dev->ibdev.dealloc_pd = iwch_deallocate_pd;
 +	dev->ibdev.create_ah = iwch_ah_create;
 +	dev->ibdev.destroy_ah = iwch_ah_destroy;
 +	dev->ibdev.create_qp = iwch_create_qp;
 +	dev->ibdev.modify_qp = iwch_ib_modify_qp;
 +	dev->ibdev.destroy_qp = iwch_destroy_qp;
 +	dev->ibdev.create_cq = iwch_create_cq;
 +	dev->ibdev.destroy_cq = iwch_destroy_cq;
 +	dev->ibdev.resize_cq = iwch_resize_cq;
 +	dev->ibdev.poll_cq = iwch_poll_cq;
 +	dev->ibdev.get_dma_mr = iwch_get_dma_mr;
 +	dev->ibdev.reg_user_mr = iwch_reg_user_mr;
 +	dev->ibdev.dereg_mr = iwch_dereg_mr;
 +	dev->ibdev.alloc_mw = iwch_alloc_mw;
 +	dev->ibdev.dealloc_mw = iwch_dealloc_mw;
 +	dev->ibdev.alloc_mr = iwch_alloc_mr;
 +	dev->ibdev.map_mr_sg = iwch_map_mr_sg;
 +	dev->ibdev.attach_mcast = iwch_multicast_attach;
 +	dev->ibdev.detach_mcast = iwch_multicast_detach;
 +	dev->ibdev.process_mad = iwch_process_mad;
 +	dev->ibdev.req_notify_cq = iwch_arm_cq;
 +	dev->ibdev.post_send = iwch_post_send;
 +	dev->ibdev.post_recv = iwch_post_receive;
 +	dev->ibdev.alloc_hw_stats = iwch_alloc_stats;
 +	dev->ibdev.get_hw_stats = iwch_get_mib;
++=======
++>>>>>>> 071b2ca40ae3 (RDMA/cxgb3: Initialize ib_device_ops struct)
  	dev->ibdev.uverbs_abi_ver = IWCH_UVERBS_ABI_VERSION;
- 	dev->ibdev.get_port_immutable = iwch_port_immutable;
- 	dev->ibdev.get_dev_fw_str = get_dev_fw_ver_str;
  
  	dev->ibdev.iwcm = kmalloc(sizeof(struct iw_cm_verbs), GFP_KERNEL);
  	if (!dev->ibdev.iwcm)
@@@ -1443,22 -1407,11 +1477,28 @@@
  	       sizeof(dev->ibdev.iwcm->ifname));
  
  	dev->ibdev.driver_id = RDMA_DRIVER_CXGB3;
++<<<<<<< HEAD
 +	ret = ib_register_device(&dev->ibdev, NULL);
++=======
+ 	rdma_set_device_sysfs_group(&dev->ibdev, &iwch_attr_group);
+ 	ib_set_device_ops(&dev->ibdev, &iwch_dev_ops);
+ 	ret = ib_register_device(&dev->ibdev, "cxgb3_%d", NULL);
++>>>>>>> 071b2ca40ae3 (RDMA/cxgb3: Initialize ib_device_ops struct)
  	if (ret)
 -		kfree(dev->ibdev.iwcm);
 +		goto bail1;
 +
 +	for (i = 0; i < ARRAY_SIZE(iwch_class_attributes); ++i) {
 +		ret = device_create_file(&dev->ibdev.dev,
 +					 iwch_class_attributes[i]);
 +		if (ret) {
 +			goto bail2;
 +		}
 +	}
 +	return 0;
 +bail2:
 +	ib_unregister_device(&dev->ibdev);
 +bail1:
 +	kfree(dev->ibdev.iwcm);
  	return ret;
  }
  
* Unmerged path drivers/infiniband/hw/cxgb3/iwch_provider.c
