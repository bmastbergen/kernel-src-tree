sched/fair: Fix O(nr_cgroups) in the load balancing path

jira LE-1907
cve CVE-2018-20784
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Vincent Guittot <vincent.guittot@linaro.org>
commit 039ae8bcf7a5f4476f4487e6bf816885fb3fb617
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/039ae8bc.failed

This re-applies the commit reverted here:

  commit c40f7d74c741 ("sched/fair: Fix infinite loop in update_blocked_averages() by reverting a9e7f6544b9c")

I.e. now that cfs_rq can be safely removed/added in the list, we can re-apply:

 commit a9e7f6544b9c ("sched/fair: Fix O(nr_cgroups) in load balance path")

	Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: sargun@sargun.me
	Cc: tj@kernel.org
	Cc: xiexiuqi@huawei.com
	Cc: xiezhipeng1@huawei.com
Link: https://lkml.kernel.org/r/1549469662-13614-3-git-send-email-vincent.guittot@linaro.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 039ae8bcf7a5f4476f4487e6bf816885fb3fb617)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/fair.c
diff --cc kernel/sched/fair.c
index 1579a63f92e5,17a961522d1e..000000000000
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@@ -355,6 -363,11 +355,14 @@@ static inline void list_del_leaf_cfs_rq
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static inline void assert_list_leaf_cfs_rq(struct rq *rq)
+ {
+ 	SCHED_WARN_ON(rq->tmp_alone_branch != &rq->leaf_cfs_rq_list);
+ }
+ 
++>>>>>>> 039ae8bcf7a5 (sched/fair: Fix O(nr_cgroups) in the load balancing path)
  /* Iterate thr' all leaf cfs_rq's on a runqueue */
  #define for_each_leaf_cfs_rq_safe(rq, cfs_rq, pos)			\
  	list_for_each_entry_safe(cfs_rq, pos, &rq->leaf_cfs_rq_list,	\
@@@ -451,6 -458,10 +459,13 @@@ static inline void list_del_leaf_cfs_rq
  {
  }
  
++<<<<<<< HEAD
++=======
+ static inline void assert_list_leaf_cfs_rq(struct rq *rq)
+ {
+ }
+ 
++>>>>>>> 039ae8bcf7a5 (sched/fair: Fix O(nr_cgroups) in the load balancing path)
  #define for_each_leaf_cfs_rq_safe(rq, cfs_rq, pos)	\
  		for (cfs_rq = &rq->cfs, pos = NULL; cfs_rq; cfs_rq = pos)
  
@@@ -7649,6 -7724,7 +7664,10 @@@ static void update_blocked_averages(in
  {
  	struct rq *rq = cpu_rq(cpu);
  	struct cfs_rq *cfs_rq, *pos;
++<<<<<<< HEAD
++=======
+ 	const struct sched_class *curr_class;
++>>>>>>> 039ae8bcf7a5 (sched/fair: Fix O(nr_cgroups) in the load balancing path)
  	struct rq_flags rf;
  	bool done = true;
  
* Unmerged path kernel/sched/fair.c
