kvm: selftests: dirty_log_test: always use -t

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Andrew Jones <drjones@redhat.com>
commit 6498e1da84daec4b3ef97e2174b07ea0af3ff06e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/6498e1da.failed

There's no reason not to always test the topmost physical
addresses, and if the user wants to try lower addresses
then '-p' (used to be '-o before this patch) can be used.
Let's remove the '-t' option and just always do what it did.

	Signed-off-by: Andrew Jones <drjones@redhat.com>
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
(cherry picked from commit 6498e1da84daec4b3ef97e2174b07ea0af3ff06e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/dirty_log_test.c
diff --cc tools/testing/selftests/kvm/dirty_log_test.c
index a2e86fdacc19,9078b571c562..000000000000
--- a/tools/testing/selftests/kvm/dirty_log_test.c
+++ b/tools/testing/selftests/kvm/dirty_log_test.c
@@@ -401,8 -417,14 +405,18 @@@ int main(int argc, char *argv[]
  	unsigned int mode;
  	int opt, i;
  
++<<<<<<< HEAD
 +	while ((opt = getopt(argc, argv, "hi:I:o:tm:")) != -1) {
++=======
+ #ifdef USE_CLEAR_DIRTY_LOG
+ 	if (!kvm_check_cap(KVM_CAP_MANUAL_DIRTY_LOG_PROTECT)) {
+ 		fprintf(stderr, "KVM_CLEAR_DIRTY_LOG not available, skipping tests\n");
+ 		exit(KSFT_SKIP);
+ 	}
+ #endif
+ 
+ 	while ((opt = getopt(argc, argv, "hi:I:p:m:")) != -1) {
++>>>>>>> 6498e1da84da (kvm: selftests: dirty_log_test: always use -t)
  		switch (opt) {
  		case 'i':
  			iterations = strtol(optarg, NULL, 10);
* Unmerged path tools/testing/selftests/kvm/dirty_log_test.c
