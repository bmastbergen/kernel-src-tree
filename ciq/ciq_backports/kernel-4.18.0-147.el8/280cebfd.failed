KVM: arm64: Relax the restriction on using stage2 PUD huge mapping

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Suzuki K Poulose <suzuki.poulose@arm.com>
commit 280cebfd05c8e381a392c662006dfaa6377feefc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/280cebfd.failed

We restrict mapping the PUD huge pages in stage2 to only when the
stage2 has 4 level page table, leaving the feature unused with
the default IPA size. But we could use it even with a 3
level page table, i.e, when the PUD level is folded into PGD,
just like the stage1. Relax the condition to allow using the
PUD huge page mappings at stage2 when it is possible.

	Cc: Christoffer Dall <christoffer.dall@arm.com>
	Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
	Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
	Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
(cherry picked from commit 280cebfd05c8e381a392c662006dfaa6377feefc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/arm/mmu.c
diff --cc virt/kvm/arm/mmu.c
index c70722f6a27e,30251e288629..000000000000
--- a/virt/kvm/arm/mmu.c
+++ b/virt/kvm/arm/mmu.c
@@@ -1563,9 -1693,18 +1563,24 @@@ static int user_mem_abort(struct kvm_vc
  		return -EFAULT;
  	}
  
++<<<<<<< HEAD
 +	if (vma_kernel_pagesize(vma) == PMD_SIZE && !force_pte) {
 +		hugetlb = true;
 +		gfn = (fault_ipa & PMD_MASK) >> PAGE_SHIFT;
++=======
+ 	vma_pagesize = vma_kernel_pagesize(vma);
+ 	/*
+ 	 * The stage2 has a minimum of 2 level table (For arm64 see
+ 	 * kvm_arm_setup_stage2()). Hence, we are guaranteed that we can
+ 	 * use PMD_SIZE huge mappings (even when the PMD is folded into PGD).
+ 	 * As for PUD huge maps, we must make sure that we have at least
+ 	 * 3 levels, i.e, PMD is not folded.
+ 	 */
+ 	if ((vma_pagesize == PMD_SIZE ||
+ 	     (vma_pagesize == PUD_SIZE && kvm_stage2_has_pmd(kvm))) &&
+ 	    !force_pte) {
+ 		gfn = (fault_ipa & huge_page_mask(hstate_vma(vma))) >> PAGE_SHIFT;
++>>>>>>> 280cebfd05c8 (KVM: arm64: Relax the restriction on using stage2 PUD huge mapping)
  	}
  	up_read(&current->mm->mmap_sem);
  
* Unmerged path virt/kvm/arm/mmu.c
