arm64: ssbs: Don't treat CPUs with SSBS as unaffected by SSB

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Will Deacon <will.deacon@arm.com>
commit eb337cdfcd5dd3b10522c2f34140a73a4c285c30
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/eb337cdf.failed

SSBS provides a relatively cheap mitigation for SSB, but it is still a
mitigation and its presence does not indicate that the CPU is unaffected
by the vulnerability.

Tweak the mitigation logic so that we report the correct string in sysfs.

	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit eb337cdfcd5dd3b10522c2f34140a73a4c285c30)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/cpu_errata.c
diff --cc arch/arm64/kernel/cpu_errata.c
index fde6f87a8b7e,44ef98be001e..000000000000
--- a/arch/arm64/kernel/cpu_errata.c
+++ b/arch/arm64/kernel/cpu_errata.c
@@@ -342,8 -385,22 +342,22 @@@ static bool has_ssbd_mitigation(const s
  
  	WARN_ON(scope != SCOPE_LOCAL_CPU || preemptible());
  
++<<<<<<< HEAD
++=======
+ 	/* delay setting __ssb_safe until we get a firmware response */
+ 	if (is_midr_in_range_list(read_cpuid_id(), entry->midr_range_list))
+ 		this_cpu_safe = true;
+ 
+ 	if (this_cpu_has_cap(ARM64_SSBS)) {
+ 		if (!this_cpu_safe)
+ 			__ssb_safe = false;
+ 		required = false;
+ 		goto out_printmsg;
+ 	}
+ 
++>>>>>>> eb337cdfcd5d (arm64: ssbs: Don't treat CPUs with SSBS as unaffected by SSB)
  	if (psci_ops.smccc_version == SMCCC_VERSION_1_0) {
  		ssbd_state = ARM64_SSBD_UNKNOWN;
 -		if (!this_cpu_safe)
 -			__ssb_safe = false;
  		return false;
  	}
  
* Unmerged path arch/arm64/kernel/cpu_errata.c
