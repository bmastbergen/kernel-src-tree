tls: Do not call sk_memcopy_from_iter with zero length

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Vakul Garg <vakul.garg@nxp.com>
commit 65a10e28aee72903a41670170cd5330ad73c490e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/65a10e28.failed

In some conditions e.g. when tls_clone_plaintext_msg() returns -ENOSPC,
the number of bytes to be copied using subsequent function
sk_msg_memcopy_from_iter() becomes zero. This causes function
sk_msg_memcopy_from_iter() to fail which in turn causes tls_sw_sendmsg()
to return failure. To prevent it, do not call sk_msg_memcopy_from_iter()
when number of bytes to copy (indicated by 'try_to_copy') is zero.

Fixes: d829e9c4112b ("tls: convert to generic sk_msg interface")
	Signed-off-by: Vakul Garg <vakul.garg@nxp.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 65a10e28aee72903a41670170cd5330ad73c490e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tls/tls_sw.c
diff --cc net/tls/tls_sw.c
index 60c7d9afa7a8,29b27858fff1..000000000000
--- a/net/tls/tls_sw.c
+++ b/net/tls/tls_sw.c
@@@ -701,23 -929,28 +701,32 @@@ fallback_to_reg_send
  			 * actually allocated. The difference is due
  			 * to max sg elements limit
  			 */
 -			try_to_copy -= required_size - msg_pl->sg.size;
 +			try_to_copy -= required_size - rec->sg_plaintext_size;
  			full_record = true;
 -			sk_msg_trim(sk, msg_en, msg_pl->sg.size +
 -				    tls_ctx->tx.overhead_size);
 +
 +			trim_sg(sk, &rec->sg_encrypted_data[1],
 +				&rec->sg_encrypted_num_elem,
 +				&rec->sg_encrypted_size,
 +				rec->sg_plaintext_size +
 +				tls_ctx->tx.overhead_size);
  		}
  
++<<<<<<< HEAD
 +		ret = memcopy_from_iter(sk, &msg->msg_iter, try_to_copy);
 +		if (ret)
 +			goto trim_sgl;
++=======
+ 		if (try_to_copy) {
+ 			ret = sk_msg_memcopy_from_iter(sk, &msg->msg_iter,
+ 						       msg_pl, try_to_copy);
+ 			if (ret < 0)
+ 				goto trim_sgl;
+ 		}
++>>>>>>> 65a10e28aee7 (tls: Do not call sk_memcopy_from_iter with zero length)
  
 -		/* Open records defined only if successfully copied, otherwise
 -		 * we would trim the sg but not reset the open record frags.
 -		 */
 -		tls_ctx->pending_open_record_frags = true;
  		copied += try_to_copy;
  		if (full_record || eor) {
 -			ret = bpf_exec_tx_verdict(msg_pl, sk, full_record,
 -						  record_type, &copied,
 -						  msg->msg_flags);
 +			ret = tls_push_record(sk, msg->msg_flags, record_type);
  			if (ret) {
  				if (ret == -EINPROGRESS)
  					num_async++;
* Unmerged path net/tls/tls_sw.c
