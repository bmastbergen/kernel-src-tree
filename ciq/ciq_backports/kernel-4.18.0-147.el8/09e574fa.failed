IB/mlx5: Handle raw delay drop general event

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 09e574fa76d6a47e283a7eb18ec1b0cb34174532
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/09e574fa.failed

Handle FW general event rq delay drop as it was received from FW via mlx5
notifiers API, instead of handling the processed software version of that
event. After this patch we can safely remove all software processed FW
events types and definitions.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 09e574fa76d6a47e283a7eb18ec1b0cb34174532)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index 72ce00f38f1d,7e6af18e7d82..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -3955,6 -4236,63 +3955,66 @@@ static void delay_drop_handler(struct w
  	mutex_unlock(&delay_drop->lock);
  }
  
++<<<<<<< HEAD
++=======
+ static void handle_general_event(struct mlx5_ib_dev *ibdev, struct mlx5_eqe *eqe,
+ 				 struct ib_event *ibev)
+ {
+ 	switch (eqe->sub_type) {
+ 	case MLX5_GENERAL_SUBTYPE_DELAY_DROP_TIMEOUT:
+ 		schedule_work(&ibdev->delay_drop.delay_drop_work);
+ 		break;
+ 	default: /* do nothing */
+ 		return;
+ 	}
+ }
+ 
+ static int handle_port_change(struct mlx5_ib_dev *ibdev, struct mlx5_eqe *eqe,
+ 			      struct ib_event *ibev)
+ {
+ 	u8 port = (eqe->data.port.port >> 4) & 0xf;
+ 
+ 	ibev->element.port_num = port;
+ 
+ 	switch (eqe->sub_type) {
+ 	case MLX5_PORT_CHANGE_SUBTYPE_ACTIVE:
+ 	case MLX5_PORT_CHANGE_SUBTYPE_DOWN:
+ 	case MLX5_PORT_CHANGE_SUBTYPE_INITIALIZED:
+ 		/* In RoCE, port up/down events are handled in
+ 		 * mlx5_netdev_event().
+ 		 */
+ 		if (mlx5_ib_port_link_layer(&ibdev->ib_dev, port) ==
+ 					    IB_LINK_LAYER_ETHERNET)
+ 			return -EINVAL;
+ 
+ 		ibev->event = (eqe->sub_type == MLX5_PORT_CHANGE_SUBTYPE_ACTIVE) ?
+ 				IB_EVENT_PORT_ACTIVE : IB_EVENT_PORT_ERR;
+ 		break;
+ 
+ 	case MLX5_PORT_CHANGE_SUBTYPE_LID:
+ 		ibev->event = IB_EVENT_LID_CHANGE;
+ 		break;
+ 
+ 	case MLX5_PORT_CHANGE_SUBTYPE_PKEY:
+ 		ibev->event = IB_EVENT_PKEY_CHANGE;
+ 		schedule_work(&ibdev->devr.ports[port - 1].pkey_change_work);
+ 		break;
+ 
+ 	case MLX5_PORT_CHANGE_SUBTYPE_GUID:
+ 		ibev->event = IB_EVENT_GID_CHANGE;
+ 		break;
+ 
+ 	case MLX5_PORT_CHANGE_SUBTYPE_CLIENT_REREG:
+ 		ibev->event = IB_EVENT_CLIENT_REREGISTER;
+ 		break;
+ 	default:
+ 		return -EINVAL;
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 09e574fa76d6 (IB/mlx5: Handle raw delay drop general event)
  static void mlx5_ib_handle_event(struct work_struct *_work)
  {
  	struct mlx5_ib_event_work *work =
@@@ -3976,42 -4313,16 +4036,42 @@@
  	case MLX5_DEV_EVENT_SYS_ERROR:
  		ibev.event = IB_EVENT_DEVICE_FATAL;
  		mlx5_ib_handle_internal_error(ibdev);
 -		ibev.element.port_num  = (u8)(unsigned long)work->param;
  		fatal = true;
  		break;
 -	case MLX5_EVENT_TYPE_PORT_CHANGE:
 -		if (handle_port_change(ibdev, work->param, &ibev))
 +
 +	case MLX5_DEV_EVENT_PORT_UP:
 +	case MLX5_DEV_EVENT_PORT_DOWN:
 +	case MLX5_DEV_EVENT_PORT_INITIALIZED:
 +		/* In RoCE, port up/down events are handled in
 +		 * mlx5_netdev_event().
 +		 */
 +		if (mlx5_ib_port_link_layer(&ibdev->ib_dev, port) ==
 +			IB_LINK_LAYER_ETHERNET)
  			goto out;
 +
 +		ibev.event = (work->event == MLX5_DEV_EVENT_PORT_UP) ?
 +			     IB_EVENT_PORT_ACTIVE : IB_EVENT_PORT_ERR;
 +		break;
 +
 +	case MLX5_DEV_EVENT_LID_CHANGE:
 +		ibev.event = IB_EVENT_LID_CHANGE;
 +		break;
 +
 +	case MLX5_DEV_EVENT_PKEY_CHANGE:
 +		ibev.event = IB_EVENT_PKEY_CHANGE;
 +		schedule_work(&ibdev->devr.ports[port - 1].pkey_change_work);
 +		break;
 +
 +	case MLX5_DEV_EVENT_GUID_CHANGE:
 +		ibev.event = IB_EVENT_GID_CHANGE;
 +		break;
 +
 +	case MLX5_DEV_EVENT_CLIENT_REREG:
 +		ibev.event = IB_EVENT_CLIENT_REREGISTER;
  		break;
- 	case MLX5_DEV_EVENT_DELAY_DROP_TIMEOUT:
- 		schedule_work(&ibdev->delay_drop.delay_drop_work);
- 		goto out;
+ 	case MLX5_EVENT_TYPE_GENERAL_EVENT:
+ 		handle_general_event(ibdev, work->param, &ibev);
+ 		/* fall through */
  	default:
  		goto out;
  	}
* Unmerged path drivers/infiniband/hw/mlx5/main.c
