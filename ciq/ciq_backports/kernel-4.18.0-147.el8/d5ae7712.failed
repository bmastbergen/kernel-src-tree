dma-buf: Update [un]map documentation to match the other functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Andrew F. Davis <afd@ti.com>
commit d5ae7712b7ffbb435e8f3d98f2123eff4734c77f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/d5ae7712.failed

Other function have inline documentation, a couple still have
theirs at the top of the structure, update the docs and move
them inline.

	Signed-off-by: Andrew F. Davis <afd@ti.com>
	Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
Link: https://patchwork.freedesktop.org/patch/msgid/20190321200957.16938-2-afd@ti.com
(cherry picked from commit d5ae7712b7ffbb435e8f3d98f2123eff4734c77f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/dma-buf.h
diff --cc include/linux/dma-buf.h
index bee40907be84,a0bd071466fc..000000000000
--- a/include/linux/dma-buf.h
+++ b/include/linux/dma-buf.h
@@@ -39,13 -39,6 +39,16 @@@ struct dma_buf_attachment
  
  /**
   * struct dma_buf_ops - operations possible on struct dma_buf
++<<<<<<< HEAD
 + * @map_atomic: maps a page from the buffer into kernel address
 + *		space, users may not block until the subsequent unmap call.
 + *		This callback must not sleep.
 + * @unmap_atomic: [optional] unmaps a atomically mapped page from the buffer.
 + *		  This Callback must not sleep.
 + * @map: maps a page from the buffer into kernel address space.
 + * @unmap: [optional] unmaps a page from the buffer.
++=======
++>>>>>>> d5ae7712b7ff (dma-buf: Update [un]map documentation to match the other functions)
   * @vmap: [optional] creates a virtual mapping for the buffer into kernel
   *	  address space. Same restrictions as for vmap and friends apply.
   * @vunmap: [optional] unmaps a vmap from the buffer
@@@ -205,10 -198,6 +208,13 @@@ struct dma_buf_ops 
  	 * to be restarted.
  	 */
  	int (*end_cpu_access)(struct dma_buf *, enum dma_data_direction);
++<<<<<<< HEAD
 +	void *(*map_atomic)(struct dma_buf *, unsigned long);
 +	void (*unmap_atomic)(struct dma_buf *, unsigned long, void *);
 +	void *(*map)(struct dma_buf *, unsigned long);
 +	void (*unmap)(struct dma_buf *, unsigned long, void *);
++=======
++>>>>>>> d5ae7712b7ff (dma-buf: Update [un]map documentation to match the other functions)
  
  	/**
  	 * @mmap:
* Unmerged path include/linux/dma-buf.h
