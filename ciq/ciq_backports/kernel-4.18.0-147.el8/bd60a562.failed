drm/i915/icl: Factor out combo PHY lane power setup helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Imre Deak <imre.deak@intel.com>
commit bd60a562906b2dfa6db4e9165c1498ea25db0587
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/bd60a562.failed

Factor out the combo PHY lane power configuration code to a separate
helper; it will be also needed by the next patch adding the same
configuration for DDI ports.

Add support for DDI ports and lane reversal as preparation for the next
patch.

The PWR_DOWN_LN_1 value is unspecified in the BSpec register description
so remove it.

v2:
- Fix up the wrong assumption that the encodings are the same for DDI
  and DSI ports. (Jani)
v3:
- Use intel_ instead of icl_ prefix. (Jani)
- Add required headers to intel_combo_phy.h after the upstream header
  refactoring.

	Cc: Jani Nikula <jani.nikula@intel.com>
	Cc: Madhav Chauhan <madhav.chauhan@intel.com>
	Cc: Ville Syrjala <ville.syrjala@linux.intel.com>
	Signed-off-by: Imre Deak <imre.deak@intel.com>
	Reviewed-by: Jani Nikula <jani.nikula@intel.com> (v2)
Link: https://patchwork.freedesktop.org/patch/msgid/20190425185253.3197-1-imre.deak@intel.com
(cherry picked from commit bd60a562906b2dfa6db4e9165c1498ea25db0587)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_reg.h
#	drivers/gpu/drm/i915/icl_dsi.c
#	drivers/gpu/drm/i915/intel_combo_phy.c
#	drivers/gpu/drm/i915/intel_combo_phy.h
diff --cc drivers/gpu/drm/i915/i915_reg.h
index a78c6ef1f608,e97c47fca645..000000000000
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@@ -1690,6 -1786,73 +1690,76 @@@ enum i915_power_well_id 
  #define   OCL2_LDOFUSE_PWR_DIS		(1 << 6)
  #define BXT_PORT_CL1CM_DW30(phy)	_BXT_PHY((phy), _PORT_CL1CM_DW30_BC)
  
++<<<<<<< HEAD
++=======
+ /*
+  * CNL/ICL Port/COMBO-PHY Registers
+  */
+ #define _ICL_COMBOPHY_A			0x162000
+ #define _ICL_COMBOPHY_B			0x6C000
+ #define _ICL_COMBOPHY(port)		_PICK(port, _ICL_COMBOPHY_A, \
+ 					      _ICL_COMBOPHY_B)
+ 
+ /* CNL/ICL Port CL_DW registers */
+ #define _ICL_PORT_CL_DW(dw, port)	(_ICL_COMBOPHY(port) + \
+ 					 4 * (dw))
+ 
+ #define CNL_PORT_CL1CM_DW5		_MMIO(0x162014)
+ #define ICL_PORT_CL_DW5(port)		_MMIO(_ICL_PORT_CL_DW(5, port))
+ #define   CL_POWER_DOWN_ENABLE		(1 << 4)
+ #define   SUS_CLOCK_CONFIG		(3 << 0)
+ 
+ #define ICL_PORT_CL_DW10(port)		_MMIO(_ICL_PORT_CL_DW(10, port))
+ #define  PG_SEQ_DELAY_OVERRIDE_MASK	(3 << 25)
+ #define  PG_SEQ_DELAY_OVERRIDE_SHIFT	25
+ #define  PG_SEQ_DELAY_OVERRIDE_ENABLE	(1 << 24)
+ #define  PWR_UP_ALL_LANES		(0x0 << 4)
+ #define  PWR_DOWN_LN_3_2_1		(0xe << 4)
+ #define  PWR_DOWN_LN_3_2		(0xc << 4)
+ #define  PWR_DOWN_LN_3			(0x8 << 4)
+ #define  PWR_DOWN_LN_2_1_0		(0x7 << 4)
+ #define  PWR_DOWN_LN_1_0		(0x3 << 4)
+ #define  PWR_DOWN_LN_3_1		(0xa << 4)
+ #define  PWR_DOWN_LN_3_1_0		(0xb << 4)
+ #define  PWR_DOWN_LN_MASK		(0xf << 4)
+ #define  PWR_DOWN_LN_SHIFT		4
+ 
+ #define ICL_PORT_CL_DW12(port)		_MMIO(_ICL_PORT_CL_DW(12, port))
+ #define   ICL_LANE_ENABLE_AUX		(1 << 0)
+ 
+ /* CNL/ICL Port COMP_DW registers */
+ #define _ICL_PORT_COMP			0x100
+ #define _ICL_PORT_COMP_DW(dw, port)	(_ICL_COMBOPHY(port) + \
+ 					 _ICL_PORT_COMP + 4 * (dw))
+ 
+ #define CNL_PORT_COMP_DW0		_MMIO(0x162100)
+ #define ICL_PORT_COMP_DW0(port)		_MMIO(_ICL_PORT_COMP_DW(0, port))
+ #define   COMP_INIT			(1 << 31)
+ 
+ #define CNL_PORT_COMP_DW1		_MMIO(0x162104)
+ #define ICL_PORT_COMP_DW1(port)		_MMIO(_ICL_PORT_COMP_DW(1, port))
+ 
+ #define CNL_PORT_COMP_DW3		_MMIO(0x16210c)
+ #define ICL_PORT_COMP_DW3(port)		_MMIO(_ICL_PORT_COMP_DW(3, port))
+ #define   PROCESS_INFO_DOT_0		(0 << 26)
+ #define   PROCESS_INFO_DOT_1		(1 << 26)
+ #define   PROCESS_INFO_DOT_4		(2 << 26)
+ #define   PROCESS_INFO_MASK		(7 << 26)
+ #define   PROCESS_INFO_SHIFT		26
+ #define   VOLTAGE_INFO_0_85V		(0 << 24)
+ #define   VOLTAGE_INFO_0_95V		(1 << 24)
+ #define   VOLTAGE_INFO_1_05V		(2 << 24)
+ #define   VOLTAGE_INFO_MASK		(3 << 24)
+ #define   VOLTAGE_INFO_SHIFT		24
+ 
+ #define CNL_PORT_COMP_DW9		_MMIO(0x162124)
+ #define ICL_PORT_COMP_DW9(port)		_MMIO(_ICL_PORT_COMP_DW(9, port))
+ 
+ #define CNL_PORT_COMP_DW10		_MMIO(0x162128)
+ #define ICL_PORT_COMP_DW10(port)	_MMIO(_ICL_PORT_COMP_DW(10, port))
+ 
+ /* CNL/ICL Port PCS registers */
++>>>>>>> bd60a562906b (drm/i915/icl: Factor out combo PHY lane power setup helper)
  #define _CNL_PORT_PCS_DW1_GRP_AE	0x162304
  #define _CNL_PORT_PCS_DW1_GRP_B		0x162384
  #define _CNL_PORT_PCS_DW1_GRP_C		0x162B04
* Unmerged path drivers/gpu/drm/i915/icl_dsi.c
* Unmerged path drivers/gpu/drm/i915/intel_combo_phy.c
* Unmerged path drivers/gpu/drm/i915/intel_combo_phy.h
* Unmerged path drivers/gpu/drm/i915/i915_reg.h
* Unmerged path drivers/gpu/drm/i915/icl_dsi.c
* Unmerged path drivers/gpu/drm/i915/intel_combo_phy.c
* Unmerged path drivers/gpu/drm/i915/intel_combo_phy.h
