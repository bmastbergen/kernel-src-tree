x86/resctrl: Use rdt_last_cmd_puts() where possible

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Reinette Chatre <reinette.chatre@intel.com>
commit 456824896de2b68df40b3ea5777ef49dc6cc8fda
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/45682489.failed

The last_cmd_status sequence buffer contains user-visible messages
(accessed via /sys/fs/resctrl/info/last_cmd_status) that detail any
errors encountered while interacting with the resctrl filesystem.

rdt_last_cmd_printf() and rdt_last_cmd_puts() are the two calls
available to respectively print a string with format specifiers or a
simple one (which contains no format specifiers) to the last_cmd_status
buffer.

A few occurrences exist where rdt_last_cmd_printf() is used to print
a simple string. Doing so does not result in incorrect result or
incorrect behavior, but rdt_last_cmd_puts() is the function intended to
be used in these cases, as it is faster and it doesn't need to do the
vsnprintf() formatting.

Fix these occurrences to use rdt_last_cmd_puts() instead. While doing
so, fix two typos that were recently introduced into two of these simple
strings.

 [ bp: massage commit message and correct typos. ]

Fixes: 723f1a0dd8e2 ("x86/resctrl: Fixup the user-visible strings")
Fixes: e0bdfe8e36f3 ("x86/intel_rdt: Support creation/removal of pseudo-locked region")
Fixes: 9ab9aa15c309 ("x86/intel_rdt: Ensure requested schemata respects mode")
Fixes: d48d7a57f718 ("x86/intel_rdt: Introduce resource group's mode resctrl file")
Fixes: dfe9674b04ff ("x86/intel_rdt: Enable entering of pseudo-locksetup mode")
	Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Fenghua Yu <fenghua.yu@intel.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: babu.moger@amd.com
	Cc: jithu.joseph@intel.com
	Cc: x86-ml <x86@kernel.org>
Link: https://lkml.kernel.org/r/f48e46a016d6a5c79f13de8faeca382052189e2e.1543346009.git.reinette.chatre@intel.com
(cherry picked from commit 456824896de2b68df40b3ea5777ef49dc6cc8fda)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/intel_rdt_ctrlmondata.c
#	arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
diff --cc arch/x86/kernel/cpu/intel_rdt_ctrlmondata.c
index a57aa44513d3,03ee13235a45..000000000000
--- a/arch/x86/kernel/cpu/intel_rdt_ctrlmondata.c
+++ b/arch/x86/kernel/cpu/intel_rdt_ctrlmondata.c
@@@ -215,7 -215,7 +215,11 @@@ int parse_cbm(struct rdt_parse_data *da
  	 */
  	if (rdtgrp->mode == RDT_MODE_PSEUDO_LOCKSETUP &&
  	    rdtgroup_pseudo_locked_in_hierarchy(d)) {
++<<<<<<< HEAD:arch/x86/kernel/cpu/intel_rdt_ctrlmondata.c
 +		rdt_last_cmd_printf("pseudo-locked region in hierarchy\n");
++=======
+ 		rdt_last_cmd_puts("Pseudo-locked region in hierarchy\n");
++>>>>>>> 456824896de2 (x86/resctrl: Use rdt_last_cmd_puts() where possible):arch/x86/kernel/cpu/resctrl/ctrlmondata.c
  		return -EINVAL;
  	}
  
@@@ -234,14 -234,14 +238,22 @@@
  	 * either is exclusive.
  	 */
  	if (rdtgroup_cbm_overlaps(r, d, cbm_val, rdtgrp->closid, true)) {
++<<<<<<< HEAD:arch/x86/kernel/cpu/intel_rdt_ctrlmondata.c
 +		rdt_last_cmd_printf("overlaps with exclusive group\n");
++=======
+ 		rdt_last_cmd_puts("Overlaps with exclusive group\n");
++>>>>>>> 456824896de2 (x86/resctrl: Use rdt_last_cmd_puts() where possible):arch/x86/kernel/cpu/resctrl/ctrlmondata.c
  		return -EINVAL;
  	}
  
  	if (rdtgroup_cbm_overlaps(r, d, cbm_val, rdtgrp->closid, false)) {
  		if (rdtgrp->mode == RDT_MODE_EXCLUSIVE ||
  		    rdtgrp->mode == RDT_MODE_PSEUDO_LOCKSETUP) {
++<<<<<<< HEAD:arch/x86/kernel/cpu/intel_rdt_ctrlmondata.c
 +			rdt_last_cmd_printf("overlaps with other group\n");
++=======
+ 			rdt_last_cmd_puts("Overlaps with other group\n");
++>>>>>>> 456824896de2 (x86/resctrl: Use rdt_last_cmd_puts() where possible):arch/x86/kernel/cpu/resctrl/ctrlmondata.c
  			return -EINVAL;
  		}
  	}
diff --cc arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
index fe0d705b5ce3,017505017bdb..000000000000
--- a/arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
+++ b/arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
@@@ -1206,7 -1206,7 +1206,11 @@@ static ssize_t rdtgroup_mode_write(stru
  		goto out;
  
  	if (mode == RDT_MODE_PSEUDO_LOCKED) {
++<<<<<<< HEAD:arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
 +		rdt_last_cmd_printf("cannot change pseudo-locked group\n");
++=======
+ 		rdt_last_cmd_puts("Cannot change pseudo-locked group\n");
++>>>>>>> 456824896de2 (x86/resctrl: Use rdt_last_cmd_puts() where possible):arch/x86/kernel/cpu/resctrl/rdtgroup.c
  		ret = -EINVAL;
  		goto out;
  	}
@@@ -1235,7 -1235,7 +1239,11 @@@
  			goto out;
  		rdtgrp->mode = RDT_MODE_PSEUDO_LOCKSETUP;
  	} else {
++<<<<<<< HEAD:arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
 +		rdt_last_cmd_printf("unknown/unsupported mode\n");
++=======
+ 		rdt_last_cmd_puts("Unknown or unsupported mode\n");
++>>>>>>> 456824896de2 (x86/resctrl: Use rdt_last_cmd_puts() where possible):arch/x86/kernel/cpu/resctrl/rdtgroup.c
  		ret = -EINVAL;
  	}
  
* Unmerged path arch/x86/kernel/cpu/intel_rdt_ctrlmondata.c
* Unmerged path arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
