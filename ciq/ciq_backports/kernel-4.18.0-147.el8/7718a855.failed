selftests/tls: test for lowat overshoot with multiple records

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 7718a855cd7ae9fc27a2aa1532ee105d52eb7634
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/7718a855.failed

Set SO_RCVLOWAT and test it gets respected when gathering
data from multiple records.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7718a855cd7ae9fc27a2aa1532ee105d52eb7634)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/net/tls.c
diff --cc tools/testing/selftests/net/tls.c
index ed8f5af65a4f,01efbcd2258c..000000000000
--- a/tools/testing/selftests/net/tls.c
+++ b/tools/testing/selftests/net/tls.c
@@@ -526,6 -575,26 +526,29 @@@ TEST_F(tls, recv_peek_large_buf_mult_re
  	EXPECT_EQ(memcmp(test_str, buf, len), 0);
  }
  
++<<<<<<< HEAD
++=======
+ TEST_F(tls, recv_lowat)
+ {
+ 	char send_mem[10] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
+ 	char recv_mem[20];
+ 	int lowat = 8;
+ 
+ 	EXPECT_EQ(send(self->fd, send_mem, 10, 0), 10);
+ 	EXPECT_EQ(send(self->fd, send_mem, 5, 0), 5);
+ 
+ 	memset(recv_mem, 0, 20);
+ 	EXPECT_EQ(setsockopt(self->cfd, SOL_SOCKET, SO_RCVLOWAT,
+ 			     &lowat, sizeof(lowat)), 0);
+ 	EXPECT_EQ(recv(self->cfd, recv_mem, 1, MSG_WAITALL), 1);
+ 	EXPECT_EQ(recv(self->cfd, recv_mem + 1, 6, MSG_WAITALL), 6);
+ 	EXPECT_EQ(recv(self->cfd, recv_mem + 7, 10, 0), 8);
+ 
+ 	EXPECT_EQ(memcmp(send_mem, recv_mem, 10), 0);
+ 	EXPECT_EQ(memcmp(send_mem, recv_mem + 10, 5), 0);
+ }
+ 
++>>>>>>> 7718a855cd7a (selftests/tls: test for lowat overshoot with multiple records)
  TEST_F(tls, pollin)
  {
  	char const *test_str = "test_poll";
* Unmerged path tools/testing/selftests/net/tls.c
