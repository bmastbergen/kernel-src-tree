drm/amdgpu/{uvd,vcn}: fetch ring's read_ptr after alloc

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Shirish S <shirish.s@amd.com>
commit e038b9016aa88a9e1429f1b016644c509b8e58a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/e038b901.failed

[What]
readptr read always returns zero, since most likely
these blocks are either power or clock gated.

[How]
fetch rptr after amdgpu_ring_alloc() which informs
the power management code that the block is about to be
used and hence the gating is turned off.

	Signed-off-by: Louis Li <Ching-shih.Li@amd.com>
	Signed-off-by: Shirish S <shirish.s@amd.com>
	Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit e038b9016aa88a9e1429f1b016644c509b8e58a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
#	drivers/gpu/drm/amd/amdgpu/uvd_v6_0.c
#	drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
diff --cc drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
index 1b4ad9b2a755,d786098364dd..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
@@@ -432,11 -473,11 +432,17 @@@ int amdgpu_vcn_enc_ring_test_ring(struc
  	int r;
  
  	r = amdgpu_ring_alloc(ring, 16);
 -	if (r)
 +	if (r) {
 +		DRM_ERROR("amdgpu: vcn enc failed to lock ring %d (%d).\n",
 +			  ring->idx, r);
  		return r;
++<<<<<<< HEAD
 +	}
++=======
+ 
+ 	rptr = amdgpu_ring_get_rptr(ring);
+ 
++>>>>>>> e038b9016aa8 (drm/amdgpu/{uvd,vcn}: fetch ring's read_ptr after alloc)
  	amdgpu_ring_write(ring, VCN_ENC_CMD_END);
  	amdgpu_ring_commit(ring);
  
diff --cc drivers/gpu/drm/amd/amdgpu/uvd_v6_0.c
index bfddf97dd13e,16682b7998be..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/uvd_v6_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/uvd_v6_0.c
@@@ -174,11 -175,11 +174,17 @@@ static int uvd_v6_0_enc_ring_test_ring(
  	int r;
  
  	r = amdgpu_ring_alloc(ring, 16);
 -	if (r)
 +	if (r) {
 +		DRM_ERROR("amdgpu: uvd enc failed to lock ring %d (%d).\n",
 +			  ring->idx, r);
  		return r;
++<<<<<<< HEAD
 +	}
++=======
+ 
+ 	rptr = amdgpu_ring_get_rptr(ring);
+ 
++>>>>>>> e038b9016aa8 (drm/amdgpu/{uvd,vcn}: fetch ring's read_ptr after alloc)
  	amdgpu_ring_write(ring, HEVC_ENC_CMD_END);
  	amdgpu_ring_commit(ring);
  
diff --cc drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
index 57d32f21b3a6,74811b2aece1..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
@@@ -176,11 -183,11 +176,17 @@@ static int uvd_v7_0_enc_ring_test_ring(
  		return 0;
  
  	r = amdgpu_ring_alloc(ring, 16);
 -	if (r)
 +	if (r) {
 +		DRM_ERROR("amdgpu: uvd enc failed to lock (%d)ring %d (%d).\n",
 +			  ring->me, ring->idx, r);
  		return r;
++<<<<<<< HEAD
 +	}
++=======
+ 
+ 	rptr = amdgpu_ring_get_rptr(ring);
+ 
++>>>>>>> e038b9016aa8 (drm/amdgpu/{uvd,vcn}: fetch ring's read_ptr after alloc)
  	amdgpu_ring_write(ring, HEVC_ENC_CMD_END);
  	amdgpu_ring_commit(ring);
  
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/uvd_v6_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
