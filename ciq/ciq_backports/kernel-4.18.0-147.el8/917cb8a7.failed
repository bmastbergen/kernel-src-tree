RDMA/cma: Add cm_id restrack resource based on kernel or user cm_id type

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Steve Wise <swise@opengridcomputing.com>
commit 917cb8a72a94d198073ad1e087685f801292042d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/917cb8a7.failed

A recent regression causes a null ptr crash when dumping cm_id resources.
The cma is incorrectly adding all cm_id restrack resources as kernel mode.

Fixes: af8d70375d56 ("RDMA/restrack: Resource-tracker should not use uobject pointers")
	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 917cb8a72a94d198073ad1e087685f801292042d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cma.c
diff --cc drivers/infiniband/core/cma.c
index fecc801376d9,84f077b2b90a..000000000000
--- a/drivers/infiniband/core/cma.c
+++ b/drivers/infiniband/core/cma.c
@@@ -494,7 -494,10 +494,14 @@@ static void _cma_attach_to_dev(struct r
  	id_priv->id.route.addr.dev_addr.transport =
  		rdma_node_get_transport(cma_dev->device->node_type);
  	list_add_tail(&id_priv->list, &cma_dev->id_list);
++<<<<<<< HEAD
 +	rdma_restrack_add(&id_priv->res);
++=======
+ 	if (id_priv->res.kern_name)
+ 		rdma_restrack_kadd(&id_priv->res);
+ 	else
+ 		rdma_restrack_uadd(&id_priv->res);
++>>>>>>> 917cb8a72a94 (RDMA/cma: Add cm_id restrack resource based on kernel or user cm_id type)
  }
  
  static void cma_attach_to_dev(struct rdma_id_private *id_priv,
* Unmerged path drivers/infiniband/core/cma.c
