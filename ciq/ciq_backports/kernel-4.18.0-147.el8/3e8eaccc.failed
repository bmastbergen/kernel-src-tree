KVM: nVMX: Call nested_vmx_setup_ctls_msrs() iff @nested is true

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit 3e8eacccae9d998e0f5074f4fe411c747d85dfd8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/3e8eaccc.failed

...so that it doesn't need access to @nested. The only case where the
provided struct isn't already zeroed is the call from vmx_create_vcpu()
as setup_vmcs_config() zeroes the struct in the other use cases.  This
will allow @nested to be statically defined in vmx.c, i.e. this removes
the last direct reference from nested code.

	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 3e8eacccae9d998e0f5074f4fe411c747d85dfd8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/vmx.c
diff --cc arch/x86/kvm/vmx/vmx.c
index d9061399dcbb,e67ff719dfe6..000000000000
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@@ -14905,7 -13154,10 +14902,14 @@@ static __init int hardware_setup(void
  	kvm_mce_cap_supported |= MCG_LMCE_P;
  
  	if (nested) {
++<<<<<<< HEAD
 +		r = nested_vmx_hardware_setup();
++=======
+ 		nested_vmx_setup_ctls_msrs(&vmcs_config.nested,
+ 					   vmx_capability.ept, enable_apicv);
+ 
+ 		r = nested_vmx_hardware_setup(kvm_vmx_exit_handlers);
++>>>>>>> 3e8eacccae9d (KVM: nVMX: Call nested_vmx_setup_ctls_msrs() iff @nested is true)
  		if (r)
  			return r;
  	}
* Unmerged path arch/x86/kvm/vmx/vmx.c
