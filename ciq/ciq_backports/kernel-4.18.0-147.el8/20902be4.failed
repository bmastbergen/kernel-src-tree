net/mlx5: Driver events notifier API

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 20902be46c4da59b1891d238801146134e0e06b5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/20902be4.failed

Use atomic notifier chain to fire events to mlx5 core driver
consumers (mlx5e/mlx5_ib) and provide mlx5 register/unregister notifier
API.

This API will replace the current mlx5_interface->event callback and all
the logic around it, especially the delayed events logic introduced by
commit 97834eba7c19 ("net/mlx5: Delay events till ib registration ends")

Which is not needed anymore with this new API where the mlx5 interface
can dynamically register/unregister its notifier.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 20902be46c4da59b1891d238801146134e0e06b5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/events.c
#	drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
index 7550b1cc8c6a,4d78a459676e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
@@@ -40,4 -42,37 +40,40 @@@ void mlx5_core_unreserve_gids(struct ml
  int  mlx5_core_reserved_gid_alloc(struct mlx5_core_dev *dev, int *gid_index);
  void mlx5_core_reserved_gid_free(struct mlx5_core_dev *dev, int gid_index);
  
++<<<<<<< HEAD
++=======
+ /* TODO move to lib/events.h */
+ 
+ #define PORT_MODULE_EVENT_MODULE_STATUS_MASK 0xF
+ #define PORT_MODULE_EVENT_ERROR_TYPE_MASK    0xF
+ 
+ enum port_module_event_status_type {
+ 	MLX5_MODULE_STATUS_PLUGGED   = 0x1,
+ 	MLX5_MODULE_STATUS_UNPLUGGED = 0x2,
+ 	MLX5_MODULE_STATUS_ERROR     = 0x3,
+ 	MLX5_MODULE_STATUS_NUM       = 0x3,
+ };
+ 
+ enum  port_module_event_error_type {
+ 	MLX5_MODULE_EVENT_ERROR_POWER_BUDGET_EXCEEDED,
+ 	MLX5_MODULE_EVENT_ERROR_LONG_RANGE_FOR_NON_MLNX_CABLE_MODULE,
+ 	MLX5_MODULE_EVENT_ERROR_BUS_STUCK,
+ 	MLX5_MODULE_EVENT_ERROR_NO_EEPROM_RETRY_TIMEOUT,
+ 	MLX5_MODULE_EVENT_ERROR_ENFORCE_PART_NUMBER_LIST,
+ 	MLX5_MODULE_EVENT_ERROR_UNKNOWN_IDENTIFIER,
+ 	MLX5_MODULE_EVENT_ERROR_HIGH_TEMPERATURE,
+ 	MLX5_MODULE_EVENT_ERROR_BAD_CABLE,
+ 	MLX5_MODULE_EVENT_ERROR_UNKNOWN,
+ 	MLX5_MODULE_EVENT_ERROR_NUM,
+ };
+ 
+ struct mlx5_pme_stats {
+ 	u64 status_counters[MLX5_MODULE_STATUS_NUM];
+ 	u64 error_counters[MLX5_MODULE_EVENT_ERROR_NUM];
+ };
+ 
+ void mlx5_get_pme_stats(struct mlx5_core_dev *dev, struct mlx5_pme_stats *stats);
+ int mlx5_notifier_call_chain(struct mlx5_events *events, unsigned int event, void *data);
+ 
++>>>>>>> 20902be46c4d (net/mlx5: Driver events notifier API)
  #endif
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/events.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/events.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
diff --git a/include/linux/mlx5/driver.h b/include/linux/mlx5/driver.h
index 2b6e906af6bb..b43028add5a8 100644
--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@ -46,6 +46,7 @@
 #include <linux/mempool.h>
 #include <linux/interrupt.h>
 #include <linux/idr.h>
+#include <linux/notifier.h>
 
 #include <linux/mlx5/device.h>
 #include <linux/mlx5/doorbell.h>
@@ -1203,6 +1204,9 @@ struct mlx5_interface {
 void *mlx5_get_protocol_dev(struct mlx5_core_dev *mdev, int protocol);
 int mlx5_register_interface(struct mlx5_interface *intf);
 void mlx5_unregister_interface(struct mlx5_interface *intf);
+int mlx5_notifier_register(struct mlx5_core_dev *dev, struct notifier_block *nb);
+int mlx5_notifier_unregister(struct mlx5_core_dev *dev, struct notifier_block *nb);
+
 int mlx5_core_query_vendor_id(struct mlx5_core_dev *mdev, u32 *vendor_id);
 
 int mlx5_cmd_create_vport_lag(struct mlx5_core_dev *dev);
