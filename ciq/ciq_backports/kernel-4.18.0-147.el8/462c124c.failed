bpf: fix a libbpf loader issue

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yonghong Song <yhs@fb.com>
commit 462c124c590fe633564192dbfa26e99af788a67c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/462c124c.failed

Commit 2993e0515bb4 ("tools/bpf: add support to read .BTF.ext sections")
added support to read .BTF.ext sections from an object file, create
and pass prog_btf_fd and func_info to the kernel.

The program btf_fd (prog->btf_fd) is initialized to be -1 to please
zclose so we do not need special handling dur prog close.
Passing -1 to the kernel, however, will cause loading error.
Passing btf_fd 0 to the kernel if prog->btf_fd is invalid
fixed the problem.

Fixes: 2993e0515bb4 ("tools/bpf: add support to read .BTF.ext sections")
	Reported-by: Andrey Ignatov <rdna@fb.com>
	Reported-by: Emre Cantimur <haydum@fb.com>
	Tested-by: Andrey Ignatov <rdna@fb.com>
	Signed-off-by: Yonghong Song <yhs@fb.com>
	Acked-by: Martin KaFai Lau <kafai@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 462c124c590fe633564192dbfa26e99af788a67c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index f064c910a99d,f022ac82e882..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -1326,7 -1386,11 +1326,15 @@@ load_program(enum bpf_prog_type type, e
  	load_attr.insns_cnt = insns_cnt;
  	load_attr.license = license;
  	load_attr.kern_version = kern_version;
++<<<<<<< HEAD
 +	load_attr.prog_ifindex = prog_ifindex;
++=======
+ 	load_attr.prog_ifindex = prog->prog_ifindex;
+ 	load_attr.prog_btf_fd = prog->btf_fd >= 0 ? prog->btf_fd : 0;
+ 	load_attr.func_info = prog->func_info;
+ 	load_attr.func_info_rec_size = prog->func_info_rec_size;
+ 	load_attr.func_info_cnt = func_info_cnt;
++>>>>>>> 462c124c590f (bpf: fix a libbpf loader issue)
  
  	if (!load_attr.insns || !load_attr.insns_cnt)
  		return -EINVAL;
* Unmerged path tools/lib/bpf/libbpf.c
