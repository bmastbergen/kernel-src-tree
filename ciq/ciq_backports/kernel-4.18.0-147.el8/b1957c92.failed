bpf: adding tests for map_in_map helpber in libbpf

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Nikita V. Shirokov <tehnerd@tehnerd.com>
commit b1957c92eba5acad7d8a0a6f968561e08714e978
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/b1957c92.failed

adding test/example of bpf_map__set_inner_map_fd usage

	Signed-off-by: Nikita V. Shirokov <tehnerd@tehnerd.com>
	Acked-by: Yonghong Song <yhs@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit b1957c92eba5acad7d8a0a6f968561e08714e978)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/Makefile
#	tools/testing/selftests/bpf/test_maps.c
diff --cc tools/testing/selftests/bpf/Makefile
index 333f4b78b741,43157bd89165..000000000000
--- a/tools/testing/selftests/bpf/Makefile
+++ b/tools/testing/selftests/bpf/Makefile
@@@ -37,7 -37,9 +37,13 @@@ TEST_GEN_FILES = test_pkt_access.o test
  	test_get_stack_rawtp.o test_sockmap_kern.o test_sockhash_kern.o \
  	test_lwt_seg6local.o sendmsg4_prog.o sendmsg6_prog.o test_lirc_mode2_kern.o \
  	get_cgroup_id_kern.o socket_cookie_prog.o test_select_reuseport_kern.o \
++<<<<<<< HEAD
 +	test_skb_cgroup_id_kern.o bpf_flow.o netcnt_prog.o test_sk_lookup_kern.o
++=======
+ 	test_skb_cgroup_id_kern.o bpf_flow.o netcnt_prog.o \
+ 	test_sk_lookup_kern.o test_xdp_vlan.o test_queue_map.o test_stack_map.o \
+ 	test_map_in_map.o
++>>>>>>> b1957c92eba5 (bpf: adding tests for map_in_map helpber in libbpf)
  
  # Order correspond to 'make run_tests' order
  TEST_PROGS := test_kmod.sh \
diff --cc tools/testing/selftests/bpf/test_maps.c
index a8d6af27803a,9c79ee017df3..000000000000
--- a/tools/testing/selftests/bpf/test_maps.c
+++ b/tools/testing/selftests/bpf/test_maps.c
@@@ -1480,6 -1685,11 +1568,14 @@@ static void run_all_tests(void
  	test_map_wronly();
  
  	test_reuseport_array();
++<<<<<<< HEAD
++=======
+ 
+ 	test_queuemap(0, NULL);
+ 	test_stackmap(0, NULL);
+ 
+ 	test_map_in_map();
++>>>>>>> b1957c92eba5 (bpf: adding tests for map_in_map helpber in libbpf)
  }
  
  int main(void)
* Unmerged path tools/testing/selftests/bpf/Makefile
diff --git a/tools/testing/selftests/bpf/test_map_in_map.c b/tools/testing/selftests/bpf/test_map_in_map.c
new file mode 100644
index 000000000000..ce923e67e08e
--- /dev/null
+++ b/tools/testing/selftests/bpf/test_map_in_map.c
@@ -0,0 +1,49 @@
+// SPDX-License-Identifier: GPL-2.0
+/* Copyright (c) 2018 Facebook */
+#include <stddef.h>
+#include <linux/bpf.h>
+#include <linux/types.h>
+#include "bpf_helpers.h"
+
+struct bpf_map_def SEC("maps") mim_array = {
+	.type = BPF_MAP_TYPE_ARRAY_OF_MAPS,
+	.key_size = sizeof(int),
+	/* must be sizeof(__u32) for map in map */
+	.value_size = sizeof(__u32),
+	.max_entries = 1,
+	.map_flags = 0,
+};
+
+struct bpf_map_def SEC("maps") mim_hash = {
+	.type = BPF_MAP_TYPE_HASH_OF_MAPS,
+	.key_size = sizeof(int),
+	/* must be sizeof(__u32) for map in map */
+	.value_size = sizeof(__u32),
+	.max_entries = 1,
+	.map_flags = 0,
+};
+
+SEC("xdp_mimtest")
+int xdp_mimtest0(struct xdp_md *ctx)
+{
+	int value = 123;
+	int key = 0;
+	void *map;
+
+	map = bpf_map_lookup_elem(&mim_array, &key);
+	if (!map)
+		return XDP_DROP;
+
+	bpf_map_update_elem(map, &key, &value, 0);
+
+	map = bpf_map_lookup_elem(&mim_hash, &key);
+	if (!map)
+		return XDP_DROP;
+
+	bpf_map_update_elem(map, &key, &value, 0);
+
+	return XDP_PASS;
+}
+
+int _version SEC("version") = 1;
+char _license[] SEC("license") = "GPL";
* Unmerged path tools/testing/selftests/bpf/test_maps.c
