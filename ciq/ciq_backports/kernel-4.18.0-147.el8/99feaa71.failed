s390/kexec_file: Create ipl report and pass to next kernel

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Philipp Rudo <prudo@linux.ibm.com>
commit 99feaa717e558cf4f2ad0faf53acac3cf9cc7438
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/99feaa71.failed

	Signed-off-by: Philipp Rudo <prudo@linux.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 99feaa717e558cf4f2ad0faf53acac3cf9cc7438)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/machine_kexec_file.c
diff --cc arch/s390/kernel/machine_kexec_file.c
index 0e2a5a7a1b7c,48cab9600ed9..000000000000
--- a/arch/s390/kernel/machine_kexec_file.c
+++ b/arch/s390/kernel/machine_kexec_file.c
@@@ -8,7 -8,12 +8,14 @@@
   */
  
  #include <linux/elf.h>
 -#include <linux/errno.h>
  #include <linux/kexec.h>
++<<<<<<< HEAD
++=======
+ #include <linux/module.h>
+ #include <linux/verification.h>
+ #include <asm/boot_data.h>
+ #include <asm/ipl.h>
++>>>>>>> 99feaa717e55 (s390/kexec_file: Create ipl report and pass to next kernel)
  #include <asm/setup.h>
  
  const struct kexec_file_ops * const kexec_file_loaders[] = {
diff --git a/arch/s390/include/asm/ipl.h b/arch/s390/include/asm/ipl.h
index bf62af49af06..420d39ebdc46 100644
--- a/arch/s390/include/asm/ipl.h
+++ b/arch/s390/include/asm/ipl.h
@@ -36,6 +36,8 @@ struct ipl_parameter_block {
 
 #define IPL_MAX_SUPPORTED_VERSION (0)
 
+#define IPL_RB_CERT_UNKNOWN ((unsigned short)-1)
+
 #define DIAG308_VMPARM_SIZE (64)
 #define DIAG308_SCPDATA_OFFSET offsetof(struct ipl_parameter_block, \
 					fcp.scp_data)
diff --git a/arch/s390/include/asm/kexec.h b/arch/s390/include/asm/kexec.h
index 9ec077b0fb4d..8c69e515151b 100644
--- a/arch/s390/include/asm/kexec.h
+++ b/arch/s390/include/asm/kexec.h
@@ -63,6 +63,8 @@ struct s390_load_data {
 
 	/* Total size of loaded segments in memory. Used as an offset. */
 	size_t memsz;
+
+	struct ipl_report *report;
 };
 
 void *kexec_file_add_components(struct kimage *image,
diff --git a/arch/s390/kernel/kexec_elf.c b/arch/s390/kernel/kexec_elf.c
index 42bcd93f4318..e1259c775960 100644
--- a/arch/s390/kernel/kexec_elf.c
+++ b/arch/s390/kernel/kexec_elf.c
@@ -10,6 +10,7 @@
 #include <linux/errno.h>
 #include <linux/kernel.h>
 #include <linux/kexec.h>
+#include <asm/ipl.h>
 #include <asm/setup.h>
 
 static int kexec_file_add_kernel_elf(struct kimage *image,
@@ -50,6 +51,10 @@ static int kexec_file_add_kernel_elf(struct kimage *image,
 			data->parm = buf.buffer + PARMAREA;
 		}
 
+		ipl_report_add_component(data->report, &buf,
+					 IPL_RB_COMPONENT_FLAG_SIGNED |
+					 IPL_RB_COMPONENT_FLAG_VERIFIED,
+					 IPL_RB_CERT_UNKNOWN);
 		ret = kexec_add_buffer(&buf);
 		if (ret)
 			return ret;
diff --git a/arch/s390/kernel/kexec_image.c b/arch/s390/kernel/kexec_image.c
index 7281540605b7..22f997c77ea1 100644
--- a/arch/s390/kernel/kexec_image.c
+++ b/arch/s390/kernel/kexec_image.c
@@ -10,6 +10,7 @@
 #include <linux/errno.h>
 #include <linux/kernel.h>
 #include <linux/kexec.h>
+#include <asm/ipl.h>
 #include <asm/setup.h>
 
 static int kexec_file_add_kernel_image(struct kimage *image,
@@ -32,6 +33,10 @@ static int kexec_file_add_kernel_image(struct kimage *image,
 	data->parm = image->kernel_buf + PARMAREA;
 	data->memsz += buf.memsz;
 
+	ipl_report_add_component(data->report, &buf,
+				 IPL_RB_COMPONENT_FLAG_SIGNED |
+				 IPL_RB_COMPONENT_FLAG_VERIFIED,
+				 IPL_RB_CERT_UNKNOWN);
 	return kexec_add_buffer(&buf);
 }
 
* Unmerged path arch/s390/kernel/machine_kexec_file.c
