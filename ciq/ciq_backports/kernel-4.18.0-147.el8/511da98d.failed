kvm: x86: Return LA57 feature based on hardware capability

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yu Zhang <yu.c.zhang@linux.intel.com>
commit 511da98d207d5c0675a10351b01e37cbe50a79e5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/511da98d.failed

Previously, 'commit 372fddf70904 ("x86/mm: Introduce the 'no5lvl' kernel
parameter")' cleared X86_FEATURE_LA57 in boot_cpu_data, if Linux chooses
to not run in 5-level paging mode. Yet boot_cpu_data is queried by
do_cpuid_ent() as the host capability later when creating vcpus, and Qemu
will not be able to detect this feature and create VMs with LA57 feature.

As discussed earlier, VMs can still benefit from extended linear address
width, e.g. to enhance features like ASLR. So we would like to fix this,
by return the true hardware capability when Qemu queries.

	Signed-off-by: Yu Zhang <yu.c.zhang@linux.intel.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 511da98d207d5c0675a10351b01e37cbe50a79e5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/cpuid.c
diff --cc arch/x86/kvm/cpuid.c
index 0790d3c93129,c07958b59f50..000000000000
--- a/arch/x86/kvm/cpuid.c
+++ b/arch/x86/kvm/cpuid.c
@@@ -334,6 -334,8 +334,11 @@@ static inline int __do_cpuid_ent(struc
  	unsigned f_mpx = kvm_mpx_supported() ? F(MPX) : 0;
  	unsigned f_xsaves = kvm_x86_ops->xsaves_supported() ? F(XSAVES) : 0;
  	unsigned f_umip = kvm_x86_ops->umip_emulated() ? F(UMIP) : 0;
++<<<<<<< HEAD
++=======
+ 	unsigned f_intel_pt = kvm_x86_ops->pt_supported() ? F(INTEL_PT) : 0;
+ 	unsigned f_la57 = 0;
++>>>>>>> 511da98d207d (kvm: x86: Return LA57 feature based on hardware capability)
  
  	/* cpuid 1.edx */
  	const u32 kvm_cpuid_1_edx_x86_features =
* Unmerged path arch/x86/kvm/cpuid.c
