net/tls: fix poll ignoring partially copied records

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [net] tls: fix poll ignoring partially copied records (Sabrina Dubroca) [1739260]
Rebuild_FUZZ: 95.92%
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 13aecb17acabc2a92187d08f7ca93bb8aad62c6f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/13aecb17.failed

David reports that RPC applications which use epoll() occasionally
get stuck, and that TLS ULP causes the kernel to not wake applications,
even though read() will return data.

This is indeed true. The ctx->rx_list which holds partially copied
records is not consulted when deciding whether socket is readable.

Note that SO_RCVLOWAT with epoll() is and has always been broken for
kernel TLS. We'd need to parse all records from the TCP layer, instead
of just the first one.

Fixes: 692d7b5d1f91 ("tls: Fix recvmsg() to be able to peek across multiple records")
	Reported-by: David Beckett <david.beckett@netronome.com>
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 13aecb17acabc2a92187d08f7ca93bb8aad62c6f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tls/tls_sw.c
diff --cc net/tls/tls_sw.c
index 3f443983a6b3,e2385183526e..000000000000
--- a/net/tls/tls_sw.c
+++ b/net/tls/tls_sw.c
@@@ -1489,11 -1949,17 +1489,16 @@@ bool tls_sw_stream_read(const struct so
  {
  	struct tls_context *tls_ctx = tls_get_ctx(sk);
  	struct tls_sw_context_rx *ctx = tls_sw_ctx_rx(tls_ctx);
 -	bool ingress_empty = true;
 -	struct sk_psock *psock;
  
 -	rcu_read_lock();
 -	psock = sk_psock(sk);
 -	if (psock)
 -		ingress_empty = list_empty(&psock->ingress_msg);
 -	rcu_read_unlock();
 +	if (ctx->recv_pkt)
 +		return true;
  
++<<<<<<< HEAD
 +	return false;
++=======
+ 	return !ingress_empty || ctx->recv_pkt ||
+ 		!skb_queue_empty(&ctx->rx_list);
++>>>>>>> 13aecb17acab (net/tls: fix poll ignoring partially copied records)
  }
  
  static int tls_read_size(struct strparser *strp, struct sk_buff *skb)
* Unmerged path net/tls/tls_sw.c
