drm/amd/display: half bandwidth for YCbCr420 during validation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Martin Leung <martin.leung@amd.com>
commit 162f807858d15bde60cf373a3ad46e03200ad9d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/162f8078.failed

[Why]
used to be unable to run 4:2:0 if using a dongle because 4k60 bandwidth
exceeded dongle caps

[How]
half pixel clock during comparison to dongle cap. *Could get stuck on black
screen on monitor that don't support 420 but will be selecting 420 as
preferred mode*

	Signed-off-by: Martin Leung <martin.leung@amd.com>
	Reviewed-by: Wenjing Liu <Wenjing.Liu@amd.com>
	Acked-by: Aidan Wood <Aidan.Wood@amd.com>
	Acked-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 162f807858d15bde60cf373a3ad46e03200ad9d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/dc/core/dc_link.c
diff --cc drivers/gpu/drm/amd/display/dc/core/dc_link.c
index 2fa521812d23,93826f0a0aaa..000000000000
--- a/drivers/gpu/drm/amd/display/dc/core/dc_link.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc_link.c
@@@ -1906,13 -2064,38 +1906,34 @@@ static void disable_link(struct dc_lin
  			dp_disable_link_phy_mst(link, signal);
  	} else
  		link->link_enc->funcs->disable_output(link->link_enc, signal);
 -
 -	if (signal == SIGNAL_TYPE_DISPLAY_PORT_MST) {
 -		/* MST disable link only when no stream use the link */
 -		if (link->mst_stream_alloc_table.stream_count <= 0)
 -			link->link_status.link_active = false;
 -	} else {
 -		link->link_status.link_active = false;
 -	}
  }
  
+ static uint32_t get_timing_pixel_clock_100hz(const struct dc_crtc_timing *timing)
+ {
+ 
+ 	uint32_t pxl_clk = timing->pix_clk_100hz;
+ 
+ 	if (timing->pixel_encoding == PIXEL_ENCODING_YCBCR420)
+ 		pxl_clk /= 2;
+ 	else if (timing->pixel_encoding == PIXEL_ENCODING_YCBCR422)
+ 		pxl_clk = pxl_clk * 2 / 3;
+ 
+ 	if (timing->display_color_depth == COLOR_DEPTH_101010)
+ 		pxl_clk = pxl_clk * 10 / 8;
+ 	else if (timing->display_color_depth == COLOR_DEPTH_121212)
+ 		pxl_clk = pxl_clk * 12 / 8;
+ 
+ 	return pxl_clk;
+ }
+ 
  static bool dp_active_dongle_validate_timing(
  		const struct dc_crtc_timing *timing,
  		const struct dpcd_caps *dpcd_caps)
  {
++<<<<<<< HEAD
 +	unsigned int required_pix_clk = timing->pix_clk_khz;
++=======
++>>>>>>> 162f807858d1 (drm/amd/display: half bandwidth for YCbCr420 during validation)
  	const struct dc_dongle_caps *dongle_caps = &dpcd_caps->dongle_caps;
  
  	switch (dpcd_caps->dongle_type) {
@@@ -1949,13 -2132,6 +1970,16 @@@
  		return false;
  	}
  
++<<<<<<< HEAD
 +
 +	/* Check Color Depth and Pixel Clock */
 +	if (timing->pixel_encoding == PIXEL_ENCODING_YCBCR420)
 +		required_pix_clk /= 2;
 +	else if (timing->pixel_encoding == PIXEL_ENCODING_YCBCR422)
 +		required_pix_clk = required_pix_clk * 2 / 3;
 +
++=======
++>>>>>>> 162f807858d1 (drm/amd/display: half bandwidth for YCbCr420 during validation)
  	switch (timing->display_color_depth) {
  	case COLOR_DEPTH_666:
  	case COLOR_DEPTH_888:
@@@ -1964,14 -2140,11 +1988,19 @@@
  	case COLOR_DEPTH_101010:
  		if (dongle_caps->dp_hdmi_max_bpc < 10)
  			return false;
++<<<<<<< HEAD
 +		required_pix_clk = required_pix_clk * 10 / 8;
++=======
++>>>>>>> 162f807858d1 (drm/amd/display: half bandwidth for YCbCr420 during validation)
  		break;
  	case COLOR_DEPTH_121212:
  		if (dongle_caps->dp_hdmi_max_bpc < 12)
  			return false;
++<<<<<<< HEAD
 +		required_pix_clk = required_pix_clk * 12 / 8;
++=======
++>>>>>>> 162f807858d1 (drm/amd/display: half bandwidth for YCbCr420 during validation)
  		break;
- 
  	case COLOR_DEPTH_141414:
  	case COLOR_DEPTH_161616:
  	default:
@@@ -1979,7 -2152,7 +2008,11 @@@
  		return false;
  	}
  
++<<<<<<< HEAD
 +	if (required_pix_clk > dongle_caps->dp_hdmi_max_pixel_clk)
++=======
+ 	if (get_timing_pixel_clock_100hz(timing) > (dongle_caps->dp_hdmi_max_pixel_clk * 10))
++>>>>>>> 162f807858d1 (drm/amd/display: half bandwidth for YCbCr420 during validation)
  		return false;
  
  	return true;
@@@ -2000,7 -2173,7 +2033,11 @@@ enum dc_status dc_link_validate_mode_ti
  		return DC_OK;
  
  	/* Passive Dongle */
++<<<<<<< HEAD
 +	if (0 != max_pix_clk && timing->pix_clk_khz > max_pix_clk)
++=======
+ 	if (max_pix_clk != 0 && get_timing_pixel_clock_100hz(timing) > max_pix_clk)
++>>>>>>> 162f807858d1 (drm/amd/display: half bandwidth for YCbCr420 during validation)
  		return DC_EXCEED_DONGLE_CAP;
  
  	/* Active Dongle*/
* Unmerged path drivers/gpu/drm/amd/display/dc/core/dc_link.c
