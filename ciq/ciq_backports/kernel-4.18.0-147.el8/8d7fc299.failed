vt: Remove vc_panic_force_write

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 8d7fc2994f4d1f431e280c9e21a139c18dc435ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/8d7fc299.failed

It was only used by the panic support in fbcon, which is now gone.
Remove this now dead code too.

	Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Joe Perches <joe@perches.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Meng Xu <mengxu.gatech@gmail.com>
	Cc: Nicolas Pitre <nicolas.pitre@linaro.org>
	Cc: Thomas Meyer <thomas@m3y3r.de>
	Cc: Mike Frysinger <vapier@chromium.org>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Hans de Goede <hdegoede@redhat.com>
	Cc: Thierry Reding <treding@nvidia.com>
	Cc: David Lechner <david@lechnology.com>
	Cc: Philippe Ombredanne <pombredanne@nexb.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Kate Stewart <kstewart@linuxfoundation.org>
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20180822085405.10787-2-daniel.vetter@ffwll.ch
(cherry picked from commit 8d7fc2994f4d1f431e280c9e21a139c18dc435ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/console_struct.h
diff --cc include/linux/console_struct.h
index c0ec478ea5bf,ab137f97ecbd..000000000000
--- a/include/linux/console_struct.h
+++ b/include/linux/console_struct.h
@@@ -140,7 -140,7 +140,11 @@@ struct vc_data 
  	struct vc_data **vc_display_fg;		/* [!] Ptr to var holding fg console for this display */
  	struct uni_pagedir *vc_uni_pagedir;
  	struct uni_pagedir **vc_uni_pagedir_loc; /* [!] Location of uni_pagedir variable for this console */
++<<<<<<< HEAD
 +	bool vc_panic_force_write; /* when oops/panic this VC can accept forced output/blanking */
++=======
+ 	struct uni_screen *vc_uni_screen;	/* unicode screen content */
++>>>>>>> 8d7fc2994f4d (vt: Remove vc_panic_force_write)
  	/* additional information is in vt_kern.h */
  };
  
diff --git a/drivers/tty/vt/vt.c b/drivers/tty/vt/vt.c
index 15eb6c829d39..6d41b14e4fc7 100644
--- a/drivers/tty/vt/vt.c
+++ b/drivers/tty/vt/vt.c
@@ -700,9 +700,7 @@ void redraw_screen(struct vc_data *vc, int is_switch)
 			clear_buffer_attributes(vc);
 		}
 
-		/* Forcibly update if we're panicing */
-		if ((update && vc->vc_mode != KD_GRAPHICS) ||
-		    vt_force_oops_output(vc))
+		if (update && vc->vc_mode != KD_GRAPHICS)
 			do_update_region(vc, vc->vc_origin, vc->vc_screenbuf_size / 2);
 	}
 	set_cursor(vc);
@@ -742,7 +740,6 @@ static void visual_init(struct vc_data *vc, int num, int init)
 	vc->vc_hi_font_mask = 0;
 	vc->vc_complement_mask = 0;
 	vc->vc_can_do_color = 0;
-	vc->vc_panic_force_write = false;
 	vc->vc_cur_blink_ms = DEFAULT_CURSOR_BLINK_MS;
 	vc->vc_sw->con_init(vc, init);
 	if (!vc->vc_complement_mask)
@@ -2576,7 +2573,7 @@ static void vt_console_print(struct console *co, const char *b, unsigned count)
 		goto quit;
 	}
 
-	if (vc->vc_mode != KD_TEXT && !vt_force_oops_output(vc))
+	if (vc->vc_mode != KD_TEXT)
 		goto quit;
 
 	/* undraw cursor first */
@@ -3894,8 +3891,7 @@ void do_unblank_screen(int leaving_gfx)
 		return;
 	}
 	vc = vc_cons[fg_console].d;
-	/* Try to unblank in oops case too */
-	if (vc->vc_mode != KD_TEXT && !vt_force_oops_output(vc))
+	if (vc->vc_mode != KD_TEXT)
 		return; /* but leave console_blanked != 0 */
 
 	if (blankinterval) {
@@ -3904,7 +3900,7 @@ void do_unblank_screen(int leaving_gfx)
 	}
 
 	console_blanked = 0;
-	if (vc->vc_sw->con_blank(vc, 0, leaving_gfx) || vt_force_oops_output(vc))
+	if (vc->vc_sw->con_blank(vc, 0, leaving_gfx))
 		/* Low-level driver cannot restore -> do it ourselves */
 		update_screen(vc);
 	if (console_blank_hook)
diff --git a/drivers/video/fbdev/core/fbcon.c b/drivers/video/fbdev/core/fbcon.c
index 7a6471f8c674..270889b0ac69 100644
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@ -278,8 +278,7 @@ static inline int fbcon_is_inactive(struct vc_data *vc, struct fb_info *info)
 	struct fbcon_ops *ops = info->fbcon_par;
 
 	return (info->state != FBINFO_STATE_RUNNING ||
-		vc->vc_mode != KD_TEXT || ops->graphics) &&
-		!vt_force_oops_output(vc);
+		vc->vc_mode != KD_TEXT || ops->graphics);
 }
 
 static int get_color(struct vc_data *vc, struct fb_info *info,
* Unmerged path include/linux/console_struct.h
diff --git a/include/linux/vt_kern.h b/include/linux/vt_kern.h
index 3fd07912909c..8dc77e40bc03 100644
--- a/include/linux/vt_kern.h
+++ b/include/linux/vt_kern.h
@@ -135,13 +135,6 @@ extern int do_unbind_con_driver(const struct consw *csw, int first, int last,
 			     int deflt);
 int vty_init(const struct file_operations *console_fops);
 
-static inline bool vt_force_oops_output(struct vc_data *vc)
-{
-	if (oops_in_progress && vc->vc_panic_force_write  && panic_timeout >= 0)
-		return true;
-	return false;
-}
-
 extern char vt_dont_switch;
 extern int default_utf8;
 extern int global_cursor_default;
