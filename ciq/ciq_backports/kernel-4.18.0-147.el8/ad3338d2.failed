tools/bpf: bpftool: support prog array map and map of maps

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yonghong Song <yhs@fb.com>
commit ad3338d2508cd7752accdd39881deced1ec2b8a1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/ad3338d2.failed

Currently, prog array map and map of maps are not supported
in bpftool. This patch added the support.
Different from other map types, for prog array map and
map of maps, the key returned bpf_get_next_key() may not
point to a valid value. So for these two map types,
no error will be printed out when such a scenario happens.

The following is the plain and json dump if btf is not available:
  $ ./bpftool map dump id 10
    key: 08 00 00 00  value: 5c 01 00 00
    Found 1 element
  $ ./bpftool -jp map dump id 10
    [{
        "key": ["0x08","0x00","0x00","0x00"
        ],
        "value": ["0x5c","0x01","0x00","0x00"
        ]
    }]

If the BTF is available, the dump looks below:
  $ ./bpftool map dump id 2
    [{
            "key": 0,
            "value": 7
        }
    ]
  $ ./bpftool -jp map dump id 2
    [{
        "key": ["0x00","0x00","0x00","0x00"
        ],
        "value": ["0x07","0x00","0x00","0x00"
        ],
        "formatted": {
            "key": 0,
            "value": 7
        }
    }]

	Signed-off-by: Yonghong Song <yhs@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit ad3338d2508cd7752accdd39881deced1ec2b8a1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/bpf/bpftool/map.c
diff --cc tools/bpf/bpftool/map.c
index da55d5d618df,af8ad32fa6e9..000000000000
--- a/tools/bpf/bpftool/map.c
+++ b/tools/bpf/bpftool/map.c
@@@ -555,10 -713,22 +549,27 @@@ static int do_dump(int argc, char **arg
  
  		if (!bpf_map_lookup_elem(fd, key, value)) {
  			if (json_output)
 -				print_entry_json(&info, key, value, btf);
 +				print_entry_json(&info, key, value);
  			else
++<<<<<<< HEAD
 +				print_entry_plain(&info, key, value);
 +		} else {
++=======
+ 				if (btf) {
+ 					struct btf_dumper d = {
+ 						.btf = btf,
+ 						.jw = btf_wtr,
+ 						.is_plain_text = true,
+ 					};
+ 
+ 					do_dump_btf(&d, &info, key, value);
+ 				} else {
+ 					print_entry_plain(&info, key, value);
+ 				}
+ 			num_elems++;
+ 		} else if (!map_is_map_of_maps(info.type) &&
+ 			   !map_is_map_of_progs(info.type)) {
++>>>>>>> ad3338d2508c (tools/bpf: bpftool: support prog array map and map of maps)
  			if (json_output) {
  				jsonw_name(json_wtr, "key");
  				print_hex_data_json(key, info.key_size);
* Unmerged path tools/bpf/bpftool/map.c
