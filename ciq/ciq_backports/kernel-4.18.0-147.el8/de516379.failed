scsi: megaraid_sas: changes to function prototypes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
commit de516379e85f51c57ee54b113dbb442e5a862cd8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/de516379.failed

Instead of the register address, pass the instance pointer to clear_intr
and read_fw_status_reg functions.  This is done in preparation for adding
adapter type based checks in these functions in later patches of this
series.

	Signed-off-by: Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit de516379e85f51c57ee54b113dbb442e5a862cd8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_base.c
#	drivers/scsi/megaraid/megaraid_sas_fusion.c
diff --cc drivers/scsi/megaraid/megaraid_sas_base.c
index 93331a855860,d99390cf5963..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@@ -638,9 -599,9 +640,13 @@@ megasas_disable_intr_ppc(struct megasas
   * @regs:			MFI register set
   */
  static u32
- megasas_read_fw_status_reg_ppc(struct megasas_register_set __iomem * regs)
+ megasas_read_fw_status_reg_ppc(struct megasas_instance *instance)
  {
++<<<<<<< HEAD
 +	return readl(&(regs)->outbound_scratch_pad);
++=======
+ 	return readl(&instance->reg_set->outbound_scratch_pad_0);
++>>>>>>> de516379e85f (scsi: megaraid_sas: changes to function prototypes)
  }
  
  /**
@@@ -763,9 -726,9 +771,13 @@@ megasas_disable_intr_skinny(struct mega
   * @regs:			MFI register set
   */
  static u32
- megasas_read_fw_status_reg_skinny(struct megasas_register_set __iomem *regs)
+ megasas_read_fw_status_reg_skinny(struct megasas_instance *instance)
  {
++<<<<<<< HEAD
 +	return readl(&(regs)->outbound_scratch_pad);
++=======
+ 	return readl(&instance->reg_set->outbound_scratch_pad_0);
++>>>>>>> de516379e85f (scsi: megaraid_sas: changes to function prototypes)
  }
  
  /**
@@@ -908,9 -873,9 +922,13 @@@ megasas_disable_intr_gen2(struct megasa
   * @regs:                      MFI register set
   */
  static u32
- megasas_read_fw_status_reg_gen2(struct megasas_register_set __iomem *regs)
+ megasas_read_fw_status_reg_gen2(struct megasas_instance *instance)
  {
++<<<<<<< HEAD
 +	return readl(&(regs)->outbound_scratch_pad);
++=======
+ 	return readl(&instance->reg_set->outbound_scratch_pad_0);
++>>>>>>> de516379e85f (scsi: megaraid_sas: changes to function prototypes)
  }
  
  /**
@@@ -5345,9 -5307,8 +5361,8 @@@ static int megasas_init_fw(struct megas
  {
  	u32 max_sectors_1;
  	u32 max_sectors_2, tmp_sectors, msix_enable;
 -	u32 scratch_pad_1, scratch_pad_2, scratch_pad_3, status_reg;
 +	u32 scratch_pad_2, scratch_pad_3, scratch_pad_4, status_reg;
  	resource_size_t base_addr;
- 	struct megasas_register_set __iomem *reg_set;
  	struct megasas_ctrl_info *ctrl_info = NULL;
  	unsigned long bar_list;
  	int i, j, loop, fw_msix_count = 0;
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.c
index 02a01e2706e7,e4c3edc73099..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@@ -263,16 -264,16 +265,16 @@@ megasas_fusion_update_can_queue(struct 
  
  	reg_set = instance->reg_set;
  
 -	/* ventura FW does not fill outbound_scratch_pad_2 with queue depth */
 +	/* ventura FW does not fill outbound_scratch_pad_3 with queue depth */
  	if (instance->adapter_type < VENTURA_SERIES)
  		cur_max_fw_cmds =
 -		readl(&instance->reg_set->outbound_scratch_pad_2) & 0x00FFFF;
 +		megasas_readl(&instance->reg_set->outbound_scratch_pad_3) & 0x00FFFF;
  
  	if (dual_qdepth_disable || !cur_max_fw_cmds)
- 		cur_max_fw_cmds = instance->instancet->read_fw_status_reg(reg_set) & 0x00FFFF;
+ 		cur_max_fw_cmds = instance->instancet->read_fw_status_reg(instance) & 0x00FFFF;
  	else
  		ldio_threshold =
- 			(instance->instancet->read_fw_status_reg(reg_set) & 0x00FFFF) - MEGASAS_FUSION_IOCTL_CMDS;
+ 			(instance->instancet->read_fw_status_reg(instance) & 0x00FFFF) - MEGASAS_FUSION_IOCTL_CMDS;
  
  	dev_info(&instance->pdev->dev,
  		 "Current firmware supports maximum commands: %d\t LDIO threshold: %d\n",
@@@ -3740,9 -3729,9 +3742,13 @@@ megasas_release_fusion(struct megasas_i
   * @regs:			MFI register set
   */
  static u32
- megasas_read_fw_status_reg_fusion(struct megasas_register_set __iomem *regs)
+ megasas_read_fw_status_reg_fusion(struct megasas_instance *instance)
  {
++<<<<<<< HEAD
 +	return megasas_readl(&(regs)->outbound_scratch_pad);
++=======
+ 	return readl(&instance->reg_set->outbound_scratch_pad_0);
++>>>>>>> de516379e85f (scsi: megaraid_sas: changes to function prototypes)
  }
  
  /**
@@@ -4913,12 -4901,11 +4918,11 @@@ void  megasas_fusion_crash_dump(struct 
  			status_reg &= ~MFI_STATE_DMADONE;
  		}
  
 -		writel(status_reg, &instance->reg_set->outbound_scratch_pad_0);
 -		readl(&instance->reg_set->outbound_scratch_pad_0);
 +		writel(status_reg, &instance->reg_set->outbound_scratch_pad);
 +		readl(&instance->reg_set->outbound_scratch_pad);
  
  		msleep(MEGASAS_WAIT_FOR_NEXT_DMA_MSECS);
- 		status_reg = instance->instancet->read_fw_status_reg(
- 				instance->reg_set);
+ 		status_reg = instance->instancet->read_fw_status_reg(instance);
  	}
  
  	if (status_reg & MFI_STATE_CRASH_DUMP_DONE) {
diff --git a/drivers/scsi/megaraid/megaraid_sas.h b/drivers/scsi/megaraid/megaraid_sas.h
index 474b4554ff7d..bb7e77ce988c 100644
--- a/drivers/scsi/megaraid/megaraid_sas.h
+++ b/drivers/scsi/megaraid/megaraid_sas.h
@@ -2414,9 +2414,9 @@ struct megasas_instance_template {
 	void (*enable_intr)(struct megasas_instance *);
 	void (*disable_intr)(struct megasas_instance *);
 
-	int (*clear_intr)(struct megasas_register_set __iomem *);
+	int (*clear_intr)(struct megasas_instance *);
 
-	u32 (*read_fw_status_reg)(struct megasas_register_set __iomem *);
+	u32 (*read_fw_status_reg)(struct megasas_instance *);
 	int (*adp_reset)(struct megasas_instance *, \
 		struct megasas_register_set __iomem *);
 	int (*check_reset)(struct megasas_instance *, \
* Unmerged path drivers/scsi/megaraid/megaraid_sas_base.c
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.c
