s390/mm: force swiotlb for protected virtualization

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Halil Pasic <pasic@linux.ibm.com>
commit 64e1f0c531d1072cd97939bf0d8df42b26713543
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/64e1f0c5.failed

On s390, protected virtualization guests have to use bounced I/O
buffers.  That requires some plumbing.

Let us make sure, any device that uses DMA API with direct ops correctly
is spared from the problems, that a hypervisor attempting I/O to a
non-shared page would bring.

	Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
	Reviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
	Reviewed-by: Michael Mueller <mimu@linux.ibm.com>
	Tested-by: Michael Mueller <mimu@linux.ibm.com>
	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
(cherry picked from commit 64e1f0c531d1072cd97939bf0d8df42b26713543)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/mm/init.c
diff --cc arch/s390/mm/init.c
index 92d7a153e72a,f0bee6af3960..000000000000
--- a/arch/s390/mm/init.c
+++ b/arch/s390/mm/init.c
@@@ -29,7 -30,7 +30,11 @@@
  #include <linux/export.h>
  #include <linux/cma.h>
  #include <linux/gfp.h>
++<<<<<<< HEAD
 +#include <linux/memblock.h>
++=======
+ #include <linux/dma-mapping.h>
++>>>>>>> 64e1f0c531d1 (s390/mm: force swiotlb for protected virtualization)
  #include <asm/processor.h>
  #include <linux/uaccess.h>
  #include <asm/pgtable.h>
diff --git a/arch/s390/Kconfig b/arch/s390/Kconfig
index 04005b10ee5b..4899e55c8793 100644
--- a/arch/s390/Kconfig
+++ b/arch/s390/Kconfig
@@ -1,4 +1,7 @@
 # SPDX-License-Identifier: GPL-2.0
+config ARCH_HAS_MEM_ENCRYPT
+        def_bool y
+
 config MMU
 	def_bool y
 
@@ -181,6 +184,7 @@ config S390
 	select ARCH_HAS_SCALED_CPUTIME
 	select VIRT_TO_BUS
 	select HAVE_NMI
+	select SWIOTLB
 
 
 config SCHED_OMIT_FRAME_POINTER
diff --git a/arch/s390/include/asm/mem_encrypt.h b/arch/s390/include/asm/mem_encrypt.h
new file mode 100644
index 000000000000..3eb018508190
--- /dev/null
+++ b/arch/s390/include/asm/mem_encrypt.h
@@ -0,0 +1,17 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef S390_MEM_ENCRYPT_H__
+#define S390_MEM_ENCRYPT_H__
+
+#ifndef __ASSEMBLY__
+
+#define sme_me_mask	0ULL
+
+static inline bool sme_active(void) { return false; }
+extern bool sev_active(void);
+
+int set_memory_encrypted(unsigned long addr, int numpages);
+int set_memory_decrypted(unsigned long addr, int numpages);
+
+#endif	/* __ASSEMBLY__ */
+
+#endif	/* S390_MEM_ENCRYPT_H__ */
* Unmerged path arch/s390/mm/init.c
