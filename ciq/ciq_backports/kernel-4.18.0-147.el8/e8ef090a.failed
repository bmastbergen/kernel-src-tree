IB/mlx5: Destroy the DEVX object upon error flow

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yishai Hadas <yishaih@mellanox.com>
commit e8ef090a614292db01b5956a6f5467afbe6c5cf7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/e8ef090a.failed

Upon DEVX object creation the object must be destroyed upon a follows
error flow.

Fixes: 7efce3691d33 ("IB/mlx5: Add obj create and destroy functionality")
	Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
	Reviewed-by: Artemy Kovalyov <artemyko@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit e8ef090a614292db01b5956a6f5467afbe6c5cf7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/devx.c
diff --cc drivers/infiniband/hw/mlx5/devx.c
index 7b7903c26e2e,f2f11e652dcd..000000000000
--- a/drivers/infiniband/hw/mlx5/devx.c
+++ b/drivers/infiniband/hw/mlx5/devx.c
@@@ -381,7 -719,11 +381,15 @@@ static int UVERBS_HANDLER(MLX5_IB_METHO
  	int cmd_out_len =  uverbs_attr_get_len(attrs,
  					MLX5_IB_ATTR_DEVX_OBJ_CREATE_CMD_OUT);
  	void *cmd_out;
++<<<<<<< HEAD
 +	struct ib_uobject *uobj;
++=======
+ 	struct ib_uobject *uobj = uverbs_attr_get_uobject(
+ 		attrs, MLX5_IB_ATTR_DEVX_OBJ_CREATE_HANDLE);
+ 	struct mlx5_ib_ucontext *c = to_mucontext(uobj->context);
+ 	struct mlx5_ib_dev *dev = to_mdev(c->ibucontext.device);
+ 	u32 out[MLX5_ST_SZ_DW(general_obj_out_cmd_hdr)];
++>>>>>>> e8ef090a6142 (IB/mlx5: Destroy the DEVX object upon error flow)
  	struct devx_obj *obj;
  	int err;
  
@@@ -416,13 -755,12 +424,22 @@@
  
  	err = uverbs_copy_to(attrs, MLX5_IB_ATTR_DEVX_OBJ_CREATE_CMD_OUT, cmd_out, cmd_out_len);
  	if (err)
++<<<<<<< HEAD
 +		goto cmd_free;
++=======
+ 		goto obj_destroy;
++>>>>>>> e8ef090a6142 (IB/mlx5: Destroy the DEVX object upon error flow)
  
 +	kvfree(cmd_out);
  	return 0;
  
++<<<<<<< HEAD
 +cmd_free:
 +	kvfree(cmd_out);
++=======
+ obj_destroy:
+ 	mlx5_cmd_exec(obj->mdev, obj->dinbox, obj->dinlen, out, sizeof(out));
++>>>>>>> e8ef090a6142 (IB/mlx5: Destroy the DEVX object upon error flow)
  obj_free:
  	kfree(obj);
  	return err;
* Unmerged path drivers/infiniband/hw/mlx5/devx.c
