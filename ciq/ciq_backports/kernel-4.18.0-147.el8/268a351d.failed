net: sched: fix typo in walker_check_empty()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [net] sched: fix typo in walker_check_empty() (Ivan Vecera) [1688236 1687456]
Rebuild_FUZZ: 93.98%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 268a351d4a77b50a59094cb4592f851880fe8518
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/268a351d.failed

Function walker_check_empty() incorrectly verifies that tp pointer is not
NULL, instead of actual filter pointer. Fix conditional to check the right
pointer. Adjust filter pointer naming accordingly to other cls API
functions.

Fixes: 6676d5e416ee ("net: sched: set dedicated tcf_walker flag when tp is empty")
	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Reported-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 268a351d4a77b50a59094cb4592f851880fe8518)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_api.c
diff --cc net/sched/cls_api.c
index af2d98c3cb3b,478095d50f95..000000000000
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@@ -207,21 -235,26 +207,32 @@@ static void tcf_proto_put(struct tcf_pr
  			  struct netlink_ext_ack *extack)
  {
  	if (refcount_dec_and_test(&tp->refcnt))
 -		tcf_proto_destroy(tp, rtnl_held, extack);
 +		tcf_proto_destroy(tp, extack);
  }
  
++<<<<<<< HEAD
 +static int walker_noop(struct tcf_proto *tp, void *d, struct tcf_walker *arg)
 +{
 +	return -1;
++=======
+ static int walker_check_empty(struct tcf_proto *tp, void *fh,
+ 			      struct tcf_walker *arg)
+ {
+ 	if (fh) {
+ 		arg->nonempty = true;
+ 		return -1;
+ 	}
+ 	return 0;
++>>>>>>> 268a351d4a77 (net: sched: fix typo in walker_check_empty())
  }
  
 -static bool tcf_proto_is_empty(struct tcf_proto *tp, bool rtnl_held)
 +static bool tcf_proto_is_empty(struct tcf_proto *tp)
  {
 -	struct tcf_walker walker = { .fn = walker_check_empty, };
 +	struct tcf_walker walker = { .fn = walker_noop, };
  
  	if (tp->ops->walk) {
 -		tp->ops->walk(tp, &walker, rtnl_held);
 -		return !walker.nonempty;
 +		tp->ops->walk(tp, &walker);
 +		return !walker.stop;
  	}
  	return true;
  }
* Unmerged path net/sched/cls_api.c
