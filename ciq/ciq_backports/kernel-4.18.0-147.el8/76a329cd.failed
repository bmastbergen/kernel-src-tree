crypto: ccp - Forbid 2-key 3DES in FIPS mode

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit 76a329cdcb1f3f000b58c67829b00e17b6a9fa27
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/76a329cd.failed

This patch forbids the use of 2-key 3DES (K1 == K3) in FIPS mode.

	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 76a329cdcb1f3f000b58c67829b00e17b6a9fa27)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/ccp/ccp-crypto-des3.c
diff --cc drivers/crypto/ccp/ccp-crypto-des3.c
index ae87b741f9d5,91482ffcac59..000000000000
--- a/drivers/crypto/ccp/ccp-crypto-des3.c
+++ b/drivers/crypto/ccp/ccp-crypto-des3.c
@@@ -43,24 -43,11 +43,31 @@@ static int ccp_des3_setkey(struct crypt
  	struct ccp_crypto_ablkcipher_alg *alg =
  		ccp_crypto_ablkcipher_alg(crypto_ablkcipher_tfm(tfm));
  	u32 *flags = &tfm->base.crt_flags;
+ 	int err;
  
++<<<<<<< HEAD
 +
 +	/* From des_generic.c:
 +	 *
 +	 * RFC2451:
 +	 *   If the first two or last two independent 64-bit keys are
 +	 *   equal (k1 == k2 or k2 == k3), then the DES3 operation is simply the
 +	 *   same as DES.  Implementers MUST reject keys that exhibit this
 +	 *   property.
 +	 */
 +	const u32 *K = (const u32 *)key;
 +
 +	if (unlikely(!((K[0] ^ K[2]) | (K[1] ^ K[3])) ||
 +		     !((K[2] ^ K[4]) | (K[3] ^ K[5]))) &&
 +		     (*flags & CRYPTO_TFM_REQ_WEAK_KEY)) {
 +		*flags |= CRYPTO_TFM_RES_WEAK_KEY;
 +		return -EINVAL;
 +	}
++=======
+ 	err = __des3_verify_key(flags, key);
+ 	if (unlikely(err))
+ 		return err;
++>>>>>>> 76a329cdcb1f (crypto: ccp - Forbid 2-key 3DES in FIPS mode)
  
  	/* It's not clear that there is any support for a keysize of 112.
  	 * If needed, the caller should make K1 == K3
* Unmerged path drivers/crypto/ccp/ccp-crypto-des3.c
