net: ethernet: Fix up drivers masking pause support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [netdrv] ethernet: Fix up drivers masking pause support (Petr Oros) [1691720]
Rebuild_FUZZ: 94.85%
commit-author Andrew Lunn <andrew@lunn.ch>
commit 04b7d41d8046ded18fa32d9c7cb524ba28947188
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/04b7d41d.failed

PHY drivers don't indicate they support pause. They expect MAC drivers
to enable its support if the MAC has the needed hardware. Thus MAC
drivers should not mask Pause support, but enable it.

Change a few ANDs to ORs.

	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 04b7d41d8046ded18fa32d9c7cb524ba28947188)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/tg3.c
#	drivers/net/ethernet/mediatek/mtk_eth_soc.c
#	drivers/net/ethernet/smsc/smsc911x.c
#	drivers/net/ethernet/smsc/smsc9420.c
diff --cc drivers/net/ethernet/broadcom/tg3.c
index c03296c204c2,eab00239a47a..000000000000
--- a/drivers/net/ethernet/broadcom/tg3.c
+++ b/drivers/net/ethernet/broadcom/tg3.c
@@@ -2119,15 -2122,15 +2119,25 @@@ static int tg3_phy_init(struct tg3 *tp
  	case PHY_INTERFACE_MODE_GMII:
  	case PHY_INTERFACE_MODE_RGMII:
  		if (!(tp->phy_flags & TG3_PHYFLG_10_100_ONLY)) {
++<<<<<<< HEAD
 +			phydev->supported &= (PHY_GBIT_FEATURES |
 +					      SUPPORTED_Pause |
++=======
+ 			phy_set_max_speed(phydev, SPEED_1000);
+ 			phydev->supported |= (SUPPORTED_Pause |
++>>>>>>> 04b7d41d8046 (net: ethernet: Fix up drivers masking pause support)
  					      SUPPORTED_Asym_Pause);
  			break;
  		}
  		/* fallthru */
  	case PHY_INTERFACE_MODE_MII:
++<<<<<<< HEAD
 +		phydev->supported &= (PHY_BASIC_FEATURES |
 +				      SUPPORTED_Pause |
++=======
+ 		phy_set_max_speed(phydev, SPEED_100);
+ 		phydev->supported |= (SUPPORTED_Pause |
++>>>>>>> 04b7d41d8046 (net: ethernet: Fix up drivers masking pause support)
  				      SUPPORTED_Asym_Pause);
  		break;
  	default:
diff --cc drivers/net/ethernet/mediatek/mtk_eth_soc.c
index d8ebf0a05e0c,db231bda7c2a..000000000000
--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.c
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.c
@@@ -359,8 -359,8 +359,13 @@@ static int mtk_phy_connect(struct net_d
  		dev->phydev->supported |=
  		SUPPORTED_Pause | SUPPORTED_Asym_Pause;
  
++<<<<<<< HEAD
 +	dev->phydev->supported &= PHY_GBIT_FEATURES | SUPPORTED_Pause |
 +				   SUPPORTED_Asym_Pause;
++=======
+ 	phy_set_max_speed(dev->phydev, SPEED_1000);
+ 	dev->phydev->supported |= SUPPORTED_Pause | SUPPORTED_Asym_Pause;
++>>>>>>> 04b7d41d8046 (net: ethernet: Fix up drivers masking pause support)
  	dev->phydev->advertising = dev->phydev->supported |
  				    ADVERTISED_Autoneg;
  	phy_start_aneg(dev->phydev);
diff --cc drivers/net/ethernet/smsc/smsc911x.c
index f0afb88d7bc2,3e34bf53f055..000000000000
--- a/drivers/net/ethernet/smsc/smsc911x.c
+++ b/drivers/net/ethernet/smsc/smsc911x.c
@@@ -1048,9 -1048,10 +1048,13 @@@ static int smsc911x_mii_probe(struct ne
  
  	phy_attached_info(phydev);
  
 -	phy_set_max_speed(phydev, SPEED_100);
 -
  	/* mask with MAC supported features */
++<<<<<<< HEAD
 +	phydev->supported &= (PHY_BASIC_FEATURES | SUPPORTED_Pause |
 +			      SUPPORTED_Asym_Pause);
++=======
+ 	phydev->supported |= (SUPPORTED_Pause | SUPPORTED_Asym_Pause);
++>>>>>>> 04b7d41d8046 (net: ethernet: Fix up drivers masking pause support)
  	phydev->advertising = phydev->supported;
  
  	pdata->last_duplex = -1;
diff --cc drivers/net/ethernet/smsc/smsc9420.c
index 2fa3c1d03abc,326177384544..000000000000
--- a/drivers/net/ethernet/smsc/smsc9420.c
+++ b/drivers/net/ethernet/smsc/smsc9420.c
@@@ -1135,9 -1135,10 +1135,13 @@@ static int smsc9420_mii_probe(struct ne
  		return PTR_ERR(phydev);
  	}
  
 -	phy_set_max_speed(phydev, SPEED_100);
 -
  	/* mask with MAC supported features */
++<<<<<<< HEAD
 +	phydev->supported &= (PHY_BASIC_FEATURES | SUPPORTED_Pause |
 +			      SUPPORTED_Asym_Pause);
++=======
+ 	phydev->supported |= (SUPPORTED_Pause | SUPPORTED_Asym_Pause);
++>>>>>>> 04b7d41d8046 (net: ethernet: Fix up drivers masking pause support)
  	phydev->advertising = phydev->supported;
  
  	phy_attached_info(phydev);
* Unmerged path drivers/net/ethernet/broadcom/tg3.c
diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_mdio.c b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_mdio.c
index 436771cd9695..4679d8ecc3b2 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_mdio.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_mdio.c
@@ -16,8 +16,6 @@
 
 #define HCLGE_PHY_SUPPORTED_FEATURES	(SUPPORTED_Autoneg | \
 					 SUPPORTED_TP | \
-					 SUPPORTED_Pause | \
-					 SUPPORTED_Asym_Pause | \
 					 PHY_10BT_FEATURES | \
 					 PHY_100BT_FEATURES | \
 					 PHY_1000BT_FEATURES)
@@ -219,6 +217,8 @@ int hclge_mac_connect_phy(struct hclge_dev *hdev)
 	}
 
 	phydev->supported &= HCLGE_PHY_SUPPORTED_FEATURES;
+	phydev->supported |= SUPPORTED_Pause | SUPPORTED_Asym_Pause;
+
 	phydev->advertising = phydev->supported;
 
 	return 0;
* Unmerged path drivers/net/ethernet/mediatek/mtk_eth_soc.c
* Unmerged path drivers/net/ethernet/smsc/smsc911x.c
* Unmerged path drivers/net/ethernet/smsc/smsc9420.c
