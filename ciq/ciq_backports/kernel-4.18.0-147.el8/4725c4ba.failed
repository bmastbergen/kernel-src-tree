RDMA/mlx4: Initialize ib_device_ops struct

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Kamal Heib <kamalheib1@gmail.com>
commit 4725c4ba8d1c81c0b44a7a4f9b7f21bb0331e705
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/4725c4ba.failed

Initialize ib_device_ops with the supported operations using
ib_set_device_ops().

	Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 4725c4ba8d1c81c0b44a7a4f9b7f21bb0331e705)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx4/main.c
diff --cc drivers/infiniband/hw/mlx4/main.c
index df0764da8283,1f15ec3e2b83..000000000000
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@@ -2680,53 -2698,12 +2763,60 @@@ static void *mlx4_ib_add(struct mlx4_de
  		(1ull << IB_USER_VERBS_CMD_CREATE_XSRQ)		|
  		(1ull << IB_USER_VERBS_CMD_OPEN_QP);
  
++<<<<<<< HEAD
 +	ibdev->ib_dev.query_device	= mlx4_ib_query_device;
 +	ibdev->ib_dev.query_port	= mlx4_ib_query_port;
 +	ibdev->ib_dev.get_link_layer	= mlx4_ib_port_link_layer;
 +	ibdev->ib_dev.query_gid		= mlx4_ib_query_gid;
 +	ibdev->ib_dev.query_pkey	= mlx4_ib_query_pkey;
 +	ibdev->ib_dev.modify_device	= mlx4_ib_modify_device;
 +	ibdev->ib_dev.modify_port	= mlx4_ib_modify_port;
 +	ibdev->ib_dev.alloc_ucontext	= mlx4_ib_alloc_ucontext;
 +	ibdev->ib_dev.dealloc_ucontext	= mlx4_ib_dealloc_ucontext;
 +	ibdev->ib_dev.mmap		= mlx4_ib_mmap;
 +	ibdev->ib_dev.alloc_pd		= mlx4_ib_alloc_pd;
 +	ibdev->ib_dev.dealloc_pd	= mlx4_ib_dealloc_pd;
 +	ibdev->ib_dev.create_ah		= mlx4_ib_create_ah;
 +	ibdev->ib_dev.query_ah		= mlx4_ib_query_ah;
 +	ibdev->ib_dev.destroy_ah	= mlx4_ib_destroy_ah;
 +	ibdev->ib_dev.create_srq	= mlx4_ib_create_srq;
 +	ibdev->ib_dev.modify_srq	= mlx4_ib_modify_srq;
 +	ibdev->ib_dev.query_srq		= mlx4_ib_query_srq;
 +	ibdev->ib_dev.destroy_srq	= mlx4_ib_destroy_srq;
 +	ibdev->ib_dev.post_srq_recv	= mlx4_ib_post_srq_recv;
 +	ibdev->ib_dev.create_qp		= mlx4_ib_create_qp;
 +	ibdev->ib_dev.modify_qp		= mlx4_ib_modify_qp;
 +	ibdev->ib_dev.query_qp		= mlx4_ib_query_qp;
 +	ibdev->ib_dev.destroy_qp	= mlx4_ib_destroy_qp;
 +	ibdev->ib_dev.post_send		= mlx4_ib_post_send;
 +	ibdev->ib_dev.post_recv		= mlx4_ib_post_recv;
 +	ibdev->ib_dev.create_cq		= mlx4_ib_create_cq;
 +	ibdev->ib_dev.modify_cq		= mlx4_ib_modify_cq;
 +	ibdev->ib_dev.resize_cq		= mlx4_ib_resize_cq;
 +	ibdev->ib_dev.destroy_cq	= mlx4_ib_destroy_cq;
 +	ibdev->ib_dev.poll_cq		= mlx4_ib_poll_cq;
 +	ibdev->ib_dev.req_notify_cq	= mlx4_ib_arm_cq;
 +	ibdev->ib_dev.get_dma_mr	= mlx4_ib_get_dma_mr;
 +	ibdev->ib_dev.reg_user_mr	= mlx4_ib_reg_user_mr;
 +	ibdev->ib_dev.rereg_user_mr	= mlx4_ib_rereg_user_mr;
 +	ibdev->ib_dev.dereg_mr		= mlx4_ib_dereg_mr;
 +	ibdev->ib_dev.alloc_mr		= mlx4_ib_alloc_mr;
 +	ibdev->ib_dev.map_mr_sg		= mlx4_ib_map_mr_sg;
 +	ibdev->ib_dev.attach_mcast	= mlx4_ib_mcg_attach;
 +	ibdev->ib_dev.detach_mcast	= mlx4_ib_mcg_detach;
 +	ibdev->ib_dev.process_mad	= mlx4_ib_process_mad;
 +	ibdev->ib_dev.get_port_immutable = mlx4_port_immutable;
 +	ibdev->ib_dev.get_dev_fw_str    = get_fw_ver_str;
 +	ibdev->ib_dev.disassociate_ucontext = mlx4_ib_disassociate_ucontext;
 +
++=======
+ 	ib_set_device_ops(&ibdev->ib_dev, &mlx4_ib_dev_ops);
++>>>>>>> 4725c4ba8d1c (RDMA/mlx4: Initialize ib_device_ops struct)
  	ibdev->ib_dev.uverbs_ex_cmd_mask |=
- 		(1ull << IB_USER_VERBS_EX_CMD_MODIFY_CQ);
+ 		(1ull << IB_USER_VERBS_EX_CMD_MODIFY_CQ) |
+ 		(1ull << IB_USER_VERBS_EX_CMD_QUERY_DEVICE) |
+ 		(1ull << IB_USER_VERBS_EX_CMD_CREATE_CQ) |
+ 		(1ull << IB_USER_VERBS_EX_CMD_CREATE_QP);
  
  	if ((dev->caps.flags2 & MLX4_DEV_CAP_FLAG2_RSS) &&
  	    ((mlx4_ib_port_link_layer(&ibdev->ib_dev, 1) ==
* Unmerged path drivers/infiniband/hw/mlx4/main.c
