fanotify: factor out helpers to add/remove mark

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Amir Goldstein <amir73il@gmail.com>
commit eaa2c6b0c9181c3c70f773361bd81d9efd5804d9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/eaa2c6b0.failed

Factor out helpers fanotify_add_mark() and fanotify_remove_mark()
to reduce duplicated code.

	Signed-off-by: Amir Goldstein <amir73il@gmail.com>
	Signed-off-by: Jan Kara <jack@suse.cz>
(cherry picked from commit eaa2c6b0c9181c3c70f773361bd81d9efd5804d9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/notify/fanotify/fanotify_user.c
diff --cc fs/notify/fanotify/fanotify_user.c
index 81212b251189,d736a833fe39..000000000000
--- a/fs/notify/fanotify/fanotify_user.c
+++ b/fs/notify/fanotify/fanotify_user.c
@@@ -533,37 -533,7 +533,41 @@@ static int fanotify_remove_mark(struct 
  	int destroy_mark;
  
  	mutex_lock(&group->mark_mutex);
++<<<<<<< HEAD
 +	fsn_mark = fsnotify_find_mark(&real_mount(mnt)->mnt_fsnotify_marks,
 +				      group);
 +	if (!fsn_mark) {
 +		mutex_unlock(&group->mark_mutex);
 +		return -ENOENT;
 +	}
 +
 +	removed = fanotify_mark_remove_from_mask(fsn_mark, mask, flags,
 +						 &destroy_mark);
 +	if (removed & real_mount(mnt)->mnt_fsnotify_mask)
 +		fsnotify_recalc_mask(real_mount(mnt)->mnt_fsnotify_marks);
 +	if (destroy_mark)
 +		fsnotify_detach_mark(fsn_mark);
 +	mutex_unlock(&group->mark_mutex);
 +	if (destroy_mark)
 +		fsnotify_free_mark(fsn_mark);
 +
 +	fsnotify_put_mark(fsn_mark);
 +	return 0;
 +}
 +
 +static int fanotify_remove_inode_mark(struct fsnotify_group *group,
 +				      struct inode *inode, __u32 mask,
 +				      unsigned int flags)
 +{
 +	struct fsnotify_mark *fsn_mark = NULL;
 +	__u32 removed;
 +	int destroy_mark;
 +
 +	mutex_lock(&group->mark_mutex);
 +	fsn_mark = fsnotify_find_mark(&inode->i_fsnotify_marks, group);
++=======
+ 	fsn_mark = fsnotify_find_mark(connp, group);
++>>>>>>> eaa2c6b0c918 (fanotify: factor out helpers to add/remove mark)
  	if (!fsn_mark) {
  		mutex_unlock(&group->mark_mutex);
  		return -ENOENT;
@@@ -686,23 -673,8 +707,28 @@@ static int fanotify_add_inode_mark(stru
  	    (atomic_read(&inode->i_writecount) > 0))
  		return 0;
  
++<<<<<<< HEAD
 +	mutex_lock(&group->mark_mutex);
 +	fsn_mark = fsnotify_find_mark(connp, group);
 +	if (!fsn_mark) {
 +		fsn_mark = fanotify_add_new_mark(group, connp,
 +						 FSNOTIFY_OBJ_TYPE_INODE);
 +		if (IS_ERR(fsn_mark)) {
 +			mutex_unlock(&group->mark_mutex);
 +			return PTR_ERR(fsn_mark);
 +		}
 +	}
 +	added = fanotify_mark_add_to_mask(fsn_mark, mask, flags);
 +	if (added & ~inode->i_fsnotify_mask)
 +		fsnotify_recalc_mask(inode->i_fsnotify_marks);
 +	mutex_unlock(&group->mark_mutex);
 +
 +	fsnotify_put_mark(fsn_mark);
 +	return 0;
++=======
+ 	return fanotify_add_mark(group, &inode->i_fsnotify_marks,
+ 				 FSNOTIFY_OBJ_TYPE_INODE, mask, flags);
++>>>>>>> eaa2c6b0c918 (fanotify: factor out helpers to add/remove mark)
  }
  
  /* fanotify syscalls */
* Unmerged path fs/notify/fanotify/fanotify_user.c
