RDMA/mlx5: Unfold create RMP function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit a1eb180238a71797d84bd91acfb1de1d632623c5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/a1eb1802.failed

There is no need to perform create_rmp in two separate function, while
one of them uses stack as a placeholder for data while other allocates
it dynamically. Combine those two functions to one instead of two.

	Reviewed-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit a1eb180238a71797d84bd91acfb1de1d632623c5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/srq.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/srq.c
index 28c1c0ebd02e,955df638b416..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/srq.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/srq.c
@@@ -327,10 -298,29 +327,33 @@@ out
  	return err;
  }
  
++<<<<<<< HEAD:drivers/net/ethernet/mellanox/mlx5/core/srq.c
 +static int create_rmp_cmd(struct mlx5_core_dev *dev, struct mlx5_core_srq *srq,
++=======
+ static int mlx5_core_modify_rmp(struct mlx5_ib_dev *dev, u32 *in, int inlen)
+ {
+ 	u32 out[MLX5_ST_SZ_DW(modify_rmp_out)] = {0};
+ 
+ 	MLX5_SET(modify_rmp_in, in, opcode, MLX5_CMD_OP_MODIFY_RMP);
+ 	return mlx5_cmd_exec(dev->mdev, in, inlen, out, sizeof(out));
+ }
+ 
+ static int mlx5_core_query_rmp(struct mlx5_ib_dev *dev, u32 rmpn, u32 *out)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(query_rmp_in)] = {0};
+ 	int outlen = MLX5_ST_SZ_BYTES(query_rmp_out);
+ 
+ 	MLX5_SET(query_rmp_in, in, opcode, MLX5_CMD_OP_QUERY_RMP);
+ 	MLX5_SET(query_rmp_in, in, rmpn,   rmpn);
+ 	return mlx5_cmd_exec(dev->mdev, in, sizeof(in), out, outlen);
+ }
+ 
+ static int create_rmp_cmd(struct mlx5_ib_dev *dev, struct mlx5_core_srq *srq,
++>>>>>>> a1eb180238a7 (RDMA/mlx5: Unfold create RMP function):drivers/infiniband/hw/mlx5/srq_cmd.c
  			  struct mlx5_srq_attr *in)
  {
- 	void *create_in;
+ 	void *create_out = NULL;
+ 	void *create_in = NULL;
  	void *rmpc;
  	void *wq;
  	int pas_size;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/srq.c
