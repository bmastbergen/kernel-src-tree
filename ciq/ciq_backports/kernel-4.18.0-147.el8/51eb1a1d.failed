drm/i915/icl: Fix clockgating issue when using scalers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Radhakrishna Sripada <radhakrishna.sripada@intel.com>
commit 51eb1a1de7a92a812a3834986260834d5f52e566
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/51eb1a1d.failed

Fixes the clock-gating issue when pipe scaling is enabled.
(Lineage #2006604312)

V2: Fix typo in headline(Chris)
    Handle the non double buffered nature of the register(Ville)
V3: Fix checkpatch warning. BAT failure for V2 on gen3 looks unrelated.
V4: Split the icl and skl wa's(Ville)
V5: Split the checks for icl and skl(Ville)
V6: Correct the flipped checks in intel_pre_plane_update(Ville)
V7: Use enum for pipe and extend the WA for plane scalers(Ville)
V8: Eliminate the redundant use of pch_pfit(Ville)

	Cc: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Ville Syrjala <ville.syrjala@linux.intel.com>
	Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Cc: Clint Taylor <clinton.a.taylor@intel.com>
	Cc: Aditya Swarup <aditya.swarup@intel.com>
	Signed-off-by: Radhakrishna Sripada <radhakrishna.sripada@intel.com>
	Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20190417185901.14833-1-radhakrishna.sripada@intel.com
(cherry picked from commit 51eb1a1de7a92a812a3834986260834d5f52e566)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_display.c
diff --cc drivers/gpu/drm/i915/intel_display.c
index 98867581a27e,62d663e506ab..000000000000
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@@ -504,26 -476,13 +504,27 @@@ static const struct intel_limit intel_l
  	.p2 = { .p2_slow = 1, .p2_fast = 20 },
  };
  
+ /* WA Display #0827: Gen9:all */
  static void
 -skl_wa_827(struct drm_i915_private *dev_priv, int pipe, bool enable)
 +skl_wa_528(struct drm_i915_private *dev_priv, int pipe, bool enable)
 +{
 +	if (IS_SKYLAKE(dev_priv) || IS_BROXTON(dev_priv))
 +		return;
 +
 +	if (enable)
 +		I915_WRITE(CHICKEN_PIPESL_1(pipe), HSW_FBCQ_DIS);
 +	else
 +		I915_WRITE(CHICKEN_PIPESL_1(pipe), 0);
 +}
 +
 +static void
 +skl_wa_clkgate(struct drm_i915_private *dev_priv, int pipe, bool enable)
  {
 +	if (IS_SKYLAKE(dev_priv) || IS_BROXTON(dev_priv))
 +		return;
 +
  	if (enable)
  		I915_WRITE(CLKGATE_DIS_PSL(pipe),
 -			   I915_READ(CLKGATE_DIS_PSL(pipe)) |
  			   DUPS1_GATING_DIS | DUPS2_GATING_DIS);
  	else
  		I915_WRITE(CLKGATE_DIS_PSL(pipe),
@@@ -5239,12 -5584,13 +5263,20 @@@ static void intel_post_plane_update(str
  			intel_post_enable_primary(&crtc->base, pipe_config);
  	}
  
- 	/* Display WA 827 */
  	if (needs_nv12_wa(dev_priv, old_crtc_state) &&
++<<<<<<< HEAD
 +	    !needs_nv12_wa(dev_priv, pipe_config)) {
 +		skl_wa_clkgate(dev_priv, crtc->pipe, false);
 +		skl_wa_528(dev_priv, crtc->pipe, false);
 +	}
++=======
+ 	    !needs_nv12_wa(dev_priv, pipe_config))
+ 		skl_wa_827(dev_priv, crtc->pipe, false);
+ 
+ 	if (needs_scalerclk_wa(dev_priv, old_crtc_state) &&
+ 	    !needs_scalerclk_wa(dev_priv, pipe_config))
+ 		icl_wa_scalerclkgating(dev_priv, crtc->pipe, false);
++>>>>>>> 51eb1a1de7a9 (drm/i915/icl: Fix clockgating issue when using scalers)
  }
  
  static void intel_pre_plane_update(struct intel_crtc_state *old_crtc_state,
@@@ -5281,10 -5627,13 +5313,20 @@@
  
  	/* Display WA 827 */
  	if (!needs_nv12_wa(dev_priv, old_crtc_state) &&
++<<<<<<< HEAD
 +	    needs_nv12_wa(dev_priv, pipe_config)) {
 +		skl_wa_clkgate(dev_priv, crtc->pipe, true);
 +		skl_wa_528(dev_priv, crtc->pipe, true);
 +	}
++=======
+ 	    needs_nv12_wa(dev_priv, pipe_config))
+ 		skl_wa_827(dev_priv, crtc->pipe, true);
+ 
+ 	/* Wa_2006604312:icl */
+ 	if (!needs_scalerclk_wa(dev_priv, old_crtc_state) &&
+ 	    needs_scalerclk_wa(dev_priv, pipe_config))
+ 		icl_wa_scalerclkgating(dev_priv, crtc->pipe, true);
++>>>>>>> 51eb1a1de7a9 (drm/i915/icl: Fix clockgating issue when using scalers)
  
  	/*
  	 * Vblank time updates from the shadow to live plane control register
* Unmerged path drivers/gpu/drm/i915/intel_display.c
