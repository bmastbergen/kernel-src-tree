drm: writeback: Fix leak of writeback job

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
commit e482ae9b5fdc01a343f22f52930e85a6cfdf85eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/e482ae9b.failed

Writeback jobs are allocated when the WRITEBACK_FB_ID is set, and
deleted when the jobs complete. This results in both a memory leak of
the job and a leak of the framebuffer if the atomic commit returns
before the job is queued for processing, for instance if the atomic
check fails or if the commit runs in test-only mode.

Fix this by implementing the drm_writeback_cleanup_job() function and
calling it from __drm_atomic_helper_connector_destroy_state(). As
writeback jobs are removed from the state when they're queued for
processing, any job left in the state when the state gets destroyed
needs to be cleaned up.

The existing declaration of the drm_writeback_cleanup_job() function
without an implementation hints that this problem was considered, but
never addressed.

	Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
	Reviewed-by: Brian Starkey <brian.starkey@arm.com>
	Acked-by: Liviu Dudau <liviu.dudau@arm.com>
(cherry picked from commit e482ae9b5fdc01a343f22f52930e85a6cfdf85eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/drm_atomic_state_helper.c
#	drivers/gpu/drm/drm_writeback.c
* Unmerged path drivers/gpu/drm/drm_atomic_state_helper.c
* Unmerged path drivers/gpu/drm/drm_writeback.c
* Unmerged path drivers/gpu/drm/drm_atomic_state_helper.c
* Unmerged path drivers/gpu/drm/drm_writeback.c
