RDMA/uverbs: Fill in the response for IB_USER_VERBS_EX_CMD_MODIFY_QP

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Jason Gunthorpe <jgg@ziepe.ca>
commit 40efca7a46a04223e6792fbe23ba337f54cff794
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/40efca7a.failed

A response struct was defined, and userspace is providing it (but not
checking it). Fill it in and write it out.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 40efca7a46a04223e6792fbe23ba337f54cff794)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_cmd.c
diff --cc drivers/infiniband/core/uverbs_cmd.c
index 300532a4cde8,c605412708b8..000000000000
--- a/drivers/infiniband/core/uverbs_cmd.c
+++ b/drivers/infiniband/core/uverbs_cmd.c
@@@ -2128,11 -1946,19 +2128,24 @@@ ssize_t ib_uverbs_modify_qp(struct ib_u
  	    ~((IB_USER_LEGACY_LAST_QP_ATTR_MASK << 1) - 1))
  		return -EOPNOTSUPP;
  
 -	return modify_qp(attrs, &cmd);
 -}
 +	ib_uverbs_init_udata(&udata, buf + sizeof(cmd.base), NULL,
 +		   in_len - sizeof(cmd.base) - sizeof(struct ib_uverbs_cmd_hdr),
 +		   out_len);
  
++<<<<<<< HEAD
 +	ret = modify_qp(file, &cmd, &udata);
++=======
+ static int ib_uverbs_ex_modify_qp(struct uverbs_attr_bundle *attrs,
+ 				  struct ib_udata *ucore)
+ {
+ 	struct ib_uverbs_ex_modify_qp cmd;
+ 	struct ib_uverbs_ex_modify_qp_resp resp = {
+ 		.response_length = uverbs_response_length(attrs, sizeof(resp))
+ 	};
+ 	int ret;
+ 
+ 	ret = uverbs_request(attrs, &cmd, sizeof(cmd));
++>>>>>>> 40efca7a46a0 (RDMA/uverbs: Fill in the response for IB_USER_VERBS_EX_CMD_MODIFY_QP)
  	if (ret)
  		return ret;
  
@@@ -2164,21 -1972,15 +2177,29 @@@ int ib_uverbs_ex_modify_qp(struct ib_uv
  	    ~((IB_USER_LAST_QP_ATTR_MASK << 1) - 1))
  		return -EOPNOTSUPP;
  
++<<<<<<< HEAD
 +	if (ucore->inlen > sizeof(cmd)) {
 +		if (!ib_is_udata_cleared(ucore, sizeof(cmd),
 +					 ucore->inlen - sizeof(cmd)))
 +			return -EOPNOTSUPP;
 +	}
 +
 +	ret = modify_qp(file, &cmd, uhw);
 +
 +	return ret;
++=======
+ 	ret = modify_qp(attrs, &cmd);
+ 	if (ret)
+ 		return ret;
+ 
+ 	return uverbs_response(attrs, &resp, sizeof(resp));
++>>>>>>> 40efca7a46a0 (RDMA/uverbs: Fill in the response for IB_USER_VERBS_EX_CMD_MODIFY_QP)
  }
  
 -static int ib_uverbs_destroy_qp(struct uverbs_attr_bundle *attrs,
 -				const char __user *buf, int in_len, int out_len)
 +ssize_t ib_uverbs_destroy_qp(struct ib_uverbs_file *file,
 +			     struct ib_device *ib_dev,
 +			     const char __user *buf, int in_len,
 +			     int out_len)
  {
  	struct ib_uverbs_destroy_qp      cmd;
  	struct ib_uverbs_destroy_qp_resp resp;
* Unmerged path drivers/infiniband/core/uverbs_cmd.c
