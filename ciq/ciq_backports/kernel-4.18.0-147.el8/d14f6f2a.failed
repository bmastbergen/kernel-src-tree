net/mlx5e: Avoid overriding the user provided priority for offloaded tc rules

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit d14f6f2a84326dd2751962167b2293fc91751ff8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/d14f6f2a.failed

Just a leftover which was wrongly left there, remove it while spawning
a message to suggest firmware upgrade.

Fixes: bf07aa730a04 ('net/mlx5e: Support offloading tc priorities and chains for eswitch flows')
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Reviewed-by: Paul Blakey <paulb@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit d14f6f2a84326dd2751962167b2293fc91751ff8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index bd15011e5202,e6170ddf2cc4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -830,10 -905,24 +830,29 @@@ mlx5e_tc_add_fdb_flow(struct mlx5e_pri
  	struct mlx5_fc *counter = NULL;
  	struct mlx5e_rep_priv *rpriv;
  	struct mlx5e_priv *out_priv;
 -	int err = 0, encap_err = 0;
 +	int err;
  
++<<<<<<< HEAD
 +	/* keep the old behaviour, use same prio for all offloaded rules */
 +	attr->prio = 1;
++=======
+ 	if (!mlx5_eswitch_prios_supported(esw) && attr->prio != 1) {
+ 		NL_SET_ERR_MSG(extack, "E-switch priorities unsupported, upgrade FW");
+ 		return -EOPNOTSUPP;
+ 	}
+ 
+ 	if (attr->chain > max_chain) {
+ 		NL_SET_ERR_MSG(extack, "Requested chain is out of supported range");
+ 		err = -EOPNOTSUPP;
+ 		goto err_max_prio_chain;
+ 	}
+ 
+ 	if (attr->prio > max_prio) {
+ 		NL_SET_ERR_MSG(extack, "Requested priority is out of supported range");
+ 		err = -EOPNOTSUPP;
+ 		goto err_max_prio_chain;
+ 	}
++>>>>>>> d14f6f2a8432 (net/mlx5e: Avoid overriding the user provided priority for offloaded tc rules)
  
  	if (attr->action & MLX5_FLOW_CONTEXT_ACTION_PACKET_REFORMAT) {
  		out_dev = __dev_get_by_index(dev_net(priv->netdev),
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
