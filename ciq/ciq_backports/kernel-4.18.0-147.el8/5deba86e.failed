IB/mlx5: Set uid as part of RQT commands

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yishai Hadas <yishaih@mellanox.com>
commit 5deba86ee2cddaebaa1d37ad71efcda26b626592
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/5deba86e.failed

Set uid as part of RQT commands so that the firmware can manage the
RQT object in a secured way.

That will enable using an RQT that was created by verbs application
to be used by the DEVX flow in case the uid is equal.

	Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 5deba86ee2cddaebaa1d37ad71efcda26b626592)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/cmd.c
#	drivers/infiniband/hw/mlx5/cmd.h
diff --cc drivers/infiniband/hw/mlx5/cmd.c
index 91cfc2856bc4,6862b03dbdec..000000000000
--- a/drivers/infiniband/hw/mlx5/cmd.c
+++ b/drivers/infiniband/hw/mlx5/cmd.c
@@@ -198,6 -198,39 +198,42 @@@ int mlx5_cmd_query_ext_ppcnt_counters(s
  				     0, 0);
  }
  
++<<<<<<< HEAD
++=======
+ void mlx5_cmd_destroy_tir(struct mlx5_core_dev *dev, u32 tirn, u16 uid)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(destroy_tir_in)]   = {};
+ 	u32 out[MLX5_ST_SZ_DW(destroy_tir_out)] = {};
+ 
+ 	MLX5_SET(destroy_tir_in, in, opcode, MLX5_CMD_OP_DESTROY_TIR);
+ 	MLX5_SET(destroy_tir_in, in, tirn, tirn);
+ 	MLX5_SET(destroy_tir_in, in, uid, uid);
+ 	mlx5_cmd_exec(dev, in, sizeof(in), out, sizeof(out));
+ }
+ 
+ void mlx5_cmd_destroy_tis(struct mlx5_core_dev *dev, u32 tisn, u16 uid)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(destroy_tis_in)]   = {0};
+ 	u32 out[MLX5_ST_SZ_DW(destroy_tis_out)] = {0};
+ 
+ 	MLX5_SET(destroy_tis_in, in, opcode, MLX5_CMD_OP_DESTROY_TIS);
+ 	MLX5_SET(destroy_tis_in, in, tisn, tisn);
+ 	MLX5_SET(destroy_tis_in, in, uid, uid);
+ 	mlx5_cmd_exec(dev, in, sizeof(in), out, sizeof(out));
+ }
+ 
+ void mlx5_cmd_destroy_rqt(struct mlx5_core_dev *dev, u32 rqtn, u16 uid)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(destroy_rqt_in)]   = {};
+ 	u32 out[MLX5_ST_SZ_DW(destroy_rqt_out)] = {};
+ 
+ 	MLX5_SET(destroy_rqt_in, in, opcode, MLX5_CMD_OP_DESTROY_RQT);
+ 	MLX5_SET(destroy_rqt_in, in, rqtn, rqtn);
+ 	MLX5_SET(destroy_rqt_in, in, uid, uid);
+ 	mlx5_cmd_exec(dev, in, sizeof(in), out, sizeof(out));
+ }
+ 
++>>>>>>> 5deba86ee2cd (IB/mlx5: Set uid as part of RQT commands)
  void mlx5_cmd_dealloc_pd(struct mlx5_core_dev *dev, u32 pdn, u16 uid)
  {
  	u32 out[MLX5_ST_SZ_DW(dealloc_pd_out)] = {};
diff --cc drivers/infiniband/hw/mlx5/cmd.h
index 24175b3d5965,742452e4be7e..000000000000
--- a/drivers/infiniband/hw/mlx5/cmd.h
+++ b/drivers/infiniband/hw/mlx5/cmd.h
@@@ -48,6 -48,9 +48,12 @@@ int mlx5_cmd_alloc_memic(struct mlx5_me
  			 u64 length, u32 alignment);
  int mlx5_cmd_dealloc_memic(struct mlx5_memic *memic, u64 addr, u64 length);
  void mlx5_cmd_dealloc_pd(struct mlx5_core_dev *dev, u32 pdn, u16 uid);
++<<<<<<< HEAD
++=======
+ void mlx5_cmd_destroy_tir(struct mlx5_core_dev *dev, u32 tirn, u16 uid);
+ void mlx5_cmd_destroy_tis(struct mlx5_core_dev *dev, u32 tisn, u16 uid);
+ void mlx5_cmd_destroy_rqt(struct mlx5_core_dev *dev, u32 rqtn, u16 uid);
++>>>>>>> 5deba86ee2cd (IB/mlx5: Set uid as part of RQT commands)
  int mlx5_cmd_attach_mcg(struct mlx5_core_dev *dev, union ib_gid *mgid,
  			u32 qpn, u16 uid);
  int mlx5_cmd_detach_mcg(struct mlx5_core_dev *dev, union ib_gid *mgid,
* Unmerged path drivers/infiniband/hw/mlx5/cmd.c
* Unmerged path drivers/infiniband/hw/mlx5/cmd.h
diff --git a/drivers/infiniband/hw/mlx5/mlx5_ib.h b/drivers/infiniband/hw/mlx5/mlx5_ib.h
index 1a47f6547ebf..3ef74ed8eadc 100644
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@ -304,6 +304,7 @@ enum {
 struct mlx5_ib_rwq_ind_table {
 	struct ib_rwq_ind_table ib_rwq_ind_tbl;
 	u32			rqtn;
+	u16			uid;
 };
 
 struct mlx5_ib_ubuffer {
diff --git a/drivers/infiniband/hw/mlx5/qp.c b/drivers/infiniband/hw/mlx5/qp.c
index 4dea26d4e488..54a08c4fd783 100644
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@ -5629,6 +5629,9 @@ struct ib_rwq_ind_table *mlx5_ib_create_rwq_ind_table(struct ib_device *device,
 	for (i = 0; i < sz; i++)
 		MLX5_SET(rqtc, rqtc, rq_num[i], init_attr->ind_tbl[i]->wq_num);
 
+	rwq_ind_tbl->uid = to_mpd(init_attr->ind_tbl[0]->pd)->uid;
+	MLX5_SET(create_rqt_in, in, uid, rwq_ind_tbl->uid);
+
 	err = mlx5_core_create_rqt(dev->mdev, in, inlen, &rwq_ind_tbl->rqtn);
 	kvfree(in);
 
@@ -5647,7 +5650,7 @@ struct ib_rwq_ind_table *mlx5_ib_create_rwq_ind_table(struct ib_device *device,
 	return &rwq_ind_tbl->ib_rwq_ind_tbl;
 
 err_copy:
-	mlx5_core_destroy_rqt(dev->mdev, rwq_ind_tbl->rqtn);
+	mlx5_cmd_destroy_rqt(dev->mdev, rwq_ind_tbl->rqtn, rwq_ind_tbl->uid);
 err:
 	kfree(rwq_ind_tbl);
 	return ERR_PTR(err);
@@ -5658,7 +5661,7 @@ int mlx5_ib_destroy_rwq_ind_table(struct ib_rwq_ind_table *ib_rwq_ind_tbl)
 	struct mlx5_ib_rwq_ind_table *rwq_ind_tbl = to_mrwq_ind_table(ib_rwq_ind_tbl);
 	struct mlx5_ib_dev *dev = to_mdev(ib_rwq_ind_tbl->device);
 
-	mlx5_core_destroy_rqt(dev->mdev, rwq_ind_tbl->rqtn);
+	mlx5_cmd_destroy_rqt(dev->mdev, rwq_ind_tbl->rqtn, rwq_ind_tbl->uid);
 
 	kfree(rwq_ind_tbl);
 	return 0;
