nvme: warn when finding multi-port subsystems without multipathing enabled

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 14a1336e6fff47dd1028b484d6c802105c58e2ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/14a1336e.failed

Without CONFIG_NVME_MULTIPATH enabled a multi-port subsystem might
show up as invididual devices and cause problems, warn about it.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit 14a1336e6fff47dd1028b484d6c802105c58e2ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/nvme.h
diff --cc drivers/nvme/host/nvme.h
index 5e9fbf4bca79,081cbdcce880..000000000000
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@@ -504,6 -528,20 +504,23 @@@ static inline void nvme_mpath_clear_cur
  static inline void nvme_mpath_check_last_path(struct nvme_ns *ns)
  {
  }
++<<<<<<< HEAD
++=======
+ static inline int nvme_mpath_init(struct nvme_ctrl *ctrl,
+ 		struct nvme_id_ctrl *id)
+ {
+ 	if (ctrl->subsys->cmic & (1 << 3))
+ 		dev_warn(ctrl->device,
+ "Please enable CONFIG_NVME_MULTIPATH for full support of multi-port devices.\n");
+ 	return 0;
+ }
+ static inline void nvme_mpath_uninit(struct nvme_ctrl *ctrl)
+ {
+ }
+ static inline void nvme_mpath_stop(struct nvme_ctrl *ctrl)
+ {
+ }
++>>>>>>> 14a1336e6fff (nvme: warn when finding multi-port subsystems without multipathing enabled)
  #endif /* CONFIG_NVME_MULTIPATH */
  
  #ifdef CONFIG_NVM
* Unmerged path drivers/nvme/host/nvme.h
