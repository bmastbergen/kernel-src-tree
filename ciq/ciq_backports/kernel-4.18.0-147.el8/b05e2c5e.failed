drm/amd/display: Update ABM crtc state on non-modeset

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author David Francis <David.Francis@amd.com>
commit b05e2c5e81f9a0be4a145e0926b1dfe62f6347d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/b05e2c5e.failed

[Why]
Somewhere in the atomic check reshuffle ABM got lost.
ABM is a crtc property (copied from a connector property).
It can change without a modeset, just like underscan.

[How]
In the skip_modeset branch of atomic check crtc updates,
copy over the abm property.

	Signed-off-by: David Francis <David.Francis@amd.com>
	Reviewed-by: Nicholas Kazlauskas <Nicholas.Kazlauskas@amd.com>
	Acked-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit b05e2c5e81f9a0be4a145e0926b1dfe62f6347d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
diff --cc drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
index 770c6b24be0b,8b5fc420d1c1..000000000000
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
@@@ -4846,6 -5662,52 +4846,55 @@@ next_crtc
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ skip_modeset:
+ 	/* Release extra reference */
+ 	if (new_stream)
+ 		 dc_stream_release(new_stream);
+ 
+ 	/*
+ 	 * We want to do dc stream updates that do not require a
+ 	 * full modeset below.
+ 	 */
+ 	if (!(enable && aconnector && new_crtc_state->enable &&
+ 	      new_crtc_state->active))
+ 		return 0;
+ 	/*
+ 	 * Given above conditions, the dc state cannot be NULL because:
+ 	 * 1. We're in the process of enabling CRTCs (just been added
+ 	 *    to the dc context, or already is on the context)
+ 	 * 2. Has a valid connector attached, and
+ 	 * 3. Is currently active and enabled.
+ 	 * => The dc stream state currently exists.
+ 	 */
+ 	BUG_ON(dm_new_crtc_state->stream == NULL);
+ 
+ 	/* Scaling or underscan settings */
+ 	if (is_scaling_state_different(dm_old_conn_state, dm_new_conn_state))
+ 		update_stream_scaling_settings(
+ 			&new_crtc_state->mode, dm_new_conn_state, dm_new_crtc_state->stream);
+ 
+ 	/* ABM settings */
+ 	dm_new_crtc_state->abm_level = dm_new_conn_state->abm_level;
+ 
+ 	/*
+ 	 * Color management settings. We also update color properties
+ 	 * when a modeset is needed, to ensure it gets reprogrammed.
+ 	 */
+ 	if (dm_new_crtc_state->base.color_mgmt_changed ||
+ 	    drm_atomic_crtc_needs_modeset(new_crtc_state)) {
+ 		ret = amdgpu_dm_set_regamma_lut(dm_new_crtc_state);
+ 		if (ret)
+ 			goto fail;
+ 		amdgpu_dm_set_ctm(dm_new_crtc_state);
+ 	}
+ 
+ 	/* Update Freesync settings. */
+ 	get_freesync_config_for_crtc(dm_new_crtc_state,
+ 				     dm_new_conn_state);
+ 
++>>>>>>> b05e2c5e81f9 (drm/amd/display: Update ABM crtc state on non-modeset)
  	return ret;
  
  fail:
* Unmerged path drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
