net: sched: set dedicated tcf_walker flag when tp is empty

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [net] sched: set dedicated tcf_walker flag when tp is empty (Ivan Vecera) [1688236 1687456]
Rebuild_FUZZ: 95.50%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 6676d5e416eecaf4e823a2c3903aa132ffc2ede0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/6676d5e4.failed

Using tcf_walker->stop flag to determine when tcf_walker->fn() was called
at least once is unreliable. Some classifiers set 'stop' flag on error
before calling walker callback, other classifiers used to call it with NULL
filter pointer when empty. In order to prevent further regressions, extend
tcf_walker structure with dedicated 'nonempty' flag. Set this flag in
tcf_walker->fn() implementation that is used to check if classifier has
filters configured.

Fixes: 8b64678e0af8 ("net: sched: refactor tp insert/delete for concurrent execution")
	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Suggested-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6676d5e416eecaf4e823a2c3903aa132ffc2ede0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_api.c
diff --cc net/sched/cls_api.c
index 290c6b8c7937,97d9312c2ff9..000000000000
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@@ -207,21 -235,26 +207,31 @@@ static void tcf_proto_put(struct tcf_pr
  			  struct netlink_ext_ack *extack)
  {
  	if (refcount_dec_and_test(&tp->refcnt))
 -		tcf_proto_destroy(tp, rtnl_held, extack);
 +		tcf_proto_destroy(tp, extack);
  }
  
- static int walker_noop(struct tcf_proto *tp, void *d, struct tcf_walker *arg)
+ static int walker_check_empty(struct tcf_proto *tp, void *d,
+ 			      struct tcf_walker *arg)
  {
- 	return -1;
+ 	if (tp) {
+ 		arg->nonempty = true;
+ 		return -1;
+ 	}
+ 	return 0;
  }
  
 -static bool tcf_proto_is_empty(struct tcf_proto *tp, bool rtnl_held)
 +static bool tcf_proto_is_empty(struct tcf_proto *tp)
  {
- 	struct tcf_walker walker = { .fn = walker_noop, };
+ 	struct tcf_walker walker = { .fn = walker_check_empty, };
  
  	if (tp->ops->walk) {
++<<<<<<< HEAD
 +		tp->ops->walk(tp, &walker);
 +		return !walker.stop;
++=======
+ 		tp->ops->walk(tp, &walker, rtnl_held);
+ 		return !walker.nonempty;
++>>>>>>> 6676d5e416ee (net: sched: set dedicated tcf_walker flag when tp is empty)
  	}
  	return true;
  }
diff --git a/include/net/pkt_cls.h b/include/net/pkt_cls.h
index cc71f5d27123..0a6c537f87a9 100644
--- a/include/net/pkt_cls.h
+++ b/include/net/pkt_cls.h
@@ -16,6 +16,7 @@ struct tcf_walker {
 	int	stop;
 	int	skip;
 	int	count;
+	bool	nonempty;
 	unsigned long cookie;
 	int	(*fn)(struct tcf_proto *, void *node, struct tcf_walker *);
 };
* Unmerged path net/sched/cls_api.c
