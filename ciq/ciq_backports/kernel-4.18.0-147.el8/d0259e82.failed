IB/uverbs: Remove ib_uobject_file

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Jason Gunthorpe <jgg@ziepe.ca>
commit d0259e82e7d214340aed33732e9a5ce448564921
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/d0259e82.failed

The only purpose for this structure was to hold the ib_uobject_file
pointer, but now that is part of the standard ib_uobject the structure
no longer makes any sense, so get rid of it.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit d0259e82e7d214340aed33732e9a5ce448564921)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/rdma_core.c
#	drivers/infiniband/core/uverbs_cmd.c
diff --cc drivers/infiniband/core/rdma_core.c
index 7abca5514e4d,847c6a2f1346..000000000000
--- a/drivers/infiniband/core/rdma_core.c
+++ b/drivers/infiniband/core/rdma_core.c
@@@ -357,11 -356,11 +355,17 @@@ static struct ib_uobject *alloc_begin_f
  		return (void *)filp;
  	}
  
++<<<<<<< HEAD
 +	uobj_file->uobj.id = new_fd;
 +	uobj_file->uobj.object = filp;
 +	uobj_file->ufile = ucontext->ufile;
++=======
+ 	uobj->id = new_fd;
+ 	uobj->object = filp;
+ 	uobj->ufile = ufile;
++>>>>>>> d0259e82e7d2 (IB/uverbs: Remove ib_uobject_file)
  	INIT_LIST_HEAD(&uobj->list);
- 	kref_get(&uobj_file->ufile->ref);
+ 	kref_get(&ufile->ref);
  
  	return uobj;
  }
@@@ -411,11 -409,9 +413,9 @@@ static int __must_check remove_commit_f
  {
  	const struct uverbs_obj_fd_type *fd_type =
  		container_of(uobj->type, struct uverbs_obj_fd_type, type);
- 	struct ib_uobject_file *uobj_file =
- 		container_of(uobj, struct ib_uobject_file, uobj);
- 	int ret = fd_type->context_closed(uobj_file, why);
+ 	int ret = fd_type->context_closed(uobj, why);
  
 -	if (ib_is_destroy_retryable(ret, why, uobj))
 +	if (why == RDMA_REMOVE_DESTROY && ret)
  		return ret;
  
  	if (why == RDMA_REMOVE_DURING_CLEANUP) {
@@@ -634,22 -629,20 +631,35 @@@ const struct uverbs_obj_type_class uver
  };
  EXPORT_SYMBOL(uverbs_idr_class);
  
- static void _uverbs_close_fd(struct ib_uobject_file *uobj_file)
+ static void _uverbs_close_fd(struct ib_uobject *uobj)
  {
++<<<<<<< HEAD
 +	struct ib_ucontext *ucontext;
 +	struct ib_uverbs_file *ufile = uobj_file->ufile;
++=======
+ 	struct ib_uverbs_file *ufile = uobj->ufile;
++>>>>>>> d0259e82e7d2 (IB/uverbs: Remove ib_uobject_file)
  	int ret;
  
 -	mutex_lock(&ufile->cleanup_mutex);
 +	mutex_lock(&uobj_file->ufile->cleanup_mutex);
  
  	/* uobject was either already cleaned up or is cleaned up right now anyway */
++<<<<<<< HEAD
 +	if (!uobj_file->uobj.context ||
 +	    !down_read_trylock(&uobj_file->uobj.context->cleanup_rwsem))
 +		goto unlock;
 +
 +	ucontext = uobj_file->uobj.context;
 +	ret = _rdma_remove_commit_uobject(&uobj_file->uobj, RDMA_REMOVE_CLOSE);
 +	up_read(&ucontext->cleanup_rwsem);
++=======
+ 	if (!uobj->context ||
+ 	    !down_read_trylock(&ufile->cleanup_rwsem))
+ 		goto unlock;
+ 
+ 	ret = _rdma_remove_commit_uobject(uobj, RDMA_REMOVE_CLOSE);
+ 	up_read(&ufile->cleanup_rwsem);
++>>>>>>> d0259e82e7d2 (IB/uverbs: Remove ib_uobject_file)
  	if (ret)
  		pr_warn("uverbs: unable to clean up uobject file in uverbs_close_fd.\n");
  unlock:
diff --cc drivers/infiniband/core/uverbs_cmd.c
index dd05d80bfe5f,bb2df271d3ff..000000000000
--- a/drivers/infiniband/core/uverbs_cmd.c
+++ b/drivers/infiniband/core/uverbs_cmd.c
@@@ -48,11 -48,10 +48,15 @@@
  #include "core_priv.h"
  
  static struct ib_uverbs_completion_event_file *
 -ib_uverbs_lookup_comp_file(int fd, struct ib_uverbs_file *ufile)
 +ib_uverbs_lookup_comp_file(int fd, struct ib_ucontext *context)
  {
  	struct ib_uobject *uobj = uobj_get_read(UVERBS_OBJECT_COMP_CHANNEL,
++<<<<<<< HEAD
 +						fd, context);
 +	struct ib_uobject_file *uobj_file;
++=======
+ 						fd, ufile);
++>>>>>>> d0259e82e7d2 (IB/uverbs: Remove ib_uobject_file)
  
  	if (IS_ERR(uobj))
  		return (void *)uobj;
* Unmerged path drivers/infiniband/core/rdma_core.c
diff --git a/drivers/infiniband/core/uverbs.h b/drivers/infiniband/core/uverbs.h
index c0d40fc3a53a..b3d00686cef5 100644
--- a/drivers/infiniband/core/uverbs.h
+++ b/drivers/infiniband/core/uverbs.h
@@ -130,7 +130,7 @@ struct ib_uverbs_async_event_file {
 };
 
 struct ib_uverbs_completion_event_file {
-	struct ib_uobject_file			uobj_file;
+	struct ib_uobject			uobj;
 	struct ib_uverbs_event_queue		ev_queue;
 };
 
* Unmerged path drivers/infiniband/core/uverbs_cmd.c
diff --git a/drivers/infiniband/core/uverbs_main.c b/drivers/infiniband/core/uverbs_main.c
index a3a7ffe6c843..0eb1fe5fe7cd 100644
--- a/drivers/infiniband/core/uverbs_main.c
+++ b/drivers/infiniband/core/uverbs_main.c
@@ -184,7 +184,7 @@ void ib_uverbs_release_ucq(struct ib_uverbs_file *file,
 		}
 		spin_unlock_irq(&ev_file->ev_queue.lock);
 
-		uverbs_uobject_put(&ev_file->uobj_file.uobj);
+		uverbs_uobject_put(&ev_file->uobj);
 	}
 
 	spin_lock_irq(&file->async_file->ev_queue.lock);
@@ -338,7 +338,7 @@ static ssize_t ib_uverbs_comp_event_read(struct file *filp, char __user *buf,
 		filp->private_data;
 
 	return ib_uverbs_event_read(&comp_ev_file->ev_queue,
-				    comp_ev_file->uobj_file.ufile, filp,
+				    comp_ev_file->uobj.ufile, filp,
 				    buf, count, pos,
 				    sizeof(struct ib_uverbs_comp_event_desc));
 }
@@ -420,7 +420,9 @@ static int ib_uverbs_async_event_close(struct inode *inode, struct file *filp)
 
 static int ib_uverbs_comp_event_close(struct inode *inode, struct file *filp)
 {
-	struct ib_uverbs_completion_event_file *file = filp->private_data;
+	struct ib_uobject *uobj = filp->private_data;
+	struct ib_uverbs_completion_event_file *file = container_of(
+		uobj, struct ib_uverbs_completion_event_file, uobj);
 	struct ib_uverbs_event *entry, *tmp;
 
 	spin_lock_irq(&file->ev_queue.lock);
diff --git a/drivers/infiniband/core/uverbs_std_types.c b/drivers/infiniband/core/uverbs_std_types.c
index c50d73845a2a..545523308c47 100644
--- a/drivers/infiniband/core/uverbs_std_types.c
+++ b/drivers/infiniband/core/uverbs_std_types.c
@@ -178,12 +178,12 @@ static int uverbs_free_pd(struct ib_uobject *uobject,
 	return 0;
 }
 
-static int uverbs_hot_unplug_completion_event_file(struct ib_uobject_file *uobj_file,
+static int uverbs_hot_unplug_completion_event_file(struct ib_uobject *uobj,
 						   enum rdma_remove_reason why)
 {
 	struct ib_uverbs_completion_event_file *comp_event_file =
-		container_of(uobj_file, struct ib_uverbs_completion_event_file,
-			     uobj_file);
+		container_of(uobj, struct ib_uverbs_completion_event_file,
+			     uobj);
 	struct ib_uverbs_event_queue *event_queue = &comp_event_file->ev_queue;
 
 	spin_lock_irq(&event_queue->lock);
diff --git a/drivers/infiniband/core/uverbs_std_types_cq.c b/drivers/infiniband/core/uverbs_std_types_cq.c
index d16e9a2f8d4a..a57d7e0c8de3 100644
--- a/drivers/infiniband/core/uverbs_std_types_cq.c
+++ b/drivers/infiniband/core/uverbs_std_types_cq.c
@@ -89,7 +89,7 @@ static int UVERBS_HANDLER(UVERBS_METHOD_CQ_CREATE)(struct ib_device *ib_dev,
 	if (!IS_ERR(ev_file_uobj)) {
 		ev_file = container_of(ev_file_uobj,
 				       struct ib_uverbs_completion_event_file,
-				       uobj_file.uobj);
+				       uobj);
 		uverbs_uobject_get(ev_file_uobj);
 	}
 
diff --git a/include/rdma/ib_verbs.h b/include/rdma/ib_verbs.h
index 79dfdfa90690..3ec8d1e17736 100644
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@ -1514,12 +1514,6 @@ struct ib_uobject {
 	const struct uverbs_obj_type *type;
 };
 
-struct ib_uobject_file {
-	struct ib_uobject	uobj;
-	/* ufile contains the lock between context release and file close */
-	struct ib_uverbs_file	*ufile;
-};
-
 struct ib_udata {
 	const void __user *inbuf;
 	void __user *outbuf;
diff --git a/include/rdma/uverbs_types.h b/include/rdma/uverbs_types.h
index cc04ec65588d..ff7b702fc277 100644
--- a/include/rdma/uverbs_types.h
+++ b/include/rdma/uverbs_types.h
@@ -140,7 +140,7 @@ struct uverbs_obj_fd_type {
 	 * the driver is removed or the process terminated.
 	 */
 	struct uverbs_obj_type  type;
-	int (*context_closed)(struct ib_uobject_file *uobj_file,
+	int (*context_closed)(struct ib_uobject *uobj,
 			      enum rdma_remove_reason why);
 	const struct file_operations	*fops;
 	const char			*name;
@@ -158,7 +158,8 @@ extern const struct uverbs_obj_type_class uverbs_fd_class;
 		.destroy_order = _order,				\
 		.type_class = &uverbs_fd_class,				\
 		.obj_size = (_obj_size) +				\
-			UVERBS_BUILD_BUG_ON((_obj_size) < sizeof(struct ib_uobject_file)), \
+			UVERBS_BUILD_BUG_ON((_obj_size) <               \
+					    sizeof(struct ib_uobject)), \
 	 },								\
 	 .context_closed = _context_closed,				\
 	 .fops = _fops,							\
