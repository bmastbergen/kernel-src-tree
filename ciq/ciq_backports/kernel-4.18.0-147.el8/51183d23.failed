net/neighbor: Update neigh_dump_info for strict data checking

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [net] neighbor: Update neigh_dump_info for strict data checking (Petr Oros) [1700306]
Rebuild_FUZZ: 96.61%
commit-author David Ahern <dsahern@gmail.com>
commit 51183d233b5a5f1cfe2a782c86d6fcfc187173fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/51183d23.failed

Update neigh_dump_info for strict data checking. If the flag is set,
the dump request is expected to have an ndmsg struct as the header
potentially followed by one or more attributes. Any data passed in the
header or as an attribute is taken as a request to influence the data
returned. Only values supported by the dump handler are allowed to be
non-0 or set in the request. At the moment only the NDA_IFINDEX and
NDA_MASTER attributes are supported.

Existing code does not fail the dump if nlmsg_parse fails. That behavior
is kept for non-strict checking.

	Signed-off-by: David Ahern <dsahern@gmail.com>
	Acked-by: Christian Brauner <christian@brauner.io>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 51183d233b5a5f1cfe2a782c86d6fcfc187173fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/neighbour.c
diff --cc net/core/neighbour.c
index 10aa2e649f57,7c8a3a0ee059..000000000000
--- a/net/core/neighbour.c
+++ b/net/core/neighbour.c
@@@ -2439,19 -2507,10 +2501,26 @@@ static int neigh_dump_info(struct sk_bu
  	    ((struct ndmsg *)nlmsg_data(nlh))->ndm_flags == NTF_PROXY)
  		proxy = 1;
  
++<<<<<<< HEAD
 +	err = nlmsg_parse(nlh, sizeof(struct ndmsg), tb, NDA_MAX, NULL, NULL);
 +	if (!err) {
 +		if (tb[NDA_IFINDEX]) {
 +			if (nla_len(tb[NDA_IFINDEX]) != sizeof(u32))
 +				return -EINVAL;
 +			filter.dev_idx = nla_get_u32(tb[NDA_IFINDEX]);
 +		}
 +		if (tb[NDA_MASTER]) {
 +			if (nla_len(tb[NDA_MASTER]) != sizeof(u32))
 +				return -EINVAL;
 +			filter.master_idx = nla_get_u32(tb[NDA_MASTER]);
 +		}
 +	}
++=======
+ 	err = neigh_valid_dump_req(nlh, cb->strict_check, &filter, cb->extack);
+ 	if (err < 0 && cb->strict_check)
+ 		return err;
+ 
++>>>>>>> 51183d233b5a (net/neighbor: Update neigh_dump_info for strict data checking)
  	s_t = cb->args[0];
  
  	for (t = 0; t < NEIGH_NR_TABLES; t++) {
* Unmerged path net/core/neighbour.c
