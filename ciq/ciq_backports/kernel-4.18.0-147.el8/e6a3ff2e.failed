ASoC: simple-scu-card: use cpu/codec pointer on graph_dai_props

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: simple-scu-card: use cpu/codec pointer on graph_dai_props (Jaroslav Kysela) [1683051]
Rebuild_FUZZ: 95.45%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit e6a3ff2ed4c9c4df217c64e0fc0a280a24055790
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/e6a3ff2e.failed

In  DPCM case, it uses CPU-dummy / dummy-Codec dai links, and
non DPCM case, it uses CPU-Codec dai links.

Now, we want to merge simple-card and simple-scu-card.

These sound cards are using silimar but not same logic on each functions.
Then, of course we want to share same logic.
To compromise, this patch uses cpu/codec pointer on simple-scu-card.
It is same logic with simple-card, thus easy merging.
This is prepare for merging simple card

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit e6a3ff2ed4c9c4df217c64e0fc0a280a24055790)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/generic/simple-scu-card.c
diff --cc sound/soc/generic/simple-scu-card.c
index 43df520e787a,944a6f435f88..000000000000
--- a/sound/soc/generic/simple-scu-card.c
+++ b/sound/soc/generic/simple-scu-card.c
@@@ -214,9 -237,10 +236,14 @@@ static int asoc_simple_card_parse_of(st
  	struct device_node *codec;
  	struct snd_soc_card *card = simple_priv_to_card(priv);
  	bool is_fe;
++<<<<<<< HEAD
 +	int ret, i;
++=======
+ 	int ret, loop;
+ 	int dai_idx, link_idx;
++>>>>>>> e6a3ff2ed4c9 (ASoC: simple-scu-card: use cpu/codec pointer on graph_dai_props)
  
 -	if (!top)
 +	if (!node)
  		return -EINVAL;
  
  	ret = asoc_simple_card_of_parse_widgets(card, PREFIX);
@@@ -227,25 -251,35 +254,55 @@@
  	if (ret < 0)
  		return ret;
  
 -	asoc_simple_card_parse_convert(dev, top, PREFIX, &priv->adata);
 +	asoc_simple_card_parse_convert(dev, node, PREFIX, &priv->adata);
  
++<<<<<<< HEAD
 +	i = 0;
 +	codec = of_get_child_by_name(node, PREFIX "codec");
 +	if (!codec)
 +		return -ENODEV;
 +
 +	for_each_child_of_node(node, np) {
 +		is_fe = false;
 +		if (strcmp(np->name, PREFIX "cpu") == 0)
 +			is_fe = true;
 +
 +		ret = asoc_simple_card_dai_link_of(node, np, codec, priv,
 +						   i, is_fe, true);
 +		if (ret < 0)
 +			return ret;
 +		i++;
 +	}
 +
++=======
+ 	loop = 1;
+ 	link_idx = 0;
+ 	dai_idx = 0;
+ 	node = of_get_child_by_name(top, PREFIX "dai-link");
+ 	if (!node) {
+ 		node = dev->of_node;
+ 		loop = 0;
+ 	}
+ 
+ 	do  {
+ 		codec = of_get_child_by_name(node,
+ 					     loop ? "codec" : PREFIX "codec");
+ 		if (!codec)
+ 			return -ENODEV;
+ 
+ 		for_each_child_of_node(node, np) {
+ 			is_fe = (np != codec);
+ 
+ 			ret = asoc_simple_card_dai_link_of(node, np, codec, priv,
+ 							   &dai_idx, link_idx++,
+ 							   is_fe, !loop);
+ 			if (ret < 0)
+ 				return ret;
+ 		}
+ 		node = of_get_next_child(top, node);
+ 	} while (loop && node);
+ 
++>>>>>>> e6a3ff2ed4c9 (ASoC: simple-scu-card: use cpu/codec pointer on graph_dai_props)
  	ret = asoc_simple_card_parse_card_name(card, PREFIX);
  	if (ret < 0)
  		return ret;
* Unmerged path sound/soc/generic/simple-scu-card.c
