drm/amdgpu: remove ATPX_DGPU_REQ_POWER_FOR_DISPLAYS check when hotplug-in

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Aaron Liu <aaron.liu@amd.com>
commit bdb1ccb080dafc1b4224873a5b759ff85a7d1c10
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/bdb1ccb0.failed

In amdgpu_atif_handler, when hotplug event received, remove
ATPX_DGPU_REQ_POWER_FOR_DISPLAYS check. This bit's check will cause missing
system resume.

	Signed-off-by: Aaron Liu <aaron.liu@amd.com>
	Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit bdb1ccb080dafc1b4224873a5b759ff85a7d1c10)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/amdgpu_acpi.c
diff --cc drivers/gpu/drm/amd/amdgpu/amdgpu_acpi.c
index 4b263e37b488,56f8ca2a3bb4..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_acpi.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_acpi.c
@@@ -386,42 -433,47 +386,55 @@@ static int amdgpu_atif_handler(struct a
  			return NOTIFY_DONE;
  	}
  
 -	if (atif->functions.sbios_requests) {
 -		struct atif_sbios_requests req;
 -
 -		/* Check pending SBIOS requests */
 -		count = amdgpu_atif_get_sbios_requests(atif, &req);
 +	/* Check pending SBIOS requests */
 +	count = amdgpu_atif_get_sbios_requests(atif, &req);
  
 -		if (count <= 0)
 -			return NOTIFY_BAD;
 +	if (count <= 0)
 +		return NOTIFY_BAD;
  
 -		DRM_DEBUG_DRIVER("ATIF: %d pending SBIOS requests\n", count);
 +	DRM_DEBUG_DRIVER("ATIF: %d pending SBIOS requests\n", count);
  
 -		/* todo: add DC handling */
 -		if ((req.pending & ATIF_PANEL_BRIGHTNESS_CHANGE_REQUEST) &&
 -		    !amdgpu_device_has_dc_support(adev)) {
 -			struct amdgpu_encoder *enc = atif->encoder_for_bl;
 +	if (req.pending & ATIF_PANEL_BRIGHTNESS_CHANGE_REQUEST) {
 +		struct amdgpu_encoder *enc = atif->encoder_for_bl;
  
 -			if (enc) {
 -				struct amdgpu_encoder_atom_dig *dig = enc->enc_priv;
 +		if (enc) {
 +			struct amdgpu_encoder_atom_dig *dig = enc->enc_priv;
  
 -				DRM_DEBUG_DRIVER("Changing brightness to %d\n",
 -						 req.backlight_level);
 +			DRM_DEBUG_DRIVER("Changing brightness to %d\n",
 +					req.backlight_level);
  
 -				amdgpu_display_backlight_set_level(adev, enc, req.backlight_level);
 +			amdgpu_display_backlight_set_level(adev, enc, req.backlight_level);
  
  #if defined(CONFIG_BACKLIGHT_CLASS_DEVICE) || defined(CONFIG_BACKLIGHT_CLASS_DEVICE_MODULE)
 -				backlight_force_update(dig->bl_dev,
 -						       BACKLIGHT_UPDATE_HOTKEY);
 +			backlight_force_update(dig->bl_dev,
 +					       BACKLIGHT_UPDATE_HOTKEY);
  #endif
 -			}
  		}
++<<<<<<< HEAD
++=======
+ 		if (req.pending & ATIF_DGPU_DISPLAY_EVENT) {
+ 			if (adev->flags & AMD_IS_PX) {
+ 				pm_runtime_get_sync(adev->ddev->dev);
+ 				/* Just fire off a uevent and let userspace tell us what to do */
+ 				drm_helper_hpd_irq_event(adev->ddev);
+ 				pm_runtime_mark_last_busy(adev->ddev->dev);
+ 				pm_runtime_put_autosuspend(adev->ddev->dev);
+ 			}
+ 		}
+ 		/* TODO: check other events */
++>>>>>>> bdb1ccb080da (drm/amdgpu: remove ATPX_DGPU_REQ_POWER_FOR_DISPLAYS check when hotplug-in)
  	}
 +	if (req.pending & ATIF_DGPU_DISPLAY_EVENT) {
 +		if ((adev->flags & AMD_IS_PX) &&
 +		    amdgpu_atpx_dgpu_req_power_for_displays()) {
 +			pm_runtime_get_sync(adev->ddev->dev);
 +			/* Just fire off a uevent and let userspace tell us what to do */
 +			drm_helper_hpd_irq_event(adev->ddev);
 +			pm_runtime_mark_last_busy(adev->ddev->dev);
 +			pm_runtime_put_autosuspend(adev->ddev->dev);
 +		}
 +	}
 +	/* TODO: check other events */
  
  	/* We've handled the event, stop the notifier chain. The ACPI interface
  	 * overloads ACPI_VIDEO_NOTIFY_PROBE, we don't want to send that to
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_acpi.c
