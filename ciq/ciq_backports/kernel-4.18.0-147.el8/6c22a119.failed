net/mlx5: Remove the get protocol device interface entry

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 6c22a11957f46ca7e9b8db20ac7c6b05441c55ed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/6c22a119.failed

This isn't used anywhere across the mlx5 driver stack,
remove it.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Reviewed-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 6c22a11957f46ca7e9b8db20ac7c6b05441c55ed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/driver.h
diff --cc include/linux/mlx5/driver.h
index 17a4bd81b40d,cc29e880c733..000000000000
--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@@ -1190,19 -1004,15 +1190,21 @@@ struct mlx5_interface 
  	void			(*remove)(struct mlx5_core_dev *dev, void *context);
  	int			(*attach)(struct mlx5_core_dev *dev, void *context);
  	void			(*detach)(struct mlx5_core_dev *dev, void *context);
++<<<<<<< HEAD
 +	void			(*event)(struct mlx5_core_dev *dev, void *context,
 +					 enum mlx5_dev_event event, unsigned long param);
 +	void			(*pfault)(struct mlx5_core_dev *dev,
 +					  void *context,
 +					  struct mlx5_pagefault *pfault);
 +	void *                  (*get_dev)(void *context);
++=======
++>>>>>>> 6c22a11957f4 (net/mlx5: Remove the get protocol device interface entry)
  	int			protocol;
  	struct list_head	list;
  };
  
- void *mlx5_get_protocol_dev(struct mlx5_core_dev *mdev, int protocol);
  int mlx5_register_interface(struct mlx5_interface *intf);
  void mlx5_unregister_interface(struct mlx5_interface *intf);
 -int mlx5_notifier_register(struct mlx5_core_dev *dev, struct notifier_block *nb);
 -int mlx5_notifier_unregister(struct mlx5_core_dev *dev, struct notifier_block *nb);
 -
  int mlx5_core_query_vendor_id(struct mlx5_core_dev *mdev, u32 *vendor_id);
  
  int mlx5_cmd_create_vport_lag(struct mlx5_core_dev *dev);
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/dev.c b/drivers/net/ethernet/mellanox/mlx5/core/dev.c
index 62ed11202de3..2f33122f791b 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/dev.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/dev.c
@@ -351,28 +351,6 @@ void mlx5_reload_interface(struct mlx5_core_dev *mdev, int protocol)
 	mutex_unlock(&mlx5_intf_mutex);
 }
 
-void *mlx5_get_protocol_dev(struct mlx5_core_dev *mdev, int protocol)
-{
-	struct mlx5_priv *priv = &mdev->priv;
-	struct mlx5_device_context *dev_ctx;
-	unsigned long flags;
-	void *result = NULL;
-
-	spin_lock_irqsave(&priv->ctx_lock, flags);
-
-	list_for_each_entry(dev_ctx, &mdev->priv.ctx_list, list)
-		if ((dev_ctx->intf->protocol == protocol) &&
-		    dev_ctx->intf->get_dev) {
-			result = dev_ctx->intf->get_dev(dev_ctx->context);
-			break;
-		}
-
-	spin_unlock_irqrestore(&priv->ctx_lock, flags);
-
-	return result;
-}
-EXPORT_SYMBOL(mlx5_get_protocol_dev);
-
 /* Must be called with intf_mutex held */
 void mlx5_add_dev_by_protocol(struct mlx5_core_dev *dev, int protocol)
 {
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index f856d322cf24..50d5804b8066 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -5164,13 +5164,6 @@ static void mlx5e_remove(struct mlx5_core_dev *mdev, void *vpriv)
 	kfree(ppriv);
 }
 
-static void *mlx5e_get_netdev(void *vpriv)
-{
-	struct mlx5e_priv *priv = vpriv;
-
-	return priv->netdev;
-}
-
 static struct mlx5_interface mlx5e_interface = {
 	.add       = mlx5e_add,
 	.remove    = mlx5e_remove,
@@ -5178,7 +5171,6 @@ static struct mlx5_interface mlx5e_interface = {
 	.detach    = mlx5e_detach,
 	.event     = mlx5e_async_event,
 	.protocol  = MLX5_INTERFACE_PROTOCOL_ETH,
-	.get_dev   = mlx5e_get_netdev,
 };
 
 void mlx5e_init(void)
* Unmerged path include/linux/mlx5/driver.h
