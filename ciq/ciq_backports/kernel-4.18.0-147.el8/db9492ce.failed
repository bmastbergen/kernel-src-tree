s390/protvirt: add memory sharing for diag 308 set/store

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Vasily Gorbik <gor@linux.ibm.com>
commit db9492cef45efc347beed7b617dfdfac399f662b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/db9492ce.failed

Add sharing of ipl parameter block for diag 308 set/store calls to allow
kvm access in protected virtualization environment.

	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit db9492cef45efc347beed7b617dfdfac399f662b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/boot/ipl_parm.c
diff --cc arch/s390/boot/ipl_parm.c
index 86afb3bb647d,385d0c7a9635..000000000000
--- a/arch/s390/boot/ipl_parm.c
+++ b/arch/s390/boot/ipl_parm.c
@@@ -5,6 -6,8 +5,11 @@@
  #include <asm/sclp.h>
  #include <asm/sections.h>
  #include <asm/boot_data.h>
++<<<<<<< HEAD
++=======
+ #include <asm/facility.h>
+ #include <asm/uv.h>
++>>>>>>> db9492cef45e (s390/protvirt: add memory sharing for diag 308 set/store)
  #include "boot.h"
  
  char __bootdata(early_command_line)[COMMAND_LINE_SIZE];
* Unmerged path arch/s390/boot/ipl_parm.c
diff --git a/arch/s390/kernel/ipl.c b/arch/s390/kernel/ipl.c
index b2b944085114..8347aea99b5a 100644
--- a/arch/s390/kernel/ipl.c
+++ b/arch/s390/kernel/ipl.c
@@ -31,6 +31,7 @@
 #include <asm/os_info.h>
 #include <asm/sections.h>
 #include <asm/boot_data.h>
+#include <asm/uv.h>
 #include "entry.h"
 
 #define IPL_PARM_BLOCK_VERSION 0
@@ -858,15 +859,21 @@ static void __reipl_run(void *unused)
 {
 	switch (reipl_type) {
 	case IPL_TYPE_CCW:
+		uv_set_shared(__pa(reipl_block_ccw));
 		diag308(DIAG308_SET, reipl_block_ccw);
+		uv_remove_shared(__pa(reipl_block_ccw));
 		diag308(DIAG308_LOAD_CLEAR, NULL);
 		break;
 	case IPL_TYPE_FCP:
+		uv_set_shared(__pa(reipl_block_fcp));
 		diag308(DIAG308_SET, reipl_block_fcp);
+		uv_remove_shared(__pa(reipl_block_fcp));
 		diag308(DIAG308_LOAD_CLEAR, NULL);
 		break;
 	case IPL_TYPE_NSS:
+		uv_set_shared(__pa(reipl_block_nss));
 		diag308(DIAG308_SET, reipl_block_nss);
+		uv_remove_shared(__pa(reipl_block_nss));
 		diag308(DIAG308_LOAD_CLEAR, NULL);
 		break;
 	case IPL_TYPE_UNKNOWN:
@@ -1136,7 +1143,9 @@ static struct kset *dump_kset;
 
 static void diag308_dump(void *dump_block)
 {
+	uv_set_shared(__pa(dump_block));
 	diag308(DIAG308_SET, dump_block);
+	uv_remove_shared(__pa(dump_block));
 	while (1) {
 		if (diag308(DIAG308_LOAD_NORMAL_DUMP, NULL) != 0x302)
 			break;
