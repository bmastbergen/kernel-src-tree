bpf, libbpf: introduce bpf_object__probe_caps to test BPF capabilities

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Stanislav Fomichev <sdf@google.com>
commit 47eff61777c7b2db58805f974994713c8acbe9a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/47eff617.failed

It currently only checks whether kernel supports map/prog names.
This capability check will be used in the next two commits to
skip setting prog/map names.

	Suggested-by: Daniel Borkmann <daniel@iogearbox.net>
	Signed-off-by: Stanislav Fomichev <sdf@google.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 47eff61777c7b2db58805f974994713c8acbe9a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index f064c910a99d,dffdd68b5e6b..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -165,6 -162,12 +171,15 @@@ struct bpf_program 
  	bpf_program_clear_priv_t clear_priv;
  
  	enum bpf_attach_type expected_attach_type;
++<<<<<<< HEAD
++=======
+ 	int btf_fd;
+ 	void *func_info;
+ 	__u32 func_info_rec_size;
+ 	__u32 func_info_len;
+ 
+ 	struct bpf_capabilities *caps;
++>>>>>>> 47eff61777c7 (bpf, libbpf: introduce bpf_object__probe_caps to test BPF capabilities)
  };
  
  struct bpf_map {
* Unmerged path tools/lib/bpf/libbpf.c
