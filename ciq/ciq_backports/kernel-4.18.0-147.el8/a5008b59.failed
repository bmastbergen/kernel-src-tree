dma-direct: only limit the mapping size if swiotlb could be used

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Christoph Hellwig <hch@lst.de>
commit a5008b59cd9d8de12ab623cb5052bb4735330e5c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/a5008b59.failed

Don't just check for a swiotlb buffer, but also if buffering might
be required for this particular device.

Fixes: 133d624b1cee ("dma: Introduce dma_max_mapping_size()")
	Reported-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Tested-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
(cherry picked from commit a5008b59cd9d8de12ab623cb5052bb4735330e5c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/dma/direct.c
diff --cc kernel/dma/direct.c
index 26bb7b9a7670,e269b6f9b444..000000000000
--- a/kernel/dma/direct.c
+++ b/kernel/dma/direct.c
@@@ -364,3 -396,12 +364,15 @@@ int dma_direct_supported(struct device 
  	 */
  	return mask >= __phys_to_dma(dev, min_mask);
  }
++<<<<<<< HEAD
++=======
+ 
+ size_t dma_direct_max_mapping_size(struct device *dev)
+ {
+ 	/* If SWIOTLB is active, use its maximum mapping size */
+ 	if (is_swiotlb_active() &&
+ 	    (dma_addressing_limited(dev) || swiotlb_force == SWIOTLB_FORCE))
+ 		return swiotlb_max_mapping_size(dev);
+ 	return SIZE_MAX;
+ }
++>>>>>>> a5008b59cd9d (dma-direct: only limit the mapping size if swiotlb could be used)
* Unmerged path kernel/dma/direct.c
