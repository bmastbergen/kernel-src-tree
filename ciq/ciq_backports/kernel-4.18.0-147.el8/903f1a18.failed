net/tls: fix build without CONFIG_TLS_DEVICE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 903f1a187776bb8d79b13618ec05b25f86318885
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/903f1a18.failed

buildbot noticed that TLS_HW is not defined if CONFIG_TLS_DEVICE=n.
Wrap the cleanup branch into an ifdef, tls_device_free_resources_tx()
wouldn't be compiled either in this case.

Fixes: 35b71a34ada6 ("net/tls: don't leak partially sent record in device mode")
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 903f1a187776bb8d79b13618ec05b25f86318885)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tls/tls_main.c
diff --cc net/tls/tls_main.c
index a0dcca82c8b9,9547cea0ce3b..000000000000
--- a/net/tls/tls_main.c
+++ b/net/tls/tls_main.c
@@@ -276,10 -287,17 +276,17 @@@ static void tls_sk_proto_close(struct s
  		kfree(ctx->tx.rec_seq);
  		kfree(ctx->tx.iv);
  		tls_sw_free_resources_tx(sk);
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_TLS_DEVICE
+ 	} else if (ctx->tx_conf == TLS_HW) {
+ 		tls_device_free_resources_tx(sk);
+ #endif
++>>>>>>> 903f1a187776 (net/tls: fix build without CONFIG_TLS_DEVICE)
  	}
  
 -	if (ctx->rx_conf == TLS_SW) {
 -		kfree(ctx->rx.rec_seq);
 -		kfree(ctx->rx.iv);
 +	if (ctx->rx_conf == TLS_SW)
  		tls_sw_free_resources_rx(sk);
 -	}
  
  #ifdef CONFIG_TLS_DEVICE
  	if (ctx->rx_conf == TLS_HW)
* Unmerged path net/tls/tls_main.c
