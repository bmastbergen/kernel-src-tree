net: mii: Add mii_lpa_mod_linkmode_lpa_t

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [netdrv] mii: Add mii_lpa_mod_linkmode_lpa_t (Petr Oros) [1691676]
Rebuild_FUZZ: 93.33%
commit-author Andrew Lunn <andrew@lunn.ch>
commit d3351931a37bdb329b5ea761424579fa91c866ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/d3351931.failed

Add a _mod_ variant of mii_lpa_to_linkmode_lpa_t. Use this to fix the
genphy_read_status() where the 1G link partner features are getting
lost.

Fixes: c0ec3c273677 ("net: phy: Convert u32 phydev->lp_advertising to linkmode")
	Reported-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d3351931a37bdb329b5ea761424579fa91c866ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phy_device.c
#	include/linux/mii.h
diff --cc drivers/net/phy/phy_device.c
index e0d479da7531,7d5d698604aa..000000000000
--- a/drivers/net/phy/phy_device.c
+++ b/drivers/net/phy/phy_device.c
@@@ -1708,7 -1748,7 +1708,11 @@@ int genphy_read_status(struct phy_devic
  		if (lpa < 0)
  			return lpa;
  
++<<<<<<< HEAD
 +		phydev->lp_advertising |= mii_lpa_to_ethtool_lpa_t(lpa);
++=======
+ 		mii_lpa_mod_linkmode_lpa_t(phydev->lp_advertising, lpa);
++>>>>>>> d3351931a37b (net: mii: Add mii_lpa_mod_linkmode_lpa_t)
  
  		adv = phy_read(phydev, MII_ADVERTISE);
  		if (adv < 0)
diff --cc include/linux/mii.h
index b1ce53b7dcd6,e72447778a08..000000000000
--- a/include/linux/mii.h
+++ b/include/linux/mii.h
@@@ -385,13 -420,53 +400,57 @@@ static inline void mii_adv_to_linkmode_
  }
  
  /**
 - * mii_lpa_to_linkmode_lpa_t
 - * @adv: value of the MII_LPA register
 + * ethtool_adv_to_lcl_adv_t
 + * @advertising:pointer to ethtool advertising
   *
++<<<<<<< HEAD
 + * A small helper function that translates ethtool advertising to LVL
++=======
+  * A small helper function that translates MII_LPA bits, when in
+  * 1000Base-T mode, to linkmode LP advertisement settings. Clears the
+  * old value of advertising
+  */
+ static inline void mii_lpa_to_linkmode_lpa_t(unsigned long *lp_advertising,
+ 					     u32 lpa)
+ {
+ 	mii_adv_to_linkmode_adv_t(lp_advertising, lpa);
+ 
+ 	if (lpa & LPA_LPACK)
+ 		linkmode_set_bit(ETHTOOL_LINK_MODE_Autoneg_BIT,
+ 				 lp_advertising);
+ 
+ }
+ 
+ /**
+  * mii_lpa_mod_linkmode_lpa_t
+  * @adv: value of the MII_LPA register
+  *
+  * A small helper function that translates MII_LPA bits, when in
+  * 1000Base-T mode, to linkmode LP advertisement settings. Leaves
+  * other bits unchanged.
+  */
+ static inline void mii_lpa_mod_linkmode_lpa_t(unsigned long *lp_advertising,
+ 					      u32 lpa)
+ {
+ 	mii_adv_mod_linkmode_adv_t(lp_advertising, lpa);
+ 
+ 	if (lpa & LPA_LPACK)
+ 		linkmode_set_bit(ETHTOOL_LINK_MODE_Autoneg_BIT,
+ 				 lp_advertising);
+ 	else
+ 		linkmode_clear_bit(ETHTOOL_LINK_MODE_Autoneg_BIT,
+ 				   lp_advertising);
+ }
+ 
+ /**
+  * linkmode_adv_to_lcl_adv_t
+  * @advertising:pointer to linkmode advertising
+  *
+  * A small helper function that translates linkmode advertising to LVL
++>>>>>>> d3351931a37b (net: mii: Add mii_lpa_mod_linkmode_lpa_t)
   * pause capabilities.
   */
 -static inline u32 linkmode_adv_to_lcl_adv_t(unsigned long *advertising)
 +static inline u32 ethtool_adv_to_lcl_adv_t(u32 advertising)
  {
  	u32 lcl_adv = 0;
  
* Unmerged path drivers/net/phy/phy_device.c
* Unmerged path include/linux/mii.h
