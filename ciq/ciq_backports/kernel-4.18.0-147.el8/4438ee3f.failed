IB/core: Abort page fault handler silently during owning process exit

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Moni Shoua <monis@mellanox.com>
commit 4438ee3f130c9deeebaf39bb9108d02c0b57cc7f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/4438ee3f.failed

It is possible that during a page fault handling, the process that owns
the MR is terminating. The indication for it is failure to get the
task_struct or take reference on the mm_struct. In this case just abort
the page-fault handler with error but without a warning to the kernel log.

	Signed-off-by: Moni Shoua <monis@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 4438ee3f130c9deeebaf39bb9108d02c0b57cc7f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/umem_odp.c
diff --cc drivers/infiniband/core/umem_odp.c
index 00222d836b64,6013cf0b8f4f..000000000000
--- a/drivers/infiniband/core/umem_odp.c
+++ b/drivers/infiniband/core/umem_odp.c
@@@ -627,15 -612,14 +627,25 @@@ int ib_umem_odp_map_dma_pages(struct ib
  	user_virt = user_virt & page_mask;
  	bcnt += off; /* Charge for the first page offset as well. */
  
++<<<<<<< HEAD
 +	owning_process = get_pid_task(umem->context->tgid, PIDTYPE_PID);
 +	if (owning_process == NULL) {
++=======
+ 	/*
+ 	 * owning_process is allowed to be NULL, this means somehow the mm is
+ 	 * existing beyond the lifetime of the originating process.. Presumably
+ 	 * mmget_not_zero will fail in this case.
+ 	 */
+ 	owning_process = get_pid_task(umem_odp->per_mm->tgid, PIDTYPE_PID);
+ 	if (!owning_process || !mmget_not_zero(owning_mm)) {
++>>>>>>> 4438ee3f130c (IB/core: Abort page fault handler silently during owning process exit)
  		ret = -EINVAL;
 +		goto out_no_task;
 +	}
 +
 +	owning_mm = get_task_mm(owning_process);
 +	if (owning_mm == NULL) {
 +		ret = -ENOENT;
  		goto out_put_task;
  	}
  
* Unmerged path drivers/infiniband/core/umem_odp.c
