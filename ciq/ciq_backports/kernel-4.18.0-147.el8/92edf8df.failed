powerpc/security: Fix spectre_v2 reporting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Michael Ellerman <mpe@ellerman.id.au>
commit 92edf8df0ff2ae86cc632eeca0e651fd8431d40d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/92edf8df.failed

When I updated the spectre_v2 reporting to handle software count cache
flush I got the logic wrong when there's no software count cache
enabled at all.

The result is that on systems with the software count cache flush
disabled we print:

  Mitigation: Indirect branch cache disabled, Software count cache flush

Which correctly indicates that the count cache is disabled, but
incorrectly says the software count cache flush is enabled.

The root of the problem is that we are trying to handle all
combinations of options. But we know now that we only expect to see
the software count cache flush enabled if the other options are false.

So split the two cases, which simplifies the logic and fixes the bug.
We were also missing a space before "(hardware accelerated)".

The result is we see one of:

  Mitigation: Indirect branch serialisation (kernel only)
  Mitigation: Indirect branch cache disabled
  Mitigation: Software count cache flush
  Mitigation: Software count cache flush (hardware accelerated)

Fixes: ee13cb249fab ("powerpc/64s: Add support for software count cache flush")
	Cc: stable@vger.kernel.org # v4.19+
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
	Reviewed-by: Michael Neuling <mikey@neuling.org>
	Reviewed-by: Diana Craciun <diana.craciun@nxp.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 92edf8df0ff2ae86cc632eeca0e651fd8431d40d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/security.c
diff --cc arch/powerpc/kernel/security.c
index 4cb8f1f7b593,b33bafb8fcea..000000000000
--- a/arch/powerpc/kernel/security.c
+++ b/arch/powerpc/kernel/security.c
@@@ -158,8 -201,16 +158,19 @@@ ssize_t cpu_show_spectre_v2(struct devi
  
  		if (ccd)
  			seq_buf_printf(&s, "Indirect branch cache disabled");
++<<<<<<< HEAD
 +	} else
++=======
+ 	} else if (count_cache_flush_type != COUNT_CACHE_FLUSH_NONE) {
+ 		seq_buf_printf(&s, "Mitigation: Software count cache flush");
+ 
+ 		if (count_cache_flush_type == COUNT_CACHE_FLUSH_HW)
+ 			seq_buf_printf(&s, " (hardware accelerated)");
+ 	} else if (btb_flush_enabled) {
+ 		seq_buf_printf(&s, "Mitigation: Branch predictor state flush");
+ 	} else {
++>>>>>>> 92edf8df0ff2 (powerpc/security: Fix spectre_v2 reporting)
  		seq_buf_printf(&s, "Vulnerable");
 -	}
  
  	seq_buf_printf(&s, "\n");
  
* Unmerged path arch/powerpc/kernel/security.c
