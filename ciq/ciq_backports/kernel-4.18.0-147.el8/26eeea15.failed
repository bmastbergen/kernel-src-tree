drm/i915/icl: Fix CRC mismatch error for DP link layer compliance

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Aditya Swarup <aditya.swarup@intel.com>
commit 26eeea1506838c77524fa90c8e6f1cc246762a4a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/26eeea15.failed

Setting the pixel rounding bit to 1 in PIPE_CHICKEN register allows
to passthrough FB pixels unmodified across pipe. This fixes the failures
for DP link layer compliance tests 4.4.1.1, 4.4.1.2 & 4.4.1.3.
(Lineage #1605353570)

v2: This is also needed to fix failing IGT test case kms_cursor_crc on
ICL.(Mika Kahola)
Make macros consistent with i915_reg.h comments.(Jani Nikula)

	Cc: Clint Taylor <clinton.a.taylor@intel.com>
	Cc: Mika Kahola <mika.kahola@intel.com>
	Cc: Jani Nikula <jani.nikula@linux.intel.com>
	Signed-off-by: Aditya Swarup <aditya.swarup@intel.com>
	Reviewed-by: Mika Kahola <mika.kahola@intel.com>
	Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20190307021412.18626-1-aditya.swarup@intel.com
References: https://bugs.freedesktop.org/show_bug.cgi?id=103232
(cherry picked from commit 26eeea1506838c77524fa90c8e6f1cc246762a4a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_reg.h
#	drivers/gpu/drm/i915/intel_display.c
diff --cc drivers/gpu/drm/i915/i915_reg.h
index a78c6ef1f608,58e68baaad9e..000000000000
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@@ -7269,13 -7650,22 +7269,26 @@@ enum 
  
  /* WaCatErrorRejectionIssue */
  #define GEN7_SQ_CHICKEN_MBCUNIT_CONFIG		_MMIO(0x9030)
 -#define  GEN7_SQ_CHICKEN_MBCUNIT_SQINTMOB	(1 << 11)
 +#define  GEN7_SQ_CHICKEN_MBCUNIT_SQINTMOB	(1<<11)
  
  #define HSW_SCRATCH1				_MMIO(0xb038)
 -#define  HSW_SCRATCH1_L3_DATA_ATOMICS_DISABLE	(1 << 27)
 +#define  HSW_SCRATCH1_L3_DATA_ATOMICS_DISABLE	(1<<27)
  
  #define BDW_SCRATCH1					_MMIO(0xb11c)
++<<<<<<< HEAD
 +#define  GEN9_LBS_SLA_RETRY_TIMER_DECREMENT_ENABLE	(1<<2)
++=======
+ #define  GEN9_LBS_SLA_RETRY_TIMER_DECREMENT_ENABLE	(1 << 2)
+ 
+ /*GEN11 chicken */
+ #define _PIPEA_CHICKEN				0x70038
+ #define _PIPEB_CHICKEN				0x71038
+ #define _PIPEC_CHICKEN				0x72038
+ #define PIPE_CHICKEN(pipe)			_MMIO_PIPE(pipe, _PIPEA_CHICKEN,\
+ 							   _PIPEB_CHICKEN)
+ #define   PIXEL_ROUNDING_TRUNC_FB_PASSTHRU 	(1 << 15)
+ #define   PER_PIXEL_ALPHA_BYPASS_EN		(1 << 7)
++>>>>>>> 26eeea150683 (drm/i915/icl: Fix CRC mismatch error for DP link layer compliance)
  
  /* PCH */
  
diff --cc drivers/gpu/drm/i915/intel_display.c
index 98867581a27e,3182c13a1c11..000000000000
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@@ -3857,6 -3919,30 +3857,33 @@@ unlock
  	clear_bit(I915_RESET_MODESET, &dev_priv->gpu_error.flags);
  }
  
++<<<<<<< HEAD
++=======
+ static void icl_set_pipe_chicken(struct intel_crtc *crtc)
+ {
+ 	struct drm_i915_private *dev_priv = to_i915(crtc->base.dev);
+ 	enum pipe pipe = crtc->pipe;
+ 	u32 tmp;
+ 
+ 	tmp = I915_READ(PIPE_CHICKEN(pipe));
+ 
+ 	/*
+ 	 * Display WA #1153: icl
+ 	 * enable hardware to bypass the alpha math
+ 	 * and rounding for per-pixel values 00 and 0xff
+ 	 */
+ 	tmp |= PER_PIXEL_ALPHA_BYPASS_EN;
+ 	/*
+ 	 * Display WA # 1605353570: icl
+ 	 * Set the pixel rounding bit to 1 for allowing
+ 	 * passthrough of Frame buffer pixels unmodified
+ 	 * across pipe
+ 	 */
+ 	tmp |= PIXEL_ROUNDING_TRUNC_FB_PASSTHRU;
+ 	I915_WRITE(PIPE_CHICKEN(pipe), tmp);
+ }
+ 
++>>>>>>> 26eeea150683 (drm/i915/icl: Fix CRC mismatch error for DP link layer compliance)
  static void intel_update_pipe_config(const struct intel_crtc_state *old_crtc_state,
  				     const struct intel_crtc_state *new_crtc_state)
  {
* Unmerged path drivers/gpu/drm/i915/i915_reg.h
* Unmerged path drivers/gpu/drm/i915/intel_display.c
