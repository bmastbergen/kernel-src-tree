net: phy: Add support for resolving 5G and 2.5G autoneg

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [netdrv] phy: Add support for resolving 5G and 2.5G autoneg (Petr Oros) [1691676]
Rebuild_FUZZ: 95.24%
commit-author Andrew Lunn <andrew@lunn.ch>
commit cb6402fe26358a33e32fb71054b248c76dcfe491
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/cb6402fe.failed

Now that 2.5G and 5G can be represented in phydev->advertising and
phydev->lp_advertising, add these two links modes as possible
resolutions to auto negotiation.

	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cb6402fe26358a33e32fb71054b248c76dcfe491)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phy-core.c
diff --cc drivers/net/phy/phy-core.c
index 514bd8c36161,20fbd5eb56fd..000000000000
--- a/drivers/net/phy/phy-core.c
+++ b/drivers/net/phy/phy-core.c
@@@ -353,27 -352,43 +353,40 @@@ size_t phy_speeds(unsigned int *speeds
   */
  void phy_resolve_aneg_linkmode(struct phy_device *phydev)
  {
 -	__ETHTOOL_DECLARE_LINK_MODE_MASK(common);
 +	u32 common = phydev->lp_advertising & phydev->advertising;
  
 -	linkmode_and(common, phydev->lp_advertising, phydev->advertising);
 -
 -	if (linkmode_test_bit(ETHTOOL_LINK_MODE_10000baseT_Full_BIT, common)) {
 +	if (common & ADVERTISED_10000baseT_Full) {
  		phydev->speed = SPEED_10000;
  		phydev->duplex = DUPLEX_FULL;
++<<<<<<< HEAD
 +	} else if (common & ADVERTISED_1000baseT_Full) {
++=======
+ 	} else if (linkmode_test_bit(ETHTOOL_LINK_MODE_5000baseT_Full_BIT,
+ 				     common)) {
+ 		phydev->speed = SPEED_5000;
+ 		phydev->duplex = DUPLEX_FULL;
+ 	} else if (linkmode_test_bit(ETHTOOL_LINK_MODE_2500baseT_Full_BIT,
+ 				     common)) {
+ 		phydev->speed = SPEED_2500;
+ 		phydev->duplex = DUPLEX_FULL;
+ 	} else if (linkmode_test_bit(ETHTOOL_LINK_MODE_1000baseT_Full_BIT,
+ 				     common)) {
++>>>>>>> cb6402fe2635 (net: phy: Add support for resolving 5G and 2.5G autoneg)
  		phydev->speed = SPEED_1000;
  		phydev->duplex = DUPLEX_FULL;
 -	} else if (linkmode_test_bit(ETHTOOL_LINK_MODE_1000baseT_Half_BIT,
 -				     common)) {
 +	} else if (common & ADVERTISED_1000baseT_Half) {
  		phydev->speed = SPEED_1000;
  		phydev->duplex = DUPLEX_HALF;
 -	} else if (linkmode_test_bit(ETHTOOL_LINK_MODE_100baseT_Full_BIT,
 -				     common)) {
 +	} else if (common & ADVERTISED_100baseT_Full) {
  		phydev->speed = SPEED_100;
  		phydev->duplex = DUPLEX_FULL;
 -	} else if (linkmode_test_bit(ETHTOOL_LINK_MODE_100baseT_Half_BIT,
 -				     common)) {
 +	} else if (common & ADVERTISED_100baseT_Half) {
  		phydev->speed = SPEED_100;
  		phydev->duplex = DUPLEX_HALF;
 -	} else if (linkmode_test_bit(ETHTOOL_LINK_MODE_10baseT_Full_BIT,
 -				     common)) {
 +	} else if (common & ADVERTISED_10baseT_Full) {
  		phydev->speed = SPEED_10;
  		phydev->duplex = DUPLEX_FULL;
 -	} else if (linkmode_test_bit(ETHTOOL_LINK_MODE_10baseT_Half_BIT,
 -				     common)) {
 +	} else if (common & ADVERTISED_10baseT_Half) {
  		phydev->speed = SPEED_10;
  		phydev->duplex = DUPLEX_HALF;
  	}
* Unmerged path drivers/net/phy/phy-core.c
