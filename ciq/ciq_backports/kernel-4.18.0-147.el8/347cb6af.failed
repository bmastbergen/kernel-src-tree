dma-mapping: add a kconfig symbol for arch_setup_dma_ops availability

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 347cb6af8710b72cf9685fdc09d07873cf42d51f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/347cb6af.failed

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Acked-by: Paul Burton <paul.burton@mips.com> # MIPS
	Acked-by: Catalin Marinas <catalin.marinas@arm.com> # arm64
(cherry picked from commit 347cb6af8710b72cf9685fdc09d07873cf42d51f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arc/Kconfig
#	arch/arm/include/asm/dma-mapping.h
#	arch/mips/Kconfig
#	arch/mips/include/asm/dma-mapping.h
#	arch/mips/mm/dma-noncoherent.c
diff --cc arch/arc/Kconfig
index 5151d81476a1,2ab27d88eb1c..000000000000
--- a/arch/arc/Kconfig
+++ b/arch/arc/Kconfig
@@@ -9,9 -9,11 +9,15 @@@
  config ARC
  	def_bool y
  	select ARC_TIMERS
++<<<<<<< HEAD
++=======
+ 	select ARCH_HAS_DMA_COHERENT_TO_PFN
+ 	select ARCH_HAS_PTE_SPECIAL
+ 	select ARCH_HAS_SETUP_DMA_OPS
++>>>>>>> 347cb6af8710 (dma-mapping: add a kconfig symbol for arch_setup_dma_ops availability)
  	select ARCH_HAS_SYNC_DMA_FOR_CPU
  	select ARCH_HAS_SYNC_DMA_FOR_DEVICE
 +	select ARCH_HAS_SG_CHAIN
  	select ARCH_SUPPORTS_ATOMIC_RMW if ARC_HAS_LLSC
  	select BUILDTIME_EXTABLE_SORT
  	select CLONE_BACKWARDS
diff --cc arch/arm/include/asm/dma-mapping.h
index 8436f6ade57d,a224b6e39e58..000000000000
--- a/arch/arm/include/asm/dma-mapping.h
+++ b/arch/arm/include/asm/dma-mapping.h
@@@ -96,12 -96,10 +96,16 @@@ static inline unsigned long dma_max_pfn
  }
  #define dma_max_pfn(dev) dma_max_pfn(dev)
  
++<<<<<<< HEAD
 +#define arch_setup_dma_ops arch_setup_dma_ops
 +extern void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
 +			       const struct iommu_ops *iommu, bool coherent);
 +
++=======
+ #ifdef CONFIG_MMU
++>>>>>>> 347cb6af8710 (dma-mapping: add a kconfig symbol for arch_setup_dma_ops availability)
  #define arch_teardown_dma_ops arch_teardown_dma_ops
  extern void arch_teardown_dma_ops(struct device *dev);
 -#endif
  
  /* do not use this function in a driver */
  static inline bool is_device_dma_coherent(struct device *dev)
diff --cc arch/mips/Kconfig
index 08c10c518f83,dc5d70f674e0..000000000000
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@@ -1116,10 -1118,8 +1116,15 @@@ config DMA_MAYBE_COHEREN
  
  config DMA_PERDEV_COHERENT
  	bool
++<<<<<<< HEAD
 +	select DMA_MAYBE_COHERENT
 +
 +config DMA_COHERENT
 +	bool
++=======
+ 	select ARCH_HAS_SETUP_DMA_OPS
+ 	select DMA_NONCOHERENT
++>>>>>>> 347cb6af8710 (dma-mapping: add a kconfig symbol for arch_setup_dma_ops availability)
  
  config DMA_NONCOHERENT
  	bool
diff --cc arch/mips/include/asm/dma-mapping.h
index 886e75a383f2,34de7b17b41b..000000000000
--- a/arch/mips/include/asm/dma-mapping.h
+++ b/arch/mips/include/asm/dma-mapping.h
@@@ -14,17 -8,11 +14,20 @@@ extern const struct dma_map_ops *mips_d
  
  static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)
  {
 -#if defined(CONFIG_MACH_JAZZ)
 -	return &jazz_dma_ops;
 -#else
 -	return NULL;
 +	return mips_dma_map_ops;
 +}
 +
++<<<<<<< HEAD
 +#define arch_setup_dma_ops arch_setup_dma_ops
 +static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,
 +				      u64 size, const struct iommu_ops *iommu,
 +				      bool coherent)
 +{
 +#ifdef CONFIG_DMA_PERDEV_COHERENT
 +	dev->archdata.dma_coherent = coherent;
  #endif
  }
  
++=======
++>>>>>>> 347cb6af8710 (dma-mapping: add a kconfig symbol for arch_setup_dma_ops availability)
  #endif /* _ASM_DMA_MAPPING_H */
* Unmerged path arch/mips/mm/dma-noncoherent.c
* Unmerged path arch/arc/Kconfig
diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 843edfd000be..c5ce9620e8c6 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -11,6 +11,7 @@ config ARM
 	select ARCH_HAS_KCOV
 	select ARCH_HAS_PTE_SPECIAL if ARM_LPAE
 	select ARCH_HAS_PHYS_TO_DMA
+	select ARCH_HAS_SETUP_DMA_OPS
 	select ARCH_HAS_SET_MEMORY
 	select ARCH_HAS_STRICT_KERNEL_RWX if MMU && !XIP_KERNEL
 	select ARCH_HAS_STRICT_MODULE_RWX if MMU
* Unmerged path arch/arm/include/asm/dma-mapping.h
diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index 0d2c3c889667..8c40a7dae6f8 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -22,6 +22,7 @@ config ARM64
 	select ARCH_HAS_KCOV
 	select ARCH_HAS_MEMBARRIER_SYNC_CORE
 	select ARCH_HAS_PTE_SPECIAL
+	select ARCH_HAS_SETUP_DMA_OPS
 	select ARCH_HAS_SET_MEMORY
 	select ARCH_HAS_SG_CHAIN
 	select ARCH_HAS_STRICT_KERNEL_RWX
diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h
index 95dbf3ef735a..de96507ee2c1 100644
--- a/arch/arm64/include/asm/dma-mapping.h
+++ b/arch/arm64/include/asm/dma-mapping.h
@@ -29,10 +29,6 @@ static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)
 	return NULL;
 }
 
-void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
-			const struct iommu_ops *iommu, bool coherent);
-#define arch_setup_dma_ops	arch_setup_dma_ops
-
 #ifdef CONFIG_IOMMU_DMA
 void arch_teardown_dma_ops(struct device *dev);
 #define arch_teardown_dma_ops	arch_teardown_dma_ops
* Unmerged path arch/mips/Kconfig
* Unmerged path arch/mips/include/asm/dma-mapping.h
* Unmerged path arch/mips/mm/dma-noncoherent.c
diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h
index 5f446033278a..1e67de4abd56 100644
--- a/include/linux/dma-mapping.h
+++ b/include/linux/dma-mapping.h
@@ -678,11 +678,15 @@ static inline int dma_coerce_mask_and_coherent(struct device *dev, u64 mask)
 	return dma_set_mask_and_coherent(dev, mask);
 }
 
-#ifndef arch_setup_dma_ops
+#ifdef CONFIG_ARCH_HAS_SETUP_DMA_OPS
+void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
+		const struct iommu_ops *iommu, bool coherent);
+#else
 static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,
-				      u64 size, const struct iommu_ops *iommu,
-				      bool coherent) { }
-#endif
+		u64 size, const struct iommu_ops *iommu, bool coherent)
+{
+}
+#endif /* CONFIG_ARCH_HAS_SETUP_DMA_OPS */
 
 #ifndef arch_teardown_dma_ops
 static inline void arch_teardown_dma_ops(struct device *dev) { }
diff --git a/kernel/dma/Kconfig b/kernel/dma/Kconfig
index 7154428a9ca5..ff3ff219dbb1 100644
--- a/kernel/dma/Kconfig
+++ b/kernel/dma/Kconfig
@@ -19,6 +19,9 @@ config ARCH_HAS_DMA_COHERENCE_H
 config HAVE_GENERIC_DMA_COHERENT
 	bool
 
+config ARCH_HAS_SETUP_DMA_OPS
+	bool
+
 config ARCH_HAS_SYNC_DMA_FOR_DEVICE
 	bool
 
