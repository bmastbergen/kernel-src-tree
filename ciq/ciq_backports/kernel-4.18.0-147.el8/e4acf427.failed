taprio: add null check on sched_nest to avoid potential null pointer dereference

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Colin Ian King <colin.king@canonical.com>
commit e4acf4274169fb6106d4ac854c87071b9764a00d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/e4acf427.failed

The call to nla_nest_start_noflag can return a null pointer and currently
this is not being checked and this can lead to a null pointer dereference
when the null pointer sched_nest is passed to function nla_nest_end. Fix
this by adding in a null pointer check.

Addresses-Coverity: ("Dereference null return value")
Fixes: a3d43c0d56f1 ("taprio: Add support adding an admin schedule")
	Signed-off-by: Colin Ian King <colin.king@canonical.com>
	Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e4acf4274169fb6106d4ac854c87071b9764a00d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_taprio.c
diff --cc net/sched/sch_taprio.c
index fc147ade41b9,9ecfb8f5902a..000000000000
--- a/net/sched/sch_taprio.c
+++ b/net/sched/sch_taprio.c
@@@ -899,16 -1080,23 +899,30 @@@ static int taprio_dump(struct Qdisc *sc
  	if (nla_put_s32(skb, TCA_TAPRIO_ATTR_SCHED_CLOCKID, q->clockid))
  		goto options_error;
  
 -	if (oper && dump_schedule(skb, oper))
 +	entry_list = nla_nest_start(skb, TCA_TAPRIO_ATTR_SCHED_ENTRY_LIST);
 +	if (!entry_list)
  		goto options_error;
  
 -	if (!admin)
 -		goto done;
 +	list_for_each_entry(entry, &q->entries, list) {
 +		if (dump_entry(skb, entry) < 0)
 +			goto options_error;
 +	}
  
++<<<<<<< HEAD
 +	nla_nest_end(skb, entry_list);
++=======
+ 	sched_nest = nla_nest_start_noflag(skb, TCA_TAPRIO_ATTR_ADMIN_SCHED);
+ 	if (!sched_nest)
+ 		goto options_error;
+ 
+ 	if (dump_schedule(skb, admin))
+ 		goto admin_error;
+ 
+ 	nla_nest_end(skb, sched_nest);
+ 
+ done:
+ 	rcu_read_unlock();
++>>>>>>> e4acf4274169 (taprio: add null check on sched_nest to avoid potential null pointer dereference)
  
  	return nla_nest_end(skb, nest);
  
* Unmerged path net/sched/sch_taprio.c
