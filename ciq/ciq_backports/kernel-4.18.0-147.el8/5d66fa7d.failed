bpf: fix direct packet access for flow dissector progs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit 5d66fa7d9e9e9399ddfdc530f352dd6f7c724485
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/5d66fa7d.failed

Commit d58e468b1112 ("flow_dissector: implements flow dissector BPF
hook") added direct packet access for skbs in may_access_direct_pkt_data()
function where this enables read and write access to the skb->data. This
is buggy because without a prologue generator such as bpf_unclone_prologue()
we would allow for writing into cloned skbs. Original intention might have
been to only allow read access where this is not needed (similar as the
flow_dissector_func_proto() indicates which enables only bpf_skb_load_bytes()
as well), therefore this patch fixes it to restrict to read-only.

Fixes: d58e468b1112 ("flow_dissector: implements flow dissector BPF hook")
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Cc: Petar Penkov <ppenkov@google.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit 5d66fa7d9e9e9399ddfdc530f352dd6f7c724485)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/verifier.c
diff --cc kernel/bpf/verifier.c
index 4e125a3d150f,b0cc8f2ff95f..000000000000
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@@ -1245,7 -1391,8 +1246,12 @@@ static bool may_access_direct_pkt_data(
  	case BPF_PROG_TYPE_LWT_IN:
  	case BPF_PROG_TYPE_LWT_OUT:
  	case BPF_PROG_TYPE_LWT_SEG6LOCAL:
++<<<<<<< HEAD
 +		/* dst_input() and dst_output() can't write for now */
++=======
+ 	case BPF_PROG_TYPE_SK_REUSEPORT:
+ 	case BPF_PROG_TYPE_FLOW_DISSECTOR:
++>>>>>>> 5d66fa7d9e9e (bpf: fix direct packet access for flow dissector progs)
  		if (t == BPF_WRITE)
  			return false;
  		/* fallthrough */
* Unmerged path kernel/bpf/verifier.c
