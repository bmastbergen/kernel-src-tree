net/mlx5e: Increase VF representors' SQ size to 128

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Gavi Teitz <gavi@mellanox.com>
commit 4c8fb2986d44c5a75949a88ac61deec0ed50a542
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/4c8fb298.failed

The default size for the VF representors' SQ was too small to handle high
packet rates. Doubling the size from 64 to 128 drastically improves the
packet rate under stress (by about 50%), whereas increasing the size
beyond 128 has not shown to make any further difference.

The impact of the SQ size was measured with UDP traffic, in the following
topology: TG <-> PF <-> TC forwarding <-> VF representor <-> VF in VM
over a single core processing bi-directional traffic, with the following
results:

                                  SQ size of 64:     SQ size of 128:
Packet rate for 64B UDP packets:    860 [Kpps]         1280 [Kpps]
Packet rate for 114B VxLan
encapsulated UDP packets:           320 [Kpps]          500 [Kpps]

	Signed-off-by: Gavi Teitz <gavi@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 4c8fb2986d44c5a75949a88ac61deec0ed50a542)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 58cddf0a96a7,18d0f4f7537b..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -42,11 -42,11 +42,16 @@@
  #include "en.h"
  #include "en_rep.h"
  #include "en_tc.h"
 -#include "en/tc_tun.h"
  #include "fs_core.h"
  
++<<<<<<< HEAD
 +#define MLX5E_REP_PARAMS_LOG_SQ_SIZE \
 +	max(0x6, MLX5E_PARAMS_MINIMUM_LOG_SQ_SIZE)
 +#define MLX5E_REP_PARAMS_DEF_NUM_CHANNELS 1
++=======
+ #define MLX5E_REP_PARAMS_DEF_LOG_SQ_SIZE \
+ 	max(0x7, MLX5E_PARAMS_MINIMUM_LOG_SQ_SIZE)
++>>>>>>> 4c8fb2986d44 (net/mlx5e: Increase VF representors' SQ size to 128)
  
  static const char mlx5e_rep_driver_name[] = "mlx5e_rep";
  
@@@ -1098,9 -1328,15 +1103,19 @@@ static void mlx5e_build_rep_params(stru
  					 MLX5_CQ_PERIOD_MODE_START_FROM_CQE :
  					 MLX5_CQ_PERIOD_MODE_START_FROM_EQE;
  
 -	params = &priv->channels.params;
  	params->hard_mtu    = MLX5E_ETH_HARD_MTU;
++<<<<<<< HEAD
 +	params->sw_mtu      = mtu;
 +	params->log_sq_size = MLX5E_REP_PARAMS_LOG_SQ_SIZE;
++=======
+ 	params->sw_mtu      = netdev->mtu;
+ 
+ 	/* SQ */
+ 	if (rep->vport == FDB_UPLINK_VPORT)
+ 		params->log_sq_size = MLX5E_PARAMS_DEFAULT_LOG_SQ_SIZE;
+ 	else
+ 		params->log_sq_size = MLX5E_REP_PARAMS_DEF_LOG_SQ_SIZE;;
++>>>>>>> 4c8fb2986d44 (net/mlx5e: Increase VF representors' SQ size to 128)
  
  	/* RQ */
  	mlx5e_build_rq_params(mdev, params);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
