net: ethernet: Add helper for set_pauseparam for Pause

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [netdrv] ethernet: Add helper for set_pauseparam for Pause (Petr Oros) [1691720]
Rebuild_FUZZ: 95.15%
commit-author Andrew Lunn <andrew@lunn.ch>
commit 0c122405d4c3ec638ba00865c872ec5a3ed1a6c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/0c122405.failed

ethtool can be used to enable/disable pause. Add a helper to configure
the PHY when Pause is supported.

	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0c122405d4c3ec638ba00865c872ec5a3ed1a6c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bcm63xx_enet.c
#	drivers/net/phy/phy_device.c
#	include/linux/phy.h
diff --cc drivers/net/ethernet/broadcom/bcm63xx_enet.c
index 897302adc38e,02e7dfc1a2ef..000000000000
--- a/drivers/net/ethernet/broadcom/bcm63xx_enet.c
+++ b/drivers/net/ethernet/broadcom/bcm63xx_enet.c
@@@ -890,19 -890,10 +890,26 @@@ static int bcm_enet_open(struct net_dev
  		}
  
  		/* mask with MAC supported features */
++<<<<<<< HEAD
 +		phydev->supported &= (SUPPORTED_10baseT_Half |
 +				      SUPPORTED_10baseT_Full |
 +				      SUPPORTED_100baseT_Half |
 +				      SUPPORTED_100baseT_Full |
 +				      SUPPORTED_Autoneg |
 +				      SUPPORTED_Pause |
 +				      SUPPORTED_MII);
 +		phydev->advertising = phydev->supported;
 +
 +		if (priv->pause_auto && priv->pause_rx && priv->pause_tx)
 +			phydev->advertising |= SUPPORTED_Pause;
 +		else
 +			phydev->advertising &= ~SUPPORTED_Pause;
++=======
+ 		phy_support_sym_pause(phydev);
+ 		phy_set_max_speed(phydev, SPEED_100);
+ 		phy_set_sym_pause(phydev, priv->pause_rx, priv->pause_rx,
+ 				  priv->pause_auto);
++>>>>>>> 0c122405d4c3 (net: ethernet: Add helper for set_pauseparam for Pause)
  
  		phy_attached_info(phydev);
  
diff --cc drivers/net/phy/phy_device.c
index b9f5f40a7ac1,de95f1e072e9..000000000000
--- a/drivers/net/phy/phy_device.c
+++ b/drivers/net/phy/phy_device.c
@@@ -1757,6 -1765,104 +1757,107 @@@ int phy_set_max_speed(struct phy_devic
  }
  EXPORT_SYMBOL(phy_set_max_speed);
  
++<<<<<<< HEAD
++=======
+ /**
+  * phy_remove_link_mode - Remove a supported link mode
+  * @phydev: phy_device structure to remove link mode from
+  * @link_mode: Link mode to be removed
+  *
+  * Description: Some MACs don't support all link modes which the PHY
+  * does.  e.g. a 1G MAC often does not support 1000Half. Add a helper
+  * to remove a link mode.
+  */
+ void phy_remove_link_mode(struct phy_device *phydev, u32 link_mode)
+ {
+ 	WARN_ON(link_mode > 31);
+ 
+ 	phydev->supported &= ~BIT(link_mode);
+ 	phydev->advertising = phydev->supported;
+ }
+ EXPORT_SYMBOL(phy_remove_link_mode);
+ 
+ /**
+  * phy_support_sym_pause - Enable support of symmetrical pause
+  * @phydev: target phy_device struct
+  *
+  * Description: Called by the MAC to indicate is supports symmetrical
+  * Pause, but not asym pause.
+  */
+ void phy_support_sym_pause(struct phy_device *phydev)
+ {
+ 	phydev->supported |= SUPPORTED_Pause;
+ 	phydev->advertising = phydev->supported;
+ }
+ EXPORT_SYMBOL(phy_support_sym_pause);
+ 
+ /**
+  * phy_support_asym_pause - Enable support of asym pause
+  * @phydev: target phy_device struct
+  *
+  * Description: Called by the MAC to indicate is supports Asym Pause.
+  */
+ void phy_support_asym_pause(struct phy_device *phydev)
+ {
+ 	phydev->supported |= SUPPORTED_Pause | SUPPORTED_Asym_Pause;
+ 	phydev->advertising = phydev->supported;
+ }
+ EXPORT_SYMBOL(phy_support_asym_pause);
+ 
+ /**
+  * phy_set_sym_pause - Configure symmetric Pause
+  * @phydev: target phy_device struct
+  * @rx: Receiver Pause is supported
+  * @tx: Transmit Pause is supported
+  * @autoneg: Auto neg should be used
+  *
+  * Description: Configure advertised Pause support depending on if
+  * receiver pause and pause auto neg is supported. Generally called
+  * from the set_pauseparam .ndo.
+  */
+ void phy_set_sym_pause(struct phy_device *phydev, bool rx, bool tx,
+ 		       bool autoneg)
+ {
+ 	phydev->supported &= ~SUPPORTED_Pause;
+ 
+ 	if (rx && tx && autoneg)
+ 		phydev->supported |= SUPPORTED_Pause;
+ 
+ 	phydev->advertising = phydev->supported;
+ }
+ EXPORT_SYMBOL(phy_set_sym_pause);
+ 
+ /**
+  * phy_set_asym_pause - Configure Pause and Asym Pause
+  * @phydev: target phy_device struct
+  * @rx: Receiver Pause is supported
+  * @tx: Transmit Pause is supported
+  *
+  * Description: Configure advertised Pause support depending on if
+  * transmit and receiver pause is supported. If there has been a
+  * change in adverting, trigger a new autoneg. Generally called from
+  * the set_pauseparam .ndo.
+  */
+ void phy_set_asym_pause(struct phy_device *phydev, bool rx, bool tx)
+ {
+ 	u16 oldadv = phydev->advertising;
+ 	u16 newadv = oldadv &= ~(SUPPORTED_Pause | SUPPORTED_Asym_Pause);
+ 
+ 	if (rx)
+ 		newadv |= SUPPORTED_Pause | SUPPORTED_Asym_Pause;
+ 	if (tx)
+ 		newadv ^= SUPPORTED_Asym_Pause;
+ 
+ 	if (oldadv != newadv) {
+ 		phydev->advertising = newadv;
+ 
+ 		if (phydev->autoneg)
+ 			phy_start_aneg(phydev);
+ 	}
+ }
+ EXPORT_SYMBOL(phy_set_asym_pause);
+ 
++>>>>>>> 0c122405d4c3 (net: ethernet: Add helper for set_pauseparam for Pause)
  static void of_set_phy_supported(struct phy_device *phydev)
  {
  	struct device_node *node = phydev->mdio.dev.of_node;
diff --cc include/linux/phy.h
index 075c2f770d3e,8521391ebb20..000000000000
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@@ -1039,6 -1049,12 +1039,15 @@@ int phy_mii_ioctl(struct phy_device *ph
  int phy_start_interrupts(struct phy_device *phydev);
  void phy_print_status(struct phy_device *phydev);
  int phy_set_max_speed(struct phy_device *phydev, u32 max_speed);
++<<<<<<< HEAD
++=======
+ void phy_remove_link_mode(struct phy_device *phydev, u32 link_mode);
+ void phy_support_sym_pause(struct phy_device *phydev);
+ void phy_support_asym_pause(struct phy_device *phydev);
+ void phy_set_sym_pause(struct phy_device *phydev, bool rx, bool tx,
+ 		       bool autoneg);
+ void phy_set_asym_pause(struct phy_device *phydev, bool rx, bool tx);
++>>>>>>> 0c122405d4c3 (net: ethernet: Add helper for set_pauseparam for Pause)
  
  int phy_register_fixup(const char *bus_id, u32 phy_uid, u32 phy_uid_mask,
  		       int (*run)(struct phy_device *));
* Unmerged path drivers/net/ethernet/broadcom/bcm63xx_enet.c
diff --git a/drivers/net/ethernet/freescale/fec_main.c b/drivers/net/ethernet/freescale/fec_main.c
index c729665107f5..6adffb3ea716 100644
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@ -2229,13 +2229,8 @@ static int fec_enet_set_pauseparam(struct net_device *ndev,
 	fep->pause_flag |= pause->rx_pause ? FEC_PAUSE_FLAG_ENABLE : 0;
 	fep->pause_flag |= pause->autoneg ? FEC_PAUSE_FLAG_AUTONEG : 0;
 
-	if (pause->rx_pause || pause->autoneg) {
-		ndev->phydev->supported |= ADVERTISED_Pause;
-		ndev->phydev->advertising |= ADVERTISED_Pause;
-	} else {
-		ndev->phydev->supported &= ~ADVERTISED_Pause;
-		ndev->phydev->advertising &= ~ADVERTISED_Pause;
-	}
+	phy_set_sym_pause(ndev->phydev, pause->rx_pause, pause->tx_pause,
+			  pause->autoneg);
 
 	if (pause->autoneg) {
 		if (netif_running(ndev))
* Unmerged path drivers/net/phy/phy_device.c
* Unmerged path include/linux/phy.h
