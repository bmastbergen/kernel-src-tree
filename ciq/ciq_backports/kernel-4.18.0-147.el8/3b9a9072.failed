ipmi: fix sleep-in-atomic in free_user at cleanup SRCU user->release_barrier

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Corey Minyard <cminyard@mvista.com>
commit 3b9a907223d7f6b9d1dadea29436842ae9bcd76d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/3b9a9072.failed

free_user() could be called in atomic context.

This patch pushed the free operation off into a workqueue.

Example:

 BUG: sleeping function called from invalid context at kernel/workqueue.c:2856
 in_atomic(): 1, irqs_disabled(): 0, pid: 177, name: ksoftirqd/27
 CPU: 27 PID: 177 Comm: ksoftirqd/27 Not tainted 4.19.25-3 #1
 Hardware name: AIC 1S-HV26-08/MB-DPSB04-06, BIOS IVYBV060 10/21/2015
 Call Trace:
  dump_stack+0x5c/0x7b
  ___might_sleep+0xec/0x110
  __flush_work+0x48/0x1f0
  ? try_to_del_timer_sync+0x4d/0x80
  _cleanup_srcu_struct+0x104/0x140
  free_user+0x18/0x30 [ipmi_msghandler]
  ipmi_free_recv_msg+0x3a/0x50 [ipmi_msghandler]
  deliver_response+0xbd/0xd0 [ipmi_msghandler]
  deliver_local_response+0xe/0x30 [ipmi_msghandler]
  handle_one_recv_msg+0x163/0xc80 [ipmi_msghandler]
  ? dequeue_entity+0xa0/0x960
  handle_new_recv_msgs+0x15c/0x1f0 [ipmi_msghandler]
  tasklet_action_common.isra.22+0x103/0x120
  __do_softirq+0xf8/0x2d7
  run_ksoftirqd+0x26/0x50
  smpboot_thread_fn+0x11d/0x1e0
  kthread+0x103/0x140
  ? sort_range+0x20/0x20
  ? kthread_destroy_worker+0x40/0x40
  ret_from_fork+0x1f/0x40

Fixes: 77f8269606bf ("ipmi: fix use-after-free of user->release_barrier.rda")

	Reported-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
	Signed-off-by: Corey Minyard <cminyard@mvista.com>
	Cc: stable@vger.kernel.org # 5.0
	Cc: Yang Yingliang <yangyingliang@huawei.com>
(cherry picked from commit 3b9a907223d7f6b9d1dadea29436842ae9bcd76d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/ipmi/ipmi_msghandler.c
diff --cc drivers/char/ipmi/ipmi_msghandler.c
index 3adb327233c0,00bf4b17edbf..000000000000
--- a/drivers/char/ipmi/ipmi_msghandler.c
+++ b/drivers/char/ipmi/ipmi_msghandler.c
@@@ -1069,6 -1160,14 +1072,17 @@@ static int intf_err_seq(struct ipmi_sm
  	return rv;
  }
  
++<<<<<<< HEAD
++=======
+ static void free_user_work(struct work_struct *work)
+ {
+ 	struct ipmi_user *user = container_of(work, struct ipmi_user,
+ 					      remove_work);
+ 
+ 	cleanup_srcu_struct(&user->release_barrier);
+ 	kfree(user);
+ }
++>>>>>>> 3b9a907223d7 (ipmi: fix sleep-in-atomic in free_user at cleanup SRCU user->release_barrier)
  
  int ipmi_create_user(unsigned int          if_num,
  		     const struct ipmi_user_hndl *handler,
* Unmerged path drivers/char/ipmi/ipmi_msghandler.c
