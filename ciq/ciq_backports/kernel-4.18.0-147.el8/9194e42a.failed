drm/i915: Make combo PHY DDI macro definitions consistent for ICL and CNL

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Aditya Swarup <aditya.swarup@intel.com>
commit 9194e42a1837b2cbf80418d6fd98f00bf3852f5f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/9194e42a.failed

Organize combo PHY DDI macro definitions semantically based on dword,
lane and port (in this order).

	Cc: Clint Taylor <clinton.a.taylor@intel.com>
	Cc: Imre Deak <imre.deak@intel.com>
	Cc: Jani Nikula <jani.nikula@linux.intel.com>
	Signed-off-by: Aditya Swarup <aditya.swarup@intel.com>
	Reviewed-by: Manasi Navare <manasi.d.navare@intel.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20190128220012.13122-2-aditya.swarup@intel.com
(cherry picked from commit 9194e42a1837b2cbf80418d6fd98f00bf3852f5f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_reg.h
#	drivers/gpu/drm/i915/icl_dsi.c
#	drivers/gpu/drm/i915/intel_ddi.c
diff --cc drivers/gpu/drm/i915/i915_reg.h
index a78c6ef1f608,21aced06228a..000000000000
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@@ -1776,24 -1886,15 +1776,36 @@@ enum i915_power_well_id 
  
  #define _CNL_PORT_TX_DW4_LN0_AE		0x162450
  #define _CNL_PORT_TX_DW4_LN1_AE		0x1624D0
++<<<<<<< HEAD
 +#define CNL_PORT_TX_DW4_GRP(port)	_MMIO(_CNL_PORT_TX_DW_GRP((port), 4))
 +#define CNL_PORT_TX_DW4_LN0(port)	_MMIO(_CNL_PORT_TX_DW_LN0((port), 4))
 +#define CNL_PORT_TX_DW4_LN(port, ln)   _MMIO(_CNL_PORT_TX_DW_LN0((port), 4) + \
 +					     (ln * (_CNL_PORT_TX_DW4_LN1_AE - \
 +						    _CNL_PORT_TX_DW4_LN0_AE)))
 +#define _ICL_PORT_TX_DW4_GRP_A		0x162690
 +#define _ICL_PORT_TX_DW4_GRP_B		0x6C690
 +#define _ICL_PORT_TX_DW4_LN0_A		0x162890
 +#define _ICL_PORT_TX_DW4_LN1_A		0x162990
 +#define _ICL_PORT_TX_DW4_LN0_B		0x6C890
 +#define ICL_PORT_TX_DW4_GRP(port)	_MMIO_PORT(port, \
 +						   _ICL_PORT_TX_DW4_GRP_A, \
 +						   _ICL_PORT_TX_DW4_GRP_B)
 +#define ICL_PORT_TX_DW4_LN(port, ln)	_MMIO(_PORT(port, \
 +						   _ICL_PORT_TX_DW4_LN0_A, \
 +						   _ICL_PORT_TX_DW4_LN0_B) + \
 +					      (ln * (_ICL_PORT_TX_DW4_LN1_A - \
 +						     _ICL_PORT_TX_DW4_LN0_A)))
++=======
+ #define CNL_PORT_TX_DW4_GRP(port)	_MMIO(_CNL_PORT_TX_DW_GRP(4, (port)))
+ #define CNL_PORT_TX_DW4_LN0(port)	_MMIO(_CNL_PORT_TX_DW_LN0(4, (port)))
+ #define CNL_PORT_TX_DW4_LN(ln, port)   _MMIO(_CNL_PORT_TX_DW_LN0(4, (port)) + \
+ 					   ((ln) * (_CNL_PORT_TX_DW4_LN1_AE - \
+ 						    _CNL_PORT_TX_DW4_LN0_AE)))
+ #define ICL_PORT_TX_DW4_AUX(port)	_MMIO(_ICL_PORT_TX_DW_AUX(4, port))
+ #define ICL_PORT_TX_DW4_GRP(port)	_MMIO(_ICL_PORT_TX_DW_GRP(4, port))
+ #define ICL_PORT_TX_DW4_LN0(port)	_MMIO(_ICL_PORT_TX_DW_LN(4, 0, port))
+ #define ICL_PORT_TX_DW4_LN(ln, port)	_MMIO(_ICL_PORT_TX_DW_LN(4, ln, port))
++>>>>>>> 9194e42a1837 (drm/i915: Make combo PHY DDI macro definitions consistent for ICL and CNL)
  #define   LOADGEN_SELECT		(1 << 31)
  #define   POST_CURSOR_1(x)		((x) << 12)
  #define   POST_CURSOR_1_MASK		(0x3F << 12)
@@@ -1822,8 -1916,12 +1834,17 @@@
  #define   RTERM_SELECT(x)		((x) << 3)
  #define   RTERM_SELECT_MASK		(0x7 << 3)
  
++<<<<<<< HEAD
 +#define CNL_PORT_TX_DW7_GRP(port)	_MMIO(_CNL_PORT_TX_DW_GRP((port), 7))
 +#define CNL_PORT_TX_DW7_LN0(port)	_MMIO(_CNL_PORT_TX_DW_LN0((port), 7))
++=======
+ #define CNL_PORT_TX_DW7_GRP(port)	_MMIO(_CNL_PORT_TX_DW_GRP(7, (port)))
+ #define CNL_PORT_TX_DW7_LN0(port)	_MMIO(_CNL_PORT_TX_DW_LN0(7, (port)))
+ #define ICL_PORT_TX_DW7_AUX(port)	_MMIO(_ICL_PORT_TX_DW_AUX(7, port))
+ #define ICL_PORT_TX_DW7_GRP(port)	_MMIO(_ICL_PORT_TX_DW_GRP(7, port))
+ #define ICL_PORT_TX_DW7_LN0(port)	_MMIO(_ICL_PORT_TX_DW_LN(7, 0, port))
+ #define ICL_PORT_TX_DW7_LN(ln, port)	_MMIO(_ICL_PORT_TX_DW_LN(7, ln, port))
++>>>>>>> 9194e42a1837 (drm/i915: Make combo PHY DDI macro definitions consistent for ICL and CNL)
  #define   N_SCALAR(x)			((x) << 24)
  #define   N_SCALAR_MASK			(0x7F << 24)
  
diff --cc drivers/gpu/drm/i915/intel_ddi.c
index fed26d6e4e27,e196563ffa83..000000000000
--- a/drivers/gpu/drm/i915/intel_ddi.c
+++ b/drivers/gpu/drm/i915/intel_ddi.c
@@@ -2305,12 -2448,20 +2305,19 @@@ static void icl_ddi_combo_vswing_progra
  	/* Program PORT_TX_DW4 */
  	/* We cannot write to GRP. It would overwrite individual loadgen. */
  	for (ln = 0; ln <= 3; ln++) {
- 		val = I915_READ(ICL_PORT_TX_DW4_LN(port, ln));
+ 		val = I915_READ(ICL_PORT_TX_DW4_LN(ln, port));
  		val &= ~(POST_CURSOR_1_MASK | POST_CURSOR_2_MASK |
  			 CURSOR_COEFF_MASK);
++<<<<<<< HEAD
 +		val |= ddi_translations[level].dw4_scaling;
 +		I915_WRITE(ICL_PORT_TX_DW4_LN(port, ln), val);
++=======
+ 		val |= POST_CURSOR_1(ddi_translations[level].dw4_post_cursor_1);
+ 		val |= POST_CURSOR_2(ddi_translations[level].dw4_post_cursor_2);
+ 		val |= CURSOR_COEFF(ddi_translations[level].dw4_cursor_coeff);
+ 		I915_WRITE(ICL_PORT_TX_DW4_LN(ln, port), val);
++>>>>>>> 9194e42a1837 (drm/i915: Make combo PHY DDI macro definitions consistent for ICL and CNL)
  	}
 -
 -	/* Program PORT_TX_DW7 */
 -	val = I915_READ(ICL_PORT_TX_DW7_LN0(port));
 -	val &= ~N_SCALAR_MASK;
 -	val |= N_SCALAR(ddi_translations[level].dw7_n_scalar);
 -	I915_WRITE(ICL_PORT_TX_DW7_GRP(port), val);
  }
  
  static void icl_combo_phy_ddi_vswing_sequence(struct intel_encoder *encoder,
* Unmerged path drivers/gpu/drm/i915/icl_dsi.c
* Unmerged path drivers/gpu/drm/i915/i915_reg.h
* Unmerged path drivers/gpu/drm/i915/icl_dsi.c
* Unmerged path drivers/gpu/drm/i915/intel_ddi.c
