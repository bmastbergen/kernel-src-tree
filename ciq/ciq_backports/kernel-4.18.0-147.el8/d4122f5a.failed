RDMA/core: Allow existing drivers to set one sysfs group per device

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Parav Pandit <parav@mellanox.com>
commit d4122f5abef844112799d2056fdc7bbedbc913f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/d4122f5a.failed

Currently many rdma drivers are creating device attribute files using
device_create_file() with device specific attributes.  Device specific
attributes should be exposed via well defined netlink device attributes in
future.

Introduce an API rdma_set_device_sysfs_group() for existing drivers to set
a group for sysfs attributes for legacy.

This API is only for exposing legacy attributes which existed for sometime
now.  New drivers should not be using this API and rather follow netlink
path.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit d4122f5abef844112799d2056fdc7bbedbc913f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/rdma/ib_verbs.h
diff --cc include/rdma/ib_verbs.h
index 83b0a61f6373,b17eea0373cb..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2558,13 -2537,15 +2558,23 @@@ struct ib_device 
  					unsigned char name_assign_type,
  					void (*setup)(struct net_device *));
  
 +	int (*rdma_netdev_get_params)(struct ib_device *device, u8 port_num,
 +				      enum rdma_netdev_t type,
 +				      struct rdma_netdev_alloc_params *params);
 +
  	struct module               *owner;
  	struct device                dev;
++<<<<<<< HEAD
 +	struct kobject               *ports_parent;
++=======
+ 	/* First group for device attributes,
+ 	 * Second group for driver provided attributes (optional).
+ 	 * It is NULL terminated array.
+ 	 */
+ 	const struct attribute_group	*groups[3];
+ 
+ 	struct kobject			*ports_kobj;
++>>>>>>> d4122f5abef8 (RDMA/core: Allow existing drivers to set one sysfs group per device)
  	struct list_head             port_list;
  
  	enum {
@@@ -4144,15 -4190,31 +4154,43 @@@ ib_get_vector_affinity(struct ib_devic
   */
  void rdma_roce_rescan_device(struct ib_device *ibdev);
  
 -struct ib_ucontext *ib_uverbs_get_ucontext(struct ib_uverbs_file *ufile);
 +struct net_device *rdma_alloc_netdev(struct ib_device *device, u8 port_num,
 +				     enum rdma_netdev_t type, const char *name,
 +				     unsigned char name_assign_type,
 +				     void (*setup)(struct net_device *));
 +
 +int rdma_init_netdev(struct ib_device *device, u8 port_num,
 +		     enum rdma_netdev_t type, const char *name,
 +		     unsigned char name_assign_type,
 +		     void (*setup)(struct net_device *),
 +		     struct net_device *netdev);
  
++<<<<<<< HEAD
++=======
+ int uverbs_destroy_def_handler(struct ib_uverbs_file *file,
+ 			       struct uverbs_attr_bundle *attrs);
+ 
+ /**
+  * rdma_set_device_sysfs_group - Set device attributes group to have
+  *				 driver specific sysfs entries at
+  *				 for infiniband class.
+  *
+  * @device:	device pointer for which attributes to be created
+  * @group:	Pointer to group which should be added when device
+  *		is registered with sysfs.
+  * rdma_set_device_sysfs_group() allows existing drivers to expose one
+  * group per device to have sysfs attributes.
+  *
+  * NOTE: New drivers should not make use of this API; instead new device
+  * parameter should be exposed via netlink command. This API and mechanism
+  * exist only for existing drivers.
+  */
+ static inline void
+ rdma_set_device_sysfs_group(struct ib_device *dev,
+ 			    const struct attribute_group *group)
+ {
+ 	dev->groups[1] = group;
+ }
+ 
++>>>>>>> d4122f5abef8 (RDMA/core: Allow existing drivers to set one sysfs group per device)
  #endif /* IB_VERBS_H */
* Unmerged path include/rdma/ib_verbs.h
