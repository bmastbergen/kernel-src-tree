get_maintainer.pl: add -mpath=<path or file> for MAINTAINERS file location

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Joe Perches <joe@perches.com>
commit 5f0baf95b1edfff5eb9b6f571febb859b047de97
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/5f0baf95.failed

Add the ability to have an override for the location of the MAINTAINERS
file.

Miscellanea:

o Properly indent a few lines with leading spaces

Link: http://lkml.kernel.org/r/a86e69195076ed3c4c526fddc76b86c28e0a1e37.camel@perches.com
	Signed-off-by: Joe Perches <joe@perches.com>
	Suggested-by: Don Zickus <dzickus@redhat.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 5f0baf95b1edfff5eb9b6f571febb859b047de97)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	scripts/get_maintainer.pl
diff --cc scripts/get_maintainer.pl
index 69307c28248e,0ebdefe74d5b..000000000000
--- a/scripts/get_maintainer.pl
+++ b/scripts/get_maintainer.pl
@@@ -62,8 -62,7 +62,12 @@@ my $self_test = undef
  my $version = 0;
  my $help = 0;
  my $find_maintainer_files = 0;
++<<<<<<< HEAD
 +my $rh_only = 1;
 +
++=======
+ my $maintainer_path;
++>>>>>>> 5f0baf95b1ed (get_maintainer.pl: add -mpath=<path or file> for MAINTAINERS file location)
  my $vcs_used = 0;
  
  my $exit = 0;
@@@ -388,52 -387,37 +393,73 @@@ sub find_ignore_git 
  read_all_maintainer_files();
  
  sub read_all_maintainer_files {
++<<<<<<< HEAD
 +	my $conf = which_conf(".get_maintainer.MAINTAINERS");
 +	if ( -f $conf) {
 +	    my @conf_args;
 +	    my $add = 0;
 +	    open(my $conffile, '<', "$conf")
 +		or warn "$P: Can't find a readable .get_maintainer.MAINTAINERS file $!\n";
 +	    while (<$conffile>) {
 +		my $line = $_;
 +		if ($line =~ m/^\+/ ) {
 +		    $add = 1;
 +		}
 +		next if ($line =~ m/^\s*#/);
 +		$line =~ s/^\+//g;
 +		$line =~ s/^\-//g;
 +		$line =~ s/\s*\n?$//;
 +		push(@mfiles, $line);
 +	    }
 +	    close($conffile);
 +	    if ($add eq 0) {
 +		foreach my $file (@mfiles) {
 +		     read_maintainer_file("$file");
 +		}
 +		return;
 +	    }
 +	}
 +
 +    if (-d "${lk_path}MAINTAINERS") {
 +        opendir(DIR, "${lk_path}MAINTAINERS") or die $!;
 +        my @files = readdir(DIR);
 +        closedir(DIR);
 +        foreach my $file (@files) {
 +            push(@mfiles, "${lk_path}MAINTAINERS/$file") if ($file !~ /^\./);
 +        }
++=======
+     my $path = "${lk_path}MAINTAINERS";
+     if (defined $maintainer_path) {
+ 	$path = $maintainer_path;
+ 	# Perl Cookbook tilde expansion if necessary
+ 	$path =~ s@^~([^/]*)@ $1 ? (getpwnam($1))[7] : ( $ENV{HOME} || $ENV{LOGDIR} || (getpwuid($<))[7])@ex;
++>>>>>>> 5f0baf95b1ed (get_maintainer.pl: add -mpath=<path or file> for MAINTAINERS file location)
      }
  
-     if ($find_maintainer_files) {
-         find( { wanted => \&find_is_maintainer_file,
-                 preprocess => \&find_ignore_git,
-                 no_chdir => 1,
-         }, "${lk_path}");
+     if (-d $path) {
+ 	$path .= '/' if ($path !~ m@/$@);
+ 	if ($path eq "${lk_path}MAINTAINERS/") {
+ 	    opendir(DIR, "$path") or die $!;
+ 	    my @files = readdir(DIR);
+ 	    closedir(DIR);
+ 	    foreach my $file (@files) {
+ 		push(@mfiles, "$path$file") if ($file !~ /^\./);
+ 	    }
+ 	}
+ 	if ($find_maintainer_files) {
+ 	    find( { wanted => \&find_is_maintainer_file,
+ 		    preprocess => \&find_ignore_git,
+ 		    no_chdir => 1,
+ 		}, "$path");
+ 	}
+     } elsif (-f "$path") {
+ 	push(@mfiles, "$path");
      } else {
-         push(@mfiles, "${lk_path}MAINTAINERS") if -f "${lk_path}MAINTAINERS";
+ 	die "$P: MAINTAINER file not found '$path'\n";
      }
- 
+     die "$P: No MAINTAINER files found in '$path'\n" if (scalar(@mfiles) == 0);
      foreach my $file (@mfiles) {
-         read_maintainer_file("$file");
+ 	read_maintainer_file("$file");
      }
  }
  
* Unmerged path scripts/get_maintainer.pl
