efi/arm: Revert "Defer persistent reservations until after paging_init()"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Ard Biesheuvel <ard.biesheuvel@linaro.org>
commit 582a32e708823e5957fd73ccd78dc4a9e49d21ea
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/582a32e7.failed

This reverts commit eff896288872d687d9662000ec9ae11b6d61766f, which
deferred the processing of persistent memory reservations to a point
where the memory may have already been allocated and overwritten,
defeating the purpose.

	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Acked-by: Will Deacon <will.deacon@arm.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Marc Zyngier <marc.zyngier@arm.com>
	Cc: Mike Rapoport <rppt@linux.ibm.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-arm-kernel@lists.infradead.org
	Cc: linux-efi@vger.kernel.org
Link: http://lkml.kernel.org/r/20190215123333.21209-3-ard.biesheuvel@linaro.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 582a32e708823e5957fd73ccd78dc4a9e49d21ea)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/efi.h
diff --cc include/linux/efi.h
index 4cb28c74638c,28604a8d0aa9..000000000000
--- a/include/linux/efi.h
+++ b/include/linux/efi.h
@@@ -1199,9 -1198,6 +1199,12 @@@ static inline bool efi_enabled(int feat
  extern void efi_reboot(enum reboot_mode reboot_mode, const char *__unused);
  
  extern bool efi_is_table_address(unsigned long phys_addr);
++<<<<<<< HEAD
 +extern void __init efi_set_secure_boot(enum efi_secureboot_mode mode);
 +
 +extern int efi_apply_persistent_mem_reservations(void);
++=======
++>>>>>>> 582a32e70882 (efi/arm: Revert "Defer persistent reservations until after paging_init()")
  #else
  static inline bool efi_enabled(int feature)
  {
@@@ -1220,12 -1216,6 +1223,15 @@@ static inline bool efi_is_table_address
  {
  	return false;
  }
++<<<<<<< HEAD
 +
 +static inline int efi_apply_persistent_mem_reservations(void)
 +{
 +	return 0;
 +}
 +static inline void efi_set_secure_boot(enum efi_secureboot_mode mode) {}
++=======
++>>>>>>> 582a32e70882 (efi/arm: Revert "Defer persistent reservations until after paging_init()")
  #endif
  
  extern int efi_status_to_err(efi_status_t status);
diff --git a/arch/arm64/kernel/setup.c b/arch/arm64/kernel/setup.c
index ceceb7529f37..b3354ff94e79 100644
--- a/arch/arm64/kernel/setup.c
+++ b/arch/arm64/kernel/setup.c
@@ -313,7 +313,6 @@ void __init setup_arch(char **cmdline_p)
 	arm64_memblock_init();
 
 	paging_init();
-	efi_apply_persistent_mem_reservations();
 
 	acpi_table_upgrade();
 
diff --git a/drivers/firmware/efi/efi.c b/drivers/firmware/efi/efi.c
index 7907e2e6cedb..b6e569a9a368 100644
--- a/drivers/firmware/efi/efi.c
+++ b/drivers/firmware/efi/efi.c
@@ -598,11 +598,7 @@ int __init efi_config_parse_tables(void *config_tables, int count, int sz,
 
 		early_memunmap(tbl, sizeof(*tbl));
 	}
-	return 0;
-}
 
-int __init efi_apply_persistent_mem_reservations(void)
-{
 	if (efi.mem_reserve != EFI_INVALID_TABLE_ADDR) {
 		unsigned long prsv = efi.mem_reserve;
 
diff --git a/drivers/firmware/efi/libstub/arm-stub.c b/drivers/firmware/efi/libstub/arm-stub.c
index c2e00f99a472..1acf0fe72546 100644
--- a/drivers/firmware/efi/libstub/arm-stub.c
+++ b/drivers/firmware/efi/libstub/arm-stub.c
@@ -100,9 +100,6 @@ void install_memreserve_table(efi_system_table_t *sys_table_arg)
 	efi_guid_t memreserve_table_guid = LINUX_EFI_MEMRESERVE_TABLE_GUID;
 	efi_status_t status;
 
-	if (IS_ENABLED(CONFIG_ARM))
-		return;
-
 	status = efi_call_early(allocate_pool, EFI_LOADER_DATA, sizeof(*rsv),
 				(void **)&rsv);
 	if (status != EFI_SUCCESS) {
* Unmerged path include/linux/efi.h
