nvme: properly propagate errors in nvme_mpath_init

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Susobhan Dey <susobhan.dey@gmail.com>
commit bb830add192e9d8338082c0fc2c209e23b43d865
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/bb830add.failed

	Signed-off-by: Susobhan Dey <susobhan.dey@gmail.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit bb830add192e9d8338082c0fc2c209e23b43d865)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/multipath.c
diff --cc drivers/nvme/host/multipath.c
index 1b128a2a399e,9fe3fff818b8..000000000000
--- a/drivers/nvme/host/multipath.c
+++ b/drivers/nvme/host/multipath.c
@@@ -228,3 -506,54 +228,57 @@@ void nvme_mpath_remove_disk(struct nvme
  	blk_cleanup_queue(head->disk->queue);
  	put_disk(head->disk);
  }
++<<<<<<< HEAD
++=======
+ 
+ int nvme_mpath_init(struct nvme_ctrl *ctrl, struct nvme_id_ctrl *id)
+ {
+ 	int error;
+ 
+ 	if (!nvme_ctrl_use_ana(ctrl))
+ 		return 0;
+ 
+ 	ctrl->anacap = id->anacap;
+ 	ctrl->anatt = id->anatt;
+ 	ctrl->nanagrpid = le32_to_cpu(id->nanagrpid);
+ 	ctrl->anagrpmax = le32_to_cpu(id->anagrpmax);
+ 
+ 	mutex_init(&ctrl->ana_lock);
+ 	timer_setup(&ctrl->anatt_timer, nvme_anatt_timeout, 0);
+ 	ctrl->ana_log_size = sizeof(struct nvme_ana_rsp_hdr) +
+ 		ctrl->nanagrpid * sizeof(struct nvme_ana_group_desc);
+ 	if (!(ctrl->anacap & (1 << 6)))
+ 		ctrl->ana_log_size += ctrl->max_namespaces * sizeof(__le32);
+ 
+ 	if (ctrl->ana_log_size > ctrl->max_hw_sectors << SECTOR_SHIFT) {
+ 		dev_err(ctrl->device,
+ 			"ANA log page size (%zd) larger than MDTS (%d).\n",
+ 			ctrl->ana_log_size,
+ 			ctrl->max_hw_sectors << SECTOR_SHIFT);
+ 		dev_err(ctrl->device, "disabling ANA support.\n");
+ 		return 0;
+ 	}
+ 
+ 	INIT_WORK(&ctrl->ana_work, nvme_ana_work);
+ 	ctrl->ana_log_buf = kmalloc(ctrl->ana_log_size, GFP_KERNEL);
+ 	if (!ctrl->ana_log_buf) {
+ 		error = -ENOMEM;
+ 		goto out;
+ 	}
+ 
+ 	error = nvme_read_ana_log(ctrl, true);
+ 	if (error)
+ 		goto out_free_ana_log_buf;
+ 	return 0;
+ out_free_ana_log_buf:
+ 	kfree(ctrl->ana_log_buf);
+ out:
+ 	return error;
+ }
+ 
+ void nvme_mpath_uninit(struct nvme_ctrl *ctrl)
+ {
+ 	kfree(ctrl->ana_log_buf);
+ }
+ 
++>>>>>>> bb830add192e (nvme: properly propagate errors in nvme_mpath_init)
* Unmerged path drivers/nvme/host/multipath.c
