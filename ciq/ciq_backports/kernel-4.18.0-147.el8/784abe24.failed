net: Add decrypted field to skb

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
Rebuild_CHGLOG: - [net] Add decrypted field to skb (Ivan Vecera) [1710366]
Rebuild_FUZZ: 91.23%
commit-author Boris Pismenny <borisp@mellanox.com>
commit 784abe24c903b093af04cf1a043140faa556cad7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/784abe24.failed

The decrypted bit is propogated to cloned/copied skbs.
This will be used later by the inline crypto receive side offload
of tls.

	Signed-off-by: Boris Pismenny <borisp@mellanox.com>
	Signed-off-by: Ilya Lesokhin <ilyal@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 784abe24c903b093af04cf1a043140faa556cad7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/skbuff.h
diff --cc include/linux/skbuff.h
index 6267c75de29e,3ceb8dcc54da..000000000000
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@@ -634,7 -630,7 +634,11 @@@ typedef unsigned char *sk_buff_data_t
   *	@hash: the packet hash
   *	@queue_mapping: Queue mapping for multiqueue devices
   *	@xmit_more: More SKBs are pending for this queue
++<<<<<<< HEAD
 + *	@pfmemalloc: skbuff was allocated from PFMEMALLOC reserves
++=======
+  *	@decrypted: Decrypted SKB
++>>>>>>> 784abe24c903 (net: Add decrypted field to skb)
   *	@ndisc_nodetype: router type (from link layer)
   *	@ooo_okay: allow the mapping of a socket to a queue to be changed
   *	@l4_hash: indicate hash is a canonical 4-tuple hash over transport
@@@ -743,7 -737,11 +747,15 @@@ struct sk_buff 
  				peeked:1,
  				head_frag:1,
  				xmit_more:1,
++<<<<<<< HEAD
 +				pfmemalloc:1;
++=======
+ #ifdef CONFIG_TLS_DEVICE
+ 				decrypted:1;
+ #else
+ 				__unused:1;
+ #endif
++>>>>>>> 784abe24c903 (net: Add decrypted field to skb)
  
  	/* fields enclosed in headers_start/headers_end are copied
  	 * using a single memcpy() in __copy_skb_header()
* Unmerged path include/linux/skbuff.h
diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 55d6d0821eae..a7e42934ab42 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -805,6 +805,9 @@ static void __copy_skb_header(struct sk_buff *new, const struct sk_buff *old)
 	 * It is not yet because we do not want to have a 16 bit hole
 	 */
 	new->queue_mapping = old->queue_mapping;
+#ifdef CONFIG_TLS_DEVICE
+	new->decrypted = old->decrypted;
+#endif
 
 	memcpy(&new->headers_start, &old->headers_start,
 	       offsetof(struct sk_buff, headers_end) -
@@ -869,6 +872,9 @@ static struct sk_buff *__skb_clone(struct sk_buff *n, struct sk_buff *skb)
 	C(head_frag);
 	C(data);
 	C(truesize);
+#ifdef CONFIG_TLS_DEVICE
+	C(decrypted);
+#endif
 	refcount_set(&n->users, 1);
 
 	atomic_inc(&(skb_shinfo(skb)->dataref));
