RDMA/vmw_pvrdma: Initialize ib_device_ops struct

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Kamal Heib <kamalheib1@gmail.com>
commit 20a6b5886102bac96e7dc5f1c6ffb6543ad4b479
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/20a6b588.failed

Initialize ib_device_ops with the supported operations using
ib_set_device_ops().

	Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 20a6b5886102bac96e7dc5f1c6ffb6543ad4b479)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
diff --cc drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
index cc6ffeb9076a,eaa109dbc96a..000000000000
--- a/drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
+++ b/drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
@@@ -195,41 -240,7 +238,45 @@@ static int pvrdma_register_device(struc
  	dev->ib_dev.node_type = RDMA_NODE_IB_CA;
  	dev->ib_dev.phys_port_cnt = dev->dsr->caps.phys_port_cnt;
  
++<<<<<<< HEAD
 +	dev->ib_dev.query_device = pvrdma_query_device;
 +	dev->ib_dev.query_port = pvrdma_query_port;
 +	dev->ib_dev.query_gid = pvrdma_query_gid;
 +	dev->ib_dev.query_pkey = pvrdma_query_pkey;
 +	dev->ib_dev.modify_port	= pvrdma_modify_port;
 +	dev->ib_dev.alloc_ucontext = pvrdma_alloc_ucontext;
 +	dev->ib_dev.dealloc_ucontext = pvrdma_dealloc_ucontext;
 +	dev->ib_dev.mmap = pvrdma_mmap;
 +	dev->ib_dev.alloc_pd = pvrdma_alloc_pd;
 +	dev->ib_dev.dealloc_pd = pvrdma_dealloc_pd;
 +	dev->ib_dev.create_ah = pvrdma_create_ah;
 +	dev->ib_dev.destroy_ah = pvrdma_destroy_ah;
 +	dev->ib_dev.create_qp = pvrdma_create_qp;
 +	dev->ib_dev.modify_qp = pvrdma_modify_qp;
 +	dev->ib_dev.query_qp = pvrdma_query_qp;
 +	dev->ib_dev.destroy_qp = pvrdma_destroy_qp;
 +	dev->ib_dev.post_send = pvrdma_post_send;
 +	dev->ib_dev.post_recv = pvrdma_post_recv;
 +	dev->ib_dev.create_cq = pvrdma_create_cq;
 +	dev->ib_dev.modify_cq = pvrdma_modify_cq;
 +	dev->ib_dev.resize_cq = pvrdma_resize_cq;
 +	dev->ib_dev.destroy_cq = pvrdma_destroy_cq;
 +	dev->ib_dev.poll_cq = pvrdma_poll_cq;
 +	dev->ib_dev.req_notify_cq = pvrdma_req_notify_cq;
 +	dev->ib_dev.get_dma_mr = pvrdma_get_dma_mr;
 +	dev->ib_dev.reg_user_mr	= pvrdma_reg_user_mr;
 +	dev->ib_dev.dereg_mr = pvrdma_dereg_mr;
 +	dev->ib_dev.alloc_mr = pvrdma_alloc_mr;
 +	dev->ib_dev.map_mr_sg = pvrdma_map_mr_sg;
 +	dev->ib_dev.add_gid = pvrdma_add_gid;
 +	dev->ib_dev.del_gid = pvrdma_del_gid;
 +	dev->ib_dev.get_netdev = pvrdma_get_netdev;
 +	dev->ib_dev.get_port_immutable = pvrdma_port_immutable;
 +	dev->ib_dev.get_link_layer = pvrdma_port_link_layer;
 +	dev->ib_dev.get_dev_fw_str = pvrdma_get_fw_ver_str;
++=======
+ 	ib_set_device_ops(&dev->ib_dev, &pvrdma_dev_ops);
++>>>>>>> 20a6b5886102 (RDMA/vmw_pvrdma: Initialize ib_device_ops struct)
  
  	mutex_init(&dev->port_mutex);
  	spin_lock_init(&dev->desc_lock);
@@@ -255,11 -266,7 +302,15 @@@
  			(1ull << IB_USER_VERBS_CMD_DESTROY_SRQ)	|
  			(1ull << IB_USER_VERBS_CMD_POST_SRQ_RECV);
  
++<<<<<<< HEAD
 +		dev->ib_dev.create_srq = pvrdma_create_srq;
 +		dev->ib_dev.modify_srq = pvrdma_modify_srq;
 +		dev->ib_dev.query_srq = pvrdma_query_srq;
 +		dev->ib_dev.destroy_srq = pvrdma_destroy_srq;
 +		dev->ib_dev.post_srq_recv = pvrdma_post_srq_recv;
++=======
+ 		ib_set_device_ops(&dev->ib_dev, &pvrdma_dev_srq_ops);
++>>>>>>> 20a6b5886102 (RDMA/vmw_pvrdma: Initialize ib_device_ops struct)
  
  		dev->srq_tbl = kcalloc(dev->dsr->caps.max_srq,
  				       sizeof(struct pvrdma_srq *),
* Unmerged path drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
