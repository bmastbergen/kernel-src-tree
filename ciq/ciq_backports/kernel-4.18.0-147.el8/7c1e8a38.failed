netlink: fixup regression in RTM_GETADDR

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Arthur Gautier <baloo@gandi.net>
commit 7c1e8a3817c55d73b27cc29b84075999c8894179
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/7c1e8a38.failed

This commit fixes a regression in AF_INET/RTM_GETADDR and
AF_INET6/RTM_GETADDR.

Before this commit, the kernel would stop dumping addresses once the first
skb was full and end the stream with NLMSG_DONE(-EMSGSIZE). The error
shouldn't be sent back to netlink_dump so the callback is kept alive. The
userspace is expected to call back with a new empty skb.

Changes from V1:
 - The error is not handled in netlink_dump anymore but rather in
   inet_dump_ifaddr and inet6_dump_addr directly as suggested by
   David Ahern.

Fixes: d7e38611b81e ("net/ipv4: Put target net when address dump fails due to bad attributes")
Fixes: 242afaa6968c ("net/ipv6: Put target net when address dump fails due to bad attributes")

	Cc: David Ahern <dsahern@gmail.com>
	Cc: "David S . Miller" <davem@davemloft.net>
	Cc: netdev@vger.kernel.org
	Signed-off-by: Arthur Gautier <baloo@gandi.net>
	Reviewed-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7c1e8a3817c55d73b27cc29b84075999c8894179)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/devinet.c
#	net/ipv6/addrconf.c
diff --cc net/ipv4/devinet.c
index 6c015dfe13b4,e258a00b4a3d..000000000000
--- a/net/ipv4/devinet.c
+++ b/net/ipv4/devinet.c
@@@ -1733,7 -1826,7 +1733,11 @@@ done
  	if (fillargs.netnsid >= 0)
  		put_net(tgt_net);
  
++<<<<<<< HEAD
 +	return skb->len;
++=======
+ 	return skb->len ? : err;
++>>>>>>> 7c1e8a3817c5 (netlink: fixup regression in RTM_GETADDR)
  }
  
  static void rtmsg_ifa(int event, struct in_ifaddr *ifa, struct nlmsghdr *nlh,
diff --cc net/ipv6/addrconf.c
index ff031adf9e83,93d5ad2b1a69..000000000000
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@@ -5074,11 -5150,11 +5074,15 @@@ done
  	rcu_read_unlock();
  	cb->args[0] = h;
  	cb->args[1] = idx;
 -put_tgt_net:
 -	if (fillargs.netnsid >= 0)
 +	cb->args[2] = ip_idx;
 +	if (netnsid >= 0)
  		put_net(tgt_net);
  
++<<<<<<< HEAD
 +	return skb->len;
++=======
+ 	return skb->len ? : err;
++>>>>>>> 7c1e8a3817c5 (netlink: fixup regression in RTM_GETADDR)
  }
  
  static int inet6_dump_ifaddr(struct sk_buff *skb, struct netlink_callback *cb)
* Unmerged path net/ipv4/devinet.c
* Unmerged path net/ipv6/addrconf.c
