net/mlx5: Remove not-used lib/eq.h header file

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit 26d1164dff81096c38d955f00b84a0075563d8c7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/26d1164d.failed

lib/eq.h is needed for EQ manipulation which are not performed in SRQ.

	Reviewed-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit 26d1164dff81096c38d955f00b84a0075563d8c7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/srq.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/srq.c
index 28c1c0ebd02e,248f1c8dd5d3..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/srq.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/srq.c
@@@ -9,13 -9,30 +9,16 @@@
  #include <linux/mlx5/cmd.h>
  #include <linux/mlx5/srq.h>
  #include <rdma/ib_verbs.h>
 -#include <linux/mlx5/transobj.h>
  #include "mlx5_core.h"
++<<<<<<< HEAD
 +#include <linux/mlx5/transobj.h>
++=======
++>>>>>>> 26d1164dff81 (net/mlx5: Remove not-used lib/eq.h header file)
  
 -static int srq_event_notifier(struct notifier_block *nb,
 -			      unsigned long type, void *data)
 +void mlx5_srq_event(struct mlx5_core_dev *dev, u32 srqn, int event_type)
  {
 -	struct mlx5_srq_table *table;
 -	struct mlx5_core_dev *dev;
 +	struct mlx5_srq_table *table = &dev->priv.srq_table;
  	struct mlx5_core_srq *srq;
 -	struct mlx5_priv *priv;
 -	struct mlx5_eqe *eqe;
 -	u32 srqn;
 -
 -	if (type != MLX5_EVENT_TYPE_SRQ_CATAS_ERROR &&
 -	    type != MLX5_EVENT_TYPE_SRQ_RQ_LIMIT)
 -		return NOTIFY_DONE;
 -
 -	table = container_of(nb, struct mlx5_srq_table, nb);
 -	priv  = container_of(table, struct mlx5_priv, srq_table);
 -	dev   = container_of(priv, struct mlx5_core_dev, priv);
 -
 -	eqe = data;
 -	srqn = be32_to_cpu(eqe->data.qp_srq.qp_srq_n) & 0xffffff;
 -	mlx5_core_dbg(dev, "SRQ event (%d): srqn 0x%x\n", eqe->type, srqn);
  
  	spin_lock(&table->lock);
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/srq.c
