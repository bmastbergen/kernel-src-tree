KVM: x86: nVMX: Allow nested_enable_evmcs to be NULL

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit 5158917c7b0196aefc1a4e9bc4458777dd2c41ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/5158917c.failed

...so that it can conditionally set by the VMX code, i.e. iff @nested is
true.  This will in turn allow it to be moved out of vmx.c and into a
nested-specified file.

	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 5158917c7b0196aefc1a4e9bc4458777dd2c41ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 52729928548f,54ef79421c6b..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -3792,6 -3826,18 +3792,21 @@@ static int kvm_vcpu_ioctl_enable_cap(st
  			return -EINVAL;
  		return kvm_hv_activate_synic(vcpu, cap->cap ==
  					     KVM_CAP_HYPERV_SYNIC2);
++<<<<<<< HEAD
++=======
+ 	case KVM_CAP_HYPERV_ENLIGHTENED_VMCS:
+ 		if (!kvm_x86_ops->nested_enable_evmcs)
+ 			return -ENOTTY;
+ 		r = kvm_x86_ops->nested_enable_evmcs(vcpu, &vmcs_version);
+ 		if (!r) {
+ 			user_ptr = (void __user *)(uintptr_t)cap->args[0];
+ 			if (copy_to_user(user_ptr, &vmcs_version,
+ 					 sizeof(vmcs_version)))
+ 				r = -EFAULT;
+ 		}
+ 		return r;
+ 
++>>>>>>> 5158917c7b01 (KVM: x86: nVMX: Allow nested_enable_evmcs to be NULL)
  	default:
  		return -EINVAL;
  	}
* Unmerged path arch/x86/kvm/x86.c
