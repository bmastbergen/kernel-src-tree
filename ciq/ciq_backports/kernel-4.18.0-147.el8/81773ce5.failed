RDMA/mlx5: Use stages for callback to setup and release DEVX

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit 81773ce5f07fd4c3acd4bb7e918ce03a4e652a5f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/81773ce5.failed

Reuse existing infrastructure to initialize and release DEVX uid.
The DevX interface is intended for user space access, so it is supposed
to be initialized before ib_register_device(). Also it isn't supported
in switchdev mode and don't need to initialize it in that mode.

Fixes: 76dc5a8406bf ("IB/mlx5: Manage device uid for DEVX white list commands")
	Reviewed-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit 81773ce5f07fd4c3acd4bb7e918ce03a4e652a5f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index 72ce00f38f1d,56472fa3e18b..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -5897,6 -6225,34 +5897,37 @@@ static void mlx5_ib_stage_rep_reg_clean
  	mlx5_ib_unregister_vport_reps(dev);
  }
  
++<<<<<<< HEAD
++=======
+ static int mlx5_ib_stage_dev_notifier_init(struct mlx5_ib_dev *dev)
+ {
+ 	dev->mdev_events.notifier_call = mlx5_ib_event;
+ 	mlx5_notifier_register(dev->mdev, &dev->mdev_events);
+ 	return 0;
+ }
+ 
+ static void mlx5_ib_stage_dev_notifier_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	mlx5_notifier_unregister(dev->mdev, &dev->mdev_events);
+ }
+ 
+ static int mlx5_ib_stage_devx_init(struct mlx5_ib_dev *dev)
+ {
+ 	int uid;
+ 
+ 	uid = mlx5_ib_devx_create(dev);
+ 	if (uid > 0)
+ 		dev->devx_whitelist_uid = uid;
+ 
+ 	return 0;
+ }
+ static void mlx5_ib_stage_devx_cleanup(struct mlx5_ib_dev *dev)
+ {
+ 	if (dev->devx_whitelist_uid)
+ 		mlx5_ib_devx_destroy(dev, dev->devx_whitelist_uid);
+ }
+ 
++>>>>>>> 81773ce5f07f (RDMA/mlx5: Use stages for callback to setup and release DEVX)
  void __mlx5_ib_remove(struct mlx5_ib_dev *dev,
  		      const struct mlx5_ib_profile *profile,
  		      int stage)
@@@ -5975,7 -6334,10 +6006,14 @@@ static const struct mlx5_ib_profile pf_
  		     mlx5_ib_stage_pre_ib_reg_umr_cleanup),
  	STAGE_CREATE(MLX5_IB_STAGE_SPECS,
  		     mlx5_ib_stage_populate_specs,
++<<<<<<< HEAD
 +		     mlx5_ib_stage_depopulate_specs),
++=======
+ 		     NULL),
+ 	STAGE_CREATE(MLX5_IB_STAGE_WHITELIST_UID,
+ 		     mlx5_ib_stage_devx_init,
+ 		     mlx5_ib_stage_devx_cleanup),
++>>>>>>> 81773ce5f07f (RDMA/mlx5: Use stages for callback to setup and release DEVX)
  	STAGE_CREATE(MLX5_IB_STAGE_IB_REG,
  		     mlx5_ib_stage_ib_reg_init,
  		     mlx5_ib_stage_ib_reg_cleanup),
* Unmerged path drivers/infiniband/hw/mlx5/main.c
diff --git a/drivers/infiniband/hw/mlx5/mlx5_ib.h b/drivers/infiniband/hw/mlx5/mlx5_ib.h
index ceae1f16ebc9..017b959c25db 100644
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@ -762,6 +762,7 @@ enum mlx5_ib_stages {
 	MLX5_IB_STAGE_BFREG,
 	MLX5_IB_STAGE_PRE_IB_REG_UMR,
 	MLX5_IB_STAGE_SPECS,
+	MLX5_IB_STAGE_WHITELIST_UID,
 	MLX5_IB_STAGE_IB_REG,
 	MLX5_IB_STAGE_POST_IB_REG_UMR,
 	MLX5_IB_STAGE_DELAY_DROP,
