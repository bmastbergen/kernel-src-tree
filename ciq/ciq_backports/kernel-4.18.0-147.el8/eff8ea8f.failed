net/mlx5: FW tracer, add hardware structures

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Feras Daoud <ferasda@mellanox.com>
commit eff8ea8f24eac76bc21c25e4ca4ac4ee2dade846
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/eff8ea8f.failed

This change adds the infrastructure to mlx5 core fw tracer.
It introduces the following 4 new registers:
MLX5_REG_MTRC_CAP  - Used to read tracer capabilities
MLX5_REG_MTRC_CONF - Used to set tracer configurations
MLX5_REG_MTRC_STDB - Used to query tracer strings database
MLX5_REG_MTRC_CTRL - Used to control the tracer

The capability of the tracing can be checked using mcam access
register, therefore, the mcam access register interface will expose
the tracer register.

	Signed-off-by: Feras Daoud <ferasda@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit eff8ea8f24eac76bc21c25e4ca4ac4ee2dade846)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 99966e261da9,bd7b71f54d59..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -9127,4 -9137,113 +9129,116 @@@ struct mlx5_ifc_dealloc_memic_out_bits 
  	u8         reserved_at_40[0x40];
  };
  
++<<<<<<< HEAD
++=======
+ struct mlx5_ifc_general_obj_in_cmd_hdr_bits {
+ 	u8         opcode[0x10];
+ 	u8         uid[0x10];
+ 
+ 	u8         reserved_at_20[0x10];
+ 	u8         obj_type[0x10];
+ 
+ 	u8         obj_id[0x20];
+ 
+ 	u8         reserved_at_60[0x20];
+ };
+ 
+ struct mlx5_ifc_general_obj_out_cmd_hdr_bits {
+ 	u8         status[0x8];
+ 	u8         reserved_at_8[0x18];
+ 
+ 	u8         syndrome[0x20];
+ 
+ 	u8         obj_id[0x20];
+ 
+ 	u8         reserved_at_60[0x20];
+ };
+ 
+ struct mlx5_ifc_umem_bits {
+ 	u8         modify_field_select[0x40];
+ 
+ 	u8         reserved_at_40[0x5b];
+ 	u8         log_page_size[0x5];
+ 
+ 	u8         page_offset[0x20];
+ 
+ 	u8         num_of_mtt[0x40];
+ 
+ 	struct mlx5_ifc_mtt_bits  mtt[0];
+ };
+ 
+ struct mlx5_ifc_uctx_bits {
+ 	u8         modify_field_select[0x40];
+ 
+ 	u8         reserved_at_40[0x1c0];
+ };
+ 
+ struct mlx5_ifc_create_umem_in_bits {
+ 	struct mlx5_ifc_general_obj_in_cmd_hdr_bits   hdr;
+ 	struct mlx5_ifc_umem_bits                     umem;
+ };
+ 
+ struct mlx5_ifc_create_uctx_in_bits {
+ 	struct mlx5_ifc_general_obj_in_cmd_hdr_bits   hdr;
+ 	struct mlx5_ifc_uctx_bits                     uctx;
+ };
+ 
+ struct mlx5_ifc_mtrc_string_db_param_bits {
+ 	u8         string_db_base_address[0x20];
+ 
+ 	u8         reserved_at_20[0x8];
+ 	u8         string_db_size[0x18];
+ };
+ 
+ struct mlx5_ifc_mtrc_cap_bits {
+ 	u8         trace_owner[0x1];
+ 	u8         trace_to_memory[0x1];
+ 	u8         reserved_at_2[0x4];
+ 	u8         trc_ver[0x2];
+ 	u8         reserved_at_8[0x14];
+ 	u8         num_string_db[0x4];
+ 
+ 	u8         first_string_trace[0x8];
+ 	u8         num_string_trace[0x8];
+ 	u8         reserved_at_30[0x28];
+ 
+ 	u8         log_max_trace_buffer_size[0x8];
+ 
+ 	u8         reserved_at_60[0x20];
+ 
+ 	struct mlx5_ifc_mtrc_string_db_param_bits string_db_param[8];
+ 
+ 	u8         reserved_at_280[0x180];
+ };
+ 
+ struct mlx5_ifc_mtrc_conf_bits {
+ 	u8         reserved_at_0[0x1c];
+ 	u8         trace_mode[0x4];
+ 	u8         reserved_at_20[0x18];
+ 	u8         log_trace_buffer_size[0x8];
+ 	u8         trace_mkey[0x20];
+ 	u8         reserved_at_60[0x3a0];
+ };
+ 
+ struct mlx5_ifc_mtrc_stdb_bits {
+ 	u8         string_db_index[0x4];
+ 	u8         reserved_at_4[0x4];
+ 	u8         read_size[0x18];
+ 	u8         start_offset[0x20];
+ 	u8         string_db_data[0];
+ };
+ 
+ struct mlx5_ifc_mtrc_ctrl_bits {
+ 	u8         trace_status[0x2];
+ 	u8         reserved_at_2[0x2];
+ 	u8         arm_event[0x1];
+ 	u8         reserved_at_5[0xb];
+ 	u8         modify_field_select[0x10];
+ 	u8         reserved_at_20[0x2b];
+ 	u8         current_timestamp52_32[0x15];
+ 	u8         current_timestamp31_0[0x20];
+ 	u8         reserved_at_80[0x180];
+ };
+ 
++>>>>>>> eff8ea8f24ea (net/mlx5: FW tracer, add hardware structures)
  #endif /* MLX5_IFC_H */
diff --git a/include/linux/mlx5/driver.h b/include/linux/mlx5/driver.h
index deb8f44d4748..b993f4530343 100644
--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@ -138,6 +138,10 @@ enum {
 	MLX5_REG_HOST_ENDIANNESS = 0x7004,
 	MLX5_REG_MCIA		 = 0x9014,
 	MLX5_REG_MLCR		 = 0x902b,
+	MLX5_REG_MTRC_CAP	 = 0x9040,
+	MLX5_REG_MTRC_CONF	 = 0x9041,
+	MLX5_REG_MTRC_STDB	 = 0x9042,
+	MLX5_REG_MTRC_CTRL	 = 0x9043,
 	MLX5_REG_MPCNT		 = 0x9051,
 	MLX5_REG_MTPPS		 = 0x9053,
 	MLX5_REG_MTPPSE		 = 0x9054,
* Unmerged path include/linux/mlx5/mlx5_ifc.h
