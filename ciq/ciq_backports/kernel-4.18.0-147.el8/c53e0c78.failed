tipc: mark expected switch fall-throughs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Gustavo A. R. Silva <gustavo@embeddedor.com>
commit c53e0c787e672b4edbf719b7c1ec5833db3af2da
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/c53e0c78.failed

In preparation to enabling -Wimplicit-fallthrough, mark switch cases
where we are expecting to fall through.

Warning level 2 was used: -Wimplicit-fallthrough=2

	Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
	Acked-by: Ying Xue <ying.xue@windriver.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c53e0c787e672b4edbf719b7c1ec5833db3af2da)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tipc/bearer.c
diff --cc net/tipc/bearer.c
index 81821680f8df,fd6d8f18955c..000000000000
--- a/net/tipc/bearer.c
+++ b/net/tipc/bearer.c
@@@ -609,11 -608,12 +609,18 @@@ static int tipc_l2_device_event(struct 
  
  	switch (evt) {
  	case NETDEV_CHANGE:
 -		if (netif_carrier_ok(dev))
 +		if (netif_carrier_ok(dev) && netif_oper_up(dev)) {
 +			test_and_set_bit_lock(0, &b->up);
  			break;
++<<<<<<< HEAD
 +		}
 +		/* fall through */
++=======
+ 		/* else: fall through */
+ 	case NETDEV_UP:
+ 		test_and_set_bit_lock(0, &b->up);
+ 		break;
++>>>>>>> c53e0c787e67 (tipc: mark expected switch fall-throughs)
  	case NETDEV_GOING_DOWN:
  		clear_bit_unlock(0, &b->up);
  		tipc_reset_bearer(net, b);
* Unmerged path net/tipc/bearer.c
diff --git a/net/tipc/link.c b/net/tipc/link.c
index b5b5de21e7c0..e8ec881b3084 100644
--- a/net/tipc/link.c
+++ b/net/tipc/link.c
@@ -1105,6 +1105,7 @@ static bool tipc_data_input(struct tipc_link *l, struct sk_buff *skb,
 			skb_queue_tail(mc_inputq, skb);
 			return true;
 		}
+		/* else: fall through */
 	case CONN_MANAGER:
 		skb_queue_tail(inputq, skb);
 		return true;
