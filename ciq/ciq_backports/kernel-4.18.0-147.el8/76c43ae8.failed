bpf: log struct/union attribute for forward type

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yonghong Song <yhs@fb.com>
commit 76c43ae84e3f455e0b460ed0c43799e018d09ee9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/76c43ae8.failed

Current btf internal verbose logger logs fwd type as
  [2] FWD A type_id=0
where A is the type name.

Commit 9d5f9f701b18 ("bpf: btf: fix struct/union/fwd types
with kind_flag") introduced kind_flag which can be used
to distinguish whether a forward type is a struct or
union.

Also, "type_id=0" does not carry any meaningful
information for fwd type as btf_type.type = 0 is simply
enforced during btf verification and is not used
anywhere else.

This commit changed the log to
  [2] FWD A struct
if kind_flag = 0, or
  [2] FWD A union
if kind_flag = 1.

	Acked-by: Martin KaFai Lau <kafai@fb.com>
	Signed-off-by: Yonghong Song <yhs@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 76c43ae84e3f455e0b460ed0c43799e018d09ee9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/btf.c
diff --cc kernel/bpf/btf.c
index 0357a9e2e51e,715f9fcf4712..000000000000
--- a/kernel/bpf/btf.c
+++ b/kernel/bpf/btf.c
@@@ -1392,7 -1605,8 +1398,12 @@@ static struct btf_kind_operations fwd_o
  	.check_meta = btf_fwd_check_meta,
  	.resolve = btf_df_resolve,
  	.check_member = btf_df_check_member,
++<<<<<<< HEAD
 +	.log_details = btf_ref_type_log,
++=======
+ 	.check_kflag_member = btf_df_check_kflag_member,
+ 	.log_details = btf_fwd_type_log,
++>>>>>>> 76c43ae84e3f (bpf: log struct/union attribute for forward type)
  	.seq_show = btf_df_seq_show,
  };
  
* Unmerged path kernel/bpf/btf.c
