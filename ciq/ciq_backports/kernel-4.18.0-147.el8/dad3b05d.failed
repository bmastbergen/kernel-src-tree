RDMA/cxgb4: Initialize ib_device_ops struct

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Kamal Heib <kamalheib1@gmail.com>
commit dad3b05d050a8ce5825b2bd7c680fc127b3c2c69
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/dad3b05d.failed

Initialize ib_device_ops with the supported operations using
ib_set_device_ops().

	Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit dad3b05d050a8ce5825b2bd7c680fc127b3c2c69)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/provider.c
diff --cc drivers/infiniband/hw/cxgb4/provider.c
index 61b8bdb9423d,586b0c37481f..000000000000
--- a/drivers/infiniband/hw/cxgb4/provider.c
+++ b/drivers/infiniband/hw/cxgb4/provider.c
@@@ -600,44 -611,7 +638,44 @@@ void c4iw_register_device(struct work_s
  	dev->ibdev.phys_port_cnt = dev->rdev.lldi.nports;
  	dev->ibdev.num_comp_vectors =  dev->rdev.lldi.nciq;
  	dev->ibdev.dev.parent = &dev->rdev.lldi.pdev->dev;
++<<<<<<< HEAD
 +	dev->ibdev.query_device = c4iw_query_device;
 +	dev->ibdev.query_port = c4iw_query_port;
 +	dev->ibdev.query_pkey = c4iw_query_pkey;
 +	dev->ibdev.query_gid = c4iw_query_gid;
 +	dev->ibdev.alloc_ucontext = c4iw_alloc_ucontext;
 +	dev->ibdev.dealloc_ucontext = c4iw_dealloc_ucontext;
 +	dev->ibdev.mmap = c4iw_mmap;
 +	dev->ibdev.alloc_pd = c4iw_allocate_pd;
 +	dev->ibdev.dealloc_pd = c4iw_deallocate_pd;
 +	dev->ibdev.create_ah = c4iw_ah_create;
 +	dev->ibdev.destroy_ah = c4iw_ah_destroy;
 +	dev->ibdev.create_qp = c4iw_create_qp;
 +	dev->ibdev.modify_qp = c4iw_ib_modify_qp;
 +	dev->ibdev.query_qp = c4iw_ib_query_qp;
 +	dev->ibdev.destroy_qp = c4iw_destroy_qp;
 +	dev->ibdev.create_cq = c4iw_create_cq;
 +	dev->ibdev.destroy_cq = c4iw_destroy_cq;
 +	dev->ibdev.resize_cq = c4iw_resize_cq;
 +	dev->ibdev.poll_cq = c4iw_poll_cq;
 +	dev->ibdev.get_dma_mr = c4iw_get_dma_mr;
 +	dev->ibdev.reg_user_mr = c4iw_reg_user_mr;
 +	dev->ibdev.dereg_mr = c4iw_dereg_mr;
 +	dev->ibdev.alloc_mw = c4iw_alloc_mw;
 +	dev->ibdev.dealloc_mw = c4iw_dealloc_mw;
 +	dev->ibdev.alloc_mr = c4iw_alloc_mr;
 +	dev->ibdev.map_mr_sg = c4iw_map_mr_sg;
 +	dev->ibdev.attach_mcast = c4iw_multicast_attach;
 +	dev->ibdev.detach_mcast = c4iw_multicast_detach;
 +	dev->ibdev.process_mad = c4iw_process_mad;
 +	dev->ibdev.req_notify_cq = c4iw_arm_cq;
 +	dev->ibdev.post_send = c4iw_post_send;
 +	dev->ibdev.post_recv = c4iw_post_receive;
 +	dev->ibdev.alloc_hw_stats = c4iw_alloc_stats;
 +	dev->ibdev.get_hw_stats = c4iw_get_mib;
++=======
++>>>>>>> dad3b05d050a (RDMA/cxgb4: Initialize ib_device_ops struct)
  	dev->ibdev.uverbs_abi_ver = C4IW_UVERBS_ABI_VERSION;
- 	dev->ibdev.get_port_immutable = c4iw_port_immutable;
- 	dev->ibdev.get_dev_fw_str = get_dev_fw_str;
- 	dev->ibdev.get_netdev = get_netdev;
  
  	dev->ibdev.iwcm = kmalloc(sizeof(struct iw_cm_verbs), GFP_KERNEL);
  	if (!dev->ibdev.iwcm) {
@@@ -657,20 -631,14 +695,25 @@@
  	memcpy(dev->ibdev.iwcm->ifname, dev->rdev.lldi.ports[0]->name,
  	       sizeof(dev->ibdev.iwcm->ifname));
  
 -	rdma_set_device_sysfs_group(&dev->ibdev, &c4iw_attr_group);
  	dev->ibdev.driver_id = RDMA_DRIVER_CXGB4;
++<<<<<<< HEAD
 +	ret = ib_register_device(&dev->ibdev, NULL);
++=======
+ 	ib_set_device_ops(&dev->ibdev, &c4iw_dev_ops);
+ 	ret = ib_register_device(&dev->ibdev, "cxgb4_%d", NULL);
++>>>>>>> dad3b05d050a (RDMA/cxgb4: Initialize ib_device_ops struct)
  	if (ret)
  		goto err_kfree_iwcm;
 -	return;
  
 +	for (i = 0; i < ARRAY_SIZE(c4iw_class_attributes); ++i) {
 +		ret = device_create_file(&dev->ibdev.dev,
 +					 c4iw_class_attributes[i]);
 +		if (ret)
 +			goto err_unregister_device;
 +	}
 +	return;
 +err_unregister_device:
 +	ib_unregister_device(&dev->ibdev);
  err_kfree_iwcm:
  	kfree(dev->ibdev.iwcm);
  err_dealloc_ctx:
* Unmerged path drivers/infiniband/hw/cxgb4/provider.c
