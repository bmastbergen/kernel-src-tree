nvme-fc: fix numa_node when dev is null

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author James Smart <jsmart2021@gmail.com>
commit 06f3d71ea071b70e62bcc146cd9ff7ed1f9d4e43
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/06f3d71e.failed

A recent change added a numa_node field to the nvme controller
and has the transport assign the node using dev_to_node().
However, fcloop registers with a NULL device struct, so the
dev_to_node() call oops.

Revise the assignment to assign no node when device struct is null.

Fixes: 103e515efa89b ("nvme: add a numa_node field to struct nvme_ctrl")
	Reported-by: Mike Snitzer <snitzer@redhat.com>
	Signed-off-by: James Smart <jsmart2021@gmail.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Reviewed-by: Mike Snitzer <snitzer@redhat.com>
[hch: small coding style fixup]
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 06f3d71ea071b70e62bcc146cd9ff7ed1f9d4e43)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fc.c
diff --cc drivers/nvme/host/fc.c
index e3c6c1d895d9,23f6bad19274..000000000000
--- a/drivers/nvme/host/fc.c
+++ b/drivers/nvme/host/fc.c
@@@ -3029,6 -3017,10 +3029,13 @@@ nvme_fc_init_ctrl(struct device *dev, s
  
  	ctrl->ctrl.opts = opts;
  	ctrl->ctrl.nr_reconnects = 0;
++<<<<<<< HEAD
++=======
+ 	if (lport->dev)
+ 		ctrl->ctrl.numa_node = dev_to_node(lport->dev);
+ 	else
+ 		ctrl->ctrl.numa_node = NUMA_NO_NODE;
++>>>>>>> 06f3d71ea071 (nvme-fc: fix numa_node when dev is null)
  	INIT_LIST_HEAD(&ctrl->ctrl_list);
  	ctrl->lport = lport;
  	ctrl->rport = rport;
* Unmerged path drivers/nvme/host/fc.c
