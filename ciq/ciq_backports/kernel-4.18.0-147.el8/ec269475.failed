Revert "kvm: x86: Use task structs fpu field for user"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit ec269475cba7bcdd1eb8fdf8e87f4c6c81a376fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/ec269475.failed

This reverts commit 240c35a3783ab9b3a0afaba0dde7291295680a6b
("kvm: x86: Use task structs fpu field for user", 2018-11-06).
The commit is broken and causes QEMU's FPU state to be destroyed
when KVM_RUN is preempted.

Fixes: 240c35a3783a ("kvm: x86: Use task structs fpu field for user")
	Cc: stable@vger.kernel.org
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit ec269475cba7bcdd1eb8fdf8e87f4c6c81a376fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 82af01e29d03,cf2afdf8facf..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -8014,8 -8268,9 +8014,14 @@@ static int complete_emulated_mmio(struc
  /* Swap (qemu) user FPU context for the guest FPU context. */
  static void kvm_load_guest_fpu(struct kvm_vcpu *vcpu)
  {
++<<<<<<< HEAD
 +	preempt_disable();
 +	copy_fpregs_to_fpstate(&current->thread.fpu);
++=======
+ 	fpregs_lock();
+ 
+ 	copy_fpregs_to_fpstate(&vcpu->arch.user_fpu);
++>>>>>>> ec269475cba7 (Revert "kvm: x86: Use task structs fpu field for user")
  	/* PKRU is separately restored in kvm_x86_ops->run.  */
  	__copy_kernel_to_fpregs(&vcpu->arch.guest_fpu->state,
  				~XFEATURE_MASK_PKRU);
@@@ -8026,10 -8284,14 +8032,18 @@@
  /* When vcpu_run ends, restore user space FPU context. */
  static void kvm_put_guest_fpu(struct kvm_vcpu *vcpu)
  {
 -	fpregs_lock();
 -
 +	preempt_disable();
  	copy_fpregs_to_fpstate(vcpu->arch.guest_fpu);
++<<<<<<< HEAD
 +	copy_kernel_to_fpregs(&current->thread.fpu.state);
 +	preempt_enable();
++=======
+ 	copy_kernel_to_fpregs(&vcpu->arch.user_fpu.state);
+ 
+ 	fpregs_mark_activate();
+ 	fpregs_unlock();
+ 
++>>>>>>> ec269475cba7 (Revert "kvm: x86: Use task structs fpu field for user")
  	++vcpu->stat.fpu_reload;
  	trace_kvm_fpu(0);
  }
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 713d2728dca5..75ebc925a62b 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -586,15 +586,16 @@ struct kvm_vcpu_arch {
 
 	/*
 	 * QEMU userspace and the guest each have their own FPU state.
-	 * In vcpu_run, we switch between the user, maintained in the
-	 * task_struct struct, and guest FPU contexts. While running a VCPU,
-	 * the VCPU thread will have the guest FPU context.
+	 * In vcpu_run, we switch between the user and guest FPU contexts.
+	 * While running a VCPU, the VCPU thread will have the guest FPU
+	 * context.
 	 *
 	 * Note that while the PKRU state lives inside the fpu registers,
 	 * it is switched out separately at VMENTER and VMEXIT time. The
 	 * "guest_fpu" state here contains the guest FPU context, with the
 	 * host PRKU bits.
 	 */
+	struct fpu user_fpu;
 	struct fpu *guest_fpu;
 
 	u64 xcr0;
* Unmerged path arch/x86/kvm/x86.c
