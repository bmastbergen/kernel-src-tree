RDMA/mlx5: Introduce and reuse helper to identify ODP MR

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit 8b4d5bc5cf3f813dc4df5d69c2fcde16c40d8abd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/8b4d5bc5.failed

Consolidate various checks if MR is ODP backed to one simple helper and
update call sites to use it.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 8b4d5bc5cf3f813dc4df5d69c2fcde16c40d8abd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
#	drivers/infiniband/hw/mlx5/mr.c
#	drivers/infiniband/hw/mlx5/odp.c
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index 2c8fea140d3d,81efa5def8ad..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -1145,6 -1213,16 +1152,19 @@@ static inline void mlx5_odp_populate_kl
  					 size_t nentries, struct mlx5_ib_mr *mr,
  					 int flags) {}
  
++<<<<<<< HEAD
++=======
+ static inline int
+ mlx5_ib_advise_mr_prefetch(struct ib_pd *pd,
+ 			   enum ib_uverbs_advise_mr_advice advice, u32 flags,
+ 			   struct ib_sge *sg_list, u32 num_sge)
+ {
+ 	return -EOPNOTSUPP;
+ }
+ static inline void mlx5_ib_invalidate_range(struct ib_umem_odp *umem_odp,
+ 					    unsigned long start,
+ 					    unsigned long end){};
++>>>>>>> 8b4d5bc5cf3f (RDMA/mlx5: Introduce and reuse helper to identify ODP MR)
  #endif /* CONFIG_INFINIBAND_ON_DEMAND_PAGING */
  
  /* Needed for rep profile */
diff --cc drivers/infiniband/hw/mlx5/mr.c
index 7aa0bfa996ba,c389750f771e..000000000000
--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@@ -95,10 -95,9 +95,13 @@@ static bool use_umr_mtt_update(struct m
  		length + (start & (MLX5_ADAPTER_PAGE_SIZE - 1));
  }
  
- #ifdef CONFIG_INFINIBAND_ON_DEMAND_PAGING
  static void update_odp_mr(struct mlx5_ib_mr *mr)
  {
++<<<<<<< HEAD
 +	if (mr->umem->odp_data) {
++=======
+ 	if (is_odp_mr(mr)) {
++>>>>>>> 8b4d5bc5cf3f (RDMA/mlx5: Introduce and reuse helper to identify ODP MR)
  		/*
  		 * This barrier prevents the compiler from moving the
  		 * setting of umem->odp_data->private to point to our
@@@ -1626,8 -1635,9 +1624,14 @@@ static void dereg_mr(struct mlx5_ib_de
  	int npages = mr->npages;
  	struct ib_umem *umem = mr->umem;
  
++<<<<<<< HEAD
 +#ifdef CONFIG_INFINIBAND_ON_DEMAND_PAGING
 +	if (umem && umem->odp_data) {
++=======
+ 	if (is_odp_mr(mr)) {
+ 		struct ib_umem_odp *umem_odp = to_ib_umem_odp(umem);
+ 
++>>>>>>> 8b4d5bc5cf3f (RDMA/mlx5: Introduce and reuse helper to identify ODP MR)
  		/* Prevent new page faults from succeeding */
  		mr->live = 0;
  		/* Wait for all running page-fault handlers to finish. */
diff --cc drivers/infiniband/hw/mlx5/odp.c
index 4e6f586dbb7c,37d6653f9636..000000000000
--- a/drivers/infiniband/hw/mlx5/odp.c
+++ b/drivers/infiniband/hw/mlx5/odp.c
@@@ -61,6 -101,14 +61,17 @@@ static int check_parent(struct ib_umem_
  	return mr && mr->parent == parent && !odp->dying;
  }
  
++<<<<<<< HEAD
++=======
+ struct ib_ucontext_per_mm *mr_to_per_mm(struct mlx5_ib_mr *mr)
+ {
+ 	if (WARN_ON(!mr || !is_odp_mr(mr)))
+ 		return NULL;
+ 
+ 	return to_ib_umem_odp(mr->umem)->per_mm;
+ }
+ 
++>>>>>>> 8b4d5bc5cf3f (RDMA/mlx5: Introduce and reuse helper to identify ODP MR)
  static struct ib_umem_odp *odp_next(struct ib_umem_odp *odp)
  {
  	struct mlx5_ib_mr *mr = odp->private, *parent = mr->parent;
@@@ -664,7 -739,12 +675,16 @@@ next_mr
  			goto srcu_unlock;
  		}
  
++<<<<<<< HEAD
 +		if (!mr->umem->odp_data) {
++=======
+ 		if (prefetch && !is_odp_mr(mr)) {
+ 			ret = -EINVAL;
+ 			goto srcu_unlock;
+ 		}
+ 
+ 		if (!is_odp_mr(mr)) {
++>>>>>>> 8b4d5bc5cf3f (RDMA/mlx5: Introduce and reuse helper to identify ODP MR)
  			mlx5_ib_dbg(dev, "skipping non ODP MR (lkey=0x%06x) in page fault handler.\n",
  				    key);
  			if (bytes_mapped)
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
* Unmerged path drivers/infiniband/hw/mlx5/mr.c
* Unmerged path drivers/infiniband/hw/mlx5/odp.c
