ip6_tunnel: respect ttl inherit for ip6tnl

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Hangbin Liu <liuhangbin@gmail.com>
commit 36feaac35405e932ad9c321d7a2db8a7e4a4d7ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/36feaac3.failed

man ip-tunnel ttl section says:
0 is a special value meaning that packets inherit the TTL value.

IPv4 tunnel respect this in ip_tunnel_xmit(), but IPv6 tunnel has not
implement it yet. To make IPv6 behave consistently with IP tunnel,
add ipv6 tunnel inherit support.

	Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 36feaac35405e932ad9c321d7a2db8a7e4a4d7ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_tunnel.c
diff --cc net/ipv6/ip6_tunnel.c
index 1d59e9670905,419960b0ba16..000000000000
--- a/net/ipv6/ip6_tunnel.c
+++ b/net/ipv6/ip6_tunnel.c
@@@ -1184,7 -1184,19 +1184,23 @@@ route_lookup
  	}
  	skb_dst_set(skb, dst);
  
++<<<<<<< HEAD
 +	hop_limit = hop_limit ? : ip6_dst_hoplimit(dst);
++=======
+ 	if (encap_limit >= 0) {
+ 		init_tel_txopt(&opt, encap_limit);
+ 		ipv6_push_frag_opts(skb, &opt.ops, &proto);
+ 	}
+ 
+ 	if (hop_limit == 0) {
+ 		if (skb->protocol == htons(ETH_P_IP))
+ 			hop_limit = ip_hdr(skb)->ttl;
+ 		else if (skb->protocol == htons(ETH_P_IPV6))
+ 			hop_limit = ipv6_hdr(skb)->hop_limit;
+ 		else
+ 			hop_limit = ip6_dst_hoplimit(dst);
+ 	}
++>>>>>>> 36feaac35405 (ip6_tunnel: respect ttl inherit for ip6tnl)
  
  	/* Calculate max headroom for all the headers and adjust
  	 * needed_headroom if necessary.
* Unmerged path net/ipv6/ip6_tunnel.c
