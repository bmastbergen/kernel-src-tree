RDMA/bnxt_re: Initialize ib_device_ops struct

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Kamal Heib <kamalheib1@gmail.com>
commit 9615f86be981a41a830ae088856da3e5ac362ab6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/9615f86b.failed

Initialize ib_device_ops with the supported operations using
ib_set_device_ops().

	Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 9615f86be981a41a830ae088856da3e5ac362ab6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/bnxt_re/main.c
diff --cc drivers/infiniband/hw/bnxt_re/main.c
index 85cd1a3593d6,31cbef57a19b..000000000000
--- a/drivers/infiniband/hw/bnxt_re/main.c
+++ b/drivers/infiniband/hw/bnxt_re/main.c
@@@ -587,86 -658,13 +631,40 @@@ static int bnxt_re_register_ib(struct b
  			(1ull << IB_USER_VERBS_CMD_DESTROY_AH);
  	/* POLL_CQ and REQ_NOTIFY_CQ is directly handled in libbnxt_re */
  
- 	/* Kernel verbs */
- 	ibdev->query_device		= bnxt_re_query_device;
- 	ibdev->modify_device		= bnxt_re_modify_device;
- 
- 	ibdev->query_port		= bnxt_re_query_port;
- 	ibdev->get_port_immutable	= bnxt_re_get_port_immutable;
- 	ibdev->get_dev_fw_str           = bnxt_re_query_fw_str;
- 	ibdev->query_pkey		= bnxt_re_query_pkey;
- 	ibdev->get_netdev		= bnxt_re_get_netdev;
- 	ibdev->add_gid			= bnxt_re_add_gid;
- 	ibdev->del_gid			= bnxt_re_del_gid;
- 	ibdev->get_link_layer		= bnxt_re_get_link_layer;
- 
- 	ibdev->alloc_pd			= bnxt_re_alloc_pd;
- 	ibdev->dealloc_pd		= bnxt_re_dealloc_pd;
- 
- 	ibdev->create_ah		= bnxt_re_create_ah;
- 	ibdev->modify_ah		= bnxt_re_modify_ah;
- 	ibdev->query_ah			= bnxt_re_query_ah;
- 	ibdev->destroy_ah		= bnxt_re_destroy_ah;
- 
- 	ibdev->create_srq		= bnxt_re_create_srq;
- 	ibdev->modify_srq		= bnxt_re_modify_srq;
- 	ibdev->query_srq		= bnxt_re_query_srq;
- 	ibdev->destroy_srq		= bnxt_re_destroy_srq;
- 	ibdev->post_srq_recv		= bnxt_re_post_srq_recv;
- 
- 	ibdev->create_qp		= bnxt_re_create_qp;
- 	ibdev->modify_qp		= bnxt_re_modify_qp;
- 	ibdev->query_qp			= bnxt_re_query_qp;
- 	ibdev->destroy_qp		= bnxt_re_destroy_qp;
- 
- 	ibdev->post_send		= bnxt_re_post_send;
- 	ibdev->post_recv		= bnxt_re_post_recv;
- 
- 	ibdev->create_cq		= bnxt_re_create_cq;
- 	ibdev->destroy_cq		= bnxt_re_destroy_cq;
- 	ibdev->poll_cq			= bnxt_re_poll_cq;
- 	ibdev->req_notify_cq		= bnxt_re_req_notify_cq;
- 
- 	ibdev->get_dma_mr		= bnxt_re_get_dma_mr;
- 	ibdev->dereg_mr			= bnxt_re_dereg_mr;
- 	ibdev->alloc_mr			= bnxt_re_alloc_mr;
- 	ibdev->map_mr_sg		= bnxt_re_map_mr_sg;
- 
- 	ibdev->reg_user_mr		= bnxt_re_reg_user_mr;
- 	ibdev->alloc_ucontext		= bnxt_re_alloc_ucontext;
- 	ibdev->dealloc_ucontext		= bnxt_re_dealloc_ucontext;
- 	ibdev->mmap			= bnxt_re_mmap;
- 	ibdev->get_hw_stats             = bnxt_re_ib_get_hw_stats;
- 	ibdev->alloc_hw_stats           = bnxt_re_ib_alloc_hw_stats;
  
 -	rdma_set_device_sysfs_group(ibdev, &bnxt_re_dev_attr_group);
  	ibdev->driver_id = RDMA_DRIVER_BNXT_RE;
++<<<<<<< HEAD
 +	return ib_register_device(ibdev, NULL);
++=======
+ 	ib_set_device_ops(ibdev, &bnxt_re_dev_ops);
+ 	return ib_register_device(ibdev, "bnxt_re%d", NULL);
++>>>>>>> 9615f86be981 (RDMA/bnxt_re: Initialize ib_device_ops struct)
 +}
 +
 +static ssize_t show_rev(struct device *device, struct device_attribute *attr,
 +			char *buf)
 +{
 +	struct bnxt_re_dev *rdev = to_bnxt_re_dev(device, ibdev.dev);
 +
 +	return scnprintf(buf, PAGE_SIZE, "0x%x\n", rdev->en_dev->pdev->vendor);
  }
  
 +static ssize_t show_hca(struct device *device, struct device_attribute *attr,
 +			char *buf)
 +{
 +	struct bnxt_re_dev *rdev = to_bnxt_re_dev(device, ibdev.dev);
 +
 +	return scnprintf(buf, PAGE_SIZE, "%s\n", rdev->ibdev.node_desc);
 +}
 +
 +static DEVICE_ATTR(hw_rev, 0444, show_rev, NULL);
 +static DEVICE_ATTR(hca_type, 0444, show_hca, NULL);
 +
 +static struct device_attribute *bnxt_re_attributes[] = {
 +	&dev_attr_hw_rev,
 +	&dev_attr_hca_type
 +};
 +
  static void bnxt_re_dev_remove(struct bnxt_re_dev *rdev)
  {
  	dev_put(rdev->netdev);
* Unmerged path drivers/infiniband/hw/bnxt_re/main.c
