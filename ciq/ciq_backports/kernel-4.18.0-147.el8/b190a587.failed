tls: Fill software context without allocation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Boris Pismenny <borisp@mellanox.com>
commit b190a587c634a8559e4ceabeb0468e93db49789a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/b190a587.failed

This patch allows tls_set_sw_offload to fill the context in case it was
already allocated previously.

We will use it in TLS_DEVICE to fill the RX software context.

	Signed-off-by: Boris Pismenny <borisp@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b190a587c634a8559e4ceabeb0468e93db49789a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tls/tls_sw.c
diff --cc net/tls/tls_sw.c
index 851137232afc,5f7d70b24be6..000000000000
--- a/net/tls/tls_sw.c
+++ b/net/tls/tls_sw.c
@@@ -1115,13 -1107,13 +1125,21 @@@ int tls_set_sw_offload(struct sock *sk
  	}
  
  	if (tx) {
++<<<<<<< HEAD
 +		crypto_info = &ctx->crypto_send.info;
 +		cctx = &ctx->tx;
 +		aead = &sw_ctx_tx->aead_send;
 +	} else {
 +		crypto_info = &ctx->crypto_recv.info;
++=======
+ 		crypto_init_wait(&sw_ctx_tx->async_wait);
+ 		crypto_info = &ctx->crypto_send;
+ 		cctx = &ctx->tx;
+ 		aead = &sw_ctx_tx->aead_send;
+ 	} else {
+ 		crypto_init_wait(&sw_ctx_rx->async_wait);
+ 		crypto_info = &ctx->crypto_recv;
++>>>>>>> b190a587c634 (tls: Fill software context without allocation)
  		cctx = &ctx->rx;
  		aead = &sw_ctx_rx->aead_recv;
  	}
* Unmerged path net/tls/tls_sw.c
