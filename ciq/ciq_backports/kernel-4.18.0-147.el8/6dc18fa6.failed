bpf: call finalize() from its callback in struct bpf_offload_dev

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Quentin Monnet <quentin.monnet@netronome.com>
commit 6dc18fa6f4cad69c892d6fb9499f7e41c6a88a8e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/6dc18fa6.failed

In a way similar to the change previously brought to the verify_insn
hook, switch to the newly added ops in struct bpf_prog_offload for
calling the functions used to perform final verification steps for
offloaded programs.

	Signed-off-by: Quentin Monnet <quentin.monnet@netronome.com>
	Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit 6dc18fa6f4cad69c892d6fb9499f7e41c6a88a8e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/offload.c
diff --cc kernel/bpf/offload.c
index 0f27092482fe,2c88cb4ddfd8..000000000000
--- a/kernel/bpf/offload.c
+++ b/kernel/bpf/offload.c
@@@ -174,6 -175,24 +174,27 @@@ int bpf_prog_offload_verify_insn(struc
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ int bpf_prog_offload_finalize(struct bpf_verifier_env *env)
+ {
+ 	struct bpf_prog_offload *offload;
+ 	int ret = -ENODEV;
+ 
+ 	down_read(&bpf_devs_lock);
+ 	offload = env->prog->aux->offload;
+ 	if (offload) {
+ 		if (offload->offdev->ops->finalize)
+ 			ret = offload->offdev->ops->finalize(env);
+ 		else
+ 			ret = 0;
+ 	}
+ 	up_read(&bpf_devs_lock);
+ 
+ 	return ret;
+ }
+ 
++>>>>>>> 6dc18fa6f4ca (bpf: call finalize() from its callback in struct bpf_offload_dev)
  static void __bpf_prog_offload_destroy(struct bpf_prog *prog)
  {
  	struct bpf_prog_offload *offload = prog->aux->offload;
* Unmerged path kernel/bpf/offload.c
