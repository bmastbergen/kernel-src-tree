IB/mlx5: Use the new mlx5 core notifier API

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit df097a278c7592873d88571a8c78f987f6ae511b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/df097a27.failed

Remove the deprecated mlx5_interface->event mlx5_ib callback and use new
mlx5 notifier API to subscribe for mlx5 events.

For native mlx5_ib devices profiles pf_profile/nic_rep_profile register
the notifier callback mlx5_ib_handle_event which treats the notifier
context as mlx5_ib_dev.

For vport repesentors, don't register any notifier, same as before, they
didn't receive any mlx5 events.

For slave port (mlx5_ib_multiport_info) register a different notifier
callback mlx5_ib_event_slave_port, which knows that the event is coming
for mlx5_ib_multiport_info and prepares the event job accordingly.
Before this on the event handler work we had to ask mlx5_core if this is
a slave port mlx5_core_is_mp_slave(work->dev), now it is not needed
anymore.
mlx5_ib_multiport_info notifier registration is done on
mlx5_ib_bind_slave_port and de-registration is done on
mlx5_ib_unbind_slave_port.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit df097a278c7592873d88571a8c78f987f6ae511b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/main.c
index 72ce00f38f1d,549c766cf309..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -5955,9 -6272,12 +5999,12 @@@ static const struct mlx5_ib_profile pf_
  	STAGE_CREATE(MLX5_IB_STAGE_DEVICE_RESOURCES,
  		     mlx5_ib_stage_dev_res_init,
  		     mlx5_ib_stage_dev_res_cleanup),
+ 	STAGE_CREATE(MLX5_IB_STAGE_DEVICE_NOTIFIER,
+ 		     mlx5_ib_stage_dev_notifier_init,
+ 		     mlx5_ib_stage_dev_notifier_cleanup),
  	STAGE_CREATE(MLX5_IB_STAGE_ODP,
  		     mlx5_ib_stage_odp_init,
 -		     mlx5_ib_stage_odp_cleanup),
 +		     NULL),
  	STAGE_CREATE(MLX5_IB_STAGE_COUNTERS,
  		     mlx5_ib_stage_counters_init,
  		     mlx5_ib_stage_counters_cleanup),
@@@ -6132,10 -6449,6 +6182,13 @@@ static void mlx5_ib_remove(struct mlx5_
  static struct mlx5_interface mlx5_ib_interface = {
  	.add            = mlx5_ib_add,
  	.remove         = mlx5_ib_remove,
++<<<<<<< HEAD
 +	.event          = mlx5_ib_event,
 +#ifdef CONFIG_INFINIBAND_ON_DEMAND_PAGING
 +	.pfault		= mlx5_ib_pfault,
 +#endif
++=======
++>>>>>>> df097a278c75 (IB/mlx5: Use the new mlx5 core notifier API)
  	.protocol	= MLX5_INTERFACE_PROTOCOL_IB,
  };
  
* Unmerged path drivers/infiniband/hw/mlx5/main.c
diff --git a/drivers/infiniband/hw/mlx5/mlx5_ib.h b/drivers/infiniband/hw/mlx5/mlx5_ib.h
index ceae1f16ebc9..c14b895ccecc 100644
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@ -755,6 +755,7 @@ enum mlx5_ib_stages {
 	MLX5_IB_STAGE_NON_DEFAULT_CB,
 	MLX5_IB_STAGE_ROCE,
 	MLX5_IB_STAGE_DEVICE_RESOURCES,
+	MLX5_IB_STAGE_DEVICE_NOTIFIER,
 	MLX5_IB_STAGE_ODP,
 	MLX5_IB_STAGE_COUNTERS,
 	MLX5_IB_STAGE_CONG_DEBUGFS,
@@ -786,6 +787,7 @@ struct mlx5_ib_multiport_info {
 	struct list_head list;
 	struct mlx5_ib_dev *ibdev;
 	struct mlx5_core_dev *mdev;
+	struct notifier_block mdev_events;
 	struct completion unref_comp;
 	u64 sys_image_guid;
 	u32 mdev_refcnt;
@@ -850,6 +852,7 @@ int parse_flow_flow_action(struct mlx5_ib_flow_action *maction,
 struct mlx5_ib_dev {
 	struct ib_device		ib_dev;
 	struct mlx5_core_dev		*mdev;
+	struct notifier_block		mdev_events;
 	struct mlx5_roce		roce[MLX5_MAX_PORTS];
 	int				num_ports;
 	/* serialize update of capability mask
