bpf: tools: Sync uapi bpf.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Martin KaFai Lau <kafai@fb.com>
commit ee491d8dbe496c510fa06a786460638d78428147
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/ee491d8d.failed

Sync uapi bpf.h to tools/include/uapi/linux for
the new bpf_line_info.

	Signed-off-by: Martin KaFai Lau <kafai@fb.com>
	Acked-by: Yonghong Song <yhs@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit ee491d8dbe496c510fa06a786460638d78428147)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/include/uapi/linux/bpf.h
diff --cc tools/include/uapi/linux/bpf.h
index 5722fcb992f7,7973c28b24a0..000000000000
--- a/tools/include/uapi/linux/bpf.h
+++ b/tools/include/uapi/linux/bpf.h
@@@ -327,6 -352,13 +327,16 @@@ union bpf_attr 
  		 * (context accesses, allowed helpers, etc).
  		 */
  		__u32		expected_attach_type;
++<<<<<<< HEAD
++=======
+ 		__u32		prog_btf_fd;	/* fd pointing to BTF type data */
+ 		__u32		func_info_rec_size;	/* userspace bpf_func_info size */
+ 		__aligned_u64	func_info;	/* func info */
+ 		__u32		func_info_cnt;	/* number of bpf_func_info records */
+ 		__u32		line_info_rec_size;	/* userspace bpf_line_info size */
+ 		__aligned_u64	line_info;	/* line info */
+ 		__u32		line_info_cnt;	/* number of bpf_line_info records */
++>>>>>>> ee491d8dbe49 (bpf: tools: Sync uapi bpf.h)
  	};
  
  	struct { /* anonymous struct used by BPF_OBJ_* commands */
@@@ -2427,6 -2678,16 +2437,19 @@@ struct bpf_prog_info 
  	__u32 nr_jited_func_lens;
  	__aligned_u64 jited_ksyms;
  	__aligned_u64 jited_func_lens;
++<<<<<<< HEAD
++=======
+ 	__u32 btf_id;
+ 	__u32 func_info_rec_size;
+ 	__aligned_u64 func_info;
+ 	__u32 func_info_cnt;
+ 	__u32 line_info_cnt;
+ 	__aligned_u64 line_info;
+ 	__aligned_u64 jited_line_info;
+ 	__u32 jited_line_info_cnt;
+ 	__u32 line_info_rec_size;
+ 	__u32 jited_line_info_rec_size;
++>>>>>>> ee491d8dbe49 (bpf: tools: Sync uapi bpf.h)
  } __attribute__((aligned(8)));
  
  struct bpf_map_info {
@@@ -2712,4 -2976,42 +2735,45 @@@ enum bpf_task_fd_type 
  	BPF_FD_TYPE_URETPROBE,		/* filename + offset */
  };
  
++<<<<<<< HEAD
++=======
+ struct bpf_flow_keys {
+ 	__u16	nhoff;
+ 	__u16	thoff;
+ 	__u16	addr_proto;			/* ETH_P_* of valid addrs */
+ 	__u8	is_frag;
+ 	__u8	is_first_frag;
+ 	__u8	is_encap;
+ 	__u8	ip_proto;
+ 	__be16	n_proto;
+ 	__be16	sport;
+ 	__be16	dport;
+ 	union {
+ 		struct {
+ 			__be32	ipv4_src;
+ 			__be32	ipv4_dst;
+ 		};
+ 		struct {
+ 			__u32	ipv6_src[4];	/* in6_addr; network order */
+ 			__u32	ipv6_dst[4];	/* in6_addr; network order */
+ 		};
+ 	};
+ };
+ 
+ struct bpf_func_info {
+ 	__u32	insn_off;
+ 	__u32	type_id;
+ };
+ 
+ #define BPF_LINE_INFO_LINE_NUM(line_col)	((line_col) >> 10)
+ #define BPF_LINE_INFO_LINE_COL(line_col)	((line_col) & 0x3ff)
+ 
+ struct bpf_line_info {
+ 	__u32	insn_off;
+ 	__u32	file_name_off;
+ 	__u32	line_off;
+ 	__u32	line_col;
+ };
+ 
++>>>>>>> ee491d8dbe49 (bpf: tools: Sync uapi bpf.h)
  #endif /* _UAPI__LINUX_BPF_H__ */
* Unmerged path tools/include/uapi/linux/bpf.h
