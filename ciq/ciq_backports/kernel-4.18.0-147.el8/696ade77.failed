kvm: selftests: dirty_log_test: improve mode param management

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Andrew Jones <drjones@redhat.com>
commit 696ade770f08a194b85dbf22d6f1613285905ae5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/696ade77.failed

	Signed-off-by: Andrew Jones <drjones@redhat.com>
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
(cherry picked from commit 696ade770f08a194b85dbf22d6f1613285905ae5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/dirty_log_test.c
diff --cc tools/testing/selftests/kvm/dirty_log_test.c
index a2e86fdacc19,c2897c862141..000000000000
--- a/tools/testing/selftests/kvm/dirty_log_test.c
+++ b/tools/testing/selftests/kvm/dirty_log_test.c
@@@ -402,7 -411,22 +393,26 @@@ int main(int argc, char *argv[]
  	unsigned int mode;
  	int opt, i;
  
++<<<<<<< HEAD
 +	while ((opt = getopt(argc, argv, "hi:I:o:tm:")) != -1) {
++=======
+ #ifdef USE_CLEAR_DIRTY_LOG
+ 	if (!kvm_check_cap(KVM_CAP_MANUAL_DIRTY_LOG_PROTECT)) {
+ 		fprintf(stderr, "KVM_CLEAR_DIRTY_LOG not available, skipping tests\n");
+ 		exit(KSFT_SKIP);
+ 	}
+ #endif
+ 
+ #ifdef __x86_64__
+ 	vm_guest_mode_params_init(VM_MODE_P52V48_4K, true, true);
+ #endif
+ #ifdef __aarch64__
+ 	vm_guest_mode_params_init(VM_MODE_P40V48_4K, true, true);
+ 	vm_guest_mode_params_init(VM_MODE_P40V48_64K, true, true);
+ #endif
+ 
+ 	while ((opt = getopt(argc, argv, "hi:I:p:m:")) != -1) {
++>>>>>>> 696ade770f08 (kvm: selftests: dirty_log_test: improve mode param management)
  		switch (opt) {
  		case 'i':
  			iterations = strtol(optarg, NULL, 10);
@@@ -445,13 -464,12 +455,18 @@@
  	srandom(time(0));
  
  	for (i = 0; i < NUM_VM_MODES; ++i) {
- 		if (!vm_guest_modes[i].enabled)
+ 		if (!vm_guest_mode_params[i].enabled)
  			continue;
- 		TEST_ASSERT(vm_guest_modes[i].supported,
+ 		TEST_ASSERT(vm_guest_mode_params[i].supported,
  			    "Guest mode ID %d (%s) not supported.",
++<<<<<<< HEAD
 +			    vm_guest_modes[i].mode,
 +			    vm_guest_mode_string(vm_guest_modes[i].mode));
 +		run_test(vm_guest_modes[i].mode, iterations, interval, top_offset);
++=======
+ 			    i, vm_guest_mode_string(i));
+ 		run_test(i, iterations, interval, phys_offset);
++>>>>>>> 696ade770f08 (kvm: selftests: dirty_log_test: improve mode param management)
  	}
  
  	return 0;
* Unmerged path tools/testing/selftests/kvm/dirty_log_test.c
