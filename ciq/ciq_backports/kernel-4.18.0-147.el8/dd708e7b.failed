rdma/cxgb4: Simplify a structure initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Bart Van Assche <bart.vanassche@wdc.com>
commit dd708e7b4541da1d61cdce2db1d9701444fdb317
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/dd708e7b.failed

This patch avoids that sparse reports the following warning:

drivers/infiniband/hw/cxgb4/qp.c:2269:34: warning: Using plain integer as NULL pointer

	Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
	Acked-by: Steve Wise <swise@opengridcomputing.com>
	Acked-by: Raju Rangoju <rajur@chelsio.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit dd708e7b4541da1d61cdce2db1d9701444fdb317)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/qp.c
diff --cc drivers/infiniband/hw/cxgb4/qp.c
index 6036bd5d7ecb,c26086c76f0b..000000000000
--- a/drivers/infiniband/hw/cxgb4/qp.c
+++ b/drivers/infiniband/hw/cxgb4/qp.c
@@@ -2242,6 -2264,45 +2242,48 @@@ struct ib_qp *c4iw_get_qp(struct ib_dev
  	return (struct ib_qp *)get_qhp(to_c4iw_dev(dev), qpn);
  }
  
++<<<<<<< HEAD
++=======
+ void c4iw_dispatch_srq_limit_reached_event(struct c4iw_srq *srq)
+ {
+ 	struct ib_event event = {};
+ 
+ 	event.device = &srq->rhp->ibdev;
+ 	event.element.srq = &srq->ibsrq;
+ 	event.event = IB_EVENT_SRQ_LIMIT_REACHED;
+ 	ib_dispatch_event(&event);
+ }
+ 
+ int c4iw_modify_srq(struct ib_srq *ib_srq, struct ib_srq_attr *attr,
+ 		    enum ib_srq_attr_mask srq_attr_mask,
+ 		    struct ib_udata *udata)
+ {
+ 	struct c4iw_srq *srq = to_c4iw_srq(ib_srq);
+ 	int ret = 0;
+ 
+ 	/*
+ 	 * XXX 0 mask == a SW interrupt for srq_limit reached...
+ 	 */
+ 	if (udata && !srq_attr_mask) {
+ 		c4iw_dispatch_srq_limit_reached_event(srq);
+ 		goto out;
+ 	}
+ 
+ 	/* no support for this yet */
+ 	if (srq_attr_mask & IB_SRQ_MAX_WR) {
+ 		ret = -EINVAL;
+ 		goto out;
+ 	}
+ 
+ 	if (!udata && (srq_attr_mask & IB_SRQ_LIMIT)) {
+ 		srq->armed = true;
+ 		srq->srq_limit = attr->srq_limit;
+ 	}
+ out:
+ 	return ret;
+ }
+ 
++>>>>>>> dd708e7b4541 (rdma/cxgb4: Simplify a structure initialization)
  int c4iw_ib_query_qp(struct ib_qp *ibqp, struct ib_qp_attr *attr,
  		     int attr_mask, struct ib_qp_init_attr *init_attr)
  {
* Unmerged path drivers/infiniband/hw/cxgb4/qp.c
