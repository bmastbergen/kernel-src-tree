IB/mlx5: Use uid as part of alloc/dealloc transport domain

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yishai Hadas <yishaih@mellanox.com>
commit 425518cc5ede0d7a71886816368e4bef60e418db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/425518cc.failed

Use uid as part of alloc/dealloc transport domain to let firmware manages
the resources correctly.

Fixes: d2d19121ae2f ("IB/mlx5: Set uid as part of TD commands")
	Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
	Reviewed-by: Artemy Kovalyov <artemyko@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 425518cc5ede0d7a71886816368e4bef60e418db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/cmd.c
diff --cc drivers/infiniband/hw/mlx5/cmd.c
index 64e48e303392,59d569c6a13a..000000000000
--- a/drivers/infiniband/hw/mlx5/cmd.c
+++ b/drivers/infiniband/hw/mlx5/cmd.c
@@@ -198,6 -198,71 +198,74 @@@ int mlx5_cmd_query_ext_ppcnt_counters(s
  				     0, 0);
  }
  
++<<<<<<< HEAD
++=======
+ void mlx5_cmd_destroy_tir(struct mlx5_core_dev *dev, u32 tirn, u16 uid)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(destroy_tir_in)]   = {};
+ 	u32 out[MLX5_ST_SZ_DW(destroy_tir_out)] = {};
+ 
+ 	MLX5_SET(destroy_tir_in, in, opcode, MLX5_CMD_OP_DESTROY_TIR);
+ 	MLX5_SET(destroy_tir_in, in, tirn, tirn);
+ 	MLX5_SET(destroy_tir_in, in, uid, uid);
+ 	mlx5_cmd_exec(dev, in, sizeof(in), out, sizeof(out));
+ }
+ 
+ void mlx5_cmd_destroy_tis(struct mlx5_core_dev *dev, u32 tisn, u16 uid)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(destroy_tis_in)]   = {0};
+ 	u32 out[MLX5_ST_SZ_DW(destroy_tis_out)] = {0};
+ 
+ 	MLX5_SET(destroy_tis_in, in, opcode, MLX5_CMD_OP_DESTROY_TIS);
+ 	MLX5_SET(destroy_tis_in, in, tisn, tisn);
+ 	MLX5_SET(destroy_tis_in, in, uid, uid);
+ 	mlx5_cmd_exec(dev, in, sizeof(in), out, sizeof(out));
+ }
+ 
+ void mlx5_cmd_destroy_rqt(struct mlx5_core_dev *dev, u32 rqtn, u16 uid)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(destroy_rqt_in)]   = {};
+ 	u32 out[MLX5_ST_SZ_DW(destroy_rqt_out)] = {};
+ 
+ 	MLX5_SET(destroy_rqt_in, in, opcode, MLX5_CMD_OP_DESTROY_RQT);
+ 	MLX5_SET(destroy_rqt_in, in, rqtn, rqtn);
+ 	MLX5_SET(destroy_rqt_in, in, uid, uid);
+ 	mlx5_cmd_exec(dev, in, sizeof(in), out, sizeof(out));
+ }
+ 
+ int mlx5_cmd_alloc_transport_domain(struct mlx5_core_dev *dev, u32 *tdn,
+ 				    u16 uid)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(alloc_transport_domain_in)]   = {0};
+ 	u32 out[MLX5_ST_SZ_DW(alloc_transport_domain_out)] = {0};
+ 	int err;
+ 
+ 	MLX5_SET(alloc_transport_domain_in, in, opcode,
+ 		 MLX5_CMD_OP_ALLOC_TRANSPORT_DOMAIN);
+ 	MLX5_SET(alloc_transport_domain_in, in, uid, uid);
+ 
+ 	err = mlx5_cmd_exec(dev, in, sizeof(in), out, sizeof(out));
+ 	if (!err)
+ 		*tdn = MLX5_GET(alloc_transport_domain_out, out,
+ 				transport_domain);
+ 
+ 	return err;
+ }
+ 
+ void mlx5_cmd_dealloc_transport_domain(struct mlx5_core_dev *dev, u32 tdn,
+ 				       u16 uid)
+ {
+ 	u32 in[MLX5_ST_SZ_DW(dealloc_transport_domain_in)]   = {0};
+ 	u32 out[MLX5_ST_SZ_DW(dealloc_transport_domain_out)] = {0};
+ 
+ 	MLX5_SET(dealloc_transport_domain_in, in, opcode,
+ 		 MLX5_CMD_OP_DEALLOC_TRANSPORT_DOMAIN);
+ 	MLX5_SET(dealloc_transport_domain_in, in, uid, uid);
+ 	MLX5_SET(dealloc_transport_domain_in, in, transport_domain, tdn);
+ 	mlx5_cmd_exec(dev, in, sizeof(in), out, sizeof(out));
+ }
+ 
++>>>>>>> 425518cc5ede (IB/mlx5: Use uid as part of alloc/dealloc transport domain)
  void mlx5_cmd_dealloc_pd(struct mlx5_core_dev *dev, u32 pdn, u16 uid)
  {
  	u32 out[MLX5_ST_SZ_DW(dealloc_pd_out)] = {};
* Unmerged path drivers/infiniband/hw/mlx5/cmd.c
