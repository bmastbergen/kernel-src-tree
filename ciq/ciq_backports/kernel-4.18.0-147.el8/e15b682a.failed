drm/nouveau/core: initial support for boards with TU117 chipset

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Ben Skeggs <bskeggs@redhat.com>
commit e15b682aad77f158e4af51d258ed7398036fdf8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/e15b682a.failed

Modesetting only, still waiting on ACR/GR firmware from NVIDIA for Turing
graphics/compute bring-up.

Each subsystem was compared with traces, along with various tests to check
that things generally work as they should, and appears compatible enough
with the current TU106 code to enable support.

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit e15b682aad77f158e4af51d258ed7398036fdf8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 39f10ff3707f,10d91e8bbb94..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@@ -2434,6 -2435,146 +2434,149 @@@ nv140_chipset = 
  	.sec2 = gp102_sec2_new,
  };
  
++<<<<<<< HEAD
++=======
+ static const struct nvkm_device_chip
+ nv162_chipset = {
+ 	.name = "TU102",
+ 	.bar = tu102_bar_new,
+ 	.bios = nvkm_bios_new,
+ 	.bus = gf100_bus_new,
+ 	.devinit = tu102_devinit_new,
+ 	.fault = tu102_fault_new,
+ 	.fb = gv100_fb_new,
+ 	.fuse = gm107_fuse_new,
+ 	.gpio = gk104_gpio_new,
+ 	.gsp = gv100_gsp_new,
+ 	.i2c = gm200_i2c_new,
+ 	.ibus = gm200_ibus_new,
+ 	.imem = nv50_instmem_new,
+ 	.ltc = gp102_ltc_new,
+ 	.mc = tu102_mc_new,
+ 	.mmu = tu102_mmu_new,
+ 	.pci = gp100_pci_new,
+ 	.pmu = gp102_pmu_new,
+ 	.therm = gp100_therm_new,
+ 	.timer = gk20a_timer_new,
+ 	.top = gk104_top_new,
+ 	.ce[0] = tu102_ce_new,
+ 	.ce[1] = tu102_ce_new,
+ 	.ce[2] = tu102_ce_new,
+ 	.ce[3] = tu102_ce_new,
+ 	.ce[4] = tu102_ce_new,
+ 	.disp = tu102_disp_new,
+ 	.dma = gv100_dma_new,
+ 	.fifo = tu102_fifo_new,
+ 	.nvdec[0] = gp102_nvdec_new,
+ 	.sec2 = tu102_sec2_new,
+ };
+ 
+ static const struct nvkm_device_chip
+ nv164_chipset = {
+ 	.name = "TU104",
+ 	.bar = tu102_bar_new,
+ 	.bios = nvkm_bios_new,
+ 	.bus = gf100_bus_new,
+ 	.devinit = tu102_devinit_new,
+ 	.fault = tu102_fault_new,
+ 	.fb = gv100_fb_new,
+ 	.fuse = gm107_fuse_new,
+ 	.gpio = gk104_gpio_new,
+ 	.gsp = gv100_gsp_new,
+ 	.i2c = gm200_i2c_new,
+ 	.ibus = gm200_ibus_new,
+ 	.imem = nv50_instmem_new,
+ 	.ltc = gp102_ltc_new,
+ 	.mc = tu102_mc_new,
+ 	.mmu = tu102_mmu_new,
+ 	.pci = gp100_pci_new,
+ 	.pmu = gp102_pmu_new,
+ 	.therm = gp100_therm_new,
+ 	.timer = gk20a_timer_new,
+ 	.top = gk104_top_new,
+ 	.ce[0] = tu102_ce_new,
+ 	.ce[1] = tu102_ce_new,
+ 	.ce[2] = tu102_ce_new,
+ 	.ce[3] = tu102_ce_new,
+ 	.ce[4] = tu102_ce_new,
+ 	.disp = tu102_disp_new,
+ 	.dma = gv100_dma_new,
+ 	.fifo = tu102_fifo_new,
+ 	.nvdec[0] = gp102_nvdec_new,
+ 	.sec2 = tu102_sec2_new,
+ };
+ 
+ static const struct nvkm_device_chip
+ nv166_chipset = {
+ 	.name = "TU106",
+ 	.bar = tu102_bar_new,
+ 	.bios = nvkm_bios_new,
+ 	.bus = gf100_bus_new,
+ 	.devinit = tu102_devinit_new,
+ 	.fault = tu102_fault_new,
+ 	.fb = gv100_fb_new,
+ 	.fuse = gm107_fuse_new,
+ 	.gpio = gk104_gpio_new,
+ 	.gsp = gv100_gsp_new,
+ 	.i2c = gm200_i2c_new,
+ 	.ibus = gm200_ibus_new,
+ 	.imem = nv50_instmem_new,
+ 	.ltc = gp102_ltc_new,
+ 	.mc = tu102_mc_new,
+ 	.mmu = tu102_mmu_new,
+ 	.pci = gp100_pci_new,
+ 	.pmu = gp102_pmu_new,
+ 	.therm = gp100_therm_new,
+ 	.timer = gk20a_timer_new,
+ 	.top = gk104_top_new,
+ 	.ce[0] = tu102_ce_new,
+ 	.ce[1] = tu102_ce_new,
+ 	.ce[2] = tu102_ce_new,
+ 	.ce[3] = tu102_ce_new,
+ 	.ce[4] = tu102_ce_new,
+ 	.disp = tu102_disp_new,
+ 	.dma = gv100_dma_new,
+ 	.fifo = tu102_fifo_new,
+ 	.nvdec[0] = gp102_nvdec_new,
+ 	.sec2 = tu102_sec2_new,
+ };
+ 
+ static const struct nvkm_device_chip
+ nv167_chipset = {
+ 	.name = "TU117",
+ 	.bar = tu102_bar_new,
+ 	.bios = nvkm_bios_new,
+ 	.bus = gf100_bus_new,
+ 	.devinit = tu102_devinit_new,
+ 	.fault = tu102_fault_new,
+ 	.fb = gv100_fb_new,
+ 	.fuse = gm107_fuse_new,
+ 	.gpio = gk104_gpio_new,
+ 	.gsp = gv100_gsp_new,
+ 	.i2c = gm200_i2c_new,
+ 	.ibus = gm200_ibus_new,
+ 	.imem = nv50_instmem_new,
+ 	.ltc = gp102_ltc_new,
+ 	.mc = tu102_mc_new,
+ 	.mmu = tu102_mmu_new,
+ 	.pci = gp100_pci_new,
+ 	.pmu = gp102_pmu_new,
+ 	.therm = gp100_therm_new,
+ 	.timer = gk20a_timer_new,
+ 	.top = gk104_top_new,
+ 	.ce[0] = tu102_ce_new,
+ 	.ce[1] = tu102_ce_new,
+ 	.ce[2] = tu102_ce_new,
+ 	.ce[3] = tu102_ce_new,
+ 	.ce[4] = tu102_ce_new,
+ 	.disp = tu102_disp_new,
+ 	.dma = gv100_dma_new,
+ 	.fifo = tu102_fifo_new,
+ 	.nvdec[0] = gp102_nvdec_new,
+ 	.sec2 = tu102_sec2_new,
+ };
+ 
++>>>>>>> e15b682aad77 (drm/nouveau/core: initial support for boards with TU117 chipset)
  static int
  nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
  		       struct nvkm_notify *notify)
@@@ -2903,6 -3048,10 +3046,13 @@@ nvkm_device_ctor(const struct nvkm_devi
  		case 0x138: device->chip = &nv138_chipset; break;
  		case 0x13b: device->chip = &nv13b_chipset; break;
  		case 0x140: device->chip = &nv140_chipset; break;
++<<<<<<< HEAD
++=======
+ 		case 0x162: device->chip = &nv162_chipset; break;
+ 		case 0x164: device->chip = &nv164_chipset; break;
+ 		case 0x166: device->chip = &nv166_chipset; break;
+ 		case 0x167: device->chip = &nv167_chipset; break;
++>>>>>>> e15b682aad77 (drm/nouveau/core: initial support for boards with TU117 chipset)
  		default:
  			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
  			goto done;
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
