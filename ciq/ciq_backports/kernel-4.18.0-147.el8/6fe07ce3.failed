x86/resctrl: Rename the config option INTEL_RDT to RESCTRL

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Babu Moger <Babu.Moger@amd.com>
commit 6fe07ce35e8ad870ba1cf82e0481e0fc0f526eff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/6fe07ce3.failed

The resource control feature is supported by both Intel and AMD. So,
rename CONFIG_INTEL_RDT to the vendor-neutral CONFIG_RESCTRL.

Now CONFIG_RESCTRL will be used for both Intel and AMD to enable
Resource Control support. Update the texts in config and condition
accordingly.

 [ bp: Simplify Kconfig text. ]

	Signed-off-by: Babu Moger <babu.moger@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Cc: Brijesh Singh <brijesh.singh@amd.com>
	Cc: "Chang S. Bae" <chang.seok.bae@intel.com>
	Cc: David Miller <davem@davemloft.net>
	Cc: David Woodhouse <dwmw2@infradead.org>
	Cc: Dmitry Safonov <dima@arista.com>
	Cc: Fenghua Yu <fenghua.yu@intel.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Jann Horn <jannh@google.com>
	Cc: Joerg Roedel <jroedel@suse.de>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Kate Stewart <kstewart@linuxfoundation.org>
	Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
	Cc: <linux-doc@vger.kernel.org>
	Cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Philippe Ombredanne <pombredanne@nexb.com>
	Cc: Pu Wen <puwen@hygon.cn>
	Cc: <qianyue.zj@alibaba-inc.com>
	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
	Cc: Reinette Chatre <reinette.chatre@intel.com>
	Cc: Rian Hunter <rian@alum.mit.edu>
	Cc: Sherry Hurwitz <sherry.hurwitz@amd.com>
	Cc: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Thomas Lendacky <Thomas.Lendacky@amd.com>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: Vitaly Kuznetsov <vkuznets@redhat.com>
	Cc: <xiaochen.shen@intel.com>
Link: https://lkml.kernel.org/r/20181121202811.4492-9-babu.moger@amd.com
(cherry picked from commit 6fe07ce35e8ad870ba1cf82e0481e0fc0f526eff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/Kconfig
#	arch/x86/kernel/cpu/Makefile
#	arch/x86/kernel/cpu/resctrl/Makefile
diff --cc arch/x86/Kconfig
index 9e4d0be6f50c,2d0577e805d2..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -443,16 -444,27 +443,34 @@@ config RETPOLIN
  	  branches. Requires a compiler with -mindirect-branch=thunk-extern
  	  support for full protection. The kernel may run slower.
  
++<<<<<<< HEAD
 +config INTEL_RDT
 +	bool "Intel Resource Director Technology support"
 +	default n
 +	depends on X86 && CPU_SUP_INTEL
++=======
+ 	  Without compiler support, at least indirect branches in assembler
+ 	  code are eliminated. Since this includes the syscall entry path,
+ 	  it is not entirely pointless.
+ 
+ config RESCTRL
+ 	bool "Resource Control support"
+ 	depends on X86 && (CPU_SUP_INTEL || CPU_SUP_AMD)
++>>>>>>> 6fe07ce35e8a (x86/resctrl: Rename the config option INTEL_RDT to RESCTRL)
  	select KERNFS
  	help
- 	  Select to enable resource allocation and monitoring which are
- 	  sub-features of Intel Resource Director Technology(RDT). More
- 	  information about RDT can be found in the Intel x86
- 	  Architecture Software Developer Manual.
+ 	  Enable Resource Control support.
+ 
+ 	  Provide support for the allocation and monitoring of system resources
+ 	  usage by the CPU.
+ 
+ 	  Intel calls this Intel Resource Director Technology
+ 	  (Intel(R) RDT). More information about RDT can be found in the
+ 	  Intel x86 Architecture Software Developer Manual.
+ 
+ 	  AMD calls this AMD Platform Quality of Service (AMD QoS).
+ 	  More information about AMD QoS can be found in the AMD64 Technology
+ 	  Platform Quality of Service Extensions manual.
  
  	  Say N if unsure.
  
diff --cc arch/x86/kernel/cpu/Makefile
index b2d1029cfa08,dc4acaa1549d..000000000000
--- a/arch/x86/kernel/cpu/Makefile
+++ b/arch/x86/kernel/cpu/Makefile
@@@ -35,13 -36,10 +35,17 @@@ obj-$(CONFIG_CPU_SUP_CENTAUR)		+= centa
  obj-$(CONFIG_CPU_SUP_TRANSMETA_32)	+= transmeta.o
  obj-$(CONFIG_CPU_SUP_UMC_32)		+= umc.o
  
 -obj-$(CONFIG_X86_MCE)			+= mcheck/
 +obj-$(CONFIG_INTEL_RDT)	+= intel_rdt.o intel_rdt_rdtgroup.o intel_rdt_monitor.o
 +obj-$(CONFIG_INTEL_RDT)	+= intel_rdt_ctrlmondata.o intel_rdt_pseudo_lock.o
 +CFLAGS_intel_rdt_pseudo_lock.o = -I$(src)
 +
 +obj-$(CONFIG_X86_MCE)			+= mce/
  obj-$(CONFIG_MTRR)			+= mtrr/
  obj-$(CONFIG_MICROCODE)			+= microcode/
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_RESCTRL)			+= resctrl/
++>>>>>>> 6fe07ce35e8a (x86/resctrl: Rename the config option INTEL_RDT to RESCTRL)
  
  obj-$(CONFIG_X86_LOCAL_APIC)		+= perfctr-watchdog.o
  
* Unmerged path arch/x86/kernel/cpu/resctrl/Makefile
* Unmerged path arch/x86/Kconfig
diff --git a/arch/x86/include/asm/intel_rdt_sched.h b/arch/x86/include/asm/intel_rdt_sched.h
index 6e082697a613..54990fe2a3ae 100644
--- a/arch/x86/include/asm/intel_rdt_sched.h
+++ b/arch/x86/include/asm/intel_rdt_sched.h
@@ -2,7 +2,7 @@
 #ifndef _ASM_X86_RESCTRL_SCHED_H
 #define _ASM_X86_RESCTRL_SCHED_H
 
-#ifdef CONFIG_INTEL_RDT
+#ifdef CONFIG_RESCTRL
 
 #include <linux/sched.h>
 #include <linux/jump_label.h>
@@ -88,6 +88,6 @@ static inline void resctrl_sched_in(void)
 
 static inline void resctrl_sched_in(void) {}
 
-#endif /* CONFIG_INTEL_RDT */
+#endif /* CONFIG_RESCTRL */
 
 #endif /* _ASM_X86_RESCTRL_SCHED_H */
* Unmerged path arch/x86/kernel/cpu/Makefile
* Unmerged path arch/x86/kernel/cpu/resctrl/Makefile
diff --git a/include/linux/sched.h b/include/linux/sched.h
index f93ddc7e786f..6e453f693dc7 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -985,7 +985,7 @@ struct task_struct {
 	/* cg_list protected by css_set_lock and tsk->alloc_lock: */
 	struct list_head		cg_list;
 #endif
-#ifdef CONFIG_INTEL_RDT
+#ifdef CONFIG_RESCTRL
 	u32				closid;
 	u32				rmid;
 #endif
