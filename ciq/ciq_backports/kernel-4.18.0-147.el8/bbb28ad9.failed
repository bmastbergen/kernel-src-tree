RDMA/uverbs: Remove out_len checks that are now done by the core

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Jason Gunthorpe <jgg@ziepe.ca>
commit bbb28ad9035f8efa9c5581b3809ff8055cc1f4b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/bbb28ad9.failed

write() methods must work with fixed sized structures as that is the only
way to know where the udata segment starts. The common udata code now
rejects any write() that has a response buffer shorter than the core's
response.

Thus all the checks of out_len for write methods are redundant and can be
removed.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit bbb28ad9035f8efa9c5581b3809ff8055cc1f4b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_cmd.c
diff --cc drivers/infiniband/core/uverbs_cmd.c
index 300532a4cde8,5708abc0e4d4..000000000000
--- a/drivers/infiniband/core/uverbs_cmd.c
+++ b/drivers/infiniband/core/uverbs_cmd.c
@@@ -76,11 -75,9 +76,8 @@@ ssize_t ib_uverbs_get_context(struct ib
  	struct ib_ucontext		 *ucontext;
  	struct file			 *filp;
  	struct ib_rdmacg_object		 cg_obj;
 -	struct ib_device *ib_dev;
  	int ret;
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -227,10 -222,12 +224,7 @@@ ssize_t ib_uverbs_query_device(struct i
  {
  	struct ib_uverbs_query_device      cmd;
  	struct ib_uverbs_query_device_resp resp;
 -	struct ib_ucontext *ucontext;
 -
 -	ucontext = ib_uverbs_get_ucontext(attrs);
 -	if (IS_ERR(ucontext))
 -		return PTR_ERR(ucontext);
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -273,10 -268,14 +267,7 @@@ ssize_t ib_uverbs_query_port(struct ib_
  	struct ib_uverbs_query_port_resp resp;
  	struct ib_port_attr              attr;
  	int                              ret;
 -	struct ib_ucontext *ucontext;
 -	struct ib_device *ib_dev;
 -
 -	ucontext = ib_uverbs_get_ucontext(attrs);
 -	if (IS_ERR(ucontext))
 -		return PTR_ERR(ucontext);
 -	ib_dev = ucontext->device;
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -334,10 -330,8 +325,7 @@@ ssize_t ib_uverbs_alloc_pd(struct ib_uv
  	struct ib_uobject             *uobj;
  	struct ib_pd                  *pd;
  	int                            ret;
 -	struct ib_device *ib_dev;
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -497,10 -479,8 +485,7 @@@ ssize_t ib_uverbs_open_xrcd(struct ib_u
  	struct inode                   *inode = NULL;
  	int				ret = 0;
  	int				new_xrcd = 0;
 -	struct ib_device *ib_dev;
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -653,10 -625,8 +638,7 @@@ ssize_t ib_uverbs_reg_mr(struct ib_uver
  	struct ib_pd                *pd;
  	struct ib_mr                *mr;
  	int                          ret;
 -	struct ib_device *ib_dev;
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -851,12 -798,9 +830,9 @@@ ssize_t ib_uverbs_alloc_mw(struct ib_uv
  	struct ib_uobject             *uobj;
  	struct ib_pd                  *pd;
  	struct ib_mw                  *mw;
 +	struct ib_udata		       udata;
  	int                            ret;
 -	struct ib_device *ib_dev;
  
- 	if (out_len < sizeof(resp))
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof(cmd)))
  		return -EFAULT;
  
@@@ -934,10 -867,8 +910,7 @@@ ssize_t ib_uverbs_create_comp_channel(s
  	struct ib_uverbs_create_comp_channel_resp  resp;
  	struct ib_uobject			  *uobj;
  	struct ib_uverbs_completion_event_file	  *ev_file;
 -	struct ib_device *ib_dev;
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -1076,12 -1002,8 +1049,9 @@@ ssize_t ib_uverbs_create_cq(struct ib_u
  	struct ib_uverbs_ex_create_cq	cmd_ex;
  	struct ib_uverbs_create_cq_resp resp;
  	struct ib_udata                 ucore;
 +	struct ib_udata                 uhw;
  	struct ib_ucq_object           *obj;
  
- 	if (out_len < sizeof(resp))
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof(cmd)))
  		return -EFAULT;
  
@@@ -1740,10 -1606,8 +1707,7 @@@ ssize_t ib_uverbs_open_qp(struct ib_uve
  	struct ib_qp                   *qp;
  	struct ib_qp_open_attr          attr;
  	int ret;
 -	struct ib_device *ib_dev;
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -2619,11 -2438,8 +2583,8 @@@ ssize_t ib_uverbs_create_ah(struct ib_u
  	struct ib_ah			*ah;
  	struct rdma_ah_attr		attr = {};
  	int ret;
 -	struct ib_device *ib_dev;
 +	struct ib_udata                   udata;
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
  
@@@ -3872,12 -3628,6 +3833,15 @@@ ssize_t ib_uverbs_create_srq(struct ib_
  {
  	struct ib_uverbs_create_srq      cmd;
  	struct ib_uverbs_create_xsrq     xcmd;
++<<<<<<< HEAD
 +	struct ib_uverbs_create_srq_resp resp;
 +	struct ib_udata                  udata;
 +	int ret;
 +
 +	if (out_len < sizeof resp)
 +		return -ENOSPC;
++=======
++>>>>>>> bbb28ad9035f (RDMA/uverbs: Remove out_len checks that are now done by the core)
  
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
@@@ -3891,29 -3641,14 +3855,32 @@@
  	xcmd.max_sge	 = cmd.max_sge;
  	xcmd.srq_limit	 = cmd.srq_limit;
  
 -	return __uverbs_create_xsrq(attrs, &xcmd, &attrs->driver_udata);
 +	ib_uverbs_init_udata(&udata, buf + sizeof(cmd),
 +		   u64_to_user_ptr(cmd.response) + sizeof(resp),
 +		   in_len - sizeof(cmd) - sizeof(struct ib_uverbs_cmd_hdr),
 +		   out_len - sizeof(resp));
 +
 +	ret = __uverbs_create_xsrq(file, ib_dev, &xcmd, &udata);
 +	if (ret)
 +		return ret;
 +
 +	return in_len;
  }
  
 -static int ib_uverbs_create_xsrq(struct uverbs_attr_bundle *attrs,
 -				 const char __user *buf, int in_len,
 -				 int out_len)
 +ssize_t ib_uverbs_create_xsrq(struct ib_uverbs_file *file,
 +			      struct ib_device *ib_dev,
 +			      const char __user *buf, int in_len, int out_len)
  {
  	struct ib_uverbs_create_xsrq     cmd;
++<<<<<<< HEAD
 +	struct ib_uverbs_create_srq_resp resp;
 +	struct ib_udata                  udata;
 +	int ret;
 +
 +	if (out_len < sizeof resp)
 +		return -ENOSPC;
++=======
++>>>>>>> bbb28ad9035f (RDMA/uverbs: Remove out_len checks that are now done by the core)
  
  	if (copy_from_user(&cmd, buf, sizeof cmd))
  		return -EFAULT;
* Unmerged path drivers/infiniband/core/uverbs_cmd.c
