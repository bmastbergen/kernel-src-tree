bpf: fix SO_MAX_PACING_RATE to support TCP internal pacing

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Yuchung Cheng <ycheng@google.com>
commit e224c390a6259c529f7b2a6bd215a087b3344f5c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/e224c390.failed

If sch_fq packet scheduler is not used, TCP can fallback to
internal pacing, but this requires sk_pacing_status to
be properly set.

Fixes: 8c4b4c7e9ff0 ("bpf: Add setsockopt helper function to bpf")
	Signed-off-by: Yuchung Cheng <ycheng@google.com>
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Cc: Lawrence Brakmo <brakmo@fb.com>
	Acked-by: Martin KaFai Lau <kafai@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit e224c390a6259c529f7b2a6bd215a087b3344f5c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/filter.c
diff --cc net/core/filter.c
index f1b9a159516f,dab10d21cae8..000000000000
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@@ -3906,8 -4118,12 +3906,17 @@@ BPF_CALL_5(bpf_setsockopt, struct bpf_s
  			sk->sk_userlocks |= SOCK_SNDBUF_LOCK;
  			sk->sk_sndbuf = max_t(int, val * 2, SOCK_MIN_SNDBUF);
  			break;
++<<<<<<< HEAD
 +		case SO_MAX_PACING_RATE:
 +			sk->sk_max_pacing_rate = val;
++=======
+ 		case SO_MAX_PACING_RATE: /* 32bit version */
+ 			if (val != ~0U)
+ 				cmpxchg(&sk->sk_pacing_status,
+ 					SK_PACING_NONE,
+ 					SK_PACING_NEEDED);
+ 			sk->sk_max_pacing_rate = (val == ~0U) ? ~0UL : val;
++>>>>>>> e224c390a625 (bpf: fix SO_MAX_PACING_RATE to support TCP internal pacing)
  			sk->sk_pacing_rate = min(sk->sk_pacing_rate,
  						 sk->sk_max_pacing_rate);
  			break;
* Unmerged path net/core/filter.c
