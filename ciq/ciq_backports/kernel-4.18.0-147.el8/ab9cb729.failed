phy: marvell: Rename mii_lpa_to_linkmode_lpa_t

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Andrew Lunn <andrew@lunn.ch>
commit ab9cb729ab0d4151f7ba76dd3ff592242a694754
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/ab9cb729.failed

Rename mii_lpa_to_linkmode_lpa_t to mii_lpa_mod_linkmode_lpa_t to
indicate it modifies the passed linkmode bitmap, without clearing any
other bits.

Also, ensure bit are clear which the lpa indicates should not be set.

Fixes: c0ec3c273677 ("net: phy: Convert u32 phydev->lp_advertising to linkmode")
	Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ab9cb729ab0d4151f7ba76dd3ff592242a694754)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/marvell.c
diff --cc drivers/net/phy/marvell.c
index f46f1b5bde0c,a9c7c7f41b0c..000000000000
--- a/drivers/net/phy/marvell.c
+++ b/drivers/net/phy/marvell.c
@@@ -1064,22 -1047,21 +1064,40 @@@ static int m88e1145_config_init(struct 
  }
  
  /**
++<<<<<<< HEAD
 + * fiber_lpa_to_ethtool_lpa_t
 + * @lpa: value of the MII_LPA register for fiber link
 + *
 + * A small helper function that translates MII_LPA
 + * bits to ethtool LP advertisement settings.
 + */
 +static u32 fiber_lpa_to_ethtool_lpa_t(u32 lpa)
 +{
 +	u32 result = 0;
 +
 +	if (lpa & LPA_FIBER_1000HALF)
 +		result |= ADVERTISED_1000baseT_Half;
 +	if (lpa & LPA_FIBER_1000FULL)
 +		result |= ADVERTISED_1000baseT_Full;
 +
 +	return result;
++=======
+  * fiber_lpa_mod_linkmode_lpa_t
+  * @advertising: the linkmode advertisement settings
+  * @lpa: value of the MII_LPA register for fiber link
+  *
+  * A small helper function that translates MII_LPA bits to linkmode LP
+  * advertisement settings. Other bits in advertising are left
+  * unchanged.
+  */
+ static void fiber_lpa_mod_linkmode_lpa_t(unsigned long *advertising, u32 lpa)
+ {
+ 	linkmode_mod_bit(ETHTOOL_LINK_MODE_1000baseT_Half_BIT,
+ 			 advertising, lpa & LPA_FIBER_1000HALF);
+ 
+ 	linkmode_mod_bit(ETHTOOL_LINK_MODE_1000baseT_Full_BIT,
+ 			 advertising, lpa & LPA_FIBER_1000FULL);
++>>>>>>> ab9cb729ab0d (phy: marvell: Rename mii_lpa_to_linkmode_lpa_t)
  }
  
  /**
@@@ -1165,7 -1146,7 +1183,11 @@@ static int marvell_read_status_page_an(
  		}
  	} else {
  		/* The fiber link is only 1000M capable */
++<<<<<<< HEAD
 +		phydev->lp_advertising = fiber_lpa_to_ethtool_lpa_t(lpa);
++=======
+ 		fiber_lpa_mod_linkmode_lpa_t(phydev->lp_advertising, lpa);
++>>>>>>> ab9cb729ab0d (phy: marvell: Rename mii_lpa_to_linkmode_lpa_t)
  
  		if (phydev->duplex == DUPLEX_FULL) {
  			if (!(lpa & LPA_PAUSE_FIBER)) {
* Unmerged path drivers/net/phy/marvell.c
