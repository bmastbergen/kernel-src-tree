selftests/powerpc: Give some tests longer to run

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Michael Ellerman <mpe@ellerman.id.au>
commit d97e7f198b10ea9d17ea64606f18102260870782
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/d97e7f19.failed

Some of these long running tests can time out on heavily loaded
systems, give them longer to run.

	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit d97e7f198b10ea9d17ea64606f18102260870782)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/powerpc/stringloops/memcmp.c
diff --cc tools/testing/selftests/powerpc/stringloops/memcmp.c
index 8250db25b379,b1fa7546957f..000000000000
--- a/tools/testing/selftests/powerpc/stringloops/memcmp.c
+++ b/tools/testing/selftests/powerpc/stringloops/memcmp.c
@@@ -98,7 -145,15 +98,12 @@@ static int testcase(void
  	return 0;
  }
  
 -static int testcases(void)
 -{
 -	testcase(0);
 -	testcase(1);
 -	return 0;
 -}
 -
  int main(void)
  {
++<<<<<<< HEAD
 +	return test_harness(testcase, "memcmp");
++=======
+ 	test_harness_set_timeout(300);
+ 	return test_harness(testcases, "memcmp");
++>>>>>>> d97e7f198b10 (selftests/powerpc: Give some tests longer to run)
  }
diff --git a/tools/testing/selftests/powerpc/benchmarks/futex_bench.c b/tools/testing/selftests/powerpc/benchmarks/futex_bench.c
index 2fc711d9150d..d58e4dc50fcd 100644
--- a/tools/testing/selftests/powerpc/benchmarks/futex_bench.c
+++ b/tools/testing/selftests/powerpc/benchmarks/futex_bench.c
@@ -38,5 +38,6 @@ int test_futex(void)
 
 int main(void)
 {
+	test_harness_set_timeout(300);
 	return test_harness(test_futex, "futex_bench");
 }
diff --git a/tools/testing/selftests/powerpc/benchmarks/mmap_bench.c b/tools/testing/selftests/powerpc/benchmarks/mmap_bench.c
index 7a0a462a2272..033de0560d99 100644
--- a/tools/testing/selftests/powerpc/benchmarks/mmap_bench.c
+++ b/tools/testing/selftests/powerpc/benchmarks/mmap_bench.c
@@ -84,5 +84,7 @@ int main(int argc, char *argv[])
 			exit(1);
 		}
 	}
+
+	test_harness_set_timeout(300);
 	return test_harness(test_mmap, "mmap_bench");
 }
diff --git a/tools/testing/selftests/powerpc/pmu/ebb/instruction_count_test.c b/tools/testing/selftests/powerpc/pmu/ebb/instruction_count_test.c
index ae9a79086111..35a3426e341c 100644
--- a/tools/testing/selftests/powerpc/pmu/ebb/instruction_count_test.c
+++ b/tools/testing/selftests/powerpc/pmu/ebb/instruction_count_test.c
@@ -162,5 +162,6 @@ int instruction_count(void)
 
 int main(void)
 {
+	test_harness_set_timeout(300);
 	return test_harness(instruction_count, "instruction_count");
 }
diff --git a/tools/testing/selftests/powerpc/pmu/ebb/lost_exception_test.c b/tools/testing/selftests/powerpc/pmu/ebb/lost_exception_test.c
index eb8acb78bc6c..2ed7ad33f7a3 100644
--- a/tools/testing/selftests/powerpc/pmu/ebb/lost_exception_test.c
+++ b/tools/testing/selftests/powerpc/pmu/ebb/lost_exception_test.c
@@ -98,5 +98,6 @@ static int lost_exception(void)
 
 int main(void)
 {
+	test_harness_set_timeout(300);
 	return test_harness(lost_exception, "lost_exception");
 }
* Unmerged path tools/testing/selftests/powerpc/stringloops/memcmp.c
