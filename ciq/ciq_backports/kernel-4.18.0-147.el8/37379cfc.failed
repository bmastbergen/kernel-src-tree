libnvdimm/security: Quiet security operations

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Dan Williams <dan.j.williams@intel.com>
commit 37379cfc661e51607733f266d9f407b4f8aee16b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/37379cfc.failed

The security implementation is too chatty. For example, the common case
is that security is not enabled / setup, and booting a qemu
configuration currently yields:

    nvdimm nmem0: request_key() found no key
    nvdimm nmem0: failed to unlock dimm: -126
    nvdimm nmem1: request_key() found no key
    nvdimm nmem1: failed to unlock dimm: -126

Convert all security related log messages to debug level.

	Cc: Dave Jiang <dave.jiang@intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 37379cfc661e51607733f266d9f407b4f8aee16b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/dimm.c
#	drivers/nvdimm/security.c
diff --cc drivers/nvdimm/dimm.c
index 1555c3d54980,0cf58cabc9ed..000000000000
--- a/drivers/nvdimm/dimm.c
+++ b/drivers/nvdimm/dimm.c
@@@ -48,9 -55,31 +48,27 @@@ static int nvdimm_probe(struct device *
  	get_device(dev);
  	kref_init(&ndd->kref);
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * Attempt to unlock, if the DIMM supports security commands,
+ 	 * otherwise the locked indication is determined by explicit
+ 	 * status codes from the label reading commands.
+ 	 */
+ 	rc = nvdimm_security_unlock(dev);
+ 	if (rc < 0)
+ 		dev_dbg(dev, "failed to unlock dimm: %d\n", rc);
+ 
+ 
+ 	/*
+ 	 * EACCES failures reading the namespace label-area-properties
+ 	 * are interpreted as the DIMM capacity being locked but the
+ 	 * namespace labels themselves being accessible.
+ 	 */
++>>>>>>> 37379cfc661e (libnvdimm/security: Quiet security operations)
  	rc = nvdimm_init_nsarea(ndd);
 -	if (rc == -EACCES) {
 -		/*
 -		 * See nvdimm_namespace_common_probe() where we fail to
 -		 * allow namespaces to probe while the DIMM is locked,
 -		 * but we do allow for namespace enumeration.
 -		 */
 +	if (rc == -EACCES)
  		nvdimm_set_locked(dev);
 -		rc = 0;
 -	}
  	if (rc)
  		goto err;
  
* Unmerged path drivers/nvdimm/security.c
* Unmerged path drivers/nvdimm/dimm.c
* Unmerged path drivers/nvdimm/security.c
