nvmet: use a macro for default error location

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
commit 5698b805fbf09a5dfa60829f5a179c0568a8dc3b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/5698b805.failed

This patch defines a new macro NVMET_NO_ERROR_LOC to represent the
default error location value in the nvme-error-log-page.
This is a pure cleanup patch and it does not change any functionality.

	Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 5698b805fbf09a5dfa60829f5a179c0568a8dc3b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/core.c
diff --cc drivers/nvme/target/core.c
index 628b8f0276bd,88d260f31835..000000000000
--- a/drivers/nvme/target/core.c
+++ b/drivers/nvme/target/core.c
@@@ -561,6 -655,35 +561,38 @@@ static void nvmet_update_sq_head(struc
  	req->rsp->sq_head = cpu_to_le16(req->sq->sqhd & 0x0000FFFF);
  }
  
++<<<<<<< HEAD
++=======
+ static void nvmet_set_error(struct nvmet_req *req, u16 status)
+ {
+ 	struct nvmet_ctrl *ctrl = req->sq->ctrl;
+ 	struct nvme_error_slot *new_error_slot;
+ 	unsigned long flags;
+ 
+ 	req->rsp->status = cpu_to_le16(status << 1);
+ 
+ 	if (!ctrl || req->error_loc == NVMET_NO_ERROR_LOC)
+ 		return;
+ 
+ 	spin_lock_irqsave(&ctrl->error_lock, flags);
+ 	ctrl->err_counter++;
+ 	new_error_slot =
+ 		&ctrl->slots[ctrl->err_counter % NVMET_ERROR_LOG_SLOTS];
+ 
+ 	new_error_slot->error_count = cpu_to_le64(ctrl->err_counter);
+ 	new_error_slot->sqid = cpu_to_le16(req->sq->qid);
+ 	new_error_slot->cmdid = cpu_to_le16(req->cmd->common.command_id);
+ 	new_error_slot->status_field = cpu_to_le16(status << 1);
+ 	new_error_slot->param_error_location = cpu_to_le16(req->error_loc);
+ 	new_error_slot->lba = cpu_to_le64(req->error_slba);
+ 	new_error_slot->nsid = req->cmd->common.nsid;
+ 	spin_unlock_irqrestore(&ctrl->error_lock, flags);
+ 
+ 	/* set the more bit for this request */
+ 	req->rsp->status |= cpu_to_le16(1 << 14);
+ }
+ 
++>>>>>>> 5698b805fbf0 (nvmet: use a macro for default error location)
  static void __nvmet_req_complete(struct nvmet_req *req, u16 status)
  {
  	if (!req->sq->sqhd_disabled)
* Unmerged path drivers/nvme/target/core.c
diff --git a/drivers/nvme/target/nvmet.h b/drivers/nvme/target/nvmet.h
index 79e9206ddeb8..b287746ad74b 100644
--- a/drivers/nvme/target/nvmet.h
+++ b/drivers/nvme/target/nvmet.h
@@ -30,6 +30,7 @@
 
 #define NVMET_ASYNC_EVENTS		4
 #define NVMET_ERROR_LOG_SLOTS		128
+#define NVMET_NO_ERROR_LOC		((u16)-1)
 
 
 /*
