net/mlx5: Add support for plugged-disabled cable status in PME

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-147.el8
commit-author Mikhael Goikhman <migo@mellanox.com>
commit 8d6b57e6445989e9f34077ef1aac80b621029b08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-147.el8/8d6b57e6.failed

Support a new hardware module status in port module events:
- module_status=0x4 (Cable plugged, but disabled)

	Signed-off-by: Mikhael Goikhman <migo@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 8d6b57e6445989e9f34077ef1aac80b621029b08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/events.c
#	drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
index 7550b1cc8c6a,397a2847867a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
@@@ -40,4 -42,38 +40,41 @@@ void mlx5_core_unreserve_gids(struct ml
  int  mlx5_core_reserved_gid_alloc(struct mlx5_core_dev *dev, int *gid_index);
  void mlx5_core_reserved_gid_free(struct mlx5_core_dev *dev, int gid_index);
  
++<<<<<<< HEAD
++=======
+ /* TODO move to lib/events.h */
+ 
+ #define PORT_MODULE_EVENT_MODULE_STATUS_MASK 0xF
+ #define PORT_MODULE_EVENT_ERROR_TYPE_MASK    0xF
+ 
+ enum port_module_event_status_type {
+ 	MLX5_MODULE_STATUS_PLUGGED   = 0x1,
+ 	MLX5_MODULE_STATUS_UNPLUGGED = 0x2,
+ 	MLX5_MODULE_STATUS_ERROR     = 0x3,
+ 	MLX5_MODULE_STATUS_DISABLED  = 0x4,
+ 	MLX5_MODULE_STATUS_NUM,
+ };
+ 
+ enum  port_module_event_error_type {
+ 	MLX5_MODULE_EVENT_ERROR_POWER_BUDGET_EXCEEDED    = 0x0,
+ 	MLX5_MODULE_EVENT_ERROR_LONG_RANGE_FOR_NON_MLNX  = 0x1,
+ 	MLX5_MODULE_EVENT_ERROR_BUS_STUCK                = 0x2,
+ 	MLX5_MODULE_EVENT_ERROR_NO_EEPROM_RETRY_TIMEOUT  = 0x3,
+ 	MLX5_MODULE_EVENT_ERROR_ENFORCE_PART_NUMBER_LIST = 0x4,
+ 	MLX5_MODULE_EVENT_ERROR_UNKNOWN_IDENTIFIER       = 0x5,
+ 	MLX5_MODULE_EVENT_ERROR_HIGH_TEMPERATURE         = 0x6,
+ 	MLX5_MODULE_EVENT_ERROR_BAD_CABLE                = 0x7,
+ 	MLX5_MODULE_EVENT_ERROR_PCIE_POWER_SLOT_EXCEEDED = 0xc,
+ 	MLX5_MODULE_EVENT_ERROR_NUM,
+ };
+ 
+ struct mlx5_pme_stats {
+ 	u64 status_counters[MLX5_MODULE_STATUS_NUM];
+ 	u64 error_counters[MLX5_MODULE_EVENT_ERROR_NUM];
+ };
+ 
+ void mlx5_get_pme_stats(struct mlx5_core_dev *dev, struct mlx5_pme_stats *stats);
+ int mlx5_notifier_call_chain(struct mlx5_events *events, unsigned int event, void *data);
+ 
++>>>>>>> 8d6b57e64459 (net/mlx5: Add support for plugged-disabled cable status in PME)
  #endif
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/events.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/events.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/lib/mlx5.h
