NFS: Remove redundant waits for O_DIRECT in fsync() and write_begin()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit f508d46ae41a796036aef566637685dbf83b554f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/f508d46a.failed

We're now waiting immediately after taking the locks, so waiting
in fsync() and write_begin() is either redundant or potentially
subject to livelock (if not holding the lock).

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit f508d46ae41a796036aef566637685dbf83b554f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/file.c
diff --cc fs/nfs/file.c
index 5b55f801cd6b,0e9b4a068f13..000000000000
--- a/fs/nfs/file.c
+++ b/fs/nfs/file.c
@@@ -371,19 -360,6 +370,22 @@@ static int nfs_write_begin(struct file 
  		file, mapping->host->i_ino, len, (long long) pos);
  
  start:
++<<<<<<< HEAD
 +	/*
 +	 * Prevent starvation issues if someone is doing a consistency
 +	 * sync-to-disk
 +	 */
 +	ret = wait_on_bit_action(&NFS_I(mapping->host)->flags, NFS_INO_FLUSHING,
 +				 nfs_wait_bit_killable, TASK_KILLABLE);
 +	if (ret)
 +		return ret;
 +	/*
 +	 * Wait for O_DIRECT to complete
 +	 */
 +	inode_dio_wait(mapping->host);
 +
++=======
++>>>>>>> f508d46ae41a (NFS: Remove redundant waits for O_DIRECT in fsync() and write_begin())
  	page = grab_cache_page_write_begin(mapping, index, flags);
  	if (!page)
  		return -ENOMEM;
* Unmerged path fs/nfs/file.c
