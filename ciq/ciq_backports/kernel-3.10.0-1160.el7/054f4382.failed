scsi: qla2xxx: Move free of fcport out of interrupt context

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Joe Carnuccio <joe.carnuccio@cavium.com>
commit 054f4382417098b4d0028f8145fa214d448792d7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/054f4382.failed

This patch moves freeing of fcport out of interrupt context.

Link: https://lore.kernel.org/r/20200212214436.25532-3-hmadhani@marvell.com
	Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
	Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 054f4382417098b4d0028f8145fa214d448792d7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_bsg.c
diff --cc drivers/scsi/qla2xxx/qla_bsg.c
index 1f7199468933,5870d26ab707..000000000000
--- a/drivers/scsi/qla2xxx/qla_bsg.c
+++ b/drivers/scsi/qla2xxx/qla_bsg.c
@@@ -9,16 -9,25 +9,24 @@@
  #include <linux/kthread.h>
  #include <linux/vmalloc.h>
  #include <linux/delay.h>
 -#include <linux/bsg-lib.h>
  
+ static void qla2xxx_free_fcport_work(struct work_struct *work)
+ {
+ 	struct fc_port *fcport = container_of(work, typeof(*fcport),
+ 	    free_work);
+ 
+ 	qla2x00_free_fcport(fcport);
+ }
+ 
  /* BSG support for ELS/CT pass through */
 -void qla2x00_bsg_job_done(srb_t *sp, int res)
 +void
 +qla2x00_bsg_job_done(void *ptr, int res)
  {
 -	struct bsg_job *bsg_job = sp->u.bsg_job;
 -	struct fc_bsg_reply *bsg_reply = bsg_job->reply;
 +	srb_t *sp = ptr;
 +	struct fc_bsg_job *bsg_job = sp->u.bsg_job;
  
 -	bsg_reply->result = res;
 -	bsg_job_done(bsg_job, bsg_reply->result,
 -		       bsg_reply->reply_payload_rcv_len);
 +	bsg_job->reply->result = res;
 +	bsg_job->job_done(bsg_job);
  	sp->free(sp);
  }
  
@@@ -53,8 -61,11 +61,16 @@@ qla2x00_bsg_sp_free(void *ptr
  
  	if (sp->type == SRB_CT_CMD ||
  	    sp->type == SRB_FXIOCB_BCMD ||
++<<<<<<< HEAD
 +	    sp->type == SRB_ELS_CMD_HST)
 +		kfree(sp->fcport);
++=======
+ 	    sp->type == SRB_ELS_CMD_HST) {
+ 		INIT_WORK(&sp->fcport->free_work, qla2xxx_free_fcport_work);
+ 		queue_work(ha->wq, &sp->fcport->free_work);
+ 	}
+ 
++>>>>>>> 054f43824170 (scsi: qla2xxx: Move free of fcport out of interrupt context)
  	qla2x00_rel_sp(sp);
  }
  
* Unmerged path drivers/scsi/qla2xxx/qla_bsg.c
