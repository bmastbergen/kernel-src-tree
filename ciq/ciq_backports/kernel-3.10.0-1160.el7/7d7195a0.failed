ibmvnic: Do not process device remove during device reset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Juliet Kim <julietk@linux.vnet.ibm.com>
commit 7d7195a026bac47ac9943f11f84b7546276209dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/7d7195a0.failed

The ibmvnic driver does not check the device state when the device
is removed. If the device is removed while a device reset is being
processed, the remove may free structures needed by the reset,
causing an oops.

Fix this by checking the device state before processing device remove.

	Signed-off-by: Juliet Kim <julietk@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7d7195a026bac47ac9943f11f84b7546276209dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index 015f4fdaa19b,4bd33245bad6..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -2063,7 -2142,8 +2063,12 @@@ static void __ibmvnic_reset(struct work
  {
  	struct ibmvnic_rwi *rwi;
  	struct ibmvnic_adapter *adapter;
++<<<<<<< HEAD
 +	struct net_device *netdev;
++=======
+ 	bool saved_state = false;
+ 	unsigned long flags;
++>>>>>>> 7d7195a026ba (ibmvnic: Do not process device remove during device reset)
  	u32 reset_state;
  	int rc = 0;
  
@@@ -4983,7 -5101,12 +4996,12 @@@ static int ibmvnic_probe(struct vio_de
  			  __ibmvnic_delayed_reset);
  	INIT_LIST_HEAD(&adapter->rwi_list);
  	spin_lock_init(&adapter->rwi_lock);
++<<<<<<< HEAD
++=======
+ 	spin_lock_init(&adapter->state_lock);
+ 	mutex_init(&adapter->fw_lock);
++>>>>>>> 7d7195a026ba (ibmvnic: Do not process device remove during device reset)
  	init_completion(&adapter->init_done);
 -	init_completion(&adapter->fw_done);
 -	init_completion(&adapter->reset_done);
 -	init_completion(&adapter->stats_done);
  	clear_bit(0, &adapter->resetting);
  
  	do {
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
diff --git a/drivers/net/ethernet/ibm/ibmvnic.h b/drivers/net/ethernet/ibm/ibmvnic.h
index 37bffad3cf9c..376a328aec38 100644
--- a/drivers/net/ethernet/ibm/ibmvnic.h
+++ b/drivers/net/ethernet/ibm/ibmvnic.h
@@ -950,7 +950,8 @@ enum vnic_state {VNIC_PROBING = 1,
 		 VNIC_CLOSING,
 		 VNIC_CLOSED,
 		 VNIC_REMOVING,
-		 VNIC_REMOVED};
+		 VNIC_REMOVED,
+		 VNIC_RESETTING};
 
 enum ibmvnic_reset_reason {VNIC_RESET_FAILOVER = 1,
 			   VNIC_RESET_MOBILITY,
@@ -1097,4 +1098,7 @@ struct ibmvnic_adapter {
 
 	struct ibmvnic_tunables desired;
 	struct ibmvnic_tunables fallback;
+
+	/* Used for serializatin of state field */
+	spinlock_t state_lock;
 };
