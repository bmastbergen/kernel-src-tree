hv_netvsc: Add handler for LRO setting change

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Haiyang Zhang <haiyangz@microsoft.com>
commit d6792a5a07479d27147c01ff22041409d5e4ce4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/d6792a5a.failed

This patch adds the handler for LRO setting change, so that a user
can use ethtool command to enable / disable LRO feature.

	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d6792a5a07479d27147c01ff22041409d5e4ce4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc_drv.c
#	drivers/net/hyperv/rndis_filter.c
diff --cc drivers/net/hyperv/netvsc_drv.c
index 824fc22082ca,ec699741170b..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -1735,7 -1805,8 +1764,12 @@@ static const struct net_device_ops devi
  	.ndo_start_xmit =		netvsc_start_xmit,
  	.ndo_change_rx_flags =		netvsc_change_rx_flags,
  	.ndo_set_rx_mode =		netvsc_set_rx_mode,
++<<<<<<< HEAD
 +	.extended.ndo_change_mtu =	netvsc_change_mtu,
++=======
+ 	.ndo_set_features =		netvsc_set_features,
+ 	.ndo_change_mtu =		netvsc_change_mtu,
++>>>>>>> d6792a5a0747 (hv_netvsc: Add handler for LRO setting change)
  	.ndo_validate_addr =		eth_validate_addr,
  	.ndo_set_mac_address =		netvsc_set_mac_addr,
  	.ndo_select_queue =		netvsc_select_queue,
diff --cc drivers/net/hyperv/rndis_filter.c
index 4b2262d15a83,8b537a049c1e..000000000000
--- a/drivers/net/hyperv/rndis_filter.c
+++ b/drivers/net/hyperv/rndis_filter.c
@@@ -1184,6 -1243,18 +1184,21 @@@ static int rndis_netdev_set_hwcaps(stru
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (hwcaps.rsc.ip4 && hwcaps.rsc.ip6) {
+ 		net->hw_features |= NETIF_F_LRO;
+ 
+ 		if (net->features & NETIF_F_LRO) {
+ 			offloads.rsc_ip_v4 = NDIS_OFFLOAD_PARAMETERS_RSC_ENABLED;
+ 			offloads.rsc_ip_v6 = NDIS_OFFLOAD_PARAMETERS_RSC_ENABLED;
+ 		} else {
+ 			offloads.rsc_ip_v4 = NDIS_OFFLOAD_PARAMETERS_RSC_DISABLED;
+ 			offloads.rsc_ip_v6 = NDIS_OFFLOAD_PARAMETERS_RSC_DISABLED;
+ 		}
+ 	}
+ 
++>>>>>>> d6792a5a0747 (hv_netvsc: Add handler for LRO setting change)
  	/* In case some hw_features disappeared we need to remove them from
  	 * net->features list as they're no longer supported.
  	 */
diff --git a/drivers/net/hyperv/hyperv_net.h b/drivers/net/hyperv/hyperv_net.h
index b05365c3a4aa..fbf37b017060 100644
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@ -187,6 +187,7 @@ struct rndis_device {
 
 /* Interface */
 struct rndis_message;
+struct ndis_offload_params;
 struct netvsc_device;
 struct net_device_context;
 
@@ -224,6 +225,9 @@ void rndis_filter_device_remove(struct hv_device *dev,
 				struct netvsc_device *nvdev);
 int rndis_filter_set_rss_param(struct rndis_device *rdev,
 			       const u8 *key);
+int rndis_filter_set_offload_params(struct net_device *ndev,
+				    struct netvsc_device *nvdev,
+				    struct ndis_offload_params *req_offloads);
 int rndis_filter_receive(struct net_device *ndev,
 			 struct netvsc_device *net_dev,
 			 struct vmbus_channel *channel,
* Unmerged path drivers/net/hyperv/netvsc_drv.c
* Unmerged path drivers/net/hyperv/rndis_filter.c
