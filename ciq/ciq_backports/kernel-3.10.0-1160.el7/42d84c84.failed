vhost: Check docket sk_family instead of call getname

jira LE-1907
cve CVE-2020-10942
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Eugenio Pérez <eperezma@redhat.com>
commit 42d84c8490f9f0931786f1623191fcab397c3d64
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/42d84c84.failed

Doing so, we save one call to get data we already have in the struct.

Also, since there is no guarantee that getname use sockaddr_ll
parameter beyond its size, we add a little bit of security here.
It should do not do beyond MAX_ADDR_LEN, but syzbot found that
ax25_getname writes more (72 bytes, the size of full_sockaddr_ax25,
versus 20 + 32 bytes of sockaddr_ll + MAX_ADDR_LEN in syzbot repro).

Fixes: 3a4d5c94e9593 ("vhost_net: a kernel-level virtio server")
	Reported-by: syzbot+f2a62d07a5198c819c7b@syzkaller.appspotmail.com
	Signed-off-by: Eugenio Pérez <eperezma@redhat.com>
	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 42d84c8490f9f0931786f1623191fcab397c3d64)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/vhost/net.c
diff --cc drivers/vhost/net.c
index fb229e491a1a,18e205eeb9af..000000000000
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@@ -1095,11 -1414,7 +1095,15 @@@ static int vhost_net_release(struct ino
  
  static struct socket *get_raw_socket(int fd)
  {
++<<<<<<< HEAD
 +	struct {
 +		struct sockaddr_ll sa;
 +		char  buf[MAX_ADDR_LEN];
 +	} uaddr;
 +	int uaddr_len = sizeof uaddr, r;
++=======
+ 	int r;
++>>>>>>> 42d84c8490f9 (vhost: Check docket sk_family instead of call getname)
  	struct socket *sock = sockfd_lookup(fd, &r);
  
  	if (!sock)
@@@ -1111,12 -1426,7 +1115,16 @@@
  		goto err;
  	}
  
++<<<<<<< HEAD
 +	r = sock->ops->getname(sock, (struct sockaddr *)&uaddr.sa,
 +			       &uaddr_len, 0);
 +	if (r)
 +		goto err;
 +
 +	if (uaddr.sa.sll_family != AF_PACKET) {
++=======
+ 	if (sock->sk->sk_family != AF_PACKET) {
++>>>>>>> 42d84c8490f9 (vhost: Check docket sk_family instead of call getname)
  		r = -EPFNOSUPPORT;
  		goto err;
  	}
* Unmerged path drivers/vhost/net.c
