fs/hugetlbfs/inode.c: fix hwpoison reserve accounting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Mike Kravetz <mike.kravetz@oracle.com>
commit ab615a5b879292e83653be60aa82113f7c6f462d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/ab615a5b.failed

Calling madvise(MADV_HWPOISON) on a hugetlbfs page will result in bad
(negative) reserved huge page counts.  This may not happen immediately,
but may happen later when the underlying file is removed or filesystem
unmounted.  For example:

  AnonHugePages:         0 kB
  ShmemHugePages:        0 kB
  HugePages_Total:       1
  HugePages_Free:        0
  HugePages_Rsvd:    18446744073709551615
  HugePages_Surp:        0
  Hugepagesize:       2048 kB

In routine hugetlbfs_error_remove_page(), hugetlb_fix_reserve_counts is
called after remove_huge_page.  hugetlb_fix_reserve_counts is designed
to only be called/used only if a failure is returned from
hugetlb_unreserve_pages.  Therefore, call hugetlb_unreserve_pages as
required and only call hugetlb_fix_reserve_counts in the unlikely event
that hugetlb_unreserve_pages returns an error.

Link: http://lkml.kernel.org/r/20171019230007.17043-2-mike.kravetz@oracle.com
Fixes: 78bb920344b8 ("mm: hwpoison: dissolve in-use hugepage in unrecoverable memory error")
	Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
	Acked-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Aneesh Kumar <aneesh.kumar@linux.vnet.ibm.com>
	Cc: Anshuman Khandual <khandual@linux.vnet.ibm.com>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit ab615a5b879292e83653be60aa82113f7c6f462d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/hugetlbfs/inode.c
diff --cc fs/hugetlbfs/inode.c
index bdd5c7827391,ed113ea17aff..000000000000
--- a/fs/hugetlbfs/inode.c
+++ b/fs/hugetlbfs/inode.c
@@@ -904,6 -838,59 +904,62 @@@ static int hugetlbfs_migrate_page(struc
  	return MIGRATEPAGE_SUCCESS;
  }
  
++<<<<<<< HEAD
++=======
+ static int hugetlbfs_error_remove_page(struct address_space *mapping,
+ 				struct page *page)
+ {
+ 	struct inode *inode = mapping->host;
+ 	pgoff_t index = page->index;
+ 
+ 	remove_huge_page(page);
+ 	if (unlikely(hugetlb_unreserve_pages(inode, index, index + 1, 1)))
+ 		hugetlb_fix_reserve_counts(inode);
+ 
+ 	return 0;
+ }
+ 
+ /*
+  * Display the mount options in /proc/mounts.
+  */
+ static int hugetlbfs_show_options(struct seq_file *m, struct dentry *root)
+ {
+ 	struct hugetlbfs_sb_info *sbinfo = HUGETLBFS_SB(root->d_sb);
+ 	struct hugepage_subpool *spool = sbinfo->spool;
+ 	unsigned long hpage_size = huge_page_size(sbinfo->hstate);
+ 	unsigned hpage_shift = huge_page_shift(sbinfo->hstate);
+ 	char mod;
+ 
+ 	if (!uid_eq(sbinfo->uid, GLOBAL_ROOT_UID))
+ 		seq_printf(m, ",uid=%u",
+ 			   from_kuid_munged(&init_user_ns, sbinfo->uid));
+ 	if (!gid_eq(sbinfo->gid, GLOBAL_ROOT_GID))
+ 		seq_printf(m, ",gid=%u",
+ 			   from_kgid_munged(&init_user_ns, sbinfo->gid));
+ 	if (sbinfo->mode != 0755)
+ 		seq_printf(m, ",mode=%o", sbinfo->mode);
+ 	if (sbinfo->max_inodes != -1)
+ 		seq_printf(m, ",nr_inodes=%lu", sbinfo->max_inodes);
+ 
+ 	hpage_size /= 1024;
+ 	mod = 'K';
+ 	if (hpage_size >= 1024) {
+ 		hpage_size /= 1024;
+ 		mod = 'M';
+ 	}
+ 	seq_printf(m, ",pagesize=%lu%c", hpage_size, mod);
+ 	if (spool) {
+ 		if (spool->max_hpages != -1)
+ 			seq_printf(m, ",size=%llu",
+ 				   (unsigned long long)spool->max_hpages << hpage_shift);
+ 		if (spool->min_hpages != -1)
+ 			seq_printf(m, ",min_size=%llu",
+ 				   (unsigned long long)spool->min_hpages << hpage_shift);
+ 	}
+ 	return 0;
+ }
+ 
++>>>>>>> ab615a5b8792 (fs/hugetlbfs/inode.c: fix hwpoison reserve accounting)
  static int hugetlbfs_statfs(struct dentry *dentry, struct kstatfs *buf)
  {
  	struct hugetlbfs_sb_info *sbinfo = HUGETLBFS_SB(dentry->d_sb);
* Unmerged path fs/hugetlbfs/inode.c
