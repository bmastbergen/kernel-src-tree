media: v4l: event: Add subscription to list before calling "add" operation

jira LE-1907
cve CVE-2019-9458
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Sakari Ailus <sakari.ailus@linux.intel.com>
commit 92539d3eda2c090b382699bbb896d4b54e9bdece
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/92539d3e.failed

Patch ad608fbcf166 changed how events were subscribed to address an issue
elsewhere. As a side effect of that change, the "add" callback was called
before the event subscription was added to the list of subscribed events,
causing the first event queued by the add callback (and possibly other
events arriving soon afterwards) to be lost.

Fix this by adding the subscription to the list before calling the "add"
callback, and clean up afterwards if that fails.

Fixes: ad608fbcf166 ("media: v4l: event: Prevent freeing event subscriptions while accessed")

	Reported-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
	Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
	Tested-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
	Reviewed-by: Hans Verkuil <hans.verkuil@cisco.com>
	Tested-by: Hans Verkuil <hans.verkuil@cisco.com>
	Cc: stable@vger.kernel.org (for 4.14 and up)
	Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
(cherry picked from commit 92539d3eda2c090b382699bbb896d4b54e9bdece)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/v4l2-core/v4l2-event.c
diff --cc drivers/media/v4l2-core/v4l2-event.c
index 86dcb5483c42,481e3c65cf97..000000000000
--- a/drivers/media/v4l2-core/v4l2-event.c
+++ b/drivers/media/v4l2-core/v4l2-event.c
@@@ -234,23 -245,21 +250,41 @@@ int v4l2_event_subscribe(struct v4l2_f
  	spin_unlock_irqrestore(&fh->vdev->fh_lock, flags);
  
  	if (found_ev) {
++<<<<<<< HEAD
 +		kfree(sev);
 +		return 0; /* Already listening */
 +	}
 +
 +	if (sev->ops && sev->ops->add) {
 +		int ret = sev->ops->add(sev, elems);
 +		if (ret) {
 +			sev->ops = NULL;
 +			v4l2_event_unsubscribe(fh, sub);
 +			return ret;
 +		}
 +	}
 +
 +	/* Mark as ready for use */
 +	sev->elems = elems;
 +
 +	return 0;
++=======
+ 		/* Already listening */
+ 		kvfree(sev);
+ 	} else if (sev->ops && sev->ops->add) {
+ 		ret = sev->ops->add(sev, elems);
+ 		if (ret) {
+ 			spin_lock_irqsave(&fh->vdev->fh_lock, flags);
+ 			__v4l2_event_unsubscribe(sev);
+ 			spin_unlock_irqrestore(&fh->vdev->fh_lock, flags);
+ 			kvfree(sev);
+ 		}
+ 	}
+ 
+ 	mutex_unlock(&fh->subscribe_lock);
+ 
+ 	return ret;
++>>>>>>> 92539d3eda2c (media: v4l: event: Add subscription to list before calling "add" operation)
  }
  EXPORT_SYMBOL_GPL(v4l2_event_subscribe);
  
* Unmerged path drivers/media/v4l2-core/v4l2-event.c
