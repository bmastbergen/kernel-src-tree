block: fix checking return value of blk_mq_init_queue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Ming Lei <ming.lei@canonical.com>
commit 35b489d32fcc37e8735f41aa794b24cf9d1e74f5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/35b489d3.failed

Check IS_ERR_OR_NULL(return value) instead of just return value.

	Signed-off-by: Ming Lei <ming.lei@canonical.com>

Reduced to IS_ERR() by me, we never return NULL.
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 35b489d32fcc37e8735f41aa794b24cf9d1e74f5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
* Unmerged path drivers/block/nvme-core.c
diff --git a/drivers/block/null_blk.c b/drivers/block/null_blk.c
index afbbc1db26c4..bdfdcda749b5 100644
--- a/drivers/block/null_blk.c
+++ b/drivers/block/null_blk.c
@@ -492,7 +492,7 @@ static int null_add_dev(void)
 			goto out_cleanup_queues;
 
 		nullb->q = blk_mq_init_queue(&nullb->tag_set);
-		if (!nullb->q) {
+		if (IS_ERR(nullb->q)) {
 			rv = -ENOMEM;
 			goto out_cleanup_tags;
 		}
* Unmerged path drivers/block/nvme-core.c
diff --git a/drivers/block/virtio_blk.c b/drivers/block/virtio_blk.c
index 9b2a1661f2ba..b9c5573e8e49 100644
--- a/drivers/block/virtio_blk.c
+++ b/drivers/block/virtio_blk.c
@@ -676,7 +676,7 @@ static int virtblk_probe(struct virtio_device *vdev)
 		goto out_put_disk;
 
 	q = vblk->disk->queue = blk_mq_init_queue(&vblk->tag_set);
-	if (!q) {
+	if (IS_ERR(q)) {
 		err = -ENOMEM;
 		goto out_free_tags;
 	}
