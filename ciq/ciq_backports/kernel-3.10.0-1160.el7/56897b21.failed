Bluetooth: hci_ldisc: Postpone HCI_UART_PROTO_READY bit set in hci_uart_set_proto()

jira LE-1907
cve CVE-2019-15917
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Kefeng Wang <wangkefeng.wang@huawei.com>
commit 56897b217a1d0a91c9920cb418d6b3fe922f590a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/56897b21.failed

task A:                                task B:
hci_uart_set_proto                     flush_to_ldisc
 - p->open(hu) -> h5_open  //alloc h5  - receive_buf
 - set_bit HCI_UART_PROTO_READY         - tty_port_default_receive_buf
 - hci_uart_register_dev                 - tty_ldisc_receive_buf
                                          - hci_uart_tty_receive
				           - test_bit HCI_UART_PROTO_READY
				            - h5_recv
 - clear_bit HCI_UART_PROTO_READY             while() {
 - p->open(hu) -> h5_close //free h5
				              - h5_rx_3wire_hdr
				               - h5_reset()  //use-after-free
                                              }

It could use ioctl to set hci uart proto, but there is
a use-after-free issue when hci_uart_register_dev() fail in
hci_uart_set_proto(), see stack above, fix this by setting
HCI_UART_PROTO_READY bit only when hci_uart_register_dev()
return success.

	Reported-by: syzbot+899a33dc0fa0dbaf06a6@syzkaller.appspotmail.com
	Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
	Reviewed-by: Jeremy Cline <jcline@redhat.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 56897b217a1d0a91c9920cb418d6b3fe922f590a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/hci_ldisc.c
diff --cc drivers/bluetooth/hci_ldisc.c
index ae83ae4740c8,9562e72c1ae5..000000000000
--- a/drivers/bluetooth/hci_ldisc.c
+++ b/drivers/bluetooth/hci_ldisc.c
@@@ -641,17 -695,10 +641,19 @@@ static int hci_uart_set_proto(struct hc
  	if (!p)
  		return -EPROTONOSUPPORT;
  
 +	err = p->open(hu);
 +	if (err)
 +		return err;
 +
  	hu->proto = p;
- 	set_bit(HCI_UART_PROTO_READY, &hu->flags);
  
  	err = hci_uart_register_dev(hu);
  	if (err) {
++<<<<<<< HEAD
 +		clear_bit(HCI_UART_PROTO_READY, &hu->flags);
 +		p->close(hu);
++=======
++>>>>>>> 56897b217a1d (Bluetooth: hci_ldisc: Postpone HCI_UART_PROTO_READY bit set in hci_uart_set_proto())
  		return err;
  	}
  
* Unmerged path drivers/bluetooth/hci_ldisc.c
