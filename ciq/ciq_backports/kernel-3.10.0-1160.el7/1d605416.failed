fs/binfmt_elf.c: allocate initialized memory in fill_thread_core_info()

jira LE-1907
cve CVE-2020-10732
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Alexander Potapenko <glider@google.com>
commit 1d605416fb7175e1adf094251466caa52093b413
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/1d605416.failed

KMSAN reported uninitialized data being written to disk when dumping
core.  As a result, several kilobytes of kmalloc memory may be written
to the core file and then read by a non-privileged user.

	Reported-by: sam <sunhaoyl@outlook.com>
	Signed-off-by: Alexander Potapenko <glider@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Acked-by: Kees Cook <keescook@chromium.org>
	Cc: Al Viro <viro@zeniv.linux.org.uk>
	Cc: Alexey Dobriyan <adobriyan@gmail.com>
	Cc: <stable@vger.kernel.org>
Link: http://lkml.kernel.org/r/20200419100848.63472-1-glider@google.com
Link: https://github.com/google/kmsan/issues/76
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 1d605416fb7175e1adf094251466caa52093b413)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/binfmt_elf.c
diff --cc fs/binfmt_elf.c
index e115e66b95e3,25d489bc9453..000000000000
--- a/fs/binfmt_elf.c
+++ b/fs/binfmt_elf.c
@@@ -1613,10 -1730,10 +1613,15 @@@ static int fill_thread_core_info(struc
  		const struct user_regset *regset = &view->regsets[i];
  		do_thread_regset_writeback(t->task, regset);
  		if (regset->core_note_type && regset->get &&
 -		    (!regset->active || regset->active(t->task, regset) > 0)) {
 +		    (!regset->active || regset->active(t->task, regset))) {
  			int ret;
++<<<<<<< HEAD
 +			size_t size = regset->n * regset->size;
 +			void *data = kmalloc(size, GFP_KERNEL);
++=======
+ 			size_t size = regset_size(t->task, regset);
+ 			void *data = kzalloc(size, GFP_KERNEL);
++>>>>>>> 1d605416fb71 (fs/binfmt_elf.c: allocate initialized memory in fill_thread_core_info())
  			if (unlikely(!data))
  				return 0;
  			ret = regset->get(t->task, regset,
* Unmerged path fs/binfmt_elf.c
