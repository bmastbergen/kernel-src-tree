net/mlx5e: Fix handling of compressed CQEs in case of low NAPI budget

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Maxim Mikityanskiy <maximmi@mellanox.com>
commit 9df86bdb6746d7fcfc2fda715f7a7c3d0ddb2654
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/9df86bdb.failed

When CQE compression is enabled, compressed CQEs use the following
structure: a title is followed by one or many blocks, each containing 8
mini CQEs (except the last, which may contain fewer mini CQEs).

Due to NAPI budget restriction, a complete structure is not always
parsed in one NAPI run, and some blocks with mini CQEs may be deferred
to the next NAPI poll call - we have the mlx5e_decompress_cqes_cont call
in the beginning of mlx5e_poll_rx_cq. However, if the budget is
extremely low, some blocks may be left even after that, but the code
that follows the mlx5e_decompress_cqes_cont call doesn't check it and
assumes that a new CQE begins, which may not be the case. In such cases,
random memory corruptions occur.

An extremely low NAPI budget of 8 is used when busy_poll or busy_read is
active.

This commit adds a check to make sure that the previous compressed CQE
has been completely parsed after mlx5e_decompress_cqes_cont, otherwise
it prevents a new CQE from being fetched in the middle of a compressed
CQE.

This commit fixes random crashes in __build_skb, __page_pool_put_page
and other not-related-directly places, that used to happen when both CQE
compression and busy_poll/busy_read were enabled.

Fixes: 7219ab34f184 ("net/mlx5e: CQE compression")
	Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 9df86bdb6746d7fcfc2fda715f7a7c3d0ddb2654)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 7d7ba617bed8,82cffb3a9964..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -1224,10 -1386,13 +1224,18 @@@ int mlx5e_poll_rx_cq(struct mlx5e_cq *c
  	if (unlikely(!test_bit(MLX5E_RQ_STATE_ENABLED, &rq->state)))
  		return 0;
  
++<<<<<<< HEAD
 +	if (cq->decmprs_left)
 +		work_done += mlx5e_decompress_cqes_cont(rq, cq, 0, budget);
++=======
+ 	if (rq->cqd.left) {
+ 		work_done += mlx5e_decompress_cqes_cont(rq, cqwq, 0, budget);
+ 		if (rq->cqd.left || work_done >= budget)
+ 			goto out;
+ 	}
++>>>>>>> 9df86bdb6746 (net/mlx5e: Fix handling of compressed CQEs in case of low NAPI budget)
  
 -	cqe = mlx5_cqwq_get_cqe(cqwq);
 +	cqe = mlx5_cqwq_get_cqe(&cq->wq);
  	if (!cqe) {
  		if (unlikely(work_done))
  			goto out;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
