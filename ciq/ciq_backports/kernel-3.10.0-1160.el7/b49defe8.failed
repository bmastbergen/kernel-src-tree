kvm: avoid unused variable warning for UP builds

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit b49defe83659cefbb1763d541e779da32594ab10
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/b49defe8.failed

The uniprocessor version of smp_call_function_many does not evaluate
all of its argument, and the compiler emits a warning about "wait"
being unused.  This breaks the build on architectures for which
"-Werror" is enabled by default.

Work around it by moving the invocation of smp_call_function_many to
its own inline function.

	Reported-by: Paul Mackerras <paulus@ozlabs.org>
	Cc: stable@vger.kernel.org
Fixes: 7a97cec26b94c909f4cbad2dc3186af3e457a522
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit b49defe83659cefbb1763d541e779da32594ab10)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/kvm_main.c
diff --cc virt/kvm/kvm_main.c
index bbbc7b9a8d29,0d796c9a6482..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -178,7 -203,7 +190,11 @@@ bool kvm_make_all_cpus_request(struct k
  {
  	int i, cpu, me;
  	cpumask_var_t cpus;
++<<<<<<< HEAD
 +	bool called = true;
++=======
+ 	bool called;
++>>>>>>> b49defe83659 (kvm: avoid unused variable warning for UP builds)
  	struct kvm_vcpu *vcpu;
  
  	zalloc_cpumask_var(&cpus, GFP_ATOMIC);
@@@ -188,19 -213,14 +204,26 @@@
  		kvm_make_request(req, vcpu);
  		cpu = vcpu->cpu;
  
 -		if (!(req & KVM_REQUEST_NO_WAKEUP) && kvm_vcpu_wake_up(vcpu))
 -			continue;
 +		/* Set ->requests bit before we read ->mode */
 +		smp_mb();
  
  		if (cpus != NULL && cpu != -1 && cpu != me &&
++<<<<<<< HEAD
 +		      kvm_vcpu_exiting_guest_mode(vcpu) != OUTSIDE_GUEST_MODE)
 +			cpumask_set_cpu(cpu, cpus);
 +	}
 +	if (unlikely(cpus == NULL))
 +		smp_call_function_many(cpu_online_mask, ack_flush, NULL, 1);
 +	else if (!cpumask_empty(cpus))
 +		smp_call_function_many(cpus, ack_flush, NULL, 1);
 +	else
 +		called = false;
++=======
+ 		    kvm_request_needs_ipi(vcpu, req))
+ 			__cpumask_set_cpu(cpu, cpus);
+ 	}
+ 	called = kvm_kick_many_cpus(cpus, !!(req & KVM_REQUEST_WAIT));
++>>>>>>> b49defe83659 (kvm: avoid unused variable warning for UP builds)
  	put_cpu();
  	free_cpumask_var(cpus);
  	return called;
* Unmerged path virt/kvm/kvm_main.c
