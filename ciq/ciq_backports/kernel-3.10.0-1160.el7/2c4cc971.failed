tcp: tcp_v4_err() should be more careful

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Eric Dumazet <edumazet@google.com>
commit 2c4cc9712364c051b1de2d175d5fbea6be948ebf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/2c4cc971.failed

ICMP handlers are not very often stressed, we should
make them more resilient to bugs that might surface in
the future.

If there is no packet in retransmit queue, we should
avoid a NULL deref.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Reported-by: soukjin bae <soukjin.bae@samsung.com>
	Acked-by: Neal Cardwell <ncardwell@google.com>
	Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2c4cc9712364c051b1de2d175d5fbea6be948ebf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp_ipv4.c
diff --cc net/ipv4/tcp_ipv4.c
index 4a638d050147,ec3cea9d6828..000000000000
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@@ -434,14 -545,13 +438,17 @@@ void tcp_v4_err(struct sk_buff *icmp_sk
  					       TCP_TIMEOUT_INIT;
  		icsk->icsk_rto = inet_csk_rto_backoff(icsk, TCP_RTO_MAX);
  
++<<<<<<< HEAD
 +		skb = tcp_write_queue_head(sk);
 +		BUG_ON(!skb);
++=======
++>>>>>>> 2c4cc9712364 (tcp: tcp_v4_err() should be more careful)
  
 -		tcp_mstamp_refresh(tp);
 -		delta_us = (u32)(tp->tcp_mstamp - tcp_skb_timestamp_us(skb));
  		remaining = icsk->icsk_rto -
 -			    usecs_to_jiffies(delta_us);
 +			    min(icsk->icsk_rto,
 +				tcp_time_stamp - tcp_skb_timestamp(skb));
  
 -		if (remaining > 0) {
 +		if (remaining) {
  			inet_csk_reset_xmit_timer(sk, ICSK_TIME_RETRANS,
  						  remaining, TCP_RTO_MAX);
  		} else {
* Unmerged path net/ipv4/tcp_ipv4.c
