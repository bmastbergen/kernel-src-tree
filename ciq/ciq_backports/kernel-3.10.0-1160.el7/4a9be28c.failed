NFS: fix mount/umount race in nlmclnt.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
Rebuild_CHGLOG: - [fs] nfs: fix mount/umount race in nlmclnt (Jay Shin) [1771205]
Rebuild_FUZZ: 98.67%
commit-author NeilBrown <neilb@suse.com>
commit 4a9be28c45bf02fa0436808bb6c0baeba30e120e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/4a9be28c.failed

If the last NFSv3 unmount from a given host races with a mount from the
same host, we can destroy an nlm_host that is still in use.

Specifically nlmclnt_lookup_host() can increment h_count on
an nlm_host that nlmclnt_release_host() has just successfully called
refcount_dec_and_test() on.
Once nlmclnt_lookup_host() drops the mutex, nlm_destroy_host_lock()
will be called to destroy the nlmclnt which is now in use again.

The cause of the problem is that the dec_and_test happens outside the
locked region.  This is easily fixed by using
refcount_dec_and_mutex_lock().

Fixes: 8ea6ecc8b075 ("lockd: Create client-side nlm_host cache")
	Cc: stable@vger.kernel.org (v2.6.38+)
	Signed-off-by: NeilBrown <neilb@suse.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 4a9be28c45bf02fa0436808bb6c0baeba30e120e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/lockd/host.c
diff --cc fs/lockd/host.c
index 96441bb89b40,f0b5c987d6ae..000000000000
--- a/fs/lockd/host.c
+++ b/fs/lockd/host.c
@@@ -288,7 -290,7 +288,11 @@@ void nlmclnt_release_host(struct nlm_ho
  
  	WARN_ON_ONCE(host->h_server);
  
++<<<<<<< HEAD
 +	if (atomic_dec_and_test(&host->h_count)) {
++=======
+ 	if (refcount_dec_and_mutex_lock(&host->h_count, &nlm_host_mutex)) {
++>>>>>>> 4a9be28c45bf (NFS: fix mount/umount race in nlmclnt.)
  		WARN_ON_ONCE(!list_empty(&host->h_lockowners));
  		WARN_ON_ONCE(!list_empty(&host->h_granted));
  		WARN_ON_ONCE(!list_empty(&host->h_reclaim));
* Unmerged path fs/lockd/host.c
