sctp: move the format error check out of __sctp_sf_do_9_1_abort

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Xin Long <lucien.xin@gmail.com>
commit 245709ec8be89af46ea7ef0444c9c80913999d99
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/245709ec.failed

When T2 timer is to be stopped, the asoc should also be deleted,
otherwise, there will be no chance to call sctp_association_free
and the asoc could last in memory forever.

However, in sctp_sf_shutdown_sent_abort(), after adding the cmd
SCTP_CMD_TIMER_STOP for T2 timer, it may return error due to the
format error from __sctp_sf_do_9_1_abort() and miss adding
SCTP_CMD_ASSOC_FAILED where the asoc will be deleted.

This patch is to fix it by moving the format error check out of
__sctp_sf_do_9_1_abort(), and do it before adding the cmd
SCTP_CMD_TIMER_STOP for T2 timer.

Thanks Hangbin for reporting this issue by the fuzz testing.

v1->v2:
  - improve the comment in the code as Marcelo's suggestion.

Fixes: 96ca468b86b0 ("sctp: check invalid value of length parameter in error cause")
	Reported-by: Hangbin Liu <liuhangbin@gmail.com>
	Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 245709ec8be89af46ea7ef0444c9c80913999d99)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sctp/sm_statefuns.c
diff --cc net/sctp/sm_statefuns.c
index 77d82df86ebc,6a16af4b1ef6..000000000000
--- a/net/sctp/sm_statefuns.c
+++ b/net/sctp/sm_statefuns.c
@@@ -177,13 -163,23 +177,23 @@@ sctp_chunk_length_valid(struct sctp_chu
  
  	/* Previously already marked? */
  	if (unlikely(chunk->pdiscard))
 -		return false;
 +		return 0;
  	if (unlikely(chunk_length < required_length))
 -		return false;
 +		return 0;
  
 -	return true;
 +	return 1;
  }
  
+ /* Check for format error in an ABORT chunk */
+ static inline bool sctp_err_chunk_valid(struct sctp_chunk *chunk)
+ {
+ 	struct sctp_errhdr *err;
+ 
+ 	sctp_walk_errors(err, chunk->chunk_hdr);
+ 
+ 	return (void *)err == (void *)chunk->chunk_end;
+ }
+ 
  /**********************************************************
   * These are the state functions for handling chunk events.
   **********************************************************/
@@@ -2498,15 -2601,8 +2517,20 @@@ static sctp_disposition_t __sctp_sf_do_
  
  	/* See if we have an error cause code in the chunk.  */
  	len = ntohs(chunk->chunk_hdr->length);
++<<<<<<< HEAD
 +	if (len >= sizeof(struct sctp_chunkhdr) + sizeof(struct sctp_errhdr)) {
 +
 +		sctp_errhdr_t *err;
 +		sctp_walk_errors(err, chunk->chunk_hdr);
 +		if ((void *)err != (void *)chunk->chunk_end)
 +			return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);
 +
 +		error = ((sctp_errhdr_t *)chunk->skb->data)->cause;
 +	}
++=======
+ 	if (len >= sizeof(struct sctp_chunkhdr) + sizeof(struct sctp_errhdr))
+ 		error = ((struct sctp_errhdr *)chunk->skb->data)->cause;
++>>>>>>> 245709ec8be8 (sctp: move the format error check out of __sctp_sf_do_9_1_abort)
  
  	sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR, SCTP_ERROR(ECONNRESET));
  	/* ASSOC_FAILED will DELETE_TCB. */
* Unmerged path net/sctp/sm_statefuns.c
