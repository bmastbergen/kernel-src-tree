NFS: Kill NFS_INO_NFS_INO_FLUSHING: it is a performance killer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 6b56a89833fa7903595c8d138bb4927187315cba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/6b56a898.failed

filemap_datawrite() and friends already deal just fine with livelock.

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 6b56a89833fa7903595c8d138bb4927187315cba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/write.c
diff --cc fs/nfs/write.c
index 08aedc8b53a3,980d44f3a84c..000000000000
--- a/fs/nfs/write.c
+++ b/fs/nfs/write.c
@@@ -676,10 -667,6 +669,13 @@@ int nfs_writepages(struct address_spac
  	err = write_cache_pages(mapping, wbc, nfs_writepages_callback, &pgio);
  	nfs_pageio_complete(&pgio);
  
++<<<<<<< HEAD
 +	clear_bit_unlock(NFS_INO_FLUSHING, bitlock);
 +	smp_mb__after_clear_bit();
 +	wake_up_bit(bitlock, NFS_INO_FLUSHING);
 +
++=======
++>>>>>>> 6b56a89833fa (NFS: Kill NFS_INO_NFS_INO_FLUSHING: it is a performance killer)
  	if (err < 0)
  		goto out_err;
  	err = pgio.pg_error;
diff --git a/fs/nfs/file.c b/fs/nfs/file.c
index 23d911115367..92731122009a 100644
--- a/fs/nfs/file.c
+++ b/fs/nfs/file.c
@@ -371,14 +371,6 @@ static int nfs_write_begin(struct file *file, struct address_space *mapping,
 		file, mapping->host->i_ino, len, (long long) pos);
 
 start:
-	/*
-	 * Prevent starvation issues if someone is doing a consistency
-	 * sync-to-disk
-	 */
-	ret = wait_on_bit_action(&NFS_I(mapping->host)->flags, NFS_INO_FLUSHING,
-				 nfs_wait_bit_killable, TASK_KILLABLE);
-	if (ret)
-		return ret;
 	/*
 	 * Wait for O_DIRECT to complete
 	 */
diff --git a/fs/nfs/nfstrace.h b/fs/nfs/nfstrace.h
index 9f80a086b612..3734528c23f3 100644
--- a/fs/nfs/nfstrace.h
+++ b/fs/nfs/nfstrace.h
@@ -37,7 +37,6 @@
 			{ 1 << NFS_INO_ADVISE_RDPLUS, "ADVISE_RDPLUS" }, \
 			{ 1 << NFS_INO_STALE, "STALE" }, \
 			{ 1 << NFS_INO_INVALIDATING, "INVALIDATING" }, \
-			{ 1 << NFS_INO_FLUSHING, "FLUSHING" }, \
 			{ 1 << NFS_INO_FSCACHE, "FSCACHE" }, \
 			{ 1 << NFS_INO_LAYOUTCOMMIT, "NEED_LAYOUTCOMMIT" }, \
 			{ 1 << NFS_INO_LAYOUTCOMMITTING, "LAYOUTCOMMIT" })
* Unmerged path fs/nfs/write.c
diff --git a/include/linux/nfs_fs.h b/include/linux/nfs_fs.h
index a84b39cb0dba..c7f2be17d8b5 100644
--- a/include/linux/nfs_fs.h
+++ b/include/linux/nfs_fs.h
@@ -208,7 +208,6 @@ struct nfs_inode {
 #define NFS_INO_STALE		(1)		/* possible stale inode */
 #define NFS_INO_ACL_LRU_SET	(2)		/* Inode is on the LRU list */
 #define NFS_INO_INVALIDATING	(3)		/* inode is being invalidated */
-#define NFS_INO_FLUSHING	(4)		/* inode is flushing out data */
 #define NFS_INO_FSCACHE		(5)		/* inode can be cached by FS-Cache */
 #define NFS_INO_FSCACHE_LOCK	(6)		/* FS-Cache cookie management lock */
 #define NFS_INO_LAYOUTCOMMIT	(9)		/* layoutcommit required */
