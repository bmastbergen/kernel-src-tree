blk-mq: Put driver tag in blk_mq_dispatch_rq_list() when no budget

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author John Garry <john.garry@huawei.com>
commit 5fe56de799ad03e92d794c7936bf363922b571df
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/5fe56de7.failed

If in blk_mq_dispatch_rq_list() we find no budget, then we break of the
dispatch loop, but the request may keep the driver tag, evaulated
in 'nxt' in the previous loop iteration.

Fix by putting the driver tag for that request.

	Reviewed-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: John Garry <john.garry@huawei.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 5fe56de799ad03e92d794c7936bf363922b571df)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 05de6b361214,a7785df2c944..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -1214,11 -1221,13 +1214,18 @@@ bool blk_mq_dispatch_rq_list(struct req
  
  		rq = list_first_entry(list, struct request, queuelist);
  
++<<<<<<< HEAD
 +		hctx = blk_mq_map_queue(rq->q, rq->mq_ctx->cpu);
 +		if (!got_budget && !blk_mq_get_dispatch_budget(hctx))
++=======
+ 		hctx = rq->mq_hctx;
+ 		if (!got_budget && !blk_mq_get_dispatch_budget(hctx)) {
+ 			blk_mq_put_driver_tag(rq);
++>>>>>>> 5fe56de799ad (blk-mq: Put driver tag in blk_mq_dispatch_rq_list() when no budget)
  			break;
+ 		}
  
 -		if (!blk_mq_get_driver_tag(rq)) {
 +		if (!blk_mq_get_driver_tag(rq, NULL, false)) {
  			/*
  			 * The initial allocation attempt failed, so we need to
  			 * rerun the hardware queue when a tag is freed. The
* Unmerged path block/blk-mq.c
