scsi: device_handler: remove VLAs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Stephen Kitt <steve@sk2.org>
commit 92eb506262a2a3da9aeaece7017e77490da907dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/92eb5062.failed

In preparation to enabling -Wvla, remove VLAs and replace them with
fixed-length arrays instead.

scsi_dh_{alua,emc,rdac} use variable-length array declarations to store
command blocks, with the appropriate size as determined by
COMMAND_SIZE. This patch replaces these with fixed-sized arrays using
MAX_COMMAND_SIZE, so that the array size can be determined at compile
time.

This was prompted by https://lkml.org/lkml/2018/3/7/621

	Signed-off-by: Stephen Kitt <steve@sk2.org>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 92eb506262a2a3da9aeaece7017e77490da907dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/device_handler/scsi_dh_emc.c
#	drivers/scsi/device_handler/scsi_dh_rdac.c
diff --cc drivers/scsi/device_handler/scsi_dh_emc.c
index a117a44398d8,95c47909a58f..000000000000
--- a/drivers/scsi/device_handler/scsi_dh_emc.c
+++ b/drivers/scsi/device_handler/scsi_dh_emc.c
@@@ -354,9 -248,12 +354,17 @@@ static int send_inquiry_cmd(struct scsi
  static int send_trespass_cmd(struct scsi_device *sdev,
  			    struct clariion_dh_data *csdev)
  {
 +	struct request *rq;
  	unsigned char *page22;
++<<<<<<< HEAD
 +	int err, len, cmd;
++=======
+ 	unsigned char cdb[MAX_COMMAND_SIZE];
+ 	int err, res = SCSI_DH_OK, len;
+ 	struct scsi_sense_hdr sshdr;
+ 	u64 req_flags = REQ_FAILFAST_DEV | REQ_FAILFAST_TRANSPORT |
+ 		REQ_FAILFAST_DRIVER;
++>>>>>>> 92eb506262a2 (scsi: device_handler: remove VLAs)
  
  	if (csdev->flags & CLARIION_SHORT_TRESPASS) {
  		page22 = short_trespass;
diff --cc drivers/scsi/device_handler/scsi_dh_rdac.c
index 01de6dd65df2,d27fabae8ddd..000000000000
--- a/drivers/scsi/device_handler/scsi_dh_rdac.c
+++ b/drivers/scsi/device_handler/scsi_dh_rdac.c
@@@ -587,13 -528,16 +587,21 @@@ static void send_mode_select(struct wor
  {
  	struct rdac_controller *ctlr =
  		container_of(work, struct rdac_controller, ms_work);
 +	struct request *rq;
  	struct scsi_device *sdev = ctlr->ms_sdev;
 -	struct rdac_dh_data *h = sdev->handler_data;
 -	int err = SCSI_DH_OK, retry_cnt = RDAC_RETRY_COUNT;
 +	struct rdac_dh_data *h = get_rdac_data(sdev);
 +	struct request_queue *q = sdev->request_queue;
 +	int err, retry_cnt = RDAC_RETRY_COUNT;
  	struct rdac_queue_data *tmp, *qdata;
  	LIST_HEAD(list);
++<<<<<<< HEAD
++=======
+ 	unsigned char cdb[MAX_COMMAND_SIZE];
+ 	struct scsi_sense_hdr sshdr;
+ 	unsigned int data_size;
+ 	u64 req_flags = REQ_FAILFAST_DEV | REQ_FAILFAST_TRANSPORT |
+ 		REQ_FAILFAST_DRIVER;
++>>>>>>> 92eb506262a2 (scsi: device_handler: remove VLAs)
  
  	spin_lock(&ctlr->ms_lock);
  	list_splice_init(&ctlr->ms_head, &list);
diff --git a/drivers/scsi/device_handler/scsi_dh_alua.c b/drivers/scsi/device_handler/scsi_dh_alua.c
index cca086aa9de1..36429764449e 100644
--- a/drivers/scsi/device_handler/scsi_dh_alua.c
+++ b/drivers/scsi/device_handler/scsi_dh_alua.c
@@ -148,12 +148,12 @@ static void release_port_group(struct kref *kref)
 static int submit_rtpg(struct scsi_device *sdev, unsigned char *buff,
 		       int bufflen, struct scsi_sense_hdr *sshdr, int flags)
 {
-	u8 cdb[COMMAND_SIZE(MAINTENANCE_IN)];
+	u8 cdb[MAX_COMMAND_SIZE];
 	int req_flags = REQ_FAILFAST_DEV | REQ_FAILFAST_TRANSPORT |
 		REQ_FAILFAST_DRIVER;
 
 	/* Prepare the command. */
-	memset(cdb, 0x0, COMMAND_SIZE(MAINTENANCE_IN));
+	memset(cdb, 0x0, MAX_COMMAND_SIZE);
 	cdb[0] = MAINTENANCE_IN;
 	if (!(flags & ALUA_RTPG_EXT_HDR_UNSUPP))
 		cdb[1] = MI_REPORT_TARGET_PGS | MI_EXT_HDR_PARAM_FMT;
@@ -177,7 +177,7 @@ static int submit_rtpg(struct scsi_device *sdev, unsigned char *buff,
 static int submit_stpg(struct scsi_device *sdev, int group_id,
 		       struct scsi_sense_hdr *sshdr)
 {
-	u8 cdb[COMMAND_SIZE(MAINTENANCE_OUT)];
+	u8 cdb[MAX_COMMAND_SIZE];
 	unsigned char stpg_data[8];
 	int stpg_len = 8;
 	int req_flags = REQ_FAILFAST_DEV | REQ_FAILFAST_TRANSPORT |
@@ -189,7 +189,7 @@ static int submit_stpg(struct scsi_device *sdev, int group_id,
 	put_unaligned_be16(group_id, &stpg_data[6]);
 
 	/* Prepare the command. */
-	memset(cdb, 0x0, COMMAND_SIZE(MAINTENANCE_OUT));
+	memset(cdb, 0x0, MAX_COMMAND_SIZE);
 	cdb[0] = MAINTENANCE_OUT;
 	cdb[1] = MO_SET_TARGET_PGS;
 	put_unaligned_be32(stpg_len, &cdb[6]);
* Unmerged path drivers/scsi/device_handler/scsi_dh_emc.c
* Unmerged path drivers/scsi/device_handler/scsi_dh_rdac.c
