block: Prevent hung_check firing during long sync IO

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Ming Lei <ming.lei@redhat.com>
commit de6a78b601c529398ad1448e3bffcade1fcf5a70
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/de6a78b6.failed

submit_bio_wait() can be called from ioctl(BLKSECDISCARD), which
may take long time to complete, as Salman mentioned, 4K BLKSECDISCARD
takes up to 100 second on some devices. Also any block I/O operation
that occurs after the BLKSECDISCARD is submitted will also potentially
be affected by the hung task timeouts.

Another report is that task hang can be observed when running mkfs
over raid10 which takes a small max discard sectors limit because
of chunk size.

So prevent hung_check from firing by taking same approach used
in blk_execute_rq(), and the wake-up interval is set as half the
hung_check timer period, which keeps overhead low enough.

	Cc: Salman Qazi <sqazi@google.com>
	Cc: Jesse Barnes <jsbarnes@google.com>
	Cc: Bart Van Assche <bvanassche@acm.org>
Link: https://lkml.org/lkml/2020/2/12/1193
	Reported-by: Salman Qazi <sqazi@google.com>
	Reviewed-by: Jesse Barnes <jsbarnes@google.com>
	Reviewed-by: Salman Qazi <sqazi@google.com>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit de6a78b601c529398ad1448e3bffcade1fcf5a70)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/bio.c
* Unmerged path block/bio.c
* Unmerged path block/bio.c
