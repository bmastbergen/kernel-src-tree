powerpc/ftrace: Pass the correct stack pointer for DYNAMIC_FTRACE_WITH_REGS

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
commit a4979a7e71eb8da976cbe4a0a1fa50636e76b04f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/a4979a7e.failed

For DYNAMIC_FTRACE_WITH_REGS, we should be passing-in the original set
of registers in pt_regs, to capture the state _before_ ftrace_caller.
However, we are instead passing the stack pointer *after* allocating a
stack frame in ftrace_caller. Fix this by saving the proper value of r1
in pt_regs. Also, use SAVE_10GPRS() to simplify the code.

Fixes: 153086644fd1 ("powerpc/ftrace: Add support for -mprofile-kernel ftrace ABI")
	Cc: stable@vger.kernel.org # v4.6+
	Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit a4979a7e71eb8da976cbe4a0a1fa50636e76b04f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/trace/ftrace_64_mprofile.S
* Unmerged path arch/powerpc/kernel/trace/ftrace_64_mprofile.S
* Unmerged path arch/powerpc/kernel/trace/ftrace_64_mprofile.S
