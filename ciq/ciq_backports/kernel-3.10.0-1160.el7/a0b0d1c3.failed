fs/proc/proc_sysctl.c: fix potential page fault while unregistering sysctl table

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
Rebuild_CHGLOG: - [fs] proc_sysctl.c: fix potential page fault while unregistering sysctl table (Carlos Maiolino) [1843368]
Rebuild_FUZZ: 94.74%
commit-author Danilo Krummrich <danilokrummrich@dk-develop.de>
commit a0b0d1c345d0317efe594df268feb5ccc99f651e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/a0b0d1c3.failed

proc_sys_link_fill_cache() does not take currently unregistering sysctl
tables into account, which might result into a page fault in
sysctl_follow_link() - add a check to fix it.

This bug has been present since v3.4.

Link: http://lkml.kernel.org/r/20180228013506.4915-1-danilokrummrich@dk-develop.de
Fixes: 0e47c99d7fe25 ("sysctl: Replace root_list with links between sysctl_table_sets")
	Signed-off-by: Danilo Krummrich <danilokrummrich@dk-develop.de>
	Acked-by: Kees Cook <keescook@chromium.org>
	Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
	Cc: "Eric W. Biederman" <ebiederm@xmission.com>
	Cc: Alexey Dobriyan <adobriyan@gmail.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit a0b0d1c345d0317efe594df268feb5ccc99f651e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/proc/proc_sysctl.c
diff --cc fs/proc/proc_sysctl.c
index 03de5848ce27,7da10e595297..000000000000
--- a/fs/proc/proc_sysctl.c
+++ b/fs/proc/proc_sysctl.c
@@@ -705,8 -706,11 +705,15 @@@ static int proc_sys_link_fill_cache(str
  				    struct ctl_table_header *head,
  				    struct ctl_table *table)
  {
++<<<<<<< HEAD
 +	int ret = 0;
++=======
+ 	bool ret = true;
+ 
++>>>>>>> a0b0d1c345d0 (fs/proc/proc_sysctl.c: fix potential page fault while unregistering sysctl table)
  	head = sysctl_head_grab(head);
+ 	if (IS_ERR(head))
+ 		return false;
  
  	if (S_ISLNK(table->mode)) {
  		/* It is not an error if we can not follow the link ignore it */
* Unmerged path fs/proc/proc_sysctl.c
