blktrace: fix trace mutex deadlock

jira LE-1907
cve CVE-2019-19768
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
commit-author Jens Axboe <axboe@kernel.dk>
commit 2967acbb257a6a9bf912f4778b727e00972eac9b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/2967acbb.failed

A previous commit changed the locking around registration/cleanup,
but direct callers of blk_trace_remove() were missed. This means
that if we hit the error path in setup, we will deadlock on
attempting to re-acquire the queue trace mutex.

Fixes: 1f2cac107c59 ("blktrace: fix unlocked access to init/start-stop/teardown")
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 2967acbb257a6a9bf912f4778b727e00972eac9b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/trace/blktrace.c
diff --cc kernel/trace/blktrace.c
index d9820b3be08a,987d9a9ae283..000000000000
--- a/kernel/trace/blktrace.c
+++ b/kernel/trace/blktrace.c
@@@ -606,8 -636,8 +606,13 @@@ static int compat_blk_trace_setup(struc
  	if (ret)
  		return ret;
  
++<<<<<<< HEAD
 +	if (copy_to_user(arg, &buts.name, 32)) {
 +		blk_trace_remove(q);
++=======
+ 	if (copy_to_user(arg, &buts.name, ARRAY_SIZE(buts.name))) {
+ 		__blk_trace_remove(q);
++>>>>>>> 2967acbb257a (blktrace: fix trace mutex deadlock)
  		return -EFAULT;
  	}
  
* Unmerged path kernel/trace/blktrace.c
