mm/page_owner.c: remove unnecessary stack_trace field

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.el7
Rebuild_CHGLOG: - [mm] mm/page_owner: remove unnecessary stack_trace field (Rafael Aquini) [1781726]
Rebuild_FUZZ: 98.08%
commit-author Sergei Rogachev <rogachevsergei@gmail.com>
commit 94f759d62b2c6a9d124b0622077b1ddcfac43fb5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.el7/94f759d6.failed

Page owner uses the page_ext structure to keep meta-information for every
page in the system.  The structure also contains a field of type 'struct
stack_trace', page owner uses this field during invocation of the function
save_stack_trace.  It is easy to notice that keeping a copy of this
structure for every page in the system is very inefficiently in terms of
memory.

The patch removes this unnecessary field of page_ext and forces page owner
to use a stack_trace structure allocated on the stack.

[akpm@linux-foundation.org: use struct initializers]
	Signed-off-by: Sergei Rogachev <rogachevsergei@gmail.com>
	Acked-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 94f759d62b2c6a9d124b0622077b1ddcfac43fb5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/page_ext.h
#	mm/page_owner.c
diff --cc include/linux/page_ext.h
index 0dde02a0a6f6,c42981cd99aa..000000000000
--- a/include/linux/page_ext.h
+++ b/include/linux/page_ext.h
@@@ -35,13 -37,37 +35,22 @@@ enum page_ext_flags 
   */
  struct page_ext {
  	unsigned long flags;
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_PAGE_OWNER
+ 	unsigned int order;
+ 	gfp_t gfp_mask;
+ 	unsigned int nr_entries;
+ 	unsigned long trace_entries[8];
+ #endif
++>>>>>>> 94f759d62b2c (mm/page_owner.c: remove unnecessary stack_trace field)
  };
  
 -extern void pgdat_page_ext_init(struct pglist_data *pgdat);
 -
 -#ifdef CONFIG_SPARSEMEM
 -static inline void page_ext_init_flatmem(void)
 -{
 -}
 -extern void page_ext_init(void);
 -#else
 -extern void page_ext_init_flatmem(void);
 -static inline void page_ext_init(void)
 -{
 -}
 -#endif
 -
 +#ifdef CONFIG_PAGE_EXTENSION
  struct page_ext *lookup_page_ext(struct page *page);
 +void __init invoke_page_ext_init_callbacks(void);
  
  #else /* !CONFIG_PAGE_EXTENSION */
 -struct page_ext;
 -
 -static inline void pgdat_page_ext_init(struct pglist_data *pgdat)
 -{
 -}
 -
  static inline struct page_ext *lookup_page_ext(struct page *page)
  {
  	return NULL;
* Unmerged path mm/page_owner.c
* Unmerged path include/linux/page_ext.h
* Unmerged path mm/page_owner.c
