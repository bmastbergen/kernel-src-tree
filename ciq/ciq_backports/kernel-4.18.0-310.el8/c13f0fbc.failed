nvme: don't call revalidate_disk from nvme_set_queue_dying

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit c13f0fbc4c191aab5e95b01589ff5bbc6556e4f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/c13f0fbc.failed

In nvme_set_queue_dying we really just want to ensure the disk and bdev
sizes are set to zero.  Going through revalidate_disk leads to a somewhat
arcance and complex callchain relying on special behavior in a few
places.  Instead just lift the set_capacity directly to
nvme_set_queue_dying, and rename and move the nvme_mpath_update_disk_size
helper so that we can use it in nvme_set_queue_dying to propagate the
size to the bdev without detours.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit c13f0fbc4c191aab5e95b01589ff5bbc6556e4f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
#	drivers/nvme/host/nvme.h
diff --cc drivers/nvme/host/core.c
index b9d19e246c73,c7e01d9667ad..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -2130,8 -2145,9 +2143,14 @@@ static int __nvme_revalidate_disk(struc
  #ifdef CONFIG_NVME_MULTIPATH
  	if (ns->head->disk) {
  		nvme_update_disk_info(ns->head->disk, ns, id);
++<<<<<<< HEAD
 +		blk_queue_stack_limits(ns->head->disk->queue, ns->queue);
 +		nvme_mpath_update_disk_size(ns->head->disk);
++=======
+ 		blk_stack_limits(&ns->head->disk->queue->limits,
+ 				 &ns->queue->limits, 0);
+ 		nvme_update_bdev_size(ns->head->disk);
++>>>>>>> c13f0fbc4c19 (nvme: don't call revalidate_disk from nvme_set_queue_dying)
  	}
  #endif
  	return 0;
diff --cc drivers/nvme/host/nvme.h
index 27291260757b,87737fa32360..000000000000
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@@ -663,16 -683,6 +663,19 @@@ static inline void nvme_trace_bio_compl
  		trace_block_bio_complete(ns->head->disk->queue, req->bio);
  }
  
++<<<<<<< HEAD
 +static inline void nvme_mpath_update_disk_size(struct gendisk *disk)
 +{
 +	struct block_device *bdev = bdget_disk(disk, 0);
 +
 +	if (bdev) {
 +		bd_set_size(bdev, get_capacity(disk) << SECTOR_SHIFT);
 +		bdput(bdev);
 +	}
 +}
 +
++=======
++>>>>>>> c13f0fbc4c19 (nvme: don't call revalidate_disk from nvme_set_queue_dying)
  extern struct device_attribute dev_attr_ana_grpid;
  extern struct device_attribute dev_attr_ana_state;
  extern struct device_attribute subsys_attr_iopolicy;
@@@ -750,11 -757,38 +753,8 @@@ static inline void nvme_mpath_wait_free
  static inline void nvme_mpath_start_freeze(struct nvme_subsystem *subsys)
  {
  }
- static inline void nvme_mpath_update_disk_size(struct gendisk *disk)
- {
- }
  #endif /* CONFIG_NVME_MULTIPATH */
  
 -#ifdef CONFIG_BLK_DEV_ZONED
 -int nvme_update_zone_info(struct gendisk *disk, struct nvme_ns *ns,
 -			  unsigned lbaf);
 -
 -int nvme_report_zones(struct gendisk *disk, sector_t sector,
 -		      unsigned int nr_zones, report_zones_cb cb, void *data);
 -
 -blk_status_t nvme_setup_zone_mgmt_send(struct nvme_ns *ns, struct request *req,
 -				       struct nvme_command *cmnd,
 -				       enum nvme_zone_mgmt_action action);
 -#else
 -#define nvme_report_zones NULL
 -
 -static inline blk_status_t nvme_setup_zone_mgmt_send(struct nvme_ns *ns,
 -		struct request *req, struct nvme_command *cmnd,
 -		enum nvme_zone_mgmt_action action)
 -{
 -	return BLK_STS_NOTSUPP;
 -}
 -
 -static inline int nvme_update_zone_info(struct gendisk *disk,
 -					struct nvme_ns *ns,
 -					unsigned lbaf)
 -{
 -	dev_warn(ns->ctrl->device,
 -		 "Please enable CONFIG_BLK_DEV_ZONED to support ZNS devices\n");
 -	return -EPROTONOSUPPORT;
 -}
 -#endif
 -
  #ifdef CONFIG_NVM
  int nvme_nvm_register(struct nvme_ns *ns, char *disk_name, int node);
  void nvme_nvm_unregister(struct nvme_ns *ns);
* Unmerged path drivers/nvme/host/core.c
* Unmerged path drivers/nvme/host/nvme.h
