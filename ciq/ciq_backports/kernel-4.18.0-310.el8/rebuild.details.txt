Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 3167
Number of commits matched with upstream: 3131 (98.86%)
Number of commits in upstream but not in rpm: 485003
Number of commits NOT found in upstream: 36 (1.14%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-310.el8 for kernel-4.18.0-310.el8
Clean Cherry Picks: 2347 (74.96%)
Empty Cherry Picks: 755 (24.11%)
_______________________________

__EMPTY COMMITS__________________________
3302363a27fb38a3581921a74aff855f4dcbfe0a virtio/test: fix up after IOTLB changes
01fcb1cbc88effb3493c6197efc96b69b9f4823a vhost: allow device that does not depend on vhost worker
5ce995f313ce56c0c62425c3ddc37c5c50fc33db vhost: use mmgrab() instead of mmget() for non worker device
7ed9e3d97c32d969caded2dfb6e67c1a2cc5a0b1 vhost-vdpa: fix page pinning leakage in error path
5e1a3149eec8675c2767cc465903f5e4829de5b0 Revert "vhost-vdpa: fix page pinning leakage in error path"
ad89653f79f1882d55d9df76c9b2b94f008c4e27 vhost-vdpa: fix page pinning leakage in error path (rework)
a53cf9497a1683ae49f870d066b693ceea5e517f net/mlx5: E-switch, Read controller number from device
05b595e9c44acaca94192c6db430a489c1b212a7 devlink: Introduce external controller flag
3a2d9588c4f79adae6a0e986b64ebdd5b38085c6 devlink: Introduce controller number
0b588afdd16f9e0b63128dc4bcd002e7f2725fe0 genetlink: add small version of ops
66a9b9287d2447a91cef2fafc648dee32186f708 genetlink: move to smaller ops wherever possible
48526a0f4ca2b484cab4318dc0b2c2be1d8685b7 genetlink: bring back per op policy
7c1e0926da18051f4a09da1e380591213b0cdb5f taskstats: move specifying netlink policy back to ops
e992a6eda9a1eeeab73a8d2792464e4a2b1ebc3b genetlink: allow dumping command-specific policy
a79afa78e625e4dbe0e07c70929d477ba3386e45 net: use the new dev_page_is_reusable() instead of private versions
3b23a32a63219f51a5298bc55a65ecee866e79d0 net: fix dev_ifsioc_locked() race condition
26ebd6fed9bb3aa480c7c0f147ac0e7b11000f65 selftests: rtnetlink: load fou module for kci_test_encap_fou() test
e2b0d619b400ae326f954a018a1d65d736c237c5 x86, sched: check for counters overflow in frequency invariant accounting
da0777d35f47892f359c3f73ea155870bb595700 sched/fair: Fix wrong negative conversion in find_energy_efficient_cpu()
3aef1551e942860a3881087171ef0cd45f6ebda7 sched: Remove select_task_rq()'s sd_flag parameter
b19a888c1e9bdf12e0d8dd9aeb887ca7de91c8a5 sched/core: Fix typos in comments
7d2b5dd0bcc48095651f1b85f751eef610b3e034 sched/numa: Allow a floating imbalance between NUMA nodes
23e6082a522e32232f7377540b4d42d8304253b8 sched: Limit the amount of NUMA imbalance that can exist at fork time
41ea667227bad5c247d76e6605054e96e4d95f51 x86, sched: Calculate frequency invariance for AMD systems
976df7e5730e3ec8a7e192c09c10ce6e8db07e65 x86, sched: Use midpoint of max_boost and max_P for frequency invariance on AMD EPYC
aa3b66f401b372598b29421bab4d17b631b92407 tick/sched: Make jiffies update quick check more robust
9c7d9017a49fb8516c13b7bff59b7da2abed23e1 x86: PM: Register syscore_ops for scale invariance
220915857e29795ae5ba4222806268b4a99c19c1 Bluetooth: Adding driver and quirk defs for multi-role LE
31d4ab856e2d57a8877d90012b42d029f1fe0fe9 Bluetooth: hci_qca: add compatible for QCA9377
7e7bbddd029b644f00f0ffbfbc485ed71977d0d5 Bluetooth: hci_qca: Fix qca6390 enable failure after warm reboot
cde1a8a992875a7479c4321b2a4a190c2e92ec2a Bluetooth: btusb: Fix and detect most of the Chinese Bluetooth controllers
58789a1990c1a849a461ac912e72a698a771951a Bluetooth: hci_qca: Stop collecting memdump again for command timeout during SSR
b40f58b973865ee98ead884d2bdc7880b896ddb8 Bluetooth: btusb: Add Qualcomm Bluetooth SoC WCN6855 support
d74e0ae7e03032b47b8631cc1e52a7ae1ce988c0 Bluetooth: btusb: Fix detection of some fake CSR controllers with a bcdDevice val of 0x0134
0671c0662383eefc272e107364cba7fe229dee44 Bluetooth: btusb: Add workaround for remote-wakeup issues with Barrot 8041a02 fake CSR controllers
dfe94d4086e40e92b1926bddcefa629b791e9b28 x86/hyperv: Fix kexec panic/hang issues
0db0c34cfbc9838c1a14cb04dd880602abd699a7 net: tighten the definition of interface statistics
9a27a33027f22a716ce362be48d70ae0eb012ab7 ethtool: add standard pause stats
8c00bd936f335461158dd50225ca8f2ea05a3717 docs: net: include the new ethtool pause stats in the stats doc
5028588b62cbda74744f4f28b35f618e5b1078ef ethtool: wire up set policies to ops
ff419afa43109e05d42d75629f21d9fd87f635ea ethtool: trim policy tables
329d9c333ee4a904341d555b72cd6218f4104d53 ethtool: link up ethnl_header_policy as a nested policy
a0de1cd3568749d3410c89b1c8bb70e90d61659f ethtool: specify which header flags are supported per command
db972e5325183df1265bf851b32dc7530dd4393a ethtool: strset: allow ETHTOOL_A_STRSET_COUNTS_ONLY attr
fd15dd0586896392f6f29daa5b9eeb6c1b18df6a ethtool: correct policy for ETHTOOL_MSG_CHANNELS_SET
16756d3e77ad58cd07e36cbed724aa13ae5a0278 ethtool: pause: make sure we init driver stats
69842cba9ace84849bb9b8edcdf2cefccd97901c sched/uclamp: Add CPU's clamp buckets refcounting
7672dac30435b6e28aebaea189ffcb233e61760d RDMA/rxe: Address an issue with hardened user copy
119181d1d4327d3259ab25aa0ea3d3bc364afcdc RDMA: Restore ability to fail on SRQ destroy
43d781b9fa562f0c6e50f62c870fbfeb9dc85213 RDMA: Allow fail of destroy CQ
ebc24096c4c40017d9f9b0fddc5d69b94ad10369 RDMA/umem: Add rdma_umem_for_each_dma_block()
a665aca89a411115e35ea937c2d3fb2ee4f5a701 RDMA/umem: Split ib_umem_num_pages() into ib_umem_num_dma_blocks()
d18bb3e15201918b8d07e85a6e010ca5ed28dad5 RDMA: Clean MW allocation and free flows
b925c555a15de8443ecb2e147b54b1bbe9b71fe3 RDMA/drivers: Remove udata check from special QP
5bb3c1e9d4bc93a9eb4e44a52582d6aa72643b1e IB/usnic: Fix deadlock
b9caebb290d298a114ed6426e644db9a09560055 RDMA/usnic: Remove the query_pkey callback
e0477b34d9d11c1a7b1f80bfdbcdc8952ce2adb7 RDMA: Explicitly pass in the dma_device to ib_register_device
071ba4cc559de47160761b9500b72e8fa09d923d RDMA: Add rdma_connect_locked()
683a9c7ed81769b6ecb6229afb00b6cda8e4bcfb RDMA: Fix software RDMA drivers for dma mapping error
b8e3130dd96b7b2d6d92e62dcd1515af30212fe2 RDMA: Remove uverbs_ex_cmd_mask values that are linked to functions
c074bb1e30f9b51032245300798613a290e42f25 RDMA: Remove elements in uverbs_cmd_mask that all drivers set
44ce37bc8bf30283d16c5e5f20964b638bebd429 RDMA: Move more uverbs_cmd_mask settings to the core
652caba5b5501258a46d4b9279e0dbb6e5d42d75 RDMA: Check srq_type during create_srq
26e990badde40b2fb824bfa3cb9d4288a79584bc RDMA: Check attr_mask during modify_qp
1c407cb5d70568a57a32a0e6f5aee27c5083ef37 RDMA: Check flags during create_cq
1f11a7610e50982150b90b31d1f749f6217fbde6 RDMA: Check create_flags during create_qp
bd2a40cc2463766ed1a55d94a4ccbdcd621da323 RDMA/core Remove uverbs_ex_cmd_mask
628c02bf38aa42c09c3dde61284ba348290e6650 RDMA: Remove uverbs cmds from drivers that don't use them
676a80adba0131e1603ef3de5f73a19a0d3d0e65 RDMA: Remove AH from uverbs_cmd_mask
5c4193669b6f20b990f99cb8e15cdea80f865ac1 RDMA/rxe,siw: Restore uverbs_cmd_mask IB_USER_VERBS_CMD_POST_SEND
efa968ee20248ebf8da8542f21d5d2811e86392f RDMA/core: Postpone uobject cleanup on failure till FD close
c5633a72a1b8a2740bdb1495eab010f1124fd5ee RDMA/core: Make FD destroy callback void
87524494a7d939e6e120e893e2bdcc35599dfda1 RDMA/efa: Use dma_set_mask_and_coherent() to simplify code
b045db62f6f61c2f0f993696abe620379db34163 RDMA/mlx5: Use ib_umem_find_best_pgoff() for SRQ
6e0954b11c056570cb29676a84e2f8dc4d1dd05e RDMA/uverbs: Allow drivers to create a new HW object during rereg_mr
0c16d9635e3a51377e5815b9f8e14f497a4dbb42 RDMA/umem: Move to allocate SG table from pages
b116c702791a9834e6485f67ca6267d9fdf59b87 RDMA/umem: Use ib_dma_max_seg_size instead of dma_get_max_seg_size
5a7a9e038b032137ae9c45d5429f18a2ffdf7d42 RDMA/core: remove use of dma_virt_ops
a9d2e9ae953f0ddd0327479c81a085adaa76d903 RDMA/siw,rxe: Make emulated devices virtual in the device tree
b98e762e3d71e893b221f871825dc64694cfb258 nbd: freeze the queue while we're adding connections
298fb372984a808ccba9ca15a9cf0f393b3259b4 dm: rename multipath path selector source files to have "dm-ps" prefix
b690bd546b227c32b860dae985a18bed8aa946fe dm zoned: select CONFIG_CRC32
24f6b6036c9eec21191646930ad42808e6180510 dm table: fix zoned iterate_devices based device capability checks
cccb493cdae76a51e1258c0738e2b43869655d39 dm table: remove needless request_queue NULL pointer checks
2099b145d77c1d53f5711f029c37cc537897cee6 dm era: Update in-core bitset after committing the metadata
a666e5c05e7c4aaabb2c5d58117b0946803d03d2 dm: fix deadlock when swapping to encrypted device
e3290b9491ff5b7ee40f9e0a4c06821988a2a2bf dm: simplify target code conditional on CONFIG_BLK_DEV_ZONED
2d669ceb69c276f7637cf760287ca4187add082e dm table: Fix zoned model check and zone sectors check
22ec3d232f8511b21355fcdb6fb2a4eced3decd8 devlink: check flash_update parameter support in net core
bc75c054f04048517e0b153ab38d973bbcdcef59 devlink: convert flash_update to use params structure
5d5b4128c4caae34ddcd9b2dc30ac4d6155617a3 devlink: introduce flash update overwrite mask
cbb58368fbccc823a85df73bd6bf7db6dfda86aa netdevsim: add support for flash_update overwrite mask
07a7f30819475a6f058df6bba5150c50e7942cfb net: psample: fix build error when CONFIG_INET is not enabled
a03e99d39f1943ec88f6fd3b0b9f34c20663d401 psample: Encapsulate packet metadata in a struct
07e1a5809b595df6e125504dff6245cb2c8ed3de psample: Add additional metadata attributes
8f061abbf543355d77fac5c23521b6b452da6310 x86/platform/uv: Remove existing /sys/firmware/sgi_uv/ interface
4fc2cf1f2daf8303000efb7c9dc0307ea638a8f3 x86/platform/uv: Add new uv_sysfs platform driver
c159376490eef39f0f2cb1ce5dd38a6d41c859b4 x86/platform/uv: Update ABI documentation of /sys/firmware/sgi_uv/
612a0063c9ba3aba79b9006faa0edad5f9d41162 x86/platform/uv: Add sysfs leaves to replace those in procfs
433e817ae157479844d84b186dd4d165a3f2b06e x86/platform/uv: Add sysfs hubless leaves
c9624cb7db1c418cbdc8fd2cde6835f83cd0f8a2 x86/platform/uv: Update sysfs documentation
e93d757c3f33c8a09f4aae579da4dc4500707471 x86/platform/uv: Fix indentation warning in Documentation/ABI/testing/sysfs-firmware-sgi_uv
18d047bd89b8c1f9ba3c9b2d2f7309c953b3ce97 x86/platform/uv: Fix an error code in uv_hubs_init()
bb533ec8bacd064ee273ca3305db97938c3331ae s390/config: do not select VIRTIO_CONSOLE via Kconfig
0ba64770a2f2e5a104bf835e133d78d3f82287ad perf: Add Arm CMN-600 PMU driver
d9ef632fab9ba81b708763bcbcfdbea9a55c95d2 perf: arm-cmn: Fix unsigned comparison to less than zero
887e2cff0f8dc4dac4c35e631b711325c6dd65b8 perf: arm-cmn: Fix conversion specifiers for node type
79d7c3dca99fa96033695ddf5d495b775a3a137b perf/arm-cmn: Fix PMU instance naming
1c8147ea89c883d1f4e20f1b1d9c879291430102 perf/arm-cmn: Move IRQs when migrating context
1cd738b13ae9b29e03d6149f0246c61f76e81fcf xfs: consider shutdown in bmapbt cursor delete assert
dd23e8098f33a55b22b869bc7fc0a795ccbb9f87 initramfs: panic with memory information
a18394269fc87276963e8d965c730900178d7e4b net: core: add dev_get_tstats64 as a ndo_get_stats64 implementation
ca48739e59df31d16c27dbcd9ea2ea61d7caa9fb Drivers: hv: vmbus: Move Hyper-V page allocator to arch neutral code
99a0f46af6a7715147e81c558d558021aad4e207 x86/hyperv: extract partition ID from Microsoft Hypervisor if necessary
86b5ec3552f3c09694e6f7934834b0a2a3aeebbe x86/hyperv: provide a bunch of helper functions
d589ae61bc27b2b9aaac0bf20a9077b6fbda32b6 asm-generic/hyperv: update hv_msi_entry
b59fb7b60d47b2af3a114daf0ae198aa23921698 asm-generic/hyperv: update hv_interrupt_entry
466a9c3f88d04152ca83e840ca940c5f700402ac asm-generic/hyperv: import data structures for mapping device interrupts
6dc2a774cb4fdb524b7eb0b8db74198a1b4815ea x86/Hyper-V: Support for free page reporting
753ed9c95c37d058e50e7d42bbe296ee0bf6670d drivers: hv: Create a consistent pattern for checking Hyper-V hypercall status
ccdf07219da6bd1f43c6ddcde4c0e36993c7365a devlink: Add reload action option to devlink reload command
dc64cc7c63102ac78bac3cfbc00ef3abd7a3fdf3 devlink: Add devlink reload limit option
a254c264267e8746fb257806c166e54375cf9c06 devlink: Add reload stats
77069ba2e3adf48c472fbbd9cbd7a4f5370b17df devlink: Add remote reload stats
5204bb683c1633e550c2124ccc2358dd645a80db devlink: Fix reload stats structure
75f4d4544db9fa34e1f04174f27d9f8a387be37d devlink: use _BITUL() macro instead of BIT() in the UAPI header
452cddbff74b6a15b9354505671011700fe03710 static_call: Add static_call_cond()
74d8b90a889022e306b543ff2147a6941c99b354 x86/asm/crypto: Annotate local functions
e9b9d020c4873d5e90d9986cfd137afbafbc5bfa x86/asm: Annotate aliases
4aec216b93dd8e3597124f41369ec835ff18dbd0 x86/asm/64: Add ENDs to some functions and relabel with SYM_CODE_*
bc7b11c04ee9c9b0451ebf85bf64e0de69fdbb17 x86/asm/64: Change all ENTRY+END to SYM_CODE_*
6dcc5627f6aec4cb1d1494d06a48d8061db06a04 x86/asm: Change all ENTRY+ENDPROC to SYM_FUNC_*
2245d39886fad920f4ea3583e2fb29bf01fc01d8 x86/kvm/vmx: Use native read/write_cr2()
c4d51a52c67a1e3a0fa3006e5ec21cdc07649cd6 sched/wait: Add add_wait_queue_priority()
fb04a1eddb1a65b6588a021bdc132270d5ae48bb KVM: X86: Implement ring-based dirty memory tracking
b2cc64c4f3829c25b618f23f472a493668d9cb80 KVM: Make dirty ring exclusive to dirty bitmap log
3f1a18b9fa1c294802d2750d1ef6a1221b10b76b KVM/VMX/SVM: Move kvm_machine_check function to x86.h
916391a2d1dc225bfb68624352b1495ec529444e KVM: SVM: Add support for SEV-ES capability in KVM
add5e2f045414523aa6dc29d69b21e8f82e5ffb8 KVM: SVM: Add support for the SEV-ES VMSA
f9a4d621761a2c7db686cc47772a0688d389f2d7 KVM: x86: introduce complete_emulated_msr callback
f1c6366e304328de301be362eca905a3503ff33b KVM: SVM: Add required changes to support intercepts under SEV-ES
291bd20d5d88814a73d43b55b9428feab2f28094 KVM: SVM: Add initial support for a VMGEXIT VMEXIT
1edc14599e06fdf23dcf7516f73f09091853eb9a KVM: SVM: Add support for SEV-ES GHCB MSR protocol function 0x002
d36946679ef6a6fb32b655265602c174feb0ce5e KVM: SVM: Add support for SEV-ES GHCB MSR protocol function 0x004
e1d71116b64a54c3948d2692d4338e643408c411 KVM: SVM: Add support for SEV-ES GHCB MSR protocol function 0x100
d523ab6ba2753bd41b4447ae48024182cb4da94f KVM: SVM: Create trace events for VMGEXIT processing
59e38b58de283f76c533a2da416abf93bfd9ea41 KVM: SVM: Create trace events for VMGEXIT MSR protocol processing
8f423a80d299a5b3964b8af005d1aab4e5e9106a KVM: SVM: Support MMIO for an SEV-ES guest
7ed9abfe8e9f62384f9b11c9fca19e551dbec5bd KVM: SVM: Support string IO operations for an SEV-ES guest
ed02b213098a90c2a415a0da18f05841f8cf0a81 KVM: SVM: Guest FPU state save/restore not needed for SEV-ES guest
4444dfe4050b79964d7bb9b86a99e2bb21a972b0 KVM: SVM: Add NMI support for an SEV-ES guest
376c6d285017419e35c7177bc60abe7915fb7497 KVM: SVM: Provide support for SEV-ES vCPU creation/loading
861377730aa9db4cbaa0f3bd3f4d295c152732c4 KVM: SVM: Provide support for SEV-ES vCPU loading
c3f08ed15047002677b8b1f9f5bc29ced3f87a6f x86/kvm/svm: Use uninstrumented wrmsrl() to restore GS
16809ecdc1e8ab7278f1d60021ac809edd17d060 KVM: SVM: Provide an updated VMRUN invocation for SEV-ES guests
8640ca588b032166d6be6b4d3632d565d6d88e89 KVM: SVM: Add AP_JUMP_TABLE support in prep for AP booting
f65cf84ee769767536dc367acc9568ddb6e4c9f4 KVM: SVM: Add register operand to vmsave call in sev_es_vcpu_load
52782d5b63725a6c4bf642557c83507430064110 KVM/SVM: Remove leftover __svm_vcpu_run prototype from svm.c
647daca25d24fb6eadc7b6cd680ad3e6eed0f3d5 KVM: SVM: Add support for booting APs in an SEV-ES guest
872f36eb0b0f4f0e3a81ea1e51a6bdf58ccfdc6e KVM: x86: __kvm_vcpu_halt can be static
250091409a4ac567581c1f929eb39139b57b56ec KVM: SVM: Unconditionally sync GPRs to GHCB on VMRUN of SEV-ES guest
15b51dc08a349f2f0832606c900b638a3dd19839 KVM: x86: Take KVM's SRCU lock only if steal time update is needed
c910662c7c696ec0769766aaee5fc2fb54d921d5 KVM: X86: use vzalloc() instead of vmalloc/memset
15aad3be9adb3fb7fba84190a2ce57d66e8b51da KVM: X86: Reset the vcpu->run->flags at the beginning of vcpu_run
fe6b6bc802b40081e8a7a1abe8d32b88d10a03e1 KVM: VMX: Enable bus lock VM exit
1b5ac3226a1aa071135fe0ee5d1055d9e88b717c KVM: vmx/pmu: Pass-through LBR msrs when the guest LBR event is ACTIVE
9254beaafd12e27d48149fab3b16db372bc90ad7 KVM: vmx/pmu: Reduce the overhead of LBR pass-through or cancellation
e6209a3bef793e8fe29c873a7612023916eaa611 KVM: vmx/pmu: Emulate legacy freezing LBRs on virtual PMI
9aa4f622460f9287e57804dbeb219bfef29f04a1 KVM: vmx/pmu: Release guest LBR event via lazy release mechanism
ad282a8117d5048398f506f20b092c14b3b3c43f locking/static_key: Add support for deferred static branches
b3646477d458fbe7694a15b9c78fbe2fa426b703 KVM: x86: use static calls to reduce kvm_x86_ops overhead
ed72736183c45a413a8d6974dd04be90f514cb6b x86/reboot: Force all cpus to exit VMX root if VMX is supported
150f17bfab37e981ba03b37440638138ff2aa9ec KVM/nVMX: Use __vmx_vcpu_run in nested_vmx_check_vmentry_hw
35a7831912f455d7d19b31cd9300e73f585a077b KVM: SVM: Use asm goto to handle unexpected #UD on SVM instructions
e79b91bb3c916a52ce823ab60489c717c925c49f KVM: SVM: use vmsave/vmload for saving/restoring additional host state
553cc15f6e8d1467dc09a1fe6e51fcdea5f96471 KVM: SVM: remove uneeded fields from host_save_users_msrs
a7fc06dd2f14f88e611a968f7efa6532cdd5529a KVM: SVM: use .prepare_guest_switch() to handle CPU register save/setup
bbefd4fc8f590e765b455ef0a4deb6c105fee305 KVM: x86: move kvm_inject_gp up from kvm_set_xcr to callers
4fd94ec7d566ee2f0b52111cc6d26dd311f8a7c3 KVM: selftests: Introduce the dirty log perf test
6d6a18fdde8b86b919b740ad629153de432d12a8 KVM: selftests: allow two iterations of dirty_log_perf_test
8aa426e854c475504033c176a66d038259bf64ea selftests: kvm: keep .gitignore add to date
f63f0b68c864edea801de678bed279a3d7674f1a KVM: selftests: always use manual clear in dirty_log_perf_test
3cea1891748e0ed8e79fa5d9afe40750319751d1 selftests: kvm: Test MSR exiting to userspace
fb6360534ecc0a2703f7b6076cf1397385d23df8 selftests: kvm: Merge user_msr_test into userspace_msr_exit_test
e42ac777d661e878c3b9bac56df11e226cab3010 KVM: selftests: Factor out guest mode code
1133e17ea7c9929ff7b90e81d8926f9e870748e9 KVM: selftests: Use vm_create_with_vcpus in create_vm
b268b6f0bd36322358accb15c45683a9e1220231 KVM: selftests: Implement perf_test_util more conventionally
f9224a5235912fbfaa9f642e61e3f943ae0628ad KVM: selftests: Rename timespec_diff_now to timespec_elapsed
89dc52946a165b5396d4b84717d36ded8c5783c7 KVM: selftests: Avoid flooding debug log while populating memory
2d501238bc257ae86b345cb23fae3fd1af14687e KVM: selftests: Convert iterations to int in dirty_log_perf_test
86753bd04c7ca6b551b83c5395dd25e95de99aa4 KVM: selftests: Fix population stage in dirty_log_perf_test
82f91337ddde22eaa2e9e0aca248f5e6f336fa91 KVM: selftests: Add option to overlap vCPU memory access
f73a3446252e6c6d84d6b80b89fc3fe810a348c2 KVM: selftests: Add memslot modification stress test
9e965bb75aaec28a9537e35871106367fe88b702 KVM: selftests: Add backing src parameter to dirty_log_perf_test
c1d1650f55b1d5bca2e42564391c5484a9a3013b KVM: selftests: Disable dirty logging with vCPUs running
f88d4f2f287ec062e985b60cbe60f04bd5a8e659 selftests: kvm/x86: add test for pmu msr MSR_IA32_PERF_CAPABILITIES
fb18d053b7f823e6a9acf62d1be5b986ca614253 selftest: kvm: x86: test KVM_GET_CPUID2 and guest visible CPUIDs against KVM_GET_SUPPORTED_CPUID
23200b7a30de315d0e9a40663c905869d29d833c KVM: x86/xen: intercept xen hypercalls if enabled
5b7f575ccd29eb1a0b013961bee5957574046094 KVM: x86: Use reserved_gpa_bits to calculate reserved PxE bits
6f8e65a60168567cc59f9b99980ea9112d4152f5 KVM: x86/mmu: Add helper to generate mask of reserved HPA bits
79033bebf6fa3045bfa9bbe543c0eb7b43a0f4a3 KVM: x86/xen: Fix coexistence of Xen and Hyper-V hypercalls
78e9878cb376969d184a4b7fff392528fe17a3ce KVM: x86/xen: Move KVM_XEN_HVM_CONFIG handling to xen.c
7d6bbebb7bb0294ede7bda04847272854e34f87c KVM: x86/xen: Add kvm_xen_enabled static key
a76b9641ad1c0b045045727a6cbbeebf80b6b9bb KVM: x86/xen: add KVM_XEN_HVM_SET_ATTR/KVM_XEN_HVM_GET_ATTR
a3833b81b05d0ae92ae085959dd8da136ec91868 KVM: x86/xen: latch long_mode when hypercall page is set up
1ea9f2ed81c4b058a3dc73b75d684a1f451ce714 KVM: x86/xen: add definitions of compat_shared_info, compat_vcpu_info
13ffb97a3b11998450d51457b6b3617781953f7c KVM: x86/xen: register shared_info page
629b5348841a10afce49fbe81619863fd839f217 KVM: x86/xen: update wallclock region
3e3246158808d46b81edb8246214c0ab5a852594 KVM: x86/xen: Add KVM_XEN_VCPU_SET_ATTR/KVM_XEN_VCPU_GET_ATTR
73e69a86347afe8156aa50c436fc192b280b0cd7 KVM: x86/xen: register vcpu info
aa096aa0a05ff7f1e7b8da95fae7aa71668212c7 KVM: x86/xen: setup pvclock updates
f2340cd9e41dc463cb1189274f3db560c1dfa1f4 KVM: x86/xen: register vcpu time info region
40da8ccd724f7ca2f08550a46268bc3a91cc8869 KVM: x86/xen: Add event channel interrupt vector upcall
e0121fa29a7f4fc56cf75f5c6a80c41c7c73f593 KVM: x86: hyper-v: Rename vcpu_to_synic()/synic_to_vcpu()
aafa97fd1c01bc82c1f288bf1f27e8e1bdc36a3e KVM: x86: hyper-v: Rename vcpu_to_stimer()/stimer_to_vcpu()
9ff5e0304e949a8a4e584c8c2b11fad9b2e0b133 KVM: x86: hyper-v: Always use to_hv_vcpu() accessor to get to 'struct kvm_vcpu_hv'
f2bc14b69c38b60f201fdf90c08cb2dc8966f331 KVM: x86: hyper-v: Prepare to meet unallocated Hyper-V context
4592b7eaa87d3525825d4ab2a35308bcec9e5ff9 KVM: x86: hyper-v: Allocate 'struct kvm_vcpu_hv' dynamically
8f014550dfb114cc7f42a517d20d2cf887a0b771 KVM: x86: hyper-v: Make Hyper-V emulation enablement conditional
fc08b628d7c96d9a6d6bca488c3fa9c92bee6cc8 KVM: x86: hyper-v: Allocate Hyper-V context lazily
b9ce0f86d91942596bce0267bfa7db3bbd7b434f KVM: x86: hyper-v: Drop hv_vcpu_to_vcpu() helper
8d4e7e80838f45d3466d36d4fcb890424825faa9 KVM: x86: declare Xen HVM shared info capability and add test case
a685d99208621b39dd0764e2bfdddfd19bb080f2 KVM: selftests: Fix size of memslots created by Xen tests
fc79ef3e7b7590e42fe01bc9d9e2635413905716 KVM: selftests: Fix hex vs. decimal snafu in Xen test
f1b83973a164073d9b2e5e3d2c556e7ef6743cf6 KVM: selftests: Don't bother mapping GVA for Xen shinfo test
1838b06bf01ac2b1b9ea808aa5962d5324b4da8f selftests: kvm: add hardware_disable test
bcd22e145b9a65dd603c7b3d8079e948922787e4 selftests: kvm: avoid uninitialized variable warning
f20d4e924b4465822c4a35290b85aadf88ddf466 docs: kvm: add documentation for KVM_CAP_S390_DIAG318
e1f68169a4f89e49f33bf52df29aeb57cb8b1144 KVM: Add documentation for Xen hypercall and shared_info updates
9294b8a12585f8b4ccb9c060b54bab0bd13f24b9 Documentation: kvm: fix warning
0c165b3c01fefa78f440d5759cef47e8754a7a32 KVM: x86/xen: Allow reset of Xen attributes
7137b7ae6f20076a1e05546db61f9fb3d3f9e97d KVM: x86/xen: Explicitly pad struct compat_vcpu_info to 64 bytes
c462f859f895840e7cd4f20f822ad4c6df2db489 KVM: xen: flush deferred static key before checking it
b59b153d1026b73deb032d01bb9319ebba896006 KVM: x86: allow compiling out the Xen hypercall interface
30b5c851af7991ad08abe90c1e7c31615fa98a1a KVM: x86/xen: Add support for vCPU runstate information
77a3aa26a00fe55325ae2a51d80a56836d1edce8 selftests: kvm: add get_msr_index_features
3df2252436c08028a549e27ed7f097974e21d17b selftests: kvm: add set_boot_cpu_id test
f982fb62a304235397ec092936432199ca50ac4d selftests: kvm: make hardware_disable_test less verbose
b9c36fdedd837021f2e72a36e9a12cd4971bcb35 KVM: selftests: remove redundant semi-colon
6436430e29fb250c140c94a8fcc218a832dcaf74 KVM: selftests: Make a generic helper to get vm guest mode strings
3b70c4d128a7781f507fa072d60ce5df3fdfcaa6 KVM: selftests: Add a helper to get system configured THP page size
5579fa682a3411e5ed58bde35af5128f1044a4b9 KVM: selftests: Add a helper to get system default hugetlb page size
623653b7d4622cb7d016e9a81e6a9d0d9b1326df KVM: selftests: List all hugetlb src types specified with page sizes
b9c2bd50eca5dc6ed8eaacbbb2e17df95a56bd1c KVM: selftests: Add a test for kvm page table code
bf1e15a82e3b74ee86bb119d6038b41e1ed2b319 KVM: selftests: Always run vCPU thread with blocked SIG_IPI
a8ac864a7d6dbc2fc43081b1eecd9e0183065d47 KVM: x86: Add helper to consolidate "raw" reserved GPA mask calculations
99df541dcc97ce4436528a4eeb23165d8c672a64 KVM: x86/xen: Remove extra unlock in kvm_xen_hvm_set_attr()
448841f0b7b50f1b8d7a40138dfb0d882435c8bd KVM: x86/xen: Use hva_t for holding hypercall page address
6dd03800b1afe4d3b6f26b0d20f2e1ecebf32b29 KVM: x86/mmu: Make dirty log size hook (PML) a value, not a function
a018eba53870aa30e5e57465771cb209680f20c2 KVM: x86: Move MMU's PML logic to common code
a85863c2ec55edcfd11853014b143fc02b8840a9 KVM: VMX: Dynamically enable/disable PML based on memslot dirty logging
b6e16ae5d99fa39f0cb3d3f4558c2cbf44af38f8 KVM: x86/mmu: Don't set dirty bits when disabling dirty logging w/ PML
a1419f8b5bab477d96a71d1c37da0784fb18dc51 KVM: x86: Fold "write-protect large" use case into generic write-protect
b296a6d53339a79082c1d2c1761e948e8b3def69 kernel.h: split out min()/max() et al. helpers
4a42d848db9544e3108875390886dc490d9c101e KVM: x86/mmu: Consider the hva in mmu_notifier retry
67b45af946ec3148b64e6a3a1ee2ea8f79c5bc07 KVM: vmx/pmu: Fix dummy check if lbr_desc->event is created
7d7c5f76e54131ed05b057103b5278b6b852148b KVM: x86/xen: Fix return code when clearing vcpu_info and vcpu_time_info
4995a3685f1b768648187ed20bea3366f5f76228 KVM: SVM: Use a separate vmcb for the nested L2 guest
af18fa775d07aeb92d4598df5364a21489aa4141 KVM: nSVM: Track the physical cpu of the vmcb vmrun through the vmcb
193015adf40d0465c240d4e9a7b6e4b84b531f8b KVM: nSVM: Track the ASID generation of the vmcb vmrun through the vmcb
9e8f0fbfff1a7787658ce1add0625f59c4faf0ef KVM: nSVM: rename functions and variables according to vmcbXY nomenclature
7c3ecfcd31936e85aa6eb90156d07308b899a76f KVM: nSVM: do not copy vmcb01->control blindly to vmcb02->control
c08f390a75c14fb9f8115d74ae9b7a6142a659b3 KVM: nSVM: only copy L1 non-VMLOAD/VMSAVE data in svm_set_nested_state()
2a32a77cefa662773197b362db8e4190027c89fa KVM: SVM: merge update_cr0_intercept into svm_set_cr0
63129754178c5514f04bf6bdb891e33dfe58e58d KVM: SVM: Pass struct kvm_vcpu to exit handlers (and many, many other places)
cb6a32c2b8777ad31a02e585584d869251a790e3 KVM: x86: Handle triple fault in L2 without killing L1
3a87c7e0d176ff73c9ef5d58d89ad65f3be31d1b KVM: nSVM: Add helper to synthesize nested VM-Exit without collateral
2ac636a6ea4dae8260639e8df5c457c0c74cafa9 KVM: nSVM: Add VMLOAD/VMSAVE helper to deduplicate code
92f9895c146d7378f442dfc25a276c06150dfbd7 KVM: x86: Move XSETBV emulation to common code
5ff3a351f687fdd23051e7474f62788c57a7a613 KVM: x86: Move trivial instruction-based exit handlers to common code
c483c45471b94f59c76cf45b676eb08318a9519a KVM: x86: Move RDPMC emulation to common code
32c23c7d5275d41818807801be44cbba03045fc8 KVM: SVM: Don't manually emulate RDPMC if nrips=0
fb0c4a4fee5a35b4e531b57e42231868d1fedb18 KVM: SVM: move VMLOAD/VMSAVE to C code
cc3ed80ae69f454c3d904af9f65394a540099723 KVM: nSVM: always use vmcb01 to for vmsave/vmload of guest state
d00b99c514b33a3f40dbb3e730b14a283401aa8e KVM: SVM: Add support for Virtual SPEC_CTRL
8173396e94c10dccde5e890f1bb31d11c05cae68 KVM: nSVM: Optimize vmcb12 to vmcb02 save area copies
b97f074583736c42fb36f2da1164e28c73758912 KVM: x86: determine if an exception has an error code only when injecting it.
7531b47c8a358405e713b8070055c365f3172d74 KVM/SVM: Move vmenter.S exception fixups out of line
e83bc09caf1671ec1c14621668cde2816902e2ea KVM: x86: Get active PCID only when writing a CR3 value
4a98623d5d90175c0f99d185171e60807391e487 KVM: x86/mmu: Mark the PAE roots as decrypted for shadow paging
b318e8decf6b9ef1bcf4ca06fae6d6a2cb5d5c5c KVM: x86: Protect userspace MSR filter with SRCU, and set atomically-ish
3c346c0c60ab06a021d1c0884a0ef494bc4ee3a7 KVM: SVM: ensure that EFER.SVME is set when running nested guest or on nested vmexit
9a7de6ecc3ed80efb95fe1d97b6440922e55dbda KVM: nSVM: If VMRUN is single-stepped, queue the #DB intercept in nested_svm_vmexit()
142ccde1f7b1b0c621c299cbcc8feb6353f7cc92 KVM: x86/mmu: Coalesce TLB flushes when zapping collapsible SPTEs
a3f15bda46e85c33e55b23aa51dd542453f134e3 KVM: x86/mmu: Pass address space ID to TDP MMU root walkers
eba04b20e4861d9bdbd8470a13c0c6e824521a36 KVM: x86: Account a variety of miscellaneous allocations
adc2a23734acd607bdf30dc08ba8ffc5ee2a8c9d KVM: nSVM: improve SYSENTER emulation on AMD
8b13c36493d8cb56fc3b386507873c5412b7108d KVM: introduce KVM_CAP_SET_GUEST_DEBUG2
8ca6f063b73d3754213d009efb3df486c8fe52d2 KVM: x86/mmu: Re-add const qualifier in kvm_tdp_mmu_zap_collapsible_sptes
cfc109979b3c879ea9df05e048bb83615964f3e3 KVM: x86/mmu: Refactor yield safe root iterator
7e582ccbbd737181a5f9a7e3b8f7523a62550796 KVM: x86: implement KVM_CAP_SET_GUEST_DEBUG2
fb10129335ca6cc7a229226b03f54394757d773d KVM: x86/mmu: handle cmpxchg failure in kvm_tdp_mmu_get_root
c0e64238ac53e8226e3fe72279e5e76253e85f88 KVM: x86/mmu: Protect the tdp_mmu_roots list with RCU
a3ba26ecfb569f4aa3f867e80c02aa65f20aadad KVM: SVM: Make sure GHCB is mapped before updating
17e5e964eee05a3ee434cf0958ecce741a6874b1 KVM: SVM: Don't set current_vmcb->cpu when switching vmcb
d1788191fdb03691059ab7aeed36206977f2d784 KVM: SVM: Drop vcpu_svm.vmcb_pa
44f1b5586df03b044704f3c57f529ea4120f406b KVM: SVM: Enhance and clean up the vmcb tracking comment in pre_svm_run()
47903dc10e7ebb876c9a0f0522cc07a71c10273f KVM: SVM: Define actual size of IOPM and MSRPM tables
ee695f22b54a4b79753fdaa78cbbff1064050d13 nSVM: Check addresses of MSR and IO permission maps
d3d1af85e2c75bb57da51535a6e182c7c45eceb0 KVM: SVM: Add KVM_SEND_UPDATE_DATA command
fddecf6a237ee464db7a1771fad6507d8c180c03 KVM: SVM: Add KVM_SEV_SEND_FINISH command
5569e2e7a650dfffd4df7635662b2f92162d6501 KVM: SVM: Add support for KVM_SEV_SEND_CANCEL command
af43cbbf954b50ca97d5e7bb56c2edc6ffd209ef KVM: SVM: Add support for KVM_SEV_RECEIVE_START command
15fb7de1a7f5af0d5910ca4352b26f887543e26e KVM: SVM: Add KVM_SEV_RECEIVE_UPDATE_DATA command
6a443def87d2698f4fa2d7b57e7f4e5f0f61671a KVM: SVM: Add KVM_SEV_RECEIVE_FINISH command
238eca821cee90e91139da84ef4f38c74d7cf0d9 KVM: SVM: Allocate SEV command structures on local stack
9c1a07442c95f6e64dc8de099e9f35ea73db7852 KVM: x86/xen: Take srcu lock when accessing kvm_memslots()
3f1266f1f82d7b8c72472a8921e80aa3e611fb62 block: move block-related definitions out of fs.h
c5638ab417660e2c5d681aed5ce76df992982dbb block: simplify the restart case in __blkdev_get
ecbe6bc0003bfd5bf8581cb679cae0eb944432cb block: use bd_prepare_to_claim directly in the loop driver
5b642d8b9f2ef1212f33dfc337816e6b4ab83bb3 block: integrate bd_start_claiming into __blkdev_get
611bee526b4a89d49f1b9914a770bfdc101d5fb5 block: replace bd_set_size with bd_set_nr_sectors
c2b4bb8cb3741c0bacf3683e4c1ecd04c977ada3 block: fix locking for struct block_device size updates
c13f0fbc4c191aab5e95b01589ff5bbc6556e4f6 nvme: don't call revalidate_disk from nvme_set_queue_dying
8e756373d7c8eb6f8876411bed45e4b1c736eb53 block: Move bio merge related functions into blk-merge.c
bdc6a287bc98e8f32bf52c9cb2d1bdf75975f5a0 block: Move blk_mq_bio_list_merge() into blk-merge.c
e5c7fb400227df5c7822a3c59b193d23e849d0ac block: move the devcgroup_inode_permission call to blkdev_get
8328eb28369a7dbfab6ff26366dbe8094425acc4 block: remove the disk argument to delete_partition
6540fbf6b634071950f01ee4e4194e2ea8ca72d1 block: don't clear bd_invalidated in check_disk_size_change
f4ad06f2bb8476548b08f89919ee65abc4e40212 block: rename bd_invalidated
659e56ba864d37b7ee0a49cd432205b2a5ca815e block: add a new revalidate_disk_size helper
b8086d3f5a0e88b1912d55a158b8a6a43ad6604b block: use revalidate_disk_size in set_capacity_revalidate_and_notify
b55d3d21a05d5558440515c1a73d87bc4b1fa17c nvme: opencode revalidate_disk in nvme_validate_ns
32f61d67570db036dba9e4fb2509b5343e28f627 nvdimm: simplify revalidate_disk handling
de09077c89183cbc627d9393706343662da7f5a3 block: remove revalidate_disk()
384d87ef2c954fc58e6c5fd8253e4a1984f5fe02 block: Do not discard buffers under a mounted filesystem
95f6f3a46fc4ee1a2b216a6b46bdf2b450f1877f block: add a bdev_check_media_change helper
afd35c4f573d7eb1df9dbb7e0af0f4d93bd01f31 sr: use bdev_check_media_change
38a2b557e23874dd5ed3c767d57d28b2d10b7683 sr: simplify sr_block_revalidate_disk
b92b53079aedbfb56bbb9ea360e5119fb563a2a1 block: remove check_disk_change
38430f0876fa8b9549ec434f569dce03e057c076 block: move the NEED_PART_SCAN flag to struct gendisk
55b2598e84e97efc5d952958cb5e34236c43276b bdi: initialize ->ra_pages and ->io_pages in bdi_init
c2e4cd57cfa1f627b786c764d185fff85fd12be9 block: lift setting the readahead size into the block layer
ed7b6b4f6e915cb0bc52d0000bcc63168867b6ac bdi: remove BDI_CAP_CGROUP_WRITEBACK
fa01b1e9733fd59ecb8b5b6d85dfb481d2025fbf block: add a bdev_is_partition helper
8a63a86e1f933dc7f114497408c50c58a633b8bc block: use bd_partno in bdevname
118cf084adb3964d06e1667cf7d702e56e5cd2c5 md: implement ->set_read_only to hook into BLKROSET processing
2c1b6ec170423bb032e825d4d9b2780bac4ce1a9 dasd: implement ->set_read_only to hook into BLKROSET processing
7a2f0ce19f2e2ed93b5ace60375b908392ec8afb loop: use set_disk_ro
a160c6159d4a0cf82f28bc1658a958e278ec3688 block: add an optional probe callback to major_names
e418de3abcda8b102f737919e830024d1455938f block: switch gendisk lookup to a simple xarray
99473d9db93a3bf557161373a1eb33d2873edd2e block: remove the call to __invalidate_device in check_disk_size_change
3b4f85d02a4bd85cbea999a064235a47694bbb7b loop: let set_capacity_revalidate_and_notify update the bdev size
ee4bf648635055d2b76afadaf34236c8b2d852a7 nbd: remove the call to set_blocksize
92f93c3a1bf9dc73181dc6566497d16b690cb576 nbd: move the task_recv check into nbd_size_update
2dc691cc4ac259f8b5bb0bd8670645af894d30eb nbd: refactor size updates
dcbddf541f18e367ac9cdad8e223d382cd303161 nbd: validate the block size in nbd_set_size
8a6f7bbf29d1d61d3ff18f0a0feead9f287c9b14 aoe: don't call set_capacity from irq context
94d91e7f8c221260790a482373d347ea85efb7b3 md: remove a spurious call to revalidate_disk_size in update_size
ddff331a14eb7d5af08e63579ba28c289db26e20 virtio-blk: remove a spurious call to revalidate_disk_size
8d65269fe8065fee889bca5b204d711b0695a8f6 block: add a bdev_kobj helper
612c6aa7817f1c89b6a92fc724331aa7c9d77f6e block: change the hash used for looking up block devices
5b56b6ed574b583b07da9d824c1eca6d67c1074e block: refactor blkdev_get
63d9932caecee8b0a295c608d083280b45885d10 block: move bdput() to the callers of __blkdev_get
7918f0f6fdafa1e52c2d77c537cb55ef25fb69a3 block: opencode devcgroup_inode_permission
cc29e1bf0d63f728a5bd60ef22638bbf77369552 block: disable iopoll for split bio
8dc932d3e8afb65e12eba7495f046c83884c49bf Revert "block: simplify set_init_blocksize" to regain lost performance
6f0d9689b670bc9f9640ff87b3f9226b7806dea2 block: remove the NULL bdev check in bdev_read_only
52f019d43c229afd65dc11c8c1b05b6436bf6765 block: add a hard-readonly flag to struct gendisk
947139bf3cce097739380c9782a35de504f24203 block: propagate BLKROSET on the whole device to all partitions
49d1ec8573f74ff1e23df1d5092211de46baa236 block: manage bio slab cache by xarray
9f180e315a93cde559ac1c9c4c5ce980aa681c1c block: don't allocate inline bvecs if this bioset needn't bvecs
56887cffe946bb0a90c74429fa94d6110a73119d block: Try to handle busy underlying device on discard
a789241e49b6adce84cdba7a24c92ecc845aface scsi: lpfc: Fix NMI crash during rmmod due to circular hbalock dependency
7de3697e9cbd4bd3d62bafa249d57990e1b8f294 Add auxiliary bus support
7bbb79ff5f7499e0c5d65987458410e8099207d8 driver core: auxiliary bus: move slab.h from include file
8142a46c50d2dd8160c42284e1044eed3bec0d18 driver core: auxiliary bus: make remove function return void
0d2bf11a6b3e275a526b8d42d8d4a3a6067cf953 driver core: auxiliary bus: minor coding style tweaks
784b2c48ac12dcee27db001fb1a3c58c39380cb6 driver core: auxiliary bus: Fix auxiliary bus shutdown null auxdrv ptr
471b12c43f376d5203dbff0e91316eea11f6f4df driver core: auxiliary bus: Fix calling stage for auxiliary bus init
50db1bca55208d7f0528a1fa0619ce5d406a8d40 ice: add support for flash update overwrite mask
b44cfd4f5b912454387a4bf735d42eb4e7078ca8 devlink: move request_firmware out of driver
52cc5f3a166a33012ebca2cdefebf4c689110068 devlink: move flash end and begin to core devlink
f49735f4978f479b0de4f50ab217d5a56bc83c55 cpuidle: record state entry rejection statistics
7a25759eaa04b8c0ecb3db134922d6641ab2e6d1 cpuidle: Select polling interval based on a c-state with a longer target residency
0cbf260820fa780a336e4a08cce1f81cd66a7ac1 bus: mhi: core: Add support for registering MHI controllers
e755cadb0171ce78b29b89fe8bdd0179121a7827 bus: mhi: core: Add support for registering MHI client drivers
da1c4f85692476ab038e3279209f07b8f4b7641e bus: mhi: core: Add support for creating and destroying MHI devices
6cd330ae76ffd5c8f6294c423cabde7eeef1b40c bus: mhi: core: Add support for ringing channel/event ring doorbells
a6e2e3522f29141b95c1ef8580c665a3582b3e66 bus: mhi: core: Add support for PM state transitions
3000f85b8f47b2c860add5cce4c201c83bde6468 bus: mhi: core: Add support for basic PM operations
cd457afb16670501f00354eb0e705a7d8a50d79d bus: mhi: core: Add support for downloading firmware over BHIe
6fdfdd27328ceef39f4b8daec3510874ad68e753 bus: mhi: core: Add support for downloading RDDM image during panic
1d3173a3bae7039b765a0956e3e4bf846dbaacb8 bus: mhi: core: Add support for processing events from client device
189ff97cca53e3fe2d8b38d64105040ce17fc62d bus: mhi: core: Add support for data transfer
e6b0de469c5babfe29a86be289408ba2070ea44a bus: mhi: core: Add uevent support for module autoloading
3baf89abca196f6dcb7038fd5342fd6e82f3260c bus/mhi: fix printk format for size_t
821747386cb6cd75593a8854208b8af188b4caed bus: mhi: core: Pass module owner during client driver registration
3316ab2b45f6bf4797d8d65b22fda3cc13318890 bus: mhi: core: Add support for reading MHI info from device
93e17a44347acd747a76d63dd9339e48c2c9e308 bus: mhi: core: Initialize bhie field in mhi_cntrl for RDDM capture
3eb583a6d0aee952715d34f2bbf58db52c5e7c5e bus: mhi: core: Drop the references to mhi_dev in mhi_destroy_device()
0c6b20a1d720ad1d43a2aca0ffa1af07c201b55d bus: mhi: core: Add support for MHI suspend and resume
522587e7c008c24f19ef5ef34806268992c5e5a6 bus: mhi: core: Fix a NULL vs IS_ERR check in mhi_create_devices()
115f32512f13c0280161908e9de45a97a87673bb bus: mhi: Fix parsing of mhi_flags
ce312258084ea0c828e11c831c7b9e8b42b02ef8 bus: mhi: core: Make sure to powerdown if mhi_sync_power_up fails
85a087df4a719ebab940efa3c79625e68161f57b bus: mhi: core: Remove link_status() callback
45723a44845c90c8e859fd0e2b0bb492322b5d0b bus: mhi: core: Offload register accesses to the controller
af2e58818082ac0db29539444ca17eb1e77f6000 bus: mhi: core: Fix typo in comment
f0e1d3ac2d7c16a5d2c9d67f5a61133db7681af8 bus: mhi: core: Fix channel device name conflict
1ea34b2988554af8a83a44a0a8e5aaa9e5a60c64 bus: mhi: core: Fix some error return code
cd116318803f5ee222301f3525578241a04822ee bus: mhi: core: Refactor mhi queue APIs
44d4e063d18b87c0fef1b19f7883f10e71c544b6 bus: mhi: core: Cache intmod from mhi event to mhi channel
020960685041fc09ab6a23cf244477cdcbb75c5f bus: mhi: core: Add range check for channel id received in event ring
ee75cedf82d832561af8ba8380aeffd00a9eea77 bus: mhi: core: Read transfer length from an event properly
560e3a045961ed0c7184ef9f6a93b95bd38c1c48 bus: mhi: core: Handle firmware load using state worker
a21eaf592fad132cb60173ed494e54c5b9c82c9a bus: mhi: core: Return appropriate error codes for AMSS load failure
0a895f091ebd943555efce3d7b0e96d667208fdc bus: mhi: core: Improve debug logs for loading firmware
0ab9fcd0e7b2b45dd407e145f50fd55091405d3c bus: mhi: core: Ensure non-zero session or sequence ID values are used
bc7ccce5a5192cf277da0aef05e45cd92c81c79a bus: mhi: core: Remove the system error worker thread
3c1bd0047124f506294520341cfe03e19ea773e3 bus: mhi: core: Handle disable transitions in state worker
ada5e1def5da623cbf5709c921fd22cc321cd233 bus: mhi: core: Skip handling BHI irq if MHI reg access is not allowed
30b7892417c50a05bf4a2ad56c2e1355d4d1404a bus: mhi: core: Do not process SYS_ERROR if RDDM is supported
3bc1a5f431618a656bbf674a4627ef4da3a0d893 bus: mhi: core: Handle write lock properly in mhi_pm_m0_transition
e18d4e9fa79bb27de6447c0c172bb1c428a52bb2 bus: mhi: core: Handle syserr during power_up
4d12a897fa1276737724393331d1002962f62940 bus: mhi: fix doubled words and struct image_info kernel-doc
bcbaccdf9fbe4782d57ae5bc88fd215eb2aea09e bus: mhi: core: Remove double occurrence for mhi_ctrl_ev_task() declaration
515847c557dd33167be86cb429fc0674a331bc88 bus: mhi: core: Abort suspends due to outgoing pending packets
8b53087cab61c3b309aaa9babf9a912d4dfd12c2 bus: mhi: core: Use helper API to trigger a non-blocking host resume
870f81bd28f20e1b2290d83db9fe93ea8f52ba63 bus: mhi: core: Trigger host resume if suspended during mhi_device_get()
5aa93f0576b4e7be60ffcccb674470c59789fd1b bus: mhi: core: Use generic name field for an MHI device
a6c1fff8571ae117be7ae2e7abff006924aca9ac bus: mhi: core: Introduce helper function to check device state
601455dae00a853d1d8d6d768b3b79a7d59a5853 bus: mhi: core: Introduce counters to track MHI device state transitions
8e3729bfa7be159d1f94d0caab9c1beff8268672 bus: mhi: core: Read and save device hardware information from BHI
f42dfbe8f712127031e7b9bc938a1c33cec2ff57 bus: mhi: core: Introduce APIs to allocate and free the MHI controller
f38173a731cae380885e843dace21c8dc4198285 bus: mhi: core: Add const qualifier to MHI config information
e1427f32b85010ca0c38104955e234ca89d4cee5 bus: mhi: Remove include of rwlock_types.h
e0af24acdabc3cdb00bb8c8e23f117ae5d8a4ef4 bus: mhi: Fix entries based on Kconfig coding style
c7bd825e52b3d0b9ae519a006b80521d4587f864 bus: mhi: core: Introduce debugfs entries for MHI
21cb9b18edea0c3533799069abc95c9c55c8607d bus: mhi: core: Introduce sysfs entries for MHI
b0fc0167f25401a5dd0325a935e3a20d1da2aa0b bus: mhi: core: Allow shared IRQ for event rings
9654ab011e28ee756d231035c488509dc214fa6f bus: mhi: Remove unused nr_irqs_req variable
5fc4997fd9d065c98fb312ef56ffadffccc6d61d bus: mhi: core: Fix the building of MHI module
9e8c8cc44f35bb4c55f22661702022c92ea796d7 bus: mhi: debugfs: Print channel context read-pointer
d8c4a22363853e196497b06a8ee9be9773873a14 bus: mhi: Add mhi_queue_is_full function
ed5298c7d500abaf34ed7783969e953a1f028e5b bus: mhi: Remove auto-start option
9b627c25e70816a5e1dca940444b5029065b4d60 bus: mhi: core: Remove double locking from mhi_driver_remove()
8ff3f7bdde45b32f9294fc87e4bd76f369178664 bus: mhi: core: fix potential operator-precedence with BHI macros
855a70c12021bdc5df60512f1d3f6d492dc715be bus: mhi: Add MHI PCI support for WWAN modems
f4d0b39c842585c74bce8f8a80553369181b72df bus: mhi: core: Fix null pointer access when parsing MHI configuration
a7f422f2f89e7d48aa66e6488444a4c7f01269d5 bus: mhi: Fix channel close issue on driver remove
56c8ea864018a995c96810c9536d98a879b89218 bus: mhi: core: Remove unnecessary counter from mhi_firmware_copy()
a8ca15a9c73f92703492e8afe25103a34504851b bus: mhi: core: Add missing EXPORT_SYMBOL for mhi_get_mhi_state()
78e1d22687ff1fd320abac12e8a607ea79782c48 bus: mhi: core: Expose mhi_get_exec_env() API for controllers
bca7218099e0796901a9c27366e145d9f485c81a bus: mhi: core: Remove unused mhi_fw_load_worker() declaration
9e1660e5c396ee081907386d0b95b8e0804a6c86 bus: mhi: core: Rename RDDM download function to use proper words
da7bdbf67db232234bb55e083c57b930c2010f95 bus: mhi: core: Skip RDDM download for unknown execution environment
1b55c16a5e4718f58ed58cfdfe37fe4cd4d89f88 bus: mhi: core: Use appropriate names for firmware load functions
8f70397876872789b2a5deba804eb6216fb5deb7 bus: mhi: core: Move to using high priority workqueue
8e0559921f9afc01fe0457c5e136ce4a7ae8f0d3 bus: mhi: core: Skip device wake in error or shutdown states
3fb81a4d5f2f55b1596cb5cffca98c97ca43f07a bus: mhi: core: Move to SYS_ERROR regardless of RDDM capability
0c76b3fa580da8f65333b8774205f0a72ffe844c bus: mhi: core: Prevent sending multiple RDDM entry callbacks
12e050c77be036377fee479dccd479202d8d6853 bus: mhi: core: Move to an error state on any firmware load failure
faa257075bcc35e2c2ee68eb83e4e53d3bb02a90 bus: mhi: core: Use appropriate label in firmware load handler API
dc53d862eab89000ebc87240274943793f0af682 bus: mhi: core: Move to an error state on mission mode failure
40c3127187cb38ed255ba4473e11cd70385c7431 bus: mhi: core: Check for IRQ availability during registration
556bbb442bbb44f429dbaa9f8b48e0b4cda6e088 bus: mhi: core: Separate system error and power down handling
a03c7a86e12721da9f6bb509dddda19fd9ae8c6c bus: mhi: core: Mark and maintain device states early on after power down
6cc1716102b55497dd557e8295a3177315332f9a bus: mhi: core: Remove MHI event ring IRQ handlers when powering down
206e7383b34316cf56cdde96eab9d97e9a1dbd70 bus: mhi: core: Indexed MHI controller name
10ea8bcda5ae5463889e15dfc98aa2a73270ea58 bus: mhi: core: Fix device hierarchy
89828f632dec8ab1e19f23771b313c1942e102c0 bus: mhi: core: Fix error handling in mhi_register_controller()
4ea6fa2cb921cb17812501a27c3761037d64a217 mhi: pci_generic: Fix implicit conversion warning
b5a8d233a588b3acf2a7a3a8da30f8f68f376626 bus: mhi: core: Add device hardware reset support
d9f23ea69d41d9749873381affe3c00bb1857019 mhi: pci-generic: Increase number of hardware events
eb96787a5da8e481e53bf2d87a575283d57130a2 mhi: pci_generic: Enable burst mode for hardware channels
8ccc3279fcad9736b58873b1ad597287ee52757a mhi: pci_generic: Add support for reset
7389337f0a78ea099c47f0af08f64f20c52ab4ba mhi: pci_generic: Add suspend/resume/recovery procedure
b012ee6bfe2ac99bdf7d70b7776187f416c1cab8 mhi: pci_generic: Add PCI error handlers
8562d4fe34a3ef52da077f77985994bb9ad1f83e mhi: pci_generic: Add health-check
84026a5bbc113fb6cef0326ada0e6f5e4d95026c mhi: pci_generic: Increase controller timeout value
4da3d07db8ae325e8e01ad85e28e9e60c58bcc14 mhi: pci_generic: Add diag channels
ec751369d6fbc9f84176e1530b11cbf387262b48 mhi: pci_generic: Set irq moderation value to 1ms for hw channels
f49b6aeb5c45dea3a1b6ee6a842599147dfd5929 bus: mhi: Ensure correct ring update ordering with memory barrier
fcba4b2047a31a55e1cef73849363a3cf7c2736d mhi: unconstify mhi_event_config
b91c3b30e2267265cd7e67cb3d0c99c48c02b001 mhi: pci_generic: Fix shared MSI vector support
6ffcc18d9c0b4522c95aab71ff3ff5a56e699945 mhi: use irq_flags if controller driver configures it
a8f75cb348fd52e7a5cf25991cdf9c89fb0cfd41 mhi: core: Factorize mhi queuing
87baa23e0236bc1c41ce744f524bf12dbe7fde66 bus: mhi: core: Add helper API to return number of free TREs
1e2f29ba83c55b9778bdb60e77216b08dbd69bf5 mhi: pci_generic: Print warning in case of firmware crash
026c5b1ec29cb9904406c7b3090eaf54e345e7f2 bus: mhi: pci_generic: Increase num of elements in hw event ring
db4e8de1935b0202960e9ebb88ab93e8bd1e66b1 mhi: Fix double dma free
6403298c58d4858d93648f553abf0bcbd2dfaca2 bus: mhi: core: Fix check for syserr at power_up
0fccbf0a3b690b162f53b13ed8bc442ea33437dc bus: mhi: pci_generic: Remove WQ_MEM_RECLAIM flag from state workqueue
0ecc1c70dcd32c0f081b173a1a5d89952686f271 bus: mhi: core: Fix invalid error returning in mhi_queue
cabdb4fa2f666fad21b21b04c84709204f60af21 fuse: use true,false for bool variable
6b2fb79963fbed7db3ef850926d913518fd5c62f fuse: optimize writepages search
69a6487ac0ea1bbc8d8b654cb5a4541f2d922f91 fuse: move rb_erase() before tree_insert()
c146024ec44c2946de7c6c45ddd3402abcab17f9 fuse: fix warning in tree_insert() and clean up writepage insertion
c1b0c62715102be326e534ea382e8b1ef87ccb9c fuse: update project homepage
fcee216beb9c15c3e1466bb76575358415687c55 fuse: split fuse_mount off of fuse_conn
1866d779d5d2abae59d304e809600ca3ca8d0071 fuse: Allow fuse_fill_super_common() for submounts
bf109c64040f5b6bfe8a7044667e11d62dff6d91 fuse: implement crossmounts
413daa1a3f4a50af7172a862f391867711e9bc04 fuse: connection remove fix
b19d3d00d662cfb8bfdc809ec90344ec58b0bf31 virtiofs: simplify sb setup
514b5e3ff45e6cfc39cfa7c094727d8e6d885986 fuse: get rid of fuse_mount refcount
bd3bf1e85bac1bd956365a0036a6817c3ffe20fb fuse: simplify get_fuse_conn*()
6a68d1e1514d77d05898780aea4e5ac587616e93 fuse: add fuse_sb_destroy() helper
833c5a42e28beeefa1f9bd476a63fe8050c1e8ca virtiofs: clean up error handling in virtio_fs_get_tree()
5c6e5aa496804451fc94d00a7cf9be2e3051ae29 cifs: move security mount options into fs_context.ch
2f20f076865daed006459b39ba78c2fc23b5c8b4 cifs: move cache mount options to fs_context.ch
555782aa556af869d4f390996607abd356513ba4 cifs: move smb version mount options into fs_context.c
6988a619f5b79e4efadea6e19dcfe75fbcd350b5 cifs: allow syscalls to be restarted in __smb_send_rqst()
eb3e1d370b4c57be1acbb9de51a7deaa036eff4b clocksource/drivers/hyper-v: Handle sched_clock differences inline
ec866be6ec547c9e1cc4451f04250e08b5fe67c7 clocksource/drivers/hyper-v: Move handling of STIMER0 interrupts
a722076e947023a0d6ffca79661324c45ff30641 KVM: PPC: Don't always report hash MMU capability for P9 < DD2.2
6ce56e1ac380eaa088d3f4c01446e15e195bd541 powerpc/pseries: export LPAR security flavor in lparcfg
48f6e7f6d948b56489da027bc3284c709b939d28 powerpc/pseries: remove cede offline state for CPUs
b160c28548bc0a87cbd16d5af6d3edcfd70b8c9a tcp: do not mess with cloned skbs in tcp_add_backlog()
8811f4a9836e31c14ecdf79d9f3cb7c5d463265d tcp: add sanity tests to TCP_QUEUE_SEQ
9c0ec2e7182a508335364c752da0883a2a7f3999 bridge: support binding vlan dev link state to vlan member bridge ports
80900acd3a30ed32d65ec591ded5d527d6ba373f bridge: update vlan dev state when port added to or deleted from vlan
8e1acd4fc552f5590e9d5ff6e5cb5eeafd638d30 bridge: update vlan dev link state for bridge netdev changes
697cd36cda32966bc605bfcf132b0cac4bcd9480 bridge: Fix possible use-after-free when deleting bridge port
091adf9ba6cdb432cbcc217b47e4ffb8aa0d8865 net: bridge: move default pvid init/deinit to NETDEV_REGISTER/UNREGISTER
7979457b1d3a069cd857f5bd69e070e30223dd0c net: bridge: vlan: Add a schedule point during VLAN processing
2c4eca3ef7161f6632959c00c8eae182f4398901 net: bridge: switchdev: include local flag in FDB notifications
68dc022d04eb0fd60a540e242dcb11ec1bee07e2 xfrm: BEET mode doesn't support fragments for inner packets
7e3ce05e7f650371061d0b9eec1e1cf74ed6fca0 netlink: add tracepoint at NL_SET_ERR_MSG
de1da8bcf40564a2adada2d5d5426e05355f66e8 vmxnet3: Remove buf_info from device accessible structures
240e6ee272c07a2636dfc7d65f5bbb18377c49e5 nvme: support for zoned namespaces
d43f1ccfad053dbefba1d15443cdc36ca60958f0 nvme-pci: remove the inline scatterlist optimization
6c3c05b087ada8947cd31895f67e433070446234 nvme-core: replace ctrl page size with a macro
b2702aaaa45c2d1028bc8c51b49106041be7aae5 nvme: lift the file open code from nvme_ctrl_get_by_path
936fab503ff4af94f5f9c0b549f3ab4d435500ec nvme: fix error handling in nvme_ns_report_zones
7fad20dd7c0ab1d2c224755a574576be25f13e03 nvme: fix initialization of the zone bitmaps
2124f096fb4521d8efdf2412e9102d475ff5cd36 nvme: rename _nvme_revalidate_disk
81382f1730d24a60e2b0499592e64e6e640b1871 nvme: rename __nvme_revalidate_disk
d525c3c023221619748d1e758e5a26daa775f822 nvme: remove the disk argument to nvme_update_zone_info
d4609ea8b3d3fb3423f35805843a82774cb4ef2f nvme: factor out a nvme_configure_metadata helper
f9d5f4579feafa721dba2f350fc064a1852c6f8c nvme: freeze the queue over ->lba_shift updates
310b30e575b1e2b9a569c3582062b79c5a562fb7 nvme: remove the 0 lba_shift check in nvme_update_ns_info
658d9f7c2c7044f9978623e7f429b85bbb7553a3 nvme: set the queue limits in nvme_update_ns_info
3a9967ba7ace91153f9caa8e60a55c7668c7b946 nvme: revalidate zone bitmaps in nvme_update_ns_info
8b7c0ff2d46dad4974e84f2363d7e0ddefaf0677 nvme: query namespace identifiers before adding the namespace
af0f446d2cad06bd678e9b912f7653b63d87fd6b nvme: remove nvme_update_formats
b2dc748a70c65a1b4eb1b9fceab57662cfd83e41 nvme: move nvme_validate_ns
0a05226a3a2038b28d78101239196222d375124a nvme: refactor nvme_validate_ns
7b15336257ed5623cddefa8d33069777494c98e0 nvme: remove nvme_identify_ns_list
af5d6f7ba5f99f8316473557240ae9acdd20a6bd nvme-core: remove extra variable
c4485252cf36ae62c8bf12c4aede72345cad0d2b nvme-core: remove extra condition for vwc
3b481d91356e5693d8358d4ef9c383bdb92c8da0 block: add zone specific block statuses
8685699c28d7452ff06d62b4692df985eb7301f0 nvme: ignore zone validate errors on subsequent scans
65c5a055b0d567b7e7639d942c0605da9cc54c5e nvme: fix incorrect behavior when BLKROSET is called by the user
8ecfca68dc4cbee1272a0161e3f2fb9387dc6930 RDMA: Lift ibdev_to_node from rds to common code
5dd55749b79cdf471ca0966ad91541daebac3e2f nvme: let set_capacity_revalidate_and_notify update the bdev size
f781f3dd6a165d860c29eeb092af8584284e50f3 nvme: print a warning for when listing active namespaces fails
2f4c9ba23b887e7a69a474e9d53f38b5833a2119 nvme: export zoned namespaces without Zone Append support read-only
e1aaf5cacba9d994d825a87a33bdd33343477f16 nvme: remove unnecessary return values
2b59787a223b79228fed9ade1bf6936194ddb8cd nvme: remove the unused status argument from nvme_trace_bio_complete
d11cd28998e9d25389d8c20e7cce0e4b4f17bee1 nvme: allow revalidate to set a namespace read-only
36ca03c830e41769c62d2ca15be8351059f86c45 nvmet: Fix nvmet_is_port_enabled indentation
624e67fdf9a657fe437d84dd9f28b35e594183dd nvmet: remove extra variable in smart log nsid
73d90386b559d6f4c3c5db5e6bb1b68aae8fd3e7 nvme: cleanup zone information initialization
3a1f7c79ae6d3dfdc16082daa44b3cf8dbe4f238 nvmet: make nvmet_find_namespace() req based
73a1a2298f3e9df24cea7a9aab412ba9470f6159 nvme-multipath: set nr_zones for zoned namespaces
20c2c3bb83f26c42bf62cc773f96f30848ed11a2 nvmet: add nvmet_req_subsys() helper
4bdf260362b3be529d170b04662638fd6dc52241 nvme: add 48-bit DMA address quirk for Amazon NVMe controllers
e6ad55988b968bd4c54fd182d0bd3d7fcb969779 nvme: set max_zone_append_sectors nvme_revalidate_zones
d95c1f4179a7f3ea8aa728ed00252a8ed0f8158f nvme: simplify error logic in nvme_validate_ns()
0ec84df4953bd42c6583a555773f1d4996a061eb nvme-core: check ctrl css before setting up zns
f4f9fc29e56b6fa9d7fa65ec51d3c82aff99c99b nvme: fix the nsid value to print in nvme_validate_or_alloc_ns
ca0800a68ac7c7d75a2f93c30bc3f291450595b4 scsi: sd_zbc: Remove unused inline functions
a3d8a2573687bc8955986e4e011ebfe19cc71054 scsi: sd_zbc: Improve zone revalidation
27ba3e8ff3ab86449e63d38a8d623053591e65fa scsi: sd: sd_zbc: Fix handling of host-aware ZBC disks
0610959fbbca62b534f1f276873fd297f76b164b scsi: sd: Allow user to configure command retries
3a8dc5bbc8c04db2646ed0842118b0f66659a3db scsi: core: Remove scsi_init_cmd_errh
78e1663f19b5c34579cf186e776df3bf1ed326a5 sd_zbc: clear zone resources for non-zoned case
9acced3f58ad24407c1f9ebf53a8892c1e24cdb5 scsi: sd: sd_zbc: Don't pass GFP_NOIO to kvcalloc
f5d1499ae2096d7ea301023c4cc54e427300eb0a PM: hibernate: x86: Use crc32 instead of md5 for hibernation e820 integrity check
923b3cf00b3ffc896543bac99affc0fa8553e41a powerpc/mce: Remove per cpu variables from MCE handlers
fc1347b5feb685073ce2108c68cd8147340be016 ocxl: Assign a register set to a Logical Partition
19b311ca51e108b6d8d679496af8635fdc1984a8 ocxl: Initiate a TLB invalidate command
df820f8de4e481222b17f9bcee7b909ae8167529 ovl: make private mounts longterm
3078d85c9a1099405a0463c4d112ba97ee5bd217 vfs: verify source area in vfs_dedupe_file_range_one()
ee85da535fe30e02908d30ec6b8960c4a991cb2d devlink: have genetlink code to parse the attrs during dumpit
8ee2267ad33e0ba021e9dd9b437f773906cd99d6 drop_monitor: Convert to using devlink tracepoint
93e155967ccc053b71d408edf8c0142199df5c8c drop_monitor: Filter control packets in drop monitor
b7cc6d3c5c9151a0475d643e212279e82531e527 selftests: net: Add drop monitor test
9398e9c0b1d44eeb700e9e766c02bcc765c82570 drop_monitor: Perform cleanup upon probe registration failure
2622aa718a6a774ba302ca002adc62eeab9cdf28 RDMA/rxe: Make pool lookup and alloc APIs type safe
3853c35e243d56238159e8365b6aca410bdd4576 RDMA/rxe: Add unlocked versions of pool APIs
c4369575b2bc2993edf8223a8f5c9f510ee629d0 RDMA/rxe: Fix bug in rxe_alloc()
88cc77eb8bd05fd185a7d142dedc6e406c5c35b6 RDMA/rxe: Fix misleading comments and names
4276fd0dddc98ee7d6c1a469b3f35b8ab51ddc2f RDMA/rxe: Remove RXE_POOL_ATOMIC
6cde3e8ec16f8318bab119ad1e16dd90677bc897 RDMA/rxe: Remove references to ib_device and pool
eae5f0642e2f6a07a73f3fd60ecfeae9b4b32d5c RDMA/rxe: Remove unneeded pool->state
ce2063e3872b849421c6135881b1a6fb16d9eab7 RDMA/rxe: Replace missing rxe_pool_get_index_locked
7416790e22452bfa86de6b55638eacf7780c8f6f RDMA/core: Introduce and use API to read port immutable data
168e4cd94983091a4a0c9b9de285ee15e3aa581c RDMA/core: Fix kernel doc warnings for ib_port_immutable_read()
899aba891cab1555c9ca16a558769efb177baf44 RDMA/rxe: Fix FIXME in rxe_udp_encap_recv()
5e4a7ccc965d951b0885875e903a32c6d4368573 RDMA/rxe: Fix extra deref in rxe_rcv_mcast_pkt()
545c4ab463c2224557e56b2609f88ed5be265405 RDMA/rxe: Fix errant WARN_ONCE in rxe_completer()
303a42769c4c4d8e5e3ad928df87eb36f8c1fa60 sysfs: add sysfs_group{s}_change_owner()
2c4f9401ceb00167a3bfd322a28aa87b646a253f sysfs: add sysfs_change_owner()
8511d72f14bc7b94a96bb2990615e1cd7c1dd21e sysfs: fix static inline declaration of sysfs_groups_change_owner()
47e29d32afba11b13efb51f03154a8cf22fb4360 mm/gup: page->hpage_pinned_refcount: exact pin counts for huge pages
1970dc6f5226416957ad0cc70ab47386ed3195a6 mm/gup: /proc/vmstat: pin_user_pages (FOLL_PIN) reporting
be87141108f0f5ecbd094d921981dbc52f646c33 selftests/vm: run_vmtests: invoke gup_benchmark with basic FOLL_PIN coverage
df3a0a21b698d68ba046d5ed185a4990b06d19a8 mm/gup: fix omission of check on FOLL_LONGTERM in gup fast path
1da2f328fa643bd72197dfed0c655148af31e4eb mm,thp,compaction,cma: allow THP migration for CMA allocations
b43a9990055958e70347c56f90ea2ae32c67334c hugetlbfs: use i_mmap_rwsem for more pmd sharing synchronization
87bf91d39bb52b688fb411d668fbe7df278b29ae hugetlbfs: Use i_mmap_rwsem to address page fault/truncate race
d08b9f0ca6605e13dcb48f04e55a30545b3c71eb scs: Add support for Clang's Shadow Call Stack (SCS)
628d06a48f57c36abdc2a024930212e654a501b7 scs: Add page accounting for shadow call stack allocations
5bbaf9d1fcb9be696ee9a61636ab6803556c70f2 scs: Add support for stack usage debugging
bee348fab099b0f551caa874663e82a7f3bb64b3 scs: Move accounting into alloc/free functions
333ed74689b8fca097574124fef7fa0e3d7f79d4 scs: Report SCS usage in bytes rather than number of entries
97a225e69a1f880886f33d2e65a7ace13f152caa mm/page_alloc: integrate classzone_idx and high_zoneidx
1139d336fff425f9a20374945cdd28eb44d09fa8 mm/hugetlb.c: fix pages per hugetlb calculation
991e7673859ed41e7ba83c8c4e57afe8cfebe314 mm: memcontrol: account kernel stack per node
34ae204f18519f0920bd50a644abd6fefc8dbfcf hugetlbfs: remove call to huge_pte_alloc without i_mmap_rwsem
d92bbc2719bd2be237ee336113b63492a6baca3b mm/hugetlb: unify migration callbacks
19fc7bed252c16ace29491e4cfa2bafb264eb505 mm/migrate: introduce a standard migration target allocation function
a097631160c3b71a12db224ece7d72208c9b6846 mm/mempolicy: use a standard migration target allocation callback
8b94e0b8be360cf5460331e56a2678ba265f0694 mm/page_alloc: remove a wrapper for alloc_migration_target()
41b4dc14ee807cb1bd15e67cad287534046f92dc mm/gup: restrict CMA region by using allocation scope API
bbe88753bd42b1faf1458dde8f58ff1239990436 mm/hugetlb: make hugetlb migration callback CMA aware
ed03d924587e7dfc54f1ace81e5f5a497a7d9666 mm/gup: use a standard migration target allocation callback
2efc459d06f1630001e3984854848a5647086232 sysfs: Add sysfs_emit and sysfs_emit_at to format sysfs output
aa838896d87af561a33ecefea1caa4c15a68bc47 drivers core: Use sysfs_emit and sysfs_emit_at for show(device *...) functions
973c39115cb308b6b1fe64b4f342996f3eef06d0 drivers core: Remove strcat uses around sysfs_emit and neaten
27275d301813d1f3b1b2fe5576d4afd690df6b99 drivers core: Reindent a couple uses around sysfs_emit
948b3edba8988306b635578a72b0dab6091a5eb0 drivers core: Miscellaneous changes for sysfs_emit
7981593bf083801035b1f1377661849805acb216 mm: and drivers core: Convert hugetlb_report_node_meminfo to sysfs_emit
f56753ac2a90810726334df04d735e9f8f5a32d9 bdi: replace BDI_CAP_NO_{WRITEBACK,ACCT_DIRTY} with a single flag
cc2828b21c764f901128ca2e7b9f056d0e72104f mm: remove activate_page() from unuse_pte()
5f9a4f4a709608fc15197368464a6c8ed4e3630a mm: memcontrol: add the missing numa_stat interface for cgroup v2
b2b29d6d01194404dfef4eafa026959be301705b mm: account PMD tables like PTE tables
8cce54756806e5777069c46011c5f54f9feac717 mm/huge_memory: fix split assumption of page size
ed0173733dd468883198c3136284394320b8fad6 mm: use self-explanatory macros rather than "2"
b87d8cefe43c7f22e8aa13919c1dfa2b4b4b4e01 mm, memcg: rework remote charging API to support nesting
37d5985c003daab138a72dd4af9853b396d91c26 mm: kmem: prepare remote memcg charging infra for interrupt contexts
4127c6504f25c4fcff52dc996efda2ef859dd661 mm: kmem: enable kernel memcg accounting from interrupt contexts
336bf30eb76580b579dc711ded5d599d905c0217 hugetlbfs: fix anon huge page migration race
bcfe06bf2622f7c4899468e427683aec49070687 mm: memcontrol: Use helpers to read page's memcg data
270c6a71460e12b07b1dcadf7457ff95b6c6e8f4 mm: memcontrol/slab: Use helpers to access slab page's memcg_data
87944e2992bd28098c6806086a1e96bb4d0e502b mm: Introduce page memcg flags
18b2db3b0385226b71cb3288474fa5a6e4a45474 mm: Convert page kmemcg type to a page memcg flag
4509b42c38963f495b49aa50209c34337286ecbe mm/gup: combine put_compound_head() and unpin_user_page()
b8eddff8886b173b0a0f21a3bb1a594cc6d974d1 mm: memcontrol: add file_thp, shmem_thp to memory.stat
1a984c4e8200e0e58bb316f14a4bebb28d32d15a mm: memcontrol: remove unused mod_memcg_obj_state()
013339df116c2ee0d796dd8bfb8f293a2030c063 mm/rmap: always do TTU_IGNORE_ACCESS
bef8620cd8e0a117c1a0719604052e424eb418f9 mm: memcg: deprecate the non-hierarchical mode
184218639a6f2a1cb84cf3ba583cee93a3ff4b81 docs: cgroup-v1: reflect the deprecation of the non-hierarchical mode
9d9d341df4d519d96e7927941d91f5785c5cea07 cgroup: remove obsoleted broken_hierarchy and warned_broken_hierarchy
fe6960cb387ff644ec9a1d19e7179e1a29df885e mm: memcg: remove obsolete memcg_has_children()
da3ceeff923e3bc750a8423c840462760c463926 mm: memcg/slab: rename *_lruvec_slab_state to *_lruvec_kmem_state
c47d5032ed3002311a4188eae51f4641ec436beb mm: move lruvec stats update functions to vmstat.h
f0c0c115fb81940f4dba0644ac2a8a43b39c83f3 mm: memcontrol: account pagetables per node
2b47a24cee0eedbb9b106ef3e992db0ddf48f740 mm/vmscan: drop unneeded assignment in kswapd()
88dcb9a3fb48c67ec345f1cdbc2a26119d3cb57d mm/thp: move lru_add_page_tail() to huge_memory.c
94866635372d37ab6b849942900eb98674a94f04 mm/thp: use head for head page in lru_add_page_tail()
6dbb57412c62a8537663dc786e27faa0e084ddce mm/thp: simplify lru_add_page_tail()
b6769834aac1d467fa1c71277d15688efcbb4d76 mm/thp: narrow lru locking
c7c7b80c39a18d99a0a34534ed8b82e020da6131 mm/swap.c: fold vm event PGROTATED into pagevec_move_tail_fn
9df41314390b81a541ca6e84c8340bad0959e4b5 mm/compaction: do page isolation first in compaction
fc574c23558c63799dd99a9bb1d62e33708abaf5 mm/swap.c: serialize memcg changes in pagevec_lru_move_fn
6168d0da2b479ce25a4647de194045de1bdd1f1d mm/lru: replace pgdat lru_lock with lruvec lock
2a5e4e340b0fe0f8d402196a466887db6a270b9b mm/lru: introduce relock_page_lruvec()
15b447361794271f4d03c04d82276a841fe06328 mm/lru: revise the comments of lru_lock
a4055888629bc0467d12d912cd7c90acdf3d9b12 mm/memcg: warning on !memcg after readahead page charged
bec78efd0061365a76f88e498affd7106b256823 mm/memcg: remove unused definitions
9a1ac2288cf16f9406ca54ef221bfcf262393b15 mm/memcontrol:rewrite mem_cgroup_page_lruvec()
1f3147b49d75b47b6be54a1e6dfa87a4921e1e51 mm: slub: call account_slab_page() after slab page initialization
7ea510b92c7c9b4eb5ff72e6b4bbad4b0407a914 mm/memcontrol: fix warning in mem_cgroup_page_lruvec()
8a8792f600abacd7e1b9bb667759dca1c153f64c mm: memcg: fix memcg file_dirty numa stat
5c447d274f3746fbed6e695e7b9a2d7bd8b31b71 mm: fix numa stats for thp migration
2e9bd483159939ed2c0704b914294653c8341d25 mm: memcg/slab: pre-allocate obj_cgroups for slab caches with SLAB_ACCOUNT
f3344adf38bdb3107d40483dd9501215ad40edce mm: memcontrol: optimize per-lruvec stats counter memory usage
69473e5de87389be6c0fa4a5d574a50c8f904fb3 mm: memcontrol: convert NR_ANON_THPS account to pages
bf9ecead53c89d3d2cf60acbc460174ebbcf0027 mm: memcontrol: convert NR_FILE_THPS account to pages
57b2847d3c1dc154923578efb47a12302a57d700 mm: memcontrol: convert NR_SHMEM_THPS account to pages
a1528e21f8915e16252cda1137fe29672c918361 mm: memcontrol: convert NR_SHMEM_PMDMAPPED account to pages
380780e71895ae301505ffcec8f954ab3666a4c7 mm: memcontrol: convert NR_FILE_PMDMAPPED account to pages
fff66b79a19c9b3f2aa02b0a32fe598977c89eea mm: memcontrol: make the slab calculation consistent
d7e3aba583e6d13a81932597c5ee8da3c8b6af04 mm/memcg: revise the using condition of lock_page_lruvec function series
f9b1038ebccad354256cf84749cbc321b5347497 mm/memcg: remove rcu locking for lock_page_lruvec function series
b6038942480e574c697ea1a80019bbe586c1d654 mm: memcg: add swapcache stat for memcg v2
6eeb104e114cb6b7391c2d69ff873403858c1f35 fs: buffer: use raw page_memcg() on locked page
1685bde6b9af55923180a76152036c7fb7176db0 mm: memcontrol: fix get_active_memcg return value
be6c8982e4ab9a41907555f601b711a7e2a17d4c mm/memcg: rename mem_cgroup_split_huge_fixup to split_page_memcg and add nr_pages argument
f29dfa53cc8ae6ad93bae619bcc0bf45cab344f7 x86/bugs/multihit: Fix mitigation reporting when VMX is not in use
91f3469a43fd1fb831649c2a2e684bf5ad4818b2 powerpc/perf: Include PMCs as part of per-cpu cpuhw_events struct
e79b76e03b712e42c58d9649c92571e346abc38b powerpc/perf: Expose Performance Monitor Counter SPR's as part of extended regs
f7b6732178e79ffb388aa343a7d0f63429d06204 mfd: intel-lpss: Add Intel Alder Lake PCH-P PCI IDs
dd8166212d9a2eca3181567c953d5687aea4d7dc selinux: add tracepoint on audited events
30969bc8e0751a5e5d44896c0632bc688abfa86f selinux: add basic filtering for audit trace events
e8ba53d0023a76ba0f50e6ee3e6288c5442f9d33 selinux: access policycaps with READ_ONCE/WRITE_ONCE
f77bd544a6bbe69aa50d9ed09f13494cf36ff806 net/sched: act_ct: fix wild memory access when clearing fragments
065aa694a76e213d5774eeb70a9c11b8cf0dfdb7 i40e: use minimal Tx and Rx pairs for kdump
5562f35d7feabfd68cd58a1ee28b451f90e82417 resource: Introduce resource_union() for overlapping resources
01bb86b380a306bd937c96da36f66429f3362137 driver core: Add fwnode_init()
9806731db684a475ade1e95d166089b9edbd9da3 resource: Add irqresource_disabled()
6ee70e8c34e37a34f4dc2c8bc06febffd375fac4 opp: of: Allow empty opp-table with opp-shared
d57b78353a99f5d813248954dd7d0527a01751ac powerpc/spinlocks: Refactor SHARED_PROCESSOR
31391ff7ea1ef557a804475436501f33ff0ead95 powerpc/spinlocks: Rename SPLPAR-only spinlocks
405efc5980f2590a9520dc66cfe295456b8c9818 powerpc/spinlocks: Fix oops in __spin_yield() on bare metal
20d444d06f97504d165b08558678b4737dcefb02 powerpc/pseries: Move some PAPR paravirt functions to their own file
ca3f969dcb111d35674b66bdcb72beb2c426b9b5 powerpc/paravirt: Use is_kvm_guest() in vcpu_is_preempted()
51eac7f2f06b5f60d22dfb06c48d98a227507b8e sctp: do asoc update earlier in sctp_sf_do_dupcook_b
f0af22101d9072c6488b8d20d6e33338669029fe NFSD: Call NFSv2 encoders on error returns
14168d678a0fa0645609417ad9c384a7c6f895fd NFSD: Remove the RETURN_STATUS() macro
cc028a10a48c3c555d7772d02f56eea9f86fdf79 NFSD: Hoist status code encoding into XDR encoder functions
c09f56b8f68d4d536bff518227aea323b835b2ce net/sunrpc: Fix return value for sysctl sunrpc.transports
66d60e3ad1e44d42d940767f62bf265f107fb628 NFSD: MKNOD should return NFSERR_BADTYPE instead of NFSERR_INVAL
ae2975046dbc65855c217fe6fbd5b33140c5ff18 net/sunrpc: fix useless comparison in proc_do_xprt()
d1f044103dad70c1cec0a8f3abdf00834fec8b98 certs: Add ability to preload revocation certs
bd63141d585bef14f4caf111f6d0e27fe2300ec6 blk-mq: clear stale request in tags->rq[] before freeing one request pool
0ebba7141eadc4804ec5b4bb5106331b0c3abf4c build, kcsan: Add KCSAN build exceptions
40d04110f87940b6a03bf0aa19cd29e84f465f20 x86, kcsan: Enable KCSAN for x86
5cbaefe9743bf14c9d3106db0cc19f8cb0a3ca22 kcsan: Improve various small stylistic details
5c361425744d1e3b03d835dde659708683ca27d1 kcsan: Prefer __always_inline for fast-path
47144eca282189afcf34ef25aee8408c168765d4 kcsan: Show full access type in report
05f9a4067964e3f864210271a6299f13d2eeea55 kcsan: Rate-limit reporting per data races
ad4f8eeca8eaa24afb6059c241a2f4baf86378f3 kcsan: Address missing case with KCSAN_REPORT_VALUE_CHANGE_ONLY
7ad900d35b49af5a05f595d2274c32e69e01b055 kcsan: Add docbook header for data_race()
1e6ee2f0fe8ae682757960edf455e99f611268a0 kcsan: Add option to assume plain aligned writes up to word size are atomic
8cfbb04fae75260eae07ab8c74c1dcd44294d739 kcsan: Clean up the main KCSAN Kconfig option
d591ec3db75f9eadfa7976ff8796c674c0027715 kcsan: Introduce KCSAN_ACCESS_ASSERT access type
80d4c4775216602ccdc9e761ce251c8451d0c6ca kcsan: Expose core configuration parameters as module params
f0f6928c2c4c19ab6171d4f468f542fac1888a8f kcsan: Move interfaces that affects checks to kcsan-checks.h
b738f6169f1260b4ed5bd9f220b1c84d79f3ab8d kcsan: Introduce kcsan_value_change type
81af89e15862909881ff010a0adb67148487e88a kcsan: Add kcsan_set_access_mask() support
4dfd5cd83dc4458049c7f6eb9c4f361acc4239ea rculist: Add brackets around cond argument in __list_check_rcu macro
387b14684f94483cbbb72843db406ec9a8d0d6d2 docs: locking: convert docs to ReST and rename to *.rst
2cdb54c93a7e5beb6f3f8b63575d9fb664dfc603 docs: RCU: Convert rculist_nulls.txt to ReST
43cb5451dffe0bc5d59688d4898c9a1f7c40d3b4 docs: RCU: Convert torture.txt to ReST
90c73cb2c65f9e78eb09a8cbcd4bcd4add2d3f4d docs: RCU: Convert rcuref.txt to ReST
f2286ab99549271f3cec73e305b9ecca95d91394 docs: RCU: Convert stallwarn.txt to ReST
2d9c318bfd15394da014737bee30e7b2e22c5eac docs: RCU: Don't duplicate chapter names in rculist_nulls.rst
b81898e3d2133715e4475d25757595a3e18502ed doc: Timer problems can cause RCU CPU stall warnings
ccd477028a202993b9ddca5d2404fdaca3b7a55c powerpc/64s: Fix HV NMI vs HV interrupt recoverability test
cbf2ba952a70399c972f2a2126a4ac6f79437f37 powerpc/64s: system reset interrupt preserve HSRRs
de3c83c2fd2b87cf68214eda76dfa66989d78cb6 powerpc/64s: Include <asm/nmi.h> header file to fix a warning
69ea03b56ed2c7189ccd0b5910ad39f3cad1df21 hardirq/nmi: Allow nested nmi_enter()
f93524eb9c54f49be150167918f6546b0a2e09b1 sched,rcu,tracing: Avoid tracing before in_nmi() is correct
e9d338a0b1799c988b678e8ccb66a442272e6aa3 scftorture: Add smp_call_function() torture test
5022b8ac608f8b80b042a8041fe2738c4b9ea8cf scftorture: Implement weighted primitive selection
dba3142b37f343734bf61dbce2914acb76e69fb6 scftorture: Summarize per-thread statistics
b93e21a51e1c8ed3816da888d34f88193ad1b917 scftorture: Add smp_call_function_single() memory-ordering checks
980205ee8489d53c4380f7762debac87312b0fb3 scftorture: Add smp_call_function_many() memory-ordering checks
34e8c4837adb579962e528a4f7dd1f75cb120be4 scftorture: Add smp_call_function() memory-ordering checks
676e5469643e716df7f39ef77ba8f09c85b0c4f8 scftorture: Consolidate scftorture_invoke_one() check and kfree()
4df55bddc1a360e94c86e227fe417ac9422cb615 scftorture: Consolidate scftorture_invoke_one() scf_check initialization
dbf83b655a7853bc430af10e9a3e7eb1f4c90f86 scftorture: Flag errors in torture-compatible manner
ee7035d29576dcb59b1191e5f609517cacab1e56 scftorture: Prevent compiler from reducing race probabilities
9a52a574676f8d4aa55f69319231ce6c343b00bb scftorture: Make symbol 'scf_torture_rand' static
de77d4da54d10df97d265e7e99112bfc2fef7d4a scftorture: Check unexpected "switch" statement value
a7c072ef26644b632241d549869f10f8d2dd3b5c scftorture: Block scftorture_invoker() kthreads for offline CPUs
9e66bf03f9c538863e614a72c5799bcd9579630e scftorture: Adapt memory-ordering test to UP operation
65bd77f554336407f5fd7ced7a6df686767fba21 scftorture: Add cond_resched() to test loop
4e88ec4a9eb17527e640b063f79e5b875733eb53 rcuperf: Change rcuperf to rcuscale
29721b859217b946bfc001c1644745ed4d7c26cb tick/nohz: Only wake up a single target cpu when kicking a task
a1dfb6311c7739e21e160bc4c5575a1b21b48c87 tick/nohz: Kick only _queued_ task whose tick dependency is updated
02f47faa25db134f6043fb6b12a68b5d4c980bb6 selftests/bpf: Fix test_vmlinux test to use bpf_probe_read_user()

__CHANGES NOT IN UPSTREAM________________
redhat/configs: Update torture test configs
redhat/configs: Add CONFIG_SYSTEM_REVOCATION_KEYS and CONFIG_SYSTEM_REVOCATION_LIST
mm/mmu_notifier: allocate mmu_notifier_rh in __mmu_notifier_register()
Amends commit ea6244cc248b to include a version string in module info.
x86/entry/64: Deduplicate multiple IBRS macros in paranoid_entry
vmxnet3: Set the default of vxlan overlay offload to disabled
igbvf: amend removal of MODULE_VERSION
Makefile: update early devel phase flag
configs: Enable CONFIG_BPF_KPROBE_OVERRIDE
convenience helper: get_tree_single() (finish backport)
sfc: clean up mis-targeted comments
sfc: clean up unused assignments
redhat: enable MHI bus driver support
iavf: amend removal of MODULE_VERSION
ixgbevf: Amend commit acf03026ec5a to include a version in module info.
redhat/configs: Add CONFIG_PINCTRL_EMMITSBURG
redhat/configs: Remove CONFIG_EMMITSBURG
RHEL: Add #defines for 16k hugepages
RHEL: configs: do not enable CONFIG_KVM_XEN
KVM: RHEL: include linux/static_call.h
CI: Rename KABI option
CI: Disable result checking for realtime checks
ena: revert removal of MODULE_VERSION from ena
igb: amend removal of MODULE_VERSION
igc: amend removal of MODULE_VERSION
i40e: amend removal of MODULE_VERSION
ixgbe: Amend commit acf03026ec5a to include a version string in module info.
redhat/configs: Use CONFIG_VIRTIO_CONSOLE=m on s390x, too
redhat/configs: Add CONFIG_UV_SYSFS
redhat: enable CONFIG_DM_MULTIPATH_HST and CONFIG_DM_MULTIPATH_IOA
Revert "usnic_verbs: fix deadlock"
Avoid macro redefinition in compiler-{clang,gcc}.h
bonding: advertise NETIF_F_GSO_SOFTWARE
net: udp: make udp_tunnel_nic_info structure extensible
mlx5: vdpa: fix possible uninitialized var
redhat: enable mlx5e vDPA driver
