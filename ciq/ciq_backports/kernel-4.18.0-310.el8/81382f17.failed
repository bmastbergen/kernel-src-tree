nvme: rename __nvme_revalidate_disk

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 81382f1730d24a60e2b0499592e64e6e640b1871
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/81382f17.failed

Rename __nvme_revalidate_disk to nvme_update_ns_info and pass a
namespace instead of the gendisk.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Keith Busch <kbusch@kernel.org>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
(cherry picked from commit 81382f1730d24a60e2b0499592e64e6e640b1871)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index d026ba361d0c,fede487f6e04..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -2072,10 -2076,11 +2072,14 @@@ static void nvme_set_chunk_sectors(stru
  	blk_queue_chunk_sectors(ns->queue, iob);
  }
  
- static int __nvme_revalidate_disk(struct gendisk *disk, struct nvme_id_ns *id)
+ static int nvme_update_ns_info(struct nvme_ns *ns, struct nvme_id_ns *id)
  {
++<<<<<<< HEAD
 +	struct nvme_ns *ns = disk->private_data;
++=======
+ 	unsigned lbaf = id->flbas & NVME_NS_FLBAS_LBA_MASK;
++>>>>>>> 81382f1730d2 (nvme: rename __nvme_revalidate_disk)
  	struct nvme_ctrl *ctrl = ns->ctrl;
 -	int ret;
  
  	/*
  	 * If identify namespace failed, use default 512 byte block size so
@@@ -2170,7 -2185,7 +2174,11 @@@ static int nvme_revalidate_disk(struct 
  		goto free_id;
  	}
  
++<<<<<<< HEAD
 +	ret = __nvme_revalidate_disk(disk, id);
++=======
+ 	ret = nvme_update_ns_info(ns, id);
++>>>>>>> 81382f1730d2 (nvme: rename __nvme_revalidate_disk)
  free_id:
  	kfree(id);
  out:
@@@ -3942,8 -3932,10 +3950,8 @@@ static void nvme_alloc_ns(struct nvme_c
  	memcpy(disk->disk_name, disk_name, DISK_NAME_LEN);
  	ns->disk = disk;
  
- 	if (__nvme_revalidate_disk(disk, id))
+ 	if (nvme_update_ns_info(ns, id))
  		goto out_put_disk;
 -	if (blk_queue_is_zoned(ns->queue) && nvme_revalidate_zones(ns))
 -		goto out_put_disk;
  
  	if ((ctrl->quirks & NVME_QUIRK_LIGHTNVM) && id->vs[0] == 0x1) {
  		ret = nvme_nvm_register(ns, disk_name, node);
* Unmerged path drivers/nvme/host/core.c
