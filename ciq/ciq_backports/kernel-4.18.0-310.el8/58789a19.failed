Bluetooth: hci_qca: Stop collecting memdump again for command timeout during SSR

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
commit 58789a1990c1a849a461ac912e72a698a771951a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/58789a19.failed

Setting memdump state to idle prior to setting of callback function
pointer for command timeout to NULL,causing the issue.Now moved the
initialisation of memdump state to qca_setup().

Fixes: d841502c79e3 ("Bluetooth: hci_qca: Collect controller memory dump during SSR")
	Signed-off-by: Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 58789a1990c1a849a461ac912e72a698a771951a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/hci_qca.c
diff --cc drivers/bluetooth/hci_qca.c
index 4b48490a135e,20e1dedbc58c..000000000000
--- a/drivers/bluetooth/hci_qca.c
+++ b/drivers/bluetooth/hci_qca.c
@@@ -1680,8 -1666,10 +1680,15 @@@ static int qca_setup(struct hci_uart *h
  	set_bit(HCI_QUIRK_SIMULTANEOUS_DISCOVERY, &hdev->quirks);
  
  	bt_dev_info(hdev, "setting up %s",
++<<<<<<< HEAD
 +		qca_is_wcn399x(soc_type) ? "wcn399x" : "ROME");
 + 
++=======
+ 		qca_is_wcn399x(soc_type) ? "wcn399x" : "ROME/QCA6390");
+ 
+ 	qca->memdump_state = QCA_MEMDUMP_IDLE;
+ 
++>>>>>>> 58789a1990c1 (Bluetooth: hci_qca: Stop collecting memdump again for command timeout during SSR)
  retry:
  	ret = qca_power_on(hdev);
  	if (ret)
@@@ -1843,8 -1840,11 +1847,11 @@@ static int qca_power_off(struct hci_de
  	struct qca_data *qca = hu->priv;
  	enum qca_btsoc_type soc_type = qca_soc_type(hu);
  
+ 	hu->hdev->hw_error = NULL;
+ 	hu->hdev->cmd_timeout = NULL;
+ 
  	/* Stop sending shutdown command if soc crashes. */
 -	if (soc_type != QCA_ROME
 +	if (qca_is_wcn399x(soc_type)
  		&& qca->memdump_state == QCA_MEMDUMP_IDLE) {
  		qca_send_pre_shutdown_cmd(hdev);
  		usleep_range(8000, 10000);
* Unmerged path drivers/bluetooth/hci_qca.c
