netdevsim: add support for flash_update overwrite mask

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit cbb58368fbccc823a85df73bd6bf7db6dfda86aa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/cbb58368.failed

The devlink interface recently gained support for a new "overwrite mask"
parameter that allows specifying how various sub-sections of a flash
component are modified when updating.

Add support for this to netdevsim, to enable easily testing the
interface. Make the allowed overwrite mask values controllable via
a debugfs parameter. This enables testing a flow where the driver
rejects an unsupportable overwrite mask.

	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Reviewed-by: Jakub Kicinski <kuba@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cbb58368fbccc823a85df73bd6bf7db6dfda86aa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/netdevsim/dev.c
#	tools/testing/selftests/drivers/net/netdevsim/devlink.sh
diff --cc drivers/net/netdevsim/dev.c
index e665efd760f8,56213ba151f6..000000000000
--- a/drivers/net/netdevsim/dev.c
+++ b/drivers/net/netdevsim/dev.c
@@@ -879,6 -884,8 +884,11 @@@ nsim_dev_devlink_trap_policer_counter_g
  }
  
  static const struct devlink_ops nsim_dev_devlink_ops = {
++<<<<<<< HEAD
++=======
+ 	.supported_flash_update_params = DEVLINK_SUPPORT_FLASH_UPDATE_COMPONENT |
+ 					 DEVLINK_SUPPORT_FLASH_UPDATE_OVERWRITE_MASK,
++>>>>>>> cbb58368fbcc (netdevsim: add support for flash_update overwrite mask)
  	.reload_down = nsim_dev_reload_down,
  	.reload_up = nsim_dev_reload_up,
  	.info_get = nsim_dev_info_get,
diff --cc tools/testing/selftests/drivers/net/netdevsim/devlink.sh
index de4b32fc4223,40909c254365..000000000000
--- a/tools/testing/selftests/drivers/net/netdevsim/devlink.sh
+++ b/tools/testing/selftests/drivers/net/netdevsim/devlink.sh
@@@ -23,6 -23,27 +23,30 @@@ fw_flash_test(
  	devlink dev flash $DL_HANDLE file dummy
  	check_err $? "Failed to flash with status updates on"
  
++<<<<<<< HEAD
++=======
+ 	devlink dev flash $DL_HANDLE file dummy component fw.mgmt
+ 	check_err $? "Failed to flash with component attribute"
+ 
+ 	devlink dev flash $DL_HANDLE file dummy overwrite settings
+ 	check_fail $? "Flash with overwrite settings should be rejected"
+ 
+ 	echo "1"> $DEBUGFS_DIR/fw_update_overwrite_mask
+ 	check_err $? "Failed to change allowed overwrite mask"
+ 
+ 	devlink dev flash $DL_HANDLE file dummy overwrite settings
+ 	check_err $? "Failed to flash with settings overwrite enabled"
+ 
+ 	devlink dev flash $DL_HANDLE file dummy overwrite identifiers
+ 	check_fail $? "Flash with overwrite settings should be identifiers"
+ 
+ 	echo "3"> $DEBUGFS_DIR/fw_update_overwrite_mask
+ 	check_err $? "Failed to change allowed overwrite mask"
+ 
+ 	devlink dev flash $DL_HANDLE file dummy overwrite identifiers overwrite settings
+ 	check_err $? "Failed to flash with settings and identifiers overwrite enabled"
+ 
++>>>>>>> cbb58368fbcc (netdevsim: add support for flash_update overwrite mask)
  	echo "n"> $DEBUGFS_DIR/fw_update_status
  	check_err $? "Failed to disable status updates"
  
* Unmerged path drivers/net/netdevsim/dev.c
diff --git a/drivers/net/netdevsim/netdevsim.h b/drivers/net/netdevsim/netdevsim.h
index bf898af02b5a..aeef1b3da0a7 100644
--- a/drivers/net/netdevsim/netdevsim.h
+++ b/drivers/net/netdevsim/netdevsim.h
@@ -197,6 +197,7 @@ struct nsim_dev {
 	struct list_head port_list;
 	struct mutex port_list_lock; /* protects port list */
 	bool fw_update_status;
+	u32 fw_update_overwrite_mask;
 	u32 max_macs;
 	bool test1;
 	bool dont_allow_reload;
* Unmerged path tools/testing/selftests/drivers/net/netdevsim/devlink.sh
