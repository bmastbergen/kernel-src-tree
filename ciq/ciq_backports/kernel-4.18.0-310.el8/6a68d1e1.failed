fuse: add fuse_sb_destroy() helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 6a68d1e1514d77d05898780aea4e5ac587616e93
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/6a68d1e1.failed

This is to avoid minor code duplication between fuse_kill_sb_anon() and
fuse_kill_sb_blk().

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 6a68d1e1514d77d05898780aea4e5ac587616e93)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/inode.c
diff --cc fs/fuse/inode.c
index ad83ccd9accc,e7e9005b9b66..000000000000
--- a/fs/fuse/inode.c
+++ b/fs/fuse/inode.c
@@@ -1389,25 -1507,54 +1389,42 @@@ static int fuse_init_fs_context(struct 
  	return 0;
  }
  
 -bool fuse_mount_remove(struct fuse_mount *fm)
 -{
 -	struct fuse_conn *fc = fm->fc;
 -	bool last = false;
 -
 -	down_write(&fc->killsb);
 -	list_del_init(&fm->fc_entry);
 -	if (list_empty(&fc->mounts))
 -		last = true;
 -	up_write(&fc->killsb);
 -
 -	return last;
 -}
 -EXPORT_SYMBOL_GPL(fuse_mount_remove);
 -
 -void fuse_conn_destroy(struct fuse_mount *fm)
 +static void fuse_sb_destroy(struct super_block *sb)
  {
 -	struct fuse_conn *fc = fm->fc;
 +	struct fuse_conn *fc = get_fuse_conn_super(sb);
  
 -	if (fc->destroy)
 -		fuse_send_destroy(fm);
 +	if (fc) {
 +		if (fc->destroy)
 +			fuse_send_destroy(fc);
  
 -	fuse_abort_conn(fc);
 -	fuse_wait_aborted(fc);
 +		fuse_abort_conn(fc);
 +		fuse_wait_aborted(fc);
  
 -	if (!list_empty(&fc->entry)) {
 -		mutex_lock(&fuse_mutex);
 -		list_del(&fc->entry);
 -		fuse_ctl_remove_conn(fc);
 -		mutex_unlock(&fuse_mutex);
 +		down_write(&fc->killsb);
 +		fc->sb = NULL;
 +		up_write(&fc->killsb);
  	}
  }
 -EXPORT_SYMBOL_GPL(fuse_conn_destroy);
  
++<<<<<<< HEAD
 +void fuse_kill_sb_anon(struct super_block *sb)
 +{
++=======
+ static void fuse_sb_destroy(struct super_block *sb)
+ {
+ 	struct fuse_mount *fm = get_fuse_mount_super(sb);
+ 	bool last;
+ 
+ 	if (fm) {
+ 		last = fuse_mount_remove(fm);
+ 		if (last)
+ 			fuse_conn_destroy(fm);
+ 	}
+ }
+ 
+ static void fuse_kill_sb_anon(struct super_block *sb)
+ {
++>>>>>>> 6a68d1e1514d (fuse: add fuse_sb_destroy() helper)
  	fuse_sb_destroy(sb);
  	kill_anon_super(sb);
  }
* Unmerged path fs/fuse/inode.c
