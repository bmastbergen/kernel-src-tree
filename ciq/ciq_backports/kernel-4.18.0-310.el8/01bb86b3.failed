driver core: Add fwnode_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Saravana Kannan <saravanak@google.com>
commit 01bb86b380a306bd937c96da36f66429f3362137
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/01bb86b3.failed

There are multiple locations in the kernel where a struct fwnode_handle
is initialized. Add fwnode_init() so that we have one way of
initializing a fwnode_handle.

	Acked-by: Rob Herring <robh@kernel.org>
	Signed-off-by: Saravana Kannan <saravanak@google.com>
Link: https://lore.kernel.org/r/20201121020232.908850-8-saravanak@google.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 01bb86b380a306bd937c96da36f66429f3362137)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/firmware/efi/efi-init.c
#	kernel/irq/irqdomain.c
diff --cc kernel/irq/irqdomain.c
index ea34df428f14,06fce7e39033..000000000000
--- a/kernel/irq/irqdomain.c
+++ b/kernel/irq/irqdomain.c
@@@ -89,8 -90,8 +89,13 @@@ struct fwnode_handle *__irq_domain_allo
  
  	fwid->type = type;
  	fwid->name = n;
++<<<<<<< HEAD
 +	fwid->data = data;
 +	fwid->fwnode.ops = &irqchip_fwnode_ops;
++=======
+ 	fwid->pa = pa;
+ 	fwnode_init(&fwid->fwnode, &irqchip_fwnode_ops);
++>>>>>>> 01bb86b380a3 (driver core: Add fwnode_init())
  	return &fwid->fwnode;
  }
  EXPORT_SYMBOL_GPL(__irq_domain_alloc_fwnode);
* Unmerged path drivers/firmware/efi/efi-init.c
diff --git a/drivers/acpi/property.c b/drivers/acpi/property.c
index 58e9b7b4946a..591d8b4132fb 100644
--- a/drivers/acpi/property.c
+++ b/drivers/acpi/property.c
@@ -79,7 +79,7 @@ static bool acpi_nondev_subnode_extract(const union acpi_object *desc,
 		return false;
 
 	dn->name = link->package.elements[0].string.pointer;
-	dn->fwnode.ops = &acpi_data_fwnode_ops;
+	fwnode_init(&dn->fwnode, &acpi_data_fwnode_ops);
 	dn->parent = parent;
 	INIT_LIST_HEAD(&dn->data.properties);
 	INIT_LIST_HEAD(&dn->data.subnodes);
diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index 60a2e75630a9..536b17edba66 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -1650,7 +1650,7 @@ void acpi_init_device_object(struct acpi_device *device, acpi_handle handle,
 	device->device_type = type;
 	device->handle = handle;
 	device->parent = acpi_bus_get_parent(handle);
-	device->fwnode.ops = &acpi_device_fwnode_ops;
+	fwnode_init(&device->fwnode, &acpi_device_fwnode_ops);
 	acpi_set_device_status(device, sta);
 	acpi_device_get_busid(device);
 	acpi_set_pnp_ids(handle, &device->pnp, type, info);
diff --git a/drivers/base/swnode.c b/drivers/base/swnode.c
index 010828fc785b..4a4b2008fbc2 100644
--- a/drivers/base/swnode.c
+++ b/drivers/base/swnode.c
@@ -653,7 +653,7 @@ swnode_register(const struct software_node *node, struct swnode *parent,
 	swnode->parent = parent;
 	swnode->allocated = allocated;
 	swnode->kobj.kset = swnode_kset;
-	swnode->fwnode.ops = &software_node_ops;
+	fwnode_init(&swnode->fwnode, &software_node_ops);
 
 	ida_init(&swnode->child_ids);
 	INIT_LIST_HEAD(&swnode->entry);
* Unmerged path drivers/firmware/efi/efi-init.c
diff --git a/include/linux/fwnode.h b/include/linux/fwnode.h
index 43a2dd7253c6..e1e5a96e9010 100644
--- a/include/linux/fwnode.h
+++ b/include/linux/fwnode.h
@@ -174,6 +174,12 @@ struct fwnode_operations {
 	} while (false)
 #define get_dev_from_fwnode(fwnode)	get_device((fwnode)->dev)
 
+static inline void fwnode_init(struct fwnode_handle *fwnode,
+			       const struct fwnode_operations *ops)
+{
+	fwnode->ops = ops;
+}
+
 extern u32 fw_devlink_get_flags(void);
 void fw_devlink_pause(void);
 void fw_devlink_resume(void);
diff --git a/include/linux/of.h b/include/linux/of.h
index 35847dcd73bc..e47cb12d626c 100644
--- a/include/linux/of.h
+++ b/include/linux/of.h
@@ -110,7 +110,7 @@ static inline void of_node_init(struct device_node *node)
 #if defined(CONFIG_OF_KOBJ)
 	kobject_init(&node->kobj, &of_node_ktype);
 #endif
-	node->fwnode.ops = &of_fwnode_ops;
+	fwnode_init(&node->fwnode, &of_fwnode_ops);
 }
 
 #if defined(CONFIG_OF_KOBJ)
* Unmerged path kernel/irq/irqdomain.c
