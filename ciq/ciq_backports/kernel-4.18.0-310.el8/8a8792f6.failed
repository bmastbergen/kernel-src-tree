mm: memcg: fix memcg file_dirty numa stat

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Shakeel Butt <shakeelb@google.com>
commit 8a8792f600abacd7e1b9bb667759dca1c153f64c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/8a8792f6.failed

The kernel updates the per-node NR_FILE_DIRTY stats on page migration
but not the memcg numa stats.

That was not an issue until recently the commit 5f9a4f4a7096 ("mm:
memcontrol: add the missing numa_stat interface for cgroup v2") exposed
numa stats for the memcg.

So fix the file_dirty per-memcg numa stat.

Link: https://lkml.kernel.org/r/20210108155813.2914586-1-shakeelb@google.com
Fixes: 5f9a4f4a7096 ("mm: memcontrol: add the missing numa_stat interface for cgroup v2")
	Signed-off-by: Shakeel Butt <shakeelb@google.com>
	Reviewed-by: Muchun Song <songmuchun@bytedance.com>
	Acked-by: Yang Shi <shy828301@gmail.com>
	Reviewed-by: Roman Gushchin <guro@fb.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 8a8792f600abacd7e1b9bb667759dca1c153f64c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/migrate.c
diff --cc mm/migrate.c
index 357768f2aa73,613794f6a433..000000000000
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@@ -500,10 -499,10 +500,15 @@@ int migrate_page_move_mapping(struct ad
  			__dec_lruvec_state(old_lruvec, NR_SHMEM);
  			__inc_lruvec_state(new_lruvec, NR_SHMEM);
  		}
++<<<<<<< HEAD
 +		if (dirty && mapping_cap_account_dirty(mapping)) {
 +			__dec_node_state(oldzone->zone_pgdat, NR_FILE_DIRTY);
++=======
+ 		if (dirty && mapping_can_writeback(mapping)) {
+ 			__dec_lruvec_state(old_lruvec, NR_FILE_DIRTY);
++>>>>>>> 8a8792f600ab (mm: memcg: fix memcg file_dirty numa stat)
  			__dec_zone_state(oldzone, NR_ZONE_WRITE_PENDING);
- 			__inc_node_state(newzone->zone_pgdat, NR_FILE_DIRTY);
+ 			__inc_lruvec_state(new_lruvec, NR_FILE_DIRTY);
  			__inc_zone_state(newzone, NR_ZONE_WRITE_PENDING);
  		}
  	}
* Unmerged path mm/migrate.c
