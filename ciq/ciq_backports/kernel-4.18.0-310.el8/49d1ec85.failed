block: manage bio slab cache by xarray

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit 49d1ec8573f74ff1e23df1d5092211de46baa236
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/49d1ec85.failed

Managing bio slab cache via xarray by using slab cache size as xarray
index, and storing 'struct bio_slab' instance into xarray.

So code is simplified a lot, meantime it becomes more readable than before.

	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Reviewed-by: Pavel Begunkov <asml.silence@gmail.com>
	Tested-by: Pavel Begunkov <asml.silence@gmail.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 49d1ec8573f74ff1e23df1d5092211de46baa236)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/bio.c
diff --cc block/bio.c
index 528aaf459c37,87bf16460e0e..000000000000
--- a/block/bio.c
+++ b/block/bio.c
@@@ -31,6 -18,8 +31,11 @@@
  #include <linux/blk-cgroup.h>
  #include <linux/highmem.h>
  #include <linux/sched/sysctl.h>
++<<<<<<< HEAD
++=======
+ #include <linux/blk-crypto.h>
+ #include <linux/xarray.h>
++>>>>>>> 49d1ec8573f7 (block: manage bio slab cache by xarray)
  
  #include <trace/events/block.h>
  #include "blk.h"
@@@ -2291,12 -1632,7 +2285,16 @@@ static void __init biovec_init_slabs(vo
  
  static int __init init_bio(void)
  {
++<<<<<<< HEAD
 +	bio_slab_max = 2;
 +	bio_slab_nr = 0;
 +	bio_slabs = kcalloc(bio_slab_max, sizeof(struct bio_slab),
 +			    GFP_KERNEL);
 +	if (!bio_slabs)
 +		panic("bio: can't allocate bios\n");
++=======
+ 	BUILD_BUG_ON(BIO_FLAG_LAST > BVEC_POOL_OFFSET);
++>>>>>>> 49d1ec8573f7 (block: manage bio slab cache by xarray)
  
  	bio_integrity_init();
  	biovec_init_slabs();
* Unmerged path block/bio.c
