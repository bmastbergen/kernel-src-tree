IB/usnic: Fix deadlock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Parvi Kaustubhi <pkaustub@cisco.com>
commit 5bb3c1e9d4bc93a9eb4e44a52582d6aa72643b1e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/5bb3c1e9.failed

There is a dead lock in usnic ib_register and netdev_notify path.

	usnic_ib_discover_pf()
	| mutex_lock(&usnic_ib_ibdev_list_lock);
	 | usnic_ib_device_add();
	  | ib_register_device()
	   | usnic_ib_query_port()
	    | mutex_lock(&us_ibdev->usdev_lock);
	     | ib_get_eth_speed()
	      | rtnl_lock()

order of lock: &usnic_ib_ibdev_list_lock -> usdev_lock -> rtnl_lock

	rtnl_lock()
	 | usnic_ib_netdevice_event()
	  | mutex_lock(&usnic_ib_ibdev_list_lock);

order of lock: rtnl_lock -> &usnic_ib_ibdev_list_lock

Solution is to use the core's lock-free ib_device_get_by_netdev() scheme
to lookup ib_dev while handling netdev & inet events.

	Signed-off-by: Parvi Kaustubhi <pkaustub@cisco.com>
	Reviewed-by: Govindarajulu Varadarajan <gvaradar@cisco.com>
	Reviewed-by: Tanmay Inamdar <tinamdar@cisco.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 5bb3c1e9d4bc93a9eb4e44a52582d6aa72643b1e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/usnic/usnic_ib_main.c
diff --cc drivers/infiniband/hw/usnic/usnic_ib_main.c
index d5a6d7e68823,be6468021a9a..000000000000
--- a/drivers/infiniband/hw/usnic/usnic_ib_main.c
+++ b/drivers/infiniband/hw/usnic/usnic_ib_main.c
@@@ -219,10 -220,13 +220,19 @@@ static int usnic_ib_netdevice_event(str
  
  	struct net_device *netdev = netdev_notifier_info_to_dev(ptr);
  
++<<<<<<< HEAD
 +	us_ibdev = container_of(notifier, struct usnic_ib_dev, netdev_nb);
 +	if (us_ibdev->netdev == netdev)
 +		usnic_ib_handle_usdev_event(us_ibdev, event);
- 
++=======
+ 	ibdev = ib_device_get_by_netdev(netdev, RDMA_DRIVER_USNIC);
+ 	if (!ibdev)
+ 		return NOTIFY_DONE;
++>>>>>>> 5bb3c1e9d4bc (IB/usnic: Fix deadlock)
+ 
+ 	us_ibdev = container_of(ibdev, struct usnic_ib_dev, ib_dev);
+ 	usnic_ib_handle_usdev_event(us_ibdev, event);
+ 	ib_device_put(ibdev);
  	return NOTIFY_DONE;
  }
  
@@@ -274,14 -281,20 +284,24 @@@ static int usnic_ib_inetaddr_event(stru
  	struct usnic_ib_dev *us_ibdev;
  	struct in_ifaddr *ifa = ptr;
  	struct net_device *netdev = ifa->ifa_dev->dev;
+ 	struct ib_device *ibdev;
  
++<<<<<<< HEAD
 +	us_ibdev = container_of(notifier, struct usnic_ib_dev, inet_nb);
 +	if (us_ibdev->netdev == netdev)
 +		usnic_ib_handle_inet_event(us_ibdev, event, ptr);
- 
++=======
+ 	ibdev = ib_device_get_by_netdev(netdev, RDMA_DRIVER_USNIC);
+ 	if (!ibdev)
+ 		return NOTIFY_DONE;
++>>>>>>> 5bb3c1e9d4bc (IB/usnic: Fix deadlock)
+ 
+ 	us_ibdev = container_of(ibdev, struct usnic_ib_dev, ib_dev);
+ 	usnic_ib_handle_inet_event(us_ibdev, event, ptr);
+ 	ib_device_put(ibdev);
  	return NOTIFY_DONE;
  }
 -static struct notifier_block usnic_ib_inetaddr_notifier = {
 -	.notifier_call = usnic_ib_inetaddr_event
 -};
 +
  /* End of inet section*/
  
  static int usnic_port_immutable(struct ib_device *ibdev, u8 port_num,
@@@ -353,7 -359,7 +372,11 @@@ static void *usnic_ib_device_add(struc
  	union ib_gid gid;
  	struct in_device *ind;
  	struct net_device *netdev;
++<<<<<<< HEAD
 +	int err;
++=======
+ 	int ret;
++>>>>>>> 5bb3c1e9d4bc (IB/usnic: Fix deadlock)
  
  	usnic_dbg("\n");
  	netdev = pci_get_drvdata(dev);
@@@ -403,8 -411,13 +426,12 @@@
  
  	ib_set_device_ops(&us_ibdev->ib_dev, &usnic_dev_ops);
  
 -	us_ibdev->ib_dev.driver_id = RDMA_DRIVER_USNIC;
  	rdma_set_device_sysfs_group(&us_ibdev->ib_dev, &usnic_attr_group);
  
+ 	ret = ib_device_set_netdev(&us_ibdev->ib_dev, us_ibdev->netdev, 1);
+ 	if (ret)
+ 		goto err_fwd_dealloc;
+ 
  	if (ib_register_device(&us_ibdev->ib_dev, "usnic_%d"))
  		goto err_fwd_dealloc;
  
* Unmerged path drivers/infiniband/hw/usnic/usnic_ib_main.c
diff --git a/drivers/infiniband/hw/usnic/usnic_ib_verbs.c b/drivers/infiniband/hw/usnic/usnic_ib_verbs.c
index 77033e8ec9fe..7dd7d25d871f 100644
--- a/drivers/infiniband/hw/usnic/usnic_ib_verbs.c
+++ b/drivers/infiniband/hw/usnic/usnic_ib_verbs.c
@@ -437,16 +437,6 @@ int usnic_ib_query_gid(struct ib_device *ibdev, u8 port, int index,
 	return 0;
 }
 
-struct net_device *usnic_get_netdev(struct ib_device *device, u8 port_num)
-{
-	struct usnic_ib_dev *us_ibdev = to_usdev(device);
-
-	if (us_ibdev->netdev)
-		dev_hold(us_ibdev->netdev);
-
-	return us_ibdev->netdev;
-}
-
 int usnic_ib_query_pkey(struct ib_device *ibdev, u8 port, u16 index,
 				u16 *pkey)
 {
diff --git a/drivers/infiniband/hw/usnic/usnic_ib_verbs.h b/drivers/infiniband/hw/usnic/usnic_ib_verbs.h
index cdbb94937a41..7d9c75a66905 100644
--- a/drivers/infiniband/hw/usnic/usnic_ib_verbs.h
+++ b/drivers/infiniband/hw/usnic/usnic_ib_verbs.h
@@ -48,7 +48,6 @@ int usnic_ib_query_qp(struct ib_qp *qp, struct ib_qp_attr *qp_attr,
 				struct ib_qp_init_attr *qp_init_attr);
 int usnic_ib_query_gid(struct ib_device *ibdev, u8 port, int index,
 				union ib_gid *gid);
-struct net_device *usnic_get_netdev(struct ib_device *device, u8 port_num);
 int usnic_ib_query_pkey(struct ib_device *ibdev, u8 port, u16 index,
 				u16 *pkey);
 int usnic_ib_alloc_pd(struct ib_pd *ibpd, struct ib_udata *udata);
