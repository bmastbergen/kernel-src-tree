bus: mhi: core: Read transfer length from an event properly

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Hemant Kumar <hemantk@codeaurora.org>
commit ee75cedf82d832561af8ba8380aeffd00a9eea77
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/ee75cedf.failed

When MHI Driver receives an EOT event, it reads xfer_len from the
event in the last TRE. The value is under control of the MHI device
and never validated by Host MHI driver. The value should never be
larger than the real size of the buffer but a malicious device can
set the value 0xFFFF as maximum. This causes driver to memory
overflow (both read or write). Fix this issue by reading minimum of
transfer length from event and the buffer length provided.

	Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>
	Signed-off-by: Bhaumik Bhatt <bbhatt@codeaurora.org>
	Reviewed-by: Jeffrey Hugo <jhugo@codeaurora.org>
	Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
	Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
Link: https://lore.kernel.org/r/20200521170249.21795-5-manivannan.sadhasivam@linaro.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ee75cedf82d832561af8ba8380aeffd00a9eea77)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bus/mhi/core/main.c
* Unmerged path drivers/bus/mhi/core/main.c
* Unmerged path drivers/bus/mhi/core/main.c
