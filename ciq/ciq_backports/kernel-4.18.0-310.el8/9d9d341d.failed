cgroup: remove obsoleted broken_hierarchy and warned_broken_hierarchy

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Roman Gushchin <guro@fb.com>
commit 9d9d341df4d519d96e7927941d91f5785c5cea07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/9d9d341d.failed

With the deprecation of the non-hierarchical mode of the memory controller
there are no more examples of broken hierarchies left.

Let's remove the cgroup core code which was supposed to print warnings
about creating of broken hierarchies.

Link: https://lkml.kernel.org/r/20201110220800.929549-4-guro@fb.com
	Signed-off-by: Roman Gushchin <guro@fb.com>
	Reviewed-by: Shakeel Butt <shakeelb@google.com>
	Acked-by: David Rientjes <rientjes@google.com>
	Acked-by: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Michal Hocko <mhocko@suse.com>
	Cc: Tejun Heo <tj@kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 9d9d341df4d519d96e7927941d91f5785c5cea07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/cgroup/cgroup.c
diff --cc kernel/cgroup/cgroup.c
index 18b2b038e0aa,16f4692dc961..000000000000
--- a/kernel/cgroup/cgroup.c
+++ b/kernel/cgroup/cgroup.c
@@@ -5141,15 -5149,6 +5141,18 @@@ static struct cgroup_subsys_state *css_
  	if (err)
  		goto err_list_del;
  
++<<<<<<< HEAD
 +	if (ss->broken_hierarchy && !ss->warned_broken_hierarchy &&
 +	    cgroup_parent(parent)) {
 +		pr_warn("%s (%d) created nested cgroup for controller \"%s\" which has incomplete hierarchy support. Nested cgroups may change behavior in the future.\n",
 +			current->comm, current->pid, ss->name);
 +		if (!strcmp(ss->name, "memory"))
 +			pr_warn("\"memory\" requires setting use_hierarchy to 1 on the root\n");
 +		ss->warned_broken_hierarchy = true;
 +	}
 +
++=======
++>>>>>>> 9d9d341df4d5 (cgroup: remove obsoleted broken_hierarchy and warned_broken_hierarchy)
  	return css;
  
  err_list_del:
diff --git a/include/linux/cgroup-defs.h b/include/linux/cgroup-defs.h
index ac88ad4e96a2..86a6f7927382 100644
--- a/include/linux/cgroup-defs.h
+++ b/include/linux/cgroup-defs.h
@@ -719,21 +719,6 @@ struct cgroup_subsys {
 	 */
 	bool threaded:1;
 
-	/*
-	 * If %false, this subsystem is properly hierarchical -
-	 * configuration, resource accounting and restriction on a parent
-	 * cgroup cover those of its children.  If %true, hierarchy support
-	 * is broken in some ways - some subsystems ignore hierarchy
-	 * completely while others are only implemented half-way.
-	 *
-	 * It's now disallowed to create nested cgroups if the subsystem is
-	 * broken and cgroup core will emit a warning message on such
-	 * cases.  Eventually, all subsystems will be made properly
-	 * hierarchical and this will go away.
-	 */
-	bool broken_hierarchy:1;
-	bool warned_broken_hierarchy:1;
-
 	/* the following two fields are initialized automtically during boot */
 	int id;
 	const char *name;
* Unmerged path kernel/cgroup/cgroup.c
