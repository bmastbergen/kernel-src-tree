scftorture: Prevent compiler from reducing race probabilities

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Paul E. McKenney <paulmck@kernel.org>
commit ee7035d29576dcb59b1191e5f609517cacab1e56
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/ee7035d2.failed

Detecting smp_call_function() memory misordering requires close timing,
so it is necessary to have the checks immediately before and after
the call to the smp_call_function*() function under test.  This commit
therefore inserts barrier() calls to prevent the compiler from optimizing
memory-misordering detection down into the zone of extreme improbability.

	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit ee7035d29576dcb59b1191e5f609517cacab1e56)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/scftorture.c
* Unmerged path kernel/scftorture.c
* Unmerged path kernel/scftorture.c
