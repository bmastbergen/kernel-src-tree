block: remove the call to __invalidate_device in check_disk_size_change

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 99473d9db93a3bf557161373a1eb33d2873edd2e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/99473d9d.failed

__invalidate_device without the kill_dirty parameter just invalidates
various clean entries in caches, which doesn't really help us with
anything, but can cause all kinds of horrible lock orders due to how
it calls into the file system.  The only reason this hasn't been a
major issue is because so many people use partitions, for which no
invalidation was performed anyway.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 99473d9db93a3bf557161373a1eb33d2873edd2e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/block_dev.c
diff --cc fs/block_dev.c
index f19cc879b480,66ebf594c97f..000000000000
--- a/fs/block_dev.c
+++ b/fs/block_dev.c
@@@ -1400,11 -1332,8 +1400,16 @@@ static void check_disk_size_change(stru
  			       disk->disk_name, bdev_size, disk_size);
  		}
  		i_size_write(bdev->bd_inode, disk_size);
++<<<<<<< HEAD
 +		if (bdev_size > disk_size && __invalidate_device(bdev, false))
 +			pr_warn("VFS: busy inodes on resized disk %s\n",
 +				disk->disk_name);
 +	}
 +	bdev->bd_invalidated = 0;
++=======
+ 	}
+ 	spin_unlock(&bdev->bd_size_lock);
++>>>>>>> 99473d9db93a (block: remove the call to __invalidate_device in check_disk_size_change)
  }
  
  /**
* Unmerged path fs/block_dev.c
