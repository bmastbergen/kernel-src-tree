nvme: print a warning for when listing active namespaces fails

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Minwoo Im <minwoo.im.dev@gmail.com>
commit f781f3dd6a165d860c29eeb092af8584284e50f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/f781f3dd.failed

During the scan_work, an Identify command is issued to figure out which
namespaces are active.  If this command fails, the nvme driver falls back
to scanning namespaces sequentially.  In this situation, we don't see
any warnings and don't even know whether list-ns command has been failed
or not easiliy.

Printa warning when the Identify command executin fail:

[    1.108399] nvme nvme0: Identify NS List failed (status=0x400b)
[    1.109583] nvme0n1: detected capacity change from 0 to 1048576
[    1.112186] nvme nvme0: Identify Descriptors failed (nsid=2, status=0x4002)
[    1.113929] nvme nvme0: Identify Descriptors failed (nsid=3, status=0x4002)
[    1.116537] nvme nvme0: Identify Descriptors failed (nsid=4, status=0x4002)
...

	Signed-off-by: Minwoo Im <minwoo.im.dev@gmail.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit f781f3dd6a165d860c29eeb092af8584284e50f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index ffd75aaac70a,279f4aea861b..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -4138,9 -4102,19 +4138,24 @@@ static int nvme_scan_ns_list(struct nvm
  		return -ENOMEM;
  
  	for (;;) {
++<<<<<<< HEAD
 +		ret = nvme_identify_ns_list(ctrl, prev, ns_list);
 +		if (ret)
++=======
+ 		struct nvme_command cmd = {
+ 			.identify.opcode	= nvme_admin_identify,
+ 			.identify.cns		= NVME_ID_CNS_NS_ACTIVE_LIST,
+ 			.identify.nsid		= cpu_to_le32(prev),
+ 		};
+ 
+ 		ret = nvme_submit_sync_cmd(ctrl->admin_q, &cmd, ns_list,
+ 					    NVME_IDENTIFY_DATA_SIZE);
+ 		if (ret) {
+ 			dev_warn(ctrl->device,
+ 				"Identify NS List failed (status=0x%x)\n", ret);
++>>>>>>> f781f3dd6a16 (nvme: print a warning for when listing active namespaces fails)
  			goto free;
+ 		}
  
  		for (i = 0; i < nr_entries; i++) {
  			u32 nsid = le32_to_cpu(ns_list[i]);
* Unmerged path drivers/nvme/host/core.c
