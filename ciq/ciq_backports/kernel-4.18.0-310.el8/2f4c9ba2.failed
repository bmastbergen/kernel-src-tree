nvme: export zoned namespaces without Zone Append support read-only

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Javier González <javier.gonz@samsung.com>
commit 2f4c9ba23b887e7a69a474e9d53f38b5833a2119
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/2f4c9ba2.failed

Allow ZNS NVMe SSDs to present a read-only namespace when append is not
supported, instead of rejecting the namespace directly.

This allows (i) the namespace to be used in read-only mode, which is not
a problem as the append command only affects the write path, and (ii) to
use standard management tools such as nvme-cli to choose a different
format or firmware slot that is compatible with the Linux zoned block
device.

	Signed-off-by: Javier González <javier.gonz@samsung.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 2f4c9ba23b887e7a69a474e9d53f38b5833a2119)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/zns.c
* Unmerged path drivers/nvme/host/zns.c
diff --git a/drivers/nvme/host/core.c b/drivers/nvme/host/core.c
index ffd75aaac70a..9336e0fdfec1 100644
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@ -2102,7 +2102,8 @@ static void nvme_update_disk_info(struct gendisk *disk,
 	nvme_config_discard(disk, ns);
 	nvme_config_write_zeroes(disk, ns);
 
-	if (id->nsattr & NVME_NS_ATTR_RO)
+	if ((id->nsattr & NVME_NS_ATTR_RO) ||
+	    test_bit(NVME_NS_FORCE_RO, &ns->flags))
 		set_disk_ro(disk, true);
 	else
 		set_disk_ro(disk, false);
diff --git a/drivers/nvme/host/nvme.h b/drivers/nvme/host/nvme.h
index 5de1e782dd5d..fd9be7830421 100644
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@ -436,6 +436,7 @@ struct nvme_ns {
 #define NVME_NS_REMOVING	0
 #define NVME_NS_DEAD     	1
 #define NVME_NS_ANA_PENDING	2
+#define NVME_NS_FORCE_RO	3
 
 	struct nvme_fault_inject fault_inject;
 
* Unmerged path drivers/nvme/host/zns.c
