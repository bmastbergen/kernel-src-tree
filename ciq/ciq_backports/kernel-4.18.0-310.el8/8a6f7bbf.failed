aoe: don't call set_capacity from irq context

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 8a6f7bbf29d1d61d3ff18f0a0feead9f287c9b14
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/8a6f7bbf.failed

Updating the block device size from irq context can lead to torn
writes of the 64-bit value, and prevents us from using normal
process context locking primitives to serialize access to the 64-bit
nr_sectors value.  Defer the set_capacity to the already existing
workqueue handler, where it can be merged with the update of the
block device size by using set_capacity_and_notify.  As an extra
bonus this also adds proper uevent notifications for the resize.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 8a6f7bbf29d1d61d3ff18f0a0feead9f287c9b14)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/aoe/aoecmd.c
diff --cc drivers/block/aoe/aoecmd.c
index 3cf9bc5d8d95,ac720bdcd983..000000000000
--- a/drivers/block/aoe/aoecmd.c
+++ b/drivers/block/aoe/aoecmd.c
@@@ -897,14 -895,8 +895,19 @@@ aoecmd_sleepwork(struct work_struct *wo
  		aoeblk_gdalloc(d);
  
  	if (d->flags & DEVFL_NEWSIZE) {
++<<<<<<< HEAD
 +		ssize = get_capacity(d->gd);
 +		bd = bdget_disk(d->gd, 0);
 +		if (bd) {
 +			inode_lock(bd->bd_inode);
 +			i_size_write(bd->bd_inode, (loff_t)ssize<<9);
 +			inode_unlock(bd->bd_inode);
 +			bdput(bd);
 +		}
++=======
+ 		set_capacity_and_notify(d->gd, d->ssize);
+ 
++>>>>>>> 8a6f7bbf29d1 (aoe: don't call set_capacity from irq context)
  		spin_lock_irq(&d->lock);
  		d->flags |= DEVFL_UP;
  		d->flags &= ~DEVFL_NEWSIZE;
* Unmerged path drivers/block/aoe/aoecmd.c
