selftests/bpf: Fix test_vmlinux test to use bpf_probe_read_user()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 02f47faa25db134f6043fb6b12a68b5d4c980bb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/02f47faa.failed

The test is reading UAPI kernel structure from user-space. So it doesn't need
CO-RE relocations and has to use bpf_probe_read_user().

Fixes: acbd06206bbb ("selftests/bpf: Add vmlinux.h selftest exercising tracing of syscalls")
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200818213356.2629020-6-andriin@fb.com
(cherry picked from commit 02f47faa25db134f6043fb6b12a68b5d4c980bb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/progs/test_vmlinux.c
diff --cc tools/testing/selftests/bpf/progs/test_vmlinux.c
index b0de223e083a,e9dfa0313d1b..000000000000
--- a/tools/testing/selftests/bpf/progs/test_vmlinux.c
+++ b/tools/testing/selftests/bpf/progs/test_vmlinux.c
@@@ -18,7 -18,8 +18,12 @@@ bool fentry_called = false
  SEC("tp/syscalls/sys_enter_nanosleep")
  int handle__tp(struct trace_event_raw_sys_enter *args)
  {
++<<<<<<< HEAD
 +	struct timespec *ts;
++=======
+ 	struct __kernel_timespec *ts;
+ 	long tv_nsec;
++>>>>>>> 02f47faa25db (selftests/bpf: Fix test_vmlinux test to use bpf_probe_read_user())
  
  	if (args->id != __NR_nanosleep)
  		return 0;
@@@ -34,7 -36,8 +40,12 @@@
  SEC("raw_tp/sys_enter")
  int BPF_PROG(handle__raw_tp, struct pt_regs *regs, long id)
  {
++<<<<<<< HEAD
 +	struct timespec *ts;
++=======
+ 	struct __kernel_timespec *ts;
+ 	long tv_nsec;
++>>>>>>> 02f47faa25db (selftests/bpf: Fix test_vmlinux test to use bpf_probe_read_user())
  
  	if (id != __NR_nanosleep)
  		return 0;
@@@ -50,7 -54,8 +62,12 @@@
  SEC("tp_btf/sys_enter")
  int BPF_PROG(handle__tp_btf, struct pt_regs *regs, long id)
  {
++<<<<<<< HEAD
 +	struct timespec *ts;
++=======
+ 	struct __kernel_timespec *ts;
+ 	long tv_nsec;
++>>>>>>> 02f47faa25db (selftests/bpf: Fix test_vmlinux test to use bpf_probe_read_user())
  
  	if (id != __NR_nanosleep)
  		return 0;
* Unmerged path tools/testing/selftests/bpf/progs/test_vmlinux.c
