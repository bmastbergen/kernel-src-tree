nvme: opencode revalidate_disk in nvme_validate_ns

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit b55d3d21a05d5558440515c1a73d87bc4b1fa17c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/b55d3d21.failed

Keep control in the NVMe driver instead of going through an indirect
call back into ->revalidate_disk.  Also reorder the function a bit to be
easier to follow with the additional code.

And now that we have removed all callers of revalidate_disk() in the nvme
code, ->revalidate_disk is only called from the open code when first
opening the device.  Which is of course totally pointless as we have
a valid size since the initial scan, and will get an updated view
through the asynchronous notifiation everytime the size changes.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Josef Bacik <josef@toxicpanda.com>
	Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit b55d3d21a05d5558440515c1a73d87bc4b1fa17c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index b9d19e246c73,ea1fa41fbba8..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -2314,7 -2352,7 +2314,11 @@@ static const struct block_device_operat
  	.open		= nvme_open,
  	.release	= nvme_release,
  	.getgeo		= nvme_getgeo,
++<<<<<<< HEAD
 +	.revalidate_disk= nvme_revalidate_disk,
++=======
+ 	.report_zones	= nvme_report_zones,
++>>>>>>> b55d3d21a05d (nvme: opencode revalidate_disk in nvme_validate_ns)
  	.pr_ops		= &nvme_pr_ops,
  };
  
* Unmerged path drivers/nvme/host/core.c
