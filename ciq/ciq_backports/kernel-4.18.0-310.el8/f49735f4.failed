cpuidle: record state entry rejection statistics

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Lina Iyer <ilina@codeaurora.org>
commit f49735f4978f479b0de4f50ab217d5a56bc83c55
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/f49735f4.failed

CPUs may fail to enter the chosen idle state if there was a
pending interrupt, causing the cpuidle driver to return an error
value.

Record that and export it via sysfs along with the other idle state
statistics.

This could prove useful in understanding behavior of the governor
and the system during usecases that involve multiple CPUs.

	Signed-off-by: Lina Iyer <ilina@codeaurora.org>
[ rjw: Changelog and documentation edits ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit f49735f4978f479b0de4f50ab217d5a56bc83c55)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpuidle/cpuidle.c
#	include/linux/cpuidle.h
diff --cc drivers/cpuidle/cpuidle.c
index c3cf7631753d,0ed5030b89d6..000000000000
--- a/drivers/cpuidle/cpuidle.c
+++ b/drivers/cpuidle/cpuidle.c
@@@ -294,7 -306,8 +294,12 @@@ int cpuidle_enter_state(struct cpuidle_
  			}
  		}
  	} else {
++<<<<<<< HEAD
 +		dev->rh_cpuidle_dev.last_residency_ns = 0;
++=======
+ 		dev->last_residency_ns = 0;
+ 		dev->states_usage[index].rejected++;
++>>>>>>> f49735f4978f (cpuidle: record state entry rejection statistics)
  	}
  
  	return entered_state;
diff --cc include/linux/cpuidle.h
index 0a9c462d480c,ed0da0e58e8b..000000000000
--- a/include/linux/cpuidle.h
+++ b/include/linux/cpuidle.h
@@@ -36,7 -35,10 +36,14 @@@ struct cpuidle_driver
  struct cpuidle_state_usage {
  	unsigned long long	disable;
  	unsigned long long	usage;
++<<<<<<< HEAD
 +	RH_KABI_REPLACE(unsigned long long      time, u64 time_ns)
++=======
+ 	u64			time_ns;
+ 	unsigned long long	above; /* Number of times it's been too deep */
+ 	unsigned long long	below; /* Number of times it's been too shallow */
+ 	unsigned long long	rejected; /* Number of times idle entry was rejected */
++>>>>>>> f49735f4978f (cpuidle: record state entry rejection statistics)
  #ifdef CONFIG_SUSPEND
  	unsigned long long	s2idle_usage;
  	unsigned long long	s2idle_time; /* in US */
diff --git a/Documentation/admin-guide/pm/cpuidle.rst b/Documentation/admin-guide/pm/cpuidle.rst
index ad59914a6c58..84c9f3c335af 100644
--- a/Documentation/admin-guide/pm/cpuidle.rst
+++ b/Documentation/admin-guide/pm/cpuidle.rst
@@ -529,6 +529,10 @@ object corresponding to it, as follows:
 	Total number of times the hardware has been asked by the given CPU to
 	enter this idle state.
 
+``rejected``
+	Total number of times a request to enter this idle state on the given
+	CPU was rejected.
+
 The :file:`desc` and :file:`name` files both contain strings.  The difference
 between them is that the name is expected to be more concise, while the
 description may be longer and it may contain white space or special characters.
@@ -573,6 +577,11 @@ particular case.  For these reasons, the only reliable way to find out how
 much time has been spent by the hardware in different idle states supported by
 it is to use idle state residency counters in the hardware, if available.
 
+Generally, an interrupt received when trying to enter an idle state causes the
+idle state entry request to be rejected, in which case the ``CPUIdle`` driver
+may return an error code to indicate that this was the case. The :file:`usage`
+and :file:`rejected` files report the number of times the given idle state
+was entered successfully or rejected, respectively.
 
 .. _cpu-pm-qos:
 
* Unmerged path drivers/cpuidle/cpuidle.c
diff --git a/drivers/cpuidle/sysfs.c b/drivers/cpuidle/sysfs.c
index c69a17cf9022..0e24ce226634 100644
--- a/drivers/cpuidle/sysfs.c
+++ b/drivers/cpuidle/sysfs.c
@@ -273,6 +273,7 @@ define_show_state_time_function(exit_latency)
 define_show_state_time_function(target_residency)
 define_show_state_function(power_usage)
 define_show_state_ull_function(usage)
+define_show_state_ull_function(rejected)
 define_show_state_str_function(name)
 define_show_state_str_function(desc)
 define_show_state_rh_ull_function(above)
@@ -329,6 +330,7 @@ define_one_state_ro(latency, show_state_exit_latency);
 define_one_state_ro(residency, show_state_target_residency);
 define_one_state_ro(power, show_state_power_usage);
 define_one_state_ro(usage, show_state_usage);
+define_one_state_ro(rejected, show_state_rejected);
 define_one_state_ro(time, show_state_time);
 define_one_state_rw(disable, show_state_disable, store_state_disable);
 define_one_rh_state_ro(above, show_state_above);
@@ -342,6 +344,7 @@ static struct attribute *cpuidle_state_default_attrs[] = {
 	&attr_residency.attr,
 	&attr_power.attr,
 	&attr_usage.attr,
+	&attr_rejected.attr,
 	&attr_time.attr,
 	&attr_disable.attr,
 	&attr_above.attr,
* Unmerged path include/linux/cpuidle.h
