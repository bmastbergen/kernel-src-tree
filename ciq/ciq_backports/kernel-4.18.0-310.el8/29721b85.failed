tick/nohz: Only wake up a single target cpu when kicking a task

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Frederic Weisbecker <frederic@kernel.org>
commit 29721b859217b946bfc001c1644745ed4d7c26cb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/29721b85.failed

When adding a tick dependency to a task, its necessary to
wake up the CPU where the task resides to reevaluate tick
dependencies on that CPU.

However the current code wakes up all nohz_full CPUs, which
is unnecessary.

Switch to waking up a single CPU, by using ordering of writes
to task->cpu and task->tick_dep_mask.

[ mingo: Minor readability edit. ]

	Suggested-by: Peter Zijlstra <peterz@infradead.org>
	Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
	Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Peter Zijlstra <peterz@infradead.org>
Link: https://lore.kernel.org/r/20210512232924.150322-7-frederic@kernel.org
(cherry picked from commit 29721b859217b946bfc001c1644745ed4d7c26cb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/time/tick-sched.c
diff --cc kernel/time/tick-sched.c
index 04111cf90d5e,b90ca6635ea4..000000000000
--- a/kernel/time/tick-sched.c
+++ b/kernel/time/tick-sched.c
@@@ -350,11 -429,8 +375,16 @@@ EXPORT_SYMBOL_GPL(tick_nohz_dep_clear_c
   */
  void tick_nohz_dep_set_task(struct task_struct *tsk, enum tick_dep_bits bit)
  {
++<<<<<<< HEAD
 +	/*
 +	 * We could optimize this with just kicking the target running the task
 +	 * if that noise matters for nohz full users.
 +	 */
 +	tick_nohz_dep_set_all(&tsk->tick_dep_mask, bit);
++=======
+ 	if (!atomic_fetch_or(BIT(bit), &tsk->tick_dep_mask))
+ 		tick_nohz_kick_task(tsk);
++>>>>>>> 29721b859217 (tick/nohz: Only wake up a single target cpu when kicking a task)
  }
  EXPORT_SYMBOL_GPL(tick_nohz_dep_set_task);
  
* Unmerged path kernel/time/tick-sched.c
