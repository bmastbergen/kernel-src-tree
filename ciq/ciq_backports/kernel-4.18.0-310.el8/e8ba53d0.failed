selinux: access policycaps with READ_ONCE/WRITE_ONCE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Stephen Smalley <stephen.smalley.work@gmail.com>
commit e8ba53d0023a76ba0f50e6ee3e6288c5442f9d33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/e8ba53d0.failed

Use READ_ONCE/WRITE_ONCE for all accesses to the
selinux_state.policycaps booleans to prevent compiler
mischief.

	Signed-off-by: Stephen Smalley <stephen.smalley.work@gmail.com>
	Signed-off-by: Paul Moore <paul@paul-moore.com>
(cherry picked from commit e8ba53d0023a76ba0f50e6ee3e6288c5442f9d33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/selinux/include/security.h
diff --cc security/selinux/include/security.h
index 86f0b9d2ff00,0ce2ef684ed0..000000000000
--- a/security/selinux/include/security.h
+++ b/security/selinux/include/security.h
@@@ -214,15 -199,26 +214,25 @@@ static inline bool selinux_policycap_nn
  {
  	struct selinux_state *state = &selinux_state;
  
- 	return state->policycap[POLICYDB_CAPABILITY_NNP_NOSUID_TRANSITION];
+ 	return READ_ONCE(state->policycap[POLICYDB_CAPABILITY_NNP_NOSUID_TRANSITION]);
  }
  
++<<<<<<< HEAD
++=======
+ static inline bool selinux_policycap_genfs_seclabel_symlinks(void)
+ {
+ 	struct selinux_state *state = &selinux_state;
+ 
+ 	return READ_ONCE(state->policycap[POLICYDB_CAPABILITY_GENFS_SECLABEL_SYMLINKS]);
+ }
+ 
++>>>>>>> e8ba53d0023a (selinux: access policycaps with READ_ONCE/WRITE_ONCE)
  int security_mls_enabled(struct selinux_state *state);
  int security_load_policy(struct selinux_state *state,
 -			void *data, size_t len,
 -			struct selinux_policy **newpolicyp);
 -void selinux_policy_commit(struct selinux_state *state,
 -			struct selinux_policy *newpolicy);
 -void selinux_policy_cancel(struct selinux_state *state,
 -			struct selinux_policy *policy);
 +			 void *data, size_t len);
  int security_read_policy(struct selinux_state *state,
  			 void **data, size_t *len);
 +size_t security_policydb_len(struct selinux_state *state);
  
  int security_policycap_supported(struct selinux_state *state,
  				 unsigned int req_cap);
* Unmerged path security/selinux/include/security.h
diff --git a/security/selinux/ss/services.c b/security/selinux/ss/services.c
index d3cf273eeb92..39ebe9fe0655 100644
--- a/security/selinux/ss/services.c
+++ b/security/selinux/ss/services.c
@@ -2104,7 +2104,8 @@ static void security_load_policycaps(struct selinux_state *state)
 	struct ebitmap_node *node;
 
 	for (i = 0; i < ARRAY_SIZE(state->policycap); i++)
-		state->policycap[i] = ebitmap_get_bit(&p->policycaps, i);
+		WRITE_ONCE(state->policycap[i],
+			ebitmap_get_bit(&p->policycaps, i));
 
 	for (i = 0; i < ARRAY_SIZE(selinux_policycap_names); i++)
 		pr_info("SELinux:  policy capability %s=%d\n",
