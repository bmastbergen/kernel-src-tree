KVM: x86: move kvm_inject_gp up from kvm_set_xcr to callers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit bbefd4fc8f590e765b455ef0a4deb6c105fee305
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/bbefd4fc.failed

Push the injection of #GP up to the callers, so that they can just use
kvm_complete_insn_gp.

	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit bbefd4fc8f590e765b455ef0a4deb6c105fee305)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 392fe6b7c558,912fc418ce99..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -976,12 -986,10 +976,19 @@@ static int __kvm_set_xcr(struct kvm_vcp
  
  int kvm_set_xcr(struct kvm_vcpu *vcpu, u32 index, u64 xcr)
  {
++<<<<<<< HEAD
 +	if (kvm_x86_ops.get_cpl(vcpu) != 0 ||
 +	    __kvm_set_xcr(vcpu, index, xcr)) {
 +		kvm_inject_gp(vcpu, 0);
 +		return 1;
 +	}
 +	return 0;
++=======
+ 	if (static_call(kvm_x86_get_cpl)(vcpu) == 0)
+ 		return __kvm_set_xcr(vcpu, index, xcr);
+ 
+ 	return 1;
++>>>>>>> bbefd4fc8f59 (KVM: x86: move kvm_inject_gp up from kvm_set_xcr to callers)
  }
  EXPORT_SYMBOL_GPL(kvm_set_xcr);
  
diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index acf7c344d073..bbc2cff98960 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -2306,11 +2306,8 @@ static int xsetbv_interception(struct vcpu_svm *svm)
 	u64 new_bv = kvm_read_edx_eax(&svm->vcpu);
 	u32 index = kvm_rcx_read(&svm->vcpu);
 
-	if (kvm_set_xcr(&svm->vcpu, index, new_bv) == 0) {
-		return kvm_skip_emulated_instruction(&svm->vcpu);
-	}
-
-	return 1;
+	int err = kvm_set_xcr(&svm->vcpu, index, new_bv);
+	return kvm_complete_insn_gp(&svm->vcpu, err);
 }
 
 static int rdpru_interception(struct vcpu_svm *svm)
diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index d6b29b2dce02..5a4a70c2cc40 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -5220,9 +5220,8 @@ static int handle_xsetbv(struct kvm_vcpu *vcpu)
 	u64 new_bv = kvm_read_edx_eax(vcpu);
 	u32 index = kvm_rcx_read(vcpu);
 
-	if (kvm_set_xcr(vcpu, index, new_bv) == 0)
-		return kvm_skip_emulated_instruction(vcpu);
-	return 1;
+	int err = kvm_set_xcr(vcpu, index, new_bv);
+	return kvm_complete_insn_gp(vcpu, err);
 }
 
 static int handle_apic_access(struct kvm_vcpu *vcpu)
* Unmerged path arch/x86/kvm/x86.c
