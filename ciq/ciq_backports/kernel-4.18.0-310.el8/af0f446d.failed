nvme: remove nvme_update_formats

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit af0f446d2cad06bd678e9b912f7653b63d87fd6b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/af0f446d.failed

Now that the queue is frozen before updating ->lba_shift we can't hit the
invalid references mentioned in the comment any more.  More importantly
this code would not have helped us if the format was changed by another
controller or through implementation defined back channels.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Keith Busch <kbusch@kernel.org>
	Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
(cherry picked from commit af0f446d2cad06bd678e9b912f7653b63d87fd6b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 61e952b9cd65,f19f6c7c5b12..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -89,7 -89,6 +89,10 @@@ static dev_t nvme_chr_devt
  static struct class *nvme_class;
  static struct class *nvme_subsys_class;
  
++<<<<<<< HEAD
 +static int nvme_revalidate_disk(struct gendisk *disk);
++=======
++>>>>>>> af0f446d2cad (nvme: remove nvme_update_formats)
  static void nvme_put_subsystem(struct nvme_subsystem *subsys);
  static void nvme_remove_invalid_namespaces(struct nvme_ctrl *ctrl,
  					   unsigned nsid);
@@@ -1016,36 -1019,9 +1019,32 @@@ static u32 nvme_passthru_start(struct n
  	return effects;
  }
  
++<<<<<<< HEAD
 +static void nvme_update_formats(struct nvme_ctrl *ctrl, u32 *effects)
 +{
 +	struct nvme_ns *ns;
 +
 +	down_read(&ctrl->namespaces_rwsem);
 +	list_for_each_entry(ns, &ctrl->namespaces, list)
 +		if (nvme_revalidate_disk(ns->disk))
 +			nvme_set_queue_dying(ns);
 +		else if (blk_queue_is_zoned(ns->disk->queue)) {
 +			/*
 +			 * IO commands are required to fully revalidate a zoned
 +			 * device. Force the command effects to trigger rescan
 +			 * work so report zones can run in a context with
 +			 * unfrozen IO queues.
 +			 */
 +			*effects |= NVME_CMD_EFFECTS_NCC;
 +		}
 +	up_read(&ctrl->namespaces_rwsem);
 +}
 +
++=======
++>>>>>>> af0f446d2cad (nvme: remove nvme_update_formats)
  static void nvme_passthru_end(struct nvme_ctrl *ctrl, u32 effects)
  {
- 	/*
- 	 * Revalidate LBA changes prior to unfreezing. This is necessary to
- 	 * prevent memory corruption if a logical block size was changed by
- 	 * this command.
- 	 */
- 	if (effects & NVME_CMD_EFFECTS_LBCC)
- 		nvme_update_formats(ctrl, &effects);
- 	if (effects & (NVME_CMD_EFFECTS_LBCC | NVME_CMD_EFFECTS_CSE_MASK)) {
+ 	if (effects & NVME_CMD_EFFECTS_CSE_MASK) {
  		nvme_unfreeze(ctrl);
  		nvme_mpath_unfreeze(ctrl->subsys);
  		mutex_unlock(&ctrl->subsys->lock);
* Unmerged path drivers/nvme/host/core.c
