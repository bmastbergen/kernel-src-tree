loop: let set_capacity_revalidate_and_notify update the bdev size

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 3b4f85d02a4bd85cbea999a064235a47694bbb7b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/3b4f85d0.failed

There is no good reason to call revalidate_disk_size separately.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 3b4f85d02a4bd85cbea999a064235a47694bbb7b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/loop.c
diff --cc drivers/block/loop.c
index c3031445bf00,fcc5e32f0993..000000000000
--- a/drivers/block/loop.c
+++ b/drivers/block/loop.c
@@@ -251,12 -251,8 +251,17 @@@ loop_validate_block_size(unsigned shor
   */
  static void loop_set_size(struct loop_device *lo, loff_t size)
  {
++<<<<<<< HEAD
 +	struct block_device *bdev = lo->lo_device;
 +
 +	bd_set_size(bdev, size << SECTOR_SHIFT);
 +
 +	if (!set_capacity_revalidate_and_notify(lo->lo_disk, size, false))
 +		kobject_uevent(&disk_to_dev(bdev->bd_disk)->kobj, KOBJ_CHANGE);
++=======
+ 	if (!set_capacity_revalidate_and_notify(lo->lo_disk, size, true))
+ 		kobject_uevent(&disk_to_dev(lo->lo_disk)->kobj, KOBJ_CHANGE);
++>>>>>>> 3b4f85d02a4b (loop: let set_capacity_revalidate_and_notify update the bdev size)
  }
  
  static inline int
* Unmerged path drivers/block/loop.c
