dasd: implement ->set_read_only to hook into BLKROSET processing

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 2c1b6ec170423bb032e825d4d9b2780bac4ce1a9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/2c1b6ec1.failed

Implement the ->set_read_only method instead of parsing the actual
ioctl command.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Stefan Haberland <sth@linux.ibm.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 2c1b6ec170423bb032e825d4d9b2780bac4ce1a9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/block/dasd_ioctl.c
diff --cc drivers/s390/block/dasd_ioctl.c
index 9b7782395c37,3359559517bf..000000000000
--- a/drivers/s390/block/dasd_ioctl.c
+++ b/drivers/s390/block/dasd_ioctl.c
@@@ -536,19 -532,15 +536,25 @@@ static int dasd_ioctl_information(struc
  /*
   * Set read only
   */
- static int
- dasd_ioctl_set_ro(struct block_device *bdev, void __user *argp)
+ int dasd_set_read_only(struct block_device *bdev, bool ro)
  {
  	struct dasd_device *base;
- 	int intval, rc;
+ 	int rc;
  
++<<<<<<< HEAD
 +	if (!capable(CAP_SYS_ADMIN))
 +		return -EACCES;
 +	if (bdev != bdev->bd_contains)
 +		// ro setting is not allowed for partitions
 +		return -EINVAL;
 +	if (get_user(intval, (int __user *)argp))
 +		return -EFAULT;
++=======
+ 	/* do not manipulate hardware state for partitions */
+ 	if (bdev_is_partition(bdev))
+ 		return 0;
+ 
++>>>>>>> 2c1b6ec17042 (dasd: implement ->set_read_only to hook into BLKROSET processing)
  	base = dasd_device_from_gendisk(bdev->bd_disk);
  	if (!base)
  		return -ENODEV;
diff --git a/drivers/s390/block/dasd.c b/drivers/s390/block/dasd.c
index 2a2a7a68e39a..18d1794ed133 100644
--- a/drivers/s390/block/dasd.c
+++ b/drivers/s390/block/dasd.c
@@ -3404,6 +3404,7 @@ dasd_device_operations = {
 	.ioctl		= dasd_ioctl,
 	.compat_ioctl	= dasd_ioctl,
 	.getgeo		= dasd_getgeo,
+	.set_read_only	= dasd_set_read_only,
 };
 
 /*******************************************************************************
diff --git a/drivers/s390/block/dasd_int.h b/drivers/s390/block/dasd_int.h
index d4558c81b383..35e75e575dc3 100644
--- a/drivers/s390/block/dasd_int.h
+++ b/drivers/s390/block/dasd_int.h
@@ -889,7 +889,8 @@ int dasd_scan_partitions(struct dasd_block *);
 void dasd_destroy_partitions(struct dasd_block *);
 
 /* externals in dasd_ioctl.c */
-int  dasd_ioctl(struct block_device *, fmode_t, unsigned int, unsigned long);
+int dasd_ioctl(struct block_device *, fmode_t, unsigned int, unsigned long);
+int dasd_set_read_only(struct block_device *bdev, bool ro);
 
 /* externals in dasd_proc.c */
 int dasd_proc_init(void);
* Unmerged path drivers/s390/block/dasd_ioctl.c
