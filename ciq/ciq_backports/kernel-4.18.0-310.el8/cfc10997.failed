KVM: x86/mmu: Refactor yield safe root iterator

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Ben Gardon <bgardon@google.com>
commit cfc109979b3c879ea9df05e048bb83615964f3e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/cfc10997.failed

Refactor the yield safe TDP MMU root iterator to be more amenable to
changes in future commits which will allow it to be used under the MMU
lock in read mode. Currently the iterator requires a complicated dance
between the helper functions and different parts of the for loop which
makes it hard to reason about. Moving all the logic into a single function
simplifies the iterator substantially.

	Signed-off-by: Ben Gardon <bgardon@google.com>
Message-Id: <20210401233736.638171-6-bgardon@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit cfc109979b3c879ea9df05e048bb83615964f3e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu/tdp_mmu.c
diff --cc arch/x86/kvm/mmu/tdp_mmu.c
index 8ea3af0e948d,81688b41ef5b..000000000000
--- a/arch/x86/kvm/mmu/tdp_mmu.c
+++ b/arch/x86/kvm/mmu/tdp_mmu.c
@@@ -97,14 -105,17 +105,23 @@@ static struct kvm_mmu_page *tdp_mmu_nex
   * if exiting the loop early, the caller must drop the reference to the most
   * recent root. (Unless keeping a live reference is desirable.)
   */
++<<<<<<< HEAD
 +#define for_each_tdp_mmu_root_yield_safe(_kvm, _root)				\
 +	for (_root = list_first_entry(&_kvm->arch.tdp_mmu_roots,	\
 +				      typeof(*_root), link);		\
 +	     tdp_mmu_next_root_valid(_kvm, _root);			\
 +	     _root = tdp_mmu_next_root(_kvm, _root))
++=======
+ #define for_each_tdp_mmu_root_yield_safe(_kvm, _root, _as_id)		\
+ 	for (_root = tdp_mmu_next_root(_kvm, NULL);		\
+ 	     _root;						\
+ 	     _root = tdp_mmu_next_root(_kvm, _root))		\
+ 		if (kvm_mmu_page_as_id(_root) != _as_id) {	\
+ 		} else
++>>>>>>> cfc109979b3c (KVM: x86/mmu: Refactor yield safe root iterator)
  
 -#define for_each_tdp_mmu_root(_kvm, _root, _as_id)			\
 -	list_for_each_entry(_root, &_kvm->arch.tdp_mmu_roots, link)	\
 -		if (kvm_mmu_page_as_id(_root) != _as_id) {		\
 -		} else
 +#define for_each_tdp_mmu_root(_kvm, _root)				\
 +	list_for_each_entry(_root, &_kvm->arch.tdp_mmu_roots, link)
  
  static union kvm_mmu_page_role page_role_for_level(struct kvm_vcpu *vcpu,
  						   int level)
* Unmerged path arch/x86/kvm/mmu/tdp_mmu.c
