block: remove the NULL bdev check in bdev_read_only

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 6f0d9689b670bc9f9640ff87b3f9226b7806dea2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/6f0d9689.failed

Only a single caller can end up in bdev_read_only, so move the check
there.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Ming Lei <ming.lei@redhat.com>
	Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 6f0d9689b670bc9f9640ff87b3f9226b7806dea2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/genhd.c
diff --cc block/genhd.c
index 18f6483e37be,484a474648d5..000000000000
--- a/block/genhd.c
+++ b/block/genhd.c
@@@ -1961,32 -1657,10 +1961,35 @@@ EXPORT_SYMBOL(set_disk_ro)
  
  int bdev_read_only(struct block_device *bdev)
  {
++<<<<<<< HEAD
 +	if (!bdev)
 +		return 0;
 +	return bdev->bd_part->policy;
++=======
+ 	return bdev->bd_read_only;
++>>>>>>> 6f0d9689b670 (block: remove the NULL bdev check in bdev_read_only)
  }
- 
  EXPORT_SYMBOL(bdev_read_only);
  
 +int invalidate_partition(struct gendisk *disk, int partno)
 +{
 +	int res = 0;
 +	struct block_device *bdev = bdget_disk(disk, partno);
 +	if (bdev) {
 +		fsync_bdev(bdev);
 +		res = __invalidate_device(bdev, true);
 +		/*
 +		 * Unhash the bdev inode for this device so that it gets evicted as soon
 +		 * as last inode reference is dropped.
 +		 */
 +		remove_inode_hash(bdev->bd_inode);
 +		bdput(bdev);
 +	}
 +	return res;
 +}
 +
 +EXPORT_SYMBOL(invalidate_partition);
 +
  /*
   * Disk events - monitor disk events like media change and eject request.
   */
* Unmerged path block/genhd.c
diff --git a/fs/super.c b/fs/super.c
index d26293ac13b6..a7add507343f 100644
--- a/fs/super.c
+++ b/fs/super.c
@@ -916,7 +916,8 @@ int reconfigure_super(struct fs_context *fc)
 
 	if (fc->sb_flags_mask & SB_RDONLY) {
 #ifdef CONFIG_BLOCK
-		if (!(fc->sb_flags & SB_RDONLY) && bdev_read_only(sb->s_bdev))
+		if (!(fc->sb_flags & SB_RDONLY) && sb->s_bdev &&
+		    bdev_read_only(sb->s_bdev))
 			return -EACCES;
 #endif
 
