nvme: remove the unused status argument from nvme_trace_bio_complete

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Max Gurtovoy <mgurtovoy@nvidia.com>
commit 2b59787a223b79228fed9ade1bf6936194ddb8cd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/2b59787a.failed

The only used argument in this function is the "req".

	Signed-off-by: Max Gurtovoy <mgurtovoy@nvidia.com>
	Reviewed-by: Minwoo Im <minwoo.im.dev@gmail.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 2b59787a223b79228fed9ade1bf6936194ddb8cd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 64d48a7fb697,f320273fc672..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -331,9 -321,16 +331,20 @@@ static inline enum nvme_disposition nvm
  	return RETRY;
  }
  
 -static inline void nvme_end_req(struct request *req)
 +static inline void __nvme_end_req(struct request *req, blk_status_t status)
  {
++<<<<<<< HEAD
 +	nvme_trace_bio_complete(req, status);
++=======
+ 	blk_status_t status = nvme_error_status(nvme_req(req)->status);
+ 
+ 	if (IS_ENABLED(CONFIG_BLK_DEV_ZONED) &&
+ 	    req_op(req) == REQ_OP_ZONE_APPEND)
+ 		req->__sector = nvme_lba_to_sect(req->q->queuedata,
+ 			le64_to_cpu(nvme_req(req)->result.u64));
+ 
+ 	nvme_trace_bio_complete(req);
++>>>>>>> 2b59787a223b (nvme: remove the unused status argument from nvme_trace_bio_complete)
  	blk_mq_end_request(req, status);
  }
  
* Unmerged path drivers/nvme/host/core.c
diff --git a/drivers/nvme/host/nvme.h b/drivers/nvme/host/nvme.h
index 5de1e782dd5d..e58bd7dbd4fe 100644
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@ -655,8 +655,7 @@ static inline void nvme_mpath_check_last_path(struct nvme_ns *ns)
 		kblockd_schedule_work(&head->requeue_work);
 }
 
-static inline void nvme_trace_bio_complete(struct request *req,
-        blk_status_t status)
+static inline void nvme_trace_bio_complete(struct request *req)
 {
 	struct nvme_ns *ns = req->q->queuedata;
 
@@ -724,8 +723,7 @@ static inline void nvme_mpath_clear_ctrl_paths(struct nvme_ctrl *ctrl)
 static inline void nvme_mpath_check_last_path(struct nvme_ns *ns)
 {
 }
-static inline void nvme_trace_bio_complete(struct request *req,
-        blk_status_t status)
+static inline void nvme_trace_bio_complete(struct request *req)
 {
 }
 static inline int nvme_mpath_init(struct nvme_ctrl *ctrl,
