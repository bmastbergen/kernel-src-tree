RDMA/siw,rxe: Make emulated devices virtual in the device tree

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Jason Gunthorpe <jgg@nvidia.com>
commit a9d2e9ae953f0ddd0327479c81a085adaa76d903
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/a9d2e9ae.failed

This moves siw and rxe to be virtual devices in the device tree:

lrwxrwxrwx 1 root root 0 Nov  6 13:55 /sys/class/infiniband/rxe0 -> ../../devices/virtual/infiniband/rxe0/

Previously they were trying to parent themselves to the physical device of
their attached netdev, which doesn't make alot of sense.

My hope is this will solve some weird syzkaller hits related to sysfs as
it could be possible that the parent of a netdev is another netdev, eg
under bonding or some other syzkaller found netdev configuration.

Nesting a ib_device under anything but a physical device is going to cause
inconsistencies in sysfs during destructions.

Link: https://lore.kernel.org/r/0-v1-dcbfc68c4b4a+d6-virtual_dev_jgg@nvidia.com
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit a9d2e9ae953f0ddd0327479c81a085adaa76d903)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rxe/rxe_net.c
#	drivers/infiniband/sw/siw/siw_main.c
diff --cc drivers/infiniband/sw/rxe/rxe_net.c
index 34bef7d8e6b4,c4b06ced30a7..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_net.c
+++ b/drivers/infiniband/sw/rxe/rxe_net.c
@@@ -20,18 -19,6 +20,21 @@@
  
  static struct rxe_recv_sockets recv_sockets;
  
++<<<<<<< HEAD
 +struct device *rxe_dma_device(struct rxe_dev *rxe)
 +{
 +	struct net_device *ndev;
 +
 +	ndev = rxe->ndev;
 +
 +	if (is_vlan_dev(ndev))
 +		ndev = vlan_dev_real_dev(ndev);
 +
 +	return ndev->dev.parent;
 +}
 +
++=======
++>>>>>>> a9d2e9ae953f (RDMA/siw,rxe: Make emulated devices virtual in the device tree)
  int rxe_mcast_add(struct rxe_dev *rxe, union ib_gid *mgid)
  {
  	int err;
diff --cc drivers/infiniband/sw/siw/siw_main.c
index 3b707def889f,ee95cf29179d..000000000000
--- a/drivers/infiniband/sw/siw/siw_main.c
+++ b/drivers/infiniband/sw/siw/siw_main.c
@@@ -381,11 -343,6 +365,14 @@@ static struct siw_device *siw_device_cr
  	 * per physical port.
  	 */
  	base_dev->phys_port_cnt = 1;
++<<<<<<< HEAD
 +	base_dev->dev.parent = parent;
 +	base_dev->dev.dma_ops = &dma_virt_ops;
 +	base_dev->dev.dma_parms = &sdev->dma_parms;
 +	sdev->dma_parms = (struct device_dma_parameters)
 +		{ .max_segment_size = SZ_2G };
++=======
++>>>>>>> a9d2e9ae953f (RDMA/siw,rxe: Make emulated devices virtual in the device tree)
  	base_dev->num_comp_vectors = num_possible_cpus();
  
  	xa_init_flags(&sdev->qp_xa, XA_FLAGS_ALLOC1);
* Unmerged path drivers/infiniband/sw/rxe/rxe_net.c
diff --git a/drivers/infiniband/sw/rxe/rxe_verbs.c b/drivers/infiniband/sw/rxe/rxe_verbs.c
index 6c3189603f41..6a060523d875 100644
--- a/drivers/infiniband/sw/rxe/rxe_verbs.c
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.c
@@ -1111,7 +1111,6 @@ int rxe_register_device(struct rxe_dev *rxe, const char *ibdev_name)
 	dev->node_type = RDMA_NODE_IB_CA;
 	dev->phys_port_cnt = 1;
 	dev->num_comp_vectors = num_possible_cpus();
-	dev->dev.parent = rxe_dma_device(rxe);
 	dev->local_dma_lkey = 0;
 	addrconf_addr_eui48((unsigned char *)&dev->node_guid,
 			    rxe->ndev->dev_addr);
* Unmerged path drivers/infiniband/sw/siw/siw_main.c
