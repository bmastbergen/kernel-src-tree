KVM: introduce KVM_CAP_SET_GUEST_DEBUG2

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 8b13c36493d8cb56fc3b386507873c5412b7108d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/8b13c364.failed

This capability will allow the user to know which KVM_GUESTDBG_* bits
are supported.

	Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
Message-Id: <20210401135451.1004564-3-mlevitsk@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 8b13c36493d8cb56fc3b386507873c5412b7108d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/kvm.h
diff --cc include/uapi/linux/kvm.h
index a9fa79abd23a,727010788eff..000000000000
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@@ -1053,6 -1075,10 +1053,13 @@@ struct kvm_ppc_resize_hpt 
  #define KVM_CAP_X86_MSR_FILTER 189
  #define KVM_CAP_ENFORCE_PV_FEATURE_CPUID 190
  #define KVM_CAP_SYS_HYPERV_CPUID 191
++<<<<<<< HEAD
++=======
+ #define KVM_CAP_DIRTY_LOG_RING 192
+ #define KVM_CAP_X86_BUS_LOCK_EXIT 193
+ #define KVM_CAP_PPC_DAWR1 194
+ #define KVM_CAP_SET_GUEST_DEBUG2 195
++>>>>>>> 8b13c36493d8 (KVM: introduce KVM_CAP_SET_GUEST_DEBUG2)
  
  #ifdef KVM_CAP_IRQ_ROUTING
  
diff --git a/Documentation/virt/kvm/api.rst b/Documentation/virt/kvm/api.rst
index 0a23a80361e7..78679fe0af5d 100644
--- a/Documentation/virt/kvm/api.rst
+++ b/Documentation/virt/kvm/api.rst
@@ -3332,6 +3332,9 @@ indicating the number of supported registers.
 For ppc, the KVM_CAP_PPC_GUEST_DEBUG_SSTEP capability indicates whether
 the single-step debug event (KVM_GUESTDBG_SINGLESTEP) is supported.
 
+Also when supported, KVM_CAP_SET_GUEST_DEBUG2 capability indicates the
+supported KVM_GUESTDBG_* bits in the control field.
+
 When debug events exit the main run loop with the reason
 KVM_EXIT_DEBUG with the kvm_debug_exit_arch part of the kvm_run
 structure containing architecture specific debug information.
* Unmerged path include/uapi/linux/kvm.h
