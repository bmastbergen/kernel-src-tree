sr: use bdev_check_media_change

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit afd35c4f573d7eb1df9dbb7e0af0f4d93bd01f31
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/afd35c4f.failed

Switch to use bdev_check_media_change instead of check_disk_change and
call sr_block_revalidate_disk manually.  Also add an explicit call to
sr_block_revalidate_disk just before disk_add() to ensure we always
read check for a ready unit and read the TOC and then stop wiring up
->revalidate_disk.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit afd35c4f573d7eb1df9dbb7e0af0f4d93bd01f31)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/sr.c
diff --cc drivers/scsi/sr.c
index 5b84cb3167ae,34be94b62523..000000000000
--- a/drivers/scsi/sr.c
+++ b/drivers/scsi/sr.c
@@@ -638,12 -686,10 +640,15 @@@ static const struct block_device_operat
  	.open		= sr_block_open,
  	.release	= sr_block_release,
  	.ioctl		= sr_block_ioctl,
 -#ifdef CONFIG_COMPAT
 -	.compat_ioctl	= sr_block_compat_ioctl,
 -#endif
  	.check_events	= sr_block_check_events,
++<<<<<<< HEAD
 +	.revalidate_disk = sr_block_revalidate_disk,
 +	/* 
 +	 * No compat_ioctl for now because sr_block_ioctl never
 +	 * seems to pass arbitrary ioctls down to host drivers.
 +	 */
++=======
++>>>>>>> afd35c4f573d (sr: use bdev_check_media_change)
  };
  
  static int sr_open(struct cdrom_device_info *cdi, int purpose)
* Unmerged path drivers/scsi/sr.c
