KVM: xen: flush deferred static key before checking it

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit c462f859f895840e7cd4f20f822ad4c6df2db489
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/c462f859.failed

A missing flush would cause the static branch to trigger incorrectly.

	Cc: David Woodhouse <dwmw@amazon.co.uk>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit c462f859f895840e7cd4f20f822ad4c6df2db489)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 5b18614d5081,bfc928495bd4..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -7982,6 -8039,20 +7982,23 @@@ void kvm_arch_exit(void
  	kvm_mmu_module_exit();
  	free_percpu(user_return_msrs);
  	kmem_cache_destroy(x86_fpu_cache);
++<<<<<<< HEAD
++=======
+ 	static_key_deferred_flush(&kvm_xen_enabled);
+ 	WARN_ON(static_branch_unlikely(&kvm_xen_enabled.key));
+ }
+ 
+ static int __kvm_vcpu_halt(struct kvm_vcpu *vcpu, int state, int reason)
+ {
+ 	++vcpu->stat.halt_exits;
+ 	if (lapic_in_kernel(vcpu)) {
+ 		vcpu->arch.mp_state = state;
+ 		return 1;
+ 	} else {
+ 		vcpu->run->exit_reason = reason;
+ 		return 0;
+ 	}
++>>>>>>> c462f859f895 (KVM: xen: flush deferred static key before checking it)
  }
  
  int kvm_vcpu_halt(struct kvm_vcpu *vcpu)
* Unmerged path arch/x86/kvm/x86.c
