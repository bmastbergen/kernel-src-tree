bus: mhi: core: Offload register accesses to the controller

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Jeffrey Hugo <jhugo@codeaurora.org>
commit 45723a44845c90c8e859fd0e2b0bb492322b5d0b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/45723a44.failed

When reading or writing MHI registers, the core assumes that the physical
link is a memory mapped PCI link.  This assumption may not hold for all
MHI devices.  The controller knows what is the physical link (ie PCI, I2C,
SPI, etc), and therefore knows the proper methods to access that link.
The controller can also handle link specific error scenarios, such as
reading -1 when the PCI link went down.

Therefore, it is appropriate that the MHI core requests the controller to
make register accesses on behalf of the core, which abstracts the core
from link specifics, and end up removing an unnecessary assumption.

	Signed-off-by: Jeffrey Hugo <jhugo@codeaurora.org>
	Reviewed-by: Hemant Kumar <hemantk@codeaurora.org>
	Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
	Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
Link: https://lore.kernel.org/r/20200430190555.32741-5-manivannan.sadhasivam@linaro.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 45723a44845c90c8e859fd0e2b0bb492322b5d0b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bus/mhi/core/init.c
#	drivers/bus/mhi/core/internal.h
#	drivers/bus/mhi/core/main.c
#	include/linux/mhi.h
* Unmerged path drivers/bus/mhi/core/init.c
* Unmerged path drivers/bus/mhi/core/internal.h
* Unmerged path drivers/bus/mhi/core/main.c
* Unmerged path include/linux/mhi.h
* Unmerged path drivers/bus/mhi/core/init.c
* Unmerged path drivers/bus/mhi/core/internal.h
* Unmerged path drivers/bus/mhi/core/main.c
* Unmerged path include/linux/mhi.h
