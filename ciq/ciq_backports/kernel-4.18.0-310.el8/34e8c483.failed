scftorture: Add smp_call_function() memory-ordering checks

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Paul E. McKenney <paulmck@kernel.org>
commit 34e8c4837adb579962e528a4f7dd1f75cb120be4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/34e8c483.failed

This commit adds checks for memory misordering across calls to and
returns from smp_call_function() in the case where the caller waits.
Misordering results in a splat.

Note that in contrast to smp_call_function_single(), this code does not
test memory ordering into the handler in the no-wait case because none
of the handlers would be able to free the scf_check structure without
introducing heavy synchronization to work out which was last.

[ paulmck: s/GFP_KERNEL/GFP_ATOMIC/ per kernel test robot feedback. ]
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit 34e8c4837adb579962e528a4f7dd1f75cb120be4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/scftorture.c
* Unmerged path kernel/scftorture.c
* Unmerged path kernel/scftorture.c
