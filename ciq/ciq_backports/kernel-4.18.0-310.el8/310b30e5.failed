nvme: remove the 0 lba_shift check in nvme_update_ns_info

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 310b30e575b1e2b9a569c3582062b79c5a562fb7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/310b30e5.failed

We can no longer reach this code if Identify Namespace failed.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Keith Busch <kbusch@kernel.org>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
(cherry picked from commit 310b30e575b1e2b9a569c3582062b79c5a562fb7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 7c2cc9e85e5d,910198c3e0bb..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -2076,18 -2122,14 +2076,23 @@@ static void nvme_set_chunk_sectors(stru
  	blk_queue_chunk_sectors(ns->queue, iob);
  }
  
 -static int nvme_update_ns_info(struct nvme_ns *ns, struct nvme_id_ns *id)
 +static int __nvme_revalidate_disk(struct gendisk *disk, struct nvme_id_ns *id)
  {
 -	unsigned lbaf = id->flbas & NVME_NS_FLBAS_LBA_MASK;
 +	struct nvme_ns *ns = disk->private_data;
  	struct nvme_ctrl *ctrl = ns->ctrl;
 -	int ret;
  
++<<<<<<< HEAD
 +	/*
 +	 * If identify namespace failed, use default 512 byte block size so
 +	 * block layer can use before failing read/write for 0 capacity.
 +	 */
 +	ns->lba_shift = id->lbaf[id->flbas & NVME_NS_FLBAS_LBA_MASK].ds;
 +	if (ns->lba_shift == 0)
 +		ns->lba_shift = 9;
++=======
+ 	blk_mq_freeze_queue(ns->disk->queue);
+ 	ns->lba_shift = id->lbaf[lbaf].ds;
++>>>>>>> 310b30e575b1 (nvme: remove the 0 lba_shift check in nvme_update_ns_info)
  
  	switch (ns->head->ids.csi) {
  	case NVME_CSI_NVM:
* Unmerged path drivers/nvme/host/core.c
