mm: slub: call account_slab_page() after slab page initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Roman Gushchin <guro@fb.com>
commit 1f3147b49d75b47b6be54a1e6dfa87a4921e1e51
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/1f3147b4.failed

It's convenient to have page->objects initialized before calling into
account_slab_page().  In particular, this information can be used to
pre-alloc the obj_cgroup vector.

Let's call account_slab_page() a bit later, after the initialization of
page->objects.

This commit doesn't bring any functional change, but is required for
further optimizations.

[akpm@linux-foundation.org: undo changes needed by forthcoming mm-memcg-slab-pre-allocate-obj_cgroups-for-slab-caches-with-slab_account.patch]

Link: https://lkml.kernel.org/r/20201110195753.530157-1-guro@fb.com
	Signed-off-by: Roman Gushchin <guro@fb.com>
	Acked-by: Johannes Weiner <hannes@cmpxchg.org>
	Reviewed-by: Shakeel Butt <shakeelb@google.com>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Christoph Lameter <cl@linux.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 1f3147b49d75b47b6be54a1e6dfa87a4921e1e51)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/slub.c
diff --cc mm/slub.c
index 2de43ef10c0a,dc5b42e700b8..000000000000
--- a/mm/slub.c
+++ b/mm/slub.c
@@@ -1766,7 -1771,8 +1763,12 @@@ static struct page *allocate_slab(struc
  
  	page->objects = oo_objects(oo);
  
++<<<<<<< HEAD
 +	order = compound_order(page);
++=======
+ 	account_slab_page(page, oo_order(oo), s);
+ 
++>>>>>>> 1f3147b49d75 (mm: slub: call account_slab_page() after slab page initialization)
  	page->slab_cache = s;
  	__SetPageSlab(page);
  	if (page_is_pfmemalloc(page))
* Unmerged path mm/slub.c
