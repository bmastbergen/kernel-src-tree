kcsan: Add docbook header for data_race()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Paul E. McKenney <paulmck@kernel.org>
commit 7ad900d35b49af5a05f595d2274c32e69e01b055
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/7ad900d3.failed

	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Cc: Marco Elver <elver@google.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
(cherry picked from commit 7ad900d35b49af5a05f595d2274c32e69e01b055)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/compiler.h
diff --cc include/linux/compiler.h
index 444754f35341,c1bdf37571cb..000000000000
--- a/include/linux/compiler.h
+++ b/include/linux/compiler.h
@@@ -359,13 -315,15 +359,22 @@@ unsigned long read_word_at_a_time(cons
  
  #include <linux/kcsan.h>
  
++<<<<<<< HEAD
 +/*
 + * data_race: macro to document that accesses in an expression may conflict with
 + * other concurrent accesses resulting in data races, but the resulting
 + * behaviour is deemed safe regardless.
++=======
+ /**
+  * data_race - mark an expression as containing intentional data races
++>>>>>>> 7ad900d35b49 (kcsan: Add docbook header for data_race())
   *
-  * This macro *does not* affect normal code generation, but is a hint to tooling
-  * that data races here should be ignored.
+  * This data_race() macro is useful for situations in which data races
+  * should be forgiven.  One example is diagnostic code that accesses
+  * shared variables but is not a part of the core synchronization design.
+  *
+  * This macro *does not* affect normal code generation, but is a hint
+  * to tooling that data races here are to be ignored.
   */
  #define data_race(expr)                                                        \
  	({                                                                     \
* Unmerged path include/linux/compiler.h
