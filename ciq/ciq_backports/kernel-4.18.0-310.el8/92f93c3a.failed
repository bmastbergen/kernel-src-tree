nbd: move the task_recv check into nbd_size_update

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 92f93c3a1bf9dc73181dc6566497d16b690cb576
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/92f93c3a.failed

nbd_size_update is about to acquire a few more callers, so lift the check
into the function.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Josef Bacik <josef@toxicpanda.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 92f93c3a1bf9dc73181dc6566497d16b690cb576)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nbd.c
diff --cc drivers/block/nbd.c
index d393d6149779,48054051e281..000000000000
--- a/drivers/block/nbd.c
+++ b/drivers/block/nbd.c
@@@ -294,10 -296,14 +294,18 @@@ static void nbd_size_clear(struct nbd_d
  	}
  }
  
 -static void nbd_size_update(struct nbd_device *nbd)
 +static void nbd_size_update(struct nbd_device *nbd, bool start)
  {
  	struct nbd_config *config = nbd->config;
++<<<<<<< HEAD
 +	struct block_device *bdev = bdget_disk(nbd->disk, 0);
++=======
+ 	sector_t nr_sectors = config->bytesize >> 9;
+ 	struct block_device *bdev;
+ 
+ 	if (!nbd->task_recv)
+ 		return;
++>>>>>>> 92f93c3a1bf9 (nbd: move the task_recv check into nbd_size_update)
  
  	if (config->flags & NBD_FLAG_SEND_TRIM) {
  		nbd->disk->queue->limits.discard_granularity = config->blksize;
@@@ -306,14 -312,14 +314,20 @@@
  	}
  	blk_queue_logical_block_size(nbd->disk->queue, config->blksize);
  	blk_queue_physical_block_size(nbd->disk->queue, config->blksize);
++<<<<<<< HEAD
 +	set_capacity(nbd->disk, config->bytesize >> 9);
++=======
+ 
+ 	set_capacity(nbd->disk, nr_sectors);
+ 	bdev = bdget_disk(nbd->disk, 0);
++>>>>>>> 92f93c3a1bf9 (nbd: move the task_recv check into nbd_size_update)
  	if (bdev) {
 -		if (bdev->bd_disk)
 -			bd_set_nr_sectors(bdev, nr_sectors);
 -		else
 -			set_bit(GD_NEED_PART_SCAN, &nbd->disk->state);
 +		if (bdev->bd_disk) {
 +			bd_set_size(bdev, config->bytesize);
 +			if (start)
 +				set_blocksize(bdev, config->blksize);
 +		} else
 +			bdev->bd_invalidated = 1;
  		bdput(bdev);
  	}
  	kobject_uevent(&nbd_to_dev(nbd)->kobj, KOBJ_CHANGE);
@@@ -325,8 -331,7 +339,12 @@@ static void nbd_size_set(struct nbd_dev
  	struct nbd_config *config = nbd->config;
  	config->blksize = blocksize;
  	config->bytesize = blocksize * nr_blocks;
++<<<<<<< HEAD
 +	if (nbd->task_recv != NULL)
 +		nbd_size_update(nbd, false);
++=======
+ 	nbd_size_update(nbd);
++>>>>>>> 92f93c3a1bf9 (nbd: move the task_recv check into nbd_size_update)
  }
  
  static void nbd_complete_rq(struct request *req)
* Unmerged path drivers/block/nbd.c
