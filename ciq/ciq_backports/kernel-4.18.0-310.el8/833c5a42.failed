virtiofs: clean up error handling in virtio_fs_get_tree()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 833c5a42e28beeefa1f9bd476a63fe8050c1e8ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/833c5a42.failed

Avoid duplicating error cleanup.

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 833c5a42e28beeefa1f9bd476a63fe8050c1e8ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/virtio_fs.c
diff --cc fs/fuse/virtio_fs.c
index 342f1a411d7e,8868ac31a3c0..000000000000
--- a/fs/fuse/virtio_fs.c
+++ b/fs/fuse/virtio_fs.c
@@@ -1422,22 -1420,27 +1422,28 @@@ static int virtio_fs_get_tree(struct fs
  		return -EINVAL;
  	}
  
+ 	err = -ENOMEM;
  	fc = kzalloc(sizeof(struct fuse_conn), GFP_KERNEL);
- 	if (!fc) {
- 		mutex_lock(&virtio_fs_mutex);
- 		virtio_fs_put(fs);
- 		mutex_unlock(&virtio_fs_mutex);
- 		return -ENOMEM;
- 	}
+ 	if (!fc)
+ 		goto out_err;
  
++<<<<<<< HEAD
 +	fuse_conn_init(fc, get_user_ns(current_user_ns()), &virtio_fs_fiq_ops,
 +		       fs);
++=======
+ 	fm = kzalloc(sizeof(struct fuse_mount), GFP_KERNEL);
+ 	if (!fm)
+ 		goto out_err;
+ 
+ 	fuse_conn_init(fc, fm, get_user_ns(current_user_ns()),
+ 		       &virtio_fs_fiq_ops, fs);
++>>>>>>> 833c5a42e28b (virtiofs: clean up error handling in virtio_fs_get_tree())
  	fc->release = fuse_free_conn;
  	fc->delete_stale = true;
 -	fc->auto_submounts = true;
  
 -	fsc->s_fs_info = fm;
 -	sb = sget_fc(fsc, virtio_fs_test_super, set_anon_super_fc);
 -	if (fsc->s_fs_info) {
 -		fuse_conn_put(fc);
 -		kfree(fm);
 -	}
 +	fsc->s_fs_info = fc;
 +	sb = sget_fc(fsc, virtio_fs_test_super, virtio_fs_set_super);
 +	fuse_conn_put(fc);
  	if (IS_ERR(sb))
  		return PTR_ERR(sb);
  
* Unmerged path fs/fuse/virtio_fs.c
