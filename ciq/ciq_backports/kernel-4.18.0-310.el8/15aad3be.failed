KVM: X86: Reset the vcpu->run->flags at the beginning of vcpu_run

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Chenyi Qiang <chenyi.qiang@intel.com>
commit 15aad3be9adb3fb7fba84190a2ce57d66e8b51da
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/15aad3be.failed

Reset the vcpu->run->flags at the beginning of kvm_arch_vcpu_ioctl_run.
It can avoid every thunk of code that needs to set the flag clear it,
which increases the odds of missing a case and ending up with a flag in
an undefined state.

	Signed-off-by: Chenyi Qiang <chenyi.qiang@intel.com>
Message-Id: <20201106090315.18606-3-chenyi.qiang@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 15aad3be9adb3fb7fba84190a2ce57d66e8b51da)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index c0b22a5bd871,90a2335498a2..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -8186,8 -8197,14 +8186,19 @@@ static void post_kvm_run_save(struct kv
  {
  	struct kvm_run *kvm_run = vcpu->run;
  
++<<<<<<< HEAD
 +	kvm_run->if_flag = (kvm_get_rflags(vcpu) & X86_EFLAGS_IF) != 0;
 +	kvm_run->flags = is_smm(vcpu) ? KVM_RUN_X86_SMM : 0;
++=======
+ 	/*
+ 	 * if_flag is obsolete and useless, so do not bother
+ 	 * setting it for SEV-ES guests.  Userspace can just
+ 	 * use kvm_run->ready_for_interrupt_injection.
+ 	 */
+ 	kvm_run->if_flag = !vcpu->arch.guest_state_protected
+ 		&& (kvm_get_rflags(vcpu) & X86_EFLAGS_IF) != 0;
+ 
++>>>>>>> 15aad3be9adb (KVM: X86: Reset the vcpu->run->flags at the beginning of vcpu_run)
  	kvm_run->cr8 = kvm_get_cr8(vcpu);
  	kvm_run->apic_base = kvm_get_apic_base(vcpu);
  	kvm_run->ready_for_interrupt_injection =
* Unmerged path arch/x86/kvm/x86.c
