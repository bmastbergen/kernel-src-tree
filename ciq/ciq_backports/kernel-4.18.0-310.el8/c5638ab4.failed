block: simplify the restart case in __blkdev_get

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-310.el8
commit-author Christoph Hellwig <hch@lst.de>
commit c5638ab417660e2c5d681aed5ce76df992982dbb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-310.el8/c5638ab4.failed

Insted of duplicating all the cleanup logic jump to the code that cleans
up anyway, and restart after that.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Acked-by: Tejun Heo <tj@kernel.org>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit c5638ab417660e2c5d681aed5ce76df992982dbb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/block_dev.c
diff --cc fs/block_dev.c
index a48047135e82,376832250c8e..000000000000
--- a/fs/block_dev.c
+++ b/fs/block_dev.c
@@@ -1593,20 -1556,12 +1593,29 @@@ static int __blkdev_get(struct block_de
  			ret = 0;
  			if (disk->fops->open) {
  				ret = disk->fops->open(bdev, mode);
++<<<<<<< HEAD
 +				if (ret == -ERESTARTSYS) {
 +					/* Lost a race with 'disk' being
 +					 * deleted, try again.
 +					 * See md.c
 +					 */
 +					disk_put_part(bdev->bd_part);
 +					bdev->bd_part = NULL;
 +					bdev->bd_disk = NULL;
 +					bdev->bd_queue = NULL;
 +					mutex_unlock(&bdev->bd_mutex);
 +					disk_unblock_events(disk);
 +					put_disk_and_module(disk);
 +					goto restart;
 +				}
++=======
+ 				/*
+ 				 * If we lost a race with 'disk' being deleted,
+ 				 * try again.  See md.c
+ 				 */
+ 				if (ret == -ERESTARTSYS)
+ 					need_restart = true;
++>>>>>>> c5638ab41766 (block: simplify the restart case in __blkdev_get)
  			}
  
  			if (!ret) {
* Unmerged path fs/block_dev.c
