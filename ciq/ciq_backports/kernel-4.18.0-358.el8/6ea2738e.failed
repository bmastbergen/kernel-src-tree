x86/mm/init: Add helper for freeing kernel image pages

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Dave Hansen <dave.hansen@linux.intel.com>
commit 6ea2738e0ca0e626c75202fb051c1e88d7a950fa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/6ea2738e.failed

When chunks of the kernel image are freed, free_init_pages() is used
directly.  Consolidate the three sites that do this.  Also update the
string to give an incrementally better description of that memory versus
what was there before.

	Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: keescook@google.com
	Cc: aarcange@redhat.com
	Cc: jgross@suse.com
	Cc: jpoimboe@redhat.com
	Cc: gregkh@linuxfoundation.org
	Cc: peterz@infradead.org
	Cc: hughd@google.com
	Cc: torvalds@linux-foundation.org
	Cc: bp@alien8.de
	Cc: luto@kernel.org
	Cc: ak@linux.intel.com
	Cc: Kees Cook <keescook@google.com>
	Cc: Andrea Arcangeli <aarcange@redhat.com>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Andi Kleen <ak@linux.intel.com>
Link: https://lkml.kernel.org/r/20180802225829.FE0E32EA@viggo.jf.intel.com

(cherry picked from commit 6ea2738e0ca0e626c75202fb051c1e88d7a950fa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/mm/init.c
diff --cc arch/x86/mm/init.c
index d56c62c50b99,bc11dedffc45..000000000000
--- a/arch/x86/mm/init.c
+++ b/arch/x86/mm/init.c
@@@ -818,17 -773,22 +818,34 @@@ void free_init_pages(char *what, unsign
  	}
  }
  
++<<<<<<< HEAD
 +void __weak mem_encrypt_free_decrypted_mem(void) { }
++=======
+ /*
+  * begin/end can be in the direct map or the "high kernel mapping"
+  * used for the kernel image only.  free_init_pages() will do the
+  * right thing for either kind of address.
+  */
+ void free_kernel_image_pages(void *begin, void *end)
+ {
+ 	free_init_pages("unused kernel image",
+ 			(unsigned long)begin, (unsigned long)end);
+ }
++>>>>>>> 6ea2738e0ca0 (x86/mm/init: Add helper for freeing kernel image pages)
  
  void __ref free_initmem(void)
  {
  	e820__reallocate_tables();
  
++<<<<<<< HEAD
 +	mem_encrypt_free_decrypted_mem();
 +
 +	free_init_pages("unused kernel",
 +			(unsigned long)(&__init_begin),
 +			(unsigned long)(&__init_end));
++=======
+ 	free_kernel_image_pages(&__init_begin, &__init_end);
++>>>>>>> 6ea2738e0ca0 (x86/mm/init: Add helper for freeing kernel image pages)
  }
  
  #ifdef CONFIG_BLK_DEV_INITRD
diff --git a/arch/x86/include/asm/processor.h b/arch/x86/include/asm/processor.h
index f9976803eb50..a2f59de26406 100644
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@ -911,6 +911,7 @@ static inline uint32_t hypervisor_cpuid_base(const char *sig, uint32_t leaves)
 
 extern unsigned long arch_align_stack(unsigned long sp);
 extern void free_init_pages(char *what, unsigned long begin, unsigned long end);
+extern void free_kernel_image_pages(void *begin, void *end);
 
 void default_idle(void);
 #ifdef	CONFIG_XEN
* Unmerged path arch/x86/mm/init.c
diff --git a/arch/x86/mm/init_64.c b/arch/x86/mm/init_64.c
index 614d6126b132..e72e8ae0a367 100644
--- a/arch/x86/mm/init_64.c
+++ b/arch/x86/mm/init_64.c
@@ -1347,8 +1347,8 @@ void mark_rodata_ro(void)
 	set_memory_ro(start, (end-start) >> PAGE_SHIFT);
 #endif
 
-	free_init_pages("unused kernel", text_end, rodata_start);
-	free_init_pages("unused kernel", rodata_end, _sdata);
+	free_kernel_image_pages((void *)text_end, (void *)rodata_start);
+	free_kernel_image_pages((void *)rodata_end, (void *)_sdata);
 
 	debug_checkwx();
 
