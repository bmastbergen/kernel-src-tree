loop: remove the l argument to loop_add

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Christoph Hellwig <hch@lst.de>
commit d6da83d072c187d6a69d5a49e2320f62920889d7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/d6da83d0.failed

None of the callers cares about the allocated struct loop_device.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Link: https://lore.kernel.org/r/20210623145908.92973-4-hch@lst.de
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit d6da83d072c187d6a69d5a49e2320f62920889d7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/loop.c
diff --cc drivers/block/loop.c
index c2f478450eaa,d587ad210ecd..000000000000
--- a/drivers/block/loop.c
+++ b/drivers/block/loop.c
@@@ -2175,11 -2326,8 +2175,10 @@@ static int loop_add(int i
  	disk->queue		= lo->lo_queue;
  	sprintf(disk->disk_name, "loop%d", i);
  	add_disk(disk);
- 	*l = lo;
  	return lo->lo_number;
  
 +out_free_queue:
 +	blk_cleanup_queue(lo->lo_queue);
  out_cleanup_tags:
  	blk_mq_free_tag_set(&lo->tag_set);
  out_free_idr:
@@@ -2325,8 -2472,6 +2324,11 @@@ MODULE_ALIAS("devname:loop-control")
  static int __init loop_init(void)
  {
  	int i, nr;
++<<<<<<< HEAD
 +	unsigned long range;
 +	struct loop_device *lo;
++=======
++>>>>>>> d6da83d072c1 (loop: remove the l argument to loop_add)
  	int err;
  
  	part_shift = 0;
* Unmerged path drivers/block/loop.c
