block: return errors from blk_execute_rq()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Keith Busch <kbusch@kernel.org>
commit fb9b16e15cd70e21d8af7f03d700deb9509c2ce8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/fb9b16e1.failed

The synchronous blk_execute_rq() had not provided a way for its callers
to know if its request was successful or not. Return the blk_status_t
result of the request.

	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Keith Busch <kbusch@kernel.org>
	Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Link: https://lore.kernel.org/r/20210610214437.641245-4-kbusch@kernel.org
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit fb9b16e15cd70e21d8af7f03d700deb9509c2ce8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-exec.c
#	include/linux/blkdev.h
diff --cc block/blk-exec.c
index 94404ce64917,d6cd501c0d34..000000000000
--- a/block/blk-exec.c
+++ b/block/blk-exec.c
@@@ -87,9 -85,9 +87,14 @@@ static void blk_rq_poll_completion(stru
   * Description:
   *    Insert a fully prepared request at the back of the I/O scheduler queue
   *    for execution and wait for completion.
+  * Return: The blk_status_t result provided to blk_mq_end_request().
   */
++<<<<<<< HEAD
 +void blk_execute_rq(struct request_queue *q, struct gendisk *bd_disk,
 +		   struct request *rq, int at_head)
++=======
+ blk_status_t blk_execute_rq(struct gendisk *bd_disk, struct request *rq, int at_head)
++>>>>>>> fb9b16e15cd7 (block: return errors from blk_execute_rq())
  {
  	DECLARE_COMPLETION_ONSTACK(wait);
  	unsigned long hang_check;
diff --cc include/linux/blkdev.h
index cc1fea233e2a,c454fb446fd0..000000000000
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@@ -943,11 -909,12 +943,18 @@@ extern int blk_rq_map_kern(struct reque
  extern int blk_rq_map_user_iov(struct request_queue *, struct request *,
  			       struct rq_map_data *, const struct iov_iter *,
  			       gfp_t);
++<<<<<<< HEAD
 +extern void blk_execute_rq(struct request_queue *, struct gendisk *,
 +			  struct request *, int);
 +extern void blk_execute_rq_nowait(struct request_queue *, struct gendisk *,
++=======
+ extern void blk_execute_rq_nowait(struct gendisk *,
++>>>>>>> fb9b16e15cd7 (block: return errors from blk_execute_rq())
  				  struct request *, int, rq_end_io_fn *);
  
+ blk_status_t blk_execute_rq(struct gendisk *bd_disk, struct request *rq,
+ 			    int at_head);
+ 
  /* Helper to convert REQ_OP_XXX to its string format XXX */
  extern const char *blk_op_str(unsigned int op);
  
* Unmerged path block/blk-exec.c
* Unmerged path include/linux/blkdev.h
