scsi: qla2xxx: edif: Do secure PLOGI when auth app is present

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Quinn Tran <qutran@marvell.com>
commit 1dc64a360bda55d632202e3fef266cef7d4f6f00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/1dc64a36.failed

For initiator mode, always do secure login when authentication app started.
Also remove redundant flags to indicate secure connection.

Link: https://lore.kernel.org/r/20210817051315.2477-7-njavali@marvell.com
	Signed-off-by: Quinn Tran <qutran@marvell.com>
	Signed-off-by: Nilesh Javali <njavali@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 1dc64a360bda55d632202e3fef266cef7d4f6f00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_def.h
#	drivers/scsi/qla2xxx/qla_edif.c
#	drivers/scsi/qla2xxx/qla_init.c
#	drivers/scsi/qla2xxx/qla_iocb.c
#	drivers/scsi/qla2xxx/qla_target.c
diff --cc drivers/scsi/qla2xxx/qla_def.h
index 8b39720b2812,ddc6932f05fa..000000000000
--- a/drivers/scsi/qla2xxx/qla_def.h
+++ b/drivers/scsi/qla2xxx/qla_def.h
@@@ -2570,15 -2620,25 +2570,18 @@@ typedef struct fc_port 
  		uint32_t	enable:1;	/* device is edif enabled/req'd */
  		uint32_t	app_stop:2;
  		uint32_t	app_started:1;
++<<<<<<< HEAD
 +		uint32_t	secured_login:1;
++=======
+ 		uint32_t	aes_gmac:1;
++>>>>>>> 1dc64a360bda (scsi: qla2xxx: edif: Do secure PLOGI when auth app is present)
  		uint32_t	app_sess_online:1;
 -		uint32_t	tx_sa_set:1;
 -		uint32_t	rx_sa_set:1;
 -		uint32_t	tx_sa_pending:1;
 -		uint32_t	rx_sa_pending:1;
  		uint32_t	tx_rekey_cnt;
  		uint32_t	rx_rekey_cnt;
  		uint64_t	tx_bytes;
  		uint64_t	rx_bytes;
- 		uint8_t		non_secured_login;
  		uint8_t		auth_state;
 -		uint16_t	authok:1;
  		uint16_t	rekey_cnt;
 -		struct list_head edif_indx_list;
 -		spinlock_t  indx_list_lock;
 -
 -		struct list_head tx_sa_list;
 -		struct list_head rx_sa_list;
 -		spinlock_t	sa_list_lock;
  	} edif;
  } fc_port_t;
  
diff --cc drivers/scsi/qla2xxx/qla_edif.c
index 0f46f8100846,dc10874a0c99..000000000000
--- a/drivers/scsi/qla2xxx/qla_edif.c
+++ b/drivers/scsi/qla2xxx/qla_edif.c
@@@ -149,8 -568,7 +149,12 @@@ qla_edif_app_start(scsi_qla_host_t *vha
  
  			if (atomic_read(&vha->loop_state) == LOOP_DOWN)
  				break;
++<<<<<<< HEAD
 +
 +			if (!fcport->edif.secured_login)
++=======
+ 			if (!(fcport->flags & FCF_FCSP_DEVICE))
++>>>>>>> 1dc64a360bda (scsi: qla2xxx: edif: Do secure PLOGI when auth app is present)
  				continue;
  
  			fcport->edif.app_started = 1;
@@@ -524,8 -946,9 +528,14 @@@ qla_edif_app_getfcinfo(scsi_qla_host_t 
  			app_reply->ports[pcnt].remote_pid = fcport->d_id;
  
  			ql_dbg(ql_dbg_edif, vha, 0x2058,
++<<<<<<< HEAD
 +			    "Found FC_SP fcport - nn %8phN pn %8phN pcnt %d portid=%06x\n",
 +			    fcport->node_name, fcport->port_name, pcnt, fcport->d_id.b24);
++=======
+ 			    "Found FC_SP fcport - nn %8phN pn %8phN pcnt %d portid=%06x secure %d.\n",
+ 			    fcport->node_name, fcport->port_name, pcnt,
+ 			    fcport->d_id.b24, fcport->flags & FCF_FCSP_DEVICE);
++>>>>>>> 1dc64a360bda (scsi: qla2xxx: edif: Do secure PLOGI when auth app is present)
  
  			switch (fcport->edif.auth_state) {
  			case VND_CMD_AUTH_STATE_ELS_RCVD:
diff --cc drivers/scsi/qla2xxx/qla_init.c
index a3b6e4dac55b,7e6fb4ad4255..000000000000
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@@ -1418,6 -1426,57 +1418,60 @@@ void __qla24xx_handle_gpdb_event(scsi_q
  	spin_unlock_irqrestore(&vha->hw->tgt.sess_lock, flags);
  }
  
++<<<<<<< HEAD
++=======
+ static int	qla_chk_secure_login(scsi_qla_host_t	*vha, fc_port_t *fcport,
+ 	struct port_database_24xx *pd)
+ {
+ 	int rc = 0;
+ 
+ 	if (pd->secure_login) {
+ 		ql_dbg(ql_dbg_disc, vha, 0x104d,
+ 		    "Secure Login established on %8phC\n",
+ 		    fcport->port_name);
+ 		fcport->flags |= FCF_FCSP_DEVICE;
+ 	} else {
+ 		ql_dbg(ql_dbg_disc, vha, 0x104d,
+ 		    "non-Secure Login %8phC",
+ 		    fcport->port_name);
+ 		fcport->flags &= ~FCF_FCSP_DEVICE;
+ 	}
+ 	if (vha->hw->flags.edif_enabled) {
+ 		if (fcport->flags & FCF_FCSP_DEVICE) {
+ 			qla2x00_set_fcport_disc_state(fcport, DSC_LOGIN_AUTH_PEND);
+ 			/* Start edif prli timer & ring doorbell for app */
+ 			fcport->edif.rx_sa_set = 0;
+ 			fcport->edif.tx_sa_set = 0;
+ 			fcport->edif.rx_sa_pending = 0;
+ 			fcport->edif.tx_sa_pending = 0;
+ 
+ 			qla2x00_post_aen_work(vha, FCH_EVT_PORT_ONLINE,
+ 			    fcport->d_id.b24);
+ 
+ 			if (vha->e_dbell.db_flags ==  EDB_ACTIVE) {
+ 				ql_dbg(ql_dbg_disc, vha, 0x20ef,
+ 				    "%s %d %8phC EDIF: post DB_AUTH: AUTH needed\n",
+ 				    __func__, __LINE__, fcport->port_name);
+ 				fcport->edif.app_started = 1;
+ 				fcport->edif.app_sess_online = 1;
+ 
+ 				qla_edb_eventcreate(vha, VND_CMD_AUTH_STATE_NEEDED,
+ 				    fcport->d_id.b24, 0, fcport);
+ 			}
+ 
+ 			rc = 1;
+ 		} else if (qla_ini_mode_enabled(vha) || qla_dual_mode_enabled(vha)) {
+ 			ql_dbg(ql_dbg_disc, vha, 0x2117,
+ 			    "%s %d %8phC post prli\n",
+ 			    __func__, __LINE__, fcport->port_name);
+ 			qla24xx_post_prli_work(vha, fcport);
+ 			rc = 1;
+ 		}
+ 	}
+ 	return rc;
+ }
+ 
++>>>>>>> 1dc64a360bda (scsi: qla2xxx: edif: Do secure PLOGI when auth app is present)
  static
  void qla24xx_handle_gpdb_event(scsi_qla_host_t *vha, struct event_arg *ea)
  {
diff --cc drivers/scsi/qla2xxx/qla_iocb.c
index 7c55022f5a26,9d4ad1d2b00a..000000000000
--- a/drivers/scsi/qla2xxx/qla_iocb.c
+++ b/drivers/scsi/qla2xxx/qla_iocb.c
@@@ -1962,6 -1913,9 +1965,12 @@@ qla2xxx_start_scsi_mq(srb_t *sp
  	struct qla_hw_data *ha = vha->hw;
  	struct qla_qpair *qpair = sp->qpair;
  
++<<<<<<< HEAD
++=======
+ 	if (sp->fcport->edif.enable && (sp->fcport->flags & FCF_FCSP_DEVICE))
+ 		return qla28xx_start_scsi_edif(sp);
+ 
++>>>>>>> 1dc64a360bda (scsi: qla2xxx: edif: Do secure PLOGI when auth app is present)
  	/* Acquire qpair specific lock */
  	spin_lock_irqsave(&qpair->qp_lock, flags);
  
diff --cc drivers/scsi/qla2xxx/qla_target.c
index cc3934c87715,b3478ed9b12e..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -635,6 -635,9 +635,12 @@@ int qla24xx_async_notify_ack(scsi_qla_h
  	case SRB_NACK_PLOGI:
  		fcport->fw_login_state = DSC_LS_PLOGI_PEND;
  		c = "PLOGI";
++<<<<<<< HEAD
++=======
+ 		if (vha->hw->flags.edif_enabled &&
+ 		    (le16_to_cpu(ntfy->u.isp24.flags) & NOTIFY24XX_FLAGS_FCSP))
+ 			fcport->flags |= FCF_FCSP_DEVICE;
++>>>>>>> 1dc64a360bda (scsi: qla2xxx: edif: Do secure PLOGI when auth app is present)
  		break;
  	case SRB_NACK_PRLI:
  		fcport->fw_login_state = DSC_LS_PRLI_PEND;
* Unmerged path drivers/scsi/qla2xxx/qla_def.h
* Unmerged path drivers/scsi/qla2xxx/qla_edif.c
* Unmerged path drivers/scsi/qla2xxx/qla_init.c
* Unmerged path drivers/scsi/qla2xxx/qla_iocb.c
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
