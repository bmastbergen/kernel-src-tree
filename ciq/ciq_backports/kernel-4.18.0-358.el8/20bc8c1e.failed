lib/vsprintf: Allow to override ISO 8601 date and time separator

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit 20bc8c1e972f29afcac85e524e430c11a6df5f58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/20bc8c1e.failed

ISO 8601 defines 'T' as a separator between date and time. Though,
some ABIs use time and date with ' ' (space) separator instead.

Add a flavour to the %pt specifier to override default separator.

	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Reviewed-by: Petr Mladek <pmladek@suse.com>
	Reviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>
	Signed-off-by: Petr Mladek <pmladek@suse.com>
Link: https://lore.kernel.org/r/20210511153958.34527-1-andriy.shevchenko@linux.intel.com
(cherry picked from commit 20bc8c1e972f29afcac85e524e430c11a6df5f58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/core-api/printk-formats.rst
#	lib/test_printf.c
#	lib/vsprintf.c
diff --cc Documentation/core-api/printk-formats.rst
index 5bd291a12eb9,7b6bfd8a78d3..000000000000
--- a/Documentation/core-api/printk-formats.rst
+++ b/Documentation/core-api/printk-formats.rst
@@@ -463,16 -489,49 +463,56 @@@ Time and date (struct rtc_time
  
  ::
  
 -	%pfw[fP]
 +	%ptR		YYYY-mm-ddTHH:MM:SS
 +	%ptRd		YYYY-mm-dd
 +	%ptRt		HH:MM:SS
 +	%ptR[dt][r]
  
 -For printing information on fwnode handles. The default is to print the full
 -node name, including the path. The modifiers are functionally equivalent to
 -%pOF above.
 +For printing date and time as represented by struct rtc_time structure in
 +human readable format.
  
++<<<<<<< HEAD
 +By default year will be incremented by 1900 and month by 1. Use %ptRr (raw)
 +to suppress this behaviour.
++=======
+ 	- f - full name of the node, including the path
+ 	- P - the name of the node including an address (if there is one)
+ 
+ Examples (ACPI)::
+ 
+ 	%pfwf	\_SB.PCI0.CIO2.port@1.endpoint@0	- Full node name
+ 	%pfwP	endpoint@0				- Node name
+ 
+ Examples (OF)::
+ 
+ 	%pfwf	/ocp@68000000/i2c@48072000/camera@10/port/endpoint - Full name
+ 	%pfwP	endpoint				- Node name
+ 
+ Time and date
+ -------------
+ 
+ ::
+ 
+ 	%pt[RT]			YYYY-mm-ddTHH:MM:SS
+ 	%pt[RT]s		YYYY-mm-dd HH:MM:SS
+ 	%pt[RT]d		YYYY-mm-dd
+ 	%pt[RT]t		HH:MM:SS
+ 	%pt[RT][dt][r][s]
+ 
+ For printing date and time as represented by::
+ 
+ 	R  struct rtc_time structure
+ 	T  time64_t type
+ 
+ in human readable format.
+ 
+ By default year will be incremented by 1900 and month by 1.
+ Use %pt[RT]r (raw) to suppress this behaviour.
++>>>>>>> 20bc8c1e972f (lib/vsprintf: Allow to override ISO 8601 date and time separator)
+ 
+ The %pt[RT]s (space) will override ISO 8601 separator by using ' ' (space)
+ instead of 'T' (Capital T) between date and time. It won't have any effect
+ when date or time is omitted.
  
  Passed by reference.
  
diff --cc lib/test_printf.c
index 789a78f18794,69b04b531492..000000000000
--- a/lib/test_printf.c
+++ b/lib/test_printf.c
@@@ -505,6 -523,16 +505,19 @@@ struct_rtc_time(void
  	test("05:35:43|0118-10-26", "%ptRtr|%ptRdr", &tm, &tm);
  	test("05:35:43|2018-11-26", "%ptRttr|%ptRdtr", &tm, &tm);
  	test("05:35:43 tr|2018-11-26 tr", "%ptRt tr|%ptRd tr", &tm, &tm);
++<<<<<<< HEAD
++=======
+ 
+ 	test("2019-01-04T15:32:23", "%ptT", &t);
+ 	test("0119-00-04T15:32:23", "%ptTr", &t);
+ 	test("15:32:23|2019-01-04", "%ptTt|%ptTd", &t, &t);
+ 	test("15:32:23|0119-00-04", "%ptTtr|%ptTdr", &t, &t);
+ 
+ 	test("2019-01-04 15:32:23", "%ptTs", &t);
+ 	test("0119-00-04 15:32:23", "%ptTsr", &t);
+ 	test("15:32:23|2019-01-04", "%ptTts|%ptTds", &t, &t);
+ 	test("15:32:23|0119-00-04", "%ptTtrs|%ptTdrs", &t, &t);
++>>>>>>> 20bc8c1e972f (lib/vsprintf: Allow to override ISO 8601 date and time separator)
  }
  
  static void __init
diff --cc lib/vsprintf.c
index 03cac12d3cb4,8d5142ae742e..000000000000
--- a/lib/vsprintf.c
+++ b/lib/vsprintf.c
@@@ -2182,8 -2273,9 +2194,12 @@@ early_param("no_hash_pointers", no_hash
   * - 'd[234]' For a dentry name (optionally 2-4 last components)
   * - 'D[234]' Same as 'd' but for a struct file
   * - 'g' For block_device name (gendisk + partition number)
++<<<<<<< HEAD
 + * - 't[R][dt][r]' For time and date as represented:
++=======
+  * - 't[RT][dt][r][s]' For time and date as represented by:
++>>>>>>> 20bc8c1e972f (lib/vsprintf: Allow to override ISO 8601 date and time separator)
   *      R    struct rtc_time
 - *      T    time64_t
   * - 'C' For a clock, it prints the name (Common Clock Framework) or address
   *       (legacy clock framework) of the clock
   * - 'Cn' For a clock, it prints the name (Common Clock Framework) or address
* Unmerged path Documentation/core-api/printk-formats.rst
* Unmerged path lib/test_printf.c
* Unmerged path lib/vsprintf.c
