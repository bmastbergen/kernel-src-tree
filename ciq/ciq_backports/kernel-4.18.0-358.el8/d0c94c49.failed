KVM: arm64: Restore PMU configuration on first run

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Marc Zyngier <maz@kernel.org>
commit d0c94c49792cf780cbfefe29f81bb8c3b73bc76b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/d0c94c49.failed

Restoring a guest with an active virtual PMU results in no perf
counters being instanciated on the host side. Not quite what
you'd expect from a restore.

In order to fix this, force a writeback of PMCR_EL0 on the first
run of a vcpu (using a new request so that it happens once the
vcpu has been loaded). This will in turn create all the host-side
counters that were missing.

	Reported-by: Jinank Jain <jinankj@amazon.de>
	Tested-by: Jinank Jain <jinankj@amazon.de>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/87wnrbylxv.wl-maz@kernel.org
Link: https://lore.kernel.org/r/b53dfcf9bbc4db7f96154b1cd5188d72b9766358.camel@amazon.de
(cherry picked from commit d0c94c49792cf780cbfefe29f81bb8c3b73bc76b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kvm/pmu-emul.c
diff --cc arch/arm64/kvm/pmu-emul.c
index 674df2171bb8,f33825c995cb..000000000000
--- a/arch/arm64/kvm/pmu-emul.c
+++ b/arch/arm64/kvm/pmu-emul.c
@@@ -760,8 -851,8 +760,13 @@@ int kvm_arm_pmu_v3_enable(struct kvm_vc
  		   return -EINVAL;
  	}
  
++<<<<<<< HEAD
 +	kvm_pmu_vcpu_reset(vcpu);
 +	vcpu->arch.pmu.ready = true;
++=======
+ 	/* One-off reload of the PMU on first run */
+ 	kvm_make_request(KVM_REQ_RELOAD_PMU, vcpu);
++>>>>>>> d0c94c49792c (KVM: arm64: Restore PMU configuration on first run)
  
  	return 0;
  }
diff --git a/arch/arm64/include/asm/kvm_host.h b/arch/arm64/include/asm/kvm_host.h
index 28ea6c06b7f8..cd338b942acc 100644
--- a/arch/arm64/include/asm/kvm_host.h
+++ b/arch/arm64/include/asm/kvm_host.h
@@ -55,6 +55,7 @@
 #define KVM_REQ_VCPU_RESET	KVM_ARCH_REQ(2)
 #define KVM_REQ_RECORD_STEAL	KVM_ARCH_REQ(3)
 #define KVM_REQ_RELOAD_GICv4	KVM_ARCH_REQ(4)
+#define KVM_REQ_RELOAD_PMU	KVM_ARCH_REQ(5)
 
 #define KVM_DIRTY_LOG_MANUAL_CAPS   (KVM_DIRTY_LOG_MANUAL_PROTECT_ENABLE | \
 				     KVM_DIRTY_LOG_INITIALLY_SET)
diff --git a/arch/arm64/kvm/arm.c b/arch/arm64/kvm/arm.c
index d9268120c06f..e2747390fae0 100644
--- a/arch/arm64/kvm/arm.c
+++ b/arch/arm64/kvm/arm.c
@@ -657,6 +657,10 @@ static void check_vcpu_requests(struct kvm_vcpu *vcpu)
 			vgic_v4_load(vcpu);
 			preempt_enable();
 		}
+
+		if (kvm_check_request(KVM_REQ_RELOAD_PMU, vcpu))
+			kvm_pmu_handle_pmcr(vcpu,
+					    __vcpu_sys_reg(vcpu, PMCR_EL0));
 	}
 }
 
* Unmerged path arch/arm64/kvm/pmu-emul.c
