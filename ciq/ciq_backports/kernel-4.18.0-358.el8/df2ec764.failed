mm/mmu_notifiers: use the right return code for WARN_ON

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Jason Gunthorpe <jgg@ziepe.ca>
commit df2ec7641bd03624a7e54cc926e8c3f75c7a84d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/df2ec764.failed

The return code from the op callback is actually in _ret, while the
WARN_ON was checking ret which causes it to misfire.

Link: http://lkml.kernel.org/r/20191025175502.GA31127@ziepe.ca
Fixes: 8402ce61bec2 ("mm/mmu_notifiers: check if mmu notifier callbacks are allowed to fail")
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit df2ec7641bd03624a7e54cc926e8c3f75c7a84d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/mmu_notifier.c
diff --cc mm/mmu_notifier.c
index 4361d699fa34,9a889e456168..000000000000
--- a/mm/mmu_notifier.c
+++ b/mm/mmu_notifier.c
@@@ -452,9 -165,24 +452,27 @@@ static void mn_hlist_invalidate_range_s
  	int id;
  
  	id = srcu_read_lock(&srcu);
 -	hlist_for_each_entry_rcu(mn, &range->mm->mmu_notifier_mm->list, hlist) {
 +	hlist_for_each_entry_rcu(mn, &mmn_mm->list, hlist) {
  		if (mn->ops->invalidate_range_start) {
++<<<<<<< HEAD
 +			mn->ops->invalidate_range_start(mn, range->mm, range->start, range->end);
++=======
+ 			int _ret;
+ 
+ 			if (!mmu_notifier_range_blockable(range))
+ 				non_block_start();
+ 			_ret = mn->ops->invalidate_range_start(mn, range);
+ 			if (!mmu_notifier_range_blockable(range))
+ 				non_block_end();
+ 			if (_ret) {
+ 				pr_info("%pS callback failed with %d in %sblockable context.\n",
+ 					mn->ops->invalidate_range_start, _ret,
+ 					!mmu_notifier_range_blockable(range) ? "non-" : "");
+ 				WARN_ON(mmu_notifier_range_blockable(range) ||
+ 					_ret != -EAGAIN);
+ 				ret = _ret;
+ 			}
++>>>>>>> df2ec7641bd0 (mm/mmu_notifiers: use the right return code for WARN_ON)
  		}
  	}
  	srcu_read_unlock(&srcu, id);
* Unmerged path mm/mmu_notifier.c
