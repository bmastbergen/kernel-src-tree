ethtool: Document correct attribute type

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Ido Schimmel <idosch@nvidia.com>
commit 913d026fbfaf114ff87afcc77fa4e9309f87f114
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/913d026f.failed

'ETHTOOL_A_MODULE_EEPROM_DATA' is a binary attribute, not a nested one.

	Signed-off-by: Ido Schimmel <idosch@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 913d026fbfaf114ff87afcc77fa4e9309f87f114)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/ethtool-netlink.rst
#	include/uapi/linux/ethtool_netlink.h
diff --cc Documentation/networking/ethtool-netlink.rst
index 9af92ef673b0,8ae644f800f0..000000000000
--- a/Documentation/networking/ethtool-netlink.rst
+++ b/Documentation/networking/ethtool-netlink.rst
@@@ -1353,6 -1363,118 +1353,121 @@@ in an implementation specific way
  ``ETHTOOL_A_FEC_AUTO`` requests the driver to choose FEC mode based on SFP
  module parameters. This does not mean autonegotiation.
  
++<<<<<<< HEAD
++=======
+ MODULE_EEPROM_GET
+ =================
+ 
+ Fetch module EEPROM data dump.
+ This interface is designed to allow dumps of at most 1/2 page at once. This
+ means only dumps of 128 (or less) bytes are allowed, without crossing half page
+ boundary located at offset 128. For pages other than 0 only high 128 bytes are
+ accessible.
+ 
+ Request contents:
+ 
+   =======================================  ======  ==========================
+   ``ETHTOOL_A_MODULE_EEPROM_HEADER``       nested  request header
+   ``ETHTOOL_A_MODULE_EEPROM_OFFSET``       u32     offset within a page
+   ``ETHTOOL_A_MODULE_EEPROM_LENGTH``       u32     amount of bytes to read
+   ``ETHTOOL_A_MODULE_EEPROM_PAGE``         u8      page number
+   ``ETHTOOL_A_MODULE_EEPROM_BANK``         u8      bank number
+   ``ETHTOOL_A_MODULE_EEPROM_I2C_ADDRESS``  u8      page I2C address
+   =======================================  ======  ==========================
+ 
+ Kernel response contents:
+ 
+  +---------------------------------------------+--------+---------------------+
+  | ``ETHTOOL_A_MODULE_EEPROM_HEADER``          | nested | reply header        |
+  +---------------------------------------------+--------+---------------------+
+  | ``ETHTOOL_A_MODULE_EEPROM_DATA``            | binary | array of bytes from |
+  |                                             |        | module EEPROM       |
+  +---------------------------------------------+--------+---------------------+
+ 
+ ``ETHTOOL_A_MODULE_EEPROM_DATA`` has an attribute length equal to the amount of
+ bytes driver actually read.
+ 
+ STATS_GET
+ =========
+ 
+ Get standard statistics for the interface. Note that this is not
+ a re-implementation of ``ETHTOOL_GSTATS`` which exposed driver-defined
+ stats.
+ 
+ Request contents:
+ 
+   =======================================  ======  ==========================
+   ``ETHTOOL_A_STATS_HEADER``               nested  request header
+   ``ETHTOOL_A_STATS_GROUPS``               bitset  requested groups of stats
+   =======================================  ======  ==========================
+ 
+ Kernel response contents:
+ 
+  +-----------------------------------+--------+--------------------------------+
+  | ``ETHTOOL_A_STATS_HEADER``        | nested | reply header                   |
+  +-----------------------------------+--------+--------------------------------+
+  | ``ETHTOOL_A_STATS_GRP``           | nested | one or more group of stats     |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_ID``      | u32    | group ID - ``ETHTOOL_STATS_*`` |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_SS_ID``   | u32    | string set ID for names        |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_STAT``    | nested | nest containing a statistic    |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_HIST_RX`` | nested | histogram statistic (Rx)       |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_HIST_TX`` | nested | histogram statistic (Tx)       |
+  +-+---------------------------------+--------+--------------------------------+
+ 
+ Users specify which groups of statistics they are requesting via
+ the ``ETHTOOL_A_STATS_GROUPS`` bitset. Currently defined values are:
+ 
+  ====================== ======== ===============================================
+  ETHTOOL_STATS_ETH_MAC  eth-mac  Basic IEEE 802.3 MAC statistics (30.3.1.1.*)
+  ETHTOOL_STATS_ETH_PHY  eth-phy  Basic IEEE 802.3 PHY statistics (30.3.2.1.*)
+  ETHTOOL_STATS_ETH_CTRL eth-ctrl Basic IEEE 802.3 MAC Ctrl statistics (30.3.3.*)
+  ETHTOOL_STATS_RMON     rmon     RMON (RFC 2819) statistics
+  ====================== ======== ===============================================
+ 
+ Each group should have a corresponding ``ETHTOOL_A_STATS_GRP`` in the reply.
+ ``ETHTOOL_A_STATS_GRP_ID`` identifies which group's statistics nest contains.
+ ``ETHTOOL_A_STATS_GRP_SS_ID`` identifies the string set ID for the names of
+ the statistics in the group, if available.
+ 
+ Statistics are added to the ``ETHTOOL_A_STATS_GRP`` nest under
+ ``ETHTOOL_A_STATS_GRP_STAT``. ``ETHTOOL_A_STATS_GRP_STAT`` should contain
+ single 8 byte (u64) attribute inside - the type of that attribute is
+ the statistic ID and the value is the value of the statistic.
+ Each group has its own interpretation of statistic IDs.
+ Attribute IDs correspond to strings from the string set identified
+ by ``ETHTOOL_A_STATS_GRP_SS_ID``. Complex statistics (such as RMON histogram
+ entries) are also listed inside ``ETHTOOL_A_STATS_GRP`` and do not have
+ a string defined in the string set.
+ 
+ RMON "histogram" counters count number of packets within given size range.
+ Because RFC does not specify the ranges beyond the standard 1518 MTU devices
+ differ in definition of buckets. For this reason the definition of packet ranges
+ is left to each driver.
+ 
+ ``ETHTOOL_A_STATS_GRP_HIST_RX`` and ``ETHTOOL_A_STATS_GRP_HIST_TX`` nests
+ contain the following attributes:
+ 
+  ================================= ====== ===================================
+  ETHTOOL_A_STATS_RMON_HIST_BKT_LOW u32    low bound of the packet size bucket
+  ETHTOOL_A_STATS_RMON_HIST_BKT_HI  u32    high bound of the bucket
+  ETHTOOL_A_STATS_RMON_HIST_VAL     u64    packet counter
+  ================================= ====== ===================================
+ 
+ Low and high bounds are inclusive, for example:
+ 
+  ============================= ==== ====
+  RFC statistic                 low  high
+  ============================= ==== ====
+  etherStatsPkts64Octets          0    64
+  etherStatsPkts512to1023Octets 512  1023
+  ============================= ==== ====
+ 
++>>>>>>> 913d026fbfaf (ethtool: Document correct attribute type)
  Request translation
  ===================
  
diff --cc include/uapi/linux/ethtool_netlink.h
index df13d637e99a,c7135c9c37a5..000000000000
--- a/include/uapi/linux/ethtool_netlink.h
+++ b/include/uapi/linux/ethtool_netlink.h
@@@ -648,6 -651,171 +648,174 @@@ enum 
  	ETHTOOL_A_FEC_MAX = (__ETHTOOL_A_FEC_CNT - 1)
  };
  
++<<<<<<< HEAD
++=======
+ enum {
+ 	ETHTOOL_A_FEC_STAT_UNSPEC,
+ 	ETHTOOL_A_FEC_STAT_PAD,
+ 
+ 	ETHTOOL_A_FEC_STAT_CORRECTED,			/* array, u64 */
+ 	ETHTOOL_A_FEC_STAT_UNCORR,			/* array, u64 */
+ 	ETHTOOL_A_FEC_STAT_CORR_BITS,			/* array, u64 */
+ 
+ 	/* add new constants above here */
+ 	__ETHTOOL_A_FEC_STAT_CNT,
+ 	ETHTOOL_A_FEC_STAT_MAX = (__ETHTOOL_A_FEC_STAT_CNT - 1)
+ };
+ 
+ /* MODULE EEPROM */
+ 
+ enum {
+ 	ETHTOOL_A_MODULE_EEPROM_UNSPEC,
+ 	ETHTOOL_A_MODULE_EEPROM_HEADER,			/* nest - _A_HEADER_* */
+ 
+ 	ETHTOOL_A_MODULE_EEPROM_OFFSET,			/* u32 */
+ 	ETHTOOL_A_MODULE_EEPROM_LENGTH,			/* u32 */
+ 	ETHTOOL_A_MODULE_EEPROM_PAGE,			/* u8 */
+ 	ETHTOOL_A_MODULE_EEPROM_BANK,			/* u8 */
+ 	ETHTOOL_A_MODULE_EEPROM_I2C_ADDRESS,		/* u8 */
+ 	ETHTOOL_A_MODULE_EEPROM_DATA,			/* binary */
+ 
+ 	__ETHTOOL_A_MODULE_EEPROM_CNT,
+ 	ETHTOOL_A_MODULE_EEPROM_MAX = (__ETHTOOL_A_MODULE_EEPROM_CNT - 1)
+ };
+ 
+ /* STATS */
+ 
+ enum {
+ 	ETHTOOL_A_STATS_UNSPEC,
+ 	ETHTOOL_A_STATS_PAD,
+ 	ETHTOOL_A_STATS_HEADER,			/* nest - _A_HEADER_* */
+ 	ETHTOOL_A_STATS_GROUPS,			/* bitset */
+ 
+ 	ETHTOOL_A_STATS_GRP,			/* nest - _A_STATS_GRP_* */
+ 
+ 	/* add new constants above here */
+ 	__ETHTOOL_A_STATS_CNT,
+ 	ETHTOOL_A_STATS_MAX = (__ETHTOOL_A_STATS_CNT - 1)
+ };
+ 
+ enum {
+ 	ETHTOOL_STATS_ETH_PHY,
+ 	ETHTOOL_STATS_ETH_MAC,
+ 	ETHTOOL_STATS_ETH_CTRL,
+ 	ETHTOOL_STATS_RMON,
+ 
+ 	/* add new constants above here */
+ 	__ETHTOOL_STATS_CNT
+ };
+ 
+ enum {
+ 	ETHTOOL_A_STATS_GRP_UNSPEC,
+ 	ETHTOOL_A_STATS_GRP_PAD,
+ 
+ 	ETHTOOL_A_STATS_GRP_ID,			/* u32 */
+ 	ETHTOOL_A_STATS_GRP_SS_ID,		/* u32 */
+ 
+ 	ETHTOOL_A_STATS_GRP_STAT,		/* nest */
+ 
+ 	ETHTOOL_A_STATS_GRP_HIST_RX,		/* nest */
+ 	ETHTOOL_A_STATS_GRP_HIST_TX,		/* nest */
+ 
+ 	ETHTOOL_A_STATS_GRP_HIST_BKT_LOW,	/* u32 */
+ 	ETHTOOL_A_STATS_GRP_HIST_BKT_HI,	/* u32 */
+ 	ETHTOOL_A_STATS_GRP_HIST_VAL,		/* u64 */
+ 
+ 	/* add new constants above here */
+ 	__ETHTOOL_A_STATS_GRP_CNT,
+ 	ETHTOOL_A_STATS_GRP_MAX = (__ETHTOOL_A_STATS_CNT - 1)
+ };
+ 
+ enum {
+ 	/* 30.3.2.1.5 aSymbolErrorDuringCarrier */
+ 	ETHTOOL_A_STATS_ETH_PHY_5_SYM_ERR,
+ 
+ 	/* add new constants above here */
+ 	__ETHTOOL_A_STATS_ETH_PHY_CNT,
+ 	ETHTOOL_A_STATS_ETH_PHY_MAX = (__ETHTOOL_A_STATS_ETH_PHY_CNT - 1)
+ };
+ 
+ enum {
+ 	/* 30.3.1.1.2 aFramesTransmittedOK */
+ 	ETHTOOL_A_STATS_ETH_MAC_2_TX_PKT,
+ 	/* 30.3.1.1.3 aSingleCollisionFrames */
+ 	ETHTOOL_A_STATS_ETH_MAC_3_SINGLE_COL,
+ 	/* 30.3.1.1.4 aMultipleCollisionFrames */
+ 	ETHTOOL_A_STATS_ETH_MAC_4_MULTI_COL,
+ 	/* 30.3.1.1.5 aFramesReceivedOK */
+ 	ETHTOOL_A_STATS_ETH_MAC_5_RX_PKT,
+ 	/* 30.3.1.1.6 aFrameCheckSequenceErrors */
+ 	ETHTOOL_A_STATS_ETH_MAC_6_FCS_ERR,
+ 	/* 30.3.1.1.7 aAlignmentErrors */
+ 	ETHTOOL_A_STATS_ETH_MAC_7_ALIGN_ERR,
+ 	/* 30.3.1.1.8 aOctetsTransmittedOK */
+ 	ETHTOOL_A_STATS_ETH_MAC_8_TX_BYTES,
+ 	/* 30.3.1.1.9 aFramesWithDeferredXmissions */
+ 	ETHTOOL_A_STATS_ETH_MAC_9_TX_DEFER,
+ 	/* 30.3.1.1.10 aLateCollisions */
+ 	ETHTOOL_A_STATS_ETH_MAC_10_LATE_COL,
+ 	/* 30.3.1.1.11 aFramesAbortedDueToXSColls */
+ 	ETHTOOL_A_STATS_ETH_MAC_11_XS_COL,
+ 	/* 30.3.1.1.12 aFramesLostDueToIntMACXmitError */
+ 	ETHTOOL_A_STATS_ETH_MAC_12_TX_INT_ERR,
+ 	/* 30.3.1.1.13 aCarrierSenseErrors */
+ 	ETHTOOL_A_STATS_ETH_MAC_13_CS_ERR,
+ 	/* 30.3.1.1.14 aOctetsReceivedOK */
+ 	ETHTOOL_A_STATS_ETH_MAC_14_RX_BYTES,
+ 	/* 30.3.1.1.15 aFramesLostDueToIntMACRcvError */
+ 	ETHTOOL_A_STATS_ETH_MAC_15_RX_INT_ERR,
+ 
+ 	/* 30.3.1.1.18 aMulticastFramesXmittedOK */
+ 	ETHTOOL_A_STATS_ETH_MAC_18_TX_MCAST,
+ 	/* 30.3.1.1.19 aBroadcastFramesXmittedOK */
+ 	ETHTOOL_A_STATS_ETH_MAC_19_TX_BCAST,
+ 	/* 30.3.1.1.20 aFramesWithExcessiveDeferral */
+ 	ETHTOOL_A_STATS_ETH_MAC_20_XS_DEFER,
+ 	/* 30.3.1.1.21 aMulticastFramesReceivedOK */
+ 	ETHTOOL_A_STATS_ETH_MAC_21_RX_MCAST,
+ 	/* 30.3.1.1.22 aBroadcastFramesReceivedOK */
+ 	ETHTOOL_A_STATS_ETH_MAC_22_RX_BCAST,
+ 	/* 30.3.1.1.23 aInRangeLengthErrors */
+ 	ETHTOOL_A_STATS_ETH_MAC_23_IR_LEN_ERR,
+ 	/* 30.3.1.1.24 aOutOfRangeLengthField */
+ 	ETHTOOL_A_STATS_ETH_MAC_24_OOR_LEN,
+ 	/* 30.3.1.1.25 aFrameTooLongErrors */
+ 	ETHTOOL_A_STATS_ETH_MAC_25_TOO_LONG_ERR,
+ 
+ 	/* add new constants above here */
+ 	__ETHTOOL_A_STATS_ETH_MAC_CNT,
+ 	ETHTOOL_A_STATS_ETH_MAC_MAX = (__ETHTOOL_A_STATS_ETH_MAC_CNT - 1)
+ };
+ 
+ enum {
+ 	/* 30.3.3.3 aMACControlFramesTransmitted */
+ 	ETHTOOL_A_STATS_ETH_CTRL_3_TX,
+ 	/* 30.3.3.4 aMACControlFramesReceived */
+ 	ETHTOOL_A_STATS_ETH_CTRL_4_RX,
+ 	/* 30.3.3.5 aUnsupportedOpcodesReceived */
+ 	ETHTOOL_A_STATS_ETH_CTRL_5_RX_UNSUP,
+ 
+ 	/* add new constants above here */
+ 	__ETHTOOL_A_STATS_ETH_CTRL_CNT,
+ 	ETHTOOL_A_STATS_ETH_CTRL_MAX = (__ETHTOOL_A_STATS_ETH_CTRL_CNT - 1)
+ };
+ 
+ enum {
+ 	/* etherStatsUndersizePkts */
+ 	ETHTOOL_A_STATS_RMON_UNDERSIZE,
+ 	/* etherStatsOversizePkts */
+ 	ETHTOOL_A_STATS_RMON_OVERSIZE,
+ 	/* etherStatsFragments */
+ 	ETHTOOL_A_STATS_RMON_FRAG,
+ 	/* etherStatsJabbers */
+ 	ETHTOOL_A_STATS_RMON_JABBER,
+ 
+ 	/* add new constants above here */
+ 	__ETHTOOL_A_STATS_RMON_CNT,
+ 	ETHTOOL_A_STATS_RMON_MAX = (__ETHTOOL_A_STATS_RMON_CNT - 1)
+ };
+ 
++>>>>>>> 913d026fbfaf (ethtool: Document correct attribute type)
  /* generic netlink info */
  #define ETHTOOL_GENL_NAME "ethtool"
  #define ETHTOOL_GENL_VERSION 1
* Unmerged path Documentation/networking/ethtool-netlink.rst
* Unmerged path include/uapi/linux/ethtool_netlink.h
