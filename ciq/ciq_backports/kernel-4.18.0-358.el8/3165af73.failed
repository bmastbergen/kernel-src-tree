KVM: Allow to have arch-specific per-vm debugfs files

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Peter Xu <peterx@redhat.com>
commit 3165af738ed3224a84ead7d97c6909de2e453b4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/3165af73.failed

Allow archs to create arch-specific nodes under kvm->debugfs_dentry directory
besides the stats fields.  The new interface kvm_arch_create_vm_debugfs() is
defined but not yet used.  It's called after kvm->debugfs_dentry is created, so
it can be referenced directly in kvm_arch_create_vm_debugfs().  Arch should
define their own versions when they want to create extra debugfs nodes.

	Signed-off-by: Peter Xu <peterx@redhat.com>
Message-Id: <20210730220455.26054-2-peterx@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 3165af738ed3224a84ead7d97c6909de2e453b4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/kvm_main.c
diff --cc virt/kvm/kvm_main.c
index 04fef38446f1,3e81b5d8b709..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -721,7 -918,10 +721,14 @@@ static int kvm_create_vm_debugfs(struc
  	struct dentry *dent;
  	char dir_name[ITOA_MAX_LEN * 2];
  	struct kvm_stat_data *stat_data;
++<<<<<<< HEAD
 +	struct kvm_stats_debugfs_item *p;
++=======
+ 	const struct _kvm_stats_desc *pdesc;
+ 	int i, ret;
+ 	int kvm_debugfs_num_entries = kvm_vm_stats_header.num_desc +
+ 				      kvm_vcpu_stats_header.num_desc;
++>>>>>>> 3165af738ed3 (KVM: Allow to have arch-specific per-vm debugfs files)
  
  	if (!debugfs_initialized())
  		return 0;
diff --git a/include/linux/kvm_host.h b/include/linux/kvm_host.h
index 53ea2b6e9d9d..6835852a0216 100644
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@ -982,6 +982,7 @@ bool kvm_arch_dy_runnable(struct kvm_vcpu *vcpu);
 bool kvm_arch_dy_has_pending_interrupt(struct kvm_vcpu *vcpu);
 int kvm_arch_post_init_vm(struct kvm *kvm);
 void kvm_arch_pre_destroy_vm(struct kvm *kvm);
+int kvm_arch_create_vm_debugfs(struct kvm *kvm);
 
 #ifndef __KVM_HAVE_ARCH_VM_ALLOC
 /*
* Unmerged path virt/kvm/kvm_main.c
