drivers/perf: arm_pmu: Fix some coding style issues

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Junhao He <hejunhao2@hisilicon.com>
commit f265fd166bce9837ce1ae6c2a4b56f8bd18d1fe4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/f265fd16.failed

Fix some coding style issues reported by checkpatch.pl, including
following types:

ERROR: spaces required around that '=' (ctx:VxW)
WARNING: Possible unnecessary 'out of memory' message

	Signed-off-by: Junhao He <hejunhao2@hisilicon.com>
	Signed-off-by: Jay Fang <f.fangjian@huawei.com>
Link: https://lore.kernel.org/r/1620736054-58412-3-git-send-email-f.fangjian@huawei.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit f265fd166bce9837ce1ae6c2a4b56f8bd18d1fe4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/perf/arm_pmu.c
diff --cc drivers/perf/arm_pmu.c
index eec75b97e7ea,e57b348c1628..000000000000
--- a/drivers/perf/arm_pmu.c
+++ b/drivers/perf/arm_pmu.c
@@@ -581,11 -648,37 +581,31 @@@ int armpmu_request_irq(int irq, int cpu
  			    IRQF_NO_THREAD;
  
  		irq_set_status_flags(irq, IRQ_NOAUTOEN);
 -
 -		err = request_nmi(irq, handler, irq_flags, "arm-pmu",
 +		err = request_irq(irq, handler, irq_flags, "arm-pmu",
  				  per_cpu_ptr(&cpu_armpmu, cpu));
 -
 -		/* If cannot get an NMI, get a normal interrupt */
 -		if (err) {
 -			err = request_irq(irq, handler, irq_flags, "arm-pmu",
 -					  per_cpu_ptr(&cpu_armpmu, cpu));
 -			irq_ops = &pmuirq_ops;
 -		} else {
 -			has_nmi = true;
 -			irq_ops = &pmunmi_ops;
 -		}
  	} else if (armpmu_count_irq_users(irq) == 0) {
++<<<<<<< HEAD
 +		err = request_percpu_irq(irq, handler, "arm-pmu",
 +					 &cpu_armpmu);
++=======
+ 		err = request_percpu_nmi(irq, handler, "arm-pmu", &cpu_armpmu);
+ 
+ 		/* If cannot get an NMI, get a normal interrupt */
+ 		if (err) {
+ 			err = request_percpu_irq(irq, handler, "arm-pmu",
+ 						 &cpu_armpmu);
+ 			irq_ops = &percpu_pmuirq_ops;
+ 		} else {
+ 			has_nmi = true;
+ 			irq_ops = &percpu_pmunmi_ops;
+ 		}
+ 	} else {
+ 		/* Per cpudevid irq was already requested by another CPU */
+ 		irq_ops = armpmu_find_irq_ops(irq);
+ 
+ 		if (WARN_ON(!irq_ops))
+ 			err = -EINVAL;
++>>>>>>> f265fd166bce (drivers/perf: arm_pmu: Fix some coding style issues)
  	}
  
  	if (err)
* Unmerged path drivers/perf/arm_pmu.c
