include/linux/mm_inline.h: shuffle lru list addition and deletion functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Yu Zhao <yuzhao@google.com>
commit f90d8191ac864df33b1898bc7edc54eaa24e22bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/f90d8191.failed

These functions will call page_lru() in the following patches.  Move them
below page_lru() to avoid the forward declaration.

Link: https://lore.kernel.org/linux-mm/20201207220949.830352-3-yuzhao@google.com/
Link: https://lkml.kernel.org/r/20210122220600.906146-3-yuzhao@google.com
	Signed-off-by: Yu Zhao <yuzhao@google.com>
	Acked-by: Vlastimil Babka <vbabka@suse.cz>
	Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
	Cc: Alex Shi <alex.shi@linux.alibaba.com>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Roman Gushchin <guro@fb.com>
	Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit f90d8191ac864df33b1898bc7edc54eaa24e22bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mm_inline.h
diff --cc include/linux/mm_inline.h
index b714bf7a0dfe,2889741f450a..000000000000
--- a/include/linux/mm_inline.h
+++ b/include/linux/mm_inline.h
@@@ -126,6 -105,24 +105,29 @@@ static __always_inline enum lru_list pa
  	return lru;
  }
  
++<<<<<<< HEAD
 +#define lru_to_page(head) (list_entry((head)->prev, struct page, lru))
 +
++=======
+ static __always_inline void add_page_to_lru_list(struct page *page,
+ 				struct lruvec *lruvec, enum lru_list lru)
+ {
+ 	update_lru_size(lruvec, lru, page_zonenum(page), thp_nr_pages(page));
+ 	list_add(&page->lru, &lruvec->lists[lru]);
+ }
+ 
+ static __always_inline void add_page_to_lru_list_tail(struct page *page,
+ 				struct lruvec *lruvec, enum lru_list lru)
+ {
+ 	update_lru_size(lruvec, lru, page_zonenum(page), thp_nr_pages(page));
+ 	list_add_tail(&page->lru, &lruvec->lists[lru]);
+ }
+ 
+ static __always_inline void del_page_from_lru_list(struct page *page,
+ 				struct lruvec *lruvec, enum lru_list lru)
+ {
+ 	list_del(&page->lru);
+ 	update_lru_size(lruvec, lru, page_zonenum(page), -thp_nr_pages(page));
+ }
++>>>>>>> f90d8191ac86 (include/linux/mm_inline.h: shuffle lru list addition and deletion functions)
  #endif
* Unmerged path include/linux/mm_inline.h
