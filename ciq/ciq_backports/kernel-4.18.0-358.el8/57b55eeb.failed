pinctrl: Keep enum pin_config_param ordered by name (part 2)

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit 57b55eeb755201832c2fc2df58818f64fc023fdb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/57b55eeb.failed

It seems the ordering is by name. Keep it that way.
Here updating the entire list (there were two more options not in order).

	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Link: https://lore.kernel.org/r/20210510194717.12255-1-andriy.shevchenko@linux.intel.com
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit 57b55eeb755201832c2fc2df58818f64fc023fdb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pinctrl/pinconf-generic.h
diff --cc include/linux/pinctrl/pinconf-generic.h
index 81f1abde5728,98ed5959ca9a..000000000000
--- a/include/linux/pinctrl/pinconf-generic.h
+++ b/include/linux/pinctrl/pinconf-generic.h
@@@ -81,6 -80,11 +81,14 @@@ struct pinctrl_map
   *	operation, if several modes of operation are supported these can be
   *	passed in the argument on a custom form, else just use argument 1
   *	to indicate low power mode, argument 0 turns low power mode off.
++<<<<<<< HEAD
++=======
+  * @PIN_CONFIG_MODE_PWM: this will configure the pin for PWM
+  * @PIN_CONFIG_OUTPUT: this will configure the pin as an output and drive a
+  * 	value on the line. Use argument 1 to indicate high level, argument 0 to
+  *	indicate low level. (Please see Documentation/driver-api/pinctl.rst,
+  *	section "GPIO mode pitfalls" for a discussion around this parameter.)
++>>>>>>> 57b55eeb7552 (pinctrl: Keep enum pin_config_param ordered by name (part 2))
   * @PIN_CONFIG_OUTPUT_ENABLE: this will enable the pin's output mode
   * 	without driving a value there. For most platforms this reduces to
   * 	enable the output buffers and then let the pin controller current
@@@ -125,14 -125,15 +129,20 @@@ enum pin_config_param 
  	PIN_CONFIG_INPUT_ENABLE,
  	PIN_CONFIG_INPUT_SCHMITT,
  	PIN_CONFIG_INPUT_SCHMITT_ENABLE,
++<<<<<<< HEAD
 +	PIN_CONFIG_LOW_POWER_MODE,
 +	PIN_CONFIG_OUTPUT_ENABLE,
++=======
+ 	PIN_CONFIG_MODE_LOW_POWER,
+ 	PIN_CONFIG_MODE_PWM,
++>>>>>>> 57b55eeb7552 (pinctrl: Keep enum pin_config_param ordered by name (part 2))
  	PIN_CONFIG_OUTPUT,
+ 	PIN_CONFIG_OUTPUT_ENABLE,
  	PIN_CONFIG_PERSIST_STATE,
  	PIN_CONFIG_POWER_SOURCE,
+ 	PIN_CONFIG_SKEW_DELAY,
  	PIN_CONFIG_SLEEP_HARDWARE_STATE,
  	PIN_CONFIG_SLEW_RATE,
- 	PIN_CONFIG_SKEW_DELAY,
  	PIN_CONFIG_END = 0x7F,
  	PIN_CONFIG_MAX = 0xFF,
  };
* Unmerged path include/linux/pinctrl/pinconf-generic.h
