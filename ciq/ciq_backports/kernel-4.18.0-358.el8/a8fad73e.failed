bpf: Remove unnecessary map checks for ARG_PTR_TO_CONST_STR

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Florent Revest <revest@chromium.org>
commit a8fad73e3334151196acb28c4dcde37732c82542
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/a8fad73e.failed

reg->type is enforced by check_reg_type() and map should never be NULL
(it would already have been dereferenced anyway) so these checks are
unnecessary.

	Reported-by: Alexei Starovoitov <ast@kernel.org>
	Signed-off-by: Florent Revest <revest@chromium.org>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20210422235543.4007694-3-revest@chromium.org
(cherry picked from commit a8fad73e3334151196acb28c4dcde37732c82542)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/verifier.c
diff --cc kernel/bpf/verifier.c
index 9ea3cb73827a,2579f6fbb5c3..000000000000
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@@ -4807,6 -5069,44 +4807,47 @@@ skip_type_check
  		if (err)
  			return err;
  		err = check_ptr_alignment(env, reg, 0, size, true);
++<<<<<<< HEAD
++=======
+ 	} else if (arg_type == ARG_PTR_TO_CONST_STR) {
+ 		struct bpf_map *map = reg->map_ptr;
+ 		int map_off;
+ 		u64 map_addr;
+ 		char *str_ptr;
+ 
+ 		if (!bpf_map_is_rdonly(map)) {
+ 			verbose(env, "R%d does not point to a readonly map'\n", regno);
+ 			return -EACCES;
+ 		}
+ 
+ 		if (!tnum_is_const(reg->var_off)) {
+ 			verbose(env, "R%d is not a constant address'\n", regno);
+ 			return -EACCES;
+ 		}
+ 
+ 		if (!map->ops->map_direct_value_addr) {
+ 			verbose(env, "no direct value access support for this map type\n");
+ 			return -EACCES;
+ 		}
+ 
+ 		err = check_map_access(env, regno, reg->off,
+ 				       map->value_size - reg->off, false);
+ 		if (err)
+ 			return err;
+ 
+ 		map_off = reg->off + reg->var_off.value;
+ 		err = map->ops->map_direct_value_addr(map, &map_addr, map_off);
+ 		if (err) {
+ 			verbose(env, "direct value access on string failed\n");
+ 			return err;
+ 		}
+ 
+ 		str_ptr = (char *)(long)(map_addr);
+ 		if (!strnchr(str_ptr + map_off, map->value_size - map_off, 0)) {
+ 			verbose(env, "string is not zero-terminated\n");
+ 			return -EINVAL;
+ 		}
++>>>>>>> a8fad73e3334 (bpf: Remove unnecessary map checks for ARG_PTR_TO_CONST_STR)
  	}
  
  	return err;
* Unmerged path kernel/bpf/verifier.c
