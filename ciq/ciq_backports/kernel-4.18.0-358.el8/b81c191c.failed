ice: Fix a memory leak in an error handling path in 'ice_pf_dcb_cfg()'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Christophe JAILLET <christophe.jaillet@wanadoo.fr>
commit b81c191c468bb9f9e63cb19cdf090732e3218dce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/b81c191c.failed

If this 'kzalloc()' fails we must free some resources as in all the other
error handling paths of this function.

Fixes: 348048e724a0 ("ice: Implement iidc operations")
	Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit b81c191c468bb9f9e63cb19cdf090732e3218dce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_dcb_lib.c
diff --cc drivers/net/ethernet/intel/ice/ice_dcb_lib.c
index df02cffdf209,926cf748c5ec..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_dcb_lib.c
+++ b/drivers/net/ethernet/intel/ice/ice_dcb_lib.c
@@@ -313,6 -314,17 +313,20 @@@ int ice_pf_dcb_cfg(struct ice_pf *pf, s
  		goto free_cfg;
  	}
  
++<<<<<<< HEAD
++=======
+ 	/* Notify AUX drivers about impending change to TCs */
+ 	event = kzalloc(sizeof(*event), GFP_KERNEL);
+ 	if (!event) {
+ 		ret = -ENOMEM;
+ 		goto free_cfg;
+ 	}
+ 
+ 	set_bit(IIDC_EVENT_BEFORE_TC_CHANGE, event->type);
+ 	ice_send_event_to_aux(pf, event);
+ 	kfree(event);
+ 
++>>>>>>> b81c191c468b (ice: Fix a memory leak in an error handling path in 'ice_pf_dcb_cfg()')
  	/* avoid race conditions by holding the lock while disabling and
  	 * re-enabling the VSI
  	 */
* Unmerged path drivers/net/ethernet/intel/ice/ice_dcb_lib.c
