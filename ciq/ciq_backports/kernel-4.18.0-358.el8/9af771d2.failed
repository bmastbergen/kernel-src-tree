selftests/net: allow GRO coalesce test on veth

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit 9af771d2ec044ffc19192711ac29f1d5c31dc181
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/9af771d2.failed

This change extends the existing GRO coalesce test to
allow running on top of a veth pair, so that no H/W dep
is required to run them.

By default gro.sh will use the veth backend, and will try
to use exiting H/W in loopback mode if a specific device
name is provided with the '-i' command line option.

No functional change is intended for the loopback-based
tests, just move all the relevant initialization/cleanup
code into the related script.

Introduces a new initialization helper script for the
veth backend, and plugs the correct helper script according
to the provided command line.

Additionally, enable veth-based tests by default.

v1 -> v2:
  - drop unused code in setup_veth_ns() - Willem

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9af771d2ec044ffc19192711ac29f1d5c31dc181)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/net/Makefile
#	tools/testing/selftests/net/gro.sh
#	tools/testing/selftests/net/setup_loopback.sh
diff --cc tools/testing/selftests/net/Makefile
index accac7720762,378c0aac5a1a..000000000000
--- a/tools/testing/selftests/net/Makefile
+++ b/tools/testing/selftests/net/Makefile
@@@ -17,9 -20,13 +17,14 @@@ TEST_PROGS += vrf-xfrm-tests.s
  TEST_PROGS += rxtimestamp.sh
  TEST_PROGS += devlink_port_split.py
  TEST_PROGS += drop_monitor_tests.sh
 -TEST_PROGS += vrf_route_leaking.sh
  TEST_PROGS += bareudp.sh
 -TEST_PROGS += unicast_extensions.sh
  TEST_PROGS += udpgro_fwd.sh
  TEST_PROGS += veth.sh
++<<<<<<< HEAD
++=======
+ TEST_PROGS += ioam6.sh
+ TEST_PROGS += gro.sh
++>>>>>>> 9af771d2ec04 (selftests/net: allow GRO coalesce test on veth)
  TEST_PROGS_EXTENDED := in_netns.sh
  TEST_GEN_FILES =  socket nettest
  TEST_GEN_FILES += psock_fanout psock_tpacket msg_zerocopy reuseport_addr_any
* Unmerged path tools/testing/selftests/net/gro.sh
* Unmerged path tools/testing/selftests/net/setup_loopback.sh
* Unmerged path tools/testing/selftests/net/Makefile
* Unmerged path tools/testing/selftests/net/gro.sh
* Unmerged path tools/testing/selftests/net/setup_loopback.sh
diff --git a/tools/testing/selftests/net/setup_veth.sh b/tools/testing/selftests/net/setup_veth.sh
new file mode 100644
index 000000000000..1003ddf7b3b2
--- /dev/null
+++ b/tools/testing/selftests/net/setup_veth.sh
@@ -0,0 +1,41 @@
+#!/bin/bash
+# SPDX-License-Identifier: GPL-2.0
+
+setup_veth_ns() {
+	local -r link_dev="$1"
+	local -r ns_name="$2"
+	local -r ns_dev="$3"
+	local -r ns_mac="$4"
+
+	[[ -e /var/run/netns/"${ns_name}" ]] || ip netns add "${ns_name}"
+	echo 100000 > "/sys/class/net/${ns_dev}/gro_flush_timeout"
+	ip link set dev "${ns_dev}" netns "${ns_name}" mtu 65535
+	ip -netns "${ns_name}" link set dev "${ns_dev}" up
+
+	ip netns exec "${ns_name}" ethtool -K "${ns_dev}" gro on tso off
+}
+
+setup_ns() {
+	# Set up server_ns namespace and client_ns namespace
+	ip link add name server type veth peer name client
+
+	setup_veth_ns "${dev}" server_ns server "${SERVER_MAC}"
+	setup_veth_ns "${dev}" client_ns client "${CLIENT_MAC}"
+}
+
+cleanup_ns() {
+	local ns_name
+
+	for ns_name in client_ns server_ns; do
+		[[ -e /var/run/netns/"${ns_name}" ]] && ip netns del "${ns_name}"
+	done
+}
+
+setup() {
+	# no global init setup step needed
+	:
+}
+
+cleanup() {
+	cleanup_ns
+}
