nvme: merge nvme_keep_alive into nvme_keep_alive_work

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 06c3c3365b4bae5ef0f0525d3683b73cbae1e69c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/06c3c336.failed

Merge nvme_keep_alive into its only caller to prepare for additional
changes to this code.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Reviewed-by: Daniel Wagner <dwagner@suse.de>
(cherry picked from commit 06c3c3365b4bae5ef0f0525d3683b73cbae1e69c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 1f59d5d8c422,45d510a12c6b..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -1270,23 -1226,6 +1270,26 @@@ static void nvme_keep_alive_end_io(stru
  		queue_delayed_work(nvme_wq, &ctrl->ka_work, ctrl->kato * HZ);
  }
  
++<<<<<<< HEAD
 +static int nvme_keep_alive(struct nvme_ctrl *ctrl)
 +{
 +	struct request *rq;
 +
 +	rq = nvme_alloc_request(ctrl->admin_q, &ctrl->ka_cmd,
 +			BLK_MQ_REQ_RESERVED);
 +	if (IS_ERR(rq))
 +		return PTR_ERR(rq);
 +
 +	rq->timeout = ctrl->kato * HZ;
 +	rq->end_io_data = ctrl;
 +
 +	blk_execute_rq_nowait(rq->q, NULL, rq, 0, nvme_keep_alive_end_io);
 +
 +	return 0;
 +}
 +
++=======
++>>>>>>> 06c3c3365b4b (nvme: merge nvme_keep_alive into nvme_keep_alive_work)
  static void nvme_keep_alive_work(struct work_struct *work)
  {
  	struct nvme_ctrl *ctrl = container_of(to_delayed_work(work),
* Unmerged path drivers/nvme/host/core.c
