arm64: kaslr: Announce KASLR status on boot

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Mark Brown <broonie@kernel.org>
commit 294a9ddde6cdbf931a28b8c8c928d3f799b61cb5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/294a9ddd.failed

Currently the KASLR code is silent at boot unless it forces on KPTI in
which case a message will be printed for that. This can lead to users
incorrectly believing their system has the feature enabled when it in
fact does not, and if they notice the problem the lack of any
diagnostics makes it harder to understand the problem. Add an initcall
which prints a message showing the status of KASLR during boot to make
the status clear.

This is particularly useful in cases where we don't have a seed. It
seems to be a relatively common error for system integrators and
administrators to enable KASLR in their configuration but not provide
the seed at runtime, often due to seed provisioning breaking at some
later point after it is initially enabled and verified.

	Signed-off-by: Mark Brown <broonie@kernel.org>
	Acked-by: Mark Rutland <mark.rutland@arm.com>
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit 294a9ddde6cdbf931a28b8c8c928d3f799b61cb5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/kaslr.c
diff --cc arch/arm64/kernel/kaslr.c
index a3b053f0f5b8,0039dc50e556..000000000000
--- a/arch/arm64/kernel/kaslr.c
+++ b/arch/arm64/kernel/kaslr.c
@@@ -97,9 -98,11 +105,16 @@@ u64 __init kaslr_early_init(u64 dt_phys
  	 * attempt at mapping the FDT in setup_machine()
  	 */
  	early_fixmap_init();
++<<<<<<< HEAD
 +	fdt = __fixmap_remap_fdt(dt_phys, &size, PAGE_KERNEL);
 +	if (!fdt)
++=======
+ 	fdt = fixmap_remap_fdt(dt_phys, &size, PAGE_KERNEL);
+ 	if (!fdt) {
+ 		kaslr_status = KASLR_DISABLED_FDT_REMAP;
++>>>>>>> 294a9ddde6cd (arm64: kaslr: Announce KASLR status on boot)
  		return 0;
+ 	}
  
  	/*
  	 * Retrieve (and wipe) the seed from the FDT
* Unmerged path arch/arm64/kernel/kaslr.c
