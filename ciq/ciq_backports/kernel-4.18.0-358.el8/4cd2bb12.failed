time/sched_clock: Mark sched_clock_read_begin/retry() as notrace

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Quanyang Wang <quanyang.wang@windriver.com>
commit 4cd2bb12981165f865d2b8ed92b446b52310ef74
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/4cd2bb12.failed

Since sched_clock_read_begin() and sched_clock_read_retry() are called
by notrace function sched_clock(), they shouldn't be traceable either,
or else ftrace_graph_caller will run into a dead loop on the path
as below (arm for instance):

  ftrace_graph_caller()
    prepare_ftrace_return()
      function_graph_enter()
        ftrace_push_return_trace()
          trace_clock_local()
            sched_clock()
              sched_clock_read_begin/retry()

Fixes: 1b86abc1c645 ("sched_clock: Expose struct clock_read_data")
	Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20200929082027.16787-1-quanyang.wang@windriver.com
(cherry picked from commit 4cd2bb12981165f865d2b8ed92b446b52310ef74)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/time/sched_clock.c
diff --cc kernel/time/sched_clock.c
index c4bb7d840723,b1b9b12899f5..000000000000
--- a/kernel/time/sched_clock.c
+++ b/kernel/time/sched_clock.c
@@@ -96,6 -68,17 +96,20 @@@ static inline u64 notrace cyc_to_ns(u6
  	return (cyc * mult) >> shift;
  }
  
++<<<<<<< HEAD
++=======
+ notrace struct clock_read_data *sched_clock_read_begin(unsigned int *seq)
+ {
+ 	*seq = raw_read_seqcount_latch(&cd.seq);
+ 	return cd.read_data + (*seq & 1);
+ }
+ 
+ notrace int sched_clock_read_retry(unsigned int seq)
+ {
+ 	return read_seqcount_latch_retry(&cd.seq, seq);
+ }
+ 
++>>>>>>> 4cd2bb129811 (time/sched_clock: Mark sched_clock_read_begin/retry() as notrace)
  unsigned long long notrace sched_clock(void)
  {
  	u64 cyc, res;
* Unmerged path kernel/time/sched_clock.c
