arm64: mte: Fix typo in macro definition

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Vincenzo Frascino <vincenzo.frascino@arm.com>
commit 9e5344e0ffc33f4fee899f98b6939a0682b1d9c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/9e5344e0.failed

UL in the definition of SYS_TFSR_EL1_TF1 was misspelled causing
compilation issues when trying to implement in kernel MTE async
mode.

Fix the macro correcting the typo.

Note: MTE async mode will be introduced with a future series.

Fixes: c058b1c4a5ea ("arm64: mte: system register definitions")
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Will Deacon <will@kernel.org>
	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
Link: https://lore.kernel.org/r/20201130170709.22309-1-vincenzo.frascino@arm.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 9e5344e0ffc33f4fee899f98b6939a0682b1d9c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/sysreg.h
diff --cc arch/arm64/include/asm/sysreg.h
index c3518a26b35e,c8ab9900293f..000000000000
--- a/arch/arm64/include/asm/sysreg.h
+++ b/arch/arm64/include/asm/sysreg.h
@@@ -856,21 -958,35 +856,46 @@@
  #define ZCR_ELx_LEN_SIZE	9
  #define ZCR_ELx_LEN_MASK	0x1ff
  
 -#define CPACR_EL1_ZEN_EL1EN	(BIT(16)) /* enable EL1 access */
 -#define CPACR_EL1_ZEN_EL0EN	(BIT(17)) /* enable EL0 access, if EL1EN set */
 +#define CPACR_EL1_ZEN_EL1EN	(1 << 16) /* enable EL1 access */
 +#define CPACR_EL1_ZEN_EL0EN	(1 << 17) /* enable EL0 access, if EL1EN set */
  #define CPACR_EL1_ZEN		(CPACR_EL1_ZEN_EL1EN | CPACR_EL1_ZEN_EL0EN)
  
++<<<<<<< HEAD
++=======
+ /* TCR EL1 Bit Definitions */
+ #define SYS_TCR_EL1_TCMA1	(BIT(58))
+ #define SYS_TCR_EL1_TCMA0	(BIT(57))
+ 
+ /* GCR_EL1 Definitions */
+ #define SYS_GCR_EL1_RRND	(BIT(16))
+ #define SYS_GCR_EL1_EXCL_MASK	0xffffUL
+ 
+ /* RGSR_EL1 Definitions */
+ #define SYS_RGSR_EL1_TAG_MASK	0xfUL
+ #define SYS_RGSR_EL1_SEED_SHIFT	8
+ #define SYS_RGSR_EL1_SEED_MASK	0xffffUL
+ 
+ /* GMID_EL1 field definitions */
+ #define SYS_GMID_EL1_BS_SHIFT	0
+ #define SYS_GMID_EL1_BS_SIZE	4
+ 
+ /* TFSR{,E0}_EL1 bit definitions */
+ #define SYS_TFSR_EL1_TF0_SHIFT	0
+ #define SYS_TFSR_EL1_TF1_SHIFT	1
+ #define SYS_TFSR_EL1_TF0	(UL(1) << SYS_TFSR_EL1_TF0_SHIFT)
+ #define SYS_TFSR_EL1_TF1	(UL(1) << SYS_TFSR_EL1_TF1_SHIFT)
++>>>>>>> 9e5344e0ffc3 (arm64: mte: Fix typo in macro definition)
  
  /* Safe value for MPIDR_EL1: Bit31:RES1, Bit30:U:0, Bit24:MT:0 */
 -#define SYS_MPIDR_SAFE_VAL	(BIT(31))
 +#define SYS_MPIDR_SAFE_VAL		(1UL << 31)
 +
 +#define TRFCR_ELx_TS_SHIFT		5
 +#define TRFCR_ELx_TS_VIRTUAL		((0x1UL) << TRFCR_ELx_TS_SHIFT)
 +#define TRFCR_ELx_TS_GUEST_PHYSICAL	((0x2UL) << TRFCR_ELx_TS_SHIFT)
 +#define TRFCR_ELx_TS_PHYSICAL		((0x3UL) << TRFCR_ELx_TS_SHIFT)
 +#define TRFCR_EL2_CX			BIT(3)
 +#define TRFCR_ELx_ExTRE			BIT(1)
 +#define TRFCR_ELx_E0TRE			BIT(0)
  
  #ifdef __ASSEMBLY__
  
* Unmerged path arch/arm64/include/asm/sysreg.h
