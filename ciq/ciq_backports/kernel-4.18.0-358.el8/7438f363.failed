parisc/kmap: remove duplicate kmap code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Ira Weiny <ira.weiny@intel.com>
commit 7438f36310ddd9fe536fc7403187f63427cecaba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/7438f363.failed

parisc reimplements the kmap calls except to flush its dcache.  This is
arguably an abuse of kmap but regardless it is messy and confusing.

Remove the duplicate code and have parisc define ARCH_HAS_FLUSH_ON_KUNMAP
for a kunmap_flush_on_unmap() architecture specific call to flush the
cache.

	Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
	Signed-off-by: Ira Weiny <ira.weiny@intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Christian KÃ¶nig <christian.koenig@amd.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Chris Zankel <chris@zankel.net>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: "David S. Miller" <davem@davemloft.net>
	Cc: Helge Deller <deller@gmx.de>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>
	Cc: Max Filippov <jcmvbkbc@gmail.com>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/20200507150004.1423069-14-ira.weiny@intel.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 7438f36310ddd9fe536fc7403187f63427cecaba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/parisc/include/asm/cacheflush.h
#	include/linux/highmem.h
diff --cc arch/parisc/include/asm/cacheflush.h
index 0c83644bfa5c,99663fc1f997..000000000000
--- a/arch/parisc/include/asm/cacheflush.h
+++ b/arch/parisc/include/asm/cacheflush.h
@@@ -100,37 -100,11 +100,39 @@@ flush_anon_page(struct vm_area_struct *
  	}
  }
  
++<<<<<<< HEAD
 +#include <asm/kmap_types.h>
 +
 +#define ARCH_HAS_KMAP
 +
 +static inline void *kmap(struct page *page)
 +{
 +	might_sleep();
 +	return page_address(page);
 +}
 +
 +static inline void kunmap(struct page *page)
 +{
 +	flush_kernel_dcache_page_addr(page_address(page));
 +}
 +
 +static inline void *kmap_atomic(struct page *page)
 +{
 +	preempt_disable();
 +	pagefault_disable();
 +	return page_address(page);
 +}
 +
 +static inline void __kunmap_atomic(void *addr)
++=======
+ #define ARCH_HAS_FLUSH_ON_KUNMAP
+ static inline void kunmap_flush_on_unmap(void *addr)
++>>>>>>> 7438f36310dd (parisc/kmap: remove duplicate kmap code)
  {
  	flush_kernel_dcache_page_addr(addr);
 +	pagefault_enable();
 +	preempt_enable();
  }
  
- #define kmap_atomic_prot(page, prot)	kmap_atomic(page)
- #define kmap_atomic_pfn(pfn)	kmap_atomic(pfn_to_page(pfn))
- 
  #endif /* _PARISC_CACHEFLUSH_H */
  
diff --cc include/linux/highmem.h
index ea5cdbd8c2c3,091b32dff2d1..000000000000
--- a/include/linux/highmem.h
+++ b/include/linux/highmem.h
@@@ -84,8 -136,15 +83,11 @@@ static inline void *kmap(struct page *p
  	return page_address(page);
  }
  
 -static inline void kunmap_high(struct page *page)
 -{
 -}
 -
  static inline void kunmap(struct page *page)
  {
+ #ifdef ARCH_HAS_FLUSH_ON_KUNMAP
+ 	kunmap_flush_on_unmap(page_address(page));
+ #endif
  }
  
  static inline void *kmap_atomic(struct page *page)
@@@ -96,10 -155,15 +98,20 @@@
  }
  #define kmap_atomic_prot(page, prot)	kmap_atomic(page)
  
 -static inline void kunmap_atomic_high(void *addr)
 +static inline void __kunmap_atomic(void *addr)
  {
++<<<<<<< HEAD
 +	pagefault_enable();
 +	preempt_enable();
++=======
+ 	/*
+ 	 * Mostly nothing to do in the CONFIG_HIGHMEM=n case as kunmap_atomic()
+ 	 * handles re-enabling faults + preemption
+ 	 */
+ #ifdef ARCH_HAS_FLUSH_ON_KUNMAP
+ 	kunmap_flush_on_unmap(addr);
+ #endif
++>>>>>>> 7438f36310dd (parisc/kmap: remove duplicate kmap code)
  }
  
  #define kmap_atomic_pfn(pfn)	kmap_atomic(pfn_to_page(pfn))
* Unmerged path arch/parisc/include/asm/cacheflush.h
* Unmerged path include/linux/highmem.h
