perf/arm_pmu_platform: Clean up with dev_printk

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Robin Murphy <robin.murphy@arm.com>
commit e20ac6c54a93335b56a6d057aa5da27183f573fa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/e20ac6c5.failed

Nearly all of the messages we can log from the platform device code
relate to the specific PMU device and the properties we're parsing from
its DT node. In some cases we use %pOF to point at where something was
wrong, but even that is inconsistent. Let's convert these logs to the
appropriate dev_printk variants, so that every issue specific to the
device and/or its DT description is clearly and instantly attributable,
particularly if there is more than one PMU node present in the DT.

The local refactoring in a couple of functions invites some extra
cleanup in the process - the init_fn matching can be streamlined, and
the PMU registration failure message moved to the appropriate place and
log level.

CC: Tian Tao <tiantao6@hisilicon.com>
	Signed-off-by: Robin Murphy <robin.murphy@arm.com>
Link: https://lore.kernel.org/r/10a4aacdf071d0c03d061c408a5899e5b32cc0a6.1616774562.git.robin.murphy@arm.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit e20ac6c54a93335b56a6d057aa5da27183f573fa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/perf/arm_pmu_platform.c
diff --cc drivers/perf/arm_pmu_platform.c
index ad111f4cc582,513de1f54e2d..000000000000
--- a/drivers/perf/arm_pmu_platform.c
+++ b/drivers/perf/arm_pmu_platform.c
@@@ -73,19 -73,18 +73,27 @@@ static int pmu_parse_irq_affinity(struc
  	 * affinity matches our logical CPU order, as we used to assume.
  	 * This is fragile, so we'll warn in pmu_parse_irqs().
  	 */
- 	if (!pmu_has_irq_affinity(node))
+ 	if (!pmu_has_irq_affinity(dev->of_node))
  		return i;
  
- 	dn = of_parse_phandle(node, "interrupt-affinity", i);
+ 	dn = of_parse_phandle(dev->of_node, "interrupt-affinity", i);
  	if (!dn) {
++<<<<<<< HEAD
 +		pr_warn("failed to parse interrupt-affinity[%d] for %s\n",
 +			i, node->name);
++=======
+ 		dev_warn(dev, "failed to parse interrupt-affinity[%d]\n", i);
++>>>>>>> e20ac6c54a93 (perf/arm_pmu_platform: Clean up with dev_printk)
  		return -EINVAL;
  	}
  
  	cpu = of_cpu_node_to_id(dn);
  	if (cpu < 0) {
++<<<<<<< HEAD
 +		pr_warn("failed to find logical CPU for %s\n", dn->name);
++=======
+ 		dev_warn(dev, "failed to find logical CPU for %pOFn\n", dn);
++>>>>>>> e20ac6c54a93 (perf/arm_pmu_platform: Clean up with dev_printk)
  		cpu = nr_cpu_ids;
  	}
  
* Unmerged path drivers/perf/arm_pmu_platform.c
