block: fix trace completion for chained bio

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Edward Hsieh <edwardh@synology.com>
commit 60b6a7e6a0f4382cd689f9afdac816964fec2921
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/60b6a7e6.failed

For chained bio, trace_block_bio_complete in bio_endio is currently called
only by the parent bio once upon all chained bio completed.
However, the sector and size for the parent bio are modified in bio_split.
Therefore, the size and sector of the complete events might not match the
queue events in blktrace.

The original fix of bio completion trace <fbbaf700e7b1> ("block: trace
completion of all bios.") wants multiple complete events to correspond
to one queue event but missed this.

The issue can be reproduced by md/raid5 read with bio cross chunks.

To fix, move trace completion into the loop for every chained bio to call.

Fixes: fbbaf700e7b1 ("block: trace completion of all bios.")
	Reviewed-by: Wade Liang <wadel@synology.com>
	Reviewed-by: BingJing Chang <bingjingc@synology.com>
	Signed-off-by: Edward Hsieh <edwardh@synology.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
Link: https://lore.kernel.org/r/20210624123030.27014-1-edwardh@synology.com
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 60b6a7e6a0f4382cd689f9afdac816964fec2921)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/bio.c
diff --cc block/bio.c
index 3992af35a0a5,1fab762e079b..000000000000
--- a/block/bio.c
+++ b/block/bio.c
@@@ -2019,9 -1385,14 +2018,14 @@@ again
  	if (!bio_integrity_endio(bio))
  		return;
  
 -	if (bio->bi_bdev)
 -		rq_qos_done_bio(bio->bi_bdev->bd_disk->queue, bio);
 +	if (bio->bi_disk)
 +		rq_qos_done_bio(bio->bi_disk->queue, bio);
  
+ 	if (bio->bi_bdev && bio_flagged(bio, BIO_TRACE_COMPLETION)) {
+ 		trace_block_bio_complete(bio->bi_bdev->bd_disk->queue, bio);
+ 		bio_clear_flag(bio, BIO_TRACE_COMPLETION);
+ 	}
+ 
  	/*
  	 * Need to have a real endio function for chained bios, otherwise
  	 * various corner cases will break (like stacking block devices that
@@@ -2035,11 -1406,6 +2039,14 @@@
  		goto again;
  	}
  
++<<<<<<< HEAD
 +	if (bio->bi_disk && bio_flagged(bio, BIO_TRACE_COMPLETION)) {
 +		trace_block_bio_complete(bio->bi_disk->queue, bio);
 +		bio_clear_flag(bio, BIO_TRACE_COMPLETION);
 +	}
 +
++=======
++>>>>>>> 60b6a7e6a0f4 (block: fix trace completion for chained bio)
  	blk_throtl_bio_endio(bio);
  	/* release cgroup info */
  	bio_uninit(bio);
* Unmerged path block/bio.c
