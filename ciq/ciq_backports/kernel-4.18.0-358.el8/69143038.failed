perf: Use new infrastructure to fix deadlocks in execve

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Bernd Edlinger <bernd.edlinger@hotmail.de>
commit 6914303824bb572278568330d72fc1f8f9814e67
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/69143038.failed

This changes perf_event_set_clock to use the new exec_update_mutex
instead of cred_guard_mutex.

This should be safe, as the credentials are only used for reading.

	Signed-off-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
	Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
(cherry picked from commit 6914303824bb572278568330d72fc1f8f9814e67)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/events/core.c
diff --cc kernel/events/core.c
index 9ae222f3c9bc,71cba8cfccbc..000000000000
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@@ -11917,6 -11262,24 +11917,27 @@@ SYSCALL_DEFINE5(perf_event_open
  		goto err_task;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (task) {
+ 		err = mutex_lock_interruptible(&task->signal->exec_update_mutex);
+ 		if (err)
+ 			goto err_task;
+ 
+ 		/*
+ 		 * Reuse ptrace permission checks for now.
+ 		 *
+ 		 * We must hold exec_update_mutex across this and any potential
+ 		 * perf_install_in_context() call for this new event to
+ 		 * serialize against exec() altering our credentials (and the
+ 		 * perf_event_exit_task() that could imply).
+ 		 */
+ 		err = -EACCES;
+ 		if (!ptrace_may_access(task, PTRACE_MODE_READ_REALCREDS))
+ 			goto err_cred;
+ 	}
+ 
++>>>>>>> 6914303824bb (perf: Use new infrastructure to fix deadlocks in execve)
  	if (flags & PERF_FLAG_PID_CGROUP)
  		cgroup_fd = pid;
  
@@@ -12251,6 -11593,9 +12272,12 @@@ err_alloc
  	 */
  	if (!event_file)
  		free_event(event);
++<<<<<<< HEAD
++=======
+ err_cred:
+ 	if (task)
+ 		mutex_unlock(&task->signal->exec_update_mutex);
++>>>>>>> 6914303824bb (perf: Use new infrastructure to fix deadlocks in execve)
  err_task:
  	if (task)
  		put_task_struct(task);
* Unmerged path kernel/events/core.c
