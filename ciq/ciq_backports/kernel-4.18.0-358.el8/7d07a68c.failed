net: bridge: mcast: when igmpv3/mldv2 are enabled lookup (S,G) first, then (*,G)

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Nikolay Aleksandrov <nikolay@nvidia.com>
commit 7d07a68c251080f8f2cfd071b7b3f7d1093a3375
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/7d07a68c.failed

If (S,G) entries are enabled (igmpv3/mldv2) then look them up first. If
there isn't a present (S,G) entry then try to find (*,G).

	Signed-off-by: Nikolay Aleksandrov <nikolay@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7d07a68c251080f8f2cfd071b7b3f7d1093a3375)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_multicast.c
diff --cc net/bridge/br_multicast.c
index 28b757a17768,4fd690bc848f..000000000000
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@@ -132,11 -126,29 +132,37 @@@ struct net_bridge_mdb_entry *br_mdb_get
  
  	switch (skb->protocol) {
  	case htons(ETH_P_IP):
++<<<<<<< HEAD
 +		ip.u.ip4 = ip_hdr(skb)->daddr;
 +		break;
 +#if IS_ENABLED(CONFIG_IPV6)
 +	case htons(ETH_P_IPV6):
 +		ip.u.ip6 = ipv6_hdr(skb)->daddr;
++=======
+ 		ip.dst.ip4 = ip_hdr(skb)->daddr;
+ 		if (br->multicast_igmp_version == 3) {
+ 			struct net_bridge_mdb_entry *mdb;
+ 
+ 			ip.src.ip4 = ip_hdr(skb)->saddr;
+ 			mdb = br_mdb_ip_get_rcu(br, &ip);
+ 			if (mdb)
+ 				return mdb;
+ 			ip.src.ip4 = 0;
+ 		}
+ 		break;
+ #if IS_ENABLED(CONFIG_IPV6)
+ 	case htons(ETH_P_IPV6):
+ 		ip.dst.ip6 = ipv6_hdr(skb)->daddr;
+ 		if (br->multicast_mld_version == 2) {
+ 			struct net_bridge_mdb_entry *mdb;
+ 
+ 			ip.src.ip6 = ipv6_hdr(skb)->saddr;
+ 			mdb = br_mdb_ip_get_rcu(br, &ip);
+ 			if (mdb)
+ 				return mdb;
+ 			memset(&ip.src.ip6, 0, sizeof(ip.src.ip6));
+ 		}
++>>>>>>> 7d07a68c2510 (net: bridge: mcast: when igmpv3/mldv2 are enabled lookup (S,G) first, then (*,G))
  		break;
  #endif
  	default:
* Unmerged path net/bridge/br_multicast.c
