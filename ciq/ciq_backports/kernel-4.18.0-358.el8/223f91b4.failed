scsi: scsi_debug: Fix scp is NULL errors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Douglas Gilbert <dgilbert@interlog.com>
commit 223f91b48079227f914657f07d2d686f7b60aa26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/223f91b4.failed

John Garry reported 'sdebug_q_cmd_complete: scp is NULL' failures that were
mainly seen on aarch64 machines (e.g. RPi 4 with four A72 CPUs). The
problem was tracked down to a missing critical section on a "short circuit"
path. Namely, the time to process the current command so far has already
exceeded the requested command duration (i.e. the number of nanoseconds in
the ndelay parameter).

The random=1 parameter setting was pivotal in finding this error.  The
failure scenario involved first taking that "short circuit" path (due to a
very short command duration) and then taking the more likely
hrtimer_start() path (due to a longer command duration). With random=1 each
command's duration is taken from the uniformly distributed [0..ndelay)
interval.  The fio utility also helped by reliably generating the error
scenario at about once per minute on a RPi 4 (64 bit OS).

Link: https://lore.kernel.org/r/20200813155738.109298-1-dgilbert@interlog.com
	Reported-by: John Garry <john.garry@huawei.com>
	Reviewed-by: Lee Duncan <lduncan@suse.com>
	Signed-off-by: Douglas Gilbert <dgilbert@interlog.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 223f91b48079227f914657f07d2d686f7b60aa26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_debug.c
diff --cc drivers/scsi/scsi_debug.c
index 59e8909a7d8a,139f0073da37..000000000000
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@@ -5480,6 -5486,24 +5480,27 @@@ static int schedule_resp(struct scsi_cm
  		} else {	/* ndelay has a 4.2 second max */
  			kt = sdebug_random ? prandom_u32_max((u32)ndelay) :
  					     (u32)ndelay;
++<<<<<<< HEAD
++=======
+ 			if (ndelay < INCLUSIVE_TIMING_MAX_NS) {
+ 				u64 d = ktime_get_boottime_ns() - ns_from_boot;
+ 
+ 				if (kt <= d) {	/* elapsed duration >= kt */
+ 					spin_lock_irqsave(&sqp->qc_lock, iflags);
+ 					sqcp->a_cmnd = NULL;
+ 					atomic_dec(&devip->num_in_q);
+ 					clear_bit(k, sqp->in_use_bm);
+ 					spin_unlock_irqrestore(&sqp->qc_lock, iflags);
+ 					if (new_sd_dp)
+ 						kfree(sd_dp);
+ 					/* call scsi_done() from this thread */
+ 					cmnd->scsi_done(cmnd);
+ 					return 0;
+ 				}
+ 				/* otherwise reduce kt by elapsed time */
+ 				kt -= d;
+ 			}
++>>>>>>> 223f91b48079 (scsi: scsi_debug: Fix scp is NULL errors)
  		}
  		if (!sd_dp->init_hrt) {
  			sd_dp->init_hrt = true;
* Unmerged path drivers/scsi/scsi_debug.c
