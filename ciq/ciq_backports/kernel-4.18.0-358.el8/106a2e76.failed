KVM: selftests: Lower the min virtual address for misc page allocations

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 106a2e766eae7161a0500048004bbc2f75ea9a98
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/106a2e76.failed

Reduce the minimum virtual address of page allocations from 0x10000 to
KVM_UTIL_MIN_VADDR (0x2000).  Both values appear to be completely
arbitrary, and reducing the min to KVM_UTIL_MIN_VADDR will allow for
additional consolidation of code.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20210622200529.3650424-8-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 106a2e766eae7161a0500048004bbc2f75ea9a98)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/lib/kvm_util.c
diff --cc tools/testing/selftests/kvm/lib/kvm_util.c
index 6e1f9b382aee,6c02ff93e807..000000000000
--- a/tools/testing/selftests/kvm/lib/kvm_util.c
+++ b/tools/testing/selftests/kvm/lib/kvm_util.c
@@@ -1238,6 -1277,44 +1238,47 @@@ vm_vaddr_t vm_vaddr_alloc(struct kvm_v
  }
  
  /*
++<<<<<<< HEAD
++=======
+  * VM Virtual Address Allocate Pages
+  *
+  * Input Args:
+  *   vm - Virtual Machine
+  *
+  * Output Args: None
+  *
+  * Return:
+  *   Starting guest virtual address
+  *
+  * Allocates at least N system pages worth of bytes within the virtual address
+  * space of the vm.
+  */
+ vm_vaddr_t vm_vaddr_alloc_pages(struct kvm_vm *vm, int nr_pages)
+ {
+ 	return vm_vaddr_alloc(vm, nr_pages * getpagesize(), KVM_UTIL_MIN_VADDR, 0, 0);
+ }
+ 
+ /*
+  * VM Virtual Address Allocate Page
+  *
+  * Input Args:
+  *   vm - Virtual Machine
+  *
+  * Output Args: None
+  *
+  * Return:
+  *   Starting guest virtual address
+  *
+  * Allocates at least one system page worth of bytes within the virtual address
+  * space of the vm.
+  */
+ vm_vaddr_t vm_vaddr_alloc_page(struct kvm_vm *vm)
+ {
+ 	return vm_vaddr_alloc_pages(vm, 1);
+ }
+ 
+ /*
++>>>>>>> 106a2e766eae (KVM: selftests: Lower the min virtual address for misc page allocations)
   * Map a range of VM virtual address to the VM's physical address
   *
   * Input Args:
* Unmerged path tools/testing/selftests/kvm/lib/kvm_util.c
