nvme: simplify the compat ioctl handling

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 89b3d6e60550ded5a88ae69cd04d17558e948878
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/89b3d6e6.failed

Don't bother defining a separate compat_ioctl handler, and just handle
the NVME_IOCTL_SUBMIT_IO32 case inline.  Also only defined it for those
ABIs (currently just i386 vs x86_64) that are affected.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Keith Busch <kbusch@kernel.org>
	Reviewed-by: Javier Gonz√°lez <javier.gonz@samsung.com>
(cherry picked from commit 89b3d6e60550ded5a88ae69cd04d17558e948878)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index bf3ac9d14052,cb20c5c8bbc4..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -1829,6 -1783,52 +1829,55 @@@ static int nvme_handle_ctrl_ioctl(struc
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef COMPAT_FOR_U64_ALIGNMENT
+ struct nvme_user_io32 {
+ 	__u8	opcode;
+ 	__u8	flags;
+ 	__u16	control;
+ 	__u16	nblocks;
+ 	__u16	rsvd;
+ 	__u64	metadata;
+ 	__u64	addr;
+ 	__u64	slba;
+ 	__u32	dsmgmt;
+ 	__u32	reftag;
+ 	__u16	apptag;
+ 	__u16	appmask;
+ } __attribute__((__packed__));
+ #define NVME_IOCTL_SUBMIT_IO32	_IOW('N', 0x42, struct nvme_user_io32)
+ #endif /* COMPAT_FOR_U64_ALIGNMENT */
+ 
+ static int nvme_ns_ioctl(struct nvme_ns *ns, unsigned int cmd,
+ 		void __user *argp)
+ {
+ 	switch (cmd) {
+ 	case NVME_IOCTL_ID:
+ 		force_successful_syscall_return();
+ 		return ns->head->ns_id;
+ 	case NVME_IOCTL_IO_CMD:
+ 		return nvme_user_cmd(ns->ctrl, ns, argp);
+ 	/*
+ 	 * struct nvme_user_io can have different padding on some 32-bit ABIs.
+ 	 * Just accept the compat version as all fields that are used are the
+ 	 * same size and at the same offset.
+ 	 */
+ #ifdef COMPAT_FOR_U64_ALIGNMENT
+ 	case NVME_IOCTL_SUBMIT_IO32:
+ #endif
+ 	case NVME_IOCTL_SUBMIT_IO:
+ 		return nvme_submit_io(ns, argp);
+ 	case NVME_IOCTL_IO64_CMD:
+ 		return nvme_user_cmd64(ns->ctrl, ns, argp);
+ 	default:
+ 		if (!ns->ndev)
+ 			return -ENOTTY;
+ 		return nvme_nvm_ioctl(ns, cmd, argp);
+ 	}
+ }
+ 
++>>>>>>> 89b3d6e60550 (nvme: simplify the compat ioctl handling)
  static int nvme_ioctl(struct block_device *bdev, fmode_t mode,
  		unsigned int cmd, unsigned long arg)
  {
* Unmerged path drivers/nvme/host/core.c
