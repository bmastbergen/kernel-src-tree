mm/swap.c: don't pass "enum lru_list" to trace_mm_lru_insertion()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Yu Zhao <yuzhao@google.com>
commit 861404536a3af3c39f1b10959a40def3d8efa2dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/86140453.failed

The parameter is redundant in the sense that it can be extracted
from the "struct page" parameter by page_lru() correctly.

Link: https://lore.kernel.org/linux-mm/20201207220949.830352-5-yuzhao@google.com/
Link: https://lkml.kernel.org/r/20210122220600.906146-5-yuzhao@google.com
	Signed-off-by: Yu Zhao <yuzhao@google.com>
	Reviewed-by: Alex Shi <alex.shi@linux.alibaba.com>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Roman Gushchin <guro@fb.com>
	Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
	Cc: Vlastimil Babka <vbabka@suse.cz>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 861404536a3af3c39f1b10959a40def3d8efa2dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/swap.c
diff --cc mm/swap.c
index 78fee54efe0c,a26e3a4fe17b..000000000000
--- a/mm/swap.c
+++ b/mm/swap.c
@@@ -942,8 -1001,8 +939,13 @@@ static void __pagevec_lru_add_fn(struc
  			__count_vm_events(UNEVICTABLE_PGCULLED, nr_pages);
  	}
  
++<<<<<<< HEAD
 +	add_page_to_lru_list(page, lruvec, lru);
 +	trace_mm_lru_insertion(page, lru);
++=======
+ 	add_page_to_lru_list(page, lruvec);
+ 	trace_mm_lru_insertion(page);
++>>>>>>> 861404536a3a (mm/swap.c: don't pass "enum lru_list" to trace_mm_lru_insertion())
  }
  
  /*
diff --git a/include/trace/events/pagemap.h b/include/trace/events/pagemap.h
index 8fd1babae761..e1735fe7c76a 100644
--- a/include/trace/events/pagemap.h
+++ b/include/trace/events/pagemap.h
@@ -27,24 +27,21 @@
 
 TRACE_EVENT(mm_lru_insertion,
 
-	TP_PROTO(
-		struct page *page,
-		int lru
-	),
+	TP_PROTO(struct page *page),
 
-	TP_ARGS(page, lru),
+	TP_ARGS(page),
 
 	TP_STRUCT__entry(
 		__field(struct page *,	page	)
 		__field(unsigned long,	pfn	)
-		__field(int,		lru	)
+		__field(enum lru_list,	lru	)
 		__field(unsigned long,	flags	)
 	),
 
 	TP_fast_assign(
 		__entry->page	= page;
 		__entry->pfn	= page_to_pfn(page);
-		__entry->lru	= lru;
+		__entry->lru	= page_lru(page);
 		__entry->flags	= trace_pagemap_flags(page);
 	),
 
* Unmerged path mm/swap.c
