mm: untag user pointers in get_vaddr_frames

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Andrey Konovalov <andreyknvl@google.com>
commit 5d65e7a7d8cd5c77baa1acf129a11b8b45ffee75
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/5d65e7a7.failed

This patch is a part of a series that extends kernel ABI to allow to pass
tagged user pointers (with the top byte set to something else other than
0x00) as syscall arguments.

get_vaddr_frames uses provided user pointers for vma lookups, which can
only by done with untagged pointers.  Instead of locating and changing all
callers of this function, perform untagging in it.

Link: http://lkml.kernel.org/r/28f05e49c92b2a69c4703323d6c12208f3d881fe.1563904656.git.andreyknvl@google.com
	Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
	Reviewed-by: Khalid Aziz <khalid.aziz@oracle.com>
	Reviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Cc: Al Viro <viro@zeniv.linux.org.uk>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Eric Auger <eric.auger@redhat.com>
	Cc: Felix Kuehling <Felix.Kuehling@amd.com>
	Cc: Jens Wiklander <jens.wiklander@linaro.org>
	Cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
	Cc: Mike Rapoport <rppt@linux.ibm.com>
	Cc: Will Deacon <will@kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 5d65e7a7d8cd5c77baa1acf129a11b8b45ffee75)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/frame_vector.c
diff --cc mm/frame_vector.c
index 8715bb75bc7d,c431ca81dad5..000000000000
--- a/mm/frame_vector.c
+++ b/mm/frame_vector.c
@@@ -46,7 -46,9 +46,13 @@@ int get_vaddr_frames(unsigned long star
  	if (WARN_ON_ONCE(nr_frames > vec->nr_allocated))
  		nr_frames = vec->nr_allocated;
  
++<<<<<<< HEAD
 +	mmap_read_lock(mm);
++=======
+ 	start = untagged_addr(start);
+ 
+ 	down_read(&mm->mmap_sem);
++>>>>>>> 5d65e7a7d8cd (mm: untag user pointers in get_vaddr_frames)
  	locked = 1;
  	vma = find_vma_intersection(mm, start, start + 1);
  	if (!vma) {
* Unmerged path mm/frame_vector.c
