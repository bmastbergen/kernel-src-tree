KVM: SVM: AVIC: drop unsupported AVIC base relocation code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Maxim Levitsky <mlevitsk@redhat.com>
commit 73143035c214f3b0ac5cc2393197f828adeefc1e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/73143035.failed

APIC base relocation is not supported anyway and won't work
correctly so just drop the code that handles it and keep AVIC
MMIO bar at the default APIC base.

	Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
Message-Id: <20210810205251.424103-17-mlevitsk@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 73143035c214f3b0ac5cc2393197f828adeefc1e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm/svm.c
#	arch/x86/kvm/svm/svm.h
diff --cc arch/x86/kvm/svm/svm.c
index e3d97d16dee7,7b58e445a967..000000000000
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@@ -2963,10 -2964,6 +2960,13 @@@ static int svm_set_msr(struct kvm_vcpu 
  		svm->msr_decfg = data;
  		break;
  	}
++<<<<<<< HEAD
 +	case MSR_IA32_APICBASE:
 +		if (kvm_vcpu_apicv_active(vcpu))
 +			avic_update_vapic_bar(to_svm(vcpu), data);
 +		/* Fall through */
++=======
++>>>>>>> 73143035c214 (KVM: SVM: AVIC: drop unsupported AVIC base relocation code)
  	default:
  		return kvm_set_msr_common(vcpu, msr);
  	}
diff --cc arch/x86/kvm/svm/svm.h
index 5e838a56ab11,524d943f3efc..000000000000
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@@ -503,14 -503,6 +503,17 @@@ extern struct kvm_x86_nested_ops svm_ne
  
  #define VMCB_AVIC_APIC_BAR_MASK		0xFFFFFFFFFF000ULL
  
++<<<<<<< HEAD
 +extern bool avic;
 +
 +static inline void avic_update_vapic_bar(struct vcpu_svm *svm, u64 data)
 +{
 +	svm->vmcb->control.avic_vapic_bar = data & VMCB_AVIC_APIC_BAR_MASK;
 +	vmcb_mark_dirty(svm->vmcb, VMCB_AVIC);
 +}
 +
++=======
++>>>>>>> 73143035c214 (KVM: SVM: AVIC: drop unsupported AVIC base relocation code)
  static inline bool avic_vcpu_is_running(struct kvm_vcpu *vcpu)
  {
  	struct vcpu_svm *svm = to_svm(vcpu);
diff --git a/arch/x86/kvm/svm/avic.c b/arch/x86/kvm/svm/avic.c
index 48d065e202f3..7c4a22385cc3 100644
--- a/arch/x86/kvm/svm/avic.c
+++ b/arch/x86/kvm/svm/avic.c
@@ -201,6 +201,8 @@ void avic_init_vmcb(struct vcpu_svm *svm)
 	vmcb->control.avic_logical_id = lpa & AVIC_HPA_MASK;
 	vmcb->control.avic_physical_id = ppa & AVIC_HPA_MASK;
 	vmcb->control.avic_physical_id |= AVIC_MAX_PHYSICAL_ID_COUNT;
+	vmcb->control.avic_vapic_bar = APIC_DEFAULT_PHYS_BASE & VMCB_AVIC_APIC_BAR_MASK;
+
 	if (kvm_apicv_activated(svm->vcpu.kvm))
 		vmcb->control.int_ctl |= AVIC_ENABLE_MASK;
 	else
* Unmerged path arch/x86/kvm/svm/svm.c
* Unmerged path arch/x86/kvm/svm/svm.h
