iommu/vt-d: Support asynchronous IOMMU nested capabilities

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit 521f546b4e4cedfbfbb5787f940a592dd20dd1f2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/521f546b.failed

Current VT-d implementation supports nested translation only if all
underlying IOMMUs support the nested capability. This is unnecessary
as the upper layer is allowed to create different containers and set
them with different type of iommu backend. The IOMMU driver needs to
guarantee that devices attached to a nested mode iommu_domain should
support nested capabilility.

	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
Link: https://lore.kernel.org/r/20210517065701.5078-1-baolu.lu@linux.intel.com
Link: https://lore.kernel.org/r/20210610020115.1637656-6-baolu.lu@linux.intel.com
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 521f546b4e4cedfbfbb5787f940a592dd20dd1f2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel/iommu.c
diff --cc drivers/iommu/intel/iommu.c
index 38f675a57133,b0ba187cb7f8..000000000000
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@@ -5365,27 -5461,15 +5372,35 @@@ intel_iommu_domain_set_attr(struct iomm
  {
  	struct dmar_domain *dmar_domain = to_dmar_domain(domain);
  	unsigned long flags;
 -	int ret = -ENODEV;
 +	int ret = 0;
  
++<<<<<<< HEAD
 +	if (domain->type != IOMMU_DOMAIN_UNMANAGED)
 +		return -EINVAL;
 +
 +	switch (attr) {
 +	case DOMAIN_ATTR_NESTING:
 +		spin_lock_irqsave(&device_domain_lock, flags);
 +		if (nested_mode_support() &&
 +		    list_empty(&dmar_domain->devices)) {
 +			dmar_domain->flags |= DOMAIN_FLAG_NESTING_MODE;
 +			dmar_domain->flags &= ~DOMAIN_FLAG_USE_FIRST_LEVEL;
 +		} else {
 +			ret = -ENODEV;
 +		}
 +		spin_unlock_irqrestore(&device_domain_lock, flags);
 +		break;
 +	default:
 +		ret = -EINVAL;
 +		break;
++=======
+ 	spin_lock_irqsave(&device_domain_lock, flags);
+ 	if (list_empty(&dmar_domain->devices)) {
+ 		dmar_domain->flags |= DOMAIN_FLAG_NESTING_MODE;
+ 		dmar_domain->flags &= ~DOMAIN_FLAG_USE_FIRST_LEVEL;
+ 		ret = 0;
++>>>>>>> 521f546b4e4c (iommu/vt-d: Support asynchronous IOMMU nested capabilities)
  	}
 -	spin_unlock_irqrestore(&device_domain_lock, flags);
  
  	return ret;
  }
* Unmerged path drivers/iommu/intel/iommu.c
