nfsd4: Fix forced-expiry locking

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author J. Bruce Fields <bfields@redhat.com>
commit f7104cc1a9159cd0d3e8526cb638ae0301de4b61
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/f7104cc1.failed

This should use the network-namespace-wide client_lock, not the
per-client cl_lock.

You shouldn't see any bugs unless you're actually using the
forced-expiry interface introduced by 89c905beccbb.

Fixes: 89c905beccbb "nfsd: allow forced expiration of NFSv4 clients"
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
(cherry picked from commit f7104cc1a9159cd0d3e8526cb638ae0301de4b61)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfs4state.c
diff --cc fs/nfsd/nfs4state.c
index 0b53a063ba07,2bedc7839ec5..000000000000
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@@ -2618,9 -2685,11 +2618,15 @@@ static void force_expire_client(struct 
  	struct nfsd_net *nn = net_generic(clp->net, nfsd_net_id);
  	bool already_expired;
  
++<<<<<<< HEAD
 +	spin_lock(&clp->cl_lock);
++=======
+ 	trace_nfsd_clid_admin_expired(&clp->cl_clientid);
+ 
+ 	spin_lock(&nn->client_lock);
++>>>>>>> f7104cc1a915 (nfsd4: Fix forced-expiry locking)
  	clp->cl_time = 0;
- 	spin_unlock(&clp->cl_lock);
+ 	spin_unlock(&nn->client_lock);
  
  	wait_event(expiry_wq, atomic_read(&clp->cl_rpc_users) == 0);
  	spin_lock(&nn->client_lock);
* Unmerged path fs/nfsd/nfs4state.c
