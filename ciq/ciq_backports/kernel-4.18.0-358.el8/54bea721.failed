net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Nikolay Aleksandrov <nikolay@nvidia.com>
commit 54bea721964166cbb26490faa0bd414a1c75b406
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/54bea721.failed

We need to pass the host address so later it can be used for explicit
host tracking. No functional change.

	Signed-off-by: Nikolay Aleksandrov <nikolay@nvidia.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 54bea721964166cbb26490faa0bd414a1c75b406)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_multicast.c
diff --cc net/bridge/br_multicast.c
index 6cf87c6c3626,861545094d67..000000000000
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@@ -1392,10 -1799,10 +1392,15 @@@ static void __grp_send_query_and_rexmit
   * INCLUDE (A)    ALLOW (B)     INCLUDE (A+B)            (B)=GMI
   * EXCLUDE (X,Y)  ALLOW (A)     EXCLUDE (X+A,Y-A)        (A)=GMI
   */
++<<<<<<< HEAD
 +static bool br_multicast_isinc_allow(struct net_bridge_port_group *pg,
 +				     void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool br_multicast_isinc_allow(struct net_bridge_port_group *pg, void *h_addr,
+ 				     void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
 -	struct net_bridge *br = pg->key.port->br;
 +	struct net_bridge *br = pg->port->br;
  	struct net_bridge_group_src *ent;
  	unsigned long now = jiffies;
  	bool changed = false;
@@@ -1426,8 -1833,8 +1431,13 @@@
   *                                                       Delete (A-B)
   *                                                       Group Timer=GMI
   */
++<<<<<<< HEAD
 +static void __grp_src_isexc_incl(struct net_bridge_port_group *pg,
 +				 void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static void __grp_src_isexc_incl(struct net_bridge_port_group *pg, void *h_addr,
+ 				 void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
  	struct net_bridge_group_src *ent;
  	struct br_ip src_ip;
@@@ -1457,10 -1866,10 +1467,15 @@@
   *                                                       Delete (Y-A)
   *                                                       Group Timer=GMI
   */
++<<<<<<< HEAD
 +static bool __grp_src_isexc_excl(struct net_bridge_port_group *pg,
 +				 void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool __grp_src_isexc_excl(struct net_bridge_port_group *pg, void *h_addr,
+ 				 void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
 -	struct net_bridge *br = pg->key.port->br;
 +	struct net_bridge *br = pg->port->br;
  	struct net_bridge_group_src *ent;
  	unsigned long now = jiffies;
  	bool changed = false;
@@@ -1494,19 -1903,20 +1509,33 @@@
  	return changed;
  }
  
++<<<<<<< HEAD
 +static bool br_multicast_isexc(struct net_bridge_port_group *pg,
 +			       void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool br_multicast_isexc(struct net_bridge_port_group *pg, void *h_addr,
+ 			       void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
 -	struct net_bridge *br = pg->key.port->br;
 +	struct net_bridge *br = pg->port->br;
  	bool changed = false;
  
  	switch (pg->filter_mode) {
  	case MCAST_INCLUDE:
++<<<<<<< HEAD
 +		__grp_src_isexc_incl(pg, srcs, nsrcs, src_size);
 +		changed = true;
 +		break;
 +	case MCAST_EXCLUDE:
 +		changed = __grp_src_isexc_excl(pg, srcs, nsrcs, src_size);
++=======
+ 		__grp_src_isexc_incl(pg, h_addr, srcs, nsrcs, addr_size);
+ 		br_multicast_star_g_handle_mode(pg, MCAST_EXCLUDE);
+ 		changed = true;
+ 		break;
+ 	case MCAST_EXCLUDE:
+ 		changed = __grp_src_isexc_excl(pg, h_addr, srcs, nsrcs, addr_size);
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  		break;
  	}
  
@@@ -1520,10 -1930,10 +1549,15 @@@
   * INCLUDE (A)    TO_IN (B)     INCLUDE (A+B)            (B)=GMI
   *                                                       Send Q(G,A-B)
   */
++<<<<<<< HEAD
 +static bool __grp_src_toin_incl(struct net_bridge_port_group *pg,
 +				void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool __grp_src_toin_incl(struct net_bridge_port_group *pg, void *h_addr,
+ 				void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
 -	struct net_bridge *br = pg->key.port->br;
 +	struct net_bridge *br = pg->port->br;
  	u32 src_idx, to_send = pg->src_ents;
  	struct net_bridge_group_src *ent;
  	unsigned long now = jiffies;
@@@ -1562,10 -1972,10 +1596,15 @@@
   *                                                       Send Q(G,X-A)
   *                                                       Send Q(G)
   */
++<<<<<<< HEAD
 +static bool __grp_src_toin_excl(struct net_bridge_port_group *pg,
 +				void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool __grp_src_toin_excl(struct net_bridge_port_group *pg, void *h_addr,
+ 				void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
 -	struct net_bridge *br = pg->key.port->br;
 +	struct net_bridge *br = pg->port->br;
  	u32 src_idx, to_send = pg->src_ents;
  	struct net_bridge_group_src *ent;
  	unsigned long now = jiffies;
@@@ -1604,17 -2014,17 +1643,29 @@@
  	return changed;
  }
  
++<<<<<<< HEAD
 +static bool br_multicast_toin(struct net_bridge_port_group *pg,
 +			      void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool br_multicast_toin(struct net_bridge_port_group *pg, void *h_addr,
+ 			      void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
  	bool changed = false;
  
  	switch (pg->filter_mode) {
  	case MCAST_INCLUDE:
++<<<<<<< HEAD
 +		changed = __grp_src_toin_incl(pg, srcs, nsrcs, src_size);
 +		break;
 +	case MCAST_EXCLUDE:
 +		changed = __grp_src_toin_excl(pg, srcs, nsrcs, src_size);
++=======
+ 		changed = __grp_src_toin_incl(pg, h_addr, srcs, nsrcs, addr_size);
+ 		break;
+ 	case MCAST_EXCLUDE:
+ 		changed = __grp_src_toin_excl(pg, h_addr, srcs, nsrcs, addr_size);
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  		break;
  	}
  
@@@ -1627,8 -2037,8 +1678,13 @@@
   *                                                       Send Q(G,A*B)
   *                                                       Group Timer=GMI
   */
++<<<<<<< HEAD
 +static void __grp_src_toex_incl(struct net_bridge_port_group *pg,
 +				void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static void __grp_src_toex_incl(struct net_bridge_port_group *pg, void *h_addr,
+ 				void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
  	struct net_bridge_group_src *ent;
  	u32 src_idx, to_send = 0;
@@@ -1664,8 -2076,8 +1720,13 @@@
   *                                                       Send Q(G,A-Y)
   *                                                       Group Timer=GMI
   */
++<<<<<<< HEAD
 +static bool __grp_src_toex_excl(struct net_bridge_port_group *pg,
 +				void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool __grp_src_toex_excl(struct net_bridge_port_group *pg, void *h_addr,
+ 				void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
  	struct net_bridge_group_src *ent;
  	u32 src_idx, to_send = 0;
@@@ -1704,19 -2116,20 +1765,33 @@@
  	return changed;
  }
  
++<<<<<<< HEAD
 +static bool br_multicast_toex(struct net_bridge_port_group *pg,
 +			      void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool br_multicast_toex(struct net_bridge_port_group *pg, void *h_addr,
+ 			      void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
 -	struct net_bridge *br = pg->key.port->br;
 +	struct net_bridge *br = pg->port->br;
  	bool changed = false;
  
  	switch (pg->filter_mode) {
  	case MCAST_INCLUDE:
++<<<<<<< HEAD
 +		__grp_src_toex_incl(pg, srcs, nsrcs, src_size);
 +		changed = true;
 +		break;
 +	case MCAST_EXCLUDE:
 +		changed = __grp_src_toex_excl(pg, srcs, nsrcs, src_size);
++=======
+ 		__grp_src_toex_incl(pg, h_addr, srcs, nsrcs, addr_size);
+ 		br_multicast_star_g_handle_mode(pg, MCAST_EXCLUDE);
+ 		changed = true;
+ 		break;
+ 	case MCAST_EXCLUDE:
+ 		changed = __grp_src_toex_excl(pg, h_addr, srcs, nsrcs, addr_size);
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  		break;
  	}
  
@@@ -1729,8 -2142,8 +1804,13 @@@
  /* State          Msg type      New state                Actions
   * INCLUDE (A)    BLOCK (B)     INCLUDE (A)              Send Q(G,A*B)
   */
++<<<<<<< HEAD
 +static void __grp_src_block_incl(struct net_bridge_port_group *pg,
 +				 void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static void __grp_src_block_incl(struct net_bridge_port_group *pg, void *h_addr,
+ 				 void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
  	struct net_bridge_group_src *ent;
  	u32 src_idx, to_send = 0;
@@@ -1762,8 -2175,8 +1842,13 @@@
   * EXCLUDE (X,Y)  BLOCK (A)     EXCLUDE (X+(A-Y),Y)      (A-X-Y)=Group Timer
   *                                                       Send Q(G,A-Y)
   */
++<<<<<<< HEAD
 +static bool __grp_src_block_excl(struct net_bridge_port_group *pg,
 +				 void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool __grp_src_block_excl(struct net_bridge_port_group *pg, void *h_addr,
+ 				 void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
  	struct net_bridge_group_src *ent;
  	u32 src_idx, to_send = 0;
@@@ -1798,17 -2211,17 +1883,29 @@@
  	return changed;
  }
  
++<<<<<<< HEAD
 +static bool br_multicast_block(struct net_bridge_port_group *pg,
 +			       void *srcs, u32 nsrcs, size_t src_size)
++=======
+ static bool br_multicast_block(struct net_bridge_port_group *pg, void *h_addr,
+ 			       void *srcs, u32 nsrcs, size_t addr_size)
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  {
  	bool changed = false;
  
  	switch (pg->filter_mode) {
  	case MCAST_INCLUDE:
++<<<<<<< HEAD
 +		__grp_src_block_incl(pg, srcs, nsrcs, src_size);
 +		break;
 +	case MCAST_EXCLUDE:
 +		changed = __grp_src_block_excl(pg, srcs, nsrcs, src_size);
++=======
+ 		__grp_src_block_incl(pg, h_addr, srcs, nsrcs, addr_size);
+ 		break;
+ 	case MCAST_EXCLUDE:
+ 		changed = __grp_src_block_excl(pg, h_addr, srcs, nsrcs, addr_size);
++>>>>>>> 54bea7219641 (net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions)
  		break;
  	}
  
* Unmerged path net/bridge/br_multicast.c
