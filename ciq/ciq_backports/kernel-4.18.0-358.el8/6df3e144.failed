psci: Add accessor for psci_0_1_function_ids

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author David Brazdil <dbrazdil@google.com>
commit 6df3e14436f6ee254b1a4952d90ee8988be59c89
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/6df3e144.failed

Make it possible to retrieve a copy of the psci_0_1_function_ids struct.
This is useful for KVM if it is configured to intercept host's PSCI SMCs.

	Signed-off-by: David Brazdil <dbrazdil@google.com>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
	Acked-by: Mark Rutland <mark.rutland@arm.com>
Link: https://lore.kernel.org/r/20201202184122.26046-7-dbrazdil@google.com
(cherry picked from commit 6df3e14436f6ee254b1a4952d90ee8988be59c89)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/firmware/psci/psci.c
diff --cc drivers/firmware/psci/psci.c
index 1606915bfeff,f5fc429cae3f..000000000000
--- a/drivers/firmware/psci/psci.c
+++ b/drivers/firmware/psci/psci.c
@@@ -76,15 -58,12 +76,24 @@@ typedef unsigned long (psci_fn)(unsigne
  				unsigned long, unsigned long);
  static psci_fn *invoke_psci_fn;
  
++<<<<<<< HEAD
 +enum psci_function {
 +	PSCI_FN_CPU_SUSPEND,
 +	PSCI_FN_CPU_ON,
 +	PSCI_FN_CPU_OFF,
 +	PSCI_FN_MIGRATE,
 +	PSCI_FN_MAX,
 +};
 +
 +static u32 psci_function_id[PSCI_FN_MAX];
++=======
+ static struct psci_0_1_function_ids psci_0_1_function_ids;
++>>>>>>> 6df3e14436f6 (psci: Add accessor for psci_0_1_function_ids)
+ 
+ struct psci_0_1_function_ids get_psci_0_1_function_ids(void)
+ {
+ 	return psci_0_1_function_ids;
+ }
  
  #define PSCI_0_2_POWER_STATE_MASK		\
  				(PSCI_0_2_POWER_STATE_ID_MASK | \
* Unmerged path drivers/firmware/psci/psci.c
diff --git a/include/linux/psci.h b/include/linux/psci.h
index fb6e507b57c5..d8d66164f9f0 100644
--- a/include/linux/psci.h
+++ b/include/linux/psci.h
@@ -41,6 +41,15 @@ struct psci_operations {
 
 extern struct psci_operations psci_ops;
 
+struct psci_0_1_function_ids {
+	u32 cpu_suspend;
+	u32 cpu_on;
+	u32 cpu_off;
+	u32 migrate;
+};
+
+struct psci_0_1_function_ids get_psci_0_1_function_ids(void);
+
 #if defined(CONFIG_ARM_PSCI_FW)
 int __init psci_dt_init(void);
 #else
