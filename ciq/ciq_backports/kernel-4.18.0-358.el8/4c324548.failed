ACPI: utils: Introduce acpi_evaluation_failure_warn()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 4c324548f09fec413b4ee589174dabacfe17d953
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/4c324548.failed

Quite a few users of ACPI objects want to log a warning message if
the evaluation fails which is a repeating pattern, so introduce a
helper function for that purpose and convert some code where it is
open-coded to using it.

No intentional functional impact.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 4c324548f09fec413b4ee589174dabacfe17d953)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/processor_perflib.c
#	drivers/acpi/processor_throttling.c
diff --cc drivers/acpi/processor_perflib.c
index f1f9cfa3f7c5,1b6aa635bff6..000000000000
--- a/drivers/acpi/processor_perflib.c
+++ b/drivers/acpi/processor_perflib.c
@@@ -78,13 -63,13 +78,20 @@@ static int acpi_processor_get_platform_
  	 * (e.g. 0 = states 0..n; 1 = states 1..n; etc.
  	 */
  	status = acpi_evaluate_integer(pr->handle, "_PPC", NULL, &ppc);
 -	if (status != AE_NOT_FOUND) {
 +
 +	if (status != AE_NOT_FOUND)
  		acpi_processor_ppc_in_use = true;
  
++<<<<<<< HEAD
 +	if (ACPI_FAILURE(status) && status != AE_NOT_FOUND) {
 +		ACPI_EXCEPTION((AE_INFO, status, "Evaluating _PPC"));
 +		return -ENODEV;
++=======
+ 		if (ACPI_FAILURE(status)) {
+ 			acpi_evaluation_failure_warn(pr->handle, "_PPC", status);
+ 			return -ENODEV;
+ 		}
++>>>>>>> 4c324548f09f (ACPI: utils: Introduce acpi_evaluation_failure_warn())
  	}
  
  	pr_debug("CPU %d: _PPC is %d - frequency %s limited\n", pr->id,
@@@ -212,7 -197,7 +219,11 @@@ static int acpi_processor_get_performan
  
  	status = acpi_evaluate_object(pr->handle, "_PCT", NULL, &buffer);
  	if (ACPI_FAILURE(status)) {
++<<<<<<< HEAD
 +		ACPI_EXCEPTION((AE_INFO, status, "Evaluating _PCT"));
++=======
+ 		acpi_evaluation_failure_warn(pr->handle, "_PCT", status);
++>>>>>>> 4c324548f09f (ACPI: utils: Introduce acpi_evaluation_failure_warn())
  		return -ENODEV;
  	}
  
@@@ -312,7 -297,7 +323,11 @@@ static int acpi_processor_get_performan
  
  	status = acpi_evaluate_object(pr->handle, "_PSS", NULL, &buffer);
  	if (ACPI_FAILURE(status)) {
++<<<<<<< HEAD
 +		ACPI_EXCEPTION((AE_INFO, status, "Evaluating _PSS"));
++=======
+ 		acpi_evaluation_failure_warn(pr->handle, "_PSS", status);
++>>>>>>> 4c324548f09f (ACPI: utils: Introduce acpi_evaluation_failure_warn())
  		return -ENODEV;
  	}
  
diff --cc drivers/acpi/processor_throttling.c
index 2e6b04a4c384,e61b8f038364..000000000000
--- a/drivers/acpi/processor_throttling.c
+++ b/drivers/acpi/processor_throttling.c
@@@ -297,9 -280,9 +297,15 @@@ static int acpi_processor_get_platform_
  
  	status = acpi_evaluate_integer(pr->handle, "_TPC", NULL, &tpc);
  	if (ACPI_FAILURE(status)) {
++<<<<<<< HEAD
 +		if (status != AE_NOT_FOUND) {
 +			ACPI_EXCEPTION((AE_INFO, status, "Evaluating _TPC"));
 +		}
++=======
+ 		if (status != AE_NOT_FOUND)
+ 			acpi_evaluation_failure_warn(pr->handle, "_TPC", status);
+ 
++>>>>>>> 4c324548f09f (ACPI: utils: Introduce acpi_evaluation_failure_warn())
  		return -ENODEV;
  	}
  
@@@ -430,9 -413,9 +436,15 @@@ static int acpi_processor_get_throttlin
  
  	status = acpi_evaluate_object(pr->handle, "_PTC", NULL, &buffer);
  	if (ACPI_FAILURE(status)) {
++<<<<<<< HEAD
 +		if (status != AE_NOT_FOUND) {
 +			ACPI_EXCEPTION((AE_INFO, status, "Evaluating _PTC"));
 +		}
++=======
+ 		if (status != AE_NOT_FOUND)
+ 			acpi_evaluation_failure_warn(pr->handle, "_PTC", status);
+ 
++>>>>>>> 4c324548f09f (ACPI: utils: Introduce acpi_evaluation_failure_warn())
  		return -ENODEV;
  	}
  
@@@ -515,9 -498,9 +527,15 @@@ static int acpi_processor_get_throttlin
  
  	status = acpi_evaluate_object(pr->handle, "_TSS", NULL, &buffer);
  	if (ACPI_FAILURE(status)) {
++<<<<<<< HEAD
 +		if (status != AE_NOT_FOUND) {
 +			ACPI_EXCEPTION((AE_INFO, status, "Evaluating _TSS"));
 +		}
++=======
+ 		if (status != AE_NOT_FOUND)
+ 			acpi_evaluation_failure_warn(pr->handle, "_TSS", status);
+ 
++>>>>>>> 4c324548f09f (ACPI: utils: Introduce acpi_evaluation_failure_warn())
  		return -ENODEV;
  	}
  
@@@ -595,9 -579,9 +613,15 @@@ static int acpi_processor_get_tsd(struc
  
  	status = acpi_evaluate_object(pr->handle, "_TSD", NULL, &buffer);
  	if (ACPI_FAILURE(status)) {
++<<<<<<< HEAD
 +		if (status != AE_NOT_FOUND) {
 +			ACPI_EXCEPTION((AE_INFO, status, "Evaluating _TSD"));
 +		}
++=======
+ 		if (status != AE_NOT_FOUND)
+ 			acpi_evaluation_failure_warn(pr->handle, "_TSD", status);
+ 
++>>>>>>> 4c324548f09f (ACPI: utils: Introduce acpi_evaluation_failure_warn())
  		return -ENODEV;
  	}
  
diff --git a/drivers/acpi/pci_link.c b/drivers/acpi/pci_link.c
index b2147ae6c875..e309f0f46329 100644
--- a/drivers/acpi/pci_link.c
+++ b/drivers/acpi/pci_link.c
@@ -269,8 +269,7 @@ static int acpi_pci_link_get_current(struct acpi_pci_link *link)
 	status = acpi_walk_resources(handle, METHOD_NAME__CRS,
 				     acpi_pci_link_check_current, &irq);
 	if (ACPI_FAILURE(status)) {
-		acpi_handle_warn(handle, "_CRS evaluation failed: %s\n",
-				 acpi_format_exception(status));
+		acpi_evaluation_failure_warn(handle, "_CRS", status);
 		result = -ENODEV;
 		goto end;
 	}
@@ -358,8 +357,7 @@ static int acpi_pci_link_set(struct acpi_pci_link *link, int irq)
 
 	/* check for total failure */
 	if (ACPI_FAILURE(status)) {
-		acpi_handle_warn(handle, "_SRS evaluation failed: %s",
-				 acpi_format_exception(status));
+		acpi_evaluation_failure_warn(handle, "_SRS", status);
 		result = -ENODEV;
 		goto end;
 	}
* Unmerged path drivers/acpi/processor_perflib.c
* Unmerged path drivers/acpi/processor_throttling.c
diff --git a/drivers/acpi/utils.c b/drivers/acpi/utils.c
index bc39ce57434b..93623e310ada 100644
--- a/drivers/acpi/utils.c
+++ b/drivers/acpi/utils.c
@@ -544,6 +544,20 @@ __acpi_handle_debug(struct _ddebug *descriptor, acpi_handle handle,
 EXPORT_SYMBOL(__acpi_handle_debug);
 #endif
 
+/**
+ * acpi_evaluation_failure_warn - Log evaluation failure warning.
+ * @handle: Parent object handle.
+ * @name: Name of the object whose evaluation has failed.
+ * @status: Status value returned by the failing object evaluation.
+ */
+void acpi_evaluation_failure_warn(acpi_handle handle, const char *name,
+				  acpi_status status)
+{
+	acpi_handle_warn(handle, "%s evaluation failed: %s\n", name,
+			 acpi_format_exception(status));
+}
+EXPORT_SYMBOL_GPL(acpi_evaluation_failure_warn);
+
 /**
  * acpi_has_method: Check whether @handle has a method named @name
  * @handle: ACPI device handle
diff --git a/include/linux/acpi.h b/include/linux/acpi.h
index f4c7ef5bcb79..7e87ec5bd24b 100644
--- a/include/linux/acpi.h
+++ b/include/linux/acpi.h
@@ -1037,9 +1037,14 @@ static inline void acpi_ec_set_gpe_wake_mask(u8 action) {}
 __printf(3, 4)
 void acpi_handle_printk(const char *level, acpi_handle handle,
 			const char *fmt, ...);
+void acpi_evaluation_failure_warn(acpi_handle handle, const char *name,
+				  acpi_status status);
 #else	/* !CONFIG_ACPI */
 static inline __printf(3, 4) void
 acpi_handle_printk(const char *level, void *handle, const char *fmt, ...) {}
+static inline void acpi_evaluation_failure_warn(acpi_handle handle,
+						const char *name,
+						acpi_status status) {}
 #endif	/* !CONFIG_ACPI */
 
 #if defined(CONFIG_ACPI) && defined(CONFIG_DYNAMIC_DEBUG)
