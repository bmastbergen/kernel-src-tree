pinctrl: amd: Add irq field data

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Basavaraj Natikar <Basavaraj.Natikar@amd.com>
commit 7e6f8d6f4a42ef9b693ff1b49267c546931d4619
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/7e6f8d6f.failed

pinctrl_amd use gpiochip_get_data() to get their local state containers
back from the gpiochip passed as amd_gpio chip data.

Hence added irq field data to get directly using amd_gpio chip data.

	Signed-off-by: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
	Tested-by: Mario Limonciello <mario.limonciello@amd.com>
	Acked-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
Link: https://lore.kernel.org/r/20210831120613.1514899-2-Basavaraj.Natikar@amd.com
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit 7e6f8d6f4a42ef9b693ff1b49267c546931d4619)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pinctrl/pinctrl-amd.c
diff --cc drivers/pinctrl/pinctrl-amd.c
index 541a7d9590b5,8292bd5c13f3..000000000000
--- a/drivers/pinctrl/pinctrl-amd.c
+++ b/drivers/pinctrl/pinctrl-amd.c
@@@ -928,11 -924,9 +927,17 @@@ static int amd_gpio_probe(struct platfo
  	if (!gpio_dev->base)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	irq_base = platform_get_irq(pdev, 0);
 +	if (irq_base < 0) {
 +		dev_err(&pdev->dev, "Failed to get gpio IRQ: %d\n", irq_base);
 +		return irq_base;
 +	}
++=======
+ 	gpio_dev->irq = platform_get_irq(pdev, 0);
+ 	if (gpio_dev->irq < 0)
+ 		return gpio_dev->irq;
++>>>>>>> 7e6f8d6f4a42 (pinctrl: amd: Add irq field data)
  
  #ifdef CONFIG_PM_SLEEP
  	gpio_dev->saved_regs = devm_kcalloc(&pdev->dev, amd_pinctrl_desc.npins,
* Unmerged path drivers/pinctrl/pinctrl-amd.c
diff --git a/drivers/pinctrl/pinctrl-amd.h b/drivers/pinctrl/pinctrl-amd.h
index 22af7edfdb38..42325712c012 100644
--- a/drivers/pinctrl/pinctrl-amd.h
+++ b/drivers/pinctrl/pinctrl-amd.h
@@ -102,6 +102,7 @@ struct amd_gpio {
 	struct resource         *res;
 	struct platform_device  *pdev;
 	u32			*saved_regs;
+	int			irq;
 };
 
 /*  KERNCZ configuration*/
