mm: memcontrol: simplify lruvec_holds_page_lru_lock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Muchun Song <songmuchun@bytedance.com>
commit f2e4d28dd9f6478dd54d47b91edc3fe62c019968
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/f2e4d28d.failed

We already have a helper lruvec_memcg() to get the memcg from lruvec, we
do not need to do it ourselves in the lruvec_holds_page_lru_lock().  So
use lruvec_memcg() instead.  And if mem_cgroup_disabled() returns false,
the page_memcg(page) (the LRU pages) cannot be NULL.  So remove the odd
logic of "memcg = page_memcg(page) ?  : root_mem_cgroup".  And use
lruvec_pgdat to simplify the code.  We can have a single definition for
this function that works for !CONFIG_MEMCG, CONFIG_MEMCG +
mem_cgroup_disabled() and CONFIG_MEMCG.

Link: https://lkml.kernel.org/r/20210417043538.9793-5-songmuchun@bytedance.com
	Signed-off-by: Muchun Song <songmuchun@bytedance.com>
	Acked-by: Johannes Weiner <hannes@cmpxchg.org>
	Reviewed-by: Shakeel Butt <shakeelb@google.com>
	Acked-by: Roman Gushchin <guro@fb.com>
	Acked-by: Michal Hocko <mhocko@suse.com>
	Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
	Cc: Xiongchun Duan <duanxiongchun@bytedance.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit f2e4d28dd9f6478dd54d47b91edc3fe62c019968)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/memcontrol.h
diff --cc include/linux/memcontrol.h
index cc3d9b32271f,2fc728492c9b..000000000000
--- a/include/linux/memcontrol.h
+++ b/include/linux/memcontrol.h
@@@ -1272,12 -1211,8 +1256,17 @@@ static inline struct lruvec *mem_cgroup
  	return &pgdat->__lruvec;
  }
  
++<<<<<<< HEAD
 +static inline bool lruvec_holds_page_lru_lock(struct page *page,
 +					      struct lruvec *lruvec)
 +{
 +	pg_data_t *pgdat = page_pgdat(page);
 +
 +	return lruvec == &pgdat->__lruvec;
++=======
+ static inline void lruvec_memcg_debug(struct lruvec *lruvec, struct page *page)
+ {
++>>>>>>> f2e4d28dd9f6 (mm: memcontrol: simplify lruvec_holds_page_lru_lock)
  }
  
  static inline struct mem_cgroup *parent_mem_cgroup(struct mem_cgroup *memcg)
* Unmerged path include/linux/memcontrol.h
