PCI: Return u16 from pci_find_ext_capability() and similar

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit ee8b1c478a9fbce9c64151ee561c124c4dcd66be
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/ee8b1c47.failed

PCI Express Extended Capabilities are in config space between offsets 256
and 4K.  These offsets all fit in 16 bits.

Change the return type of pci_find_ext_capability() and supporting
functions from int to u16 to match the specification.  Many callers use
"int", which is fine, but there's no need to store more than a u16.

	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit ee8b1c478a9fbce9c64151ee561c124c4dcd66be)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pci.h
diff --cc include/linux/pci.h
index 7352d7902749,441e5753da0c..000000000000
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@@ -394,6 -381,7 +394,10 @@@ struct pci_dev 
  	struct pcie_link_state	*link_state;	/* ASPM link state */
  	unsigned int	ltr_path:1;	/* Latency Tolerance Reporting
  					   supported from root to here */
++<<<<<<< HEAD
++=======
+ 	u16		l1ss;		/* L1SS Capability pointer */
++>>>>>>> ee8b1c478a9f (PCI: Return u16 from pci_find_ext_capability() and similar)
  #endif
  	unsigned int	eetlp_prefix_path:1;	/* End-to-End TLP Prefix */
  
diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 32ff89b9c767..9a59d928eb2d 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -526,11 +526,11 @@ EXPORT_SYMBOL(pci_bus_find_capability);
  * not support it.  Some capabilities can occur several times, e.g., the
  * vendor-specific capability, and this provides a way to find them all.
  */
-int pci_find_next_ext_capability(struct pci_dev *dev, int start, int cap)
+u16 pci_find_next_ext_capability(struct pci_dev *dev, u16 start, int cap)
 {
 	u32 header;
 	int ttl;
-	int pos = PCI_CFG_SPACE_SIZE;
+	u16 pos = PCI_CFG_SPACE_SIZE;
 
 	/* minimum 8 bytes per capability */
 	ttl = (PCI_CFG_SPACE_EXP_SIZE - PCI_CFG_SPACE_SIZE) / 8;
@@ -581,7 +581,7 @@ EXPORT_SYMBOL_GPL(pci_find_next_ext_capability);
  *  %PCI_EXT_CAP_ID_DSN		Device Serial Number
  *  %PCI_EXT_CAP_ID_PWR		Power Budgeting
  */
-int pci_find_ext_capability(struct pci_dev *dev, int cap)
+u16 pci_find_ext_capability(struct pci_dev *dev, int cap)
 {
 	return pci_find_next_ext_capability(dev, 0, cap);
 }
* Unmerged path include/linux/pci.h
