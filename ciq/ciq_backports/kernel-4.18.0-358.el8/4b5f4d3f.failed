RDMA: Split the alloc_hw_stats() ops to port and device variants

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Jason Gunthorpe <jgg@nvidia.com>
commit 4b5f4d3fb40898a9f2ccf58030e69ea11fbd6eed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/4b5f4d3f.failed

This is being used to implement both the port and device global stats,
which is causing some confusion in the drivers. For instance EFA and i40iw
both seem to be misusing the device stats.

Split it into two ops so drivers that don't support one or the other can
leave the op NULL'd, making the calling code a little simpler to
understand.

Link: https://lore.kernel.org/r/1955c154197b2a159adc2dc97266ddc74afe420c.1623427137.git.leonro@nvidia.com
	Tested-by: Gal Pressman <galpress@amazon.com>
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit 4b5f4d3fb40898a9f2ccf58030e69ea11fbd6eed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/bnxt_re/hw_counters.c
#	drivers/infiniband/hw/bnxt_re/hw_counters.h
#	drivers/infiniband/hw/cxgb4/provider.c
#	drivers/infiniband/hw/efa/efa.h
#	drivers/infiniband/hw/efa/efa_verbs.c
#	drivers/infiniband/hw/hfi1/verbs.c
#	drivers/infiniband/hw/mlx4/main.c
#	drivers/infiniband/hw/mlx5/counters.c
#	drivers/infiniband/sw/rxe/rxe_hw_counters.c
#	drivers/infiniband/sw/rxe/rxe_hw_counters.h
#	include/rdma/ib_verbs.h
diff --cc drivers/infiniband/hw/bnxt_re/hw_counters.c
index 5f5408cdf008,7ba07797845c..000000000000
--- a/drivers/infiniband/hw/bnxt_re/hw_counters.c
+++ b/drivers/infiniband/hw/bnxt_re/hw_counters.c
@@@ -234,13 -234,10 +234,15 @@@ int bnxt_re_ib_get_hw_stats(struct ib_d
  	return ARRAY_SIZE(bnxt_re_stat_name);
  }
  
++<<<<<<< HEAD
 +struct rdma_hw_stats *bnxt_re_ib_alloc_hw_stats(struct ib_device *ibdev,
 +						u8 port_num)
++=======
+ struct rdma_hw_stats *bnxt_re_ib_alloc_hw_port_stats(struct ib_device *ibdev,
+ 						     u32 port_num)
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  {
  	BUILD_BUG_ON(ARRAY_SIZE(bnxt_re_stat_name) != BNXT_RE_NUM_COUNTERS);
- 	/* We support only per port stats */
- 	if (!port_num)
- 		return NULL;
  
  	return rdma_alloc_hw_stats_struct(bnxt_re_stat_name,
  					  ARRAY_SIZE(bnxt_re_stat_name),
diff --cc drivers/infiniband/hw/bnxt_re/hw_counters.h
index 76399f477e5c,6f2d2f91d9ff..000000000000
--- a/drivers/infiniband/hw/bnxt_re/hw_counters.h
+++ b/drivers/infiniband/hw/bnxt_re/hw_counters.h
@@@ -96,9 -96,9 +96,14 @@@ enum bnxt_re_hw_stats 
  	BNXT_RE_NUM_COUNTERS
  };
  
++<<<<<<< HEAD
 +struct rdma_hw_stats *bnxt_re_ib_alloc_hw_stats(struct ib_device *ibdev,
 +						u8 port_num);
++=======
+ struct rdma_hw_stats *bnxt_re_ib_alloc_hw_port_stats(struct ib_device *ibdev,
+ 						     u32 port_num);
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  int bnxt_re_ib_get_hw_stats(struct ib_device *ibdev,
  			    struct rdma_hw_stats *stats,
 -			    u32 port, int index);
 +			    u8 port, int index);
  #endif /* __BNXT_RE_HW_STATS_H__ */
diff --cc drivers/infiniband/hw/cxgb4/provider.c
index ff61b65d5d26,4e453d1dde11..000000000000
--- a/drivers/infiniband/hw/cxgb4/provider.c
+++ b/drivers/infiniband/hw/cxgb4/provider.c
@@@ -378,8 -377,7 +378,12 @@@ static const char * const names[] = 
  	[IP6OUTRSTS] = "ip6OutRsts"
  };
  
++<<<<<<< HEAD
 +static struct rdma_hw_stats *c4iw_alloc_stats(struct ib_device *ibdev,
 +					      u8 port_num)
++=======
+ static struct rdma_hw_stats *c4iw_alloc_device_stats(struct ib_device *ibdev)
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  {
  	BUILD_BUG_ON(ARRAY_SIZE(names) != NR_COUNTERS);
  
@@@ -456,9 -452,8 +458,9 @@@ static const struct ib_device_ops c4iw_
  	.driver_id = RDMA_DRIVER_CXGB4,
  	.uverbs_abi_ver = C4IW_UVERBS_ABI_VERSION,
  
- 	.alloc_hw_stats = c4iw_alloc_stats,
+ 	.alloc_hw_device_stats = c4iw_alloc_device_stats,
  	.alloc_mr = c4iw_alloc_mr,
 +	.alloc_mw = c4iw_alloc_mw,
  	.alloc_pd = c4iw_allocate_pd,
  	.alloc_ucontext = c4iw_alloc_ucontext,
  	.create_cq = c4iw_create_cq,
diff --cc drivers/infiniband/hw/efa/efa.h
index e5d9712e98c4,2b8ca099b381..000000000000
--- a/drivers/infiniband/hw/efa/efa.h
+++ b/drivers/infiniband/hw/efa/efa.h
@@@ -156,9 -156,10 +156,15 @@@ int efa_destroy_ah(struct ib_ah *ibah, 
  int efa_modify_qp(struct ib_qp *ibqp, struct ib_qp_attr *qp_attr,
  		  int qp_attr_mask, struct ib_udata *udata);
  enum rdma_link_layer efa_port_link_layer(struct ib_device *ibdev,
++<<<<<<< HEAD
 +					 u8 port_num);
 +struct rdma_hw_stats *efa_alloc_hw_stats(struct ib_device *ibdev, u8 port_num);
++=======
+ 					 u32 port_num);
+ struct rdma_hw_stats *efa_alloc_hw_port_stats(struct ib_device *ibdev, u32 port_num);
+ struct rdma_hw_stats *efa_alloc_hw_device_stats(struct ib_device *ibdev);
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  int efa_get_hw_stats(struct ib_device *ibdev, struct rdma_hw_stats *stats,
 -		     u32 port_num, int index);
 +		     u8 port_num, int index);
  
  #endif /* _EFA_H_ */
diff --cc drivers/infiniband/hw/efa/efa_verbs.c
index 867d3f778c22,be6d3ff0f1be..000000000000
--- a/drivers/infiniband/hw/efa/efa_verbs.c
+++ b/drivers/infiniband/hw/efa/efa_verbs.c
@@@ -1904,15 -1904,24 +1904,28 @@@ int efa_destroy_ah(struct ib_ah *ibah, 
  	return 0;
  }
  
++<<<<<<< HEAD
 +struct rdma_hw_stats *efa_alloc_hw_stats(struct ib_device *ibdev, u8 port_num)
++=======
+ struct rdma_hw_stats *efa_alloc_hw_port_stats(struct ib_device *ibdev, u32 port_num)
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  {
  	return rdma_alloc_hw_stats_struct(efa_stats_names,
  					  ARRAY_SIZE(efa_stats_names),
  					  RDMA_HW_STATS_DEFAULT_LIFESPAN);
  }
  
+ struct rdma_hw_stats *efa_alloc_hw_device_stats(struct ib_device *ibdev)
+ {
+ 	/*
+ 	 * It is probably a bug that efa reports its port stats as device
+ 	 * stats
+ 	 */
+ 	return efa_alloc_hw_port_stats(ibdev, 0);
+ }
+ 
  int efa_get_hw_stats(struct ib_device *ibdev, struct rdma_hw_stats *stats,
 -		     u32 port_num, int index)
 +		     u8 port_num, int index)
  {
  	struct efa_com_get_stats_params params = {};
  	union efa_com_get_stats_result result;
diff --cc drivers/infiniband/hw/hfi1/verbs.c
index 0dd4bb0a5a7e,85deba07a675..000000000000
--- a/drivers/infiniband/hw/hfi1/verbs.c
+++ b/drivers/infiniband/hw/hfi1/verbs.c
@@@ -1693,54 -1693,53 +1693,58 @@@ static int init_cntr_names(const char *
  	return 0;
  }
  
++<<<<<<< HEAD
 +static struct rdma_hw_stats *alloc_hw_stats(struct ib_device *ibdev,
 +					    u8 port_num)
++=======
+ static int init_counters(struct ib_device *ibdev)
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  {
- 	int i, err;
+ 	struct hfi1_devdata *dd = dd_from_ibdev(ibdev);
+ 	int i, err = 0;
  
  	mutex_lock(&cntr_names_lock);
- 	if (!cntr_names_initialized) {
- 		struct hfi1_devdata *dd = dd_from_ibdev(ibdev);
- 
- 		err = init_cntr_names(dd->cntrnames,
- 				      dd->cntrnameslen,
- 				      num_driver_cntrs,
- 				      &num_dev_cntrs,
- 				      &dev_cntr_names);
- 		if (err) {
- 			mutex_unlock(&cntr_names_lock);
- 			return NULL;
- 		}
- 
- 		for (i = 0; i < num_driver_cntrs; i++)
- 			dev_cntr_names[num_dev_cntrs + i] =
- 				driver_cntr_names[i];
- 
- 		err = init_cntr_names(dd->portcntrnames,
- 				      dd->portcntrnameslen,
- 				      0,
- 				      &num_port_cntrs,
- 				      &port_cntr_names);
- 		if (err) {
- 			kfree(dev_cntr_names);
- 			dev_cntr_names = NULL;
- 			mutex_unlock(&cntr_names_lock);
- 			return NULL;
- 		}
- 		cntr_names_initialized = 1;
+ 	if (cntr_names_initialized)
+ 		goto out_unlock;
+ 
+ 	err = init_cntr_names(dd->cntrnames, dd->cntrnameslen, num_driver_cntrs,
+ 			      &num_dev_cntrs, &dev_cntr_names);
+ 	if (err)
+ 		goto out_unlock;
+ 
+ 	for (i = 0; i < num_driver_cntrs; i++)
+ 		dev_cntr_names[num_dev_cntrs + i] = driver_cntr_names[i];
+ 
+ 	err = init_cntr_names(dd->portcntrnames, dd->portcntrnameslen, 0,
+ 			      &num_port_cntrs, &port_cntr_names);
+ 	if (err) {
+ 		kfree(dev_cntr_names);
+ 		dev_cntr_names = NULL;
+ 		goto out_unlock;
  	}
+ 	cntr_names_initialized = 1;
+ 
+ out_unlock:
  	mutex_unlock(&cntr_names_lock);
+ 	return err;
+ }
  
- 	if (!port_num)
- 		return rdma_alloc_hw_stats_struct(
- 				dev_cntr_names,
- 				num_dev_cntrs + num_driver_cntrs,
- 				RDMA_HW_STATS_DEFAULT_LIFESPAN);
- 	else
- 		return rdma_alloc_hw_stats_struct(
- 				port_cntr_names,
- 				num_port_cntrs,
- 				RDMA_HW_STATS_DEFAULT_LIFESPAN);
+ static struct rdma_hw_stats *hfi1_alloc_hw_device_stats(struct ib_device *ibdev)
+ {
+ 	if (init_counters(ibdev))
+ 		return NULL;
+ 	return rdma_alloc_hw_stats_struct(dev_cntr_names,
+ 					  num_dev_cntrs + num_driver_cntrs,
+ 					  RDMA_HW_STATS_DEFAULT_LIFESPAN);
+ }
+ 
+ static struct rdma_hw_stats *hfi_alloc_hw_port_stats(struct ib_device *ibdev,
+ 						     u32 port_num)
+ {
+ 	if (init_counters(ibdev))
+ 		return NULL;
+ 	return rdma_alloc_hw_stats_struct(port_cntr_names, num_port_cntrs,
+ 					  RDMA_HW_STATS_DEFAULT_LIFESPAN);
  }
  
  static u64 hfi1_sps_ints(void)
diff --cc drivers/infiniband/hw/mlx4/main.c
index c5f44a179962,341162aa2175..000000000000
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@@ -2098,8 -2105,8 +2098,13 @@@ static const struct diag_counter diag_d
  	DIAG_COUNTER(rq_num_udsdprd, 0x118),
  };
  
++<<<<<<< HEAD
 +static struct rdma_hw_stats *mlx4_ib_alloc_hw_stats(struct ib_device *ibdev,
 +						    u8 port_num)
++=======
+ static struct rdma_hw_stats *
+ mlx4_ib_alloc_hw_device_stats(struct ib_device *ibdev)
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  {
  	struct mlx4_ib_dev *dev = to_mdev(ibdev);
  	struct mlx4_ib_diag_counters *diag = dev->diag_counters;
diff --cc drivers/infiniband/hw/mlx5/counters.c
index 084652e2b15a,224ba36f2946..000000000000
--- a/drivers/infiniband/hw/mlx5/counters.c
+++ b/drivers/infiniband/hw/mlx5/counters.c
@@@ -161,17 -161,24 +161,29 @@@ u16 mlx5_ib_get_counters_id(struct mlx5
  	return cnts->set_id;
  }
  
++<<<<<<< HEAD
 +static struct rdma_hw_stats *mlx5_ib_alloc_hw_stats(struct ib_device *ibdev,
 +						    u8 port_num)
++=======
+ static struct rdma_hw_stats *
+ mlx5_ib_alloc_hw_device_stats(struct ib_device *ibdev)
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  {
  	struct mlx5_ib_dev *dev = to_mdev(ibdev);
- 	const struct mlx5_ib_counters *cnts;
- 	bool is_switchdev = is_mdev_switchdev_mode(dev->mdev);
+ 	const struct mlx5_ib_counters *cnts = &dev->port[0].cnts;
  
- 	if ((is_switchdev && port_num) || (!is_switchdev && !port_num))
- 		return NULL;
+ 	return rdma_alloc_hw_stats_struct(cnts->names,
+ 					  cnts->num_q_counters +
+ 						  cnts->num_cong_counters +
+ 						  cnts->num_ext_ppcnt_counters,
+ 					  RDMA_HW_STATS_DEFAULT_LIFESPAN);
+ }
  
- 	cnts = get_counters(dev, port_num - 1);
+ static struct rdma_hw_stats *
+ mlx5_ib_alloc_hw_port_stats(struct ib_device *ibdev, u32 port_num)
+ {
+ 	struct mlx5_ib_dev *dev = to_mdev(ibdev);
+ 	const struct mlx5_ib_counters *cnts = &dev->port[port_num - 1].cnts;
  
  	return rdma_alloc_hw_stats_struct(cnts->names,
  					  cnts->num_q_counters +
diff --cc drivers/infiniband/sw/rxe/rxe_hw_counters.c
index ac9154f0593d,d5ceb706d964..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_hw_counters.c
+++ b/drivers/infiniband/sw/rxe/rxe_hw_counters.c
@@@ -40,13 -40,10 +40,15 @@@ int rxe_ib_get_hw_stats(struct ib_devic
  	return ARRAY_SIZE(rxe_counter_name);
  }
  
++<<<<<<< HEAD
 +struct rdma_hw_stats *rxe_ib_alloc_hw_stats(struct ib_device *ibdev,
 +					    u8 port_num)
++=======
+ struct rdma_hw_stats *rxe_ib_alloc_hw_port_stats(struct ib_device *ibdev,
+ 						 u32 port_num)
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  {
  	BUILD_BUG_ON(ARRAY_SIZE(rxe_counter_name) != RXE_NUM_OF_COUNTERS);
- 	/* We support only per port stats */
- 	if (!port_num)
- 		return NULL;
  
  	return rdma_alloc_hw_stats_struct(rxe_counter_name,
  					  ARRAY_SIZE(rxe_counter_name),
diff --cc drivers/infiniband/sw/rxe/rxe_hw_counters.h
index 49ee6f96656d,71f4d4fa9dc8..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_hw_counters.h
+++ b/drivers/infiniband/sw/rxe/rxe_hw_counters.h
@@@ -29,9 -29,9 +29,14 @@@ enum rxe_counters 
  	RXE_NUM_OF_COUNTERS
  };
  
++<<<<<<< HEAD
 +struct rdma_hw_stats *rxe_ib_alloc_hw_stats(struct ib_device *ibdev,
 +					    u8 port_num);
++=======
+ struct rdma_hw_stats *rxe_ib_alloc_hw_port_stats(struct ib_device *ibdev,
+ 						 u32 port_num);
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  int rxe_ib_get_hw_stats(struct ib_device *ibdev,
  			struct rdma_hw_stats *stats,
 -			u32 port, int index);
 +			u8 port, int index);
  #endif /* RXE_HW_COUNTERS_H */
diff --cc include/rdma/ib_verbs.h
index bfcbec0959ce,849a06441e29..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2523,13 -2522,14 +2523,19 @@@ struct ib_device_ops 
  			    unsigned int *meta_sg_offset);
  
  	/**
- 	 * alloc_hw_stats - Allocate a struct rdma_hw_stats and fill in the
- 	 *   driver initialized data.  The struct is kfree()'ed by the sysfs
- 	 *   core when the device is removed.  A lifespan of -1 in the return
- 	 *   struct tells the core to set a default lifespan.
+ 	 * alloc_hw_[device,port]_stats - Allocate a struct rdma_hw_stats and
+ 	 *   fill in the driver initialized data.  The struct is kfree()'ed by
+ 	 *   the sysfs core when the device is removed.  A lifespan of -1 in the
+ 	 *   return struct tells the core to set a default lifespan.
  	 */
++<<<<<<< HEAD
 +	struct rdma_hw_stats *(*alloc_hw_stats)(struct ib_device *device,
 +						u8 port_num);
++=======
+ 	struct rdma_hw_stats *(*alloc_hw_device_stats)(struct ib_device *device);
+ 	struct rdma_hw_stats *(*alloc_hw_port_stats)(struct ib_device *device,
+ 						     u32 port_num);
++>>>>>>> 4b5f4d3fb408 (RDMA: Split the alloc_hw_stats() ops to port and device variants)
  	/**
  	 * get_hw_stats - Fill in the counter value(s) in the stats struct.
  	 * @index - The index in the value array we wish to have updated, or
diff --git a/drivers/infiniband/core/counters.c b/drivers/infiniband/core/counters.c
index 0ed016099bfc..c262f43edacd 100644
--- a/drivers/infiniband/core/counters.c
+++ b/drivers/infiniband/core/counters.c
@@ -605,10 +605,10 @@ void rdma_counter_init(struct ib_device *dev)
 		port_counter->mode.mode = RDMA_COUNTER_MODE_NONE;
 		mutex_init(&port_counter->lock);
 
-		if (!dev->ops.alloc_hw_stats)
+		if (!dev->ops.alloc_hw_port_stats)
 			continue;
 
-		port_counter->hstats = dev->ops.alloc_hw_stats(dev, port);
+		port_counter->hstats = dev->ops.alloc_hw_port_stats(dev, port);
 		if (!port_counter->hstats)
 			goto fail;
 	}
diff --git a/drivers/infiniband/core/device.c b/drivers/infiniband/core/device.c
index 0379573534a3..c30780c230c7 100644
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@ -2591,7 +2591,8 @@ void ib_set_device_ops(struct ib_device *dev, const struct ib_device_ops *ops)
 	SET_DEVICE_OP(dev_ops, add_gid);
 	SET_DEVICE_OP(dev_ops, advise_mr);
 	SET_DEVICE_OP(dev_ops, alloc_dm);
-	SET_DEVICE_OP(dev_ops, alloc_hw_stats);
+	SET_DEVICE_OP(dev_ops, alloc_hw_device_stats);
+	SET_DEVICE_OP(dev_ops, alloc_hw_port_stats);
 	SET_DEVICE_OP(dev_ops, alloc_mr);
 	SET_DEVICE_OP(dev_ops, alloc_mr_integrity);
 	SET_DEVICE_OP(dev_ops, alloc_mw);
diff --git a/drivers/infiniband/core/nldev.c b/drivers/infiniband/core/nldev.c
index b96dace663fd..491b10a43db2 100644
--- a/drivers/infiniband/core/nldev.c
+++ b/drivers/infiniband/core/nldev.c
@@ -2060,7 +2060,7 @@ static int stat_get_doit_default_counter(struct sk_buff *skb,
 	if (!device)
 		return -EINVAL;
 
-	if (!device->ops.alloc_hw_stats || !device->ops.get_hw_stats) {
+	if (!device->ops.alloc_hw_port_stats || !device->ops.get_hw_stats) {
 		ret = -EINVAL;
 		goto err;
 	}
diff --git a/drivers/infiniband/core/sysfs.c b/drivers/infiniband/core/sysfs.c
index 1ae9eecb09be..2775eb35e6f3 100644
--- a/drivers/infiniband/core/sysfs.c
+++ b/drivers/infiniband/core/sysfs.c
@@ -973,8 +973,10 @@ static void setup_hw_stats(struct ib_device *device, struct ib_port *port,
 	struct rdma_hw_stats *stats;
 	int i, ret;
 
-	stats = device->ops.alloc_hw_stats(device, port_num);
-
+	if (port_num)
+		stats = device->ops.alloc_hw_port_stats(device, port_num);
+	else
+		stats = device->ops.alloc_hw_device_stats(device);
 	if (!stats)
 		return;
 
@@ -1163,7 +1165,7 @@ static int add_port(struct ib_core_device *coredev, int port_num)
 	 * port, so holder should be device. Therefore skip per port conunter
 	 * initialization.
 	 */
-	if (device->ops.alloc_hw_stats && port_num && is_full_dev)
+	if (device->ops.alloc_hw_port_stats && port_num && is_full_dev)
 		setup_hw_stats(device, p, port_num);
 
 	list_add_tail(&p->kobj.entry, &coredev->port_list);
@@ -1393,7 +1395,7 @@ int ib_device_register_sysfs(struct ib_device *device)
 	if (ret)
 		return ret;
 
-	if (device->ops.alloc_hw_stats)
+	if (device->ops.alloc_hw_device_stats)
 		setup_hw_stats(device, NULL, 0);
 
 	return 0;
* Unmerged path drivers/infiniband/hw/bnxt_re/hw_counters.c
* Unmerged path drivers/infiniband/hw/bnxt_re/hw_counters.h
diff --git a/drivers/infiniband/hw/bnxt_re/main.c b/drivers/infiniband/hw/bnxt_re/main.c
index 9bf25da2161d..3cdfca25ad1e 100644
--- a/drivers/infiniband/hw/bnxt_re/main.c
+++ b/drivers/infiniband/hw/bnxt_re/main.c
@@ -662,7 +662,7 @@ static const struct ib_device_ops bnxt_re_dev_ops = {
 	.uverbs_abi_ver = BNXT_RE_ABI_VERSION,
 
 	.add_gid = bnxt_re_add_gid,
-	.alloc_hw_stats = bnxt_re_ib_alloc_hw_stats,
+	.alloc_hw_port_stats = bnxt_re_ib_alloc_hw_port_stats,
 	.alloc_mr = bnxt_re_alloc_mr,
 	.alloc_pd = bnxt_re_alloc_pd,
 	.alloc_ucontext = bnxt_re_alloc_ucontext,
* Unmerged path drivers/infiniband/hw/cxgb4/provider.c
* Unmerged path drivers/infiniband/hw/efa/efa.h
diff --git a/drivers/infiniband/hw/efa/efa_main.c b/drivers/infiniband/hw/efa/efa_main.c
index 0b61ef0d5983..be4a07bd268a 100644
--- a/drivers/infiniband/hw/efa/efa_main.c
+++ b/drivers/infiniband/hw/efa/efa_main.c
@@ -242,7 +242,8 @@ static const struct ib_device_ops efa_dev_ops = {
 	.driver_id = RDMA_DRIVER_EFA,
 	.uverbs_abi_ver = EFA_UVERBS_ABI_VERSION,
 
-	.alloc_hw_stats = efa_alloc_hw_stats,
+	.alloc_hw_port_stats = efa_alloc_hw_port_stats,
+	.alloc_hw_device_stats = efa_alloc_hw_device_stats,
 	.alloc_pd = efa_alloc_pd,
 	.alloc_ucontext = efa_alloc_ucontext,
 	.create_cq = efa_create_cq,
* Unmerged path drivers/infiniband/hw/efa/efa_verbs.c
* Unmerged path drivers/infiniband/hw/hfi1/verbs.c
diff --git a/drivers/infiniband/hw/irdma/verbs.c b/drivers/infiniband/hw/irdma/verbs.c
index 4267661a8ef2..e8b170f0d997 100644
--- a/drivers/infiniband/hw/irdma/verbs.c
+++ b/drivers/infiniband/hw/irdma/verbs.c
@@ -3727,20 +3727,17 @@ static void irdma_get_dev_fw_str(struct ib_device *dev, char *str)
 }
 
 /**
- * irdma_alloc_hw_stats - Allocate a hw stats structure
+ * irdma_alloc_hw_port_stats - Allocate a hw stats structure
  * @ibdev: device pointer from stack
  * @port_num: port number
  */
-static struct rdma_hw_stats *irdma_alloc_hw_stats(struct ib_device *ibdev,
-						  u32 port_num)
+static struct rdma_hw_stats *irdma_alloc_hw_port_stats(struct ib_device *ibdev,
+						       u32 port_num)
 {
 	int num_counters = IRDMA_HW_STAT_INDEX_MAX_32 +
 			   IRDMA_HW_STAT_INDEX_MAX_64;
 	unsigned long lifespan = RDMA_HW_STATS_DEFAULT_LIFESPAN;
 
-	if (!port_num)
-		return NULL;
-
 	BUILD_BUG_ON(ARRAY_SIZE(irdma_hw_stat_names) !=
 		     (IRDMA_HW_STAT_INDEX_MAX_32 + IRDMA_HW_STAT_INDEX_MAX_64));
 
@@ -4354,7 +4351,7 @@ static const struct ib_device_ops irdma_dev_ops = {
 	.driver_id = RDMA_DRIVER_IRDMA,
 	.uverbs_abi_ver = IRDMA_ABI_VER,
 
-	.alloc_hw_stats = irdma_alloc_hw_stats,
+	.alloc_hw_port_stats = irdma_alloc_hw_port_stats,
 	.alloc_mr = irdma_alloc_mr,
 	.alloc_mw = irdma_alloc_mw,
 	.alloc_pd = irdma_alloc_pd,
* Unmerged path drivers/infiniband/hw/mlx4/main.c
* Unmerged path drivers/infiniband/hw/mlx5/counters.c
* Unmerged path drivers/infiniband/sw/rxe/rxe_hw_counters.c
* Unmerged path drivers/infiniband/sw/rxe/rxe_hw_counters.h
diff --git a/drivers/infiniband/sw/rxe/rxe_verbs.c b/drivers/infiniband/sw/rxe/rxe_verbs.c
index 38b4d0e125b5..f1cf1fc7e775 100644
--- a/drivers/infiniband/sw/rxe/rxe_verbs.c
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.c
@@ -1104,7 +1104,7 @@ static const struct ib_device_ops rxe_dev_ops = {
 	.driver_id = RDMA_DRIVER_RXE,
 	.uverbs_abi_ver = RXE_UVERBS_ABI_VERSION,
 
-	.alloc_hw_stats = rxe_ib_alloc_hw_stats,
+	.alloc_hw_port_stats = rxe_ib_alloc_hw_port_stats,
 	.alloc_mr = rxe_alloc_mr,
 	.alloc_mw = rxe_alloc_mw,
 	.alloc_pd = rxe_alloc_pd,
* Unmerged path include/rdma/ib_verbs.h
