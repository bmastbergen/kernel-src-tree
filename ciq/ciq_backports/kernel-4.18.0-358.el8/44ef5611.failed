nvme: split init identify into helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
commit 44ef5611c2a56538c60211672f73e4ff7df913c7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/44ef5611.failed

The function nvme_init_ctrl_finish() (formerly nvme_init_identify()) has
grown over the period of time about ~200 lines given the size of nvme id
ctrl data structure.

Move the nvme_id_ctrl data structure related initilzation into helper
nvme_init_identify() and call it from nvme_init_ctrl_finish().

When we move the code into nvme_init_identify() change the local
variable i from int to unsigned int and remove the duplicate kfree()
after nvme_mpath_init() and jump to the label out_free if
nvme_mpath_ini() fails.

	Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 44ef5611c2a56538c60211672f73e4ff7df913c7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index c7d5dfee04c8,ce16d24ffdce..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -3264,11 -3198,9 +3250,15 @@@ static int nvme_init_identify(struct nv
  		ctrl->hmmaxd = le16_to_cpu(id->hmmaxd);
  	}
  
++<<<<<<< HEAD
 +	ret = nvme_mpath_init_identify(ctrl, id);
 +	kfree(id);
 +
++=======
+ 	ret = nvme_mpath_init(ctrl, id);
++>>>>>>> 44ef5611c2a5 (nvme: split init identify into helper)
  	if (ret < 0)
- 		return ret;
+ 		goto out_free;
  
  	if (ctrl->apst_enabled && !prev_apst_enabled)
  		dev_pm_qos_expose_latency_tolerance(ctrl->device);
* Unmerged path drivers/nvme/host/core.c
