mptcp: cleanup sysctl data and helpers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit 6da14d74e2bd07bca2cba10878dda5dc0485d59c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/6da14d74.failed

Reorder the data in mptcp_pernet to avoid wasting space
with no reasons and constify the access helpers.

No functional changes intended.

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6da14d74e2bd07bca2cba10878dda5dc0485d59c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/ctrl.c
#	net/mptcp/protocol.h
diff --cc net/mptcp/ctrl.c
index 7ce1fb8404d7,63bba9d8e289..000000000000
--- a/net/mptcp/ctrl.c
+++ b/net/mptcp/ctrl.c
@@@ -21,11 -21,13 +21,18 @@@ struct mptcp_pernet 
  	struct ctl_table_header *ctl_table_hdr;
  #endif
  
++<<<<<<< HEAD
 +	int mptcp_enabled;
 +	unsigned int add_addr_timeout;
++=======
+ 	unsigned int add_addr_timeout;
+ 	u8 mptcp_enabled;
+ 	u8 checksum_enabled;
+ 	u8 allow_join_initial_addr_port;
++>>>>>>> 6da14d74e2bd (mptcp: cleanup sysctl data and helpers)
  };
  
- static struct mptcp_pernet *mptcp_get_pernet(struct net *net)
+ static struct mptcp_pernet *mptcp_get_pernet(const struct net *net)
  {
  	return net_generic(net, mptcp_pernet_id);
  }
@@@ -40,10 -42,22 +47,23 @@@ unsigned int mptcp_get_add_addr_timeout
  	return mptcp_get_pernet(net)->add_addr_timeout;
  }
  
++<<<<<<< HEAD
++=======
+ int mptcp_is_checksum_enabled(const struct net *net)
+ {
+ 	return mptcp_get_pernet(net)->checksum_enabled;
+ }
+ 
+ int mptcp_allow_join_id0(const struct net *net)
+ {
+ 	return mptcp_get_pernet(net)->allow_join_initial_addr_port;
+ }
+ 
++>>>>>>> 6da14d74e2bd (mptcp: cleanup sysctl data and helpers)
  static void mptcp_pernet_set_defaults(struct mptcp_pernet *pernet)
  {
 -	pernet->mptcp_enabled = 1;
 +	pernet->mptcp_enabled = 0;
  	pernet->add_addr_timeout = TCP_RTO_MAX;
 -	pernet->checksum_enabled = 0;
 -	pernet->allow_join_initial_addr_port = 1;
  }
  
  #ifdef CONFIG_SYSCTL
diff --cc net/mptcp/protocol.h
index 5c8dbbab0f7e,43ff6c5baddc..000000000000
--- a/net/mptcp/protocol.h
+++ b/net/mptcp/protocol.h
@@@ -530,10 -556,13 +530,17 @@@ static inline void mptcp_subflow_delega
  	clear_bit(MPTCP_DELEGATE_SEND, &subflow->delegated_status);
  }
  
++<<<<<<< HEAD
 +int mptcp_is_enabled(struct net *net);
 +unsigned int mptcp_get_add_addr_timeout(struct net *net);
++=======
+ int mptcp_is_enabled(const struct net *net);
+ unsigned int mptcp_get_add_addr_timeout(const struct net *net);
+ int mptcp_is_checksum_enabled(const struct net *net);
+ int mptcp_allow_join_id0(const struct net *net);
++>>>>>>> 6da14d74e2bd (mptcp: cleanup sysctl data and helpers)
  void mptcp_subflow_fully_established(struct mptcp_subflow_context *subflow,
  				     struct mptcp_options_received *mp_opt);
 -bool __mptcp_retransmit_pending_data(struct sock *sk);
  bool mptcp_subflow_data_available(struct sock *sk);
  void __init mptcp_subflow_init(void);
  void mptcp_subflow_shutdown(struct sock *sk, struct sock *ssk, int how);
* Unmerged path net/mptcp/ctrl.c
* Unmerged path net/mptcp/protocol.h
