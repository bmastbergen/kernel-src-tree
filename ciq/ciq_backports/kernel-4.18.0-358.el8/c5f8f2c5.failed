IB/core: Removed port validity check from ib_get_cached_subnet_prefix

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Anand Khoje <anand.a.khoje@oracle.com>
commit c5f8f2c5e5bfd4fd5fc5c413051ad14b7873b1fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/c5f8f2c5.failed

Removed port validity check from ib_get_cached_subnet_prefix() as this
check is not needed because "port_num" is valid.

Link: https://lore.kernel.org/r/20210616154509.1047-2-anand.a.khoje@oracle.com
	Suggested-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Anand Khoje <anand.a.khoje@oracle.com>
	Signed-off-by: Haakon Bugge <haakon.bugge@oracle.com>
	Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit c5f8f2c5e5bfd4fd5fc5c413051ad14b7873b1fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cache.c
#	drivers/infiniband/core/core_priv.h
diff --cc drivers/infiniband/core/cache.c
index a27a159ec5fa,c9e9fc81447e..000000000000
--- a/drivers/infiniband/core/cache.c
+++ b/drivers/infiniband/core/cache.c
@@@ -1069,9 -1069,8 +1069,14 @@@ int ib_get_cached_pkey(struct ib_devic
  }
  EXPORT_SYMBOL(ib_get_cached_pkey);
  
++<<<<<<< HEAD
 +int ib_get_cached_subnet_prefix(struct ib_device *device,
 +				u8                port_num,
 +				u64              *sn_pfx)
++=======
+ void ib_get_cached_subnet_prefix(struct ib_device *device, u32 port_num,
+ 				u64 *sn_pfx)
++>>>>>>> c5f8f2c5e5bf (IB/core: Removed port validity check from ib_get_cached_subnet_prefix)
  {
  	unsigned long flags;
  
diff --cc drivers/infiniband/core/core_priv.h
index 315f7a297eee,647cca4e0240..000000000000
--- a/drivers/infiniband/core/core_priv.h
+++ b/drivers/infiniband/core/core_priv.h
@@@ -214,9 -212,9 +214,15 @@@ int ib_nl_handle_ip_res_resp(struct sk_
  			     struct nlmsghdr *nlh,
  			     struct netlink_ext_ack *extack);
  
++<<<<<<< HEAD
 +int ib_get_cached_subnet_prefix(struct ib_device *device,
 +				u8                port_num,
 +				u64              *sn_pfx);
++=======
+ void ib_get_cached_subnet_prefix(struct ib_device *device,
+ 				u32 port_num,
+ 				u64 *sn_pfx);
++>>>>>>> c5f8f2c5e5bf (IB/core: Removed port validity check from ib_get_cached_subnet_prefix)
  
  #ifdef CONFIG_SECURITY_INFINIBAND
  void ib_security_release_port_pkey_list(struct ib_device *device);
* Unmerged path drivers/infiniband/core/cache.c
* Unmerged path drivers/infiniband/core/core_priv.h
diff --git a/drivers/infiniband/core/device.c b/drivers/infiniband/core/device.c
index 0379573534a3..19a4261970ed 100644
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@ -882,15 +882,8 @@ static void ib_policy_change_task(struct work_struct *work)
 
 		rdma_for_each_port (dev, i) {
 			u64 sp;
-			int ret = ib_get_cached_subnet_prefix(dev,
-							      i,
-							      &sp);
-
-			WARN_ONCE(ret,
-				  "ib_get_cached_subnet_prefix err: %d, this should never happen here\n",
-				  ret);
-			if (!ret)
-				ib_security_cache_change(dev, i, sp);
+			ib_get_cached_subnet_prefix(dev, i, &sp);
+			ib_security_cache_change(dev, i, sp);
 		}
 	}
 	up_read(&devices_rwsem);
diff --git a/drivers/infiniband/core/security.c b/drivers/infiniband/core/security.c
index 75e7ec017836..8222791268bc 100644
--- a/drivers/infiniband/core/security.c
+++ b/drivers/infiniband/core/security.c
@@ -72,7 +72,7 @@ static int get_pkey_and_subnet_prefix(struct ib_port_pkey *pp,
 	if (ret)
 		return ret;
 
-	ret = ib_get_cached_subnet_prefix(dev, pp->port_num, subnet_prefix);
+	ib_get_cached_subnet_prefix(dev, pp->port_num, subnet_prefix);
 
 	return ret;
 }
@@ -664,10 +664,7 @@ static int ib_security_pkey_access(struct ib_device *dev,
 	if (ret)
 		return ret;
 
-	ret = ib_get_cached_subnet_prefix(dev, port_num, &subnet_prefix);
-
-	if (ret)
-		return ret;
+	ib_get_cached_subnet_prefix(dev, port_num, &subnet_prefix);
 
 	return security_ib_pkey_access(sec, subnet_prefix, pkey);
 }
