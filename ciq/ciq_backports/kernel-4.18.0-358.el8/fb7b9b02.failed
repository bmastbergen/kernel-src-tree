kyber: make trace_block_rq call consistent with documentation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Vincent Fu <vincent.fu@samsung.com>
commit fb7b9b0231ba8f77587c23f5257a4fdb6df1219e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/fb7b9b02.failed

The kyber ioscheduler calls trace_block_rq_insert() *after* the request
is added to the queue but the documentation for trace_block_rq_insert()
says that the call should be made *before* the request is added to the
queue.  Move the tracepoint for the kyber ioscheduler so that it is
consistent with the documentation.

	Signed-off-by: Vincent Fu <vincent.fu@samsung.com>
Link: https://lore.kernel.org/r/20210804194913.10497-1-vincent.fu@samsung.com
Reviewed by: Adam Manzanares <a.manzanares@samsung.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit fb7b9b0231ba8f77587c23f5257a4fdb6df1219e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/kyber-iosched.c
diff --cc block/kyber-iosched.c
index c93bbbdce939,15a8be57203d..000000000000
--- a/block/kyber-iosched.c
+++ b/block/kyber-iosched.c
@@@ -609,7 -603,6 +610,10 @@@ static void kyber_insert_requests(struc
  			list_move_tail(&rq->queuelist, head);
  		sbitmap_set_bit(&khd->kcq_map[sched_domain],
  				rq->mq_ctx->index_hw[hctx->type]);
++<<<<<<< HEAD
 +		blk_mq_sched_request_inserted(rq);
++=======
++>>>>>>> fb7b9b0231ba (kyber: make trace_block_rq call consistent with documentation)
  		spin_unlock(&kcq->lock);
  	}
  }
* Unmerged path block/kyber-iosched.c
