scsi: target: tcm_loop: Use LIO wq cmd submission helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Mike Christie <michael.christie@oracle.com>
commit 1130b499b4a74baa8248002a4fd4275bf137b7f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/1130b499.failed

Convert loop to use the LIO wq cmd submission helper.

Link: https://lore.kernel.org/r/20210227170006.5077-20-michael.christie@oracle.com
	Tested-by: Laurence Oberman <loberman@redhat.com>
	Reviewed-by: Bodo Stroesser <bostroesser@gmail.com>
	Signed-off-by: Mike Christie <michael.christie@oracle.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 1130b499b4a74baa8248002a4fd4275bf137b7f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/loopback/tcm_loop.c
diff --cc drivers/target/loopback/tcm_loop.c
index 6880a064d44b,2687fd7d45db..000000000000
--- a/drivers/target/loopback/tcm_loop.c
+++ b/drivers/target/loopback/tcm_loop.c
@@@ -160,10 -157,11 +157,15 @@@ static void tcm_loop_target_queue_cmd(s
  
  	if (target_submit_prep(se_cmd, sc->cmnd, scsi_sglist(sc),
  			       scsi_sg_count(sc), sgl_bidi, sgl_bidi_count,
++<<<<<<< HEAD
 +			       scsi_prot_sglist(sc), scsi_prot_sg_count(sc)))
++=======
+ 			       scsi_prot_sglist(sc), scsi_prot_sg_count(sc),
+ 			       GFP_ATOMIC))
++>>>>>>> 1130b499b4a7 (scsi: target: tcm_loop: Use LIO wq cmd submission helper)
  		return;
  
- 	target_submit(se_cmd);
+ 	target_queue_submission(se_cmd);
  	return;
  
  out_done:
* Unmerged path drivers/target/loopback/tcm_loop.c
diff --git a/drivers/target/loopback/tcm_loop.h b/drivers/target/loopback/tcm_loop.h
index d3110909a213..437663b3905c 100644
--- a/drivers/target/loopback/tcm_loop.h
+++ b/drivers/target/loopback/tcm_loop.h
@@ -16,7 +16,6 @@ struct tcm_loop_cmd {
 	struct scsi_cmnd *sc;
 	/* The TCM I/O descriptor that is accessed via container_of() */
 	struct se_cmd tl_se_cmd;
-	struct work_struct work;
 	struct completion tmr_done;
 	/* Sense buffer that will be mapped into outgoing status */
 	unsigned char tl_sense_buf[TRANSPORT_SENSE_BUFFER];
