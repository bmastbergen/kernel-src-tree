net: bridge: propagate error code and extack from br_mc_disabled_update

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Florian Fainelli <f.fainelli@gmail.com>
commit ae1ea84b33dab45c7b6c1754231ebda5959b504c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/ae1ea84b.failed

Some Ethernet switches might only be able to support disabling multicast
snooping globally, which is an issue for example when several bridges
span the same physical device and request contradictory settings.

Propagate the return value of br_mc_disabled_update() such that this
limitation is transmitted correctly to user-space.

	Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ae1ea84b33dab45c7b6c1754231ebda5959b504c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_multicast.c
diff --cc net/bridge/br_multicast.c
index 4eaac3b4a6ea,4daa95c913d0..000000000000
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@@ -1195,12 -1603,15 +1196,18 @@@ static int br_mc_disabled_update(struc
  		.u.mc_disabled = !value,
  	};
  
++<<<<<<< HEAD
 +	switchdev_port_attr_set(dev, &attr);
++=======
+ 	return switchdev_port_attr_set(dev, &attr, extack);
++>>>>>>> ae1ea84b33da (net: bridge: propagate error code and extack from br_mc_disabled_update)
  }
  
  int br_multicast_add_port(struct net_bridge_port *port)
  {
+ 	int err;
+ 
  	port->multicast_router = MDB_RTR_TYPE_TEMP_QUERY;
 -	port->multicast_eht_hosts_limit = BR_MCAST_DEFAULT_EHT_HOSTS_LIMIT;
  
  	timer_setup(&port->multicast_router_timer,
  		    br_multicast_router_expired, 0);
* Unmerged path net/bridge/br_multicast.c
diff --git a/net/bridge/br_netlink.c b/net/bridge/br_netlink.c
index 1c6fc5cc1b5a..33c4161fe31b 100644
--- a/net/bridge/br_netlink.c
+++ b/net/bridge/br_netlink.c
@@ -1259,7 +1259,9 @@ static int br_changelink(struct net_device *brdev, struct nlattr *tb[],
 	if (data[IFLA_BR_MCAST_SNOOPING]) {
 		u8 mcast_snooping = nla_get_u8(data[IFLA_BR_MCAST_SNOOPING]);
 
-		br_multicast_toggle(br, mcast_snooping);
+		err = br_multicast_toggle(br, mcast_snooping, extack);
+		if (err)
+			return err;
 	}
 
 	if (data[IFLA_BR_MCAST_QUERY_USE_IFADDR]) {
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index 336f9152b211..43a0d6de18ac 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -718,7 +718,8 @@ void br_multicast_flood(struct net_bridge_mdb_entry *mdst,
 			struct sk_buff *skb, bool local_rcv, bool local_orig);
 int br_multicast_set_router(struct net_bridge *br, unsigned long val);
 int br_multicast_set_port_router(struct net_bridge_port *p, unsigned long val);
-int br_multicast_toggle(struct net_bridge *br, unsigned long val);
+int br_multicast_toggle(struct net_bridge *br, unsigned long val,
+			struct netlink_ext_ack *extack);
 int br_multicast_set_querier(struct net_bridge *br, unsigned long val);
 int br_multicast_set_hash_max(struct net_bridge *br, unsigned long val);
 int br_multicast_set_igmp_version(struct net_bridge *br, unsigned long val);
