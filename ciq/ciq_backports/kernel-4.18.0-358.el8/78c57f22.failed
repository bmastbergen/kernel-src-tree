ethtool: Use correct command name in title

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Ido Schimmel <idosch@nvidia.com>
commit 78c57f22e3c87ab0a2844d7c9a120eba51ae34f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/78c57f22.failed

The command is called 'ETHTOOL_MSG_MODULE_EEPROM_GET', not
'ETHTOOL_MSG_MODULE_EEPROM'.

	Signed-off-by: Ido Schimmel <idosch@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 78c57f22e3c87ab0a2844d7c9a120eba51ae34f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/ethtool-netlink.rst
diff --cc Documentation/networking/ethtool-netlink.rst
index 9af92ef673b0,c3600f9c8988..000000000000
--- a/Documentation/networking/ethtool-netlink.rst
+++ b/Documentation/networking/ethtool-netlink.rst
@@@ -1353,6 -1363,118 +1353,121 @@@ in an implementation specific way
  ``ETHTOOL_A_FEC_AUTO`` requests the driver to choose FEC mode based on SFP
  module parameters. This does not mean autonegotiation.
  
++<<<<<<< HEAD
++=======
+ MODULE_EEPROM_GET
+ =================
+ 
+ Fetch module EEPROM data dump.
+ This interface is designed to allow dumps of at most 1/2 page at once. This
+ means only dumps of 128 (or less) bytes are allowed, without crossing half page
+ boundary located at offset 128. For pages other than 0 only high 128 bytes are
+ accessible.
+ 
+ Request contents:
+ 
+   =======================================  ======  ==========================
+   ``ETHTOOL_A_MODULE_EEPROM_HEADER``       nested  request header
+   ``ETHTOOL_A_MODULE_EEPROM_OFFSET``       u32     offset within a page
+   ``ETHTOOL_A_MODULE_EEPROM_LENGTH``       u32     amount of bytes to read
+   ``ETHTOOL_A_MODULE_EEPROM_PAGE``         u8      page number
+   ``ETHTOOL_A_MODULE_EEPROM_BANK``         u8      bank number
+   ``ETHTOOL_A_MODULE_EEPROM_I2C_ADDRESS``  u8      page I2C address
+   =======================================  ======  ==========================
+ 
+ Kernel response contents:
+ 
+  +---------------------------------------------+--------+---------------------+
+  | ``ETHTOOL_A_MODULE_EEPROM_HEADER``          | nested | reply header        |
+  +---------------------------------------------+--------+---------------------+
+  | ``ETHTOOL_A_MODULE_EEPROM_DATA``            | nested | array of bytes from |
+  |                                             |        | module EEPROM       |
+  +---------------------------------------------+--------+---------------------+
+ 
+ ``ETHTOOL_A_MODULE_EEPROM_DATA`` has an attribute length equal to the amount of
+ bytes driver actually read.
+ 
+ STATS_GET
+ =========
+ 
+ Get standard statistics for the interface. Note that this is not
+ a re-implementation of ``ETHTOOL_GSTATS`` which exposed driver-defined
+ stats.
+ 
+ Request contents:
+ 
+   =======================================  ======  ==========================
+   ``ETHTOOL_A_STATS_HEADER``               nested  request header
+   ``ETHTOOL_A_STATS_GROUPS``               bitset  requested groups of stats
+   =======================================  ======  ==========================
+ 
+ Kernel response contents:
+ 
+  +-----------------------------------+--------+--------------------------------+
+  | ``ETHTOOL_A_STATS_HEADER``        | nested | reply header                   |
+  +-----------------------------------+--------+--------------------------------+
+  | ``ETHTOOL_A_STATS_GRP``           | nested | one or more group of stats     |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_ID``      | u32    | group ID - ``ETHTOOL_STATS_*`` |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_SS_ID``   | u32    | string set ID for names        |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_STAT``    | nested | nest containing a statistic    |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_HIST_RX`` | nested | histogram statistic (Rx)       |
+  +-+---------------------------------+--------+--------------------------------+
+  | | ``ETHTOOL_A_STATS_GRP_HIST_TX`` | nested | histogram statistic (Tx)       |
+  +-+---------------------------------+--------+--------------------------------+
+ 
+ Users specify which groups of statistics they are requesting via
+ the ``ETHTOOL_A_STATS_GROUPS`` bitset. Currently defined values are:
+ 
+  ====================== ======== ===============================================
+  ETHTOOL_STATS_ETH_MAC  eth-mac  Basic IEEE 802.3 MAC statistics (30.3.1.1.*)
+  ETHTOOL_STATS_ETH_PHY  eth-phy  Basic IEEE 802.3 PHY statistics (30.3.2.1.*)
+  ETHTOOL_STATS_ETH_CTRL eth-ctrl Basic IEEE 802.3 MAC Ctrl statistics (30.3.3.*)
+  ETHTOOL_STATS_RMON     rmon     RMON (RFC 2819) statistics
+  ====================== ======== ===============================================
+ 
+ Each group should have a corresponding ``ETHTOOL_A_STATS_GRP`` in the reply.
+ ``ETHTOOL_A_STATS_GRP_ID`` identifies which group's statistics nest contains.
+ ``ETHTOOL_A_STATS_GRP_SS_ID`` identifies the string set ID for the names of
+ the statistics in the group, if available.
+ 
+ Statistics are added to the ``ETHTOOL_A_STATS_GRP`` nest under
+ ``ETHTOOL_A_STATS_GRP_STAT``. ``ETHTOOL_A_STATS_GRP_STAT`` should contain
+ single 8 byte (u64) attribute inside - the type of that attribute is
+ the statistic ID and the value is the value of the statistic.
+ Each group has its own interpretation of statistic IDs.
+ Attribute IDs correspond to strings from the string set identified
+ by ``ETHTOOL_A_STATS_GRP_SS_ID``. Complex statistics (such as RMON histogram
+ entries) are also listed inside ``ETHTOOL_A_STATS_GRP`` and do not have
+ a string defined in the string set.
+ 
+ RMON "histogram" counters count number of packets within given size range.
+ Because RFC does not specify the ranges beyond the standard 1518 MTU devices
+ differ in definition of buckets. For this reason the definition of packet ranges
+ is left to each driver.
+ 
+ ``ETHTOOL_A_STATS_GRP_HIST_RX`` and ``ETHTOOL_A_STATS_GRP_HIST_TX`` nests
+ contain the following attributes:
+ 
+  ================================= ====== ===================================
+  ETHTOOL_A_STATS_RMON_HIST_BKT_LOW u32    low bound of the packet size bucket
+  ETHTOOL_A_STATS_RMON_HIST_BKT_HI  u32    high bound of the bucket
+  ETHTOOL_A_STATS_RMON_HIST_VAL     u64    packet counter
+  ================================= ====== ===================================
+ 
+ Low and high bounds are inclusive, for example:
+ 
+  ============================= ==== ====
+  RFC statistic                 low  high
+  ============================= ==== ====
+  etherStatsPkts64Octets          0    64
+  etherStatsPkts512to1023Octets 512  1023
+  ============================= ==== ====
+ 
++>>>>>>> 78c57f22e3c8 (ethtool: Use correct command name in title)
  Request translation
  ===================
  
* Unmerged path Documentation/networking/ethtool-netlink.rst
