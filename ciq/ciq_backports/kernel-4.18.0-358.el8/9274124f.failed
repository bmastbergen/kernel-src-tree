net: stricter validation of untrusted gso packets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
Rebuild_CHGLOG: - net: stricter validation of untrusted gso packets$ (Paolo Abeni) [2018437]
Rebuild_FUZZ: 98.99%
commit-author Willem de Bruijn <willemb@google.com>
commit 9274124f023b5c56dc4326637d4f787968b03607
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/9274124f.failed

Syzkaller again found a path to a kernel crash through bad gso input:
a packet with transport header extending beyond skb_headlen(skb).

Tighten validation at kernel entry:

- Verify that the transport header lies within the linear section.

    To avoid pulling linux/tcp.h, verify just sizeof tcphdr.
    tcp_gso_segment will call pskb_may_pull (th->doff * 4) before use.

- Match the gso_type against the ip_proto found by the flow dissector.

Fixes: bfd5f4a3d605 ("packet: Add GSO/csum offload support.")
	Reported-by: syzbot <syzkaller@googlegroups.com>
	Signed-off-by: Willem de Bruijn <willemb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9274124f023b5c56dc4326637d4f787968b03607)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/virtio_net.h
diff --cc include/linux/virtio_net.h
index acf273692515,6f6ade63b04c..000000000000
--- a/include/linux/virtio_net.h
+++ b/include/linux/virtio_net.h
@@@ -64,16 -75,14 +77,23 @@@ static inline int virtio_net_hdr_to_skb
  		 * probe and drop if does not match one of the above types.
  		 */
  		if (gso_type && skb->network_header) {
++<<<<<<< HEAD
 +			if (!skb->protocol) {
 +				__be16 protocol = dev_parse_header_protocol(skb);
 +
++=======
+ 			struct flow_keys_basic keys;
+ 
+ 			if (!skb->protocol)
++>>>>>>> 9274124f023b (net: stricter validation of untrusted gso packets)
  				virtio_net_hdr_set_proto(skb, hdr);
 +				if (protocol && protocol != skb->protocol)
 +					return -EINVAL;
 +			}
  retry:
- 			skb_probe_transport_header(skb);
- 			if (!skb_transport_header_was_set(skb)) {
+ 			if (!skb_flow_dissect_flow_keys_basic(NULL, skb, &keys,
+ 							      NULL, 0, 0, 0,
+ 							      0)) {
  				/* UFO does not specify ipv4 or 6: try both */
  				if (gso_type & SKB_GSO_UDP &&
  				    skb->protocol == htons(ETH_P_IP)) {
* Unmerged path include/linux/virtio_net.h
