zram: avoid race between zram_remove and disksize_store

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit 5a4b653655d554b5f51a5d2252882708c56a6f7e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/5a4b6536.failed

After resetting device in zram_remove(), disksize_store still may come and
allocate resources again before deleting gendisk, fix the race by resetting
zram after del_gendisk() returns. At that time, disksize_store can't come
any more.

	Reported-by: Luis Chamberlain <mcgrof@kernel.org>
	Reviewed-by: Luis Chamberlain <mcgrof@kernel.org>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Acked-by: Minchan Kim <minchan@kernel.org>
Link: https://lore.kernel.org/r/20211025025426.2815424-4-ming.lei@redhat.com
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 5a4b653655d554b5f51a5d2252882708c56a6f7e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/zram/zram_drv.c
diff --cc drivers/block/zram/zram_drv.c
index 55c88306734b,2dfa3a396c7c..000000000000
--- a/drivers/block/zram/zram_drv.c
+++ b/drivers/block/zram/zram_drv.c
@@@ -1752,8 -2002,18 +1752,23 @@@ static int zram_remove(struct zram *zra
  	pr_info("Removed device: %s\n", zram->disk->disk_name);
  
  	del_gendisk(zram->disk);
++<<<<<<< HEAD
 +	blk_cleanup_queue(zram->disk->queue);
 +	put_disk(zram->disk);
++=======
+ 
+ 	/* del_gendisk drains pending reset_store */
+ 	WARN_ON_ONCE(claimed && zram->claim);
+ 
+ 	/*
+ 	 * disksize_store() may be called in between zram_reset_device()
+ 	 * and del_gendisk(), so run the last reset to avoid leaking
+ 	 * anything allocated with disksize_store()
+ 	 */
+ 	zram_reset_device(zram);
+ 
+ 	blk_cleanup_disk(zram->disk);
++>>>>>>> 5a4b653655d5 (zram: avoid race between zram_remove and disksize_store)
  	kfree(zram);
  	return 0;
  }
* Unmerged path drivers/block/zram/zram_drv.c
