net: bridge: mcast: remove only S,G port groups from sg_port hash

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Nikolay Aleksandrov <nikolay@nvidia.com>
commit 7470558240330f04dbf940430813233935314f78
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/74705582.failed

We should remove a group from the sg_port hash only if it's an S,G
entry. This makes it correct and more symmetric with group add. Also
since *,G groups are not added to that hash we can hide a bug.

Fixes: 085b53c8beab ("net: bridge: mcast: add sg_port rhashtable")
	Signed-off-by: Nikolay Aleksandrov <nikolay@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7470558240330f04dbf940430813233935314f78)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_multicast.c
diff --cc net/bridge/br_multicast.c
index 28b757a17768,eae898c3cff7..000000000000
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@@ -234,6 -595,13 +234,16 @@@ void br_multicast_del_pg(struct net_bri
  	hlist_for_each_entry_safe(ent, tmp, &pg->src_list, node)
  		br_multicast_del_group_src(ent);
  	br_mdb_notify(br->dev, mp, pg, RTM_DELMDB);
++<<<<<<< HEAD
++=======
+ 	if (!br_multicast_is_star_g(&mp->addr)) {
+ 		rhashtable_remove_fast(&br->sg_port_tbl, &pg->rhnode,
+ 				       br_sg_port_rht_params);
+ 		br_multicast_sg_del_exclude_ports(mp);
+ 	} else {
+ 		br_multicast_star_g_handle_mode(pg, MCAST_INCLUDE);
+ 	}
++>>>>>>> 747055824033 (net: bridge: mcast: remove only S,G port groups from sg_port hash)
  	hlist_add_head(&pg->mcast_gc.gc_node, &br->mcast_gc_list);
  	queue_work(system_long_wq, &br->mcast_gc_work);
  
* Unmerged path net/bridge/br_multicast.c
