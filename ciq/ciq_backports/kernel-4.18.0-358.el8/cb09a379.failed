x86/topology: Set cpu_die_id only if DIE_TYPE found

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Yazen Ghannam <yazen.ghannam@amd.com>
commit cb09a379724d299c603a7a79f444f52a9a75b8d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/cb09a379.failed

CPUID Leaf 0x1F defines a DIE_TYPE level (nb: ECX[8:15] level type == 0x5),
but CPUID Leaf 0xB does not. However, detect_extended_topology() will
set struct cpuinfo_x86.cpu_die_id regardless of whether a valid Die ID
was found.

Only set cpu_die_id if a DIE_TYPE level is found. CPU topology code may
use another value for cpu_die_id, e.g. the AMD NodeId on AMD-based
systems. Code ordering should be maintained so that the CPUID Leaf 0x1F
Die ID value will take precedence on systems that may use another value.

	Suggested-by: Borislav Petkov <bp@alien8.de>
	Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20201109210659.754018-5-Yazen.Ghannam@amd.com
(cherry picked from commit cb09a379724d299c603a7a79f444f52a9a75b8d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/topology.c
diff --cc arch/x86/kernel/cpu/topology.c
index ff3039e888b6,1068002c8532..000000000000
--- a/arch/x86/kernel/cpu/topology.c
+++ b/arch/x86/kernel/cpu/topology.c
@@@ -137,8 -141,12 +139,17 @@@ int detect_extended_topology(struct cpu
  
  	c->cpu_core_id = apic->phys_pkg_id(c->initial_apicid,
  				ht_mask_width) & core_select_mask;
++<<<<<<< HEAD
 +	c->_rh.cpu_die_id = apic->phys_pkg_id(c->initial_apicid,
 +				core_plus_mask_width) & die_select_mask;
++=======
+ 
+ 	if (die_level_present) {
+ 		c->cpu_die_id = apic->phys_pkg_id(c->initial_apicid,
+ 					core_plus_mask_width) & die_select_mask;
+ 	}
+ 
++>>>>>>> cb09a379724d (x86/topology: Set cpu_die_id only if DIE_TYPE found)
  	c->phys_proc_id = apic->phys_pkg_id(c->initial_apicid,
  				die_plus_mask_width);
  	/*
* Unmerged path arch/x86/kernel/cpu/topology.c
