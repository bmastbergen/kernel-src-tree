ACPI: scan: Drop sta argument from acpi_add_single_object()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit f926e94338158a5f84cbe4b0c7a9438c303762f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/f926e943.failed

Move the initial status check for ACPI_BUS_TYPE_PROCESSOR objects
into acpi_add_single_object() so it is not necessary to pass the
"sta" argument to it, get rid of that argument from there and update
the callers of that function accordingly.

No intentional functional impact.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Reviewed-by: Hans de Goede <hdegoede@redhat.com>
(cherry picked from commit f926e94338158a5f84cbe4b0c7a9438c303762f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/scan.c
diff --cc drivers/acpi/scan.c
index fc29b67fcda9,787ba8aac9b5..000000000000
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@@ -1691,16 -1681,18 +1691,24 @@@ void acpi_device_add_finalize(struct ac
  }
  
  static int acpi_add_single_object(struct acpi_device **child,
- 				  acpi_handle handle, int type,
- 				  unsigned long long sta)
+ 				  acpi_handle handle, int type)
  {
++<<<<<<< HEAD
++=======
+ 	struct acpi_device_info *info = NULL;
+ 	unsigned long long sta = ACPI_STA_DEFAULT;
+ 	struct acpi_device *device;
++>>>>>>> f926e9433815 (ACPI: scan: Drop sta argument from acpi_add_single_object())
  	int result;
 +	struct acpi_device *device;
 +	struct acpi_buffer buffer = { ACPI_ALLOCATE_BUFFER, NULL };
 +	struct acpi_device_info *info = NULL;
  
- 	if (handle != ACPI_ROOT_OBJECT && type == ACPI_BUS_TYPE_DEVICE)
+ 	if (type == ACPI_BUS_TYPE_DEVICE && handle != ACPI_ROOT_OBJECT)
  		acpi_get_object_info(handle, &info);
+ 	else if (type == ACPI_BUS_TYPE_PROCESSOR &&
+ 		 ACPI_FAILURE(acpi_bus_get_status_handle(handle, &sta)))
+ 		return -ENODEV;
  
  	device = kzalloc(sizeof(struct acpi_device), GFP_KERNEL);
  	if (!device) {
* Unmerged path drivers/acpi/scan.c
