ACPI: processor: perflib: Eliminate redundant status check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 2c25fabdd5f69fb3d33b052dbb21c4d2d9ae4308
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/2c25fabd.failed

One of the "status != AE_NOT_FOUND" checks in
acpi_processor_get_platform_limit() is redundant,
so rearrange the code to eliminate it.

No functional impact.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 2c25fabdd5f69fb3d33b052dbb21c4d2d9ae4308)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/processor_perflib.c
diff --cc drivers/acpi/processor_perflib.c
index f1f9cfa3f7c5,686b23fb968c..000000000000
--- a/drivers/acpi/processor_perflib.c
+++ b/drivers/acpi/processor_perflib.c
@@@ -78,13 -63,15 +78,21 @@@ static int acpi_processor_get_platform_
  	 * (e.g. 0 = states 0..n; 1 = states 1..n; etc.
  	 */
  	status = acpi_evaluate_integer(pr->handle, "_PPC", NULL, &ppc);
- 
- 	if (status != AE_NOT_FOUND)
+ 	if (status != AE_NOT_FOUND) {
  		acpi_processor_ppc_in_use = true;
  
++<<<<<<< HEAD
 +	if (ACPI_FAILURE(status) && status != AE_NOT_FOUND) {
 +		ACPI_EXCEPTION((AE_INFO, status, "Evaluating _PPC"));
 +		return -ENODEV;
++=======
+ 		if (ACPI_FAILURE(status)) {
+ 			acpi_handle_warn(pr->handle,
+ 					 "_PPC evaluation failed: %s\n",
+ 					 acpi_format_exception(status));
+ 			return -ENODEV;
+ 		}
++>>>>>>> 2c25fabdd5f6 (ACPI: processor: perflib: Eliminate redundant status check)
  	}
  
  	pr_debug("CPU %d: _PPC is %d - frequency %s limited\n", pr->id,
* Unmerged path drivers/acpi/processor_perflib.c
