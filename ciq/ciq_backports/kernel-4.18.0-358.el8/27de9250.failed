KVM: x86/mmu: Let guest use GBPAGES if supported in hardware and TDP is on

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 27de925044e18eb056d6157305c841b1408621b5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/27de9250.failed

Let the guest use 1g hugepages if TDP is enabled and the host supports
GBPAGES, KVM can't actively prevent the guest from using 1g pages in this
case since they can't be disabled in the hardware page walker.  While
injecting a page fault if a bogus 1g page is encountered during a
software page walk is perfectly reasonable since KVM is simply honoring
userspace's vCPU model, doing so arguably doesn't provide any meaningful
value, and at worst will be horribly confusing as the guest will see
inconsistent behavior and seemingly spurious page faults.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20210622175739.3610207-55-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 27de925044e18eb056d6157305c841b1408621b5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu/mmu.c
diff --cc arch/x86/kvm/mmu/mmu.c
index 307c15321d48,00732757cc60..000000000000
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@@ -4208,8 -4195,9 +4223,14 @@@ static void reset_rsvds_bits_mask(struc
  	__reset_rsvds_bits_mask(&context->guest_rsvd_check,
  				vcpu->arch.reserved_gpa_bits,
  				context->root_level, is_efer_nx(context),
++<<<<<<< HEAD
 +				guest_cpuid_has(vcpu, X86_FEATURE_GBPAGES),
 +				is_pse(vcpu), guest_cpuid_is_amd(vcpu));
++=======
+ 				guest_can_use_gbpages(vcpu),
+ 				is_cr4_pse(context),
+ 				guest_cpuid_is_amd_or_hygon(vcpu));
++>>>>>>> 27de925044e1 (KVM: x86/mmu: Let guest use GBPAGES if supported in hardware and TDP is on)
  }
  
  static void
* Unmerged path arch/x86/kvm/mmu/mmu.c
