nvme: reduce checks for zero command effects

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Kanchan Joshi <joshi.k@samsung.com>
commit 18479ddb7fd5fd0994bd10a95618bf866713a11b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/18479ddb.failed

For passthrough I/O commands, effects are usually to be zero.
nvme_passthrough_end() does three checks in futility for this case.
Bail out of function-call/checks.

	Signed-off-by: Kanchan Joshi <joshi.k@samsung.com>
	Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 18479ddb7fd5fd0994bd10a95618bf866713a11b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 1f59d5d8c422,3bbaf48833a8..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -1181,10 -1136,11 +1181,16 @@@ void nvme_execute_passthru_rq(struct re
  	u32 effects;
  
  	effects = nvme_passthru_start(ctrl, ns, cmd->common.opcode);
++<<<<<<< HEAD
 +	blk_execute_rq(rq->q, disk, rq, 0);
 +	nvme_passthru_end(ctrl, effects);
++=======
+ 	blk_execute_rq(disk, rq, 0);
+ 	if (effects) /* nothing to be done for zero cmd effects */
+ 		nvme_passthru_end(ctrl, effects);
++>>>>>>> 18479ddb7fd5 (nvme: reduce checks for zero command effects)
  }
 -EXPORT_SYMBOL_NS_GPL(nvme_execute_passthru_rq, NVME_TARGET_PASSTHRU);
 +EXPORT_SYMBOL_GPL(nvme_execute_passthru_rq);
  
  static int nvme_submit_user_cmd(struct request_queue *q,
  		struct nvme_command *cmd, void __user *ubuffer,
* Unmerged path drivers/nvme/host/core.c
