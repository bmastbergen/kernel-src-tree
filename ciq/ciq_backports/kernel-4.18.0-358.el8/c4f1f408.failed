Bluetooth: Interleave with allowlist scan

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Howard Chung <howardchung@google.com>
commit c4f1f408168cd6a83d973e98e1cd1888e4d3d907
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/c4f1f408.failed

This patch implements the interleaving between allowlist scan and
no-filter scan. It'll be used to save power when at least one monitor is
registered and at least one pending connection or one device to be
scanned for.

The durations of the allowlist scan and the no-filter scan are
controlled by MGMT command: Set Default System Configuration. The
default values are set randomly for now.

	Signed-off-by: Howard Chung <howardchung@google.com>
	Reviewed-by: Alain Michaud <alainm@chromium.org>
	Reviewed-by: Manish Mandlik <mmandlik@chromium.org>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
	Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
(cherry picked from commit c4f1f408168cd6a83d973e98e1cd1888e4d3d907)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bluetooth/hci_request.c
#	net/bluetooth/mgmt_config.c
diff --cc net/bluetooth/hci_request.c
index 2cd02731b10b,d6bf1517ddae..000000000000
--- a/net/bluetooth/hci_request.c
+++ b/net/bluetooth/hci_request.c
@@@ -846,6 -894,19 +892,22 @@@ static u8 update_white_list(struct hci_
  			return 0x00;
  	}
  
++<<<<<<< HEAD
++=======
+ 	/* Use the allowlist unless the following conditions are all true:
+ 	 * - We are not currently suspending
+ 	 * - There are 1 or more ADV monitors registered
+ 	 * - Interleaved scanning is not currently using the allowlist
+ 	 *
+ 	 * Once the controller offloading of advertisement monitor is in place,
+ 	 * the above condition should include the support of MSFT extension
+ 	 * support.
+ 	 */
+ 	if (!idr_is_empty(&hdev->adv_monitors_idr) && !hdev->suspended &&
+ 	    hdev->interleave_scan_state != INTERLEAVE_SCAN_ALLOWLIST)
+ 		return 0x00;
+ 
++>>>>>>> c4f1f408168c (Bluetooth: Interleave with allowlist scan)
  	/* Select filter policy to use white list */
  	return 0x01;
  }
* Unmerged path net/bluetooth/mgmt_config.c
diff --git a/include/net/bluetooth/hci_core.h b/include/net/bluetooth/hci_core.h
index 87a79e4f1ac5..d1fee0fcd44b 100644
--- a/include/net/bluetooth/hci_core.h
+++ b/include/net/bluetooth/hci_core.h
@@ -345,6 +345,8 @@ struct hci_dev {
 	__u8		ssp_debug_mode;
 	__u8		hw_error_code;
 	__u32		clock;
+	__u16		advmon_allowlist_duration;
+	__u16		advmon_no_filter_duration;
 
 	__u16		devid_source;
 	__u16		devid_vendor;
@@ -519,6 +521,14 @@ struct hci_dev {
 	struct delayed_work	rpa_expired;
 	bdaddr_t		rpa;
 
+	enum {
+		INTERLEAVE_SCAN_NONE,
+		INTERLEAVE_SCAN_NO_FILTER,
+		INTERLEAVE_SCAN_ALLOWLIST
+	} interleave_scan_state;
+
+	struct delayed_work	interleave_scan;
+
 #if IS_ENABLED(CONFIG_BT_LEDS)
 	struct led_trigger	*power_led;
 #endif
diff --git a/net/bluetooth/hci_core.c b/net/bluetooth/hci_core.c
index 0693dacbf6e3..56ad0e0cba5e 100644
--- a/net/bluetooth/hci_core.c
+++ b/net/bluetooth/hci_core.c
@@ -3468,6 +3468,9 @@ struct hci_dev *hci_alloc_dev(void)
 	hdev->cur_adv_instance = 0x00;
 	hdev->adv_instance_timeout = 0;
 
+	hdev->advmon_allowlist_duration = 300;
+	hdev->advmon_no_filter_duration = 500;
+
 	hdev->sniff_max_interval = 800;
 	hdev->sniff_min_interval = 80;
 
* Unmerged path net/bluetooth/hci_request.c
* Unmerged path net/bluetooth/mgmt_config.c
