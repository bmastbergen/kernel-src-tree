ACPI: AC: fix some coding style issues

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Xiaofei Tan <tanxiaofei@huawei.com>
commit 9104457ea524391112f4a4fd685ea532550a29b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/9104457e.failed

Fix some coding style issues reported by checkpatch.pl, including the
following types:

ERROR: "foo * bar" should be "foo *bar"
ERROR: code indent should use tabs where possible
WARNING: Block comments use a trailing */ on a separate line
WARNING: braces {} are not necessary for single statement blocks
WARNING: void function return statements are not generally useful
WARNING: CVS style keyword markers, these will _not_ be updated

	Signed-off-by: Xiaofei Tan <tanxiaofei@huawei.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 9104457ea524391112f4a4fd685ea532550a29b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/ac.c
diff --cc drivers/acpi/ac.c
index 8bc3a78e2f2c,b0cb662233f1..000000000000
--- a/drivers/acpi/ac.c
+++ b/drivers/acpi/ac.c
@@@ -1,5 -1,6 +1,5 @@@
 -// SPDX-License-Identifier: GPL-2.0-or-later
  /*
-  *  acpi_ac.c - ACPI AC Adapter Driver ($Revision: 27 $)
+  *  acpi_ac.c - ACPI AC Adapter Driver (Revision: 27)
   *
   *  Copyright (C) 2001, 2002 Andy Grover <andrew.grover@intel.com>
   *  Copyright (C) 2001, 2002 Paul Diefenbaugh <paul.s.diefenbaugh@intel.com>
@@@ -163,81 -133,7 +158,85 @@@ static enum power_supply_property ac_pr
  	POWER_SUPPLY_PROP_ONLINE,
  };
  
++<<<<<<< HEAD
 +#ifdef CONFIG_ACPI_PROCFS_POWER
 +/* --------------------------------------------------------------------------
 +                              FS Interface (/proc)
 +   -------------------------------------------------------------------------- */
 +
 +static struct proc_dir_entry *acpi_ac_dir;
 +
 +static int acpi_ac_seq_show(struct seq_file *seq, void *offset)
 +{
 +	struct acpi_ac *ac = seq->private;
 +
 +
 +	if (!ac)
 +		return 0;
 +
 +	if (acpi_ac_get_state(ac)) {
 +		seq_puts(seq, "ERROR: Unable to read AC Adapter state\n");
 +		return 0;
 +	}
 +
 +	seq_puts(seq, "state:                   ");
 +	switch (ac->state) {
 +	case ACPI_AC_STATUS_OFFLINE:
 +		seq_puts(seq, "off-line\n");
 +		break;
 +	case ACPI_AC_STATUS_ONLINE:
 +		seq_puts(seq, "on-line\n");
 +		break;
 +	default:
 +		seq_puts(seq, "unknown\n");
 +		break;
 +	}
 +
 +	return 0;
 +}
 +
 +static int acpi_ac_add_fs(struct acpi_ac *ac)
 +{
 +	struct proc_dir_entry *entry = NULL;
 +
 +	printk(KERN_WARNING PREFIX "Deprecated procfs I/F for AC is loaded,"
 +			" please retry with CONFIG_ACPI_PROCFS_POWER cleared\n");
 +	if (!acpi_device_dir(ac->device)) {
 +		acpi_device_dir(ac->device) =
 +			proc_mkdir(acpi_device_bid(ac->device), acpi_ac_dir);
 +		if (!acpi_device_dir(ac->device))
 +			return -ENODEV;
 +	}
 +
 +	/* 'state' [R] */
 +	entry = proc_create_single_data(ACPI_AC_FILE_STATE, S_IRUGO,
 +			acpi_device_dir(ac->device), acpi_ac_seq_show, ac);
 +	if (!entry)
 +		return -ENODEV;
 +	return 0;
 +}
 +
 +static int acpi_ac_remove_fs(struct acpi_ac *ac)
 +{
 +
 +	if (acpi_device_dir(ac->device)) {
 +		remove_proc_entry(ACPI_AC_FILE_STATE,
 +				  acpi_device_dir(ac->device));
 +		remove_proc_entry(acpi_device_bid(ac->device), acpi_ac_dir);
 +		acpi_device_dir(ac->device) = NULL;
 +	}
 +
 +	return 0;
 +}
 +#endif
 +
 +/* --------------------------------------------------------------------------
 +                                   Driver Model
 +   -------------------------------------------------------------------------- */
 +
++=======
+ /* Driver Model */
++>>>>>>> 9104457ea524 (ACPI: AC: fix some coding style issues)
  static void acpi_ac_notify(struct acpi_device *device, u32 event)
  {
  	struct acpi_ac *ac = acpi_driver_data(device);
@@@ -384,12 -272,8 +381,15 @@@ static int acpi_ac_add(struct acpi_devi
  	ac->battery_nb.notifier_call = acpi_ac_battery_notify;
  	register_acpi_notifier(&ac->battery_nb);
  end:
++<<<<<<< HEAD
 +	if (result) {
 +#ifdef CONFIG_ACPI_PROCFS_POWER
 +		acpi_ac_remove_fs(ac);
 +#endif
++=======
+ 	if (result)
++>>>>>>> 9104457ea524 (ACPI: AC: fix some coding style issues)
  		kfree(ac);
- 	}
  
  	return result;
  }
@@@ -460,20 -340,9 +460,23 @@@ static int __init acpi_ac_init(void
  			}
  	}
  
 +#ifdef CONFIG_ACPI_PROCFS_POWER
 +	acpi_ac_dir = acpi_lock_ac_dir();
 +	if (!acpi_ac_dir)
 +		return -ENODEV;
 +#endif
 +
 +
  	result = acpi_bus_register_driver(&acpi_ac_driver);
++<<<<<<< HEAD
 +	if (result < 0) {
 +#ifdef CONFIG_ACPI_PROCFS_POWER
 +		acpi_unlock_ac_dir(acpi_ac_dir);
 +#endif
++=======
+ 	if (result < 0)
++>>>>>>> 9104457ea524 (ACPI: AC: fix some coding style issues)
  		return -ENODEV;
- 	}
  
  	return 0;
  }
* Unmerged path drivers/acpi/ac.c
