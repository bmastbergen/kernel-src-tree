exec: Move cleanup of posix timers on exec out of de_thread

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 153ffb6ba49fd80dc607a9f230415af02b728d70
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/153ffb6b.failed

These functions have very little to do with de_thread move them out
of de_thread an into flush_old_exec proper so it can be more clearly
seen what flush_old_exec is doing.

	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
	Reviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
	Reviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>
	Signed-off-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
	Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
(cherry picked from commit 153ffb6ba49fd80dc607a9f230415af02b728d70)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/exec.c
diff --cc fs/exec.c
index c124b3519559,215d86f77b63..000000000000
--- a/fs/exec.c
+++ b/fs/exec.c
@@@ -1195,12 -1189,24 +1195,13 @@@ no_thread_group
  	/* we have changed execution domain */
  	tsk->exit_signal = SIGCHLD;
  
 -	BUG_ON(!thread_group_leader(tsk));
 -	return 0;
 -
 -killed:
 -	/* protects against exit_notify() and __exit_signal() */
 -	read_lock(&tasklist_lock);
 -	sig->group_exit_task = NULL;
 -	sig->notify_count = 0;
 -	read_unlock(&tasklist_lock);
 -	return -EAGAIN;
 -}
 -
 -
 -static int unshare_sighand(struct task_struct *me)
 -{
 -	struct sighand_struct *oldsighand = me->sighand;
++<<<<<<< HEAD
 +#ifdef CONFIG_POSIX_TIMERS
 +	exit_itimers(sig);
 +	flush_itimer_signals();
 +#endif
  
 -	if (refcount_read(&oldsighand->count) != 1) {
 +	if (atomic_read(&oldsighand->count) != 1) {
  		struct sighand_struct *newsighand;
  		/*
  		 * This ->sighand is shared with the CLONE_SIGHAND
@@@ -1222,17 -1228,7 +1223,19 @@@
  
  		__cleanup_sighand(oldsighand);
  	}
 +
++=======
++>>>>>>> 153ffb6ba49f (exec: Move cleanup of posix timers on exec out of de_thread)
 +	BUG_ON(!thread_group_leader(tsk));
  	return 0;
 +
 +killed:
 +	/* protects against exit_notify() and __exit_signal() */
 +	read_lock(&tasklist_lock);
 +	sig->group_exit_task = NULL;
 +	sig->notify_count = 0;
 +	read_unlock(&tasklist_lock);
 +	return -EAGAIN;
  }
  
  char *__get_task_comm(char *buf, size_t buf_size, struct task_struct *tsk)
@@@ -1277,6 -1272,18 +1280,11 @@@ int flush_old_exec(struct linux_binprm 
  	if (retval)
  		goto out;
  
+ #ifdef CONFIG_POSIX_TIMERS
+ 	exit_itimers(me->signal);
+ 	flush_itimer_signals();
+ #endif
+ 
 -	/*
 -	 * Make the signal table private.
 -	 */
 -	retval = unshare_sighand(me);
 -	if (retval)
 -		goto out;
 -
  	/*
  	 * Must be called _before_ exec_mmap() as bprm->mm is
  	 * not visibile until then. This also enables the update
* Unmerged path fs/exec.c
