arm64: compat: Poison the compat sigpage

jira LE-1907
cve CVE-2021-21781
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Will Deacon <will@kernel.org>
commit 6e554abd07002405fd9175284a10729e2f54be43
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/6e554abd.failed

Commit 9c698bff66ab ("ARM: ensure the signal page contains defined contents")
poisoned the unused portions of the signal page for 32-bit Arm.

Implement the same poisoning for the compat signal page on arm64 rather
than using __GFP_ZERO.

	Signed-off-by: Will Deacon <will@kernel.org>
	Reviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
Link: https://lore.kernel.org/r/20210318170738.7756-6-will@kernel.org
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit 6e554abd07002405fd9175284a10729e2f54be43)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/vdso.c
diff --cc arch/arm64/kernel/vdso.c
index 379f348e7d58,159b72a646ab..000000000000
--- a/arch/arm64/kernel/vdso.c
+++ b/arch/arm64/kernel/vdso.c
@@@ -354,15 -323,16 +355,21 @@@ static int aarch32_alloc_sigpage(void
  {
  	extern char __aarch32_sigret_code_start[], __aarch32_sigret_code_end[];
  	int sigret_sz = __aarch32_sigret_code_end - __aarch32_sigret_code_start;
- 	unsigned long sigpage;
+ 	__le32 poison = cpu_to_le32(COMPAT_SIGPAGE_POISON_WORD);
+ 	void *sigpage;
  
++<<<<<<< HEAD
 +	sigpage = get_zeroed_page(GFP_ATOMIC);
++=======
+ 	sigpage = (void *)__get_free_page(GFP_KERNEL);
++>>>>>>> 6e554abd0700 (arm64: compat: Poison the compat sigpage)
  	if (!sigpage)
  		return -ENOMEM;
  
- 	memcpy((void *)sigpage, __aarch32_sigret_code_start, sigret_sz);
+ 	memset32(sigpage, (__force u32)poison, PAGE_SIZE / sizeof(poison));
+ 	memcpy(sigpage, __aarch32_sigret_code_start, sigret_sz);
  	aarch32_sig_page = virt_to_page(sigpage);
 +	flush_dcache_page(aarch32_sig_page);
  	return 0;
  }
  
* Unmerged path arch/arm64/kernel/vdso.c
