ima: Fail rule parsing when buffer hook functions have an invalid action

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Tyler Hicks <tyhicks@linux.microsoft.com>
commit 712183437ebebc89cd086ef96cf9a521fd97fd09
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/71218343.failed

Buffer based hook functions, such as KEXEC_CMDLINE and KEY_CHECK, can
only measure. The process_buffer_measurement() function quietly ignores
all actions except measure so make this behavior clear at the time of
policy load.

The parsing of the keyrings conditional had a check to ensure that it
was only specified with measure actions but the check should be on the
hook function and not the keyrings conditional since
"appraise func=KEY_CHECK" is not a valid rule.

Fixes: b0935123a183 ("IMA: Define a new hook to measure the kexec boot command line arguments")
Fixes: 5808611cccb2 ("IMA: Add KEY_CHECK func to measure keys")
	Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
	Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
(cherry picked from commit 712183437ebebc89cd086ef96cf9a521fd97fd09)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/integrity/ima/ima_policy.c
diff --cc security/integrity/ima/ima_policy.c
index 77c1e3c92616,40c28f1a6a5a..000000000000
--- a/security/integrity/ima/ima_policy.c
+++ b/security/integrity/ima/ima_policy.c
@@@ -979,6 -1181,43 +1016,46 @@@ static int ima_parse_rule(char *rule, s
  			result = 0;
  			entry->flags |= IMA_FSNAME;
  			break;
++<<<<<<< HEAD
++=======
+ 		case Opt_keyrings:
+ 			ima_log_string(ab, "keyrings", args[0].from);
+ 
+ 			keyrings_len = strlen(args[0].from) + 1;
+ 
+ 			if ((entry->keyrings) ||
+ 			    (entry->func != KEY_CHECK) ||
+ 			    (keyrings_len < 2)) {
+ 				result = -EINVAL;
+ 				break;
+ 			}
+ 
+ 			if (keyrings_len > ima_keyrings_len) {
+ 				char *tmpbuf;
+ 
+ 				tmpbuf = krealloc(ima_keyrings, keyrings_len,
+ 						  GFP_KERNEL);
+ 				if (!tmpbuf) {
+ 					result = -ENOMEM;
+ 					break;
+ 				}
+ 
+ 				ima_keyrings = tmpbuf;
+ 				ima_keyrings_len = keyrings_len;
+ 			}
+ 
+ 			entry->keyrings = kstrdup(args[0].from, GFP_KERNEL);
+ 			if (!entry->keyrings) {
+ 				kfree(ima_keyrings);
+ 				ima_keyrings = NULL;
+ 				ima_keyrings_len = 0;
+ 				result = -ENOMEM;
+ 				break;
+ 			}
+ 			result = 0;
+ 			entry->flags |= IMA_KEYRINGS;
+ 			break;
++>>>>>>> 712183437ebe (ima: Fail rule parsing when buffer hook functions have an invalid action)
  		case Opt_fsuuid:
  			ima_log_string(ab, "fsuuid", args[0].from);
  
* Unmerged path security/integrity/ima/ima_policy.c
