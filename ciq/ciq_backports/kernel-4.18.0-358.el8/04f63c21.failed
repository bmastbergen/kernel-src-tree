driver core: Redefine the meaning of fwnode_operations.add_links()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Saravana Kannan <saravanak@google.com>
commit 04f63c213b671d89db35f4239f57fa1edeb736a8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/04f63c21.failed

Change the meaning of fwnode_operations.add_links() to just create
fwnode links by parsing the properties of a given fwnode.

This patch doesn't actually make any code changes. To keeps things more
digestable, the actual functional changes come in later patches in this
series.

	Signed-off-by: Saravana Kannan <saravanak@google.com>
Link: https://lore.kernel.org/r/20201121020232.908850-12-saravanak@google.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 04f63c213b671d89db35f4239f57fa1edeb736a8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/fwnode.h
diff --cc include/linux/fwnode.h
index e1e5a96e9010,942a6bb18201..000000000000
--- a/include/linux/fwnode.h
+++ b/include/linux/fwnode.h
@@@ -147,10 -119,8 +111,15 @@@ struct fwnode_operations 
  	(*graph_get_port_parent)(struct fwnode_handle *fwnode);
  	int (*graph_parse_endpoint)(const struct fwnode_handle *fwnode,
  				    struct fwnode_endpoint *endpoint);
++<<<<<<< HEAD
 +	RH_KABI_EXTEND(int (*add_links)(const struct fwnode_handle *fwnode,
 +			 struct device *dev))
 +	RH_KABI_EXTEND(const char *(*get_name)(const struct fwnode_handle *fwnode))
 +	RH_KABI_EXTEND(const char *(*get_name_prefix)(const struct fwnode_handle *fwnode))
++=======
+ 	int (*add_links)(struct fwnode_handle *fwnode,
+ 			 struct device *dev);
++>>>>>>> 04f63c213b67 (driver core: Redefine the meaning of fwnode_operations.add_links())
  };
  
  #define fwnode_has_op(fwnode, op)				\
diff --git a/drivers/firmware/efi/efi-init.c b/drivers/firmware/efi/efi-init.c
index b280533df7a2..b8de9198583a 100644
--- a/drivers/firmware/efi/efi-init.c
+++ b/drivers/firmware/efi/efi-init.c
@@ -323,7 +323,7 @@ static struct device_node *find_pci_overlap_node(void)
  * resource reservation conflict on the memory window that the efifb
  * framebuffer steals from the PCIe host bridge.
  */
-static int efifb_add_links(const struct fwnode_handle *fwnode,
+static int efifb_add_links(struct fwnode_handle *fwnode,
 			   struct device *dev)
 {
 	struct device_node *sup_np;
* Unmerged path include/linux/fwnode.h
