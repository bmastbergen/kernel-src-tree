sched/pelt: Check that *_avg are null when *_sum are

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Vincent Guittot <vincent.guittot@linaro.org>
commit 9e077b52d86ac364a295b05c916c7478a16865b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/9e077b52.failed

Check that we never break the rule that pelt's avg values are null if
pelt's sum are.

	Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Reviewed-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
	Acked-by: Odin Ugedal <odin@uged.al>
Link: https://lore.kernel.org/r/20210601155328.19487-1-vincent.guittot@linaro.org
(cherry picked from commit 9e077b52d86ac364a295b05c916c7478a16865b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/fair.c
diff --cc kernel/sched/fair.c
index 199e9addfd3d,198514dcbe46..000000000000
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@@ -7886,7 -8026,16 +7886,20 @@@ static inline bool cfs_rq_is_decayed(st
  	if (cfs_rq->avg.runnable_sum)
  		return false;
  
++<<<<<<< HEAD
 +        return true;
++=======
+ 	/*
+ 	 * _avg must be null when _sum are null because _avg = _sum / divider
+ 	 * Make sure that rounding and/or propagation of PELT values never
+ 	 * break this.
+ 	 */
+ 	SCHED_WARN_ON(cfs_rq->avg.load_avg ||
+ 		      cfs_rq->avg.util_avg ||
+ 		      cfs_rq->avg.runnable_avg);
+ 
+ 	return true;
++>>>>>>> 9e077b52d86a (sched/pelt: Check that *_avg are null when *_sum are)
  }
  
  static bool __update_blocked_fair(struct rq *rq, bool *done)
* Unmerged path kernel/sched/fair.c
