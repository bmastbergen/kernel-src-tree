KVM: selftests: Create a separate dirty bitmap per slot

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author David Matlack <dmatlack@google.com>
commit 7c236b816ef16c2969a88ced658dab667e9dd4ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/7c236b81.failed

The calculation to get the per-slot dirty bitmap was incorrect leading
to a buffer overrun. Fix it by splitting out the dirty bitmap into a
separate bitmap per slot.

Fixes: 609e6202ea5f ("KVM: selftests: Support multiple slots in dirty_log_perf_test")
	Signed-off-by: David Matlack <dmatlack@google.com>
	Reviewed-by: Andrew Jones <drjones@redhat.com>
Message-Id: <20210917173657.44011-4-dmatlack@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 7c236b816ef16c2969a88ced658dab667e9dd4ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/dirty_log_perf_test.c
diff --cc tools/testing/selftests/kvm/dirty_log_perf_test.c
index f0dd381e0a16,7ffab5bd5ce5..000000000000
--- a/tools/testing/selftests/kvm/dirty_log_perf_test.c
+++ b/tools/testing/selftests/kvm/dirty_log_perf_test.c
@@@ -94,8 -93,80 +94,82 @@@ struct test_params 
  	int wr_fract;
  	bool partition_vcpu_memory_access;
  	enum vm_mem_backing_src_type backing_src;
 -	int slots;
  };
  
++<<<<<<< HEAD
++=======
+ static void toggle_dirty_logging(struct kvm_vm *vm, int slots, bool enable)
+ {
+ 	int i;
+ 
+ 	for (i = 0; i < slots; i++) {
+ 		int slot = PERF_TEST_MEM_SLOT_INDEX + i;
+ 		int flags = enable ? KVM_MEM_LOG_DIRTY_PAGES : 0;
+ 
+ 		vm_mem_region_set_flags(vm, slot, flags);
+ 	}
+ }
+ 
+ static inline void enable_dirty_logging(struct kvm_vm *vm, int slots)
+ {
+ 	toggle_dirty_logging(vm, slots, true);
+ }
+ 
+ static inline void disable_dirty_logging(struct kvm_vm *vm, int slots)
+ {
+ 	toggle_dirty_logging(vm, slots, false);
+ }
+ 
+ static void get_dirty_log(struct kvm_vm *vm, unsigned long *bitmaps[], int slots)
+ {
+ 	int i;
+ 
+ 	for (i = 0; i < slots; i++) {
+ 		int slot = PERF_TEST_MEM_SLOT_INDEX + i;
+ 
+ 		kvm_vm_get_dirty_log(vm, slot, bitmaps[i]);
+ 	}
+ }
+ 
+ static void clear_dirty_log(struct kvm_vm *vm, unsigned long *bitmaps[],
+ 			    int slots, uint64_t pages_per_slot)
+ {
+ 	int i;
+ 
+ 	for (i = 0; i < slots; i++) {
+ 		int slot = PERF_TEST_MEM_SLOT_INDEX + i;
+ 
+ 		kvm_vm_clear_dirty_log(vm, slot, bitmaps[i], 0, pages_per_slot);
+ 	}
+ }
+ 
+ static unsigned long **alloc_bitmaps(int slots, uint64_t pages_per_slot)
+ {
+ 	unsigned long **bitmaps;
+ 	int i;
+ 
+ 	bitmaps = malloc(slots * sizeof(bitmaps[0]));
+ 	TEST_ASSERT(bitmaps, "Failed to allocate bitmaps array.");
+ 
+ 	for (i = 0; i < slots; i++) {
+ 		bitmaps[i] = bitmap_zalloc(pages_per_slot);
+ 		TEST_ASSERT(bitmaps[i], "Failed to allocate slot bitmap.");
+ 	}
+ 
+ 	return bitmaps;
+ }
+ 
+ static void free_bitmaps(unsigned long *bitmaps[], int slots)
+ {
+ 	int i;
+ 
+ 	for (i = 0; i < slots; i++)
+ 		free(bitmaps[i]);
+ 
+ 	free(bitmaps);
+ }
+ 
++>>>>>>> 7c236b816ef1 (KVM: selftests: Create a separate dirty bitmap per slot)
  static void run_test(enum vm_guest_mode mode, void *arg)
  {
  	struct test_params *p = arg;
@@@ -190,8 -263,7 +267,12 @@@
  			iteration, ts_diff.tv_sec, ts_diff.tv_nsec);
  
  		clock_gettime(CLOCK_MONOTONIC, &start);
++<<<<<<< HEAD
 +		kvm_vm_get_dirty_log(vm, PERF_TEST_MEM_SLOT_INDEX, bmap);
 +
++=======
+ 		get_dirty_log(vm, bitmaps, p->slots);
++>>>>>>> 7c236b816ef1 (KVM: selftests: Create a separate dirty bitmap per slot)
  		ts_diff = timespec_elapsed(start);
  		get_dirty_log_total = timespec_add(get_dirty_log_total,
  						   ts_diff);
@@@ -200,9 -272,7 +281,13 @@@
  
  		if (dirty_log_manual_caps) {
  			clock_gettime(CLOCK_MONOTONIC, &start);
++<<<<<<< HEAD
 +			kvm_vm_clear_dirty_log(vm, PERF_TEST_MEM_SLOT_INDEX, bmap, 0,
 +					       host_num_pages);
 +
++=======
+ 			clear_dirty_log(vm, bitmaps, p->slots, pages_per_slot);
++>>>>>>> 7c236b816ef1 (KVM: selftests: Create a separate dirty bitmap per slot)
  			ts_diff = timespec_elapsed(start);
  			clear_dirty_log_total = timespec_add(clear_dirty_log_total,
  							     ts_diff);
* Unmerged path tools/testing/selftests/kvm/dirty_log_perf_test.c
