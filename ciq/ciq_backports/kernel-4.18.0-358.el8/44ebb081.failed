net: bridge: mcast: add wrappers for router node retrieval

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Linus Lüssing <linus.luessing@c0d3.blue>
commit 44ebb081dc6934e43d3c7444f183d6426adeca21
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/44ebb081.failed

In preparation for the upcoming split of multicast router state into
their IPv4 and IPv6 variants and to avoid IPv6 #ifdef clutter later add
two wrapper functions for router node retrieval in the payload
forwarding code.

	Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 44ebb081dc6934e43d3c7444f183d6426adeca21)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_forward.c
diff --cc net/bridge/br_forward.c
index f7e843fb9dc4,07856362538f..000000000000
--- a/net/bridge/br_forward.c
+++ b/net/bridge/br_forward.c
@@@ -280,7 -276,8 +280,12 @@@ void br_multicast_flood(struct net_brid
  	bool allow_mode_include = true;
  	struct hlist_node *rp;
  
++<<<<<<< HEAD
 +	rp = rcu_dereference(hlist_first_rcu(&br->router_list));
++=======
+ 	rp = br_multicast_get_first_rport_node(br, skb);
+ 
++>>>>>>> 44ebb081dc69 (net: bridge: mcast: add wrappers for router node retrieval)
  	if (mdst) {
  		p = rcu_dereference(mdst->ports);
  		if (br_multicast_should_handle_mode(br, mdst->addr.proto) &&
@@@ -293,8 -290,8 +298,13 @@@
  	while (p || rp) {
  		struct net_bridge_port *port, *lport, *rport;
  
++<<<<<<< HEAD
 +		lport = p ? p->port : NULL;
 +		rport = hlist_entry_safe(rp, struct net_bridge_port, rlist);
++=======
+ 		lport = p ? p->key.port : NULL;
+ 		rport = br_multicast_rport_from_node_skb(rp, skb);
++>>>>>>> 44ebb081dc69 (net: bridge: mcast: add wrappers for router node retrieval)
  
  		if ((unsigned long)lport > (unsigned long)rport) {
  			port = lport;
* Unmerged path net/bridge/br_forward.c
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index 336f9152b211..5463d8af7f2d 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -758,6 +758,16 @@ void br_multicast_host_leave(struct net_bridge_mdb_entry *mp, bool notify);
 #define mlock_dereference(X, br) \
 	rcu_dereference_protected(X, lockdep_is_held(&br->multicast_lock))
 
+static inline struct hlist_node *
+br_multicast_get_first_rport_node(struct net_bridge *b, struct sk_buff *skb) {
+	return rcu_dereference(hlist_first_rcu(&b->ip4_mc_router_list));
+}
+
+static inline struct net_bridge_port *
+br_multicast_rport_from_node_skb(struct hlist_node *rp, struct sk_buff *skb) {
+	return hlist_entry_safe(rp, struct net_bridge_port, ip4_rlist);
+}
+
 static inline bool br_multicast_is_router(struct net_bridge *br)
 {
 	return br->multicast_router == 2 ||
