mptcp: stop relying on tcp_tx_skb_cache

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit f70cad1085d1e01d3ec73c1078405f906237feee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/f70cad10.failed

We want to revert the skb TX cache, but MPTCP is currently
using it unconditionally.

Rework the MPTCP tx code, so that tcp_tx_skb_cache is not
needed anymore: do the whole coalescing check, skb allocation
skb initialization/update inside mptcp_sendmsg_frag(), quite
alike the current TCP code.

	Reviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f70cad1085d1e01d3ec73c1078405f906237feee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/protocol.c
diff --cc net/mptcp/protocol.c
index 1870a812938d,7e5f76092b64..000000000000
--- a/net/mptcp/protocol.c
+++ b/net/mptcp/protocol.c
@@@ -1344,14 -1397,18 +1361,26 @@@ alloc_skb
  		 mpext->dsn64);
  
  	if (zero_window_probe) {
- 		mptcp_subflow_ctx(ssk)->rel_write_seq += ret;
+ 		mptcp_subflow_ctx(ssk)->rel_write_seq += copy;
  		mpext->frozen = 1;
++<<<<<<< HEAD
 +		ret = 0;
++=======
+ 		if (READ_ONCE(msk->csum_enabled))
+ 			mptcp_update_data_checksum(skb, copy);
++>>>>>>> f70cad1085d1 (mptcp: stop relying on tcp_tx_skb_cache)
  		tcp_push_pending_frames(ssk);
 -		return 0;
  	}
  out:
++<<<<<<< HEAD
 +	mptcp_subflow_ctx(ssk)->rel_write_seq += ret;
 +	return ret;
++=======
+ 	if (READ_ONCE(msk->csum_enabled))
+ 		mptcp_update_data_checksum(skb, copy);
+ 	mptcp_subflow_ctx(ssk)->rel_write_seq += copy;
+ 	return copy;
++>>>>>>> f70cad1085d1 (mptcp: stop relying on tcp_tx_skb_cache)
  }
  
  #define MPTCP_SEND_BURST_SIZE		((1 << 16) - \
* Unmerged path net/mptcp/protocol.c
