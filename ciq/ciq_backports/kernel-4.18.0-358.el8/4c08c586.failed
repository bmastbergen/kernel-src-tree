net: switchdev: propagate extack to port attributes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Vladimir Oltean <vladimir.oltean@nxp.com>
commit 4c08c586ff29bda47e3db14da096331d84933f48
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/4c08c586.failed

When a struct switchdev_attr is notified through switchdev, there is no
way to report informational messages, unlike for struct switchdev_obj.

	Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
	Reviewed-by: Ido Schimmel <idosch@nvidia.com>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Reviewed-by: Nikolay Aleksandrov <nikolay@nvidia.com>
	Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4c08c586ff29bda47e3db14da096331d84933f48)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/marvell/prestera/prestera_switchdev.c
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
#	drivers/net/ethernet/mscc/ocelot_net.c
#	drivers/net/ethernet/ti/am65-cpsw-switchdev.c
#	drivers/net/ethernet/ti/cpsw_switchdev.c
#	include/net/switchdev.h
#	net/dsa/slave.c
#	net/switchdev/switchdev.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
index 14ce372c3f85,18e4f1cd5587..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
@@@ -926,7 -888,7 +926,11 @@@ mlxsw_sp_port_attr_br_mrouter_set(struc
  
  static int mlxsw_sp_port_attr_set(struct net_device *dev,
  				  const struct switchdev_attr *attr,
++<<<<<<< HEAD
 +				  struct switchdev_trans *trans)
++=======
+ 				  struct netlink_ext_ack *extack)
++>>>>>>> 4c08c586ff29 (net: switchdev: propagate extack to port attributes)
  {
  	struct mlxsw_sp_port *mlxsw_sp_port = netdev_priv(dev);
  	int err;
diff --cc include/net/switchdev.h
index 2ce151de5c5a,9279d4245bab..000000000000
--- a/include/net/switchdev.h
+++ b/include/net/switchdev.h
@@@ -237,7 -282,7 +237,11 @@@ int switchdev_handle_port_attr_set(stru
  			bool (*check_cb)(const struct net_device *dev),
  			int (*set_cb)(struct net_device *dev,
  				      const struct switchdev_attr *attr,
++<<<<<<< HEAD
 +				      struct switchdev_trans *trans));
++=======
+ 				      struct netlink_ext_ack *extack));
++>>>>>>> 4c08c586ff29 (net: switchdev: propagate extack to port attributes)
  #else
  
  static inline void switchdev_deferred_process(void)
@@@ -330,7 -374,7 +334,11 @@@ switchdev_handle_port_attr_set(struct n
  			bool (*check_cb)(const struct net_device *dev),
  			int (*set_cb)(struct net_device *dev,
  				      const struct switchdev_attr *attr,
++<<<<<<< HEAD
 +				      struct switchdev_trans *trans))
++=======
+ 				      struct netlink_ext_ack *extack))
++>>>>>>> 4c08c586ff29 (net: switchdev: propagate extack to port attributes)
  {
  	return 0;
  }
diff --cc net/dsa/slave.c
index 24cc4de02bd3,be29008477d3..000000000000
--- a/net/dsa/slave.c
+++ b/net/dsa/slave.c
@@@ -276,7 -273,7 +276,11 @@@ static int dsa_slave_ioctl(struct net_d
  
  static int dsa_slave_port_attr_set(struct net_device *dev,
  				   const struct switchdev_attr *attr,
++<<<<<<< HEAD
 +				   struct switchdev_trans *trans)
++=======
+ 				   struct netlink_ext_ack *extack)
++>>>>>>> 4c08c586ff29 (net: switchdev: propagate extack to port attributes)
  {
  	struct dsa_port *dp = dsa_slave_to_port(dev);
  	int ret;
diff --cc net/switchdev/switchdev.c
index 09070c250522,0b84f076591e..000000000000
--- a/net/switchdev/switchdev.c
+++ b/net/switchdev/switchdev.c
@@@ -567,14 -489,17 +567,25 @@@ static int __switchdev_handle_port_attr
  			bool (*check_cb)(const struct net_device *dev),
  			int (*set_cb)(struct net_device *dev,
  				      const struct switchdev_attr *attr,
++<<<<<<< HEAD
 +				      struct switchdev_trans *trans))
++=======
+ 				      struct netlink_ext_ack *extack))
++>>>>>>> 4c08c586ff29 (net: switchdev: propagate extack to port attributes)
  {
+ 	struct netlink_ext_ack *extack;
  	struct net_device *lower_dev;
  	struct list_head *iter;
  	int err = -EOPNOTSUPP;
  
+ 	extack = switchdev_notifier_info_to_extack(&port_attr_info->info);
+ 
  	if (check_cb(dev)) {
++<<<<<<< HEAD
 +		err = set_cb(dev, port_attr_info->attr, port_attr_info->trans);
++=======
+ 		err = set_cb(dev, port_attr_info->attr, extack);
++>>>>>>> 4c08c586ff29 (net: switchdev: propagate extack to port attributes)
  		if (err != -EOPNOTSUPP)
  			port_attr_info->handled = true;
  		return err;
@@@ -605,7 -530,7 +616,11 @@@ int switchdev_handle_port_attr_set(stru
  			bool (*check_cb)(const struct net_device *dev),
  			int (*set_cb)(struct net_device *dev,
  				      const struct switchdev_attr *attr,
++<<<<<<< HEAD
 +				      struct switchdev_trans *trans))
++=======
+ 				      struct netlink_ext_ack *extack))
++>>>>>>> 4c08c586ff29 (net: switchdev: propagate extack to port attributes)
  {
  	int err;
  
* Unmerged path drivers/net/ethernet/marvell/prestera/prestera_switchdev.c
* Unmerged path drivers/net/ethernet/mscc/ocelot_net.c
* Unmerged path drivers/net/ethernet/ti/am65-cpsw-switchdev.c
* Unmerged path drivers/net/ethernet/ti/cpsw_switchdev.c
* Unmerged path drivers/net/ethernet/marvell/prestera/prestera_switchdev.c
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
* Unmerged path drivers/net/ethernet/mscc/ocelot_net.c
* Unmerged path drivers/net/ethernet/ti/am65-cpsw-switchdev.c
* Unmerged path drivers/net/ethernet/ti/cpsw_switchdev.c
* Unmerged path include/net/switchdev.h
* Unmerged path net/dsa/slave.c
* Unmerged path net/switchdev/switchdev.c
