nvme-pci: allocate nvme_command within driver pdu

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Keith Busch <kbusch@kernel.org>
commit af7fae857ea22e9c2aef812e1321d9c5c206edde
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/af7fae85.failed

Except for pci, all the nvme transport drivers allocate a command within
the driver's pdu. Align pci with everyone else by allocating the nvme
command within pci's pdu and replace the .queue_rq() stack variable with
this.

	Signed-off-by: Keith Busch <kbusch@kernel.org>
	Reviewed-by: Jens Axboe <axboe@kernel.dk>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit af7fae857ea22e9c2aef812e1321d9c5c206edde)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 69a84b00b954,1a0912146c74..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -868,9 -942,17 +869,18 @@@ static blk_status_t nvme_queue_rq(struc
  			goto out_free_cmd;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (blk_integrity_rq(req)) {
+ 		ret = nvme_map_metadata(dev, req, cmnd);
+ 		if (ret)
+ 			goto out_unmap_data;
+ 	}
+ 
++>>>>>>> af7fae857ea2 (nvme-pci: allocate nvme_command within driver pdu)
  	blk_mq_start_request(req);
- 	nvme_submit_cmd(nvmeq, &cmnd, bd->last);
+ 	nvme_submit_cmd(nvmeq, cmnd, bd->last);
  	return BLK_STS_OK;
 -out_unmap_data:
 -	nvme_unmap_data(dev, req);
  out_free_cmd:
  	nvme_cleanup_cmd(req);
  	return ret;
* Unmerged path drivers/nvme/host/pci.c
