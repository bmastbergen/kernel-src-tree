i2c: designware: Switch header to use BIT() and GENMASK()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit a5df4c14b9a9c576cd8229deb87da21aeb8aa82c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/a5df4c14.failed

Currently header file uses partially BIT() and GENMASK() macros.
Switch it to use those macros in all cases where it's applicable
for the sake of consistency.

	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Acked-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
	Signed-off-by: Wolfram Sang <wsa@kernel.org>
(cherry picked from commit a5df4c14b9a9c576cd8229deb87da21aeb8aa82c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/busses/i2c-designware-core.h
diff --cc drivers/i2c/busses/i2c-designware-core.h
index a5f6db491e44,c129074be63c..000000000000
--- a/drivers/i2c/busses/i2c-designware-core.h
+++ b/drivers/i2c/busses/i2c-designware-core.h
@@@ -278,18 -288,14 +278,27 @@@ struct dw_i2c_dev 
  	bool			suspended;
  };
  
++<<<<<<< HEAD
 +#define ACCESS_SWAP		0x00000001
 +#define ACCESS_16BIT		0x00000002
 +#define ACCESS_INTR_MASK	0x00000004
 +#define ACCESS_NO_IRQ_SUSPEND	0x00000008
 +
 +#define MODEL_CHERRYTRAIL	0x00000100
 +#define MODEL_MSCC_OCELOT	0x00000200
 +#define MODEL_MASK		0x00000f00
++=======
+ #define ACCESS_INTR_MASK	BIT(0)
+ #define ACCESS_NO_IRQ_SUSPEND	BIT(1)
+ 
+ #define MODEL_MSCC_OCELOT	BIT(8)
+ #define MODEL_BAIKAL_BT1	BIT(9)
+ #define MODEL_MASK		GENMASK(11, 8)
++>>>>>>> a5df4c14b9a9 (i2c: designware: Switch header to use BIT() and GENMASK())
  
 -int i2c_dw_init_regmap(struct dw_i2c_dev *dev);
 +u32 dw_readl(struct dw_i2c_dev *dev, int offset);
 +void dw_writel(struct dw_i2c_dev *dev, u32 b, int offset);
 +int i2c_dw_set_reg_access(struct dw_i2c_dev *dev);
  u32 i2c_dw_scl_hcnt(u32 ic_clk, u32 tSYMBOL, u32 tf, int cond, int offset);
  u32 i2c_dw_scl_lcnt(u32 ic_clk, u32 tLOW, u32 tf, int offset);
  int i2c_dw_set_sda_hold(struct dw_i2c_dev *dev);
* Unmerged path drivers/i2c/busses/i2c-designware-core.h
