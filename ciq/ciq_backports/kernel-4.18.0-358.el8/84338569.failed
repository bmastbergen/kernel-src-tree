evm: Fix a small race in init_desc()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 8433856947217ebb5697a8ff9c4c9cad4639a2cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/84338569.failed

The IS_ERR_OR_NULL() function has two conditions and if we got really
unlucky we could hit a race where "ptr" started as an error pointer and
then was set to NULL.  Both conditions would be false even though the
pointer at the end was NULL.

This patch fixes the problem by ensuring that "*tfm" can only be NULL
or valid.  I have introduced a "tmp_tfm" variable to make that work.  I
also reversed a condition and pulled the code in one tab.

	Reported-by: Roberto Sassu <roberto.sassu@huawei.com>
Fixes: 53de3b080d5e ("evm: Check also if *tfm is an error pointer in init_desc()")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Acked-by: Roberto Sassu <roberto.sassu@huawei.com>
	Acked-by: Krzysztof Struczynski <krzysztof.struczynski@huawei.com>
	Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
(cherry picked from commit 8433856947217ebb5697a8ff9c4c9cad4639a2cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/integrity/evm/evm_crypto.c
diff --cc security/integrity/evm/evm_crypto.c
index 4c8318e7dfeb,764b896cd628..000000000000
--- a/security/integrity/evm/evm_crypto.c
+++ b/security/integrity/evm/evm_crypto.c
@@@ -96,15 -91,23 +96,35 @@@ static struct shash_desc *init_desc(cha
  		algo = hash_algo_name[hash_algo];
  	}
  
++<<<<<<< HEAD
 +	if (IS_ERR_OR_NULL(*tfm)) {
 +		mutex_lock(&mutex);
 +		if (*tfm)
 +			goto out;
 +		*tfm = crypto_alloc_shash(algo, 0, CRYPTO_ALG_ASYNC);
 +		if (IS_ERR(*tfm)) {
 +			rc = PTR_ERR(*tfm);
 +			pr_err("Can not allocate %s (reason: %ld)\n", algo, rc);
 +			*tfm = NULL;
++=======
+ 	if (*tfm)
+ 		goto alloc;
+ 	mutex_lock(&mutex);
+ 	if (*tfm)
+ 		goto unlock;
+ 
+ 	tmp_tfm = crypto_alloc_shash(algo, 0, CRYPTO_NOLOAD);
+ 	if (IS_ERR(tmp_tfm)) {
+ 		pr_err("Can not allocate %s (reason: %ld)\n", algo,
+ 		       PTR_ERR(tmp_tfm));
+ 		mutex_unlock(&mutex);
+ 		return ERR_CAST(tmp_tfm);
+ 	}
+ 	if (type == EVM_XATTR_HMAC) {
+ 		rc = crypto_shash_setkey(tmp_tfm, evmkey, evmkey_len);
+ 		if (rc) {
+ 			crypto_free_shash(tmp_tfm);
++>>>>>>> 843385694721 (evm: Fix a small race in init_desc())
  			mutex_unlock(&mutex);
  			return ERR_PTR(rc);
  		}
* Unmerged path security/integrity/evm/evm_crypto.c
