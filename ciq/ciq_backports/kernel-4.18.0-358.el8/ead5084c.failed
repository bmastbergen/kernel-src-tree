arm64: add credited/trusted RNG support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Mark Rutland <mark.rutland@arm.com>
commit ead5084cdf5af51445d219800c2ac8b01eb85f2f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/ead5084c.failed

Currently arm64 doesn't initialize the primary CRNG in a (potentially)
trusted manner as we only detect the presence of the RNG once secondary
CPUs are up.

Now that the core RNG code distinguishes the early initialization of the
primary CRNG, we can implement arch_get_random_seed_long_early() to
support this.

This patch does so.

	Signed-off-by: Mark Rutland <mark.rutland@arm.com>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Mark Brown <broonie@kernel.org>
	Cc: Theodore Ts'o <tytso@mit.edu>
	Cc: Will Deacon <will@kernel.org>
Link: https://lore.kernel.org/r/20200210130015.17664-4-mark.rutland@arm.com
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit ead5084cdf5af51445d219800c2ac8b01eb85f2f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/archrandom.h
diff --cc arch/arm64/include/asm/archrandom.h
index 5ea5a1ce5a5f,fc1594a0710e..000000000000
--- a/arch/arm64/include/asm/archrandom.h
+++ b/arch/arm64/include/asm/archrandom.h
@@@ -59,6 -61,25 +61,28 @@@ static inline bool __must_check arch_ge
  	return ok;
  }
  
++<<<<<<< HEAD
++=======
+ static inline bool __init __early_cpu_has_rndr(void)
+ {
+ 	/* Open code as we run prior to the first call to cpufeature. */
+ 	unsigned long ftr = read_sysreg_s(SYS_ID_AA64ISAR0_EL1);
+ 	return (ftr >> ID_AA64ISAR0_RNDR_SHIFT) & 0xf;
+ }
+ 
+ static inline bool __init __must_check
+ arch_get_random_seed_long_early(unsigned long *v)
+ {
+ 	WARN_ON(system_state != SYSTEM_BOOTING);
+ 
+ 	if (!__early_cpu_has_rndr())
+ 		return false;
+ 
+ 	return __arm64_rndr(v);
+ }
+ #define arch_get_random_seed_long_early arch_get_random_seed_long_early
+ 
++>>>>>>> ead5084cdf5a (arm64: add credited/trusted RNG support)
  #else
  
  static inline bool __arm64_rndr(unsigned long *v) { return false; }
* Unmerged path arch/arm64/include/asm/archrandom.h
