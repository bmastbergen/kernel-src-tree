docs/bpf: Add bpf() syscall command reference

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Joe Stringer <joe@cilium.io>
commit 6197e5b7b1b5acd1e9b04bdf3527c694d84a27e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/6197e5b7.failed

Generate the syscall command reference from the UAPI header file and
include it in the main bpf docs page.

	Signed-off-by: Joe Stringer <joe@cilium.io>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Reviewed-by: Quentin Monnet <quentin@isovalent.com>
	Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
Link: https://lore.kernel.org/bpf/20210302171947.2268128-15-joe@cilium.io
(cherry picked from commit 6197e5b7b1b5acd1e9b04bdf3527c694d84a27e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/userspace-api/index.rst
#	MAINTAINERS
diff --cc Documentation/userspace-api/index.rst
index a3233da7fa88,1e2438b7afa0..000000000000
--- a/Documentation/userspace-api/index.rst
+++ b/Documentation/userspace-api/index.rst
@@@ -20,6 -20,12 +20,15 @@@ place where this information is gathere
     seccomp_filter
     unshare
     spec_ctrl
++<<<<<<< HEAD
++=======
+    accelerators/ocxl
+    ebpf/index
+    ioctl/index
+    iommu
+    media/index
+    sysfs-platform_profile
++>>>>>>> 6197e5b7b1b5 (docs/bpf: Add bpf() syscall command reference)
  
  .. only::  subproject and html
  
diff --cc MAINTAINERS
index 47a8c66abc3a,4446d1455354..000000000000
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@@ -2784,15 -3187,30 +2784,20 @@@ F:	include/uapi/linux/if_bonding.
  BPF (Safe dynamic programs and tools)
  M:	Alexei Starovoitov <ast@kernel.org>
  M:	Daniel Borkmann <daniel@iogearbox.net>
 -M:	Andrii Nakryiko <andrii@kernel.org>
 -R:	Martin KaFai Lau <kafai@fb.com>
 -R:	Song Liu <songliubraving@fb.com>
 -R:	Yonghong Song <yhs@fb.com>
 -R:	John Fastabend <john.fastabend@gmail.com>
 -R:	KP Singh <kpsingh@kernel.org>
  L:	netdev@vger.kernel.org
 -L:	bpf@vger.kernel.org
 -S:	Supported
 -W:	https://bpf.io/
 -Q:	https://patchwork.kernel.org/project/netdevbpf/list/?delegate=121173
 +L:	linux-kernel@vger.kernel.org
  T:	git git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git
  T:	git git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git
 -F:	Documentation/bpf/
 +Q:	https://patchwork.ozlabs.org/project/netdev/list/?delegate=77147
 +S:	Supported
 +F:	arch/x86/net/bpf_jit*
  F:	Documentation/networking/filter.rst
++<<<<<<< HEAD
 +F:	Documentation/bpf/
++=======
+ F:	Documentation/userspace-api/ebpf/
+ F:	arch/*/net/*
++>>>>>>> 6197e5b7b1b5 (docs/bpf: Add bpf() syscall command reference)
  F:	include/linux/bpf*
  F:	include/linux/filter.h
  F:	include/trace/events/xdp.h
diff --git a/Documentation/bpf/index.rst b/Documentation/bpf/index.rst
index 4f2874b729c3..a702f67dd45f 100644
--- a/Documentation/bpf/index.rst
+++ b/Documentation/bpf/index.rst
@@ -12,9 +12,6 @@ BPF instruction-set.
 The Cilium project also maintains a `BPF and XDP Reference Guide`_
 that goes into great technical depth about the BPF Architecture.
 
-The primary info for the bpf syscall is available in the `man-pages`_
-for `bpf(2)`_.
-
 BPF Type Format (BTF)
 =====================
 
@@ -35,6 +32,12 @@ Two sets of Questions and Answers (Q&A) are maintained.
    bpf_design_QA
    bpf_devel_QA
 
+Syscall API
+===========
+
+The primary info for the bpf syscall is available in the `man-pages`_
+for `bpf(2)`_. For more information about the userspace API, see
+Documentation/userspace-api/ebpf/index.rst.
 
 Helper functions
 ================
diff --git a/Documentation/userspace-api/ebpf/index.rst b/Documentation/userspace-api/ebpf/index.rst
new file mode 100644
index 000000000000..473dfba78116
--- /dev/null
+++ b/Documentation/userspace-api/ebpf/index.rst
@@ -0,0 +1,17 @@
+.. SPDX-License-Identifier: GPL-2.0
+
+eBPF Userspace API
+==================
+
+eBPF is a kernel mechanism to provide a sandboxed runtime environment in the
+Linux kernel for runtime extension and instrumentation without changing kernel
+source code or loading kernel modules. eBPF programs can be attached to various
+kernel subsystems, including networking, tracing and Linux security modules
+(LSM).
+
+For internal kernel documentation on eBPF, see Documentation/bpf/index.rst.
+
+.. toctree::
+   :maxdepth: 1
+
+   syscall
diff --git a/Documentation/userspace-api/ebpf/syscall.rst b/Documentation/userspace-api/ebpf/syscall.rst
new file mode 100644
index 000000000000..ea9918084221
--- /dev/null
+++ b/Documentation/userspace-api/ebpf/syscall.rst
@@ -0,0 +1,24 @@
+.. SPDX-License-Identifier: GPL-2.0
+
+eBPF Syscall
+------------
+
+:Authors: - Alexei Starovoitov <ast@kernel.org>
+          - Joe Stringer <joe@wand.net.nz>
+          - Michael Kerrisk <mtk.manpages@gmail.com>
+
+The primary info for the bpf syscall is available in the `man-pages`_
+for `bpf(2)`_.
+
+bpf() subcommand reference
+~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+.. kernel-doc:: include/uapi/linux/bpf.h
+   :doc: eBPF Syscall Preamble
+
+.. kernel-doc:: include/uapi/linux/bpf.h
+   :doc: eBPF Syscall Commands
+
+.. Links:
+.. _man-pages: https://www.kernel.org/doc/man-pages/
+.. _bpf(2): https://man7.org/linux/man-pages/man2/bpf.2.html
* Unmerged path Documentation/userspace-api/index.rst
* Unmerged path MAINTAINERS
