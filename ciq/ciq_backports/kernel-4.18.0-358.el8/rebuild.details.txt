Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 6227
Number of commits matched with upstream: 6168 (99.05%)
Number of commits in upstream but not in rpm: 481983
Number of commits NOT found in upstream: 59 (0.95%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-358.el8 for kernel-4.18.0-358.el8
Clean Cherry Picks: 4770 (77.33%)
Empty Cherry Picks: 1279 (20.74%)
_______________________________

__EMPTY COMMITS__________________________
ecffc8a8c7301f6f3c731ba23e38cd049a046416 tracing: Add trace_total_entries() / trace_total_entries_cpu()
03197fc02b356606355d7ede343b18e3e3737771 tracing: kdb: Allow ftdump to skip all but the last few entries
3bd32d6a2ee62db3c5b06caf7b163b6a4d459ea1 lib/vsprintf: Add %pfw conversion specifier for printing fwnode names
8d3bcc441e6cddbb5fe49b59f7766f01f1e2493b x86: Use pr_warn instead of pr_warning
257daba4eb7f2b78c5b3d77443985c6c53560c73 idsn: Use pr_warn instead of pr_warning
8243186f0cc7c57cf9d6a110cd7315c44e3e0be8 fs: remove ksys_dup()
af628aae8640c268938a0c9344b4ec0d102c0a0a device.h: move dev_printk()-like functions to dev_printk.h
2d3145f8d2809592ef803a30c8a342b5a9e2de9a early init: fix error handling when opening /dev/console
74f1a299107b9e1a563831a4ba85f769ab577164 Revert "fs: remove ksys_dup()"
7daac5b2fdf88e3c3e84cf0d577f524beb0244ab lib/vsprintf: Print time64_t in human readable format
c0842fbc1b18c7a044e6ff3e8fa78bfa822c7d1a random32: move the pseudo-random 32-bit definitions to prandom.h
bc885f1ab6de0d38c6956a71b0126543b64875b0 doc:kmsg: explicitly state the return value in case of SEEK_CUR
09a6b0bc3be793ca8cba580b7992d73e9f68f15d random32: Restore __latent_entropy attribute on net_rand_state
896fbe20b4e2333fb55cc9b9b783ebcc49eee7c7 printk: use the lockless ringbuffer
cc5c7041c6e1fe8c02fe9e16f28a5e52f7a6957c printk: ringbuffer: clear initial reserved fields
f5f022e53b874f978dda23847173cbf2589b07f5 printk: reimplement log_cont using record extension
cfe2790b163acdc9c058a63bff310923e84a16b4 printk: move printk_info into separate array
74caba7f2a0685575b3ee5330a118f5922485e02 printk: move dictionary keys to dev_printk_info
f35efc78add6439a9fbe611f2dd517641e82d067 printk: remove dict ring
59f8bcca1ef6a5326f7c127e11b949e745bfa230 printk: avoid and/or handle record truncation
0463d04ea03a12d8a5aad42197a5945dfd78d7d6 printk: reduce setup_text_buf size to LOG_LINE_MAX
4ad9921af4f18490980369f7d60f90ade0195812 printk: finalize records with trailing newlines
6b916706f8f09348cfa4fdd3642ebf87d6a2a26b printk: inline log_output(),log_store() in vprintk_store()
b031a684bfd01d633c79d281bd0cf11c2f834ada printk: remove logbuf_lock writer-protection of ringbuffer
757055ae8dedf5333af17b3b5b4b70ba9bc9da4e init/console: Use ttynull as a fallback when there is no console
584da076866f38ffb952efcc25af039f9551df81 printk: ringbuffer: Reference text_data_ring directly in callees.
a91bd6223ecd46addc71ee6fcd432206d39365d2 Revert "init/console: Use ttynull as a fallback when there is no console"
89ccf18f032f26946e2ea6258120472eec6aa745 printk: fix kmsg_dump_get_buffer length calulations
f0e386ee0c0b71ea6f7238506a4d0965a2dbef11 printk: fix buffer overflow potential for print_text()
08d60e5999540110576e7c1346d486220751b7f9 printk: fix string termination for record_print_text()
546eee2d931b3d76357a9c813778203001375fe1 torture: Remove "Failed to add ttynull console" false positive
13791c80b0cdf54d92fc54221cdf490683b109de printk: avoid prb_first_valid_seq() where possible
a48849e2358ecf1a347a03b33dc27b9b2f25f8fd printk: clarify the documentation for plain pointer printing
bb07b16c44b2c6ddbafa44bb06454719002e828e printk: limit second loop of syslog_print_all
726b5097701a8d46f5354be780e1a11fc4ca1187 printk: refactor kmsg_dump_get_buffer()
4260e0e5510158d704898603331e5365ebe957de printk: consolidate kmsg_dump_get_buffer/syslog_print_all code
cf5b0208fda4602d0ef383a86e942fb3dcb8852b printk: introduce CONSOLE_LOG_MAX
7d7a23a91c915f6a90b2a636b130c53e0fe5154c printk: use seqcount_latch for clear_seq
35b2b1634849ac19b2dd28cae6c97b64c4299830 printk: use atomic64_t for devkmsg_user.seq
636babdc06961f173696cb664550b4cc239dde2e printk: add syslog_lock
5f6c7648e556f41a3064bb6dceb9e102c50b618d printk: kmsg_dumper: remove @active field
f9f3f02db98bbe678a8e57fe9432b196174744a3 printk: introduce a kmsg_dump iterator
996e966640ddea7b535cbe7b749e87a3b24f37e8 printk: remove logbuf_lock
a4f987653241db9fa1f99531b430cebb83f1eae1 printk: kmsg_dump: remove _nolock() variants
505a27a7342912f25ef3d9dabd6a08857e76efc2 printk: console: remove unnecessary safe buffer usage
4249cb7d920060dfa925d3b9f6a37f0a7c025a16 printk: Remove trailing semicolon in macros
20bc8c1e972f29afcac85e524e430c11a6df5f58 lib/vsprintf: Allow to override ISO 8601 date and time separator
50f530e176eac808e64416732e54c0686ce2c39b lib: test_scanf: Add tests for sscanf number conversion
ef04d4ff4b19628c78abddc768acce097d35d086 selftests: lib: Add wrapper script for test_scanf
1b932689c77766b68e2ead51ca0fb84ec5bb8965 lib: test_scanf: Remove pointless use of type_min() with unsigned types
d327ea15a305024ef0085252fa3657bbb1ce25f5 random32: Fix implicit truncation warning in prandom_seed_state()
11e4b63abbe23872b45f325a7c6c8b7f9ff42cad printk/console: Check consistent sequence number when handling race in console_unlock()
fe8e3ee0d588566c1f44f28a555042ef50eba491 lib/test_scanf: Handle n_bits == 0 in random tests
bade5c554f1ac70a50cefe96517957629dbc0d8f tools/bpftool: Add -Wall when building BPF programs
5f10c1aac8b29d225d19a74656865d1ee3db6eaa libbpf: Stop using feature-detection Makefiles
700d4796ef59f5faf240d307839bd419e2b6bdff bpf: Optimize program stats
f2dd3b39467411c53703125a111f45b3672c1771 bpf: Compute program stats for sleepable programs
ca06f55b90020cd97f4cc6d52db95436162e7dcf bpf: Add per-program recursion prevention mechanism
9ed9e9ba2337205311398a312796c213737bac35 bpf: Count the number of times recursion was prevented
05a68ce5fa51a83c360381630f823545c5757aa2 bpf: Don't do bpf_cgroup_storage_set() for kuprobe/tp programs
8e505fceaa2b7c7841b70ed530167727bb66517b scsi: smartpqi: Change Kconfig menu entry to Microchip
64c4dcbfcc4ea3ae8f898e6dac836e57acb16b6b pinctrl: Remove dev_err() usage after platform_get_irq()
3c827873590c3f49c76d540c1e646135a11e0b4e pinctrl: Use new GPIO_LINE_DIRECTION
90428a8eb4947f9c7c905a178f3520dc7e2ee6d2 genirq/PM: Introduce IRQCHIP_ENABLE_WAKEUP_ON_SUSPEND flag
7e6f8d6f4a42ef9b693ff1b49267c546931d4619 pinctrl: amd: Add irq field data
8bd836feb6cad6bd746da09a86bda0f5ee5c4b01 platform/x86: intel_skl_int3472: Move to intel/ subfolder
fa082a7cf5a66a42a06da048afd972e2cc1b67ea platform/x86: intel_pmc_core: Move to intel sub-directory
025e32048f39e24d8ddf9369d679644ea2bdcce6 x86/amd_nb: Make hygon_nb_misc_ids static
163b099146b85d1b05bd2eaa045acbeee25c29e4 x86: Fix various typos in comments, take #2
25572c818d2e40b5d7231a9dc49bd45a6b6c3dfa hwmon: (k10temp) Add support for yellow carp
8afb46804dfa88bb86d65e13f3209372f3d912e3 i2c: designware: Cleanup bus lock handling
dec0a81a7814c8a876e663e0627468e6b1a7d2fb i2c: designware: Add ACPI HID for Hisilicon Hip08-Lite I2C controller
90224e6468e15d5eb22a10ae1849cf8ca2e7360a i2c: drivers: Use generic definitions for bus frequencies
d79294d0de12ddd1420110813626d691f440b86f i2c: designware: platdrv: Remove DPM_FLAG_SMART_SUSPEND flag on BYT and CHT
3ebe40ed1c39016eeae947acc9fd57d6b10d43b2 i2c: designware: Move configuration routines to respective modules
bed20c84021eb6dfc9df1590d8e231895b0392aa i2c: designware: Rename i2c_dw_probe() to i2c_dw_probe_master()
a19f133f694c8f5549d46b43e4b30343b35c3aa5 i2c: designware: Include proper headers in i2c-desingware-core.h
20ee1d9020c9233129ba84094e7dd6fe4651cfad i2c: designware: Move i2c_dw_validate_speed() helper to a common code
462cfcb4aa1c92239cb16177fd3ceb65326955ff i2c: designware: Drop unneeded condition in i2c_dw_validate_speed()
f9288fcc5c6154959de4dd83be1b91abcf5e0c17 i2c: designware: Move ACPI parts into common module
3f35064a7cfef4ed8d25cdb16da0abfbbd525f63 i2c: designware: Drop hard coded FIFO depth assignment
c615f5c65f622fb62df17d58485f46a544d6e07a i2c: designware: Discard Cherry Trail model flag
0daede80f870025141cbb16e6a826d5e7f43f4a5 i2c: designware: Convert driver to using regmap API
fcb82a939df86018641f38124cb9a7811a5f8505 i2c: designware: Add Baikal-T1 System I2C support
852f71942ce71fd9a2bb25667bda53afeb97dcb6 i2c: designware: Adjust bus speed independently of ACPI
4db7e1786db505eee86e6301cd42967f4da43be8 i2c: busses: Use fallthrough pseudo-keyword
66b92313e2ca9208b5f3ebf5d86e9a818299d8fa i2c: designware: call i2c_dw_read_clear_intrbits_slave() once
3b5f7f10ff6e6b66f553e12cc50d9bb751ce60ad i2c: designware: slave should do WRITE_REQUESTED before WRITE_RECEIVED
a5df4c14b9a9c576cd8229deb87da21aeb8aa82c i2c: designware: Switch header to use BIT() and GENMASK()
f53f15ba5a852171eccf940b22530152450a045c i2c: designware: Get right data length
17631e8ca2d3421090e54b39d9a1402091019ba1 i2c: designware: Add driver support for AMD NAVI GPU
fd6ddaa0f50a1d5235989262ef666713d2903678 i2c: drivers: Use generic definitions for bus frequencies (part 2)
3ab4ce2daf09b62e38934a7afe3e9fc3f3cbcdec i2c: designware: Fix return value check in navi_amd_register_client()
5a517b5bf687028149d55ba50b393c288a054601 i2c: designware: Get rid of legacy platform data
26471d4a6cf8d5d0bd0fb55c7169de7d67cc703a units: Add SI metric prefix definitions
c045214a0f31dd5d6be716ed2f119b57b6c5d3a2 i2c: designware: Use DIV_ROUND_CLOSEST() macro
6a4746ba06191e23d30230738e94334b26590a8a ipc: remove memcg accounting for sops objects in do_semtimedop()
01c4b788e01bfdb715de9a6763a7515da7a30a8f arch/kmap: remove BUG_ON()
525aaf9bad00e7454b9f9b3873e92795afb59f8e arch/kmap: remove redundant arch specific kmaps
e23c45976f82ac789469c37e4d5a72ea2ce30bba arch/kunmap: remove duplicate kunmap implementations
ee9bc5fdf5b6d24875fc55d43d5a0728bc2add21 {x86,powerpc,microblaze}/kmap: move preempt disable
78b6d91ec7bbfc5bcc2dd05bb2cf13c9de1dc7cd arch/kmap_atomic: consolidate duplicate code
abca2500c0c1b20c3e552f259da4c4a99db3b4d1 arch/kunmap_atomic: consolidate duplicate code
db458d73fa35e256bba90b59a6776810800c8bb6 arch/kmap: ensure kmap_prot visibility
20b271dfe9d932b02b067a1f7ba9805c5b8d79bd arch/kmap: define kmap_atomic_prot() for all arch's
7438f36310ddd9fe536fc7403187f63427cecaba parisc/kmap: remove duplicate kmap code
090e77e166334b83f555de408df64b9ab394ea08 kmap: consolidate kmap_prot definitions
e8f147dc3f1f6b4c27b2eeaf82df4f469d80d469 fs: Remove asm/kmap_types.h includes
4f8b96cd47b06f1e3ec71c1a3216113efe8dbfb5 asm-generic: Provide kmap_size.h
298fa1ad5571f59cb3ca5497a9455f36867f065e highmem: Provide generic variant of kmap_atomic*
389755c250814185938f5b04334a4f0184c30647 highmem: Make DEBUG_HIGHMEM functional
157e118b55113d1e6c7f8ddfcec0a1dbf3a69511 x86/mm/highmem: Use generic kmap atomic implementation
47da42b27a56f3ee5abace2858b69e277703f707 powerpc/mm/highmem: Switch to generic kmap atomic
d7029e4549691ecaf1ead536d3322a00bda85659 highmem: Get rid of kmap_types.h
3c1016b53c311906878c703af1e2b29855a9a962 mm/highmem: Remove the old kmap_atomic cruft
351191ad55c8a1eccaf23e4187c62056229c0779 io-mapping: Cleanup atomic iomap
13f876ba77ebd5125799bb042201f22cf73df154 highmem: High implementation details and document API
2a656cad337e0e1ca582f58847d7b0c7eeba4dc8 mm/highmem: Take kmap_high_get() properly into account
6e799cb69a70eedbb41561b750f7180c12cff280 mm/highmem: Provide and use CONFIG_DEBUG_KMAP_LOCAL
0e91a0c6984c837a7c6760e3f28e8e1c532abf87 mm/highmem: Provide CONFIG_DEBUG_KMAP_LOCAL_FORCE_MAP
14df32670291588036a498051a54cd8462d7f611 x86: Support kmap_local() forced debugging
5fbda3ecd14a5343644979c98d6eb65b7e7de9d8 sched: highmem: Store local kmaps in task struct
f3ba3c710ac5a30cd058615a9eb62d2ad95bb782 mm/highmem: Provide kmap_local*
487cfade12fae0eb707bdce71c4d585128238a7d mm/highmem: fix CONFIG_DEBUG_KMAP_LOCAL_FORCE_MAP
97550f6fa59254435d864b92603de3ca4b5a99f8 net: compound page support in skb_seq_read
5d65e7a7d8cd5c77baa1acf129a11b8b45ffee75 mm: untag user pointers in get_vaddr_frames
6a005645edd6de2b535783c96e66e08cccc5e067 mm/gup: documentation fix for pin_user_pages*() APIs
04769cb1c45a919cd94b931e6494d2a9afc32914 mm/frame-vector: Use FOLL_LONGTERM
eb83b8e3e6478845f8130622a2048ed4ec3b3be3 media: videobuf2: Move frame_vector into media subsystem
49be780f798446ea86aa6cd687f9e51cbe569149 media: videobuf2: use vma_lookup() in get_vaddr_frames()
785025820a6a565185ce9d47fdd8d23dbf91dee8 powerpc/mm/highmem: use __set_pte_at() for kmap_local()
d036bda7d0e7269c2982eb979acfef855f5d7977 sched/core: Convert sighand_struct.count to refcount_t
3eb39f47934f9d5a3027fe00d906a45fe3a15fad signal: add pidfd_send_signal() syscall
556a888a14afe27164191955618990fb3ccc9aad signal: don't silently convert SI_USER signals to non-current pidfd
2151ad1b067275730de1b38c7257478cae47d29e signal: support CLONE_PIDFD with pidfd_send_signal
b3e5838252665ee4cfa76b82bdf1198dca81e5be clone: add CLONE_PIDFD
9014143bab2f3bc0b9e5db3bc8d00e2a43e50fbd fork: don't check parent_tidptr with CLONE_PIDFD
6fd2fe494b17bf2dec37b610d23a43a72b16923a copy_process(): don't use ksys_close() on cleanups
28dd29c06d0dede4b32b2c559cff21955a830928 fork: return proper negative error code
3695eae5fee0605f316fbaad0b9e3de791d7dfaf pidfd: add P_PIDFD to waitid()
021691559245498dfa15454c9fc4351f367d0b7f exec: Factor unshare_sighand out of de_thread and call it separately
153ffb6ba49fd80dc607a9f230415af02b728d70 exec: Move cleanup of posix timers on exec out of de_thread
eea9673250db4e854e9998ef9da6d4584857f0ea exec: Add exec_update_mutex to replace cred_guard_mutex
2de4e82318c7f9d34f4b08599a612cd4cd10bf0b selftests/ptrace: add test cases for dead-locks
6914303824bb572278568330d72fc1f8f9814e67 perf: Use new infrastructure to fix deadlocks in execve
89826cce37542f7950e8f4b9258284805e98430c exec: Make unlocking exec_update_mutex explict
1507b7a30ad284a2a136ee79c214c0e86c62da64 exec: Rename the flag called_exec_mmap point_of_no_return
96ecee29b0b560662ec082ee9b6f2049f2a79090 exec: Merge install_exec_creds into setup_new_exec
7d503feba0c88586b4c9f1212e9cc582c9370fa7 exec: In setup_new_exec cache current in the local variable me
df9e4d2c4a53503a97fc08eeebdc04e3c11b4618 exec: Move most of setup_new_exec into flush_old_exec
2388777a0a5957a10b3d78677216530a9b3bd09f exec: Rename flush_old_exec begin_new_exec
b8bff599261c930630385ee21d3f98e7ce7d4843 exec: Factor security_bprm_creds_for_exec out of security_bprm_set_creds
112b7147592e8f46bd1da4f961773e6d974f38a8 exec: Convert security_bprm_set_creds into security_bprm_repopulate_creds
a16b3357b2b8e910bb614254d8a7e84d2bd59b4c exec: Allow load_misc_binary to call prepare_binprm unconditionally
8b72ca9004ed35104deb80b07990da5503bc5252 exec: Move the call of prepare_binprm into search_binary_handler
f7cfd871ae0c5008d94b6f66834e7845caa93c15 exec: Transform exec_update_mutex into a rw_semaphore
7328d9cc1b9fdc52105901072e9a4a1234e29b11 mm: sort out the DEVICE_PRIVATE Kconfig mess
b6b346a0665a8bf8b28fd851217c435a3eec4af9 mm: don't select MIGRATE_VMA_HELPER from HMM_MIRROR
9c240a7bb33787d4fed56508425ae0b2936b1674 mm/hmm: make HMM_MIRROR an implicit option
9cacf81f8161111db25f98e78a7a0e32ae142b3f bpf: Remove extra lock_sock for TCP_ZEROCOPY_RECEIVE
a9ed15dae0755a0368735e0556a462d8519bdb05 bpf: Split cgroup_bpf_enabled per attach type
e1850ea9bd9eca3656820b4875967d6f9c11c237 bpf: bpf_fib_lookup return MTU value as output when looked up
ee909d0b1dac8632eeb78cbf17661d6c7674bbd0 s390/qeth: Fix deadlock in remove_discipline
dfcb245e28481256a10a9133441baf2a93d26642 sched: Fix various typos in comments
e0e8d4911ed2695b12c3a01c15634000ede9bc73 sched/isolation: Prefer housekeeping CPU in local node
9099a14708ce1dfecb6002605594a0daa319b555 sched/fair: Add a few assertions
13c2235b2b2870675195f0b551275d1abdd81068 sched: Remove unnecessary variable from schedule_tail()
3b03706fa621ce31a3e9ef6307020fde4e6aae16 sched: Fix various typos
8fc2858e572ce761bffcade81a42ac72005e76f9 sched: Make nr_iowait_cpu() return 32-bit value
00b89fe0197f0c55a045775c11553c0cdb7082fe sched: Make the idle task quack like a per-CPU kthread
a7b359fc6a37faaf472125867c8dc5a068c90982 sched/fair: Correctly insert cfs_rq's to list on unthrottle
9e077b52d86ac364a295b05c916c7478a16865b2 sched/pelt: Check that *_avg are null when *_sum are
fdaba61ef8a268d4136d0a113d153f7a89eb9984 sched/fair: Ensure that the CFS parent is added after unthrottling
b5e55556182d2e43da035df1bffbd492c72a7994 libata: switch remaining drivers to use dma_set_mask_and_coherent
a52fbcfc7b38b50b5b651bab80041a93ba7b29b9 ata: move EXPORT_SYMBOL_GPL()s close to exported code
7fe183c773c42f9814cd361c45a0233f441bc4fc ata: start separating SATA specific code from libata-core.c
6eab1bc0eecb541f4c383a0823902dc8f5d99861 ata: move sata_scr_*() to libata-sata.c
ab4117cf2470618ffd5af16fa7c363b81260d6e7 ata: move *sata_set_spd*() to libata-sata.c
9d3158f5cb11142d85c351fa0e0087ef95ac9cb8 ata: move sata_link_{debounce,resume}() to libata-sata.c
78c97c80d76b0590fc6ff5e20f4b18f105aa4fae ata: move sata_link_hardreset() to libata-sata.c
61a11986d33d01dbef745d49c0536961eb06d2f1 ata: move ata_qc_complete_multiple() to libata-sata.c
2b384ede7107a528c65ec826e045b572bcb2aa0b ata: move sata_deb_timing_*() to libata-sata.c
ec811a94c5bb6916d01c02dc99c8cecfa59cbb85 ata: start separating SATA specific code from libata-scsi.c
15964ff72832ee489ae9e31c4e1a924e80e05dcb ata: move ata_sas_*() to libata-sata.c
a695de27fca5cefce0d1d93bab681e35605fee55 ata: start separating SATA specific code from libata-eh.c
a0ccd2511b6f70394b30f8290da8bfc723d6bc07 ata: move ata_eh_analyze_ncq_error() & co. to libata-sata.c
1f40704bb01b9fba9925006662a37373d514f26b PCI: Move pci_match_device() ahead of new_id_store()
ee8b1c478a9fbce9c64151ee561c124c4dcd66be PCI: Return u16 from pci_find_ext_capability() and similar
f83c37941e881224885f2e694e0626bea358e96b PCI: Disable MSI for Pericom PCIe-USB adapter
e7708f5b10e205d6291bb495e645a03553b9768b PCI: Unify ECAM constants in native PCI Express drivers
ce0602990fb762d53dd06167faedcd58d177199b PCI: vmd: Update type of the __iomem pointers
dfe564045c653d9e6969ccca57a8a04771d333f7 rcu: Panic after fixed number of stalls
1b04fa9900263b4e217ca2509fd778b32c2b4eb2 rcu-tasks: Move RCU-tasks initialization to before early_initcall()
bfba7ed084f8ab0269a5a1d2f51b07865456c334 rcu-tasks: Add RCU-tasks self tests
8e7f37f2aaa56b723a24f6872817cf9c6410b613 mm: Add mem_dump_obj() to print source of memory block
b70fa3b12fc8d2b870d1ac7fd44da89271eb8705 mm: Make mem_dump_obj() handle NULL and zero-sized pointers
98f180837a896ecedf8f7e12af22b57f271d43c9 mm: Make mem_dump_obj() handle vmalloc() memory
bd34dcd4120d7e358baac9c22ef1321bd0c22079 mm: Make mem_obj_dump() vmalloc() dumps include start and length
b4b7914a6a73fc169fd1ce2fcd78a1d83d9528a9 rcu: Make call_rcu() print mem_dump_obj() info for double-freed callback
ae5c2341ed3987bd434ed495bd4f3d8b2bc3e623 rcu/segcblist: Add counters to segcblist datastructure
68804cf1c905ce227e4e1d0bc252c216811c59fd rcu/tree: segcblist: Remove redundant smp_mb()s
b4e6039e8af8c20dfbbdfcaebfcbd7c9d9ffe713 rcu/segcblist: Add debug checks for segment lengths
65e560327fe68153a9ad7452d5fd3171a1927d33 rcu/nocb: Turn enabled/offload states into a common flag
8d346d438f93b5344e99d429727ec9c2f392d4ec rcu/nocb: Provide basic callback offloading state machine bits
d97b078182406c0bd0aacd36fc0a693e118e608f rcu/nocb: De-offloading CB kthread
ef005345e6e49859e225f549c88c985e79477bb9 rcu/nocb: Don't deoffload an offline CPU with pending work
5bb39dc956f3d4f1bb75b5962b503426c45340ae rcu/nocb: De-offloading GP kthread
254e11efde66ca0a0ce0c99a62c377314b5984ff rcu/nocb: Re-offload support
69cdea873cde261586a2cae2440178df1a313bbe rcu/nocb: Shutdown nocb timer on de-offloading
314202f84ddd61e4d7576ef62570ad2e2d9db06b rcu/nocb: Flush bypass before setting SEGCBLIST_SOFTIRQ_ONLY
b9ced9e1ab51ed6057ac8198fd1eeb404a32a867 rcu/nocb: Set SEGCBLIST_SOFTIRQ_ONLY at the very last stage of de-offloading
f759081e8f5ac640df1c7125540759bbcb4eb0e2 rcu/nocb: Code-style nits in callback-offloading toggling
0cbc124bce8c527eb14c87f634683c5bcf4299c7 mm/slub: Fix backtrace of objects to handle redzone adjustment
f90d8191ac864df33b1898bc7edc54eaa24e22bc include/linux/mm_inline.h: shuffle lru list addition and deletion functions
3a9c9788a3149d9745b7eb2eae811e57ef3b127c mm: don\'t pass "enum lru_list" to lru list addition functions
861404536a3af3c39f1b10959a40def3d8efa2dd mm/swap.c: don\'t pass "enum lru_list" to trace_mm_lru_insertion()
46ae6b2cc2a47904a368d238425531ea91f3a2a5 mm/swap.c: don\'t pass "enum lru_list" to del_page_from_lru_list()
875601796267214f286d3581fe74f2805d060fe8 mm: add __clear_page_lru_flags() to replace page_off_lru()
bc7112719e1e80e4208eef3fc9bd8d2b6c263e7d mm: VM_BUG_ON lru page flags
c1770e34f3e7640887d8129fc05d13fe17101301 include/linux/mm_inline.h: fold page_lru_base_type() into its sole caller
2091339d59e7808e9b39a79f48e3d17ef7389b97 mm/vmscan.c: make lruvec_lru_size() static
2d146aa3aa842d7f5065802556b4f9a2c6e8ef12 mm: memcontrol: switch to rstat
2cd21c89800c2203331e5564df2155757ded2e86 mm: memcontrol: consolidate lruvec stat flushing
e4262c4f51d6373447c9d89093f49ff6b1e607be mm: memcontrol: rename shrinker_map to shrinker_info
468ab8437a97a953895856c3709e48b3067da13c mm: vmscan: add shrinker_info_protected() helper
3c6f17e6c5d048c8029578c475dd037dd5db58af mm: vmscan: add per memcg shrinker nr_deferred
18bb473e5031213ebfa9a622c0b0f8cdcb8a5371 mm: vmscan: shrink deferred objects proportional to priority
0f0cace35fa655d383b64b4fce83a44d530c9aaf mm, memcg: mark cgroup_memory_nosocket, nokmem and noswap as __ro_after_init
4d5c8aedc8aa6a1f5d1b06eb4f5517dc60dd9440 mm, memcg: introduce mem_cgroup_kmem_disabled()
2884b6b7eed4fc14c0630fb16e56a4c66c786d33 mm: memcontrol: bail out early when !mm in get_mem_cgroup_from_mm
f2e4d28dd9f6478dd54d47b91edc3fe62c019968 mm: memcontrol: simplify lruvec_holds_page_lru_lock
7467c39128bda1d58af08aaeb0c7ba54d0ec87ae mm: memcontrol: rename lruvec_holds_page_lru_lock to page_matches_lruvec
b51478a0b3c7040bfcadf6e2e04df5ddde59fd98 memcontrol: use flexible-array member
30def93565e5ba08676aa2b9083f253fc586dbed mm: memcontrol: fix blocking rstat function called from atomic cgroup1 thresholding code
6e7f34ebb8d25d71ce7f4580ba3cbfc10b895580 mm/gup: check for isolation errors
934bd07fae7e55232845f909f78873ab8678ca74 nfsd: move fsnotify on client creation outside spinlock
08694199477da412baf1852c6d1bf5fedbd40c7e scsi: target: core: Add gfp_t arg to target_cmd_init_cdb()
1130b499b4a74baa8248002a4fd4275bf137b7f4 scsi: target: tcm_loop: Use LIO wq cmd submission helper
3e443eb353eda6f4b4796e07f2599683fa752f1d EDAC/amd64: Add PCI device IDs for family 17h, model 70h
b6bea24d41519e8c31e4798f1c1a3f67e540c5d0 EDAC/amd64: Add AMD family 17h model 60h PCI IDs
315cd67c945351f8a569500f8ab16b7fa94026e8 i2c: i801: Add Block Write-Block Read Process Call support
8f51c1763ae98bb63fc04627ceae383aa0e8ff7b i2c: i801: Add support for Intel Alder Lake PCH-M
30428ef5d1e8caf78639cc70a802f1cb7b1cec04 lib/test_lockup: test module to generate lockups
ad3f434b87e7d2be4f2f5d602d33f070823f4d48 lib/test_lockup.c: fix spelling mistake "iteraions" -> "iterations"
aecd42df6d399346fd8e5551dd8878338f214ec1 lib/test_lockup.c: add parameters for locking generic vfs locks
02223e36f315be7e647aa4fbb09a8f8b5a2fa43e lib/test_lockup.c: make test_inode static
5d2a4e91a541cb04d20d11602f0f9340291322ac sched/clock: Move sched clock initialization and merge with generic clock
1b86abc1c645ad5c9c7bf70910cb3ce73939d2d7 sched_clock: Expose struct clock_read_data
a690ed07353ec45f056b0a6f87c23a12a59c030d time/sched_clock: Use seqcount_latch_t
aadd6e5caaacd6feca9691ba30536e7de5a7d152 time/sched_clock: Use raw_read_seqcount_latch()
4cd2bb12981165f865d2b8ed92b446b52310ef74 time/sched_clock: Mark sched_clock_read_begin/retry() as notrace
45e3d5a2af1d53164cc5fbd22c5ceea0d163ad45 lib/test_lockup.c: minimum fix to get it compiled on PREEMPT_RT
37aadc687ab441bbcb693ddae613acf9afcea1ab sched: Unbreak wakeups
b03fbd4ff24c5f075e58eb19261d5f8b3e40d7c6 sched: Introduce task_is_running()
2f064a59a11ff9bc22e52e9678bc601404c7cb34 sched: Change task_struct::state
43295d73adc8d3780e9f34206663e336678aaff8 sched/wakeup: Split out the wakeup ->__state check
85019c1674890fa0408e324589e20803b3241755 sched/wakeup: Reorganize the current::__state helpers
5f220be21418541422335288b6e2360a5ce0613c sched/wakeup: Prepare for RT sleeping spin/rwlocks
b4bfa3fcfe3b827ddb8b16edd45896caac5a1194 sched/core: Rework the __schedule() preempt argument
6991436c2b5d91d5358d9914ae2df22b9a1d1dc9 sched/core: Provide a scheduling point for RT locks
830e6acc8a1cafe153a0d88f9b2455965b396131 locking/rtmutex: Split out the inner parts of 'struct rtmutex'
ebbdc41e90ffce8b6bb3cbba1801ede2dd07a89b locking/rtmutex: Provide rt_mutex_slowlock_locked()
6bc8996add9f82d0153b0be44efe282bd45dc702 locking/rtmutex: Provide rt_mutex_base_is_locked()
42254105dfe871a0dc4f9d376106aeb010e54341 locking/rwsem: Add rtmutex based R/W semaphore implementation
c014ef69b3acdb8c9e7fc412e96944f4d5c36fa0 locking/rtmutex: Add wake_state to rt_mutex_waiter
7980aa397cc0968ea3ffee7a985c31c92ad84f81 locking/rtmutex: Use rt_mutex_wake_q_head
e17ba59b7e8e1f67e36d8fcc46daa13370efcf11 locking/rtmutex: Guard regular sleeping locks specific functions
1c143c4b65da09081d644110e619decc49c9dee4 locking/rtmutex: Provide the spin/rwlock core lock function
ebf4c55c1ddbabaea120fe8d48ce25b4f5da93a1 locking/mutex: Make mutex::wait_lock raw
cf702eddcd03dca3184947170930bf284aea27e9 locking/ww_mutex: Simplify lockdep annotations
2674bd181f3338dc2c58a59caa766dc9d5779784 locking/ww_mutex: Split out the W/W implementation logic into kernel/locking/ww_mutex.h
5297ccb2c50916c59294a63fae79fe01a7fbb79a locking/ww_mutex: Remove the __sched annotation from ww_mutex APIs
23d599eb2377404100d0d1508e12b0a2c40b49b1 locking/ww_mutex: Abstract out the waiter iteration
843dac28f90ef80535b0aee0b78446f1770c8611 locking/ww_mutex: Abstract out waiter enqueueing
9934ccc75cec2bafac552c2130835630530c4f7e locking/ww_mutex: Abstract out mutex accessors
bdb189148ded4ffa826a1387074c795fda43b3ba locking/ww_mutex: Abstract out mutex types
653a5b0bd9b405db999d5f4bfe08d34691e2c55a locking/ww_mutex: Abstract out internal lock accesses
dc4564f5dc2d4b11f3f3c8d3ac94012b1c7347d6 locking/ww_mutex: Implement rt_mutex accessors
8850d773703f8114d7c8a2421fd20bde8a558f96 locking/ww_mutex: Add RT priority to W/W order
2408f7a3782a6bfa69a573f5408b3a9666db78ca locking/ww_mutex: Add rt_mutex based lock type and accessors
add461325ec5bc39aa619a1bfcde7245e5f31ac7 locking/rtmutex: Extend the rtmutex core to support ww_mutex
c49f7ece4617807c5de06857d196c825aadf60d5 lib/test_lockup: Adapt to changed variables
07d91ef510fb16a2e0ca7453222105835b7ba3b8 futex: Prevent requeue_pi() lock nesting issue on RT
51711e825a6d1b2fe7ca46bb06d08c25d97656ee locking/rtmutex: Prevent lockdep false positive with PI futexes
992caf7f17243d736fc996770bac6566103778f6 locking/rtmutex: Add adaptive spinwait mechanism
c3123c431447da99db160264506de9897c003513 locking/rtmutex: Dont dereference waiter lockless
37e8abff2bebbf9947d6b784f5c75ed48a717089 locking/rtmutex: Dequeue waiter on ww_mutex deadlock
15eb7c888e749fbd1cc0370f3d38de08ad903700 locking/rwsem: Add missing __init_rwsem() for PREEMPT_RT
3adf3bae0d612357da516d39e1584f1547eb6e86 lib/test_lockup.c: fix return value of test_lockup_init()
4f07ec0d76f242d4ca0f0c0c6f7293c28254a554 futex: Prevent inconsistent state and exit race
9bfecd05833918526cc7357d55e393393440c5fa x86/cpufeatures: Force disable X86_FEATURE_ENQCMD and remove update_pasid()
6e554abd07002405fd9175284a10729e2f54be43 arm64: compat: Poison the compat sigpage
866d6cdf353ac81ca0a55d0ad4be91222d856336 ACPI: PCI: Drop ACPI_PCI_COMPONENT that is not used any more
52af99c3f55ff0afd815eac0271db2e1751af55c ACPI: processor: Get rid of ACPICA message printing
e6a55ccbd5647fcb44a6389682e8f522998a5773 ACPI: sysfs: Get rid of ACPICA message printing
3aadd86e5669f6bdb7c082e06c0ffadb4f987375 ACPI: Drop unused ACPI_*_COMPONENT definitions and update documentation
2c25fabdd5f69fb3d33b052dbb21c4d2d9ae4308 ACPI: processor: perflib: Eliminate redundant status check
4c324548f09fec413b4ee589174dabacfe17d953 ACPI: utils: Introduce acpi_evaluation_failure_warn()
8a02d99876362f35bc918097440445de18e3c47c ACPI: CPPC: Add emtpy stubs of functions for CONFIG_ACPI_CPPC_LIB unset
9104457ea524391112f4a4fd685ea532550a29b1 ACPI: AC: fix some coding style issues
65545abd8aa3a98c44472525bb459aacffa052c1 ACPI: battery: fix some coding style issues
f926e94338158a5f84cbe4b0c7a9438c303762f8 ACPI: scan: Drop sta argument from acpi_add_single_object()
f5d9ab1d803456f5215f853e9286659933b59afe ACPI: scan: Drop sta argument from acpi_init_device_object()
c830dbcfccbf70be94f15dbb4781be5ffb210d98 ACPI: scan: Call acpi_get_object_info() from acpi_set_pnp_ids()
8fa826b7344d6752f5cfd72380d9fe7bd8c6b928 trace/hwlat: Implement the mode config option
f46b16520a087e892a189db9c23ccf7e9bb5fa69 trace/hwlat: Implement the per-cpu mode
bc87cf0a08d437ea192b15f0918cb581a8698f15 trace: Add a generic function to read/write u64 values from tracefs
f27a1c9e1ba1e4f18f2c01e7bcbc400651ed821d trace/hwlat: Use trace_min_max_param for width and window params
aa892f8c887dd4331458d04de9425cde6664c694 trace/hwlat: Remove printk from sampling loop
bce29ac9ce0bb0b0b146b687ab978378c21e9078 trace: Add osnoise tracer
a955d7eac1779b437ceb24fc352026a2cbcec140 trace: Add timerlat tracer
039a602db393c00665e7a3b968b15fb6fd7042b1 trace/hwlat: Protect kdata->kthread with get/put_online_cpus
ba998f7d9531ef4ce462cabd2ce57a7558c33ede trace/hwlat: Support hotplug operations
c8895e271f7994a3ecb13b8a280e39aa53879545 trace/osnoise: Support hotplug operations
b96285e10aad234acfa0628f7e8336990f778c03 tracing: Have osnoise_main() add a quiescent state for task rcu
f7d9f6370e006400655ff96cb148f56598492d91 trace/osnoise: Fix 'no previous prototype' warnings
2a81afa326fd23add336cfd7e35e1d699d11d9c4 trace/osnoise: Make interval u64 on osnoise_main
498627b4ac85780b9962ed9b5c5abbefd884ef8e trace/osnoise: Fix return value on osnoise_init_hotplug_support
bd09c0556eca17f55fb09a26b6ed27bedd1b42ef Documentation: Fix a typo on trace/osnoise-tracer
b62613b431bdababc90bf1440b2c7427172d94f4 tracing: Fix spelling in osnoise tracer "interferences" -> "interference"
19c3eaa72288ce161441dd6b74b765a094d73488 trace/osnoise: Make 'noise' variable s64 in run_osnoise()
6a82f42a2e55d43bd99f1b457982be6c856c800d trace/timerlat: Fix indentation on timerlat_main()
d03721a6e7e8c04261873b3840daa3ce2c5b0543 trace/osnoise: Add a header with PREEMPT_RT additional fields
e1c4ad4a7f58417a6c483432b69c640670b6fe3d trace/timerlat: Add a header with PREEMPT_RT additional fields
0e05ba498dd0a19fc12868a9506be0f86cf36912 trace/osnoise: Print a stop tracing message
99c37d1a63eafcd3673302a7953df760b46d0f6f tracing: Replace deprecated CPU-hotplug functions.
4b6b08f2e45edda4c067ac40833e3c1f84383c0b tracing/osnoise: Fix missed cpus_read_unlock() in start_per_cpu_kthreads()
c681df88dcb12b1efd7e4efcfe498c5e9c31ce02 x86: Remove unusual Unicode characters from comments
2b26f0aa004995f49f7b6f4100dd0e4c39a9ed5f perf: Support only inheriting events if cloned with CLONE_THREAD
2e498d0a74e5b88a6689ae1b811f247f91ff188e perf: Add support for event removal on exec
46ade4740bbf9bf4e804ddb2c85845cccd219f3c perf/x86: Move cpuc->running into P4 specific code
b61442df748f06e98085fb604093a6215ce730eb tools: do not include scripts/Kbuild.include
f07952b17969777196512368a216baae1ad45ea6 perf stat: Basic support for iostat in perf
01bd8efcec444468db0275bbd71b49927f7e1544 perf stat: Introduce ':b' modifier
e4fe5d7349e0b1c0d3da5b6b3e1efce591e85bd2 perf iostat: Use system-wide mode if the target cpu_list is unspecified
146e5e733310379f51924111068f08a3af0db830 net-sysfs: try not to restart the syscall if it will fail eventually
9b6ff7eb666415e1558f1ba8a742f5db6a9954de net/l2tp: Fix reference count leak in l2tp_udp_recv_core
a00df2caffed3883c341d5685f830434312e4a43 ipv6: make exception cache less predictible
0857d6f8c759d95f89d0436f86cdfd189ef99f20 ipv6: When forwarding count rx stats on the orig netdev
9b115749acb24d11083ded4fe947ddd654a940e3 ipv6: add ip6_sock_set_v6only
bc2652b7ae1e1b85b5fbd3621c98a9c743ed89d6 selftest/net/xfrm: Add test for ipsec tunnel
0a7e0c3b5702a6a76cf7e5b8cc10a73e51dc221e selftest/net/ipsec.c: Remove unneeded semicolon
70bfdf62e93a4d73cfbaf83a3ac708a483ef7a71 selftests/net/ipsec: Add test for xfrm_spdattr_type_t
87eff9af7efb154cc4a940ed12efc803a0bf3fba pinctrl: remove pinctrl/machine.h inclusion from pinctrl/pinconf.h
43878eb7c83d3335af7737dcce1fa79071065dfe pinctrl: remove empty lines in pinctrl subsystem
5513b411ea5b6bf1f1aa3a704eca0a4b352ab9c5 Documentation: rename pinctl to pin-control
31f9a421a1d01538776db37ec9c5419a3a49d650 pinctrl: Introduce MODE group in enum pin_config_param
09e11caaa4cffac681963688b774e1aa3063b3a9 pinctrl: Add PIN_CONFIG_MODE_PWM to enum pin_config_param
57b55eeb755201832c2fc2df58818f64fc023fdb pinctrl: Keep enum pin_config_param ordered by name (part 2)
4b0c9948a4c2f446a11bd592bd7d23f06ad75d8e docs: update pin-control.rst references
a2aede970a8e12cadb8be779066cd64e6dd37e82 scsi: scsi_debug: Improve command duration calculation
223f91b48079227f914657f07d2d686f7b60aa26 scsi: scsi_debug: Fix scp is NULL errors
af1830956dc3dca0c87b2d679f7c91a8fe0331e1 scsi: core: Add mq_poll support to SCSI layer
4a0c6f432d153156f8f73078c4e6fa43bd3a1752 scsi: scsi_debug: Add new defer type for mq_poll
4309ea74b0c30f00c6a93b94db018ebb416dc14c scsi: core: Set shost as hctx driver_data
771f712ba5b0c6a54534421db98f560526a238a4 scsi: scsi_debug: Fix cmd duration calculation
2db4215f47557703dade2baccfa8da7b7e42a7e4 scsi: sd_zbc: Update write pointer offset cache
fc09acb7de31badb2ea9e85d21e071be1a5736e4 scsi: scsi_debug: Fix cmd_per_lun, set to max_queue
93048c0944150b316a15f92c41a4d626c8df37fd lib: Fix ia64 bootloader linkage
7bd57fbc4a4ddedc664cad0bbced1b469e24e921 vsprintf: don't obfuscate NULL and error pointers
c51f8f88d705e06bd696d7510aff22b33eb8e638 random32: make prandom_u32() output unpredictable
3744741adab6d9195551ce30e65e726c7a408421 random32: add noise from network and scheduling activity
c6e169bc146a76d5ccbf4d3825f705414352bd03 random32: add a selftest for the prandom32 code
90e7a6de62781c27d6a111fccfb19b807f9b6887 lib/scatterlist: Provide a dedicated function to support table append
3e302dbc6774a27edaea39a1d5107f0c12e35cf2 lib/scatterlist: Fix wrong update of orig_nents
7a60c2dd0f575ab14a457e99582af0ca1e072a74 drm: Remove SCATTERLIST_MAX_SEGMENT
0040a390d2fde44a03b3a05cf0cdf3e692ece60f counter: Introduce the Generic Counter interface
d49e6ee2d6c2b654c5eeb9aa1c4986cd1bec2582 counter: Simplify the count_read and count_write callbacks
b711f687a1c1c14c2da589e84e4f61b975196951 counter: Add support for Intel Quadrature Encoder Peripheral
ac3bd9d6b11f6e7ddea30d3779b9c5d870b4ddfb counter: intel-qep: Mark PM callbacks with __maybe_unused
93466212b9329616af2e4c7e5994d507d72e254d counter: intel-qep: Use to_pci_dev() helper
62f9eb7079a91fa19edc14971b38d8737704ef0f counter: intel-qep: Remove linux/bitops.h include
e2ff3198c580a3a3acfdc50cce5b5f8a941cbcd1 counter: Standardize to ERANGE for limit exceeded errors
493b938a14ed78d7e44c33d1c1e349656a16c360 counter: Rename counter_signal_value to counter_signal_level
394a0150a0644389ce4d587f5c67393308eec28c counter: Rename counter_count_function to counter_function
0c608dad2a771c0a11b6d12148d1a8b975e015d4 x86/process: Add AVX-512 usage elapsed time to /proc/pid/arch_status
9838e3bff0f92f23fcd50fe1ff1d4b3e91b8a448 x86/fpu: Make 'no387' and 'nofxsr' command line options useful
bbc55341b9c67645d1a5471506370caf7dd4a203 x86/fpu: Deactivate FPU state after failure during state load
b4e9c9549f62329d2412f899635fddc5212b9cd4 introduction of regset ->get() wrappers, switching ELF coredumps to those
dc12d7968f9c9540494deb1285854b18ca4465ec copy_regset_to_user(): do all copyout at once.
7717cb9bdd0421faa432a4e0d499fdba6e2394c8 regset: new method and helpers for it
0557d64d983e3dedead2d4b4e8abc49620d5f5d2 x86: switch to ->regset_get()
1ef5423a55c2ac6f1361811efe75b6e46d1023ed x86/fpu: Handle FPU-related and clearcpuid command line arguments earlier
9625895011d130033d1bc7aac0d77a9bf68ff8a6 x86/fpu: Fix copy_xstate_to_kernel() gap handling
3a3351126ee8f1f1c86c4c79c60a650c1da89733 x86/fpu: Simplify PTRACE_GETREGS code
eb6f51723f03c9a1c098ed196a31a03e626b9fb6 x86/fpu: Make copy_xstate_to_kernel() usable for [x]fpregs_get()
adc997b3d66d1cfa8c15a7dbafdaef239a51b5db x86/fpu: Use copy_xstate_to_uabi_buf() in xfpregs_get()
3f7f75634ccefefcc929696f346db7a748e78f79 x86/fpu: Use copy_xstate_to_uabi_buf() in fpregs_get()
5a32fac8dbe8adc08c10e2c8770c95aebfc627cd x86/fpu/regset: Move fpu__read_begin() into regset
dbb60ac764581e62f2116c5a6b8926ba3a872dd4 x86/fpu: Move fpu__write_begin() to regset
02b93c0b00df222b9ccf7a1fbd0eb59353d0a58c x86/fpu: Get rid of using_compacted_format()
b16313f71c1050ad5c92548925e0e9cec26989ab x86/fpu: Rename copy_xregs_to_kernel() and copy_kernel_to_xregs()
16dcf4385933a02bb21d0af86a04439d151ad42a x86/fpu: Rename fxregs-related copy functions
1cc34413ff3f18c30e5df89fefd95cc0f3b3292e x86/fpu: Rename xstate copy functions which are related to UABI
522e92743b35351bda1b6a9136560f833a9c2490 x86/fpu: Deduplicate copy_uabi_from_user/kernel_to_xstate()
08ded2cd18a09749e67a14426aa7fd1b04ab1dc0 x86/fpu: Get rid of the FNSAVE optimization
b76411b1b568311bfd89d03acc587ffc1548c26f x86/fpu: Rename initstate copy functions
01707b66535872f7a0d87f66078fd018d1814be0 x86/fpu: Rename "dynamic" XSTATEs to "independent"
a75c52896b6d42d6600db4d4dd9f7e4bde9218db x86/fpu/xstate: Sanitize handling of independent features
b2681e791dbcee6acb1dca7a5076a0285109ac4c x86/fpu: Rename and sanitize fpu__save/copy()
8a1dc55a3f3ef0a723c3c117a567e7b5dd2c1793 x86/cpu: Sanitize X86_FEATURE_OSPKE
fa8c84b77a54bf3cf351c8b4b26a5aca27a14013 x86/cpu: Write the default PKRU value when enabling PKE
371071131cd1032c1e9172c51234a2a324841cab x86/fpu: Use pkru_write_default() in copy_init_fpstate_to_fpregs()
e7ecad17c84d0f6bef635c20d02bbe4096eea700 x86/fpu: Rename fpu__clear_all() to fpu_flush_thread()
33344368cb08f8d6bf55a32aa052318d3a69ea84 x86/fpu: Clean up the fpu__clear() variants
1c61fada304c125c3f8a2b8eb1896406e4098a05 x86/fpu: Rename copy_kernel_to_fpregs() to restore_fpregs_from_fpstate()
1d9bffab116fadfe1594f5fea2b50ab280d81d30 x86/fpu: Move FXSAVE_LEAK quirk info __copy_kernel_to_fpregs()
65e952102122bf89f0e4f1bebf8664e32587aaed x86/fpu: Rename xfeatures_mask_user() to xfeatures_mask_uabi()
2ebe81c6d800576e1213f9d7cf0068017ae610c1 x86/fpu: Dont restore PKRU in fpregs_restore_userspace()
e84ba47e313dbc097bf859bb6e4f9219883d5f78 x86/fpu: Hook up PKRU into ptrace()
30a304a138738d71a09c730ca8044e9662de0dbf x86/fpu: Mask PKRU from kernel XRSTOR[S] operations
954436989cc550dd91aab98363240c9c0a4b7e23 x86/fpu: Remove PKRU handling from switch_fpu_finish()
0e8c54f6b2c8b1037cef9276e451522ee90ed969 x86/fpu: Don't store PKRU in xstate in fpu_reset_fpstate()
72a6c08c44e4460e39315ca828f60b8d5afd6b19 x86/pkru: Remove xstate fiddling from write_pkru()
cdcec1b77001e7f2cd10dccfc6d9b6d5d3f1f3ea x86/fpu/signal: Sanitize copy_user_to_fpregs_zeroing()
0a6c2e9ec91c96bde1e8ce063180ac6e05e680f7 x86/fpu/signal: Split out the direct restore code
fcb3635f5018e53024c6be3c3213737f469f74ff x86/fpu/signal: Handle #PF in the direct restore path
6f9866a166cd1ad3ebb2dcdb3874aa8fee8dea2f x86/fpu/signal: Let xrstor handle the features to init
93c2cdc975aab53c222472c5b96c2d41dbeb350c x86/fpu/xstate: Clear xstate header in copy_xstate_to_uabi_buf() again
b3f0a1ee9e3986106869eec49b61b40abdccdcf7 scsi: zfcp: Lift Request Queue tasklet & timer from qdio
df133f3f96257ee29696c0ed8bd198ec801dc810 virtio_net: bulk free tx skbs
5a2f966d0f3fa0ef6dada7ab9eda74cacee96b8a virtio_net: move tx vq operation under tx queue lock
22bc63c58e876cc359d0b1566dee3db8ecc16722 virtio_net: move txq wakeups under tx q lock
a7766ef18b33674fa164e2e2916cef16d4e17f43 virtio_net: disable cb aggressively
a54895fa057c67700270777f7661d8d3c7fda88a block: remove the request_queue to argument request based tracepoints
c6bf3f0e25f4c0f0ecce6cf8d1c589bd9d74d3cf block: use an on-stack bio in blkdev_issue_flush
de76fd893074ab2cea132c28ac9efd9d0434215e block: remove the 1 and 4 vec bvec_slabs entries
7a800a20ae6329e803c5c646b20811a6ae9ca136 block: use bi_max_vecs to find the bvec pool
f9ab49184af093f0bf6c0e6583f5b25da2c09ff5 blk-mq: Use llist_head for blk_cpu_done
9fb407179c6fd910005040bebb040094ef959b6c block: Remove unused blk_pm_*() function definitions
179d1600723670dc0d6ae8ce572e0e2c44b64763 block: remove superfluous param in blk_fill_rwbs()
1f83bb4b491472310ae7aeca505ed3725149906c blktrace: add blk_fill_rwbs documentation comment
c7ff651960a6ef11cef55479658aff504c34872f blktrace: fix blk_rq_issue documentation
b0719245098c27b36a9b52969af0300ae6219591 blktrace: fix blk_rq_merge documentation
b357e4a694ac4b95096715df253548f7e1f2723f block: get rid of the trace rq insert wrapper
94d4bffdda21baa2c749bc229c41811a7559dd15 blktrace: fix documentation for blk_fill_rw()
5116784039f0421e9a619023cfba3e302c3d9adc block: clear GD_NEED_PART_SCAN later in bdev_disk_changed
28af742875d7d2d8ae008701c60cd4b238f3e2b2 block: add sysfs entry for virt boundary mask
4bc2082311311892742deb2ce04bc335f85ee27a block/partitions/efi.c: Fix the efi_partition() kernel-doc header
e42cfb1da0bf33c313318da201730324c423351d block: Remove unnecessary elevator operation checks
556910e39249d55e23deaec479f49e7d85bc0d24 block: Introduce the ioprio rq-qos policy
46eae2e32a6adc368230b4df0501082c5233e99c block/mq-deadline: Add several comments
08a9ad8bf607388d768a341957d53eae64250c2d block/mq-deadline: Add cgroup support
60b6a7e6a0f4382cd689f9afdac816964fec2921 block: fix trace completion for chained bio
fd2ef39cc9a6b9c4c41864ac506906c52f94b06a blk: Fix lock inversion between ioc lock and bfqd lock
c06bc5a3fb42304d815a2dc41e324b5a97c9f7da block/mq-deadline: Remove a WARN_ON_ONCE() call
c28a61471c5898e832c6e8634b2659249761b833 block: export blk_next_bio()
d6da83d072c187d6a69d5a49e2320f62920889d7 loop: remove the l argument to loop_add
4157fe0b3d16ceca4316674a90c681405cdd23bf loop: don't call loop_lookup before adding a loop device
f9d107644aa4943b383986a8aa36125379eeaa81 loop: split loop_control_ioctl
18d1f200b3807c383d80cc00d6bbdee288e63b1f loop: move loop_ctl_mutex locking into loop_add
e5d66a10324f2a0c31153fd6210d99a9d00ef047 loop: don't allow deleting an unspecified loop device
b9848081465d8734441408129bd44311c7b6d644 loop: split loop_lookup
fb9b16e15cd70e21d8af7f03d700deb9509c2ce8 block: return errors from blk_execute_rq()
d80c228d44640f0b47b57a2ca4afa26ef87e16b0 block: fix the problem of io_ticks becoming smaller
3ce6e1f662a910970880188ea7bfd00542bd3934 loop: reintroduce global lock for safe loop_validate_file() traversal
fb7b9b0231ba8f77587c23f5257a4fdb6df1219e kyber: make trace_block_rq call consistent with documentation
0f78399551146bfbed357759e2ad5abb8d39e50a Revert "block/mq-deadline: Add cgroup support"
b6d2b054e8baaee53fd2d4854c63cbf0f2c6262a mq-deadline: Fix request accounting
6f5ddde41069fcd1f0993ec76c9dbbf9d021fd4d blkcg: fix memory leak in blk_iolatency_init
6497ef8df568afbf5f3e38825a4590ff41611a54 nbd: provide a way for userspace processes to identify device backends
d94d8158e1841813624e9fecf93a12e64e004dd8 scsi: qla2xxx: Add heartbeat check
84318a9f01ce13650ea23eb6362066bb95ccc9fe scsi: qla2xxx: edif: Add send, receive, and accept for auth_els
fac2807946c10b9a509b9c348afd442fa823c5f7 scsi: qla2xxx: edif: Add extraction of auth_els from the wire
dd30706e73b70d67e88fdaca688db7a3374fd5de scsi: qla2xxx: edif: Add key update
9efea843a906c6674ac6728f3f5db2cbfa3e1830 scsi: qla2xxx: edif: Add detection of secure device
7a09e8d92c6d56121910ccb2e8bc0d1affff66ee scsi: qla2xxx: edif: Add doorbell notification for app
44d018577f179383ea2c409f3a392e9dbd1a155e scsi: qla2xxx: edif: Add encryption to I/O path
71bef5020cd13e1aaa878d10481aafc1ecd4a8f6 scsi: qla2xxx: edif: Increment command and completion counts
0f783c2d640ac03ad3bb3ba6b7a1287ddf18031d scsi: qla2xxx: Fix spelling mistakes "allloc" -> "alloc"
e3d2612f583ba6e234cb7fe4559132c8f28905f1 scsi: qla2xxx: Fix use after free in debug code
4c15442d9c06ae6ce0a03fd69c4869f343d67473 scsi: qla2xxx: Add host attribute to trigger MPI hang
b15ce2f34cf42487982db0a8606095db1c8c8f28 scsi: qla2xxx: edif: Fix stale session
225479296c4fb2d3449e55b48eca2a9d6aca1e4e scsi: qla2xxx: edif: Reject AUTH ELS on session down
d07b75ba96497e9bfb9f0e673800a9d764ac212a scsi: qla2xxx: edif: Fix EDIF enable flag
4de067e5df12c4db4d3d930ba58354d23674f67c scsi: qla2xxx: edif: Add N2N support for EDIF
1dc64a360bda55d632202e3fef266cef7d4f6f00 scsi: qla2xxx: edif: Do secure PLOGI when auth app is present
f88444570072a6863f3e2bd67878560a51b187f2 scsi: qla2xxx: Fix NVMe retry
7a8ff7d9854a1727435557184c8255bbbca60920 scsi: qla2xxx: Fix NVMe session down detection
819225b03dc73294a563d3ee9e24e04c71e7afe0 scsi: smartpqi: Update device removal management
57d276bbbd322409bb6f7c6446187a29953f8ded arm64: hyperv: Add Hyper-V hypercall and register access utilities
512c1117fb2eeb944df1b88bff6e0c002990b369 arm64: hyperv: Add panic handler
9bbb888824e38cc2e9118ed351fe3d22403a73e1 arm64: hyperv: Initialize hypervisor on boot
9b16c2132f34316bf0b59d24357a788cc1e9e352 arm64: efi: Export screen_info
d32de9130f6c79533508e2c7879f18997bfbe2a0 efi/arm64: libstub: Deal gracefully with EFI_RNG_PROTOCOL failure
1c761ee9da1ac6ba7e40d14457fac94c87eaff35 efi/arm64: Update debug prints to reflect other entropy sources
e1df73e2d18b3b7d66f2ec38d81d9566b3a7fb21 efi/libstub/random: Align allocate size to EFI_ALLOC_ALIGN
3828c514726fce7d97063155c4749eafefd9fbd2 mptcp: Make mptcp_pm_nl_mp_prio_send_ack() static
5567d11c21a1d508a91a8cb64a819783a0835d9f x86/mce: Send #MC singal from task work
1e36d9c6886849c6f3d3c836370563e6bc1a6ddd x86/mce: Delay clearing IA32_MCG_STATUS to the end of do_machine_check()
c0ab7ffce275d3f83bd253c70889c28821d4a41d x86/mce: Recover from poison found while copying from user space
e1c06d2366e743475b91045ef0c2ce1bbd028cb6 x86/mce: Rename kill_it to kill_current_task
81065b35e2486c024c7aa86caed452e1f01a59d4 x86/mce: Avoid infinite loop for copy from user recovery
a4bec516b9c0823d7e2bb8c8928c98b535cf9adf powerpc/cacheinfo: Lookup cache by dt node and thread-group id
e9ef81e1079b0c4c374fba0f9affa7129c7c913b powerpc/smp: Use existing L2 cache_map cpumask to find L3 cache siblings
c5665868183fec689dbab9fb8505188b2c4f0757 mm: kmemleak: use the memory pool for early allocations
8c96f1bc6fc49c724c4cdd22d3e99260263b7384 mm/kmemleak: turn kmemleak_lock and object->lock to raw_spinlock_t
5e633302ace1f61f8ea5a3ce21e19a4d79126cca scsi: lpfc: vmid: Add support for VMID in mailbox command
bc292258c580a82c9baef0a64f66971e010a40a9 Bluetooth: Add support for reading security information
ff3b8df2bd758d97aa3dd7c021864be05fec9bd5 Bluetooth: Enable LE Enhanced Connection Complete event.
ec0bf6edc4ad80b722ebec12a3c7eb392e28d2cb Bluetooth: use crypto_shash_tfm_digest()
a10c907ce0e5e138c3da091fcb7c3d109a15aec5 Bluetooth: Add support for experimental features configuration
e625e50ceee18bc1e3fb1a6375e089405a797a4d Bluetooth: Introduce debug feature when dynamic debug is disabled
7e90de4ac1099d3f4e26023853d4aefd0d2a1dea Bluetooth: mgmt: read/set system parameter definitions
17896406ff3592d47b476ddd29276bf9cf8a26dd Bluetooth: implement read/set default system parameters mgmt
aececa645dc79ec004bfed3357c15cbf4b9b5746 Bluetooth: mgmt: Add commands for runtime configuration
4c54bf2b093bb2ae95e756342646d868e8101cb4 Bluetooth: Add get/set device flags mgmt op
7fceb17c6b480e0f2bd0e566a8231039fb8a809e Bluetooth: Add definitions for advertisement monitor features
e5e1e7fd470ccf2eb38ab7fb5a3ab0fc4792fe53 Bluetooth: Add handler of MGMT_OP_READ_ADV_MONITOR_FEATURES
b139553db5cd940d66095fb97de1727e9a19369f Bluetooth: Add handler of MGMT_OP_ADD_ADV_PATTERNS_MONITOR
bd2fbc6cb815b5171facb42526f6db206d920e13 Bluetooth: Add handler of MGMT_OP_REMOVE_ADV_MONITOR
b52729f27b1e3957bef7306d47abf9cd855524e7 Bluetooth: Notify adv monitor added event
cdde92e230719f77ac3a5f936e25ed4e01ec057f Bluetooth: Notify adv monitor removed event
8208f5a9d435e58ee7f53a24d9ccbe7787944537 Bluetooth: Update background scan and report device based on advertisement monitors
46605a271114f1243c807a55c607271c81e662d2 Bluetooth: mgmt: Use command complete on success for set system config
3ca33e3fb4f919b66a72145a87bfeada079e750d Bluetooth: Add hci_dev_lock to get/set device flags
49b020c1d236a36a4533e7db6d2604cb57ed4c51 Bluetooth: Adding a configurable autoconnect timeout
b83764f9220a4a14525657466f299850bbc98de9 Bluetooth: Fix kernel oops triggered by hci_adv_monitors_clear()
15d8ce05ebec37a0d701cde768bbf21349f2329d Bluetooth: le_simult_central_peripheral experimental feature
51b64c476a5ddc66d3459f14e98e5de9211e9e24 Bluetooth: Use whitelist for scan policy when suspending
b2cc23398e8166b38f8715026273503b081c2a7a Bluetooth: Enable RPA Timeout
cbbdfa6f331980c6786b4ca5df53c37b90df3246 Bluetooth: Enable controller RPA resolution using Experimental feature
cafd472a10ff3bccd8afd25a69f20a491cd8d7b8 Bluetooth: Fix memory leak in read_adv_mon_features()
87597482c68e1ea5408b25f756eb9c668b304311 Bluetooth: Report num supported adv instances for hw offloading
346ce5b7d624e8cc2ec5a6abd0ea00f0e06ea8ac Bluetooth: Add mgmt suspend and resume events
2f20216c1d6fe17c1a224f658be0dc6fab2269c7 Bluetooth: Emit controller suspend and resume events
c88e397968e3ada66041527222a648485f51ac54 Bluetooth: Update Adv monitor count upon removal
22fbcfc54705213fa358bcc1349db8bbdf398ddc Bluetooth: Replace BT_DBG with bt_dev_dbg in HCI request
a31489d2a368d2f9225ed6a6f595c63bc7d10de8 Bluetooth: Fix attempting to set RPA timeout when unsupported
c4f1f408168cd6a83d973e98e1cd1888e4d3d907 Bluetooth: Interleave with allowlist scan
3bc615fa93d2e89104edd924135451db8bbf631f Bluetooth: Refactor read default sys config for various types
80af16a3e473f0789d205810733a513279e5b6f9 Bluetooth: Add toggle to switch off interleave scan
31aab5c22e14c1c10110281d7f74b5e554f731b7 Bluetooth: Add helper to set adv data
12410572833a283ce92fcf9679ca8a2f372097ee Bluetooth: Break add adv into two mgmt commands
9bf9f4b6301ffbd51674e1168f8eeed214d2cf99 Bluetooth: Use intervals and tx power from mgmt cmds
7c395ea521e6c8d77f643be61bf2f0f3a1f5b3e8 Bluetooth: Query LE tx power on startup
4d9b952857533b61c662d59dc413094b0c4c8231 Bluetooth: Change MGMT security info CMD to be more generic
62acbbb661a1a7eb3ee155fe029a4901f4d5cc45 Bluetooth: btusb: print firmware file name on error loading firmware
81534d4835de52758176909f3e446f1d49809241 Bluetooth: btbcm: Add BCM4330 and BCM4334 compatibles
ac0565462e330a2b762ca5849a4140b29d725786 Bluetooth: btintel: Check firmware version before download
9b16bfbf411664697817385096ce59df453e1fb6 Bluetooth: btintel: Move operational checks after version check
21e31c6501d9c24dae8869628ccc80b36f2a3d01 Bluetooth: btusb: Consolidate code for waiting firmware download
604b3cf87fd217ac7d7aeaa94b0bebdf139a8c88 Bluetooth: btusb: Consolidate code for waiting firmware to boot
1f4ec585e6618ad75d5a82e58482ea2c5b4b7167 Bluetooth: btintel: Skip reading firmware file version while in bootloader mode
afd2daa26c7abd734d78bd274fc6c59a15e61063 Bluetooth: Add support for virtio transport driver
1f14a620f30b01234f8b61df396f513e2ec4887f Bluetooth: btusb: Fix failing to init controllers with operation firmware
1cb027f2f803d0a7abe9c291f0625e6bccd25999 Bluetooth: virtio_bt: add missing null pointer check on alloc_skb call return
79f4127a502c5905f04da1f20a7bbe07103fb77c Bluetooth: btusb: Fix memory leak
e5b0ad69c97a04f42834b24a6a0323ab15ccc9bb Bluetooth: Remove unneeded commands for suspend
ff02db13e9bfa01e0d66c5fa53da29bd1f1b208a Bluetooth: Allow scannable adv with extended MGMT APIs
2e1614f7d61e407f1a8e7935a2903a6fa3cb0b11 Bluetooth: SMP: Convert BT_ERR/BT_DBG to bt_dev_err/bt_dev_dbg
c29fb5f65072b784717ca16d6f136461d2ee04c4 Bluetooth: Remove trailing semicolon in macros
21dd118f8de318df2bebfcd44a722168bb705be7 Bluetooth: Fix wrong opcode error for read advertising features
353cac0e108f0484b101fd8cc6c2c0c5d9100ca6 Bluetooth: Fix mgmt status for LL Privacy experimental feature
3d34a71ff8f8f95abd757c4fac70f07091b13314 Bluetooth: Move the advertisement monitor events to correct list
06752d1678b49ac471f11950ebd6d29541828bba Bluetooth: Check inquiry status before sending one
0ae8ef674eb391d5a832967eb03cfe06904b31d0 Bluetooth: SMP: Fix variable dereferenced before check 'conn'
25e70886c20005ac7facbd997ff4c3526dcd0de3 Bluetooth: Use ext adv handle from requests in CCs
b6f1b79deabd32f89adbf24ef7b30f82d029808a Bluetooth: Do not set cur_adv_instance in adv param MGMT request
a61d67188f29ff678e94fb3ffba6c6d292e852c7 Bluetooth: Allow Microsoft extension to indicate curve validation
02ce2c2c24024aade65a8d91d6a596651eaf2d0a Bluetooth: mgmt: Fix the command returns garbage parameter value
fad646e16d3cafd67d3cfff8e66f77401190957e Bluetooth: use inclusive language in SMP
83b4b19551411c83bbcf677718ab5d9f60d982f6 Bluetooth: smp: Use the correct print format
3d4f9c00492b4e21641e5140a5e78cb50b58d60b Bluetooth: use inclusive language when filtering devices
a25fca4d3c18766b6f7a3c95fa8faec23ef464c5 Bluetooth: mgmt: Fix wrong opcode in the response for add_adv cmd
a83d958504734f78f42b1e3392d93816297e790a Bluetooth: Fix VIRTIO_ID_BT assigned number
a8fb40966f19ff81520d9ccf8f7e2b95201368b8 x86: ACPI: cstate: Optimize C3 entry on AMD CPUs
c3d5c2d96d69f2578d6fbf66e39cc2cf840d9812 PCI/IOV: Add sysfs MSI-X vector assignment interface
746a71d02b5d15817fcb13c956ba999a87773952 of/iommu: Make of_map_rid() PCI agnostic
a081bd4af4ce80d845a0bab355ab5d0822db8058 of/device: Add input id to of_dma_configure()
434b73e61cc65cdd26618af6fa4736c2ba1eb29b iommu/arm-smmu-v3: Use device properties for pasid-num-bits
9fb5fad562fa0a41c84691714d99c23f54168a9e iommu: remove DOMAIN_ATTR_PAGING
bc9a05eef113e75cfa792fdf24dae011bc3d5294 iommu: remove DOMAIN_ATTR_GEOMETRY
7e147547783a9035df816864b6a45ffbb254d700 iommu: remove DOMAIN_ATTR_NESTING
3189713a1b84ac02cce3217955ae68d0d67b15b7 iommu: remove iommu_set_cmd_line_dma_api and iommu_cmd_line_dma_api
a250c23f15c21c556becd4986f453255e545807c iommu: remove DOMAIN_ATTR_DMA_USE_FLUSH_QUEUE
4fc52b81e87be583efb834df5b58245cb9ddd3e7 iommu: remove DOMAIN_ATTR_IO_PGTABLE_CFG
c0aec6680b6c82fe893a546e322e1130cd5cf21e iommu: Statically set module owner
2d471b20c55e13c98d1dba413bf2de618e89cdac iommu: Streamline registration interface
be227f8e99a663d097536e9f9bc935fb26bdbc41 iommu/amd: Tidy up DMA ops init
340ec061f76502befea92d9913886991a60cf15e iommu/amd: Remove redundant assignment of err
395ad89d11fd93f79a6b942e91fc409807a63c4b iommu/arm-smmu-v3: Add stall support for platform devices
9cff922bba429b310507eac3b6cb5eb1b57e9ad1 iommu/arm-smmu-v3: Ratelimit event dump
dd8088d5a8969dc2b42f71d7bc01c25c61a78066 PM: runtime: Add pm_runtime_resume_and_get to deal with usage counter
0d97174aeadfc49ad8d281bbcd69fdfeb5fd2fcb iommu/arm-smmu: Implement ->probe_finalize()
b472191f0a0ce6d98d61e939118cfd6ad0ff91e7 iommu/arm-smmu: Check smmu->impl pointer before dereferencing
521f546b4e4cedfbfbb5787f940a592dd20dd1f2 iommu/vt-d: Support asynchronous IOMMU nested capabilities
ae7f09b14b4ff18f65790a906d7c2fe2561568b5 iommu/vt-d: Refactor prq_event_thread()
d5b9e4bfe0d8848aaf428bb4bbcc270fecadef35 iommu/vt-d: Report prq to io-pgfault framework
e93a67f5a0eef3e9ab5b4649cac5c3b831c6a9db iommu/vt-d: Add prq_report trace event
0f4834ab255bf488f20544e120713decfa77843e iommu/vt-d: Add PRQ handling latency sampling
606636dcbdbb73b1a4ed61be77c76ea1087f042d iommu/vt-d: Fix out-bounds-warning in intel/svm.c
934ed4580c0a13a49ab7c4cbf94cd1958c0679ed iommu/vt-d: Fix dereference of pointer info before it is null checked
cacffb7f7b45ba7649eedea4c196c6e9f1863bf3 iommu: Add an unmap_pages() op for IOMMU drivers
910c4406ccc9613de0a54abf910edc4bf8a575c0 iommu: Add a map_pages() op for IOMMU drivers
6ef0505158f7ca1b32763a3b038b5d11296b642b iommu/vt-d: Fix a deadlock in intel_svm_drain_prq()
48811c44349ffbb778d3e36b53beb03ad43a979c iommu/vt-d: Allow devices to have more than 32 outstanding PRs
3136895cc5b665c1ab406d78f90c0700a3551e74 iommu: Improve iommu_iotlb_gather helpers
febb82c208e481eee057c70fa3176bb48712a111 iommu: Factor iommu_iotlb_gather_is_disjoint() out
46983fcd67ac5a830d41ebe3755314db67a6dd16 iommu: Pull IOVA cookie management into the core
229496a0eb088b34849fcc3ab25f0f9e3f90794a iommu/arm-smmu: Drop IOVA cookie management
8d971243a9a7d73a410450951a21f298f1394dc7 iommu/dma: Remove redundant "!dev" checks
0df316b8ec04d849ec7908bc90b61a2dce46f3a9 ACPI: IORT: Handle device properties with software node API
392825e0c76cf9aca33e5a3bf981cde2a2c87251 iommu/fsl_pamu: remove fsl_pamu_get_domain_attr
ba58d1216e2b2d2320b50591b767f50b13c623a8 iommu/fsl_pamu: remove support for multiple windows
376dfd2a2ff41596a6efc8ea56f8b0de172b04a6 iommu/fsl_pamu: remove ->domain_window_enable
4eeb96f6efac10e66fd10e718d2adeece3879121 iommu/fsl_pamu: replace DOMAIN_ATTR_FSL_PAMU_STASH with a direct call
7d61cb6ff0122a017ae907aed62478a4db9c5991 iommu/fsl_pamu: enable the liodn when attaching a device
7876a83ffe8c23c7049a63c747a7b96cafaf10a4 iommu: remove iommu_domain_{get,set}_attr
d1e462a7a5f359cbb9a0e8fbfafcfb6657034105 sctp: add probe_interval in sysctl and sock/asoc/transport
fea1d5b17f821b78abbdadb9cb6f28fe433b635e sctp: send the next probe immediately once the last one is acked
058e6e0ed0eace43401c945082dec1d669b5b231 sctp: improve the code for pmtu probe send and recv update
eacf078cf4c7aa23e9591738511f142cc39b5186 sctp: send pmtu probe only if packet loss in Search Complete state
ba3fbe663635ae7b33a2d972c5d2def036258e42 netfilter: nf_conntrack: provide modparam to always register conntrack hooks
ac088a88b5d544b7b82f00214b1588b3c88a7fc6 netfilter: conntrack: fix error path in nf_conntrack_pernet_init()
cdf7f6a10d48589a819a98f0e3dd262079a38120 scsi: megaraid_sas: Driver version update to 07.719.03.00-rc1
06c3c3365b4bae5ef0f0525d3683b73cbae1e69c nvme: merge nvme_keep_alive into nvme_keep_alive_work
985c5a329dfe5ecb782551cddef48912961b83f1 nvme: allocate the keep alive request using BLK_MQ_REQ_NOWAIT
18479ddb7fd5fd0994bd10a95618bf866713a11b nvme: reduce checks for zero command effects
44ef5611c2a56538c60211672f73e4ff7df913c7 nvme: split init identify into helper
af7fae857ea22e9c2aef812e1321d9c5c206edde nvme-pci: allocate nvme_command within driver pdu
f4b9e6c90c572519041f4c5d9c4c3dd50aff42d4 nvme: use driver pdu command for passthrough
5befc7c26e5a98cd49789fb1beb52c62bd472dba nvme: implement non-mdts command limits
8609c63fce58e94d82f6b6bf29c7806062e2e867 nvme: fix handling of large MDTS values
a5d737f10022bd5d2acf5127935ff813fc832f6e nvme: factor out a nvme_ns_ioctl helper
89b3d6e60550ded5a88ae69cd04d17558e948878 nvme: simplify the compat ioctl handling
2f907f7f96d96c518652410b90ad2edb50305a4c nvme: simplify block device ioctl handling for the !multipath case
3557a4409701a132e8f86ad234ac8cf6e97b052e nvme: don't bother to look up a namespace for controller ioctls
2405252a680e2151046f4f256d706c3ca92fedef nvme: move the ioctl code to a separate file
1496bd4936d215fed40b008e9486c38e6acf01db nvme: move nvme_ns_head_ops to multipath.c
f5b9a51db29c31f4e486b08d1d823d6f75f2c2c7 nvme: factor out nvme_ns_open and nvme_ns_release helpers
2637baed78010eeaae274feb5b99ce90933fadfb nvme: introduce generic per-namespace chardev
48145b62563a9ae1ad631d6b576c6b9a798fcbec nvme: fix controller ioctl through ns_head
a97157440e1e69c35d7804d3b72da0c626ef28e6 nvme: move the fabrics queue ready check routines to core
d4060d2be1132596154f31f4d57976bd103e969d nvme-pci: fix controller reset hang when racing with nvme_timeout
3596a06583a16cf7f76d836440dfba5714c9c710 nvme: fix potential memory leaks in nvme_cdev_add
3e7d1a55165bdce2aaf1139ee8889e68eb29c263 nvme: open code nvme_put_ns_from_disk in nvme_ns_head_ctrl_ioctl
63d20f54a3d0cff17145716caff03a0d161abf44 nvme-fabrics: remove extra new lines in the switch
85b790a7ae0518dd745bbb97d532b83840d2db04 nvme: add a sparse annotation to nvme_ns_head_ctrl_ioctl
86b4284d98d6a47033b7bfc5b029a4fc45e4d370 nvme: open code nvme_{get,put}_ns_from_disk in nvme_ns_head_ioctl
f423c85cd392241f1521887b1396038cd1e4c68e nvme: open code nvme_put_ns_from_disk in nvme_ns_head_chr_ioctl
8b4fb0f968ffe73f619c06cb4040ecaa60327098 nvme: split nvme_report_zones
f1cf35e17ec308c0e76f55c6bccf84fff1a2d71a nvme: remove nvme_{get,put}_ns_from_disk
e7d4b5493a2d5a6225fc572e01167e12f89c6a42 nvme: factor out a nvme_validate_passthru_nsid helper
0d148efdf0f0414b2ed2dd9c31e71302bb9ce123 nvmet: allow mn change if subsys not discovered
cc72c4426764d1716839e9ec591ee8e161ed5cbc nvme: remove zeroout memset call for struct
be42a33b9252f0b3857cadb896e430ee17cccad4 nvme: use blk_execute_rq() for passthrough commands
5396fdac56d87d04e75e5068c0c92d33625f51e7 nvme: fix refcounting imbalance when all paths are down
be5eb933542629ad6a7d4c92097b1b472b1612d0 nvme: fix per-namespace chardev deletion
788961462f3471617749edf10d0fcafad410d2bb ARM: psci: cpuidle: Enable PSCI CPUidle driver
9ffeb6d08c3a4bbd7b1e33711b241f511e2ded79 PSCI: cpuidle: Refactor CPU suspend power_state parameter handling
49fdcd7577efe9efe863cdbb154f32a96970c1bc firmware: psci: Export functions to manage the OSI mode
e5bfb21d98b660580b8cdd8a442d12d38d655d11 firmware: smccc: Add HAVE_ARM_SMCCC_DISCOVERY to identify SMCCC v1.1 and above
f2ae97062a48b114bcf8fb2e99574d9ed2c2cd1b firmware: smccc: Refactor SMCCC specific bits into separate file
a4fb17465182c9fc13104e4df04d050892055205 firmware: smccc: Add function to fetch SMCCC version
269fd61e15d785b9e20786672765400732dde8a0 firmware: smccc: Fix missing prototype warning for arm_smccc_version_init
821b67fa46390baea0ac5139a60eaa48805261b2 firmware: smccc: Add ARCH_SOC_ID support
6825f17c950ca5691a057fa71bb1b649b7434014 firmware: smccc: Export both smccc functions
10942019040c5557556ec22aae0f771b2a1a1a6d firmware: psci: Extend psci_set_osi_mode() to allow reset to PC mode
0bc7474fb7673422b134e88feb49cde54b22bb75 psci: Split functions to v0.1 and v0.2+ variants
82ac62d1658b42392282550078a189ccd3f50214 psci: Replace psci_function_id array with a struct
6df3e14436f6ee254b1a4952d90ee8988be59c89 psci: Add accessor for psci_0_1_function_ids
294a9ddde6cdbf931a28b8c8c928d3f799b61cb5 arm64: kaslr: Announce KASLR status on boot
2203e1adb936a92ab2fd8f705e888af322462736 arm64: kaslr: Check command line before looking for a seed
2e8e1ea88cbcb19a77b7acb67f6ffe39cc15740c arm64: Use v8.5-RNG entropy for KASLR seed
ead5084cdf5af51445d219800c2ac8b01eb85f2f arm64: add credited/trusted RNG support
585524081ecdcde1c719e63916c514866d898217 random: random.h should include archrandom.h, not the other way around
9bceb80b3cc483e6763c39a4928402fa82815d3e arm64: kaslr: Use standard early random function
d433ab42fdc2c8a32e5df7d53833310f0ab9822c arm64: random: Remove no longer needed prototypes
a37e31fc97efe7f7c68cb381cf4390e472c09061 firmware: smccc: Introduce SMCCC TRNG framework
38db987316a38a3fe55ff7f5f4653fcb520a9d26 arm64: Add support for SMCCC TRNG entropy source
415de44076640483648d6c0f6d645a9ee61328ad x86/cpu: Fix migration safety with X86_BUG_NULL_SEL
7a8beb7ad51551babd17331f3c0f58af25916f67 integrity: remove pointless subdir-$(CONFIG_...)
e2861fa71641c6414831d628a1f4f793b6562580 evm: Don't deadlock if a crypto algorithm is unavailable
3d234b3313cd12157946522fe35f5a4574f31169 crypto: drop mask=CRYPTO_ALG_ASYNC from 'shash' tfm allocations
8433856947217ebb5697a8ff9c4c9cad4639a2cf evm: Fix a small race in init_desc()
465aee77aae857b5fcde56ee192b33dc369fba04 ima: Free the entire rule when deleting a list of rules
2bdd737c5687d6dec30e205953146ede8a87dbdd ima: Free the entire rule if it fails to parse
712183437ebebc89cd086ef96cf9a521fd97fd09 ima: Fail rule parsing when buffer hook functions have an invalid action
db2045f5892a9db7354442bf77f9b03b50ff9ee1 ima: Fail rule parsing when the KEXEC_CMDLINE hook is combined with an invalid cond
5f3e92657bbfb63ad3109433d843c89996114b03 ima: Fail rule parsing when appraise_flag=blacklist is unsupportable
ccf11dbaa07b328fa469415c362d33459c140a37 evm: Fix memleak in init_desc
7990ccafaa37dc6d8bb095d4d7cd997e8903fd10 ima: Fix the error code for restoring the PCR value
24c9ae23bdfa0642228e747849dd052fd4295c6c ima: Set correct casting types
6f20c8adb1813467ea52c1296d52c4e95978cb2f net/tcp_fastopen: fix data races around tfo_active_disable_stamp
43b90bfad34bcb81b8a5bc7dc650800f4be1787e net: send SYNACK packet with accepted fwmark
f5523423defb0d929e23813c8dd16c0131043a8c arm64: kvm: Fix IDMAP overlap with HYP VA
b5331379bc62611d1026173a09c73573384201d9 KVM: arm64: Only reschedule if MMU_NOTIFIER_RANGE_BLOCKABLE is not set
c058b1c4a5ea7b88cce4c961c1000acf482ea64b arm64: mte: system register definitions
9e5344e0ffc33f4fee899f98b6939a0682b1d9c3 arm64: mte: Fix typo in macro definition
94893fc9ad8cdb05fdb64e00128997bc530e2ca9 KVM: arm64: Limit the debug architecture to ARMv8.0
7d717558dd5ef10d28866750d5c24ff892ea3778 KVM: arm64: Reject VM creation when the default IPA size is unsupported
d0c94c49792cf780cbfefe29f81bb8c3b73bc76b KVM: arm64: Restore PMU configuration on first run
cf364e08ea1c5dd217afb658d510aaef7d0cc6f4 KVM: arm64: Upgrade VMID accesses to {READ,WRITE}_ONCE
8ce8a6fce9bfd3fcabe230ad104e2caf08b2e58d KVM: arm64: Trim guest debug exception handling
8bb084119f1acc2ec55ea085a97231e3ddb30782 KVM: arm64: Extract ESR_ELx.EC only
b02a4fd8148f655095d9e3d6eddd8f0042bcc27c cpumask: Make cpu_{online,possible,present,active}() inline
e40f74c535b8a0ecf3ef0388b51a34cdadb34fb5 cpumask: Introduce DYING mask
b5c4477366fb5e6a2f0f38742c33acd666c07698 sched: Use cpu_dying() to fix balance_push vs hotplug-rollback
2ea46c6fc9452ac100ad907b051d797225847e33 cpumask/hotplug: Fix cpu_dying() state tracking
868ad33bfa3bf39960982682ad3a0f8ebda1656e sched: Prevent balance_push() on remote runqueues
a7ba894821b6ade7bb420455f87020b2838d6180 sched/fair: Removed useless update of p->recent_used_cpu
a07cc1786dab69b896af226cf58163237837ee72 ice: Correct comment block style
7e408e07b42dceba4bc6630ff9ce9a55fcb043e0 ice: Drop leading underscores in enum ice_pf_state
a476d72abe6cdd2cccc3dbf5a844286cfe9684ed ice: Add new VSI states to track netdev alloc/registration
6a8b357278f5f8b9817147277ab8f12879dce8a8 ice: Respond to a NETDEV_UNREGISTER event for LAG
d25a0fc41c1f927bb914e72a03c1898052557406 ice: Initialize RDMA support
348048e724a0e8f08b63948d728d27596f6d3769 ice: Implement iidc operations
f9f5301e7e2d4fa2445aab3ec889dac6b34ea63e ice: Register auxiliary device to provide RDMA
1c08052ec49e4ef4549ebbc7a43f27694e08935d ice: wait for reset before reporting devlink info
bd557d97978ea3e22653117a39184b5db70c7093 ice: Reduce scope of variables
b81c191c468bb9f9e63cb19cdf090732e3218dce ice: Fix a memory leak in an error handling path in 'ice_pf_dcb_cfg()'
bfe84435090a6c85271b02a42b1d83fef9ff7cc7 ice: Correctly deal with PFs that do not support RDMA
73e30a62b19b9fbb4e6a3465c59da186630d5f2e ice: Avoid crash from unnecessary IDA free
e6ba5273d4ede03d075d7a116b8edad1f6115f4d ice: Fix race conditions between virtchnl handling and VF ndo ops
0299faeaf8eb982103e4388af61fd94feb9c2d9f ice: Remove toggling of antispoof for VF trusted promiscuous mode
1a8c7778bcde5981463a5b9f9b2caa44a327ff93 ice: Fix VF true promiscuous mode
8c54499a59b026a3dc2afccf6e1b36d5700d2fef zram: don't fail to remove zram during unloading module
5a4b653655d554b5f51a5d2252882708c56a6f7e zram: avoid race between zram_remove and disksize_store
00c5495c54f785beb0f6a34f7a3674d3ea0997d5 zram: replace fsync_bdev with sync_blockdev
bd1dd4c5f5286df0148b5b316f37c583b8f55fa1 powerpc/pseries: Prevent free CPU ids being reused on another node
413d6ed3eac387a2876893c337174f0c5b99d01d powerpc/vas: Move VAS API to book3s common platform
06c6fad9bfe0b6439e18ea1f1cf0d178405ccf25 powerpc/powernv/vas: Rename register/unregister functions
1a0d0d5ed5e3cd9e3fc1ad4459f1db2f3618fce0 powerpc/vas: Add platform specific user window operations
3856aa542d90ed79cd5ed4cfd828b1fb04017131 powerpc/vas: Create take/drop pid and mm reference functions
3b26797350352479f37216d674c8e5d126faab66 powerpc/vas: Move update_csb/dump_crb to common book3s platform
7bc6f71bdff5f8921e324da0a8fad6f4e2e63a85 powerpc/vas: Define and use common vas_window struct
8f3a6c92802b7c48043954ba3b507e9b33d8c898 powerpc/pseries/vas: Define VAS/NXGZIP hcalls and structs
b22f2d88e435cdada32581ca1f11b9806adf459a powerpc/pseries/vas: Integrate API with open/close windows
6d0aaf5e0de00491de136f387ebed55604cedebe powerpc/pseries/vas: Setup IRQ and fault handling
4cb266074aa17e9cafed3a92e9f43b161516569f powerpc/pseries/vas: Declare pseries_vas_fault_thread_fn() as static
61cb9ac66b30374c7fd8a8b2a3c4f8f432c72e36 powerpc/vas: Fix potential NULL pointer dereference
f63816e43d90442684cd2fd74f602cf3c5fae69c PM: domains: Allow to abort power off when no ->power_off() callback
c6a113b52302adcfadda63af81dc05f7a669fbc8 PM: domains: enable domain idle state accounting
5cc2013bfeee756a1ee6da9bfbe42e52b4695035 regmap-irq: use fwnode instead of device node in add_irq_chip()
d315c627a18249930750fe4eb2b21f3fe9b32ea4 regmap: irq: Convert to use irq_domain_create_legacy()
7008e58c63bc8468e8d16154e25d780198b3ecfc driver core: Fix lockdep warning on wfs_lock
4e1d9a737d00f2cc811dc5654f82c92c7d80e98c PM: sleep: Add dev_wakeup_path() helper
c95d64012ad7de2747923b0caf80e195e940606c Revert "driver core: Avoid deferred probe due to fw_devlink_pause/resume()"
3b052a3e30f2eb92dcae9fd89af48d5a13045737 Revert "driver core: Rename dev_links_info.defer_sync to defer_hook"
96d8a9168ef5539beba9951dffe6eda07b74833e Revert "driver core: Don\'t do deferred probe in parallel with kernel_init thread"
999032ece38be271ca28a6c0ba5f2e4dd4012425 Revert "driver core: Remove check in driver_deferred_probe_force_trigger()"
c84b90909e475a2eb4934b4d92fdd10e73e75805 Revert "driver core: fw_devlink: Add support for batching fwnode parsing"
7b337cb3ebde384cba7405b61dfb84200bf623bf driver core: Add fwnode link support
04f63c213b671d89db35f4239f57fa1edeb736a8 driver core: Redefine the meaning of fwnode_operations.add_links()
c2c724c868c42c5166bf7aa644dd0a0c8d30b47a driver core: Add fw_devlink_parse_fwtree()
25ac86c6dbe62fba9b97e997fa648cdbe2d40173 driver core: Use device's fwnode to check if it is waiting for suppliers
8a06d1ea061739dd2e60aff3d64a58892e4031cf of: property: Update implementation of add_links() to create fwnode links
e82a840cb1c1c83d01a9b81bb63b6cf1c09239d7 efi: Update implementation of add_links() to create fwnode links
f9aa460672c9c56896cdc12a521159e3e67000ba driver core: Refactor fw_devlink feature
e21d740a3fe5ad2db7b5f5c2331fe2b713b1edba driver core: platform: reorder functions
16085668eacdc56c46652d0f3bfef81ecace57de driver core: platform: change logic implementing platform_driver_probe
9c30921fe7994907e0b3e0637b2c8c0fc4b5171f driver core: platform: use bus_type functions
0aec2da436623abe19b80b21dd9fc5ec9300a152 driver core: platform: Introduce platform_get_mem_or_io()
46e85af0cc53f35584e00bb5db7db6893d0e16e5 driver core: platform: don't oops in platform_shutdown() on unbound devices
cffa4b2122f5f3e53cf3d529bbc74651f95856d5 regmap: debugfs: Fix a memory leak when calling regmap_attach_dev
f6bcb4c7f366905b66ce8ffca7190118244bb642 regmap: debugfs: Fix a reversed if statement in regmap_debugfs_init()
e020ff611ba9be54e959e6b548038f8a020da1c9 driver core: Fix device link device name collision
f0ada6da3a0d69682e21f1783d02676e0fbf1bc1 device property: Add missed header in fwnode.h
9274124f023b5c56dc4326637d4f787968b03607 net: stricter validation of untrusted gso packets
6dd912f82680761d8fb6b1bb274a69d4c7010988 net: check untrusted gso_size at kernel entry
0f6925b3e8da0dbbb52447ca8a8b42b371aac7db virtio_net: Do not pull payload in skb->head
7c6d2ecbda83150b2036a2b36b21381ad4667762 net: be more gentle about silly gso requests coming from user
52cbd23a119c6ebf40a527e53f3402d2ea38eccb udp: fix skb_copy_and_csum_datagram with odd segment sizes
4ecc8633056b8d2f214c6ce860a50837e5c8fb41 ice: Add support for VF rate limiting
f3ccfda1931977b80267ba54070a1aeafa18f6ca ethtool: extend coalesce setting uAPI with CQE mode
45808361d4491217de11cdf0661d657081f8f422 RDMA: Manual changes for sysfs_emit and neatening
e28bf1f03b01b135dc0052b3a195c2860e10f216 RDMA: Convert various random sprintf sysfs _show uses to sysfs_emit
f675ba125bd38acb95d84da04e5fd89aa36cc429 RDMA/core: Remove unused req_ncomp_notif device operation
ae360f41b1263887ada64d9a708e12c1f52f91b9 RDMA: Fix kernel-doc compilation warnings
1fb7f8973f51ca1a7ffe61a2c779ed15f57f3d82 RDMA: Support more than 255 rdma ports
780278c2c8bb50fc01b70a7392af6ab3ba360074 IB/hfi1: Rework AIP and VNIC dummy netdev usage
d58c23c9254894d438ce5c516745cf694eac86b7 IB/core: Only update PKEY and GID caches on respective events
3595c398f6dbab79a38550ff26104c6ec1035cd3 Revert "IB/cm: Mark stale CM id\'s whenever the mad agent was unregistered"
7345201c39633fc4c82dae7315da7154efaf2459 IB/cm: Improve the calling of cm_init_av_for_lap and cm_init_av_by_path
76039ac9095f5ee5ec7fb95ccb6a5460d5f8c3a2 IB/cm: Protect cm_dev, cm_ports and mad_agent with kref and lock
3902b429ca14f325123057f3e5cafe8d45d00263 RDMA/rxe: Implement invalidate MW operations
cdd0b85675aecc77eba8c38d55070a014a49ab98 RDMA/rxe: Implement memory access through MWs
570d2b99d00d9e023328c0a0b8000ab485113384 RDMA/rxe: Disallow MR dereg and invalidate when bound
bf194997c7319ba968d3f7c47258b4be5f01f81e RDMA: Fix kernel-doc warnings about wrong comment
c5f8f2c5e5bfd4fd5fc5c413051ad14b7873b1fd IB/core: Removed port validity check from ib_get_cached_subnet_prefix
1993cbed65bb590a3479d175fc1ac3c775b6bba8 RDMA/rxe: Fix extra copies in build_rdma_network_hdr
efcbea302698b610c30f92167b933294f2350d5f RDMA/core/sa_query: Remove unused argument
467f432a521a284c418e3d521ee51840a5e23424 RDMA/core: Split port and device counter sysfs attributes
a32f433522c97d2f07c060517f1f0f4058aa211b RDMA/core: Split gid_attrs related sysfs from add_port()
a4676388e2e21215b32f33b42ac5725e315a6680 RDMA/core: Simplify how the gid_attrs sysfs is created
2ca1cca4352ed50a363159aa9b8eeb6182446580 RDMA/core: Simplify how the port sysfs is created
b7066b32a14fd21480efd93cb0c24807d6b28484 RDMA/core: Create the device hw_counters through the normal groups mechanism
d89eb509aaa36a08f983eac58b9fccd61ff3d375 RDMA/core: Remove the kobject_uevent() NOP
054239f45c6346025afe252fe6f470a4093f61f9 RDMA/core: Expose the ib port sysfs attribute machinery
526a12c8c56e80930621cedcf8b5f2fc3a169037 RDMA/cm: Use an attribute_group on the ib_port_attribute intead of kobj's
8f1708f19f919135a5d7eddcdccc15b7fd7d524d RDMA/hfi1: Use attributes for the port sysfs
d7407d16699884817f3a93218e77b0801942362b RDMA: Change ops->init_port to ops->port_groups
69d86a66bdf0d5aa7e687751203e5e6a94124fb5 RDMA/core: Allow port_groups to be used with namespaces
915e4af59f0b6a9e72dd9ef0fda853b87ae556c5 RDMA: Remove rdma_set_device_sysfs_group()
3cea7b4a7d9b3cb8036ca799fe4254a710cd7e40 RDMA/core: Fix incorrect print format specifier
5471eea5d3bf850316f1064a6f57b34c444bce67 perf/x86: Reset the dirty counter to prevent the leak for an RDPMC task
700a9cf0527ca2d7d3e4980fef2deb4883432ab6 drivers/perf: convert sysfs snprintf family to sysfs_emit
fb62d67586afc046f3783d819985c737f6b0b666 drivers/perf: convert sysfs sprintf family to sysfs_emit
b323dfe02e56627e4eaed7cf59dc609da67a1651 drivers/perf: Simplify EVENT ATTR macro in xgene_pmu.c
f4b4b45652578357031fbbef7f7a1b04f6fa2dc3 perf/x86: Fix out of bound MSR access
944138f048f7d7591ec7568c94b21de8df2724d4 perf stat: Enable BPF counter with --for-each-cgroup
38fe0e0156c037c060f81fe4e36549fae760322d libperf: Move 'idx' from tools/perf to perf_evsel::idx
fba7c86601e2e42d7057db47bf6d45865a208b8c libperf: Move 'leader' from tools/perf to perf_evsel::leader
2e6263ab54322bac27589d1102f7a955d3f7ff80 libperf: Adopt evlist__set_leader() from tools/perf as perf_evlist__set_leader()
7d1575014a63caeebb13b000ee152ce711580119 selftests/net: GRO coalesce test
9af771d2ec044ffc19192711ac29f1d5c31dc181 selftests/net: allow GRO coalesce test on veth
025efa0a82dfa79ac2b126f622ba9244f795e707 selftests: add simple GSO GRE test
b99ac1841147eefd8d8b52fcf00d7d917949ae7f kselftests/net: add missed setup_loopback.sh/setup_veth.sh to Makefile
a985442fdecb59504e3a2f1cfdd3c53af017ea5b selftests: net: properly support IPv6 in GSO GRE test
0cda7d4bac5fd29dceb13df26083333fa99d6bb4 selftests: net: switch to socat in the GSO GRE test
da353fac65fede6b8b4cfe207f0d9408e3121105 net/tls: Fix flipped sign in tls_err_abort() calls
523a4cf491b3c9e2d546040d57250f1a0ca84f03 bpf: Use MAX_BPF_FUNC_REG_ARGS macro
d3e3bf5b4c673e79c5a11608f53d4e0059a7ec79 selftests/bpf: Restructure xsk selftests
b267e5a458a719f3f5eaaaebe87c5f4a13584832 selftests/bpf: Introduce xsk statistics tests
69c087ba6225b574afb6e505b72cb75242a3d844 bpf: Add bpf_for_each_map_elem() helper
9de7f0fdab326a37c9f741f0f6c0f1cbc320a5ab selftests/bpf: Add hashmap test for bpf_for_each_map_elem() helper
6b9e3331347ee9e84fe5c71d3eba7ec204f9bb25 selftests/bpf: Add arraymap test for bpf_for_each_map_elem() helper
a01d935b2e0916d32cb567f90c32a0c4eb46993c tools/bpf: Remove bpf-helpers from bpftool docs
62b379a233a79e6f4d2e8b14750ae8fa13b8caf8 selftests/bpf: Templatize man page generation
accbd33a9b0328777899a85d148040e4d8921d87 selftests/bpf: Test syscall command parsing
6197e5b7b1b5acd1e9b04bdf3527c694d84a27e2 docs/bpf: Add bpf() syscall command reference
a0d73acc1e4bc1c542701e37b2e0e233fe6a271d selftests/bpf: Fix typo in Makefile
e6a4750ffe9d701c4d55212b14b615e63571d235 bpf, xdp: Make bpf_redirect_map() a map operation
ee75aef23afe6e88497151c127c13ed69f41aaa2 bpf, xdp: Restructure redirect actions
f2cc020d7876de7583feb52ec939a32419cf9468 tracing: Fix various typos in comments
a46410d5e4975d701d526397156fa0815747dc2f libbpf: Constify few bpf_program getters
b910eaaaa4b89976ef02e5d6448f3f73dc671d91 bpf: Fix NULL pointer dereference in bpf_get_local_storage() helper
34747c4120418143097d4343312a0ca96c986d86 bpf: Refactor btf_check_func_arg_match
e6ac2450d6dee3121cd8bbf2907b78a68a8a353d bpf: Support bpf program calling kernel function
e623bfdef713ddda1b9f57d1759df3a1cd97255a selftests: xsk: Remove struct ifaceconfigobj
ef9280789773c974b45f809d58b47b481f2cf9f5 selftests: xsk: Remove thread for netns switch
9866bcd6635c264aaf3de1d89e44773a269048eb selftests: xsk: Split worker thread
99f9bcb65705dda07288b759c569d30d8a4f297c selftests: xsk: Remove Tx synchronization resources
9445f8c765838edf84dd0d3910ff309bdab8f95f selftests: xsk: Refactor teardown/bidi test cases and testapp_validate
0464b1ed07677f869005bde3fade1580b48de67e selftests: xsk: Remove sync_mutex_tx and atomic var
27e1ca2525de264901b5c2d9d0c4403c3fe8608c selftests: xsk: Implement bpf_link test
7651910257c8fb1ec76b50bef0330fcf739105c7 selftests: xsk: Remove thread attribute
96539f1c5efb0022b94412e8623722aad23dee6b selftests: xsk: Remove mutex and condition variable
ae6b6a17800f34dd5215286b44a4e99a0a1cf862 selftests: xsk: Remove unused defines
6944caad78fc4de4ecd0364bbc9715b62b020965 powerpc/bpf: Remove classical BPF support for PPC32
4ea76e90a97d22f86adbb10044d29d919e620f2e powerpc/bpf: Move common functions into bpf_jit_comp.c
40272035e1d0edcd515ad45be297c4cce044536d powerpc/bpf: Reallocate BPF registers to volatile registers when possible on PPC32
fff13c4bb646ef849fd74ced87eef54340d28c21 bpf: Add a ARG_PTR_TO_CONST_STR argument type
d044d9fc1380b66917dcb418ef4ec7e59dd6e597 selftests/bpf: Add docs target as all dependency
ee7c3ec3b4b1222b30272624897826bc40d79bc5 powerpc/ebpf32: Use standard function call for functions within 32M distance
a8fad73e3334151196acb28c4dcde37732c82542 bpf: Remove unnecessary map checks for ARG_PTR_TO_CONST_STR
c7ef5ec9573f05535370d8716576263681cabec7 libbpf: Refactor BTF map definition parsing
704e2beba23c45eaa056b1c03b5e1fb221e03f80 selftests/bpf: Test ringbuf mmap read-only and read-write restrictions
a2baf4e8bb0f306fbed7b5e6197c02896a638ab5 bpf: Fix potentially incorrect results with bpf_get_local_storage()
b303c6df80c9f8f13785aa83a0471fca7e38b24d kbuild: compute false-positive -Wmaybe-uninitialized cases in Kconfig
78a5255ffb6a1af189a83e493d916ba1c54d8c75 Stop the ad-hoc games with -Wno-maybe-initialized
d9c9e4db186ab4d81f84e6f22b225d333b9424e3 bpf: Factorize bpf_trace_printk and bpf_seq_printf
7b15523a989b63927c2bb08e9b5b0bbc10b58bef bpf: Add a bpf_snprintf helper
38d26d89b31d0766d431471572cc9b007ca19c98 bpf: Lock bpf_trace_printk's tmp buf before it is written to
8e8ee109b02c0e90021d63cd20dd0157c021f7a4 bpf: Notify user if we ever hit a bpf_snprintf verifier bug
48cac3f4a96ddf08df8e53809ed066de0dc93915 bpf: Implement formatted output helpers with bstr_printf
e2d5b2bb769fa5f500760caba76436ba3a10a895 bpf: Fix nested bpf_bprintf_prepare with more per-cpu buffers
8afcc19fbf083a8459284d9a29b4b5ac1cb2396c bpf: Clarify a bpf_bprintf_prepare macro
0af02eb2a7d76ca85a1ecaf4b3775e2c86408fab bpf: Avoid using ARRAY_SIZE on an uninitialized pointer
b24abcff918a5cbf44b0c982bd3477a93e8e4911 bpf, kconfig: Add consolidated menu entry for bpf with core options
08389d888287c3823f80b0216766b71e17f0aba5 bpf: Add kconfig knob for disabling unpriv bpf by default
6bdacdb48e94ff26c03c6eeeef48c03c5e2f7dd4 bpf: Fix BPF_JIT kconfig symbol dependency
ff2e6efda0d5c51b33e2bcc0b0b981ac0a0ef214 kbuild: Quote OBJCOPY var to avoid a pahole call break the build
3990ed4c426652fcd469f8c9dc08156294b36c28 bpf: Stop caching subprog index in the bpf_pseudo_func insn
5ae17501bc62a49b0b193dcce003f16375f16654 scsi: core: Avoid leaving shost->last_reset with stale value if EH does not run
fd00faa375fbb9d46ae0730d0faf4a3006301005 PCI/VPD: Embed struct pci_vpd in struct pci_dev
7bac54497c3e3b2ca37b7043f1fa78586540f10e PCI/VPD: Determine VPD size in pci_vpd_init()
fe7568cf2f2dc3a0783f6ffdb3802c1ce2085466 PCI/VPD: Treat invalid VPD like missing VPD capability
00e1a5d21b4ff514593554167b28a8caeda1497f PCI/VPD: Defer VPD sizing until first access
bf2928c7a284e31f9f91a004b5dca09c522157c0 PCI/VPD: Add pci_read/write_vpd_any()
3331325c6347492dfbe31f6b2bfdaee9b0689cd5 PCI/VPD: Use pci_read_vpd_any() in pci_vpd_size()
9308fd4074551f222f30322d1ee8c5aff18e9747 x86/MCE: Group AMD function prototypes in <asm/mce.h>
f26d2580a7ddc84aa9e51e47fdbb5ad63dbee5a7 x86/mce/amd: Cleanup threshold device remove path
3e0fdec858d82c829774f271e88b5ceb17051551 x86/mce/amd, edac: Remove report_gart_errors
cb09a379724d299c603a7a79f444f52a9a75b8d2 x86/topology: Set cpu_die_id only if DIE_TYPE found
f799ada6bf2397c351220088b9b0980125c77280 net: sched: act_mirred: drop dst for the direction from egress to ingress
79fbd3e1241cea83dded06db2b8bcd5893d877d7 RDMA: Use the sg_table directly and remove the opencoded version from umem
ac0fffa0859b8e1e991939663b3ebdd80bf979e6 RDMA/core: Set sgtable nents when using ib_dma_virt_map_sg()
3c9450c053f88e525b2db1e6990cdf34d14e7696 powerpc/perf: Fix missing is_sier_aviable() during build
9e2b7fa2df4365e99934901da4fb4af52d81e820 vrf: Fix fast path output packet handling with async Netfilter rules
1ba2e507f55c5b0cbde8c0fbfe0d9e39612a3e52 nvme-tcp: Do not reset transport on data digest errors
ae5e6886b4f8d62a9d01fea4221a854e541a1cd0 nvme: use return value from blk_execute_rq()
b58da2d270dbcc67db73f15028774d27c85e16d7 nvme: update keep alive interval when kato is modified
9edceaf43050f5ba1dd7d0011bcf68a736a17743 nvme: avoid race in shutdown namespace removal
e371af033c560b9dd1e861f8f0b503142bf0a06c nvme-tcp: fix incorrect h2cdata pdu offset accounting
298ba0e3d4af539cc37f982d4c011a0f07fca48c nvme: keep ctrl->namespaces ordered
25e1f67eda4a19c91dc05c84d6d413c53efb447b nvme-tcp: fix H2CData PDU send accounting (again)
b37a466837393af72fe8bcb8f1436410f3f173f3 netdevice: add the case if dev is NULL
1160dfa178eb848327e9dec39960a735f4dc1685 net: Remove redundant if statements
c781ff12a2f37a9795e13bf328e5053d3e69f9e0 ethtool: Allow network drivers to dump arbitrary EEPROM data
96d971e307cc0e434f96329b42bbd98cfbca07d2 ethtool: Add fallback to get_module_eeprom from netlink command
c97a31f66ebcab54c006878142fb683c6116bed1 ethtool: wire in generic SFP module access
be85dbfeb37c8c4d4344da2ee594d78034b82489 ethtool: add FEC statistics
ddc78b3621242dd691ef4c234a80e316422c2876 docs: ethtool: document standard statistics
f09ea6fb12723d6726293d68de00b6307368bd76 ethtool: add a new command for reading standard stats
ca2244547ec7505d1cf61d43f5e76e3ffd99cf77 ethtool: add interface to read standard MAC stats
bfad2b979ddcc330c08bb071eb3c3f7b3411a681 ethtool: add interface to read standard MAC Ctrl stats
a8b06e9d40d8b18c41c8ce060e8dc004fa59e708 ethtool: add interface to read RMON stats
d1f0a5e1fb4e2f2f603bec8df79ca51768f2bdae ethtool: stats: clarify the initialization to ETHTOOL_STAT_NOT_SET
e9377a911d772d27ef2810c241154ba479bad368 ethtool: add missing EEPROM to list of messages
c71b99640d2d350ee3146452c1057bd59cb2c5e0 ethtool: stats: Fix a copy-paste error
51c96a561f244e25a4a2afc7a48b92b4adf8050d ethtool: Fix NULL pointer dereference during module EEPROM dump
78c57f22e3c87ab0a2844d7c9a120eba51ae34f4 ethtool: Use correct command name in title
913d026fbfaf114ff87afcc77fa4e9309f87f114 ethtool: Document correct attribute type
f5fe211d13af52077bb66e89a5410fa75f691fe8 ethtool: Decrease size of module EEPROM get policy array
37a025e83902903df658489665499a548a53423b ethtool: Document behavior when module EEPROM bank attribute is omitted
b8c48be23c2d03834fe01c3ea757d9df8b97013d ethtool: Use kernel data types for internal EEPROM struct
0dc7dd02ba7ab5f623f5e3a36443ec441364285a ethtool: Validate module EEPROM length as part of policy
88f9a87afeeec5dfdda3651f3db96d0006172d91 ethtool: Validate module EEPROM offset as part of policy
f4bd73b5a950866f6c6fc98a7b684d307c5d586a af_unix: Return errno instead of NULL in unix_create1().
93065ac753e4443840a057bfef4be71ec766fde9 mm, oom: distinguish blockable mode for mmu notifiers
431f42fdfdb36f06f43c711fc59be9b814d8fb22 mm/oom_kill.c: clean up oom_reap_task_mm()
33490af3f5c15757448b6c454ca93b48a333aa1b mm, mmu_notifier: be explicit about range invalition non-blocking mode
4e15a073a168b62311db911a55c4d4f1500c2821 Revert "mm, mmu_notifier: annotate mmu notifiers with blockable invalidate callbacks"
5d6527a784f7a6d247961e046e830de8d71b47d1 mm/mmu_notifier: use structure for invalidate_range_start/end callback
bf198b2b34bfd4bc9bd6abb33bf650b74329a2ac mm/mmu_notifier: pass down vma and reasons why mmu notifier is happening
c6d23413f81bd69935afedaf1da9d55b03febf58 mm/mmu_notifier: mmu_notifier_range_update_to_read_only() helper
8402ce61bec28a1b73ec467b4c146f1e3f587044 mm/mmu_notifiers: check if mmu notifier callbacks are allowed to fail
df2ec7641bd03624a7e54cc926e8c3f75c7a84d8 mm/mmu_notifiers: use the right return code for WARN_ON
ba170f76b69d1d45a60eaa9ec920c8fddd4c16f3 mm, notifier: Catch sleeping/blocking for !blockable
984cfe4e252681d516df056b982e3c47b66fba92 mm/mmu_notifier: Rename struct mmu_notifier_mm to mmu_notifier_subscriptions
1991722a70ffb1f0199a5690a31a5c7822007b1f mm/mmu_notifiers: Use 'subscription' as the variable name for mmu_notifier
5292e24a6acf5694e0a32c31e3321964176bc17e mm/mmu_notifiers: Use 'interval_sub' as the variable for mmu_interval_notifier
63886bad904b73f7470fd582fbc41c5ae04d6785 mm/mmu_notifier: silence PROVE_RCU_LIST warnings
d49653f35adff8c778e7c5fbd4dbdf929594eca8 mm: mmu_notifier: fix and extend kerneldoc
f920e413ff9c33c297c0bde7cc5fe8cd736112e2 mm: track mmu notifiers in fs_reclaim_acquire/release
c2655835fd8cabdfe7dab737253de3ffb88da126 mm/mmu_notifiers: ensure range_end() is paired with range_start()
5143192cd410c4fc83be09a2e73423765aee072b mm/migrate: add a flags parameter to migrate_vma
998427b3ad2c769082853880cf353557ec0ec77d mm/notifier: add migration invalidation type
c1a06df6ebf6ca98fb7a672fe447c7469d6c1968 mm/migrate: fix migrate_pgmap_owner w/o CONFIG_MMU_NOTIFIER
5e0fb5df2ee871b841f96f9cb6a7f2784e96aa4e x86/mm: Add TLB purge to free pmd/pte page interfaces
6ea2738e0ca0e626c75202fb051c1e88d7a950fa x86/mm/init: Add helper for freeing kernel image pages
c40a56a7818cfe735fc93a69e1875f8bba834483 x86/mm/init: Remove freed kernel image areas from alias mapping
e5cb113f2dbc8125f31005faebab161a2a84ebe6 mm: make free_reserved_area() return "const char *"
5494c3a6a0b965906ffdcb620d94079ea4cb69ea x86/mm: Report which part of kernel image is freed
b3b07077b01ecbbd98efede778c195567de25b71 mm/huge_memory.c: make __thp_get_unmapped_area static
97d3d0f9a1cf132c63c0b8b8bd497b8a56283dd9 mm/huge_memory.c: thp: fix conflict of above-47bit hint address and PMD alignment
e6be37b2e7bddfe0c76585ee7c7eee5acc8efeab mm/huge_memory.c: add missing read-only THP checking in transparent_hugepage_enabled()
55a68c823951855f3ec313fdb85100db84284505 memcg: replace in_interrupt() by !in_task() in active_memcg()
a500cb342c84a4c4696850304124bc801331c4a8 mm/page_isolation: guard against possible putback unisolated page
e56dc9e2949edff7932474f2552dd134734cc857 nfsd: remove fault injection code
460d27091ae2c23e7ac959a61cd481c58832db58 nfsd: rename lookup_clientid->set_client
7950b5316e40d99dcb85ab81a2d1dbb913d7c1c8 nfsd: refactor set_client
f71475ba8c2a77fff8051903cf4b7d826c3d1693 nfsd: remove unused set_client argument
1722b04624806ced51693f546edb83e8b2297a77 nfsd: simplify nfsd4_check_open_reclaim
848fdd62399c638e65a1512616acaa5de7d5c5e8 NFS: Don't set NFS_INO_INVALID_XATTR if there is no xattr cache
7f7e7a4006f74b031718055a0751c70c2e3d5e7e nfsd: helper for laundromat expiry calculations
c6c7f2a84da459bcc3714044e74a9cb66de31039 nfsd: Ensure knfsd shuts down when the "nfsd" pseudofs is unmounted
e844d307d46cfa7e09cdb671941bfd5f1be86773 svcrdma: Add a "deferred close" helper
2a1e4f21d84184f7ff5768ee3d3d0c30b1135867 svcrdma: Normalize Send page handling
579900670ac770a547ff607a60c02c56a7d27bd7 svcrdma: Remove unused sc_pages field
beab450d8ea93cdf4c6cb7714bdc31a9e0f34738 NFS: Fix fscache invalidation in nfs_set_cache_invalid()
217fd6f625af591e2866bebb8cda778cf85bea2e nfsd: ensure new clients break delegations
94d202d5ca39d0eb757d16ef2624b013fb64f64d NFSv42: Copy offload should update the file size when appropriate
f7104cc1a9159cd0d3e8526cb638ae0301de4b61 nfsd4: Fix forced-expiry locking
3f015d89a47cd8855cd92f71fff770095bd885a1 NFSv42: Fix pagecache invalidation after COPY/CLONE
5f81880d5204ee2388fd9a75bb850ccd526885b7 sysfs, kobject: allow creating kobject belonging to arbitrary users
fbdeaed408cf2728c62640c10848ddb1b67e63d3 net: create reusable function for getting ownership info of sysfs inodes
d1753390274f7760e5b593cb657ea34f0617e559 sysfs: Fix regression when adding a file to an existing group
25368d7cefcd87a94ccabcc6f9f31796607bbe4e tools/power/turbostat: Remove Package C6 Retention on Ice Lake Server
e9d3092f6d7c21031c8ac10ba2016ae0482a39fe tools/power turbostat: save original CPU model
1b439f01b67c77a374adbbd97ad0c745b7abb09b tools/power turbostat: formatting
38c6663a68903cf1187003129cd1873551979865 tools/power turbostat: elevate priority of interval mode
3c070b2abf85b92455c2721d0a9edc68893ab6c1 tools/power turbostat: version 2021.05.04
24062fe85860debfdae0eeaa495f27c9971ec163 perf/smmuv3: Enable HiSilicon Erratum 162001800 quirk
bdc5c744c7b6457d18a95c26769dad0e7f480a08 drivers/perf: Fix kernel panic when rmmod PMU modules during perf sampling
f32ed8eb0e3f0d0ef4ddb854554d60ca5863a9f9 drivers/perf: Prevent forced unbinding of PMU drivers
2b694fc92a34e8c8b774a17266656d72b8cd4429 perf: arm_dsu: Support DSU ACPI devices
53c218da220c3619b5befec4674ffa35d590092a driver/perf: Add PMU driver for the ARM DMC-620 memory controller
20116dd93f4d0b2e84a25ee83e3238586dbb79ec drivers/perf: Prevent forced unbinding of ARM_DMC620_PMU drivers
c8e3866836528a4ba3b0535834f03768d74f7d8e perf/arm_dmc620_pmu: Fix error return code in dmc620_pmu_device_probe()
6c8cfbf5db42bc300372d893a140ea0879fb0772 perf: remove duplicate check on fwnode
2c255223362e9747075320ba618bd5960b76e04f perf/smmuv3: Support sysfs identifier file
f0c140481d1b807217cacdcf11d24cfa407a7a53 perf: Constify static struct attribute_group
e20ac6c54a93335b56a6d057aa5da27183f573fa perf/arm_pmu_platform: Clean up with dev_printk
1ceeb8d430f5ea780b8f7d02466a7454cc845528 perf/arm-dmc620: Use irq_set_affinity()
f265fd166bce9837ce1ae6c2a4b56f8bd18d1fe4 drivers/perf: arm_pmu: Fix some coding style issues
f4370a85d62e645107afc8a35a979be962b19258 i40e: Register auxiliary devices to provide RDMA
fa0cf568fd76550c1ddb806c03a65a1a4a1ea909 RDMA/irdma: Add irdma Kconfig/Makefile and remove i40iw
4b5f4d3fb40898a9f2ccf58030e69ea11fbd6eed RDMA: Split the alloc_hw_stats() ops to port and device variants
0032640204a7d73bef163638c34a4642f8c9ed07 RDMA/irdma: Use correct kconfig symbol for AUXILIARY_BUS
5d6451b1489ad1781a0778cc876bf26a21910413 ceph: shut down access to inode when async create fails
8cfc0c7ed34f7929ce7e5d7c6eecf4d01ba89a84 ceph: properly handle statfs on multifs setups
cbed4ff76bbb8083780dcd6ebb5bed2af25b9505 ceph: split 'metric' debugfs file into several files
17e9fc9fca0c4e0d5924f4b92f89c2c2b6b4be15 ceph: clean-up metrics data structures to reduce code duplication
c02cb7bdc4501debc3e71a4d2daf7286c48e1d38 ceph: add a new metric to keep track of remote object copies
d89d04ab6030c73b24bbe032fb474e0fb74dd891 KVM: move EXIT_FASTPATH_REENTER_GUEST to common code
059e5c321a65657877924256ea8ad9c0df257b45 x86/msr: Rename MSR_K8_SYSCFG to MSR_AMD64_SYSCFG
cad347fab142bcb9bebc125b5ba0c1e52ce74fdc KVM: selftests: add a memslot-related performance benchmark
fb1070d18edb37daf3979662975bc54625a19953 KVM: X86: Use _BITUL() macro in UAPI headers
fb0f94794bb7558c078ce37b1a6e30d881fd7888 selftests: kvm: do only 1 memslot_perf_test run by default
000ac42953395a4f0a63d5db640c5e4c88a548c5 selftests: kvm: fix overlapping addresses in memslot_perf_test
f53b16ad64408b5376836708f8cf42dbf1cf6098 selftests: kvm: Add support for customized slot0 memory size
4f05223acaeaabe0a1a188e25fab334735d85c5e KVM: selftests: Add aarch64/debug-exceptions test
4c63c923408595eede59ce9fef6f4ab868928549 KVM: selftests: Hoist APIC functions out of individual tests
768d134d8cb4cb595966d8c509a9329a075a5fa2 KVM: selftests: Introduce x2APIC register manipulation functions
2fdef3a2ae01dfd928c4b42c5a3b76546170a74c kvm: add PM-notifier
7d62874f69d7e5c1c1063a5848075bd1adff3998 kvm: x86: implement KVM PM-notifier
fdf513e37a3bd9f498179c878cfcd59693bf507c KVM: x86: Use common 'enable_apicv' variable for both APICv and AVIC
4651fc56bad01d340844c5fbf1e1f817639208ab KVM: x86: Drop vendor specific functions for APICv/AVIC enablement
644f706719f0297bc5f65c8891de1c32f042eae5 KVM: x86: hyper-v: Introduce KVM_CAP_HYPERV_ENFORCE_CPUID
10d7bf1e46dc19d964f0f67d2a6d20df907742d1 KVM: x86: hyper-v: Cache guest CPUID leaves determining features availability
e2e1cc1fbe54a9520956a4539a3676d2ebf122dd KVM: selftests: Introduce hyperv_features test
6dba940352038b56db9b591b172fb2ec76a5fd5e KVM: x86: Introduce KVM_GET_SREGS2 / KVM_SET_SREGS2
158a48ecf776d0ebc916befcb0dc0862f136a31f KVM: x86: avoid loading PDPTRs after migration when possible
d2e5601907bd294411920a84c0231473557d16b9 KVM: nSVM: Move TLB flushing logic (or lack thereof) to dedicated helper
b5129100398ac3b6364cfa6dbd55abfd36cf7202 KVM: x86: Drop skip MMU sync and TLB flush params from "new PGD" helpers
50a417962a80525da54fa74105bcf17b479cd4bc KVM: nVMX: Consolidate VM-Enter/VM-Exit TLB flush and MMU sync logic
0dbb11230437895f7cd6fc55da61cef011e997d8 KVM: X86: Introduce KVM_HC_MAP_GPA_RANGE hypercall
c62efff28bb5eb60d60415a0dd0c864c64be0671 KVM: x86: Stub out is_tdp_mmu_root on 32-bit hosts
63c0cac938edfa5d72bfbe8f1eeb9d47b397829c KVM: x86/mmu: Refactor is_tdp_mmu_root into is_tdp_mmu
0485cf8dbe964b6cc485178da6ee8ae7b2d0d15c KVM: x86/mmu: Remove redundant root_hpa checks
96d41cfd1bb9964602fabea9c7e72ca723f749db KVM: selftests: Zero out the correct page in the Hyper-V features test
95be3709ff4e3af848c285ebddea9916a24d6d0f KVM: selftests: Use "standard" min virtual address for Hyper-V pages
a9db9609c0e41d8c06611678d45dff36ded563dc KVM: selftests: Add helpers to allocate N pages of virtual memory
106a2e766eae7161a0500048004bbc2f75ea9a98 KVM: selftests: Lower the min virtual address for misc page allocations
a75a895e6457784fdf2a0a20a024ae29ff8a7f28 KVM: selftests: Unconditionally use memslot 0 for vaddr allocations
4307af730b8543714a76be9d77422a5762671435 KVM: selftests: Unconditionally use memslot '0' for page table allocations
cce0c23dd944068d7f07a03938d5b3cbcdaf4148 KVM: selftests: Add wrapper to allocate page table page
6d96ca6a602b24013c8be1160d40c667e133ddb9 KVM: selftests: Rename x86\'s page table "address" to "pfn"
f681d6861b0c7b28af1a339171602a6e82b1cbda KVM: selftests: Add PTE helper for x86-64 in preparation for hugepages
b007e904b36a945d01a9080d754702ca5f9c68b4 KVM: selftests: Genericize upper level page table entry struct
ad5f16e422258d51414e7d8aaf856000eec9dfce KVM: selftests: Add hugepage support for x86-64
ef6a74b2e55e97daf4c7ba2d287878dc3f693b41 KVM: sefltests: Add x86-64 test to verify MMU reacts to CPUID updates
0193cc908b5ae8aff2e2d2997ca5d4ae26ed24d4 KVM: stats: Separate generic stats from architecture specific ones
cb082bfab59a224a49ae803fed52cd03e8d6b5e0 KVM: stats: Add fd-based API to read binary stats data
fcfe1baeddbf1c7c448b44c82586d0cbc8abc9f5 KVM: stats: Support binary stats retrieval for a VM
ce55c049459cff0034cc1bcfdce3bf343a2d6317 KVM: stats: Support binary stats retrieval for a VCPU
fdc09ddd40645b0e3f245e4512fd4b4c34cde5e5 KVM: stats: Add documentation for binary statistics interface
0b45d58738cd67d8b63bf093bd56f2f57a00f642 KVM: selftests: Add selftest for KVM statistics data binary interface
bc9e9e672df9f16f3825320c53ec01b3d44add28 KVM: debugfs: Reuse binary stats descriptors
4e9c0d80dbbd2dd411d726ed10eccaaba6d63a08 KVM: x86/mmu: Use MMU's role to get CR4.PSE for computing rsvd bits
27de925044e18eb056d6157305c841b1408621b5 KVM: x86/mmu: Let guest use GBPAGES if supported in hardware and TDP is on
19238e75bd8ed8ffe784bf5b37586e77b2093742 kvm: x86: Allow userspace to handle emulation errors
39bbcc3a4e39a41a494ea245858db581bf83e752 selftests: kvm: Allows userspace to handle emulation errors.
f8f0edabcc09fafd695ed2adc0eb825104e35d5c KVM: selftests: x86: Address missing vm_install_exception_handler conversions
004d62eb4e57db3c391ed0df007cc11c93b6fbeb kvm: debugfs: fix memory leak in kvm_create_vm_debugfs
8b9671643d2f6f567669aa54f15b8a2791d324d5 docs: kvm: fix build warnings
a9fd134be7b94622fe487ae6db48bf9514ad1a53 docs: kvm: properly format code blocks and lists
c33e05d9b067433252b1008d2f37bf64e11151f1 KVM: selftests: Introduce access_tracking_perf_test
0b8f11737cffc1a406d1134b58687abc29d76b52 KVM: Add infrastructure and macro to mark VM as bugged
7ee3e8c39d3aed6ff4cc618d86ba9128f0c80087 KVM: Export kvm_make_all_cpus_request() for use in marking VMs as bugged
ec1cf69c376970f42761e641cf5074b84f8db243 KVM: X86: Add per-vm stat for max rmap list size
c5c8c7c53004cb70715320018c3b4287071c1cfd KVM: x86/mmu: Make walk_shadow_page_lockless_{begin,end} interoperate with the TDP MMU
2476b5a1b16ced78a80629da8ff87538d5c95073 KVM: selftests: Test access to XMM fast hypercalls
13c2c3cfe01952575b1dd5e24d450fcccff93bc0 KVM: selftests: fix hyperv_clock test
609e6202ea5f4ab5fa6f6bed9da5594e3e94c570 KVM: selftests: Support multiple slots in dirty_log_perf_test
32bdc01988413031c6e743714c2b40bdd773e5db KVM: selftests: Move vcpu_args_set into perf_test_util
ffbe17cadaf564b5da0e4eabdcff1b719e184a76 KVM: x86: remove dead initialization
3165af738ed3224a84ead7d97c6909de2e453b4c KVM: Allow to have arch-specific per-vm debugfs files
b0a1637f64b06586752cc507b94e4aeff02588d6 KVM: x86: APICv: fix race in kvm_request_apicv_update on SVM
30eed56a7e1cbefe933a33d661827e5c72cd136f KVM: SVM: remove svm_toggle_avic_for_irq_window
06ef813466c63ff1a61b5f99592e58d049c2c1ac KVM: SVM: avoid refreshing avic if its state didn't change
73143035c214f3b0ac5cc2393197f828adeefc1e KVM: SVM: AVIC: drop unsupported AVIC base relocation code
f95937ccf5bd5e0a6bbac2b8e65a87982ffae403 KVM: stats: Support linear and logarithmic histogram statistics
0176ec51290f8ef543a8c18a02e932d6ccedbbc5 KVM: stats: Update doc for histogram statistics
d49b11f080b77f5bd66eec938e01b87a16ef201f KVM: selftests: Add checks for histogram stats bucket_size field
87bcc5fa092f82a9890f9e73e4f4c7016ef64049 KVM: stats: Add halt_wait_ns stats for all architectures
8ccba534a1a5c6565220c81113d6157571f380cb KVM: stats: Add halt polling related histogram stats
4293ddb788c1a98bdfa6479bcfd63ad5ce0a5ce6 KVM: x86/mmu: Remove redundant spte present check in mmu_set_spte
ca41c34cab1f50f13ab5ac95739483871637a684 KVM: x86/mmu: Relocate kvm_mmu_page.tdp_mmu_page for better cache locality
3cc4e148b96263313e3dce926eae569c942bb74e KVM: stats: Add VM stat for remote tlb flush requests
61e52f1630f54713f5dffa1ab4bb49772235aa5a KVM: selftests: Add a test for KVM_RUN+rseq to detect task migration bugs
7c236b816ef16c2969a88ced658dab667e9dd4ee KVM: selftests: Create a separate dirty bitmap per slot
1ad32105d78e4b5da60688eca014bcd45271318f KVM: x86: selftests: test simultaneous uses of V_IRQ from L1 and L0
fbf094ce524113c694acabf3d385883f88372829 selftests: KVM: Call ucall_init when setting up in rseq_test
7b0035eaa7dab9fd33d6658ad6a755024bdce26c KVM: selftests: Ensure all migrations are performed when test is affined
e1fc1553cd78292ab3521c94c9dd6e3e70e606a1 kvm: x86: Add AMD PMU MSRs to msrs_to_save_all[]
ee3b6e41bc26c628b0c06aacd2758a316fe583be KVM: stats: remove dead stores
b71df82d05b7a38f38c4b1109c57b209b8ed43ff tools headers UAPI: Synch KVM's svm.h header with the kernel
49f2675f5b4d5d0af22c963f9f6152abb1bb15aa tools headers UAPI: Sync linux/kvm.h with the kernel sources
bb000f640e76c4c2402990d0613d4269e9c6dd29 KVM: s390: restore old debugfs names
de7cd3f6761f49bef044ec49493d88737a70f1a6 KVM: x86: check for interrupts before deciding whether to exit the fast path
a1e638da1ba4078caa0374507cf0d9ec140a255f KVM: selftests: Change backing_src flag to -s in demand_paging_test
9f2fc5554a4093e80084389f760d0b06ec2ff782 KVM: selftests: Refactor help message for -s backing_src
a7cc099f2ec3117678adeb69749bef7e9dde3148 KVM: x86/mmu: kvm_faultin_pfn has to return false if pfh is returned
187c8833def8a191c7f01d7932eac1bd2ab84af1 KVM: x86: Use rw_semaphore for APICv lock to allow vCPU parallelism
f70cad1085d1e01d3ec73c1078405f906237feee mptcp: stop relying on tcp_tx_skb_cache
1e1d9d6f119c55c05e8ea78ed3e49046690abffd mptcp: handle pending data on closed subflow
6da14d74e2bd07bca2cba10878dda5dc0485d59c mptcp: cleanup sysctl data and helpers
ff5a0b421cb23bf6b2898939ffef5b683045d9d3 mptcp: faster active backup recovery
fc1b4e3b6274379a1ed398e19b850561ccd765db mptcp: add mibs for stale subflows processing
0d199e4363b482badcedba764e2aceab53a4a10a mptcp: do not shrink snd_nxt when recovering
9e65b6a5aaa3236488b4f4e3e8b914d73124a5a5 mptcp: remove tx_pending_data
3241a9c029344ca4aa0ef1fa9f0f010d5bbc2a85 mptcp: re-arm retransmit timer if data is pending
dacb5d8875cc6cd3a553363b4d6f06760fcbe70c tcp: fix page frag corruption on page fault
eafb1d64030abf5f885026c2074d120c13e0ca9d mm, slub: don't call flush_all() from slab_debug_trace_open()
b3fd64e1451b5efd94aa0ebc755e02558e6f3ca1 mm, slub: allocate private object map for debugfs listings
e500059ba55268e1c5212632e4f21e45f54dc6d9 mm, slub: move disabling/enabling irqs to ___slab_alloc()
0b303fb402862dcb7948eeeed2439bd8c99948b5 mm, slub: do initial checks in ___slab_alloc() with irqs enabled
fa417ab7506f9234100e249938d13e94a8c404e8 mm, slub: move disabling irqs closer to get_partial() in ___slab_alloc()
6c1dbb674c5cf76d23381160577d34bead60b76b mm, slub: restore irqs around calling new_slab()
3f2b77e35a4fc3c83132a1a1a2fc7a2c803a2514 mm, slub: validate slab from partial list or page allocator before making it cpu slab
9f101ee89465e0b2c11b477f5b55e03039b2c308 mm, slub: check new pages with restored irqs
4b1f449dedd2ff1eede4ced08a503e13c8d668ce mm, slub: stop disabling irqs around get_partial()
a019d20162586ae5b14bf26c94f1943b1d24a832 mm, slub: move reset of c->page and freelist out of deactivate_slab()
cfdf836e1f93df56ddd9a1d48b2deadf02f441fe mm, slub: call deactivate_slab() without disabling irqs
5a836bf6b09f99ead1b69457ff39ab3011ece57b mm: slub: move flush_cpu_slab() invocations __free_slab() invocations out of IRQ context
a2b4ae8bfd9c10e3c1c1966bd3c8d8b7c9026aaf mm, slub: make slab_lock() disable irqs with PREEMPT_RT
25c00c506e8176d03f9ad821cc349230dfb5dc1a mm, slub: use migrate_disable() on PREEMPT_RT
bd0e7491a931f5a2960555b10b9551464ff8cc8e mm, slub: convert kmem_cpu_slab protection to local_lock
0c11b88883db1a83980633fc88091d3cdd79bd48 tty: 8250_of: Use software emulated RS485 direction control
283e096ffb7077c2b677eee043ff36965e43d37b serial: 8250: Deduplicate ->rs485_config() callback
6d3e54e1955ed1cd2da9a90c944290e91772cbcb serial: 8250: Sanitize rs485 config harder
058bc104f7ca5c83d81695ee96f03dbd93bae518 serial: 8250: Generalize rs485 software emulation
f40a6be4a4e4985aef5365007e2459d757f26bdd serial: 8520_port: Fix function param documentation
e3ae2365efc14269170a6326477e669332271ab3 net: sock: introduce sk_error_report
6b335f8205e9d47569ebb2db90ede2c4aa7615ce docs: networking: Convert bridge.txt to rst
c03e2fa753020c18f9c0b4017be3f12816039841 docs: fix some broken documentation references
70e4272b4c81828e7d942209bae83b9d92752cfe net: bridge: add no_linklocal_learn bool option
223fd0adfa8af36d5d9b5d38016e579ee052f367 bridge: broute: make broute a real ebtables table
be0c5677970d4f21dc701136a178437aad9983b2 net: bridge: fdb: br_fdb_update can take flags directly
5d1fcaf35d74b4188d238e46f0be37c14a01f169 net: bridge: fdb: eliminate extra port state tests from fast-path
5a46facbbcd454985992b5109185329aebf82a02 net: bridge: vlan: add helpers to check for vlan id/range validity
8f4cc940a149b9fe013a191d6d8dc87aee9a204f net: bridge: netlink: add extack error messages when processing vlans
f545923b4a6bd7abedac50ea3fce76c713be1b74 net: bridge: vlan: notify on vlan add/delete/change flags
c284b54590083017193a836362daa4489e782028 switchdev: mrp: Extend switchdev API to offload MRP
32c0f0bed5bb08625083ed7f5b661c842d63ebd1 docs: networking: convert switchdev.txt to ReST
89c1e111cb4860b51efef50474cd259c2702edc6 switchdev: mrp: Remove the variable mrp_ring_state
4b3a61b030d1131dcf3633a276158a3d0a435a47 bridge: mrp: Set the priority of MRP instance
c6676e7d62cfb5cb7c1c5320a26f3634a11afdb0 bridge: mrp: Add support for role MRA
899426b3bdd947541ba4af8c767575889c8b842a net: neighbor: add fdb extended attribute
31cbc39b6344916c20452e43a9171009214c409c net: bridge: add option to allow activity notifications for any fdb entries
b5f1d9ec283bd28a452cf61d7e5c2f2b1a9cccda net: bridge: add a flag to avoid refreshing fdb when changing/adding
9b14d1f8a76682124c5e465196685a9833ff526e bridge: mrp: Fix endian conversion and some other warnings
cf7c52748f64606f5f9111e7cbdb2ffb281a60af switchdev: mrp: Extend switchdev API for MRP Interconnect
2801758391ba6b0c20e253b956355e1b15ad85a2 bridge: uapi: mrp: Extend MRP attributes for MRP interconnect
78c1b4fb0e3ed6907955abf3fc8eea74704fe072 bridge: mrp: Extend br_mrp for MRP interconnect
537ed5676d4648abc8ef75b5c04d773d961aee2f bridge: mrp: Implement the MRP Interconnect API
b14a9fc45202c37a8540e1afb26b4783666a60c1 __netif_receive_skb_core: don't untag vlan from skb on DSA master
eab3227b1240bdcc06c0a01a3fc5bfd2bc12f406 net: bridge: mcast: rename br_ip's u member to dst
88d4bd180419a7cde3947f191dc4e26fbb19f80b net: bridge: mdb: add support for add/del/dump of entries with source
7d07a68c251080f8f2cfd071b7b3f7d1093a3375 net: bridge: mcast: when igmpv3/mldv2 are enabled lookup (S,G) first, then (*,G)
8f8cb77e0b22d9044d8d57ab3bb18ea8d0474752 net: bridge: mcast: add rt_protocol field to the port group struct
085b53c8beabf9b379762f73aaac562d6c428923 net: bridge: mcast: add sg_port rhashtable
b08123684bd55fa6d6ee4b52d4ae3040fadb5aa2 net: bridge: mcast: install S,G entries automatically based on reports
8266a0491e92d39dc9af739e8380a0daa9b8836b net: bridge: mcast: handle port group filter modes
9116ffbf1dd71f953ffda4198d01f82d3ca16df8 net: bridge: mcast: add support for blocked port groups
094b82fd5342fccaf27b1727a55546dc4b32047e net: bridge: mcast: handle host state
7470558240330f04dbf940430813233935314f78 net: bridge: mcast: remove only S,G port groups from sg_port hash
90c628dd47ff4178f645b34938470bf43d02d123 net: bridge: extend the process of special frames
955062b03fa62b802a1ee34fbb04e39f7a70ae73 net: bridge: mcast: add support for raw L2 multicast groups
0e761ac08fd8d53dfc53bb762748a61ffe3fe7b8 net: bridge: explicitly convert between mdb entry state and port group flags
537e48259eacbd92f3463900c20cc3acd9dd2072 selftests: net: bridge: factor out mcast_packet_test
450b0b84c6609e7ec1fb0276c8a7e4efa9e78a4c selftests: net: lib: add support for IPv6 mcast packet test
95e6f430ebfee51ac174e234388e7c6e8216ff2c selftests: net: bridge: factor out and rename sg state functions
0169b8205431589b945c29a576c65f2037a5bc26 bridge: mrp: Use hlist_head instead of list_head for mrp
bfd042321a7afa769c855c37f2bbe2703dc72ef2 bridge: mrp: Implement LC mode for MRP
efb5b338da6a0d474cdab3bfc11edef32ed0c173 net: bridge: fix misspellings using codespell tool
b7a9e0da2d1c954b7c38217a29e002528b90d174 net: switchdev: remove vid_begin -> vid_end range from VLAN objects
ffb68fc58e9640762be891f9aebe4f5aac615ab3 net: switchdev: remove the transaction structure from port object notifiers
cf6def51badebbacaedd3999a4d94761197e18b4 net: switchdev: delete switchdev_port_obj_add_now
bae33f2b5afea932176c1b9096851c81dc0983de net: switchdev: remove the transaction structure from port attributes
4b400fea76e13aec5a5752c1463b74df95178ced mlxsw: spectrum_switchdev: remove transactional logic for VLAN objects
9e10b9e65699394bae44429dc2958132738736a3 net: bridge: multicast: rename src_size to addr_size
54bea721964166cbb26490faa0bd414a1c75b406 net: bridge: multicast: pass host src address to IGMPv3/MLDv2 functions
0ad57c99e857f4c7354c3629d4168061fba4a22a net: bridge: multicast: __grp_src_block_incl can modify pg
e7cfcf2c18c5fd96320a69e468fdec8ed1c55443 net: bridge: multicast: calculate idx position without changing ptr
5b16328879302695101f403f261ff7c5f1ee4b84 net: bridge: multicast: add EHT host handling functions
baa74d39ca39f2b22eeac5c3b069b58491ecd418 net: bridge: multicast: add EHT source set handling functions
dba6b0a5ca21c7c270977879f5670c78823e0da2 net: bridge: multicast: add EHT host delete function
474ddb37fa3ad0454f8d07bb9fb53ceab190b667 net: bridge: multicast: add EHT allow/block handling
ddc255d993d83bc13c2c8b239fd69cb87d12d03e net: bridge: multicast: add EHT include and exclude handling
b66bf55bbc1c1c985d136980fb21dfe9ffd6bf4c net: bridge: multicast: optimize TO_INCLUDE EHT timeouts
c9739016a03244e32f48c7f01176cd3b6ac1d916 net: bridge: multicast: add EHT host filter_mode handling
e87e4b5caa5db4ab14508e75ec5926a1c05020ac net: bridge: multicast: handle block pg delete for all cases
d5a1022283c3b0baa252506b34178266a4c0db4d net: bridge: multicast: mark IGMPv3/MLDv2 fast-leave deletes
dc090de854b9d7fdbc6f4df70bd7fc1b43eeccf8 net: mrp: fix definitions of MRP test packets
6781939054a1a161e06e7a7955a4846be770a711 net: mrp: move struct definitions out of uapi
8d21c882aba8004bb996270589c17ba71e100a16 bridge: Use PTR_ERR_OR_ZERO instead if(IS_ERR(...)) + PTR_ERR
3e841bacf72fd5fd98172c42bbc9ae7d461b6304 net: bridge: multicast: fix br_multicast_eht_set_entry_lookup indentation
89268b056ed116e13ba39f46481ad8bf5eef7bc4 net: bridge: multicast: add per-port EHT hosts limit
2dba407f994e5b0eb3b70a8cb280e014ec4a7ff3 net: bridge: multicast: make tracked EHT hosts limit configurable
1697291dae7cc582d8f737d788991c01b27de90d net: bridge: mcast: Use ERR_CAST instead of ERR_PTR(PTR_ERR())
b2bdba1cbc84cadb14393d0101a5bfd38d342e0a bridge: mrp: Fix the usage of br_mrp_port_switchdev_set_state
059d2a1004981dce19f0127dabc1b4ec927d202a switchdev: mrp: Remove SWITCHDEV_ATTR_ID_MRP_PORT_STAT
4c08c586ff29bda47e3db14da096331d84933f48 net: switchdev: propagate extack to port attributes
e18f4c18ab5b0dd47caaf8377c2e36d66f632a8c net: switchdev: pass flags and mask to both {PRE_,}BRIDGE_FLAGS attributes
9e781401cbfcd83c4d766b4c6c5efce8348d4d13 net: bridge: propagate extack through store_bridge_parm
dcbdf1350e3312c199dbc6a76f41cf8f67e8c09c net: bridge: propagate extack through switchdev_port_attr_set
405be6b46b707590f8014d468f4b42f25c6064cb switchdev: mrp: Remove CONFIG_BRIDGE_MRP
c513efa20c5254ef74c4157a03d515abdc46c503 switchdev: mrp: Extend ring_role_mrp and in_role_mrp
1a3ddb0b751604215630ca121c090d57e8c68169 bridge: mrp: Extend br_mrp_switchdev to detect better the errors
cd605d455a445837edb3372addbdd9a9e38df23b bridge: mrp: Update br_mrp to use new return values of br_mrp_switchdev
6aa2c371c729a3e3f8c7d4e08e0ff10e706b81d3 net: bridge: mcast: remove unreachable EHT code
e09cf582059ef4c1e5c496d6494fe4e26482530f net: bridge: mcast: factor out common allow/block EHT handling
787a4109f46847975ffae7d528a55c6b768ef0aa Documentation: networking: switchdev: fix command for static FDB entries
4f2673b3a2b6246729a1ff13b8945a040839dbd3 net: bridge: add helper to replay port and host-joined mdb entries
ae1ea84b33dab45c7b6c1754231ebda5959b504c net: bridge: propagate error code and extack from br_mc_disabled_update
68f5c12abbc9b6f8c5eea16c62f8b7be70793163 net: bridge: fix error in br_multicast_add_port when CONFIG_NET_SWITCHDEV=n
ce6f709775bdf9bc8dd852a8758e10a98f31f280 net: bridge: mcast: rename multicast router lists and timers
44ebb081dc6934e43d3c7444f183d6426adeca21 net: bridge: mcast: add wrappers for router node retrieval
ff391c5d9871894c620f1e6ae2b18d7db572e49d net: bridge: mcast: prepare mdb netlink for mcast router split
1a3065a26807b4cdd65d3b696ddb18385610f7da net: bridge: mcast: prepare is-router function for mcast router split
ee5fb2223ee581676fe7e4e5a87481c419569454 net: bridge: mcast: prepare expiry functions for mcast router split
d9b8c4d8d937f58e618aa1e756162e80b385c701 net: bridge: mcast: prepare add-router function for mcast router split
ed2d35971a8066aa24ce65dd66c113c0506bb206 net: bridge: mcast: split router port del+notify for mcast router split
a3c02e769efe66dce5e2c716862b60c8d44d191e net: bridge: mcast: split multicast router state for IPv4 and IPv6
30515832e987597eae354f6ffcdb3374bdfde16d net: bridge: fix build when IPv6 is disabled
fcb34635854a5a5814227628867ea914a9805384 net: bridge: mrp: Update ring transitions.
f7458934b0791c39a001e4d902fc3bf697b439b5 net: bridge: mrp: Update the Test frames for MRA
69bfac968a06aab5927160f8736485f85c3e8ee8 net: switchdev: add a context void pointer to struct switchdev_notifier_info
0d2cfbd41c4a5a0ca5598d1874b1081138cd64c6 net: bridge: ignore switchdev events for LAG ports which didn't request replay
bdf123b455ce596aec6e410ec36fe3687b6a2140 net: bridge: constify variables in the replay helpers
7e8c18586daf7c1653c4b43a8119bc9662ed8fa6 net: bridge: allow the switchdev replay functions to be called for deletion
04bef83a3358946bfc98a5ecebd1b0003d83d882 net: bridge: multicast: fix PIM hello router port marking race
000b7287b67555fee39d39fff75229dedde0dcbf net: bridge: multicast: fix MRD advertisement router port marking race
c6451cda100d4ebbc3f6819e1161ce0e38ce7746 net: switchdev: introduce helper for checking dynamically learned FDB entries
9632233e7de8da43711bb7cd3e054af32fedcc38 net: bridge: multicast: factor out port multicast context
d3d065c0032bf7043401e34cec2114fc553f919e net: bridge: multicast: factor out bridge multicast context
adc47037a7d5c8f89ca428bd840c83ab7b62730c net: bridge: multicast: use multicast contexts instead of bridge or port
613d61dbef8eb87aea0be71efc9289beea1a6106 net: bridge: vlan: add global and per-port multicast context
7b54aaaf53cb784411426c64482af0435f7c845e net: bridge: multicast: add vlan state initialization and control
f4b7002a7076f025dce59647a77c8251175d2b34 net: bridge: add vlan mcast snooping knob
74edfd483de8010596d556a2339f9fb8a4ab6688 net: bridge: multicast: add helper to get port mcast context from port group
eb1593a0b4c49443acbe2ebaa7a9947fa5471c01 net: bridge: multicast: use the port group to port context helper
4cdd0d10f31da9fab65eb6411441ffb71a653997 net: bridge: multicast: check if should use vlan mcast ctx
615cc23e6283e143933ecf2bf3645fe0cea5ae6a net: bridge: multicast: add vlan querier and query support
1e9ca45662d6bb65fb60d3fbb7737b081d9cffc9 net: bridge: multicast: include router port vlan id in notifications
9dee572c384846f4ece029ab5688faed0682e48a net: bridge: vlan: add mcast snooping control
54cb43199e14c1181ddcd4a3782f1f7eb56bdab8 net: bridge: multicast: fix igmp/mld port context null pointer dereferences
6567cb438a51016f9f2152cb966f5715dc3c3c7b net: bridge: multicast: add mdb context support
58d913a32664fae5ac2ccd9a9c23b8e7037df740 net: bridge: multicast: add context support for host-joined groups
2f5dc00f7a3ea669fd387ce79ffca92bff361550 net: bridge: switchdev: let drivers inform which bridge ports are offloaded
7105b50b7eecae62cf6175507f9ea9ff60a55816 net: bridge: guard the switchdev replay helpers against a NULL notifier block
4e51bf44a03af6fa19a39a36ea8fedfacb8ccadf net: bridge: move the switchdev object replay helpers to "push" mode
472111920f1c5fbe103022a4b05bfb37128a2a29 net: bridge: switchdev: allow the TX data plane forwarding to be offloaded
c5381154393d42e2edd77fc74f1493f9f93908cb net: bridge: fix build when setting skb->offload_fwd_mark with CONFIG_NET_SWITCHDEV=n
f7cdb3ecc9b7f609082fc89e5b79d66858504899 net: bridge: update BROPT_VLAN_ENABLED before notifying switchdev in br_vlan_filter_toggle
ee80dd2e89ecce9c5dd6f556b8f581c9e1cbb605 net: bridge: add a helper for retrieving port VLANs from the data path
b4454bc6a0fbf2f9edcddd08862175085b990856 net: bridge: switchdev: replay the entire FDB for each port
52e4bec15546d58f2a14dc74a6b8be128aa7db0a net: bridge: switchdev: treat local FDBs the same as entries towards the bridge
0541a6293298fb52789de389dfb27ef54df81f73 net: bridge: validate the NUD_PERMANENT bit when adding an extern_learn FDB entry
2e19bb35ce15a8b49f4a809469163f668e2d539f net: bridge: switchdev: fix incorrect use of FDB flags when picking the dst device
957e2235e5264c97cd6be8e2e17f2e11b41f2239 net: make switchdev_bridge_port_{,unoffload} loosely coupled with the bridge
45a687879b31caae4032abd1c2402e289d2b8083 net: bridge: fix flags interpretation for extern learn fdb entries
c35b57ceff906856dd85af2d6709dab18fbca81f net: switchdev: zero-initialize struct switchdev_notifier_fdb_info emitted by drivers towards the bridge
df271cd641f101decaa4f7c1dd5c62939900bd4c net: bridge: vlan: add support for mcast igmp/mld version global options
931ba87d2017f3869d656f3c705883549bfeb97f net: bridge: vlan: add support for mcast last member count global option
50725f6e6b217e7661ca696b7cc1f1b9aa7bda84 net: bridge: vlan: add support for mcast startup query count global option
77f6ababa299112092a264cac96bedf1a87015ef net: bridge: vlan: add support for mcast last member interval global option
2da0aea21f1c40d003af6680551eaa5471103164 net: bridge: vlan: add support for mcast membership interval global option
cd9269d463107bc4a53a0965d90a57efeee9ae11 net: bridge: vlan: add support for mcast querier interval global option
d6c08aba4f29f606769939eb6156efceb7dbb790 net: bridge: vlan: add support for mcast query interval global option
425214508b1bd3596edb31da8d9aedee30f2b4f5 net: bridge: vlan: add support for mcast query response interval global option
941121ee22a69935252473f03976f1f1200b9ae9 net: bridge: vlan: add support for mcast startup query interval global option
4d5b4e84c72451face4d7817697684196cbee50d net: bridge: mcast: move querier state to the multicast context
cb486ce99576741a84c75623daeffb2f7758cbf9 net: bridge: mcast: querier and query state affect only current context type
62938182c35906c0ed4beb7845b93b8ffb937597 net: bridge: vlan: add support for mcast querier global option
a97df080b6a86c105f98052ca3a9d66149b461b3 net: bridge: vlan: add support for mcast router global option
e04d377ff6ce915d2d95ba13e7aff3ca64d50781 net: bridge: mcast: use the proper multicast context when dumping router ports
dc002875c22b56c795ec24dc987ac2dd2081588e net: bridge: vlan: use br_rports_fill_info() to export mcast router ports
bb18ef8e7e180d8590df2808ec4014af114756cb net: bridge: mcast: record querier port device ifindex instead of pointer
67b746f94ff39d8b998c4ea9493c6ab2d6c225d4 net: bridge: mcast: make sure querier port/address updates are consistent
c3fb3698f935381161101d2479d66dd48c106183 net: bridge: mcast: consolidate querier selection for ipv4 and ipv6
c7fa1d9b1fb179375e889ff076a1566ecc997bfc net: bridge: mcast: dump ipv4 querier state
85b4108211742c5dd4f9f56c1d0704b4e0d4c98e net: bridge: mcast: dump ipv6 querier state
ddc649d158c560c6685be1701900a6e456ecceac net: bridge: vlan: dump mcast ctx querier state
f137b7d4ecf8fca0891f435a198b3c8beec8a9d2 net: bridge: mcast: don't dump querier state if snooping is disabled
cdda378bd8d9076319e5713595b4944b32d95a40 net: bridge: mcast: drop sizeof for nest attribute's zero size
175e66924719090f3f43884a419e7c32dabb800f net: bridge: mcast: account for ipv6 size when dumping querier state
05d6f38ec0a5108596941f8b25d92c45aa08fc40 net: bridge: vlan: account for router port lists when notifying
3f0d14efe2fa8656a1c46f1d13d42bb5bd88f32f net: bridge: mcast: use the correct vlan group helper
affce9a774ca2514aaa5638fde92c57a476dfd79 net: bridge: mcast: toggle also host vlan state in br_multicast_toggle_vlan
a53581d5559eaacaac1b4aed8e2f22c40efa5acc net: bridge: mcast: br_multicast_set_port_router takes multicast context as argument
2796d846d74a18cc6563e96eff8bf28c5e06f912 net: bridge: vlan: convert mcast router global option to per-vlan entry
6baeb3951c271cff30828c4763fa1362da56454a net: bridge: use mld2r_ngrec instead of icmpv6_dataun
ddd0d5293810c1882e2a96f8cce1678823b1dd38 net: bridge: mcast: fix vlan port router deadlock
f936bb42aeb94a069bec7c9e04100d199c372956 net: bridge: mcast: Associate the seqcount with its protecting lock.
fac3cb82a54a4b7c49c932f96ef196cf5774344c net: bridge: mcast: use multicast_membership_interval for IGMPv3
21a241b3bc153b346987a28cc132674646589e02 Bluetooth: btusb: Add the new support IDs for WCN6855
e8c42585dc6032624a9728d8cf99d974e931d4bc Bluetooth: btusb: Add one more Bluetooth part for WCN6855
f98a3dccfcb0b9b9c3bef8df9edd61cda80ad937 locking: Remove spin_lock_flags() etc
32aeba1f7a98b0c69d4a5704a7d9cea42ba856ba tg3: Remove unused PHY_BRCM flags
b75d05b2da5c5d0e9b8d80b72a4ba1443d36ef58 qed: fix kconfig help entries
f3956ebb3bf06ab2266ad5ee2214aed46405810c ethernet: use eth_hw_addr_set() instead of ether_addr_copy()
766607570becbd26cab6d66a544dd8d0d964df5a ethernet: constify references to netdev->dev_addr in drivers
a05e4c0af490ca7c22fc77120aafebebdeaaf537 ethernet: use eth_hw_addr_set() for dev->addr_len cases

__CHANGES NOT IN UPSTREAM________________
net: check skb sec_path when re-initializing slow_gro in gro_list_prepare
ppc64: Fix incorrect qrwlock use in debug kernel
bpf/selftests: enable atomic_bounds test
Revert "bpf: Remove atomics tests from test_progs"
bpf/selftests: disable tests failing on RHEL 8.6
bpf/selftests: allow disabling prog_tests
net: switchdev: consolidate RH_KABI macros usage
redhat: Add CONFIG_RHEL_DIFFERENCES
redhat/configs: enable ARM_DMC620_PMU memory controller perf counters
mm/mmu_notifier: Make drm-backport/linux/mmu_notifier.h use RH_MMU_NOTIFIER_V2
mm/mmu_notifier: Relocate mmu_notifier_put()
mm/mmu_notifier: Add mmu_notifier versioning mechanism
selftests: bpf: skip test_doc_build.sh
redhat/configs: enable CONFIG_BPF_UNPRIV_DEFAULT_OFF
rpmspec: update manpages installation after 5.13 rebase (bpf-helpers, bpf-syscall)
hv: vmbus: Avoid -Werror=maybe-uninitialized error
Revert "Revert "ice: Add initial support framework for LAG""
ppc64: Adding read_lock definition to nvme
blk-mq: still set q->make_request_fn for blk-mq
redhat/config: Rename CONFIG_DEBUG_KMEMLEAK_EARLY_LOG_SIZE to CONFIG_DEBUG_KMEMLEAK_MEM_POOL_SIZE
redhat/config: Enable Nitro Enclaves on aarch64
redhat/configs: Move Hyper-V configs to 'generic'
redhat/configs: enable CONFIG_INPUT_KEYBOARD on Aarch64
x86/fpu: Use sizeof_field() macro
x86/fpu: Add SPDX license identifier - Makefile/Kconfig
x86/fpu: Add SPDX license identifier for missed files
redhat/configs: Add CONFIG_INTEL_QEP
redhat/configs: Add CONFIG_COUNTER
drivers/counter: Add SPDX license identifier - Makefile/Kconfig
Makefile: update early devel phase flag
nvme-mpath: replace direct_make_request with generic_make_request
cgroup/debug: Fix lockdep splat with "pK" format specifier
configs: Enable FC_APPID
configs: Enable BLK_CGROUP_FC_APPID
perf stat: Skip evlist__when all events uses BPF
redhat/configs: Add CONFIG_TIMERLAT_TRACER
redhat/configs: Add CONFIG_OSNOISE_TRACER
powerpc/spinlock: Properly define pv_spinlocks_init()
CI: Add template for baseline gcov build
isdn/hisax: Use get_current_state()
kernel/rwsem: Remove ifdef __init_rwsem code from rwsem.c
mm/memcg: Move mem_cgroup kABI compatibility structure into rh_kabi_memcg.h
tools: bpf: add SO_BINDTOIFINDEX to socket.h in tools
x86: sev-es: Restore SEV-ES-specific version of copy_from_kernel_nofault()
redhat/configs: enable CONFIG_IMA_WRITE_POLICY
Disable CONFIG_CRYPTO_SM4 on aarch64
CI: Fix RT branch name
redhat/configs: Add CONFIG_X86_PLATFORM_DRIVERS_INTEL
kernel.spec: Add support to use vmlinux.h
spec: Add vmlinux.h to kernel-devel package
Revert "Merge: redhat: switch secureboot kernel image signing to release keys"
redhat: switch secureboot kernel image signing to release keys
CI: handle RT branches in a single config
CI: Fix RT check branch name
CI: Drop private CI config
CI: extend template use
Revert "Merge: mt7921e: enable new Mediatek wireless hardware"
redhat/configs: aarch64: add CONFIG_ARCH_RANDOM
redhat/configs: Add CONFIG_ARM64_E0PD
