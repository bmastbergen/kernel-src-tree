nvme-tcp: fix incorrect h2cdata pdu offset accounting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Sagi Grimberg <sagi@grimberg.me>
commit e371af033c560b9dd1e861f8f0b503142bf0a06c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/e371af03.failed

When the controller sends us multiple r2t PDUs in a single
request we need to account for it correctly as our send/recv
context run concurrently (i.e. we get a new r2t with r2t_offset
before we updated our iterator and req->data_sent marker). This
can cause wrong offsets to be sent to the controller.

To fix that, we will first know that this may happen only in
the send sequence of the last page, hence we will take
the r2t_offset to the h2c PDU data_offset, and in
nvme_tcp_try_send_data loop, we make sure to increment
the request markers also when we completed a PDU but
we are expecting more r2t PDUs as we still did not send
the entire data of the request.

Fixes: 825619b09ad3 ("nvme-tcp: fix possible use-after-completion")
	Reported-by: Nowak, Lukasz <Lukasz.Nowak@Dell.com>
	Tested-by: Nowak, Lukasz <Lukasz.Nowak@Dell.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Keith Busch <kbusch@kernel.org>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit e371af033c560b9dd1e861f8f0b503142bf0a06c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/tcp.c
diff --cc drivers/nvme/host/tcp.c
index fbf9e3819786,3c1c29dd3020..000000000000
--- a/drivers/nvme/host/tcp.c
+++ b/drivers/nvme/host/tcp.c
@@@ -605,8 -619,8 +605,13 @@@ static int nvme_tcp_setup_h2c_data_pdu(
  	data->hdr.plen =
  		cpu_to_le32(data->hdr.hlen + hdgst + req->pdu_len + ddgst);
  	data->ttag = pdu->ttag;
++<<<<<<< HEAD
 +	data->command_id = rq->tag;
 +	data->data_offset = cpu_to_le32(req->data_sent);
++=======
+ 	data->command_id = nvme_cid(rq);
+ 	data->data_offset = pdu->r2t_offset;
++>>>>>>> e371af033c56 (nvme-tcp: fix incorrect h2cdata pdu offset accounting)
  	data->data_length = cpu_to_le32(req->pdu_len);
  	return 0;
  }
* Unmerged path drivers/nvme/host/tcp.c
