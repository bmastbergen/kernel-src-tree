sched: Make nr_iowait_cpu() return 32-bit value

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Alexey Dobriyan <adobriyan@gmail.com>
commit 8fc2858e572ce761bffcade81a42ac72005e76f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/8fc2858e.failed

Runqueue ->nr_iowait counters are 32-bit anyway.

Propagate 32-bitness into other code, but don't try too hard.

	Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
Link: https://lore.kernel.org/r/20210422200228.1423391-3-adobriyan@gmail.com
(cherry picked from commit 8fc2858e572ce761bffcade81a42ac72005e76f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpuidle/governors/menu.c
diff --cc drivers/cpuidle/governors/menu.c
index 678dc919a8d1,2e5670446991..000000000000
--- a/drivers/cpuidle/governors/menu.c
+++ b/drivers/cpuidle/governors/menu.c
@@@ -272,8 -270,8 +272,13 @@@ static int menu_select(struct cpuidle_d
  	unsigned int predicted_us;
  	u64 predicted_ns;
  	u64 interactivity_req;
++<<<<<<< HEAD
 +	unsigned long nr_iowaiters;
 +	ktime_t delta_next;
++=======
+ 	unsigned int nr_iowaiters;
+ 	ktime_t delta, delta_tick;
++>>>>>>> 8fc2858e572c (sched: Make nr_iowait_cpu() return 32-bit value)
  	int i, idx;
  
  	if (data->needs_update) {
* Unmerged path drivers/cpuidle/governors/menu.c
diff --git a/include/linux/sched/stat.h b/include/linux/sched/stat.h
index 4db57be0f800..129d1bdfb310 100644
--- a/include/linux/sched/stat.h
+++ b/include/linux/sched/stat.h
@@ -19,7 +19,7 @@ extern int nr_processes(void);
 extern unsigned int nr_running(void);
 extern bool single_task_running(void);
 extern unsigned int nr_iowait(void);
-extern unsigned long nr_iowait_cpu(int cpu);
+extern unsigned int nr_iowait_cpu(int cpu);
 
 static inline int sched_info_on(void)
 {
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index e666d68063ec..f7eb7a0070a9 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -3196,7 +3196,7 @@ unsigned long long nr_context_switches(void)
  * it does become runnable.
  */
 
-unsigned long nr_iowait_cpu(int cpu)
+unsigned int nr_iowait_cpu(int cpu)
 {
 	return atomic_read(&cpu_rq(cpu)->nr_iowait);
 }
