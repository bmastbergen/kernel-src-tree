x86/fpu: Rename initstate copy functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit b76411b1b568311bfd89d03acc587ffc1548c26f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/b76411b1.failed

Again this not a copy. It's restoring register state from kernel memory.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20210623121454.816581630@linutronix.de
(cherry picked from commit b76411b1b568311bfd89d03acc587ffc1548c26f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/fpu/core.c
diff --cc arch/x86/kernel/fpu/core.c
index 1e27c69db876,4a59e0fbcfd8..000000000000
--- a/arch/x86/kernel/fpu/core.c
+++ b/arch/x86/kernel/fpu/core.c
@@@ -347,12 -303,12 +347,12 @@@ void fpu__drop(struct fpu *fpu
   * Clear FPU registers by setting them up from the init fpstate.
   * Caller must do fpregs_[un]lock() around it.
   */
- static inline void copy_init_fpstate_to_fpregs(u64 features_mask)
+ static inline void restore_fpregs_from_init_fpstate(u64 features_mask)
  {
  	if (use_xsave())
 -		os_xrstor(&init_fpstate.xsave, features_mask);
 -	else if (use_fxsr())
 -		fxrstor(&init_fpstate.fxsave);
 +		copy_kernel_to_xregs(&init_fpstate.xsave, features_mask);
 +	else if (static_cpu_has(X86_FEATURE_FXSR))
 +		copy_kernel_to_fxregs(&init_fpstate.fxsave);
  	else
  		frstor(&init_fpstate.fsave);
  
@@@ -381,11 -337,10 +381,16 @@@ static void fpu__clear(struct fpu *fpu
  	if (user_only) {
  		if (!fpregs_state_valid(fpu, smp_processor_id()) &&
  		    xfeatures_mask_supervisor())
++<<<<<<< HEAD
 +			copy_kernel_to_xregs(&fpu->state.xsave,
 +					     xfeatures_mask_supervisor());
 +		copy_init_fpstate_to_fpregs(xfeatures_mask_user());
++=======
+ 			os_xrstor(&fpu->state.xsave, xfeatures_mask_supervisor());
+ 		restore_fpregs_from_init_fpstate(xfeatures_mask_user());
++>>>>>>> b76411b1b568 (x86/fpu: Rename initstate copy functions)
  	} else {
- 		copy_init_fpstate_to_fpregs(xfeatures_mask_all);
+ 		restore_fpregs_from_init_fpstate(xfeatures_mask_all);
  	}
  
  	fpregs_mark_activate();
* Unmerged path arch/x86/kernel/fpu/core.c
