mm, slub: move disabling irqs closer to get_partial() in ___slab_alloc()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Vlastimil Babka <vbabka@suse.cz>
commit fa417ab7506f9234100e249938d13e94a8c404e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/fa417ab7.failed

Continue reducing the irq disabled scope. Check for per-cpu partial slabs with
first with irqs enabled and then recheck with irqs disabled before grabbing
the slab page. Mostly preparatory for the following patches.

	Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
(cherry picked from commit fa417ab7506f9234100e249938d13e94a8c404e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/slub.c
diff --cc mm/slub.c
index 18ea2f53cb90,4d1f3e4a5951..000000000000
--- a/mm/slub.c
+++ b/mm/slub.c
@@@ -2679,13 -2765,33 +2680,34 @@@ load_freelist
  	VM_BUG_ON(!c->page->frozen);
  	c->freelist = get_freepointer(s, freelist);
  	c->tid = next_tid(c->tid);
 -	local_irq_restore(flags);
  	return freelist;
  
++<<<<<<< HEAD
++=======
+ deactivate_slab:
+ 
+ 	local_irq_save(flags);
+ 	if (page != c->page) {
+ 		local_irq_restore(flags);
+ 		goto reread_page;
+ 	}
+ 	deactivate_slab(s, page, c->freelist, c);
+ 	local_irq_restore(flags);
+ 
++>>>>>>> fa417ab7506f (mm, slub: move disabling irqs closer to get_partial() in ___slab_alloc())
  new_slab:
  
  	if (slub_percpu_partial(c)) {
+ 		local_irq_save(flags);
+ 		if (unlikely(c->page)) {
+ 			local_irq_restore(flags);
+ 			goto reread_page;
+ 		}
+ 		if (unlikely(!slub_percpu_partial(c)))
+ 			goto new_objects; /* stolen by an IRQ handler */
+ 
  		page = c->page = slub_percpu_partial(c);
  		slub_set_percpu_partial(c, page);
 -		local_irq_restore(flags);
  		stat(s, CPU_PARTIAL_ALLOC);
  		goto redo;
  	}
* Unmerged path mm/slub.c
