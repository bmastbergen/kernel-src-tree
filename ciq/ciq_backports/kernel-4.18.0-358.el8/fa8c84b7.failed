x86/cpu: Write the default PKRU value when enabling PKE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit fa8c84b77a54bf3cf351c8b4b26a5aca27a14013
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/fa8c84b7.failed

In preparation of making the PKRU management more independent from XSTATES,
write the default PKRU value into the hardware right after enabling PKRU in
CR4. This ensures that switch_to() and copy_thread() have the correct
setting for init task and the per CPU idle threads right away.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20210623121455.622983906@linutronix.de
(cherry picked from commit fa8c84b77a54bf3cf351c8b4b26a5aca27a14013)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/common.c
diff --cc arch/x86/kernel/cpu/common.c
index 730307584210,ca668efa4c81..000000000000
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@@ -389,22 -466,22 +389,27 @@@ static bool pku_disabled
  
  static __always_inline void setup_pku(struct cpuinfo_x86 *c)
  {
 -	if (c == &boot_cpu_data) {
 -		if (pku_disabled || !cpu_feature_enabled(X86_FEATURE_PKU))
 -			return;
 -		/*
 -		 * Setting CR4.PKE will cause the X86_FEATURE_OSPKE cpuid
 -		 * bit to be set.  Enforce it.
 -		 */
 -		setup_force_cpu_cap(X86_FEATURE_OSPKE);
 -
 -	} else if (!cpu_feature_enabled(X86_FEATURE_OSPKE)) {
 +	/* check the boot processor, plus compile options for PKU: */
 +	if (!cpu_feature_enabled(X86_FEATURE_PKU))
 +		return;
 +	/* checks the actual processor's cpuid bits: */
 +	if (!cpu_has(c, X86_FEATURE_PKU))
 +		return;
 +	if (pku_disabled)
  		return;
 -	}
  
  	cr4_set_bits(X86_CR4_PKE);
++<<<<<<< HEAD
 +	/*
 +	 * Seting X86_CR4_PKE will cause the X86_FEATURE_OSPKE
 +	 * cpuid bit to be set.  We need to ensure that we
 +	 * update that bit in this CPU's "cpu_info".
 +	 */
 +	get_cpu_cap(c);
++=======
+ 	/* Load the default PKRU value */
+ 	pkru_write_default();
++>>>>>>> fa8c84b77a54 (x86/cpu: Write the default PKRU value when enabling PKE)
  }
  
  #ifdef CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS
* Unmerged path arch/x86/kernel/cpu/common.c
