scsi: core: Set shost as hctx driver_data

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Kashyap Desai <kashyap.desai@broadcom.com>
commit 4309ea74b0c30f00c6a93b94db018ebb416dc14c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/4309ea74.failed

hctx->driver_data is not set for SCSI currently. Set hctx->driver_data =
shost.

Link: https://lore.kernel.org/r/20210215074048.19424-6-kashyap.desai@broadcom.com
	Suggested-by: John Garry <john.garry@huawei.com>
	Reviewed-by: John Garry <john.garry@huawei.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Kashyap Desai <kashyap.desai@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 4309ea74b0c30f00c6a93b94db018ebb416dc14c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_lib.c
diff --cc drivers/scsi/scsi_lib.c
index f95ee33a7e2c,4bcd744a5c85..000000000000
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@@ -1788,6 -1810,26 +1788,29 @@@ static void scsi_mq_exit_request(struc
  			       cmd->sense_buffer);
  }
  
++<<<<<<< HEAD
++=======
+ 
+ static int scsi_mq_poll(struct blk_mq_hw_ctx *hctx)
+ {
+ 	struct Scsi_Host *shost = hctx->driver_data;
+ 
+ 	if (shost->hostt->mq_poll)
+ 		return shost->hostt->mq_poll(shost, hctx->queue_num);
+ 
+ 	return 0;
+ }
+ 
+ static int scsi_init_hctx(struct blk_mq_hw_ctx *hctx, void *data,
+ 			  unsigned int hctx_idx)
+ {
+ 	struct Scsi_Host *shost = data;
+ 
+ 	hctx->driver_data = shost;
+ 	return 0;
+ }
+ 
++>>>>>>> 4309ea74b0c3 (scsi: core: Set shost as hctx driver_data)
  static int scsi_map_queues(struct blk_mq_tag_set *set)
  {
  	struct Scsi_Host *shost = container_of(set, struct Scsi_Host, tag_set);
@@@ -1852,6 -1897,8 +1875,11 @@@ static const struct blk_mq_ops scsi_mq_
  	.cleanup_rq	= scsi_cleanup_rq,
  	.busy		= scsi_mq_lld_busy,
  	.map_queues	= scsi_map_queues,
++<<<<<<< HEAD
++=======
+ 	.init_hctx	= scsi_init_hctx,
+ 	.poll		= scsi_mq_poll,
++>>>>>>> 4309ea74b0c3 (scsi: core: Set shost as hctx driver_data)
  	.set_rq_budget_token = scsi_mq_set_rq_budget_token,
  	.get_rq_budget_token = scsi_mq_get_rq_budget_token,
  };
@@@ -1882,6 -1927,8 +1908,11 @@@ static const struct blk_mq_ops scsi_mq_
  	.cleanup_rq	= scsi_cleanup_rq,
  	.busy		= scsi_mq_lld_busy,
  	.map_queues	= scsi_map_queues,
++<<<<<<< HEAD
++=======
+ 	.init_hctx	= scsi_init_hctx,
+ 	.poll		= scsi_mq_poll,
++>>>>>>> 4309ea74b0c3 (scsi: core: Set shost as hctx driver_data)
  	.set_rq_budget_token = scsi_mq_set_rq_budget_token,
  	.get_rq_budget_token = scsi_mq_get_rq_budget_token,
  };
* Unmerged path drivers/scsi/scsi_lib.c
