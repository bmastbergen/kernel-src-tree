x86/fpu: Rename fpu__clear_all() to fpu_flush_thread()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit e7ecad17c84d0f6bef635c20d02bbe4096eea700
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/e7ecad17.failed

Make it clear what the function is about.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20210623121455.827979263@linutronix.de
(cherry picked from commit e7ecad17c84d0f6bef635c20d02bbe4096eea700)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/fpu/internal.h
diff --cc arch/x86/include/asm/fpu/internal.h
index 25c5f10d80a4,dabbb700c0eb..000000000000
--- a/arch/x86/include/asm/fpu/internal.h
+++ b/arch/x86/include/asm/fpu/internal.h
@@@ -26,16 -26,17 +26,24 @@@
  /*
   * High level FPU state handling functions:
   */
 +extern void fpu__prepare_read(struct fpu *fpu);
 +extern void fpu__prepare_write(struct fpu *fpu);
 +extern void fpu__save(struct fpu *fpu);
  extern int  fpu__restore_sig(void __user *buf, int ia32_frame);
  extern void fpu__drop(struct fpu *fpu);
 +extern int  fpu__copy(struct task_struct *dst, struct task_struct *src);
  extern void fpu__clear_user_states(struct fpu *fpu);
- extern void fpu__clear_all(struct fpu *fpu);
  extern int  fpu__exception_code(struct fpu *fpu, int trap_nr);
  
++<<<<<<< HEAD
++=======
+ extern void fpu_sync_fpstate(struct fpu *fpu);
+ 
+ /* Clone and exit operations */
+ extern int  fpu_clone(struct task_struct *dst);
+ extern void fpu_flush_thread(void);
+ 
++>>>>>>> e7ecad17c84d (x86/fpu: Rename fpu__clear_all() to fpu_flush_thread())
  /*
   * Boot time FPU initialization functions:
   */
* Unmerged path arch/x86/include/asm/fpu/internal.h
diff --git a/arch/x86/kernel/fpu/core.c b/arch/x86/kernel/fpu/core.c
index 1e27c69db876..5048660668bc 100644
--- a/arch/x86/kernel/fpu/core.c
+++ b/arch/x86/kernel/fpu/core.c
@@ -397,9 +397,9 @@ void fpu__clear_user_states(struct fpu *fpu)
 	fpu__clear(fpu, true);
 }
 
-void fpu__clear_all(struct fpu *fpu)
+void fpu_flush_thread(void)
 {
-	fpu__clear(fpu, false);
+	fpu__clear(&current->thread.fpu, false);
 }
 
 /*
diff --git a/arch/x86/kernel/process.c b/arch/x86/kernel/process.c
index 56f2acf80dcb..08d83616820e 100644
--- a/arch/x86/kernel/process.c
+++ b/arch/x86/kernel/process.c
@@ -242,7 +242,7 @@ void flush_thread(void)
 	flush_ptrace_hw_breakpoint(tsk);
 	memset(tsk->thread.tls_array, 0, sizeof(tsk->thread.tls_array));
 
-	fpu__clear_all(&tsk->thread.fpu);
+	fpu_flush_thread();
 }
 
 void disable_TSC(void)
