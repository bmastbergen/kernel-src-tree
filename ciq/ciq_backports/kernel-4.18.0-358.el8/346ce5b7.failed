Bluetooth: Add mgmt suspend and resume events

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
commit 346ce5b7d624e8cc2ec5a6abd0ea00f0e06ea8ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/346ce5b7.failed

Add the controller suspend and resume events, which will signal when
Bluetooth has completed preparing for suspend and when it's ready for
resume.

	Signed-off-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
	Reviewed-by: Miao-chen Chou <mcchou@chromium.org>
	Reviewed-by: Sonny Sasaka <sonnysasaka@chromium.org>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 346ce5b7d624e8cc2ec5a6abd0ea00f0e06ea8ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/bluetooth/mgmt.h
#	net/bluetooth/mgmt.c
diff --cc include/net/bluetooth/mgmt.h
index 145bb48fa2c8,e19e33c7b65c..000000000000
--- a/include/net/bluetooth/mgmt.h
+++ b/include/net/bluetooth/mgmt.h
@@@ -901,3 -1007,37 +901,40 @@@ struct mgmt_ev_ext_info_changed 
  struct mgmt_ev_phy_configuration_changed {
  	__le32	selected_phys;
  } __packed;
++<<<<<<< HEAD
++=======
+ 
+ #define MGMT_EV_EXP_FEATURE_CHANGED	0x0027
+ struct mgmt_ev_exp_feature_changed {
+ 	__u8	uuid[16];
+ 	__le32	flags;
+ } __packed;
+ 
+ #define MGMT_EV_DEVICE_FLAGS_CHANGED		0x002a
+ struct mgmt_ev_device_flags_changed {
+ 	struct mgmt_addr_info addr;
+ 	__le32 supported_flags;
+ 	__le32 current_flags;
+ } __packed;
+ 
+ #define MGMT_EV_ADV_MONITOR_ADDED	0x002b
+ struct mgmt_ev_adv_monitor_added {
+ 	__le16 monitor_handle;
+ }  __packed;
+ 
+ #define MGMT_EV_ADV_MONITOR_REMOVED	0x002c
+ struct mgmt_ev_adv_monitor_removed {
+ 	__le16 monitor_handle;
+ }  __packed;
+ 
+ #define MGMT_EV_CONTROLLER_SUSPEND		0x002d
+ struct mgmt_ev_controller_suspend {
+ 	__u8	suspend_state;
+ } __packed;
+ 
+ #define MGMT_EV_CONTROLLER_RESUME		0x002e
+ struct mgmt_ev_controller_resume {
+ 	__u8	wake_reason;
+ 	struct mgmt_addr_info addr;
+ } __packed;
++>>>>>>> 346ce5b7d624 (Bluetooth: Add mgmt suspend and resume events)
diff --cc net/bluetooth/mgmt.c
index bdb221ebdeb8,db48ee3c213c..000000000000
--- a/net/bluetooth/mgmt.c
+++ b/net/bluetooth/mgmt.c
@@@ -147,6 -161,10 +147,13 @@@ static const u16 mgmt_events[] = 
  	MGMT_EV_ADVERTISING_REMOVED,
  	MGMT_EV_EXT_INFO_CHANGED,
  	MGMT_EV_PHY_CONFIGURATION_CHANGED,
++<<<<<<< HEAD
++=======
+ 	MGMT_EV_EXP_FEATURE_CHANGED,
+ 	MGMT_EV_DEVICE_FLAGS_CHANGED,
+ 	MGMT_EV_CONTROLLER_SUSPEND,
+ 	MGMT_EV_CONTROLLER_RESUME,
++>>>>>>> 346ce5b7d624 (Bluetooth: Add mgmt suspend and resume events)
  };
  
  static const u16 mgmt_untrusted_commands[] = {
diff --git a/include/net/bluetooth/hci_core.h b/include/net/bluetooth/hci_core.h
index 87a79e4f1ac5..42f9409758e6 100644
--- a/include/net/bluetooth/hci_core.h
+++ b/include/net/bluetooth/hci_core.h
@@ -1722,6 +1722,9 @@ void mgmt_device_found(struct hci_dev *hdev, bdaddr_t *bdaddr, u8 link_type,
 void mgmt_remote_name(struct hci_dev *hdev, bdaddr_t *bdaddr, u8 link_type,
 		      u8 addr_type, s8 rssi, u8 *name, u8 name_len);
 void mgmt_discovering(struct hci_dev *hdev, u8 discovering);
+void mgmt_suspending(struct hci_dev *hdev, u8 state);
+void mgmt_resuming(struct hci_dev *hdev, u8 reason, bdaddr_t *bdaddr,
+		   u8 addr_type);
 bool mgmt_powering_down(struct hci_dev *hdev);
 void mgmt_new_ltk(struct hci_dev *hdev, struct smp_ltk *key, bool persistent);
 void mgmt_new_irk(struct hci_dev *hdev, struct smp_irk *irk, bool persistent);
* Unmerged path include/net/bluetooth/mgmt.h
* Unmerged path net/bluetooth/mgmt.c
