net: mrp: move struct definitions out of uapi

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Rasmus Villemoes <rasmus.villemoes@prevas.dk>
commit 6781939054a1a161e06e7a7955a4846be770a711
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/67819390.failed

None of these are actually used in the kernel/userspace interface -
there's a userspace component of implementing MRP, and userspace will
need to construct certain frames to put on the wire, but there's no
reason the kernel should provide the relevant definitions in a UAPI
header.

In fact, some of those definitions were broken until previous commit,
so only keep the few that are actually referenced in the kernel code,
and move them to the br_private_mrp.h header.

	Signed-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 6781939054a1a161e06e7a7955a4846be770a711)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/mrp_bridge.h
diff --cc include/uapi/linux/mrp_bridge.h
index 694a68dcbe43,bd4424de56ff..000000000000
--- a/include/uapi/linux/mrp_bridge.h
+++ b/include/uapi/linux/mrp_bridge.h
@@@ -42,42 -57,18 +42,45 @@@ enum br_mrp_tlv_header_type 
  	BR_MRP_TLV_HEADER_RING_TOPO = 0x3,
  	BR_MRP_TLV_HEADER_RING_LINK_DOWN = 0x4,
  	BR_MRP_TLV_HEADER_RING_LINK_UP = 0x5,
 -	BR_MRP_TLV_HEADER_IN_TEST = 0x6,
 -	BR_MRP_TLV_HEADER_IN_TOPO = 0x7,
 -	BR_MRP_TLV_HEADER_IN_LINK_DOWN = 0x8,
 -	BR_MRP_TLV_HEADER_IN_LINK_UP = 0x9,
 -	BR_MRP_TLV_HEADER_IN_LINK_STATUS = 0xa,
 -	BR_MRP_TLV_HEADER_OPTION = 0x7f,
  };
  
 -enum br_mrp_sub_tlv_header_type {
 -	BR_MRP_SUB_TLV_HEADER_TEST_MGR_NACK = 0x1,
 -	BR_MRP_SUB_TLV_HEADER_TEST_PROPAGATE = 0x2,
 -	BR_MRP_SUB_TLV_HEADER_TEST_AUTO_MGR = 0x3,
++<<<<<<< HEAD
 +struct br_mrp_tlv_hdr {
 +	__u8 type;
 +	__u8 length;
 +};
 +
 +struct br_mrp_end_hdr {
 +	struct br_mrp_tlv_hdr hdr;
 +};
 +
 +struct br_mrp_common_hdr {
 +	__be16 seq_id;
 +	__u8 domain[MRP_DOMAIN_UUID_LENGTH];
 +};
 +
 +struct br_mrp_ring_test_hdr {
 +	__be16 prio;
 +	__u8 sa[ETH_ALEN];
 +	__be16 port_role;
 +	__be16 state;
 +	__be16 transitions;
 +	__be32 timestamp;
 +};
 +
 +struct br_mrp_ring_topo_hdr {
 +	__be16 prio;
 +	__u8 sa[ETH_ALEN];
 +	__be16 interval;
 +};
 +
 +struct br_mrp_ring_link_hdr {
 +	__u8 sa[ETH_ALEN];
 +	__be16 port_role;
 +	__be16 interval;
 +	__be16 blocked;
  };
  
++=======
++>>>>>>> 6781939054a1 (net: mrp: move struct definitions out of uapi)
  #endif
* Unmerged path include/uapi/linux/mrp_bridge.h
diff --git a/net/bridge/br_private_mrp.h b/net/bridge/br_private_mrp.h
index ab744ac18d94..c8e540876974 100644
--- a/net/bridge/br_private_mrp.h
+++ b/net/bridge/br_private_mrp.h
@@ -68,4 +68,33 @@ int br_mrp_switchdev_send_in_test(struct net_bridge *br, struct br_mrp *mrp,
 int br_mrp_ring_port_open(struct net_device *dev, u8 loc);
 int br_mrp_in_port_open(struct net_device *dev, u8 loc);
 
+/* MRP protocol data units */
+struct br_mrp_tlv_hdr {
+	__u8 type;
+	__u8 length;
+};
+
+struct br_mrp_common_hdr {
+	__be16 seq_id;
+	__u8 domain[MRP_DOMAIN_UUID_LENGTH];
+};
+
+struct br_mrp_ring_test_hdr {
+	__be16 prio;
+	__u8 sa[ETH_ALEN];
+	__be16 port_role;
+	__be16 state;
+	__be16 transitions;
+	__be32 timestamp;
+} __attribute__((__packed__));
+
+struct br_mrp_in_test_hdr {
+	__be16 id;
+	__u8 sa[ETH_ALEN];
+	__be16 port_role;
+	__be16 state;
+	__be16 transitions;
+	__be32 timestamp;
+} __attribute__((__packed__));
+
 #endif /* _BR_PRIVATE_MRP_H */
