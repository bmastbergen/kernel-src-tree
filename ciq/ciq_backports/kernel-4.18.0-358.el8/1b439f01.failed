tools/power turbostat: formatting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Len Brown <len.brown@intel.com>
commit 1b439f01b67c77a374adbbd97ad0c745b7abb09b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/1b439f01.failed

Spring is here...
run a long overdue Lendent on turbostat.c

no functional change

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 1b439f01b67c77a374adbbd97ad0c745b7abb09b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index e723f937cfe2,13805e460a4d..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -41,8 -41,12 +41,17 @@@ char *proc_stat = "/proc/stat"
  FILE *outf;
  int *fd_percpu;
  int *fd_instr_count_percpu;
++<<<<<<< HEAD
 +struct timeval interval_tv = {5, 0};
 +struct timespec interval_ts = {5, 0};
++=======
+ struct timeval interval_tv = { 5, 0 };
+ struct timespec interval_ts = { 5, 0 };
+ 
+ /* Save original CPU model */
+ unsigned int model_orig;
+ 
++>>>>>>> 1b439f01b67c (tools/power turbostat: formatting)
  unsigned int num_iterations;
  unsigned int debug;
  unsigned int quiet;
@@@ -1234,17 -1224,11 +1229,18 @@@ int format_counters(struct thread_data 
  		}
  	}
  
 -	fmt8 = "%s%.2f";
 +	/*
 +	 * If measurement interval exceeds minimum RAPL Joule Counter range,
 +	 * indicate that results are suspect by printing "**" in fraction place.
 +	 */
 +	if (interval_float < rapl_joule_counter_range)
 +		fmt8 = "%s%.2f";
 +	else
 +		fmt8 = "%6.0f**";
  
  	if (DO_BIC(BIC_CorWatt) && (do_rapl & RAPL_PER_CORE_ENERGY))
- 		outp += sprintf(outp, fmt8, (printed++ ? delim : ""), c->core_energy * rapl_energy_units / interval_float);
+ 		outp +=
+ 		    sprintf(outp, fmt8, (printed++ ? delim : ""), c->core_energy * rapl_energy_units / interval_float);
  	if (DO_BIC(BIC_Cor_J) && (do_rapl & RAPL_PER_CORE_ENERGY))
  		outp += sprintf(outp, fmt8, (printed++ ? delim : ""), c->core_energy * rapl_energy_units);
  
@@@ -2274,20 -2261,38 +2273,50 @@@ done
  
  int pkg_cstate_limit = PCLUKN;
  char *pkg_cstate_limit_strings[] = { "reserved", "unknown", "pc0", "pc1", "pc2",
- 	"pc3", "pc4", "pc6", "pc6n", "pc6r", "pc7", "pc7s", "pc8", "pc9", "pc10", "unlimited"};
+ 	"pc3", "pc4", "pc6", "pc6n", "pc6r", "pc7", "pc7s", "pc8", "pc9", "pc10", "unlimited"
+ };
  
++<<<<<<< HEAD
 +int nhm_pkg_cstate_limits[16] = {PCL__0, PCL__1, PCL__3, PCL__6, PCL__7, PCLRSV, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV};
 +int snb_pkg_cstate_limits[16] = {PCL__0, PCL__2, PCL_6N, PCL_6R, PCL__7, PCL_7S, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV};
 +int hsw_pkg_cstate_limits[16] = {PCL__0, PCL__2, PCL__3, PCL__6, PCL__7, PCL_7S, PCL__8, PCL__9, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV};
 +int slv_pkg_cstate_limits[16] = {PCL__0, PCL__1, PCLRSV, PCLRSV, PCL__4, PCLRSV, PCL__6, PCL__7, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCL__6, PCL__7};
 +int amt_pkg_cstate_limits[16] = {PCLUNL, PCL__1, PCL__2, PCLRSV, PCLRSV, PCLRSV, PCL__6, PCL__7, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV};
 +int phi_pkg_cstate_limits[16] = {PCL__0, PCL__2, PCL_6N, PCL_6R, PCLRSV, PCLRSV, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV};
 +int glm_pkg_cstate_limits[16] = {PCLUNL, PCL__1, PCL__3, PCL__6, PCL__7, PCL_7S, PCL__8, PCL__9, PCL_10, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV};
 +int skx_pkg_cstate_limits[16] = {PCL__0, PCL__2, PCL_6N, PCL_6R, PCLRSV, PCLRSV, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV};
 +
- 
- static void
- calculate_tsc_tweak()
++=======
+ int nhm_pkg_cstate_limits[16] =
+     { PCL__0, PCL__1, PCL__3, PCL__6, PCL__7, PCLRSV, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCLRSV, PCLRSV };
+ int snb_pkg_cstate_limits[16] =
+     { PCL__0, PCL__2, PCL_6N, PCL_6R, PCL__7, PCL_7S, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCLRSV, PCLRSV };
+ int hsw_pkg_cstate_limits[16] =
+     { PCL__0, PCL__2, PCL__3, PCL__6, PCL__7, PCL_7S, PCL__8, PCL__9, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCLRSV, PCLRSV };
+ int slv_pkg_cstate_limits[16] =
+     { PCL__0, PCL__1, PCLRSV, PCLRSV, PCL__4, PCLRSV, PCL__6, PCL__7, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCL__6, PCL__7 };
+ int amt_pkg_cstate_limits[16] =
+     { PCLUNL, PCL__1, PCL__2, PCLRSV, PCLRSV, PCLRSV, PCL__6, PCL__7, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCLRSV, PCLRSV };
+ int phi_pkg_cstate_limits[16] =
+     { PCL__0, PCL__2, PCL_6N, PCL_6R, PCLRSV, PCLRSV, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCLRSV, PCLRSV };
+ int glm_pkg_cstate_limits[16] =
+     { PCLUNL, PCL__1, PCL__3, PCL__6, PCL__7, PCL_7S, PCL__8, PCL__9, PCL_10, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCLRSV, PCLRSV };
+ int skx_pkg_cstate_limits[16] =
+     { PCL__0, PCL__2, PCL_6N, PCL_6R, PCLRSV, PCLRSV, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCLRSV, PCLRSV };
+ int icx_pkg_cstate_limits[16] =
+     { PCL__0, PCL__2, PCL__6, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLUNL, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV, PCLRSV,
+ PCLRSV, PCLRSV };
++>>>>>>> 1b439f01b67c (tools/power turbostat: formatting)
+ 
+ static void calculate_tsc_tweak()
  {
  	tsc_tweak = base_hz / tsc_hz;
  }
@@@ -4425,8 -4398,11 +4401,10 @@@ void rapl_probe_intel(unsigned int fami
  	case INTEL_FAM6_HASWELL_X:	/* HSX */
  	case INTEL_FAM6_BROADWELL_X:	/* BDX */
  	case INTEL_FAM6_SKYLAKE_X:	/* SKX */
 -	case INTEL_FAM6_ICELAKE_X:	/* ICX */
  	case INTEL_FAM6_XEON_PHI_KNL:	/* KNL */
- 		do_rapl = RAPL_PKG | RAPL_DRAM | RAPL_DRAM_POWER_INFO | RAPL_DRAM_PERF_STATUS | RAPL_PKG_PERF_STATUS | RAPL_PKG_POWER_INFO;
+ 		do_rapl =
+ 		    RAPL_PKG | RAPL_DRAM | RAPL_DRAM_POWER_INFO | RAPL_DRAM_PERF_STATUS | RAPL_PKG_PERF_STATUS |
+ 		    RAPL_PKG_POWER_INFO;
  		BIC_PRESENT(BIC_PKG__);
  		BIC_PRESENT(BIC_RAM__);
  		if (rapl_joules) {
@@@ -4581,7 -4561,7 +4563,11 @@@ void perf_limit_reasons_probe(unsigned 
  
  void automatic_cstate_conversion_probe(unsigned int family, unsigned int model)
  {
++<<<<<<< HEAD
 +	if (is_skx(family, model) || is_bdx(family, model))
++=======
+ 	if (is_skx(family, model) || is_bdx(family, model) || is_icx(family, model))
++>>>>>>> 1b439f01b67c (tools/power turbostat: formatting)
  		has_automatic_cstate_conversion = 1;
  }
  
@@@ -4802,6 -4779,7 +4785,10 @@@ int has_snb_msrs(unsigned int family, u
  	case INTEL_FAM6_SKYLAKE_L:	/* SKL */
  	case INTEL_FAM6_CANNONLAKE_L:	/* CNL */
  	case INTEL_FAM6_SKYLAKE_X:	/* SKX */
++<<<<<<< HEAD
++=======
+ 	case INTEL_FAM6_ICELAKE_X:	/* ICX */
++>>>>>>> 1b439f01b67c (tools/power turbostat: formatting)
  	case INTEL_FAM6_ATOM_GOLDMONT:	/* BXT */
  	case INTEL_FAM6_ATOM_GOLDMONT_PLUS:
  	case INTEL_FAM6_ATOM_GOLDMONT_D:	/* DNV */
@@@ -5287,9 -5256,12 +5266,8 @@@ void process_cpuid(
  			edx_flags & (1 << 4) ? "TSC" : "-",
  			edx_flags & (1 << 5) ? "MSR" : "-",
  			edx_flags & (1 << 22) ? "ACPI-TM" : "-",
- 			edx_flags & (1 << 28) ? "HT" : "-",
- 			edx_flags & (1 << 29) ? "TM" : "-");
+ 			edx_flags & (1 << 28) ? "HT" : "-", edx_flags & (1 << 29) ? "TM" : "-");
  	}
 -	if (genuine_intel) {
 -		model_orig = model;
 -		model = intel_model_duplicates(model);
 -	}
  
  	if (!(edx_flags & (1 << 5)))
  		errx(1, "CPUID: no MSR");
@@@ -5948,9 -5905,9 +5913,15 @@@ int get_and_dump_counters(void
  	return status;
  }
  
++<<<<<<< HEAD
 +void print_version() {
 +	fprintf(outf, "turbostat version 20.09.30"
 +		" - Len Brown <lenb@kernel.org>\n");
++=======
+ void print_version()
+ {
+ 	fprintf(outf, "turbostat version 21.03.12" " - Len Brown <lenb@kernel.org>\n");
++>>>>>>> 1b439f01b67c (tools/power turbostat: formatting)
  }
  
  int add_counter(unsigned int msr_num, char *path, char *name,
* Unmerged path tools/power/x86/turbostat/turbostat.c
