rcu: Make call_rcu() print mem_dump_obj() info for double-freed callback

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Paul E. McKenney <paulmck@kernel.org>
commit b4b7914a6a73fc169fd1ce2fcd78a1d83d9528a9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/b4b7914a.failed

The debug-object double-free checks in __call_rcu() print out the
RCU callback function, which is usually sufficient to track down the
double free.  However, all uses of things like queue_rcu_work() will
have the same RCU callback function (rcu_work_rcufn() in this case),
so a diagnostic message for a double queue_rcu_work() needs more than
just the callback function.

This commit therefore calls mem_dump_obj() to dump out any additional
available information on the double-freed callback.

	Cc: Christoph Lameter <cl@linux.com>
	Cc: Pekka Enberg <penberg@kernel.org>
	Cc: David Rientjes <rientjes@google.com>
	Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: <linux-mm@kvack.org>
	Reported-by: Andrii Nakryiko <andrii@kernel.org>
	Tested-by: Naresh Kamboju <naresh.kamboju@linaro.org>
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit b4b7914a6a73fc169fd1ce2fcd78a1d83d9528a9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/rcu/tree.c
diff --cc kernel/rcu/tree.c
index a3725802233d,84513c52d9b0..000000000000
--- a/kernel/rcu/tree.c
+++ b/kernel/rcu/tree.c
@@@ -2903,8 -2955,10 +2904,15 @@@ __call_rcu(struct rcu_head *head, rcu_c
  		 * Use rcu:rcu_callback trace event to find the previous
  		 * time callback was passed to __call_rcu().
  		 */
++<<<<<<< HEAD
 +		WARN_ONCE(1, "__call_rcu(): Double-freed CB %p->%pF()!!!\n",
 +			  head, head->func);
++=======
+ 		if (atomic_inc_return(&doublefrees) < 4) {
+ 			pr_err("%s(): Double-freed CB %p->%pS()!!!  ", __func__, head, head->func);
+ 			mem_dump_obj(head);
+ 		}
++>>>>>>> b4b7914a6a73 (rcu: Make call_rcu() print mem_dump_obj() info for double-freed callback)
  		WRITE_ONCE(head->func, rcu_leak_callback);
  		return;
  	}
* Unmerged path kernel/rcu/tree.c
