i2c: designware: Get right data length

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Liguang Zhang <zhangliguang@linux.alibaba.com>
commit f53f15ba5a852171eccf940b22530152450a045c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/f53f15ba.failed

IC_DATA_CMD[11] indicates the first data byte received after the address
phase for receive transfer in Master receiver or Slave receiver mode,
this bit was set in some transfer flow. IC_DATA_CMD[7:0] contains the
data to be transmitted or received on the I2C bus, so we should use the
lower 8 bits to get the real data length.

	Signed-off-by: Liguang Zhang <zhangliguang@linux.alibaba.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Wolfram Sang <wsa@kernel.org>
(cherry picked from commit f53f15ba5a852171eccf940b22530152450a045c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/busses/i2c-designware-master.c
diff --cc drivers/i2c/busses/i2c-designware-master.c
index b6c17b550d31,dd27b9dbe931..000000000000
--- a/drivers/i2c/busses/i2c-designware-master.c
+++ b/drivers/i2c/busses/i2c-designware-master.c
@@@ -418,13 -429,13 +418,18 @@@ i2c_dw_read(struct dw_i2c_dev *dev
  		for (; len > 0 && rx_valid > 0; len--, rx_valid--) {
  			u32 flags = msgs[dev->msg_read_idx].flags;
  
 -			regmap_read(dev->map, DW_IC_DATA_CMD, &tmp);
 +			*buf = dw_readl(dev, DW_IC_DATA_CMD);
  			/* Ensure length byte is a valid value */
  			if (flags & I2C_M_RECV_LEN &&
++<<<<<<< HEAD
 +				*buf <= I2C_SMBUS_BLOCK_MAX && *buf > 0) {
 +				len = i2c_dw_recv_len(dev, *buf);
++=======
+ 			    (tmp & DW_IC_DATA_CMD_DAT) <= I2C_SMBUS_BLOCK_MAX && tmp > 0) {
+ 				len = i2c_dw_recv_len(dev, tmp);
++>>>>>>> f53f15ba5a85 (i2c: designware: Get right data length)
  			}
 -			*buf++ = tmp;
 +			buf++;
  			dev->rx_outstanding--;
  		}
  
diff --git a/drivers/i2c/busses/i2c-designware-core.h b/drivers/i2c/busses/i2c-designware-core.h
index a622cda36d55..38559855bd65 100644
--- a/drivers/i2c/busses/i2c-designware-core.h
+++ b/drivers/i2c/busses/i2c-designware-core.h
@@ -32,6 +32,8 @@
 #define DW_IC_CON_TX_EMPTY_CTRL		0x100
 #define DW_IC_CON_RX_FIFO_FULL_HLD_CTRL		0x200
 
+#define DW_IC_DATA_CMD_DAT			GENMASK(7, 0)
+
 /*
  * Registers offset
  */
* Unmerged path drivers/i2c/busses/i2c-designware-master.c
