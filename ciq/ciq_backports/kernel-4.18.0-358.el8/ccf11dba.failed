evm: Fix memleak in init_desc

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Dinghao Liu <dinghao.liu@zju.edu.cn>
commit ccf11dbaa07b328fa469415c362d33459c140a37
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/ccf11dba.failed

tmp_tfm is allocated, but not freed on subsequent kmalloc failure, which
leads to a memory leak.  Free tmp_tfm.

Fixes: d46eb3699502b ("evm: crypto hash replaced by shash")
	Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
[zohar@linux.ibm.com: formatted/reworded patch description]
	Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
(cherry picked from commit ccf11dbaa07b328fa469415c362d33459c140a37)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/integrity/evm/evm_crypto.c
diff --cc security/integrity/evm/evm_crypto.c
index 2c452620891f,a6dd47eb086d..000000000000
--- a/security/integrity/evm/evm_crypto.c
+++ b/security/integrity/evm/evm_crypto.c
@@@ -78,7 -73,7 +78,11 @@@ static struct shash_desc *init_desc(cha
  {
  	long rc;
  	const char *algo;
++<<<<<<< HEAD
 +	struct crypto_shash **tfm;
++=======
+ 	struct crypto_shash **tfm, *tmp_tfm = NULL;
++>>>>>>> ccf11dbaa07b (evm: Fix memleak in init_desc)
  	struct shash_desc *desc;
  
  	if (type == EVM_XATTR_HMAC) {
@@@ -108,26 -111,19 +112,28 @@@
  			mutex_unlock(&mutex);
  			return ERR_PTR(rc);
  		}
 +		if (type == EVM_XATTR_HMAC) {
 +			rc = crypto_shash_setkey(*tfm, evmkey, evmkey_len);
 +			if (rc) {
 +				crypto_free_shash(*tfm);
 +				*tfm = NULL;
 +				mutex_unlock(&mutex);
 +				return ERR_PTR(rc);
 +			}
 +		}
 +out:
 +		mutex_unlock(&mutex);
  	}
 -	*tfm = tmp_tfm;
 -unlock:
 -	mutex_unlock(&mutex);
 -alloc:
 +
  	desc = kmalloc(sizeof(*desc) + crypto_shash_descsize(*tfm),
  			GFP_KERNEL);
- 	if (!desc)
+ 	if (!desc) {
+ 		crypto_free_shash(tmp_tfm);
  		return ERR_PTR(-ENOMEM);
+ 	}
  
  	desc->tfm = *tfm;
 +	desc->flags = CRYPTO_TFM_REQ_MAY_SLEEP;
  
  	rc = crypto_shash_init(desc);
  	if (rc) {
* Unmerged path security/integrity/evm/evm_crypto.c
