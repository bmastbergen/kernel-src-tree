drm: Remove SCATTERLIST_MAX_SEGMENT

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Jason Gunthorpe <jgg@nvidia.com>
commit 7a60c2dd0f575ab14a457e99582af0ca1e072a74
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/7a60c2dd.failed

Since commit 9a40401cfa13 ("lib/scatterlist: Do not limit max_segment to
PAGE_ALIGNED values") the max_segment input to sg_alloc_table_from_pages()
does not have to be any special value. The new algorithm will always
create something less than what the user provides. Thus eliminate this
confusing constant.

- vmwgfx should use the HW capability, not mix in the OS page size for
  calling dma_set_max_seg_size()

- i915 uses i915_sg_segment_size() both for sg_alloc_table_from_pages
  and for some open coded sgl construction. This doesn't change the value
  since rounddown(size, UINT_MAX) == SCATTERLIST_MAX_SEGMENT

- drm_prime_pages_to_sg uses it as a default if max_segment is zero,
  UINT_MAX is fine to use directly.

	Cc: Gerd Hoffmann <kraxel@redhat.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Thomas Hellstrom <thellstrom@vmware.com>
	Cc: Qian Cai <cai@lca.pw>
	Cc: "Ursulin, Tvrtko" <tvrtko.ursulin@intel.com>
	Suggested-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Link: https://patchwork.freedesktop.org/patch/msgid/0-v1-44733fccd781+13d-rm_scatterlist_max_jgg@nvidia.com
(cherry picked from commit 7a60c2dd0f575ab14a457e99582af0ca1e072a74)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/vmwgfx/vmwgfx_drv.c
diff --cc drivers/gpu/drm/vmwgfx/vmwgfx_drv.c
index 6fa24645fbbf,0c42d2c05f43..000000000000
--- a/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c
+++ b/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c
@@@ -836,7 -794,7 +836,11 @@@ static int vmw_driver_load(struct vmw_p
  	if (unlikely(ret != 0))
  		goto out_err0;
  
++<<<<<<< HEAD
 +	dma_set_max_seg_size(dev_priv->drm.dev, U32_MAX);
++=======
+ 	dma_set_max_seg_size(dev->dev, U32_MAX);
++>>>>>>> 7a60c2dd0f57 (drm: Remove SCATTERLIST_MAX_SEGMENT)
  
  	if (dev_priv->capabilities & SVGA_CAP_GMR2) {
  		DRM_INFO("Max GMR ids is %u\n",
* Unmerged path drivers/gpu/drm/vmwgfx/vmwgfx_drv.c
diff --git a/include/linux/scatterlist.h b/include/linux/scatterlist.h
index cd9011a4b9b1..3790e050561f 100644
--- a/include/linux/scatterlist.h
+++ b/include/linux/scatterlist.h
@@ -18,12 +18,6 @@ struct scatterlist {
 #endif
 };
 
-/*
- * Since the above length field is an unsigned int, below we define the maximum
- * length in bytes that can be stored in one scatterlist entry.
- */
-#define SCATTERLIST_MAX_SEGMENT (UINT_MAX & PAGE_MASK)
-
 /*
  * These macros should be used after a dma_map_sg call has been done
  * to get bus addresses of each of the SG entries and their lengths.
diff --git a/tools/testing/scatterlist/main.c b/tools/testing/scatterlist/main.c
index 2d27e47bbf2f..71c960dcd8a4 100644
--- a/tools/testing/scatterlist/main.c
+++ b/tools/testing/scatterlist/main.c
@@ -51,7 +51,7 @@ static void fail(struct test *test, struct sg_table *st, const char *cond)
 
 int main(void)
 {
-	const unsigned int sgmax = SCATTERLIST_MAX_SEGMENT;
+	const unsigned int sgmax = UINT_MAX;
 	struct test *test, tests[] = {
 		{ -EINVAL, 1, pfn(0), NULL, PAGE_SIZE, 0, 1 },
 		{ 0, 1, pfn(0), NULL, PAGE_SIZE, PAGE_SIZE + 1, 1 },
