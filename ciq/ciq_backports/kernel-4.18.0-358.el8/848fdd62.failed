NFS: Don't set NFS_INO_INVALID_XATTR if there is no xattr cache

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 848fdd62399c638e65a1512616acaa5de7d5c5e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/848fdd62.failed

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 848fdd62399c638e65a1512616acaa5de7d5c5e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/inode.c
diff --cc fs/nfs/inode.c
index de72d90fb089,1575e3e1dda9..000000000000
--- a/fs/nfs/inode.c
+++ b/fs/nfs/inode.c
@@@ -194,7 -195,19 +194,23 @@@ bool nfs_check_cache_invalid(struct ino
  }
  EXPORT_SYMBOL_GPL(nfs_check_cache_invalid);
  
++<<<<<<< HEAD
 +void nfs_set_cache_invalid(struct inode *inode, unsigned long flags)
++=======
+ #ifdef CONFIG_NFS_V4_2
+ static bool nfs_has_xattr_cache(const struct nfs_inode *nfsi)
+ {
+ 	return nfsi->xattr_cache != NULL;
+ }
+ #else
+ static bool nfs_has_xattr_cache(const struct nfs_inode *nfsi)
+ {
+ 	return false;
+ }
+ #endif
+ 
+ static void nfs_set_cache_invalid(struct inode *inode, unsigned long flags)
++>>>>>>> 848fdd62399c (NFS: Don't set NFS_INO_INVALID_XATTR if there is no xattr cache)
  {
  	struct nfs_inode *nfsi = NFS_I(inode);
  	bool have_delegation = NFS_PROTO(inode)->have_delegation(inode, FMODE_READ);
* Unmerged path fs/nfs/inode.c
