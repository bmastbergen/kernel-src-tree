ipv6: make exception cache less predictible

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Eric Dumazet <edumazet@google.com>
commit a00df2caffed3883c341d5685f830434312e4a43
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/a00df2ca.failed

Even after commit 4785305c05b2 ("ipv6: use siphash in rt6_exception_hash()"),
an attacker can still use brute force to learn some secrets from a victim
linux host.

One way to defeat these attacks is to make the max depth of the hash
table bucket a random value.

Before this patch, each bucket of the hash table used to store exceptions
could contain 6 items under attack.

After the patch, each bucket would contains a random number of items,
between 6 and 10. The attacker can no longer infer secrets.

This is slightly increasing memory size used by the hash table,
we do not expect this to be a problem.

Following patch is dealing with the same issue in IPv4.

Fixes: 35732d01fe31 ("ipv6: introduce a hash table to store dst cache")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Reported-by: Keyu Man <kman001@ucr.edu>
	Cc: Wei Wang <weiwan@google.com>
	Cc: Martin KaFai Lau <kafai@fb.com>
	Reviewed-by: David Ahern <dsahern@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a00df2caffed3883c341d5685f830434312e4a43)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/route.c
diff --cc net/ipv6/route.c
index d59f5fd3e25e,dbc224023977..000000000000
--- a/net/ipv6/route.c
+++ b/net/ipv6/route.c
@@@ -1443,8 -1653,11 +1443,13 @@@ static int rt6_insert_exception(struct 
  {
  	struct net *net = dev_net(nrt->dst.dev);
  	struct rt6_exception_bucket *bucket;
 -	struct fib6_info *f6i = res->f6i;
  	struct in6_addr *src_key = NULL;
  	struct rt6_exception *rt6_ex;
++<<<<<<< HEAD
++=======
+ 	struct fib6_nh *nh = res->nh;
+ 	int max_depth;
++>>>>>>> a00df2caffed (ipv6: make exception cache less predictible)
  	int err = 0;
  
  	spin_lock_bh(&rt6_exception_lock);
* Unmerged path net/ipv6/route.c
