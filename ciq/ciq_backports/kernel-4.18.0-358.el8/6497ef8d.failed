nbd: provide a way for userspace processes to identify device backends

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Prasanna Kumar Kalever <prasanna.kalever@redhat.com>
commit 6497ef8df568afbf5f3e38825a4590ff41611a54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/6497ef8d.failed

Problem:
On reconfigure of device, there is no way to defend if the backend
storage is matching with the initial backend storage.

Say, if an initial connect request for backend "pool1/image1" got
mapped to /dev/nbd0 and the userspace process is terminated. A next
reconfigure request within NBD_ATTR_DEAD_CONN_TIMEOUT is allowed to
use /dev/nbd0 for a different backend "pool1/image2"

For example, an operation like below could be dangerous:

$ sudo rbd-nbd map --try-netlink rbd-pool/ext4-image
/dev/nbd0
$ sudo blkid /dev/nbd0
/dev/nbd0: UUID="bfc444b4-64b1-418f-8b36-6e0d170cfc04" TYPE="ext4"
$ sudo pkill -9 rbd-nbd
$ sudo rbd-nbd attach --try-netlink --device /dev/nbd0 rbd-pool/xfs-image
/dev/nbd0
$ sudo blkid /dev/nbd0
/dev/nbd0: UUID="d29bf343-6570-4069-a9ea-2fa156ced908" TYPE="xfs"

Solution:
Provide a way for userspace processes to keep some metadata to identify
between the device and the backend, so that when a reconfigure request is
made, we can compare and avoid such dangerous operations.

With this solution, as part of the initial connect request, backend
path can be stored in the sysfs per device config, so that on a reconfigure
request it's easy to check if the backend path matches with the initial
connect backend path.

Please note, ioctl interface to nbd will not have these changes, as there
won't be any reconfigure.

	Signed-off-by: Prasanna Kumar Kalever <prasanna.kalever@redhat.com>
	Reviewed-by: Xiubo Li <xiubli@redhat.com>
	Reviewed-by: Ming Lei <ming.lei@redhat.com>
Link: https://lore.kernel.org/r/20210429102828.31248-1-prasanna.kalever@redhat.com
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 6497ef8df568afbf5f3e38825a4590ff41611a54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nbd.c
diff --cc drivers/block/nbd.c
index 95615ad303d7,b7d663736d35..000000000000
--- a/drivers/block/nbd.c
+++ b/drivers/block/nbd.c
@@@ -1704,8 -1671,19 +1727,24 @@@ static int nbd_dev_add(int index
  	if (!nbd)
  		goto out;
  
++<<<<<<< HEAD
 +	disk = alloc_disk(1 << part_shift);
 +	if (!disk)
++=======
+ 	nbd->tag_set.ops = &nbd_mq_ops;
+ 	nbd->tag_set.nr_hw_queues = 1;
+ 	nbd->tag_set.queue_depth = 128;
+ 	nbd->tag_set.numa_node = NUMA_NO_NODE;
+ 	nbd->tag_set.cmd_size = sizeof(struct nbd_cmd);
+ 	nbd->tag_set.flags = BLK_MQ_F_SHOULD_MERGE |
+ 		BLK_MQ_F_BLOCKING;
+ 	nbd->tag_set.driver_data = nbd;
+ 	nbd->destroy_complete = NULL;
+ 	nbd->backend = NULL;
+ 
+ 	err = blk_mq_alloc_tag_set(&nbd->tag_set);
+ 	if (err)
++>>>>>>> 6497ef8df568 (nbd: provide a way for userspace processes to identify device backends)
  		goto out_free_nbd;
  
  	if (index >= 0) {
@@@ -1805,9 -1767,10 +1844,10 @@@ static struct nla_policy nbd_attr_polic
  	[NBD_ATTR_SOCKETS]		=	{ .type = NLA_NESTED},
  	[NBD_ATTR_DEAD_CONN_TIMEOUT]	=	{ .type = NLA_U64 },
  	[NBD_ATTR_DEVICE_LIST]		=	{ .type = NLA_NESTED},
+ 	[NBD_ATTR_BACKEND_IDENTIFIER]	=	{ .type = NLA_STRING},
  };
  
 -static const struct nla_policy nbd_sock_policy[NBD_SOCK_MAX + 1] = {
 +static struct nla_policy nbd_sock_policy[NBD_SOCK_MAX + 1] = {
  	[NBD_SOCK_FD]			=	{ .type = NLA_U32 },
  };
  
* Unmerged path drivers/block/nbd.c
diff --git a/include/uapi/linux/nbd-netlink.h b/include/uapi/linux/nbd-netlink.h
index c5d0ef7aa7d5..2d0b90964227 100644
--- a/include/uapi/linux/nbd-netlink.h
+++ b/include/uapi/linux/nbd-netlink.h
@@ -35,6 +35,7 @@ enum {
 	NBD_ATTR_SOCKETS,
 	NBD_ATTR_DEAD_CONN_TIMEOUT,
 	NBD_ATTR_DEVICE_LIST,
+	NBD_ATTR_BACKEND_IDENTIFIER,
 	__NBD_ATTR_MAX,
 };
 #define NBD_ATTR_MAX (__NBD_ATTR_MAX - 1)
