RDMA/rxe: Fix extra copies in build_rdma_network_hdr

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Bob Pearson <rpearsonhpe@gmail.com>
commit 1993cbed65bb590a3479d175fc1ac3c775b6bba8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/1993cbed.failed

build_rdma_network_hdr() in rxe_resp.c does more copying than is
needed. Remove this subroutine and eliminate the extra copies for IPV6 and
reduce the extra copying for IPV4.

Fixes: e404f945a610 ("IB/rxe: improved debug prints & code cleanup")
Link: https://lore.kernel.org/r/20210618045742.204195-4-rpearsonhpe@gmail.com
	Signed-off-by: Bob Pearson <rpearsonhpe@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit 1993cbed65bb590a3479d175fc1ac3c775b6bba8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rxe/rxe_resp.c
diff --cc drivers/infiniband/sw/rxe/rxe_resp.c
index 9baa261f9ccd,5718c8bb28ac..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_resp.c
+++ b/drivers/infiniband/sw/rxe/rxe_resp.c
@@@ -758,16 -785,12 +758,25 @@@ static enum resp_states read_reply(stru
  	return state;
  }
  
++<<<<<<< HEAD
 +static void build_rdma_network_hdr(union rdma_network_hdr *hdr,
 +				   struct rxe_pkt_info *pkt)
 +{
 +	struct sk_buff *skb = PKT_TO_SKB(pkt);
 +
 +	memset(hdr, 0, sizeof(*hdr));
 +	if (skb->protocol == htons(ETH_P_IP))
 +		memcpy(&hdr->roce4grh, ip_hdr(skb), sizeof(hdr->roce4grh));
 +	else if (skb->protocol == htons(ETH_P_IPV6))
 +		memcpy(&hdr->ibgrh, ipv6_hdr(skb), sizeof(hdr->ibgrh));
++=======
+ static int invalidate_rkey(struct rxe_qp *qp, u32 rkey)
+ {
+ 	if (rkey_is_mw(rkey))
+ 		return rxe_invalidate_mw(qp, rkey);
+ 	else
+ 		return rxe_invalidate_mr(qp, rkey);
++>>>>>>> 1993cbed65bb (RDMA/rxe: Fix extra copies in build_rdma_network_hdr)
  }
  
  /* Executes a new request. A retried request never reach that function (send
* Unmerged path drivers/infiniband/sw/rxe/rxe_resp.c
