exec: Factor unshare_sighand out of de_thread and call it separately

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 021691559245498dfa15454c9fc4351f367d0b7f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/02169155.failed

This makes the code clearer and makes it easier to implement a mutex
that is not taken over any locations that may block indefinitely waiting
for userspace.

	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
	Reviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
	Reviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>
	Signed-off-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
	Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
(cherry picked from commit 021691559245498dfa15454c9fc4351f367d0b7f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/exec.c
diff --cc fs/exec.c
index c124b3519559,ff74b9a74d34..000000000000
--- a/fs/exec.c
+++ b/fs/exec.c
@@@ -1200,7 -1194,24 +1200,28 @@@ no_thread_group
  	flush_itimer_signals();
  #endif
  
++<<<<<<< HEAD
 +	if (atomic_read(&oldsighand->count) != 1) {
++=======
+ 	BUG_ON(!thread_group_leader(tsk));
+ 	return 0;
+ 
+ killed:
+ 	/* protects against exit_notify() and __exit_signal() */
+ 	read_lock(&tasklist_lock);
+ 	sig->group_exit_task = NULL;
+ 	sig->notify_count = 0;
+ 	read_unlock(&tasklist_lock);
+ 	return -EAGAIN;
+ }
+ 
+ 
+ static int unshare_sighand(struct task_struct *me)
+ {
+ 	struct sighand_struct *oldsighand = me->sighand;
+ 
+ 	if (refcount_read(&oldsighand->count) != 1) {
++>>>>>>> 021691559245 (exec: Factor unshare_sighand out of de_thread and call it separately)
  		struct sighand_struct *newsighand;
  		/*
  		 * This ->sighand is shared with the CLONE_SIGHAND
* Unmerged path fs/exec.c
