exec: Make unlocking exec_update_mutex explict

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 89826cce37542f7950e8f4b9258284805e98430c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/89826cce.failed

With install_exec_creds updated to follow immediately after
setup_new_exec, the failure of unshare_sighand is the only
code path where exec_update_mutex is held but not explicitly
unlocked.

Update that code path to explicitly unlock exec_update_mutex.

Remove the unlocking of exec_update_mutex from free_bprm.

	Reviewed-by: Kees Cook <keescook@chromium.org>
	Reviewed-by: Greg Ungerer <gerg@linux-m68k.org>
	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
(cherry picked from commit 89826cce37542f7950e8f4b9258284805e98430c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/binfmts.h
diff --cc include/linux/binfmts.h
index 8c12228326b0,6f564b9ad882..000000000000
--- a/include/linux/binfmts.h
+++ b/include/linux/binfmts.h
@@@ -44,7 -44,12 +44,16 @@@ struct linux_binprm 
  		 * exec has happened. Used to sanitize execution environment
  		 * and to set AT_SECURE auxv for glibc.
  		 */
++<<<<<<< HEAD
 +		secureexec:1;
++=======
+ 		secureexec:1,
+ 		/*
+ 		 * Set by flush_old_exec, when exec_mmap has been called.
+ 		 * This is past the point of no return.
+ 		 */
+ 		called_exec_mmap:1;
++>>>>>>> 89826cce3754 (exec: Make unlocking exec_update_mutex explict)
  #ifdef __alpha__
  	unsigned int taso:1;
  #endif
diff --git a/fs/exec.c b/fs/exec.c
index 671dee5c3348..5a136ce0a865 100644
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -1310,7 +1310,7 @@ int flush_old_exec(struct linux_binprm * bprm)
 	 */
 	retval = unshare_sighand(me);
 	if (retval)
-		goto out;
+		goto out_unlock;
 
 	set_fs(USER_DS);
 	me->flags &= ~(PF_RANDOMIZE | PF_FORKNOEXEC | PF_KTHREAD |
@@ -1327,6 +1327,8 @@ int flush_old_exec(struct linux_binprm * bprm)
 	do_close_on_exec(me->files);
 	return 0;
 
+out_unlock:
+	mutex_unlock(&me->signal->exec_update_mutex);
 out:
 	return retval;
 }
* Unmerged path include/linux/binfmts.h
