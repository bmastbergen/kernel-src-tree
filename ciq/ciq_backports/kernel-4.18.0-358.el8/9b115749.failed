ipv6: add ip6_sock_set_v6only

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 9b115749acb24d11083ded4fe947ddd654a940e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/9b115749.failed

Add a helper to directly set the IPV6_V6ONLY sockopt from kernel space
without going through a fake uaccess.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9b115749acb24d11083ded4fe947ddd654a940e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/svcsock.c
diff --cc net/sunrpc/svcsock.c
index b2b2654a9179,a391892977cd..000000000000
--- a/net/sunrpc/svcsock.c
+++ b/net/sunrpc/svcsock.c
@@@ -1434,7 -1328,11 +1434,15 @@@ static struct svc_xprt *svc_create_sock
  	struct sockaddr *newsin = (struct sockaddr *)&addr;
  	int		newlen;
  	int		family;
++<<<<<<< HEAD
 +	int		val;
++=======
+ 	RPC_IFDEBUG(char buf[RPC_MAX_ADDRBUFLEN]);
+ 
+ 	dprintk("svc: svc_create_socket(%s, %d, %s)\n",
+ 			serv->sv_program->pg_name, protocol,
+ 			__svc_print_addr(sin, buf, sizeof(buf)));
++>>>>>>> 9b115749acb2 (ipv6: add ip6_sock_set_v6only)
  
  	if (protocol != IPPROTO_UDP && protocol != IPPROTO_TCP) {
  		printk(KERN_WARNING "svc: only UDP and TCP "
diff --git a/include/net/ipv6.h b/include/net/ipv6.h
index e7bfd8b3e8d7..cdfe6f03f0a0 100644
--- a/include/net/ipv6.h
+++ b/include/net/ipv6.h
@@ -1087,4 +1087,15 @@ int ipv6_sock_mc_join_ssm(struct sock *sk, int ifindex,
 			  const struct in6_addr *addr, unsigned int mode);
 int ipv6_sock_mc_drop(struct sock *sk, int ifindex,
 		      const struct in6_addr *addr);
+
+static inline int ip6_sock_set_v6only(struct sock *sk)
+{
+	if (inet_sk(sk)->inet_num)
+		return -EINVAL;
+	lock_sock(sk);
+	sk->sk_ipv6only = true;
+	release_sock(sk);
+	return 0;
+}
+
 #endif /* _NET_IPV6_H */
diff --git a/net/ipv6/ip6_udp_tunnel.c b/net/ipv6/ip6_udp_tunnel.c
index caad40d6e74d..e09b9847ed2a 100644
--- a/net/ipv6/ip6_udp_tunnel.c
+++ b/net/ipv6/ip6_udp_tunnel.c
@@ -24,10 +24,7 @@ int udp_sock_create6(struct net *net, struct udp_port_cfg *cfg,
 		goto error;
 
 	if (cfg->ipv6_v6only) {
-		int val = 1;
-
-		err = kernel_setsockopt(sock, IPPROTO_IPV6, IPV6_V6ONLY,
-					(char *) &val, sizeof(val));
+		err = ip6_sock_set_v6only(sock->sk);
 		if (err < 0)
 			goto error;
 	}
* Unmerged path net/sunrpc/svcsock.c
