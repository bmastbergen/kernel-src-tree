net: mrp: fix definitions of MRP test packets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Rasmus Villemoes <rasmus.villemoes@prevas.dk>
commit dc090de854b9d7fdbc6f4df70bd7fc1b43eeccf8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/dc090de8.failed

Wireshark says that the MRP test packets cannot be decoded - and the
reason for that is that there's a two-byte hole filled with garbage
between the "transitions" and "timestamp" members.

So Wireshark decodes the two garbage bytes and the top two bytes of
the timestamp written by the kernel as the timestamp value (which thus
fluctuates wildly), and interprets the lower two bytes of the
timestamp as a new (type, length) pair, which is of course broken.

Even though this makes the timestamp field in the struct unaligned, it
actually makes it end up on a 32 bit boundary in the frame as mandated
by the standard, since it is preceded by a two byte TLV header.

The struct definitions live under include/uapi/, but they are not
really part of any kernel<->userspace API/ABI, so fixing the
definitions by adding the packed attribute should not cause any
compatibility issues.

	Signed-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
	Reviewed-by: Horatiu Vultur <horatiu.vultur@microchip.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit dc090de854b9d7fdbc6f4df70bd7fc1b43eeccf8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/mrp_bridge.h
diff --cc include/uapi/linux/mrp_bridge.h
index 694a68dcbe43,5ce771327e32..000000000000
--- a/include/uapi/linux/mrp_bridge.h
+++ b/include/uapi/linux/mrp_bridge.h
@@@ -80,4 -112,49 +80,52 @@@ struct br_mrp_ring_link_hdr 
  	__be16 blocked;
  };
  
++<<<<<<< HEAD
++=======
+ struct br_mrp_sub_opt_hdr {
+ 	__u8 type;
+ 	__u8 manufacture_data[MRP_MANUFACTURE_DATA_LENGTH];
+ };
+ 
+ struct br_mrp_test_mgr_nack_hdr {
+ 	__be16 prio;
+ 	__u8 sa[ETH_ALEN];
+ 	__be16 other_prio;
+ 	__u8 other_sa[ETH_ALEN];
+ };
+ 
+ struct br_mrp_test_prop_hdr {
+ 	__be16 prio;
+ 	__u8 sa[ETH_ALEN];
+ 	__be16 other_prio;
+ 	__u8 other_sa[ETH_ALEN];
+ };
+ 
+ struct br_mrp_oui_hdr {
+ 	__u8 oui[MRP_OUI_LENGTH];
+ };
+ 
+ struct br_mrp_in_test_hdr {
+ 	__be16 id;
+ 	__u8 sa[ETH_ALEN];
+ 	__be16 port_role;
+ 	__be16 state;
+ 	__be16 transitions;
+ 	__be32 timestamp;
+ } __attribute__((__packed__));
+ 
+ struct br_mrp_in_topo_hdr {
+ 	__u8 sa[ETH_ALEN];
+ 	__be16 id;
+ 	__be16 interval;
+ };
+ 
+ struct br_mrp_in_link_hdr {
+ 	__u8 sa[ETH_ALEN];
+ 	__be16 port_role;
+ 	__be16 id;
+ 	__be16 interval;
+ };
+ 
++>>>>>>> dc090de854b9 (net: mrp: fix definitions of MRP test packets)
  #endif
* Unmerged path include/uapi/linux/mrp_bridge.h
