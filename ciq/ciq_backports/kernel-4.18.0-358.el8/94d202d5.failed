NFSv42: Copy offload should update the file size when appropriate

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 94d202d5ca39d0eb757d16ef2624b013fb64f64d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/94d202d5.failed

If the result of a copy offload or clone operation is to grow the
destination file size, then we should update it. The reason is that when
a client holds a delegation, it is authoritative for the file size.

Fixes: 16abd2a0c124 ("NFSv4.2: fix client's attribute cache management for copy_file_range")
	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 94d202d5ca39d0eb757d16ef2624b013fb64f64d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs42proc.c
diff --cc fs/nfs/nfs42proc.c
index b00536e115fe,3875120ef3ef..000000000000
--- a/fs/nfs/nfs42proc.c
+++ b/fs/nfs/nfs42proc.c
@@@ -311,14 -389,13 +338,24 @@@ static ssize_t _nfs42_proc_copy(struct 
  			goto out;
  	}
  
++<<<<<<< HEAD
 +	truncate_pagecache_range(dst_inode, pos_dst,
 +				 pos_dst + res->write_res.count);
 +	spin_lock(&dst_inode->i_lock);
 +	nfs_set_cache_invalid(
 +		dst_inode, NFS_INO_REVAL_PAGECACHE | NFS_INO_REVAL_FORCED |
 +				   NFS_INO_INVALID_SIZE | NFS_INO_INVALID_ATTR |
 +				   NFS_INO_INVALID_DATA);
 +	spin_unlock(&dst_inode->i_lock);
++=======
+ 	nfs42_copy_dest_done(dst_inode, pos_dst, res->write_res.count);
+ 
+ 	spin_lock(&src_inode->i_lock);
+ 	nfs_set_cache_invalid(src_inode, NFS_INO_REVAL_PAGECACHE |
+ 						 NFS_INO_REVAL_FORCED |
+ 						 NFS_INO_INVALID_ATIME);
+ 	spin_unlock(&src_inode->i_lock);
++>>>>>>> 94d202d5ca39 (NFSv42: Copy offload should update the file size when appropriate)
  	status = res->write_res.count;
  out:
  	if (args->sync)
* Unmerged path fs/nfs/nfs42proc.c
