fs: remove ksys_dup()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Dominik Brodowski <linux@dominikbrodowski.net>
commit 8243186f0cc7c57cf9d6a110cd7315c44e3e0be8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/8243186f.failed

ksys_dup() is used only at one place in the kernel, namely to duplicate
fd 0 of /dev/console to stdout and stderr. The same functionality can be
achieved by using functions already available within the kernel namespace.

	Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
(cherry picked from commit 8243186f0cc7c57cf9d6a110cd7315c44e3e0be8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	init/main.c
diff --cc init/main.c
index 611835c17a39,ec3a1463ac69..000000000000
--- a/init/main.c
+++ b/init/main.c
@@@ -94,7 -93,7 +94,11 @@@
  #include <linux/rodata_test.h>
  #include <linux/jump_label.h>
  #include <linux/mem_encrypt.h>
++<<<<<<< HEAD
 +#include <linux/kcsan.h>
++=======
+ #include <linux/file.h>
++>>>>>>> 8243186f0cc7 (fs: remove ksys_dup())
  
  #include <asm/io.h>
  #include <asm/bugs.h>
diff --git a/fs/file.c b/fs/file.c
index 69b1edd89824..6bf1e33e0484 100644
--- a/fs/file.c
+++ b/fs/file.c
@@ -1107,7 +1107,7 @@ SYSCALL_DEFINE2(dup2, unsigned int, oldfd, unsigned int, newfd)
 	return ksys_dup3(oldfd, newfd, 0);
 }
 
-int ksys_dup(unsigned int fildes)
+SYSCALL_DEFINE1(dup, unsigned int, fildes)
 {
 	int ret = -EBADF;
 	struct file *file = fget_raw(fildes);
@@ -1122,11 +1122,6 @@ int ksys_dup(unsigned int fildes)
 	return ret;
 }
 
-SYSCALL_DEFINE1(dup, unsigned int, fildes)
-{
-	return ksys_dup(fildes);
-}
-
 int f_dupfd(unsigned int from, struct file *file, unsigned flags)
 {
 	int err;
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index b9e385b85556..ad0cc852188f 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -1150,7 +1150,6 @@ asmlinkage long sys_ni_syscall(void);
 int ksys_mount(const char __user *dev_name, const char __user *dir_name,
 	       const char __user *type, unsigned long flags, void __user *data);
 int ksys_umount(char __user *name, int flags);
-int ksys_dup(unsigned int fildes);
 int ksys_chroot(const char __user *filename);
 ssize_t ksys_write(unsigned int fd, const char __user *buf, size_t count);
 int ksys_chdir(const char __user *filename);
* Unmerged path init/main.c
