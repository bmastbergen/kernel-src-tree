net: bridge: netlink: add extack error messages when processing vlans

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
commit 8f4cc940a149b9fe013a191d6d8dc87aee9a204f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/8f4cc940.failed

Add extack messages on vlan processing errors. We need to move the flags
missing check after the "last" check since we may have "last" set but
lack a range end flag in the next entry.

	Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8f4cc940a149b9fe013a191d6d8dc87aee9a204f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_netlink.c
#	net/bridge/br_private.h
diff --cc net/bridge/br_netlink.c
index 7b28bd8e9345,40942cece51a..000000000000
--- a/net/bridge/br_netlink.c
+++ b/net/bridge/br_netlink.c
@@@ -572,17 -568,13 +572,25 @@@ static int br_process_vlan_info(struct 
  				bool *changed,
  				struct netlink_ext_ack *extack)
  {
++<<<<<<< HEAD
 +	if (!vinfo_curr->vid || vinfo_curr->vid >= VLAN_VID_MASK)
 +		return -EINVAL;
 +
 +	if (vinfo_curr->flags & BRIDGE_VLAN_INFO_RANGE_BEGIN) {
 +		/* check if we are already processing a range */
 +		if (*vinfo_last)
++=======
+ 	if (!br_vlan_valid_id(vinfo_curr->vid, extack))
+ 		return -EINVAL;
+ 
+ 	if (vinfo_curr->flags & BRIDGE_VLAN_INFO_RANGE_BEGIN) {
+ 		if (!br_vlan_valid_range(vinfo_curr, *vinfo_last, extack))
++>>>>>>> 8f4cc940a149 (net: bridge: netlink: add extack error messages when processing vlans)
  			return -EINVAL;
  		*vinfo_last = vinfo_curr;
 +		/* don't allow range of pvids */
 +		if ((*vinfo_last)->flags & BRIDGE_VLAN_INFO_PVID)
 +			return -EINVAL;
  		return 0;
  	}
  
@@@ -590,10 -582,7 +598,14 @@@
  		struct bridge_vlan_info tmp_vinfo;
  		int v, err;
  
++<<<<<<< HEAD
 +		if (!(vinfo_curr->flags & BRIDGE_VLAN_INFO_RANGE_END))
 +			return -EINVAL;
 +
 +		if (vinfo_curr->vid <= (*vinfo_last)->vid)
++=======
+ 		if (!br_vlan_valid_range(vinfo_curr, *vinfo_last, extack))
++>>>>>>> 8f4cc940a149 (net: bridge: netlink: add extack error messages when processing vlans)
  			return -EINVAL;
  
  		memcpy(&tmp_vinfo, *vinfo_last,
diff --cc net/bridge/br_private.h
index e46ee76b07a9,a7dddc5d7790..000000000000
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@@ -501,6 -502,58 +501,61 @@@ static inline bool br_vlan_should_use(c
  	return true;
  }
  
++<<<<<<< HEAD
++=======
+ static inline bool nbp_state_should_learn(const struct net_bridge_port *p)
+ {
+ 	return p->state == BR_STATE_LEARNING || p->state == BR_STATE_FORWARDING;
+ }
+ 
+ static inline bool br_vlan_valid_id(u16 vid, struct netlink_ext_ack *extack)
+ {
+ 	bool ret = vid > 0 && vid < VLAN_VID_MASK;
+ 
+ 	if (!ret)
+ 		NL_SET_ERR_MSG_MOD(extack, "Vlan id is invalid");
+ 
+ 	return ret;
+ }
+ 
+ static inline bool br_vlan_valid_range(const struct bridge_vlan_info *cur,
+ 				       const struct bridge_vlan_info *last,
+ 				       struct netlink_ext_ack *extack)
+ {
+ 	/* pvid flag is not allowed in ranges */
+ 	if (cur->flags & BRIDGE_VLAN_INFO_PVID) {
+ 		NL_SET_ERR_MSG_MOD(extack, "Pvid isn't allowed in a range");
+ 		return false;
+ 	}
+ 
+ 	/* when cur is the range end, check if:
+ 	 *  - it has range start flag
+ 	 *  - range ids are invalid (end is equal to or before start)
+ 	 */
+ 	if (last) {
+ 		if (cur->flags & BRIDGE_VLAN_INFO_RANGE_BEGIN) {
+ 			NL_SET_ERR_MSG_MOD(extack, "Found a new vlan range start while processing one");
+ 			return false;
+ 		} else if (!(cur->flags & BRIDGE_VLAN_INFO_RANGE_END)) {
+ 			NL_SET_ERR_MSG_MOD(extack, "Vlan range end flag is missing");
+ 			return false;
+ 		} else if (cur->vid <= last->vid) {
+ 			NL_SET_ERR_MSG_MOD(extack, "End vlan id is less than or equal to start vlan id");
+ 			return false;
+ 		}
+ 	}
+ 
+ 	/* check for required range flags */
+ 	if (!(cur->flags & (BRIDGE_VLAN_INFO_RANGE_BEGIN |
+ 			    BRIDGE_VLAN_INFO_RANGE_END))) {
+ 		NL_SET_ERR_MSG_MOD(extack, "Both vlan range flags are missing");
+ 		return false;
+ 	}
+ 
+ 	return true;
+ }
+ 
++>>>>>>> 8f4cc940a149 (net: bridge: netlink: add extack error messages when processing vlans)
  static inline int br_opt_get(const struct net_bridge *br,
  			     enum net_bridge_opts opt)
  {
* Unmerged path net/bridge/br_netlink.c
* Unmerged path net/bridge/br_private.h
