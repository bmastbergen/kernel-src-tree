mm/huge_memory.c: make __thp_get_unmapped_area static

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Bharath Vedartham <linux.bhar@gmail.com>
commit b3b07077b01ecbbd98efede778c195567de25b71
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/b3b07077.failed

__thp_get_unmapped_area is only used in mm/huge_memory.c.  Make it static.
Tested by building and booting the kernel.

Link: http://lkml.kernel.org/r/20190504102353.GA22525@bharath12345-Inspiron-5559
	Signed-off-by: Bharath Vedartham <linux.bhar@gmail.com>
	Acked-by: Michal Hocko <mhocko@suse.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit b3b07077b01ecbbd98efede778c195567de25b71)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/huge_memory.c
diff --cc mm/huge_memory.c
index 7d91dae821ed,9f8bce9a6b32..000000000000
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@@ -521,18 -509,7 +521,22 @@@ void prep_transhuge_page(struct page *p
  	set_compound_page_dtor(page, TRANSHUGE_PAGE_DTOR);
  }
  
++<<<<<<< HEAD
 +bool is_transparent_hugepage(struct page *page)
 +{
 +	if (!PageCompound(page))
 +		return 0;
 +
 +	page = compound_head(page);
 +	return is_huge_zero_page(page) ||
 +	       page[1].compound_dtor == TRANSHUGE_PAGE_DTOR;
 +}
 +EXPORT_SYMBOL_GPL(is_transparent_hugepage);
 +
 +unsigned long __thp_get_unmapped_area(struct file *filp, unsigned long len,
++=======
+ static unsigned long __thp_get_unmapped_area(struct file *filp, unsigned long len,
++>>>>>>> b3b07077b01e (mm/huge_memory.c: make __thp_get_unmapped_area static)
  		loff_t off, unsigned long flags, unsigned long size)
  {
  	unsigned long addr;
* Unmerged path mm/huge_memory.c
