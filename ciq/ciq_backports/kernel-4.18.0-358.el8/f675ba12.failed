RDMA/core: Remove unused req_ncomp_notif device operation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-358.el8
commit-author Gal Pressman <galpress@amazon.com>
commit f675ba125bd38acb95d84da04e5fd89aa36cc429
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-358.el8/f675ba12.failed

The request_ncomp_notif device operation and function are unused, remove
them.

Link: https://lore.kernel.org/r/20210311150921.23726-1-galpress@amazon.com
	Signed-off-by: Gal Pressman <galpress@amazon.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit f675ba125bd38acb95d84da04e5fd89aa36cc429)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
diff --cc drivers/infiniband/core/device.c
index 0379573534a3,08f4844abbe3..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -2696,7 -2695,7 +2696,11 @@@ void ib_set_device_ops(struct ib_devic
  	SET_DEVICE_OP(dev_ops, read_counters);
  	SET_DEVICE_OP(dev_ops, reg_dm_mr);
  	SET_DEVICE_OP(dev_ops, reg_user_mr);
++<<<<<<< HEAD
 +	SET_DEVICE_OP(dev_ops, req_ncomp_notif);
++=======
+ 	SET_DEVICE_OP(dev_ops, reg_user_mr_dmabuf);
++>>>>>>> f675ba125bd3 (RDMA/core: Remove unused req_ncomp_notif device operation)
  	SET_DEVICE_OP(dev_ops, req_notify_cq);
  	SET_DEVICE_OP(dev_ops, rereg_user_mr);
  	SET_DEVICE_OP(dev_ops, resize_cq);
* Unmerged path drivers/infiniband/core/device.c
diff --git a/include/rdma/ib_verbs.h b/include/rdma/ib_verbs.h
index 18cbbabacc44..f497fc99c743 100644
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@ -2301,7 +2301,6 @@ struct ib_device_ops {
 	int (*poll_cq)(struct ib_cq *cq, int num_entries, struct ib_wc *wc);
 	int (*peek_cq)(struct ib_cq *cq, int wc_cnt);
 	int (*req_notify_cq)(struct ib_cq *cq, enum ib_cq_notify_flags flags);
-	int (*req_ncomp_notif)(struct ib_cq *cq, int wc_cnt);
 	int (*post_srq_recv)(struct ib_srq *srq,
 			     const struct ib_recv_wr *recv_wr,
 			     const struct ib_recv_wr **bad_recv_wr);
@@ -3913,20 +3912,6 @@ struct ib_cq *ib_cq_pool_get(struct ib_device *dev, unsigned int nr_cqe,
 
 void ib_cq_pool_put(struct ib_cq *cq, unsigned int nr_cqe);
 
-/**
- * ib_req_ncomp_notif - Request completion notification when there are
- *   at least the specified number of unreaped completions on the CQ.
- * @cq: The CQ to generate an event for.
- * @wc_cnt: The number of unreaped completions that should be on the
- *   CQ before an event is generated.
- */
-static inline int ib_req_ncomp_notif(struct ib_cq *cq, int wc_cnt)
-{
-	return cq->device->ops.req_ncomp_notif ?
-		cq->device->ops.req_ncomp_notif(cq, wc_cnt) :
-		-ENOSYS;
-}
-
 /*
  * Drivers that don't need a DMA mapping at the RDMA layer, set dma_device to
  * NULL. This causes the ib_dma* helpers to just stash the kernel virtual
