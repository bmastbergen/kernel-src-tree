KVM: nSVM: always intercept VMLOAD/VMSAVE when nested (CVE-2021-3656)

jira LE-1907
cve CVE-2021-3656
Rebuild_History Non-Buildable kernel-3.10.0-1160.45.1.el7
Rebuild_CHGLOG: - KVM: nSVM: always intercept VMLOAD/VMSAVE when nested(CVE-2021-3656) (Jon Maloy) [1985425] {CVE-2021-3656}
Rebuild_FUZZ: 99.27%
commit-author Maxim Levitsky <mlevitsk@redhat.com>
commit c7dfa4009965a9b2d7b329ee970eb8da0d32f0bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.45.1.el7/c7dfa400.failed

If L1 disables VMLOAD/VMSAVE intercepts, and doesn't enable
Virtual VMLOAD/VMSAVE (currently not supported for the nested hypervisor),
then VMLOAD/VMSAVE must operate on the L1 physical memory, which is only
possible by making L0 intercept these instructions.

Failure to do so allowed the nested guest to run VMLOAD/VMSAVE unintercepted,
and thus read/write portions of the host physical memory.

Fixes: 89c8a4984fc9 ("KVM: SVM: Enable Virtual VMLOAD VMSAVE feature")

	Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
	Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit c7dfa4009965a9b2d7b329ee970eb8da0d32f0bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm/nested.c
* Unmerged path arch/x86/kvm/svm/nested.c
* Unmerged path arch/x86/kvm/svm/nested.c
