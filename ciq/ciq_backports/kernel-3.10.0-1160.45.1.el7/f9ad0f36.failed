PCI: hv: Decouple the func definition in hv_dr_state from VSP message

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.45.1.el7
commit-author Long Li <longli@microsoft.com>
commit f9ad0f361cf3b58fd26d409c6150126547259772
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.45.1.el7/f9ad0f36.failed

hv_dr_state is used to find present PCI devices on the bus. The structure
reuses struct pci_function_description from VSP message to describe a
device.

To prepare support for pci_function_description v2, decouple this
dependence in hv_dr_state so it can work with both v1 and v2 VSP messages.

There is no functionality change.

	Signed-off-by: Long Li <longli@microsoft.com>
	Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
	Reviewed-by: Michael Kelley <mikelley@microsoft.com>
(cherry picked from commit f9ad0f361cf3b58fd26d409c6150126547259772)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci-hyperv.c
diff --cc drivers/pci/pci-hyperv.c
index 7e62f2c2943f,dea197f0fc0b..000000000000
--- a/drivers/pci/pci-hyperv.c
+++ b/drivers/pci/pci-hyperv.c
@@@ -1628,8 -2002,7 +1642,12 @@@ static void pci_devices_present_work(st
  {
  	u32 child_no;
  	bool found;
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
 +	struct list_head *iter;
 +	struct pci_function_description *new_desc;
++=======
+ 	struct hv_pcidev_description *new_desc;
++>>>>>>> f9ad0f361cf3 (PCI: hv: Decouple the func definition in hv_dr_state from VSP message):drivers/pci/controller/pci-hyperv.c
  	struct hv_pci_dev *hpdev;
  	struct hv_pcibus_device *hbus;
  	struct list_head removed;
@@@ -1770,17 -2134,15 +1786,18 @@@ static int hv_pci_start_relations_work(
  	unsigned long flags;
  	bool pending_dr;
  
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
++=======
+ 	if (hbus->state == hv_pcibus_removing) {
+ 		dev_info(&hbus->hdev->device,
+ 			 "PCI VMBus BUS_RELATIONS: ignored\n");
+ 		return -ENOENT;
+ 	}
+ 
++>>>>>>> f9ad0f361cf3 (PCI: hv: Decouple the func definition in hv_dr_state from VSP message):drivers/pci/controller/pci-hyperv.c
  	dr_wrk = kzalloc(sizeof(*dr_wrk), GFP_NOWAIT);
  	if (!dr_wrk)
- 		return;
- 
- 	dr = kzalloc(offsetof(struct hv_dr_state, func) +
- 		     (sizeof(struct pci_function_description) *
- 		      (relations->device_count)), GFP_NOWAIT);
- 	if (!dr)  {
- 		kfree(dr_wrk);
- 		return;
- 	}
+ 		return -ENOMEM;
  
  	INIT_WORK(&dr_wrk->wrk, pci_devices_present_work);
  	dr_wrk->bus = hbus;
@@@ -2696,16 -3117,21 +2748,25 @@@ static void hv_pci_bus_exit(struct hv_d
  	 * access the per-channel ringbuffer any longer.
  	 */
  	if (hdev->channel->rescind)
 -		return 0;
 +		return;
  
++<<<<<<< HEAD:drivers/pci/pci-hyperv.c
 +	/* Delete any children which might still exist. */
 +	memset(&relations, 0, sizeof(relations));
 +	hv_pci_devices_present(hbus, &relations);
++=======
+ 	if (!hibernating) {
+ 		/* Delete any children which might still exist. */
+ 		dr = kzalloc(sizeof(*dr), GFP_KERNEL);
+ 		if (dr && hv_pci_start_relations_work(hbus, dr))
+ 			kfree(dr);
+ 	}
++>>>>>>> f9ad0f361cf3 (PCI: hv: Decouple the func definition in hv_dr_state from VSP message):drivers/pci/controller/pci-hyperv.c
  
  	ret = hv_send_resources_released(hdev);
 -	if (ret) {
 +	if (ret)
  		dev_err(&hdev->device,
  			"Couldn't send resources released packet(s)\n");
 -		return ret;
 -	}
  
  	memset(&pkt.teardown_packet, 0, sizeof(pkt.teardown_packet));
  	init_completion(&comp_pkt.host_event);
* Unmerged path drivers/pci/pci-hyperv.c
