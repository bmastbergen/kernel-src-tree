nvme: fix multipath batched completion accounting

jira LE-2015
Rebuild_History Non-Buildable kernel-5.14.0-427.42.1.el9_4
commit-author Keith Busch <kbusch@kernel.org>
commit 2fe7b422460d14b33027d8770f7be8d26bcb2639
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-427.42.1.el9_4/2fe7b422.failed

Batched completions were missing the io stats accounting and bio trace
events. Move the common code to a helper and call it from the batched
and non-batched functions.

Fixes: d4d957b53d91ee ("nvme-multipath: support io stats on the mpath device")
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Keith Busch <kbusch@kernel.org>
(cherry picked from commit 2fe7b422460d14b33027d8770f7be8d26bcb2639)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 93dd6cfe54ab,79cdd34dfa18..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -377,21 -406,33 +377,39 @@@ static inline enum nvme_disposition nvm
  static inline void nvme_end_req_zoned(struct request *req)
  {
  	if (IS_ENABLED(CONFIG_BLK_DEV_ZONED) &&
 -	    req_op(req) == REQ_OP_ZONE_APPEND) {
 -		struct nvme_ns *ns = req->q->queuedata;
 -
 -		req->__sector = nvme_lba_to_sect(ns->head,
 +	    req_op(req) == REQ_OP_ZONE_APPEND)
 +		req->__sector = nvme_lba_to_sect(req->q->queuedata,
  			le64_to_cpu(nvme_req(req)->result.u64));
 -	}
  }
  
+ static inline void __nvme_end_req(struct request *req)
+ {
+ 	nvme_end_req_zoned(req);
+ 	nvme_trace_bio_complete(req);
+ 	if (req->cmd_flags & REQ_NVME_MPATH)
+ 		nvme_mpath_end_request(req);
+ }
+ 
  static inline void nvme_end_req(struct request *req)
  {
  	blk_status_t status = nvme_error_status(nvme_req(req)->status);
  
++<<<<<<< HEAD
 +	if (unlikely(nvme_req(req)->status && !(req->rq_flags & RQF_QUIET)))
 +		nvme_log_error(req);
 +	nvme_end_req_zoned(req);
 +	nvme_trace_bio_complete(req);
 +	if (req->cmd_flags & REQ_NVME_MPATH)
 +		nvme_mpath_end_request(req);
++=======
+ 	if (unlikely(nvme_req(req)->status && !(req->rq_flags & RQF_QUIET))) {
+ 		if (blk_rq_is_passthrough(req))
+ 			nvme_log_err_passthru(req);
+ 		else
+ 			nvme_log_error(req);
+ 	}
+ 	__nvme_end_req(req);
++>>>>>>> 2fe7b422460d (nvme: fix multipath batched completion accounting)
  	blk_mq_end_request(req, status);
  }
  
* Unmerged path drivers/nvme/host/core.c
