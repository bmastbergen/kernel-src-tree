arm64: mm: add p?d_leaf() definitions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Steven Price <steven.price@arm.com>
commit 8aa82df3c123129025a364d8f823929cc488b834
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/8aa82df3.failed

walk_page_range() is going to be allowed to walk page tables other than
those of user space.  For this it needs to know when it has reached a
'leaf' entry in the page tables.  This information will be provided by the
p?d_leaf() functions/macros.

For arm64, we already have p?d_sect() macros which we can reuse for
p?d_leaf().

pud_sect() is defined as a dummy function when CONFIG_PGTABLE_LEVELS < 3
or CONFIG_ARM64_64K_PAGES is defined.  However when the kernel is
configured this way then architecturally it isn't allowed to have a large
page at this level, and any code using these page walking macros is
implicitly relying on the page size/number of levels being the same as the
kernel.  So it is safe to reuse this for p?d_leaf() as it is an
architectural restriction.

Link: http://lkml.kernel.org/r/20191218162402.45610-5-steven.price@arm.com
	Signed-off-by: Steven Price <steven.price@arm.com>
	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Albert Ou <aou@eecs.berkeley.edu>
	Cc: Alexandre Ghiti <alex@ghiti.fr>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: David S. Miller <davem@davemloft.net>
	Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: James Hogan <jhogan@kernel.org>
	Cc: James Morse <james.morse@arm.com>
	Cc: Jerome Glisse <jglisse@redhat.com>
	Cc: "Liang, Kan" <kan.liang@linux.intel.com>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Paul Burton <paul.burton@mips.com>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Paul Walmsley <paul.walmsley@sifive.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Ralf Baechle <ralf@linux-mips.org>
	Cc: Russell King <linux@armlinux.org.uk>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vasily Gorbik <gor@linux.ibm.com>
	Cc: Vineet Gupta <vgupta@synopsys.com>
	Cc: Zong Li <zong.li@sifive.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 8aa82df3c123129025a364d8f823929cc488b834)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/pgtable.h
diff --cc arch/arm64/include/asm/pgtable.h
index 26da08cb39f3,538c85e62f86..000000000000
--- a/arch/arm64/include/asm/pgtable.h
+++ b/arch/arm64/include/asm/pgtable.h
@@@ -428,10 -441,11 +428,11 @@@ extern pgprot_t phys_mem_access_prot(st
  				 PMD_TYPE_TABLE)
  #define pmd_sect(pmd)		((pmd_val(pmd) & PMD_TYPE_MASK) == \
  				 PMD_TYPE_SECT)
+ #define pmd_leaf(pmd)		pmd_sect(pmd)
  
  #if defined(CONFIG_ARM64_64K_PAGES) || CONFIG_PGTABLE_LEVELS < 3
 -static inline bool pud_sect(pud_t pud) { return false; }
 -static inline bool pud_table(pud_t pud) { return true; }
 +#define pud_sect(pud)		(0)
 +#define pud_table(pud)		(1)
  #else
  #define pud_sect(pud)		((pud_val(pud) & PUD_TYPE_MASK) == \
  				 PUD_TYPE_SECT)
@@@ -507,6 -526,8 +508,11 @@@ static inline phys_addr_t pmd_page_padd
  #define pud_none(pud)		(!pud_val(pud))
  #define pud_bad(pud)		(!(pud_val(pud) & PUD_TABLE_BIT))
  #define pud_present(pud)	pte_present(pud_pte(pud))
++<<<<<<< HEAD
++=======
+ #define pud_leaf(pud)		pud_sect(pud)
+ #define pud_valid(pud)		pte_valid(pud_pte(pud))
++>>>>>>> 8aa82df3c123 (arm64: mm: add p?d_leaf() definitions)
  
  static inline void set_pud(pud_t *pudp, pud_t pud)
  {
* Unmerged path arch/arm64/include/asm/pgtable.h
