mm, slub: introduce static key for slub_debug()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vlastimil Babka <vbabka@suse.cz>
commit ca0cab65ea2b8c1527dc48c8dfd38ae055f5f241
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ca0cab65.failed

One advantage of CONFIG_SLUB_DEBUG is that a generic distro kernel can be
built with the option enabled, but it's inactive until simply enabled on
boot, without rebuilding the kernel.  With a static key, we can further
eliminate the overhead of checking whether a cache has a particular debug
flag enabled if we know that there are no such caches (slub_debug was not
enabled during boot).  We use the same mechanism also for e.g.
page_owner, debug_pagealloc or kmemcg functionality.

This patch introduces the static key and makes the general check for
per-cache debug flags kmem_cache_debug() use it.  This benefits several
call sites, including (slow path but still rather frequent) __slab_free().
The next patches will add more uses.

	Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Acked-by: Roman Gushchin <guro@fb.com>
	Acked-by: Christoph Lameter <cl@linux.com>
	Cc: Jann Horn <jannh@google.com>
	Cc: Vijayanand Jitta <vjitta@codeaurora.org>
	Cc: David Rientjes <rientjes@google.com>
	Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Cc: Pekka Enberg <penberg@kernel.org>
Link: http://lkml.kernel.org/r/20200610163135.17364-7-vbabka@suse.cz
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit ca0cab65ea2b8c1527dc48c8dfd38ae055f5f241)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/slub.c
diff --cc mm/slub.c
index 4642d7769e3e,8adab4c5296d..000000000000
--- a/mm/slub.c
+++ b/mm/slub.c
@@@ -1387,6 -1397,12 +1395,15 @@@ static int __init setup_slub_debug(cha
  		slub_debug_string = saved_str;
  	}
  out:
++<<<<<<< HEAD
++=======
+ 	if (slub_debug != 0 || slub_debug_string)
+ 		static_branch_enable(&slub_debug_enabled);
+ 	if ((static_branch_unlikely(&init_on_alloc) ||
+ 	     static_branch_unlikely(&init_on_free)) &&
+ 	    (slub_debug & SLAB_POISON))
+ 		pr_info("mem auto-init: SLAB_POISON will take precedence over init_on_alloc/init_on_free\n");
++>>>>>>> ca0cab65ea2b (mm, slub: introduce static key for slub_debug())
  	return 1;
  }
  
* Unmerged path mm/slub.c
