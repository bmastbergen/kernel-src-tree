libbpf: Add support for command BPF_ENABLE_STATS

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Song Liu <songliubraving@fb.com>
commit 0bee106716cfb2c6da81916b968395db22bd7755
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/0bee1067.failed

bpf_enable_stats() is added to enable given stats.

	Signed-off-by: Song Liu <songliubraving@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200430071506.1408910-3-songliubraving@fb.com
(cherry picked from commit 0bee106716cfb2c6da81916b968395db22bd7755)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/bpf.c
#	tools/lib/bpf/libbpf.map
diff --cc tools/lib/bpf/bpf.c
index da45889fc732,43322f0d6c7f..000000000000
--- a/tools/lib/bpf/bpf.c
+++ b/tools/lib/bpf/bpf.c
@@@ -827,9 -842,12 +827,21 @@@ int bpf_task_fd_query(int pid, int fd, 
  	return err;
  }
  
++<<<<<<< HEAD
 +/* RHEL-only, libbpf version workaround */
 +extern int bpf_btf_get_next_id_v0_0_4(__u32 start_id, __u32 *next_id)
 +	__attribute__((alias("bpf_btf_get_next_id_v0_0_5")));
 +
 +COMPAT_VERSION(bpf_btf_get_next_id_v0_0_4,  bpf_btf_get_next_id, LIBBPF_0.0.4)
 +DEFAULT_VERSION(bpf_btf_get_next_id_v0_0_5, bpf_btf_get_next_id, LIBBPF_0.0.5)
++=======
+ int bpf_enable_stats(enum bpf_stats_type type)
+ {
+ 	union bpf_attr attr;
+ 
+ 	memset(&attr, 0, sizeof(attr));
+ 	attr.enable_stats.type = type;
+ 
+ 	return sys_bpf(BPF_ENABLE_STATS, &attr, sizeof(attr));
+ }
++>>>>>>> 0bee106716cf (libbpf: Add support for command BPF_ENABLE_STATS)
diff --cc tools/lib/bpf/libbpf.map
index 69599528ddbe,e03bd4db827e..000000000000
--- a/tools/lib/bpf/libbpf.map
+++ b/tools/lib/bpf/libbpf.map
@@@ -286,3 -254,10 +286,13 @@@ LIBBPF_0.0.8 
  		bpf_program__set_lsm;
  		bpf_set_link_xdp_fd_opts;
  } LIBBPF_0.0.7;
++<<<<<<< HEAD
++=======
+ 
+ LIBBPF_0.0.9 {
+ 	global:
+ 		bpf_enable_stats;
+ 		bpf_link_get_fd_by_id;
+ 		bpf_link_get_next_id;
+ } LIBBPF_0.0.8;
++>>>>>>> 0bee106716cf (libbpf: Add support for command BPF_ENABLE_STATS)
* Unmerged path tools/lib/bpf/bpf.c
diff --git a/tools/lib/bpf/bpf.h b/tools/lib/bpf/bpf.h
index f8c9bd418cb7..4359ada7b89b 100644
--- a/tools/lib/bpf/bpf.h
+++ b/tools/lib/bpf/bpf.h
@@ -231,6 +231,7 @@ LIBBPF_API int bpf_load_btf(void *btf, __u32 btf_size, char *log_buf,
 LIBBPF_API int bpf_task_fd_query(int pid, int fd, __u32 flags, char *buf,
 				 __u32 *buf_len, __u32 *prog_id, __u32 *fd_type,
 				 __u64 *probe_offset, __u64 *probe_addr);
+LIBBPF_API int bpf_enable_stats(enum bpf_stats_type type);
 
 #ifdef __cplusplus
 } /* extern "C" */
* Unmerged path tools/lib/bpf/libbpf.map
