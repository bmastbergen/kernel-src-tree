x86/vdso: Fix flip/flop vdso build bug

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Naohiro Aota <naohiro.aota@wdc.com>
commit e9a1379f9219be439f47a0f063431a92dc529eda
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/e9a1379f.failed

Two consecutive "make" on an already compiled kernel tree will show
different behavior:

$ make
  CALL    scripts/checksyscalls.sh
  CALL    scripts/atomic/check-atomics.sh
  DESCEND  objtool
  CHK     include/generated/compile.h
  VDSOCHK arch/x86/entry/vdso/vdso64.so.dbg
  VDSOCHK arch/x86/entry/vdso/vdso32.so.dbg
Kernel: arch/x86/boot/bzImage is ready  (#3)
  Building modules, stage 2.
  MODPOST 12 modules

$ make
make
  CALL    scripts/checksyscalls.sh
  CALL    scripts/atomic/check-atomics.sh
  DESCEND  objtool
  CHK     include/generated/compile.h
  VDSO    arch/x86/entry/vdso/vdso64.so.dbg
  OBJCOPY arch/x86/entry/vdso/vdso64.so
  VDSO2C  arch/x86/entry/vdso/vdso-image-64.c
  CC      arch/x86/entry/vdso/vdso-image-64.o
  VDSO    arch/x86/entry/vdso/vdso32.so.dbg
  OBJCOPY arch/x86/entry/vdso/vdso32.so
  VDSO2C  arch/x86/entry/vdso/vdso-image-32.c
  CC      arch/x86/entry/vdso/vdso-image-32.o
  AR      arch/x86/entry/vdso/built-in.a
  AR      arch/x86/entry/built-in.a
  AR      arch/x86/built-in.a
  GEN     .version
  CHK     include/generated/compile.h
  UPD     include/generated/compile.h
  CC      init/version.o
  AR      init/built-in.a
  LD      vmlinux.o
<snip>

This is causing "LD vmlinux" once every two times even without any
modifications. This is the same bug fixed in commit 92a4728608a8
("x86/boot: Fix if_changed build flip/flop bug"). Two "if_changed" cannot
be used in one target.

Fix this merging two commands into one function.

Fixes: 7ac870747988 ("x86/vdso: Switch to generic vDSO implementation")
	Signed-off-by: Naohiro Aota <naohiro.aota@wdc.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Reviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Reviewed-by: Masahiro Yamada <yamada.masahiro@socionext.com>
Link: https://lkml.kernel.org/r/20190712101556.17833-1-naohiro.aota@wdc.com

(cherry picked from commit e9a1379f9219be439f47a0f063431a92dc529eda)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/entry/vdso/Makefile
diff --cc arch/x86/entry/vdso/Makefile
index 98b632d5033a,34773395139a..000000000000
--- a/arch/x86/entry/vdso/Makefile
+++ b/arch/x86/entry/vdso/Makefile
@@@ -46,13 -52,11 +46,17 @@@ targets += $(vdso_img_sodbg) $(vdso_img
  
  CPPFLAGS_vdso.lds += -P -C
  
 -VDSO_LDFLAGS_vdso.lds = -m elf_x86_64 -soname linux-vdso.so.1 --no-undefined \
 -			-z max-page-size=4096
 +VDSO_LDFLAGS_vdso.lds = -m64 -Wl,-soname=linux-vdso.so.1 \
 +			-Wl,--no-undefined \
 +			-Wl,-z,max-page-size=4096 -Wl,-z,common-page-size=4096 \
 +			$(DISABLE_LTO)
  
  $(obj)/vdso64.so.dbg: $(obj)/vdso.lds $(vobjs) FORCE
++<<<<<<< HEAD
 +	$(call if_changed,vdso)
++=======
+ 	$(call if_changed,vdso_and_check)
++>>>>>>> e9a1379f9219 (x86/vdso: Fix flip/flop vdso build bug)
  
  HOST_EXTRACFLAGS += -I$(srctree)/tools/include -I$(srctree)/include/uapi -I$(srctree)/arch/$(SUBARCH)/include/uapi
  hostprogs-y			+= vdso2c
@@@ -127,10 -126,10 +131,14 @@@ $(obj)/%.so: $(obj)/%.so.db
  	$(call if_changed,objcopy)
  
  $(obj)/vdsox32.so.dbg: $(obj)/vdsox32.lds $(vobjx32s) FORCE
++<<<<<<< HEAD
 +	$(call if_changed,vdso)
++=======
+ 	$(call if_changed,vdso_and_check)
++>>>>>>> e9a1379f9219 (x86/vdso: Fix flip/flop vdso build bug)
  
 -CPPFLAGS_vdso32.lds = $(CPPFLAGS_vdso.lds)
 -VDSO_LDFLAGS_vdso32.lds = -m elf_i386 -soname linux-gate.so.1
 +CPPFLAGS_vdso32/vdso32.lds = $(CPPFLAGS_vdso.lds)
 +VDSO_LDFLAGS_vdso32.lds = -m32 -Wl,-m,elf_i386 -Wl,-soname=linux-gate.so.1
  
  targets += vdso32/vdso32.lds
  targets += vdso32/note.o vdso32/system_call.o vdso32/sigreturn.o
@@@ -166,21 -165,25 +174,28 @@@ $(obj)/vdso32.so.dbg: FORCE 
  		      $(obj)/vdso32/note.o \
  		      $(obj)/vdso32/system_call.o \
  		      $(obj)/vdso32/sigreturn.o
++<<<<<<< HEAD
 +	$(call if_changed,vdso)
++=======
+ 	$(call if_changed,vdso_and_check)
++>>>>>>> e9a1379f9219 (x86/vdso: Fix flip/flop vdso build bug)
  
  #
  # The DSO images are built using a special linker script.
  #
  quiet_cmd_vdso = VDSO    $@
 -      cmd_vdso = $(LD) -nostdlib -o $@ \
 +      cmd_vdso = $(CC) -nostdlib -o $@ \
  		       $(VDSO_LDFLAGS) $(VDSO_LDFLAGS_$(filter %.lds,$(^F))) \
 -		       -T $(filter %.lds,$^) $(filter %.o,$^) && \
 +		       -Wl,-T,$(filter %.lds,$^) $(filter %.o,$^) && \
  		 sh $(srctree)/$(src)/checkundef.sh '$(NM)' '$@'
  
 -VDSO_LDFLAGS = -shared $(call ld-option, --hash-style=both) \
 -	$(call ld-option, --build-id) $(call ld-option, --eh-frame-hdr) \
 -	-Bsymbolic
 +VDSO_LDFLAGS = -fPIC -shared $(call cc-ldoption, -Wl$(comma)--hash-style=both) \
 +	$(call cc-ldoption, -Wl$(comma)--build-id) -Wl,-Bsymbolic $(LTO_CFLAGS)
  GCOV_PROFILE := n
  
+ quiet_cmd_vdso_and_check = VDSO    $@
+       cmd_vdso_and_check = $(cmd_vdso); $(cmd_vdso_check)
+ 
  #
  # Install the unstripped copies of vdso*.so.  If our toolchain supports
  # build-id, install .build-id links as well.
* Unmerged path arch/x86/entry/vdso/Makefile
