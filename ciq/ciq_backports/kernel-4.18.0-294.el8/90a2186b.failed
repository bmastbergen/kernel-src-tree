efi/x86: Clean up the eboot code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Ingo Molnar <mingo@kernel.org>
commit 90a2186b7df183c2fd35f724d0d16a0c10fac9b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/90a2186b.failed

Various small cleanups:

 - Standardize printk messages:

     'alloc' => 'allocate'
     'mem'   => 'memory'

   also put variable names in printk messages between quotes.

 - Align mass-assignments vertically for better readability

 - Break multi-line function prototypes at the name where possible,
   not in the middle of the parameter list

 - Use a newline before return statements consistently.

 - Use curly braces in a balanced fashion.

 - Remove stray newlines.

No change in functionality.

	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Matt Fleming <matt@codeblueprint.co.uk>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-efi@vger.kernel.org
Link: http://lkml.kernel.org/r/20180711094040.12506-2-ard.biesheuvel@linaro.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 90a2186b7df183c2fd35f724d0d16a0c10fac9b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/eboot.c
diff --cc arch/x86/boot/compressed/eboot.c
index 589c8337729e,9f6813493945..000000000000
--- a/arch/x86/boot/compressed/eboot.c
+++ b/arch/x86/boot/compressed/eboot.c
@@@ -819,44 -814,12 +820,52 @@@ static efi_status_t alloc_e820ext(u32 n
  	return status;
  }
  
 +static efi_status_t allocate_e820(struct boot_params *params,
 +				  struct setup_data **e820ext,
 +				  u32 *e820ext_size)
 +{
 +	unsigned long map_size, desc_size, buff_size;
 +	struct efi_boot_memmap boot_map;
 +	efi_memory_desc_t *map;
 +	efi_status_t status;
 +	__u32 nr_desc;
 +
 +	boot_map.map		= &map;
 +	boot_map.map_size	= &map_size;
 +	boot_map.desc_size	= &desc_size;
 +	boot_map.desc_ver	= NULL;
 +	boot_map.key_ptr	= NULL;
 +	boot_map.buff_size	= &buff_size;
 +
 +	status = efi_get_memory_map(sys_table, &boot_map);
 +	if (status != EFI_SUCCESS)
 +		return status;
 +
 +	nr_desc = buff_size / desc_size;
 +
 +	if (nr_desc > ARRAY_SIZE(params->e820_table)) {
 +		u32 nr_e820ext = nr_desc - ARRAY_SIZE(params->e820_table);
 +
 +		status = alloc_e820ext(nr_e820ext, e820ext, e820ext_size);
 +		if (status != EFI_SUCCESS)
 +			return status;
 +	}
 +
 +	return EFI_SUCCESS;
 +}
 +
  struct exit_boot_struct {
++<<<<<<< HEAD
 +	struct boot_params *boot_params;
 +	struct efi_info *efi;
 +	bool is64;
++=======
+ 	struct boot_params	*boot_params;
+ 	struct efi_info		*efi;
+ 	struct setup_data	*e820ext;
+ 	__u32			e820ext_size;
+ 	bool			is64;
++>>>>>>> 90a2186b7df1 (efi/x86: Clean up the eboot code)
  };
  
  static efi_status_t exit_boot_func(efi_system_table_t *sys_table_arg,
@@@ -897,19 -875,17 +906,33 @@@ static efi_status_t exit_boot(struct bo
  	struct efi_boot_memmap map;
  	struct exit_boot_struct priv;
  
++<<<<<<< HEAD
 +	map.map =		&mem_map;
 +	map.map_size =		&map_sz;
 +	map.desc_size =		&desc_size;
 +	map.desc_ver =		&desc_version;
 +	map.key_ptr =		&key;
 +	map.buff_size =		&buff_size;
 +	priv.boot_params =	boot_params;
 +	priv.efi =		&boot_params->efi_info;
 +	priv.is64 =		is64;
++=======
+ 	map.map			= &mem_map;
+ 	map.map_size		= &map_sz;
+ 	map.desc_size		= &desc_size;
+ 	map.desc_ver		= &desc_version;
+ 	map.key_ptr		= &key;
+ 	map.buff_size		= &buff_size;
+ 	priv.boot_params	= boot_params;
+ 	priv.efi		= &boot_params->efi_info;
+ 	priv.e820ext		= NULL;
+ 	priv.e820ext_size	= 0;
+ 	priv.is64		= is64;
++>>>>>>> 90a2186b7df1 (efi/x86: Clean up the eboot code)
 +
 +	status = allocate_e820(boot_params, &e820ext, &e820ext_size);
 +	if (status != EFI_SUCCESS)
 +		return status;
  
  	/* Might as well exit boot services now */
  	status = efi_exit_boot_services(sys_table, handle, &map, &priv,
@@@ -917,8 -893,11 +940,14 @@@
  	if (status != EFI_SUCCESS)
  		return status;
  
++<<<<<<< HEAD
++=======
+ 	e820ext			= priv.e820ext;
+ 	e820ext_size		= priv.e820ext_size;
+ 
++>>>>>>> 90a2186b7df1 (efi/x86: Clean up the eboot code)
  	/* Historic? */
- 	boot_params->alt_mem_k = 32 * 1024;
+ 	boot_params->alt_mem_k	= 32 * 1024;
  
  	status = setup_e820(boot_params, e820ext, e820ext_size);
  	if (status != EFI_SUCCESS)
* Unmerged path arch/x86/boot/compressed/eboot.c
