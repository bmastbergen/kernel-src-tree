mm/slab.c: fix kernel-doc warning for __ksize()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Randy Dunlap <rdunlap@infradead.org>
commit 87bf4f71af4fb162033fbd98b4252ec11a715dbe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/87bf4f71.failed

Fix kernel-doc warning in mm/slab.c:

  mm/slab.c:4215: warning: Function parameter or member 'objp' not described in '__ksize'

Also add Return: documentation section for this function.

Link: http://lkml.kernel.org/r/68c9fd7d-f09e-d376-e292-c7b2bdf1774d@infradead.org
Fixes: 10d1f8cb3965 ("mm/slab: refactor common ksize KASAN logic into slab_common.c")
	Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
	Acked-by: Marco Elver <elver@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 87bf4f71af4fb162033fbd98b4252ec11a715dbe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/slab.c
diff --cc mm/slab.c
index 98c009baf3ea,66e5d8032bae..000000000000
--- a/mm/slab.c
+++ b/mm/slab.c
@@@ -4450,19 -4205,17 +4450,29 @@@ void __check_heap_object(const void *pt
  #endif /* CONFIG_HARDENED_USERCOPY */
  
  /**
++<<<<<<< HEAD
 + * ksize - get the actual amount of memory allocated for a given object
 + * @objp: Pointer to the object
 + *
 + * kmalloc may internally round up allocations and return more memory
 + * than requested. ksize() can be used to determine the actual amount of
 + * memory allocated. The caller may use this additional memory, even though
 + * a smaller amount of memory was initially specified with the kmalloc call.
 + * The caller must guarantee that objp points to a valid object previously
 + * allocated with either kmalloc() or kmem_cache_alloc(). The object
 + * must not be freed during the duration of the call.
++=======
+  * __ksize -- Uninstrumented ksize.
+  * @objp: pointer to the object
+  *
+  * Unlike ksize(), __ksize() is uninstrumented, and does not provide the same
+  * safety checks as ksize() with KASAN instrumentation enabled.
+  *
+  * Return: size of the actual memory used by @objp in bytes
++>>>>>>> 87bf4f71af4f (mm/slab.c: fix kernel-doc warning for __ksize())
   */
 -size_t __ksize(const void *objp)
 +size_t ksize(const void *objp)
  {
 -	struct kmem_cache *c;
  	size_t size;
  
  	BUG_ON(!objp);
* Unmerged path mm/slab.c
