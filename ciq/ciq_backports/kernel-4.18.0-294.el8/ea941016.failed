scsi: core: doc: Change function comments to kernel-doc style

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author André Almeida <andrealmeid@collabora.com>
commit ea941016abf7e6f81b130f8eb792e9ad0971237a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ea941016.failed

Despite of functions being documented, they are not in the kernel-doc
specification, and could not be included in kernel documentation. Change
the style of functions comments to be compliant to the kernel-doc style.
When the function comments are outdated, update then.

[mkp: a few edits]

Link: https://lore.kernel.org/r/20200419050148.33371-1-andrealmeid@collabora.com
	Signed-off-by: André Almeida <andrealmeid@collabora.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit ea941016abf7e6f81b130f8eb792e9ad0971237a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_lib.c
diff --cc drivers/scsi/scsi_lib.c
index ce1209ca7818,53b9ff12e030..000000000000
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@@ -986,16 -953,38 +961,43 @@@ void scsi_io_completion(struct scsi_cmn
  		scsi_io_completion_action(cmd, result);
  }
  
++<<<<<<< HEAD
 +/*
 + * Function:    scsi_init_io()
++=======
+ static blk_status_t scsi_init_sgtable(struct request *req,
+ 		struct scsi_data_buffer *sdb)
+ {
+ 	int count;
+ 
+ 	/*
+ 	 * If sg table allocation fails, requeue request later.
+ 	 */
+ 	if (unlikely(sg_alloc_table_chained(&sdb->table,
+ 			blk_rq_nr_phys_segments(req), sdb->table.sgl,
+ 			SCSI_INLINE_SG_CNT)))
+ 		return BLK_STS_RESOURCE;
+ 
+ 	/* 
+ 	 * Next, walk the list, and fill in the addresses and sizes of
+ 	 * each segment.
+ 	 */
+ 	count = blk_rq_map_sg(req->q, req, sdb->table.sgl);
+ 	BUG_ON(count > sdb->table.nents);
+ 	sdb->table.nents = count;
+ 	sdb->length = blk_rq_payload_bytes(req);
+ 	return BLK_STS_OK;
+ }
+ 
+ /**
+  * scsi_init_io - SCSI I/O initialization function.
+  * @cmd:  command descriptor we wish to initialize
++>>>>>>> ea941016abf7 (scsi: core: doc: Change function comments to kernel-doc style)
   *
-  * Purpose:     SCSI I/O initialize function.
-  *
-  * Arguments:   cmd   - Command descriptor we wish to initialize
-  *
-  * Returns:     BLK_STS_OK on success
-  *		BLK_STS_RESOURCE if the failure is retryable
-  *		BLK_STS_IOERR if the failure is fatal
+  * Returns:
+  * * BLK_STS_OK       - on success
+  * * BLK_STS_RESOURCE - if the failure is retryable
+  * * BLK_STS_IOERR    - if the failure is fatal
   */
  blk_status_t scsi_init_io(struct scsi_cmnd *cmd)
  {
* Unmerged path drivers/scsi/scsi_lib.c
