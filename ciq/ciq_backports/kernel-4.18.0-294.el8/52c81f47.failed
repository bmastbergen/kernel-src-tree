RDMA/mlx5: Remove duplicated assignment to variable rcqe_sz

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Colin Ian King <colin.king@canonical.com>
commit 52c81f47f0d2680f0b2e7b61c1fa4d8ad35f3020
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/52c81f47.failed

The variable rcqe_sz is being unnecessarily assigned twice, fix this by
removing one of the duplicates.

Fixes: 8bde2c509e40 ("RDMA/mlx5: Update all DRIVER QP places to use QP subtype")
Link: https://lore.kernel.org/r/20200507151610.52636-1-colin.king@canonical.com
Addresses-Coverity: ("Evaluation order violation")
	Signed-off-by: Colin Ian King <colin.king@canonical.com>
	Acked-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 52c81f47f0d2680f0b2e7b61c1fa4d8ad35f3020)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/qp.c
diff --cc drivers/infiniband/hw/mlx5/qp.c
index d7b72402de2d,c571b7a97f10..000000000000
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@@ -2196,31 -1975,26 +2196,38 @@@ static int create_qp_common(struct mlx5
  
  	MLX5_SET(qpc, qpc, st, mlx5_st);
  	MLX5_SET(qpc, qpc, pm_state, MLX5_QP_PM_MIGRATED);
 -	MLX5_SET(qpc, qpc, pd, to_mpd(pd)->pdn);
  
 -	if (qp->flags_en & MLX5_QP_FLAG_SIGNATURE)
 +	if (init_attr->qp_type != MLX5_IB_QPT_REG_UMR)
 +		MLX5_SET(qpc, qpc, pd, to_mpd(pd ? pd : devr->p0)->pdn);
 +	else
 +		MLX5_SET(qpc, qpc, latency_sensitive, 1);
 +
 +
 +	if (qp->wq_sig)
  		MLX5_SET(qpc, qpc, wq_signature, 1);
  
 -	if (qp->flags & IB_QP_CREATE_BLOCK_MULTICAST_LOOPBACK)
 +	if (qp->flags & MLX5_IB_QP_BLOCK_MULTICAST_LOOPBACK)
  		MLX5_SET(qpc, qpc, block_lb_mc, 1);
  
 -	if (qp->flags & IB_QP_CREATE_CROSS_CHANNEL)
 +	if (qp->flags & MLX5_IB_QP_CROSS_CHANNEL)
  		MLX5_SET(qpc, qpc, cd_master, 1);
 -	if (qp->flags & IB_QP_CREATE_MANAGED_SEND)
 +	if (qp->flags & MLX5_IB_QP_MANAGED_SEND)
  		MLX5_SET(qpc, qpc, cd_slave_send, 1);
 -	if (qp->flags & IB_QP_CREATE_MANAGED_RECV)
 +	if (qp->flags & MLX5_IB_QP_MANAGED_RECV)
  		MLX5_SET(qpc, qpc, cd_slave_receive, 1);
 -	if (qp->flags_en & MLX5_QP_FLAG_PACKET_BASED_CREDIT_MODE)
 +	if (qp->flags & MLX5_IB_QP_PACKET_BASED_CREDIT)
  		MLX5_SET(qpc, qpc, req_e2e_credit_mode, 1);
++<<<<<<< HEAD
 +	if (qp->scat_cqe && (init_attr->qp_type == IB_QPT_RC ||
 +			     init_attr->qp_type == IB_QPT_UC)) {
 +		int rcqe_sz = rcqe_sz =
 +			mlx5_ib_get_cqe_size(init_attr->recv_cq);
++=======
+ 	if ((qp->flags_en & MLX5_QP_FLAG_SCATTER_CQE) &&
+ 	    (init_attr->qp_type == IB_QPT_RC ||
+ 	     init_attr->qp_type == IB_QPT_UC)) {
+ 		int rcqe_sz = mlx5_ib_get_cqe_size(init_attr->recv_cq);
++>>>>>>> 52c81f47f0d2 (RDMA/mlx5: Remove duplicated assignment to variable rcqe_sz)
  
  		MLX5_SET(qpc, qpc, cs_res,
  			 rcqe_sz == 128 ? MLX5_RES_SCAT_DATA64_CQE :
* Unmerged path drivers/infiniband/hw/mlx5/qp.c
