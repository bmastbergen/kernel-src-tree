scsi: qla2xxx: Fix the size used in a 'dma_free_coherent()' call

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Christophe JAILLET <christophe.jaillet@wanadoo.fr>
commit 650b323c8e7c3ac4830a20895b1d444fd68dd787
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/650b323c.failed

Update the size used in 'dma_free_coherent()' in order to match the one
used in the corresponding 'dma_alloc_coherent()'.

[mkp: removed memset() hunk that has already been addressed]

Link: https://lore.kernel.org/r/20200802110721.677707-1-christophe.jaillet@wanadoo.fr
Fixes: 4161cee52df8 ("[SCSI] qla4xxx: Add host statistics support")
	Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 650b323c8e7c3ac4830a20895b1d444fd68dd787)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_mbx.c
diff --cc drivers/scsi/qla2xxx/qla_mbx.c
index 51088ca14e9c,a43d7229f9a1..000000000000
--- a/drivers/scsi/qla2xxx/qla_mbx.c
+++ b/drivers/scsi/qla2xxx/qla_mbx.c
@@@ -4858,6 -4905,71 +4858,74 @@@ qla24xx_get_port_login_templ(scsi_qla_h
  	return rval;
  }
  
++<<<<<<< HEAD
++=======
+ #define PUREX_CMD_COUNT	2
+ int
+ qla25xx_set_els_cmds_supported(scsi_qla_host_t *vha)
+ {
+ 	int rval;
+ 	mbx_cmd_t mc;
+ 	mbx_cmd_t *mcp = &mc;
+ 	uint8_t *els_cmd_map;
+ 	dma_addr_t els_cmd_map_dma;
+ 	uint8_t cmd_opcode[PUREX_CMD_COUNT];
+ 	uint8_t i, index, purex_bit;
+ 	struct qla_hw_data *ha = vha->hw;
+ 
+ 	if (!IS_QLA25XX(ha) && !IS_QLA2031(ha) &&
+ 	    !IS_QLA27XX(ha) && !IS_QLA28XX(ha))
+ 		return QLA_SUCCESS;
+ 
+ 	ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x1197,
+ 	    "Entered %s.\n", __func__);
+ 
+ 	els_cmd_map = dma_alloc_coherent(&ha->pdev->dev, ELS_CMD_MAP_SIZE,
+ 	    &els_cmd_map_dma, GFP_KERNEL);
+ 	if (!els_cmd_map) {
+ 		ql_log(ql_log_warn, vha, 0x7101,
+ 		    "Failed to allocate RDP els command param.\n");
+ 		return QLA_MEMORY_ALLOC_FAILED;
+ 	}
+ 
+ 	/* List of Purex ELS */
+ 	cmd_opcode[0] = ELS_FPIN;
+ 	cmd_opcode[1] = ELS_RDP;
+ 
+ 	for (i = 0; i < PUREX_CMD_COUNT; i++) {
+ 		index = cmd_opcode[i] / 8;
+ 		purex_bit = cmd_opcode[i] % 8;
+ 		els_cmd_map[index] |= 1 << purex_bit;
+ 	}
+ 
+ 	mcp->mb[0] = MBC_SET_RNID_PARAMS;
+ 	mcp->mb[1] = RNID_TYPE_ELS_CMD << 8;
+ 	mcp->mb[2] = MSW(LSD(els_cmd_map_dma));
+ 	mcp->mb[3] = LSW(LSD(els_cmd_map_dma));
+ 	mcp->mb[6] = MSW(MSD(els_cmd_map_dma));
+ 	mcp->mb[7] = LSW(MSD(els_cmd_map_dma));
+ 	mcp->out_mb = MBX_7|MBX_6|MBX_3|MBX_2|MBX_1|MBX_0;
+ 	mcp->in_mb = MBX_1|MBX_0;
+ 	mcp->tov = MBX_TOV_SECONDS;
+ 	mcp->flags = MBX_DMA_OUT;
+ 	mcp->buf_size = ELS_CMD_MAP_SIZE;
+ 	rval = qla2x00_mailbox_command(vha, mcp);
+ 
+ 	if (rval != QLA_SUCCESS) {
+ 		ql_dbg(ql_dbg_mbx, vha, 0x118d,
+ 		    "Failed=%x (%x,%x).\n", rval, mcp->mb[0], mcp->mb[1]);
+ 	} else {
+ 		ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x118c,
+ 		    "Done %s.\n", __func__);
+ 	}
+ 
+ 	dma_free_coherent(&ha->pdev->dev, ELS_CMD_MAP_SIZE,
+ 	   els_cmd_map, els_cmd_map_dma);
+ 
+ 	return rval;
+ }
+ 
++>>>>>>> 650b323c8e7c (scsi: qla2xxx: Fix the size used in a 'dma_free_coherent()' call)
  int
  qla24xx_get_buffer_credits(scsi_qla_host_t *vha, struct buffer_credit_24xx *bbc,
  	dma_addr_t bbc_dma)
* Unmerged path drivers/scsi/qla2xxx/qla_mbx.c
