net: atlantic: fix ip dst and ipv6 address filters

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Dmitry Bogdanov <dbogdanov@marvell.com>
commit a42e6aee7f47a8a68d09923c720fc8f605a04207
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a42e6aee.failed

This patch fixes ip dst and ipv6 address filters.
There were 2 mistakes in the code, which led to the issue:
* invalid register was used for ipv4 dst address;
* incorrect write order of dwords for ipv6 addresses.

Fixes: 23e7a718a49b ("net: aquantia: add rx-flow filter definitions")
	Signed-off-by: Dmitry Bogdanov <dbogdanov@marvell.com>
	Signed-off-by: Mark Starovoytov <mstarovoitov@marvell.com>
	Signed-off-by: Alexander Lobakin <alobakin@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a42e6aee7f47a8a68d09923c720fc8f605a04207)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh_internal.h
diff --cc drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh_internal.h
index 5ddaed96cf74,7430ff025134..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh_internal.h
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh_internal.h
@@@ -1311,6 -1326,52 +1311,55 @@@
  /* default value of bitfield et_val{f}[f:0] */
  #define HW_ATL_RPF_ET_VALF_DEFAULT 0x0
  
++<<<<<<< HEAD
++=======
+ /* RX l3_l4_en{F} Bitfield Definitions
+  * Preprocessor definitions for the bitfield "l3_l4_en{F}".
+  * Parameter: filter {F} | stride size 0x4 | range [0, 7]
+  * PORT="pif_rpf_l3_l4_en_i[0]"
+  */
+ 
+ #define HW_ATL_RPF_L3_REG_CTRL_ADR(filter) (0x00005380 + (filter) * 0x4)
+ 
+ /* RX rpf_l3_sa{D}[1F:0] Bitfield Definitions
+  * Preprocessor definitions for the bitfield "l3_sa{D}[1F:0]".
+  * Parameter: location {D} | stride size 0x4 | range [0, 7]
+  * PORT="pif_rpf_l3_sa0_i[31:0]"
+  */
+ 
+ /* Register address for bitfield pif_rpf_l3_sa0_i[31:0] */
+ #define HW_ATL_RPF_L3_SRCA_ADR(filter) (0x000053B0 + (filter) * 0x4)
+ /* Bitmask for bitfield l3_sa0[1F:0] */
+ #define HW_ATL_RPF_L3_SRCA_MSK 0xFFFFFFFFu
+ /* Inverted bitmask for bitfield l3_sa0[1F:0] */
+ #define HW_ATL_RPF_L3_SRCA_MSKN 0xFFFFFFFFu
+ /* Lower bit position of bitfield l3_sa0[1F:0] */
+ #define HW_ATL_RPF_L3_SRCA_SHIFT 0
+ /* Width of bitfield l3_sa0[1F:0] */
+ #define HW_ATL_RPF_L3_SRCA_WIDTH 32
+ /* Default value of bitfield l3_sa0[1F:0] */
+ #define HW_ATL_RPF_L3_SRCA_DEFAULT 0x0
+ 
+ /* RX rpf_l3_da{D}[1F:0] Bitfield Definitions
+  * Preprocessor definitions for the bitfield "l3_da{D}[1F:0]".
+  * Parameter: location {D} | stride size 0x4 | range [0, 7]
+  * PORT="pif_rpf_l3_da0_i[31:0]"
+  */
+ 
+  /* Register address for bitfield pif_rpf_l3_da0_i[31:0] */
+ #define HW_ATL_RPF_L3_DSTA_ADR(filter) (0x000053D0 + (filter) * 0x4)
+ /* Bitmask for bitfield l3_da0[1F:0] */
+ #define HW_ATL_RPF_L3_DSTA_MSK 0xFFFFFFFFu
+ /* Inverted bitmask for bitfield l3_da0[1F:0] */
+ #define HW_ATL_RPF_L3_DSTA_MSKN 0xFFFFFFFFu
+ /* Lower bit position of bitfield l3_da0[1F:0] */
+ #define HW_ATL_RPF_L3_DSTA_SHIFT 0
+ /* Width of bitfield l3_da0[1F:0] */
+ #define HW_ATL_RPF_L3_DSTA_WIDTH 32
+ /* Default value of bitfield l3_da0[1F:0] */
+ #define HW_ATL_RPF_L3_DSTA_DEFAULT 0x0
+ 
++>>>>>>> a42e6aee7f47 (net: atlantic: fix ip dst and ipv6 address filters)
  /* RX l4_sp{D}[F:0] Bitfield Definitions
   * Preprocessor definitions for the bitfield "l4_sp{D}[F:0]".
   * Parameter: srcport {D} | stride size 0x4 | range [0, 7]
diff --git a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c
index 961b9b69649f..24432204a985 100644
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c
@@ -1600,7 +1600,7 @@ void hw_atl_rpfl3l4_ipv6_src_addr_set(struct aq_hw_s *aq_hw, u8 location,
 	for (i = 0; i < 4; ++i)
 		aq_hw_write_reg(aq_hw,
 				HW_ATL_RPF_L3_SRCA_ADR(location + i),
-				ipv6_src[i]);
+				ipv6_src[3 - i]);
 }
 
 void hw_atl_rpfl3l4_ipv6_dest_addr_set(struct aq_hw_s *aq_hw, u8 location,
@@ -1611,7 +1611,7 @@ void hw_atl_rpfl3l4_ipv6_dest_addr_set(struct aq_hw_s *aq_hw, u8 location,
 	for (i = 0; i < 4; ++i)
 		aq_hw_write_reg(aq_hw,
 				HW_ATL_RPF_L3_DSTA_ADR(location + i),
-				ipv6_dest[i]);
+				ipv6_dest[3 - i]);
 }
 
 u32 hw_atl_sem_ram_get(struct aq_hw_s *self)
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh_internal.h
