block: fix double account of flush request's driver tag

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit c1e2b8422bf946c80e832cee22b3399634f87a2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/c1e2b842.failed

In case of none scheduler, we share data request's driver tag for
flush request, so have to mark the flush request as INFLIGHT for
avoiding double account of this driver tag.

Fixes: 568f27006577 ("blk-mq: centralise related handling into blk_mq_get_driver_tag")
	Reported-by: Matthew Wilcox <willy@infradead.org>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Tested-by: Matthew Wilcox <willy@infradead.org>
	Cc: Christoph Hellwig <hch@infradead.org>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit c1e2b8422bf946c80e832cee22b3399634f87a2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-flush.c
diff --cc block/blk-flush.c
index 2c39c95dab56,53abb5c73d99..000000000000
--- a/block/blk-flush.c
+++ b/block/blk-flush.c
@@@ -300,12 -309,16 +300,24 @@@ static void blk_kick_flush(struct reque
  	flush_rq->mq_hctx = first_rq->mq_hctx;
  
  	if (!q->elevator) {
++<<<<<<< HEAD
 +		fq->orig_rq = first_rq;
 +		flush_rq->tag = first_rq->tag;
 +		blk_mq_tag_set_rq(flush_rq->mq_hctx, first_rq->tag, flush_rq);
 +	} else {
++=======
+ 		flush_rq->tag = first_rq->tag;
+ 
+ 		/*
+ 		 * We borrow data request's driver tag, so have to mark
+ 		 * this flush request as INFLIGHT for avoiding double
+ 		 * account of this driver tag
+ 		 */
+ 		flush_rq->rq_flags |= RQF_MQ_INFLIGHT;
+ 	} else
++>>>>>>> c1e2b8422bf9 (block: fix double account of flush request's driver tag)
  		flush_rq->internal_tag = first_rq->internal_tag;
 +	}
  
  	flush_rq->cmd_flags = REQ_OP_FLUSH | REQ_PREFLUSH;
  	flush_rq->cmd_flags |= (flags & REQ_DRV) | (flags & REQ_FAILFAST_MASK);
* Unmerged path block/blk-flush.c
