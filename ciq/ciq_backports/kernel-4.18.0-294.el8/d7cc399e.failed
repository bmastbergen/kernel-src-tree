tcp: properly reset skb->truesize for tx recycling

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Eric Dumazet <edumazet@google.com>
commit d7cc399e1227e74e44f78847d9732a228b46cc91
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/d7cc399e.failed

tcp sendmsg() and sendpage() normally advance skb->data_len
and skb->truesize by the payload added to an skb.

But sendmsg(fd, ..., MSG_ZEROCOPY) has to account for whole pages,
even if a single byte of payload is used in the page.

This means that we can not assume skb->truesize can be adjusted
by skb->data_len. We must instead overwrite its value.

Otherwise skb->truesize is too big and can hit socket sndbuf limit,
especially if the skb is recycled multiple times :/

Fixes: 472c2e07eef0 ("tcp: add one skb cache for tx")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Cc: Soheil Hassas Yeganeh <soheil@google.com>
	Cc: Willem de Bruijn <willemb@google.com>
	Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d7cc399e1227e74e44f78847d9732a228b46cc91)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp.c
diff --cc net/ipv4/tcp.c
index 93a220a78f1b,f7567a3698eb..000000000000
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@@ -867,6 -865,18 +867,21 @@@ struct sk_buff *sk_stream_alloc_skb(str
  {
  	struct sk_buff *skb;
  
++<<<<<<< HEAD
++=======
+ 	if (likely(!size)) {
+ 		skb = sk->sk_tx_skb_cache;
+ 		if (skb && !skb_cloned(skb)) {
+ 			skb->truesize = SKB_TRUESIZE(skb_end_offset(skb));
+ 			sk->sk_tx_skb_cache = NULL;
+ 			pskb_trim(skb, 0);
+ 			INIT_LIST_HEAD(&skb->tcp_tsorted_anchor);
+ 			skb_shinfo(skb)->tx_flags = 0;
+ 			memset(TCP_SKB_CB(skb), 0, sizeof(struct tcp_skb_cb));
+ 			return skb;
+ 		}
+ 	}
++>>>>>>> d7cc399e1227 (tcp: properly reset skb->truesize for tx recycling)
  	/* The TCP header must be at least 32-bit aligned.  */
  	size = ALIGN(size, 4);
  
* Unmerged path net/ipv4/tcp.c
