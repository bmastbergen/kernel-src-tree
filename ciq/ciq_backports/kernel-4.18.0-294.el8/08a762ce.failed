net/mlx5e: Fix error path for RQ alloc

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Aya Levin <ayal@mellanox.com>
commit 08a762cecc60e19cd64e379df6580f1997408e04
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/08a762ce.failed

Increase granularity of the error path to avoid unneeded free/release.
Fix the cleanup to be symmetric to the order of creation.

Fixes: 0ddf543226ac ("xdp/mlx5: setup xdp_rxq_info")
Fixes: 422d4c401edd ("net/mlx5e: RX, Split WQ objects for different RQ types")
	Signed-off-by: Aya Levin <ayal@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 08a762cecc60e19cd64e379df6580f1997408e04)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 0b699d106e2d,1fbd7a0f3ca6..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -409,11 -396,10 +409,11 @@@ static int mlx5e_alloc_rq(struct mlx5e_
  		rq_xdp_ix += params->num_channels * MLX5E_RQ_GROUP_XSK;
  	err = xdp_rxq_info_reg(&rq->xdp_rxq, rq->netdev, rq_xdp_ix);
  	if (err < 0)
- 		goto err_rq_wq_destroy;
+ 		goto err_rq_xdp_prog;
  
 -	rq->buff.map_dir = params->xdp_prog ? DMA_BIDIRECTIONAL : DMA_FROM_DEVICE;
 +	rq->buff.map_dir = rq->xdp_prog ? DMA_BIDIRECTIONAL : DMA_FROM_DEVICE;
  	rq->buff.headroom = mlx5e_get_rq_headroom(mdev, params, xsk);
 +	rq->buff.umem_headroom = xsk ? xsk->headroom : 0;
  	pool_size = 1 << params->log_rq_mtu_frames;
  
  	switch (rq->wq_type) {
@@@ -499,46 -455,19 +499,53 @@@
  
  		err = mlx5e_init_di_list(rq, wq_sz, c->cpu);
  		if (err)
- 			goto err_free;
+ 			goto err_rq_frags;
  
 +		rq->post_wqes = mlx5e_post_rx_wqes;
 +		rq->dealloc_wqe = mlx5e_dealloc_rx_wqe;
 +
 +#ifdef CONFIG_MLX5_EN_IPSEC
 +		if ((mlx5_fpga_ipsec_device_caps(mdev) & MLX5_ACCEL_IPSEC_CAP_DEVICE) &&
 +		    c->priv->ipsec)
 +			rq->handle_rx_cqe = mlx5e_ipsec_handle_rx_cqe;
 +		else
 +#endif
 +			rq->handle_rx_cqe = c->priv->profile->rx_handlers.handle_rx_cqe;
 +		if (!rq->handle_rx_cqe) {
 +			err = -EINVAL;
 +			netdev_err(c->netdev, "RX handler of RQ is not set, err %d\n", err);
 +			goto err_free;
 +		}
 +
 +		rq->wqe.skb_from_cqe = xsk ?
 +			mlx5e_xsk_skb_from_cqe_linear :
 +			mlx5e_rx_is_linear_skb(params, NULL) ?
 +				mlx5e_skb_from_cqe_linear :
 +				mlx5e_skb_from_cqe_nonlinear;
  		rq->mkey_be = c->mkey_be;
  	}
  
++<<<<<<< HEAD
++=======
+ 	err = mlx5e_rq_set_handlers(rq, params, xsk);
+ 	if (err)
+ 		goto err_free_by_rq_type;
+ 
++>>>>>>> 08a762cecc60 (net/mlx5e: Fix error path for RQ alloc)
  	if (xsk) {
 +		rq->buff.frame0_sz = xsk_umem_xdp_frame_sz(umem);
 +
 +		err = mlx5e_xsk_resize_reuseq(umem, num_xsk_frames);
 +		if (unlikely(err)) {
 +			mlx5_core_err(mdev, "Unable to allocate the Reuse Ring for %u frames\n",
 +				      num_xsk_frames);
 +			goto err_free;
 +		}
 +
 +		rq->zca.free = mlx5e_xsk_zca_free;
  		err = xdp_rxq_info_reg_mem_model(&rq->xdp_rxq,
 -						 MEM_TYPE_XSK_BUFF_POOL, NULL);
 -		xsk_buff_set_rxq_info(rq->umem, &rq->xdp_rxq);
 +						 MEM_TYPE_ZERO_COPY,
 +						 &rq->zca);
  	} else {
  		/* Create a page_pool and register it with rxq */
  		pp_params.order     = 0;
@@@ -620,16 -550,17 +628,25 @@@ err_rq_mkey
  		mlx5_core_destroy_mkey(mdev, &rq->umr_mkey);
  		break;
  	default: /* MLX5_WQ_TYPE_CYCLIC */
- 		kvfree(rq->wqe.frags);
  		mlx5e_free_di_list(rq);
+ err_rq_frags:
+ 		kvfree(rq->wqe.frags);
  	}
- 
  err_rq_wq_destroy:
++<<<<<<< HEAD
 +	if (rq->xdp_prog)
 +		bpf_prog_put(rq->xdp_prog);
 +	xdp_rxq_info_unreg(&rq->xdp_rxq);
 +	page_pool_destroy(rq->page_pool);
 +	mlx5_wq_destroy(&rq->wq_ctrl);
++=======
+ 	mlx5_wq_destroy(&rq->wq_ctrl);
+ err_rq_xdp:
+ 	xdp_rxq_info_unreg(&rq->xdp_rxq);
+ err_rq_xdp_prog:
+ 	if (params->xdp_prog)
+ 		bpf_prog_put(params->xdp_prog);
++>>>>>>> 08a762cecc60 (net/mlx5e: Fix error path for RQ alloc)
  
  	return err;
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
