x86: Introduce asm/vdso/clocksource.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vincenzo Frascino <vincenzo.frascino@arm.com>
commit 659a9faa3f3c89de4c34c30c3da676059864e0fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/659a9faa.failed

The vDSO library should only include the necessary headers required for
a userspace library (UAPI and a minimal set of kernel headers). To make
this possible it is necessary to isolate from the kernel headers the
common parts that are strictly necessary to build the library.

Introduce asm/vdso/clocksource.h to contain all the arm64 specific
functions that are suitable for vDSO inclusion.

This header will be required by a future patch that will generalize
vdso/clocksource.h.

	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20200320145351.32292-5-vincenzo.frascino@arm.com

(cherry picked from commit 659a9faa3f3c89de4c34c30c3da676059864e0fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/clocksource.h
diff --cc arch/x86/include/asm/clocksource.h
index dc4cfc888d6d,dc9dc7b3911a..000000000000
--- a/arch/x86/include/asm/clocksource.h
+++ b/arch/x86/include/asm/clocksource.h
@@@ -4,14 -4,18 +4,18 @@@
  #ifndef _ASM_X86_CLOCKSOURCE_H
  #define _ASM_X86_CLOCKSOURCE_H
  
++<<<<<<< HEAD
 +#define VCLOCK_NONE	0	/* No vDSO clock available.		*/
 +#define VCLOCK_TSC	1	/* vDSO should use vread_tsc.		*/
 +#define VCLOCK_PVCLOCK	2	/* vDSO should use vread_pvclock.	*/
 +#define VCLOCK_HVCLOCK	3	/* vDSO should use vread_hvclock.	*/
 +#define VCLOCK_MAX	3
++=======
+ #include <asm/vdso/clocksource.h>
++>>>>>>> 659a9faa3f3c (x86: Introduce asm/vdso/clocksource.h)
  
 -extern unsigned int vclocks_used;
 -
 -static inline bool vclock_was_used(int vclock)
 -{
 -	return READ_ONCE(vclocks_used) & (1U << vclock);
 -}
 -
 -static inline void vclocks_set_used(unsigned int which)
 -{
 -	WRITE_ONCE(vclocks_used, READ_ONCE(vclocks_used) | (1 << which));
 -}
 +struct arch_clocksource_data {
 +	int vclock_mode;
 +};
  
  #endif /* _ASM_X86_CLOCKSOURCE_H */
* Unmerged path arch/x86/include/asm/clocksource.h
diff --git a/arch/x86/include/asm/vdso/clocksource.h b/arch/x86/include/asm/vdso/clocksource.h
new file mode 100644
index 000000000000..119ac8612d89
--- /dev/null
+++ b/arch/x86/include/asm/vdso/clocksource.h
@@ -0,0 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef __ASM_VDSO_CLOCKSOURCE_H
+#define __ASM_VDSO_CLOCKSOURCE_H
+
+#define VDSO_ARCH_CLOCKMODES	\
+	VDSO_CLOCKMODE_TSC,	\
+	VDSO_CLOCKMODE_PVCLOCK,	\
+	VDSO_CLOCKMODE_HVCLOCK
+
+#endif /* __ASM_VDSO_CLOCKSOURCE_H */
