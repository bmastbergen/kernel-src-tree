scsi: Add host and host template flag 'host_tagset'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Hannes Reinecke <hare@suse.com>
commit bdb01301f3ea51a59eff252b06643fc1fe843e57
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/bdb01301.failed

Add Host and host template flag 'host_tagset' so hostwide tagset can be
shared on multiple reply queues after the SCSI device's reply queue is
converted to blk-mq hw queue.

[jpg: Update comment on .can_queue and add Scsi_Host.host_tagset]

	Signed-off-by: Hannes Reinecke <hare@suse.com>
	Signed-off-by: John Garry <john.garry@huawei.com>
	Tested-by: Don Brace<don.brace@microsemi.com> #SCSI resv cmds patches used
	Tested-by: Douglas Gilbert <dgilbert@interlog.com>
	Acked-by: Martin K. Petersen <martin.petersen@oracle.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit bdb01301f3ea51a59eff252b06643fc1fe843e57)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/scsi/scsi_host.h
diff --cc include/scsi/scsi_host.h
index 8640ca5ba7bb,701f178b20ae..000000000000
--- a/include/scsi/scsi_host.h
+++ b/include/scsi/scsi_host.h
@@@ -619,18 -606,12 +622,19 @@@ struct Scsi_Host 
  	 *
  	 * Note: it is assumed that each hardware queue has a queue depth of
  	 * can_queue. In other words, the total queue depth per host
- 	 * is nr_hw_queues * can_queue.
+ 	 * is nr_hw_queues * can_queue. However, for when host_tagset is set,
+ 	 * the total queue depth is can_queue.
  	 */
  	unsigned nr_hw_queues;
 +	/* 
 +	 * Used to assign serial numbers to the cmds.
 +	 * Protected by the host lock.
 +	 */
 +	unsigned long cmd_serial_number;
 +	
  	unsigned active_mode:2;
  	unsigned unchecked_isa_dma:1;
 +	unsigned use_clustering:1;
  
  	/*
  	 * Host has requested that no further requests come through for the
@@@ -657,7 -638,8 +661,12 @@@
  	/* The controller does not support WRITE SAME */
  	unsigned no_write_same:1;
  
++<<<<<<< HEAD
 +	unsigned use_cmd_list:1;
++=======
+ 	/* True if the host uses host-wide tagspace */
+ 	unsigned host_tagset:1;
++>>>>>>> bdb01301f3ea (scsi: Add host and host template flag 'host_tagset')
  
  	/* Host responded with short (<36 bytes) INQUIRY result */
  	unsigned short_inquiry:1;
diff --git a/drivers/scsi/hosts.c b/drivers/scsi/hosts.c
index 8a5293b9360e..e174aa3bc39b 100644
--- a/drivers/scsi/hosts.c
+++ b/drivers/scsi/hosts.c
@@ -422,6 +422,7 @@ struct Scsi_Host *scsi_host_alloc(struct scsi_host_template *sht, int privsize)
 	shost->unchecked_isa_dma = sht->unchecked_isa_dma;
 	shost->use_clustering = sht->use_clustering;
 	shost->no_write_same = sht->no_write_same;
+	shost->host_tagset = sht->host_tagset;
 
 	if (shost_eh_deadline == -1 || !sht->eh_host_reset_handler)
 		shost->eh_deadline = -1;
diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index 06fb5081e22f..02e57f32c90b 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -1941,6 +1941,8 @@ int scsi_mq_setup_tags(struct Scsi_Host *shost)
 	tag_set->flags |=
 		BLK_ALLOC_POLICY_TO_MQ_FLAG(shost->hostt->tag_alloc_policy);
 	tag_set->driver_data = shost;
+	if (shost->host_tagset)
+		tag_set->flags |= BLK_MQ_F_TAG_HCTX_SHARED;
 
 	return blk_mq_alloc_tag_set(tag_set);
 }
* Unmerged path include/scsi/scsi_host.h
