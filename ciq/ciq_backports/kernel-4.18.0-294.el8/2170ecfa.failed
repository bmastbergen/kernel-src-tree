drm/i915: convert get_user_pages() --> pin_user_pages()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author John Hubbard <jhubbard@nvidia.com>
commit 2170ecfa768850bb29487baa3101c993ab7d7402
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2170ecfa.failed

This code was using get_user_pages*(), in a "Case 2" scenario (DMA/RDMA),
using the categorization from [1].  That means that it's time to convert
the get_user_pages*() + put_page() calls to pin_user_pages*() +
unpin_user_pages() calls.

There is some helpful background in [2]: basically, this is a small part
of fixing a long-standing disconnect between pinning pages, and file
systems' use of those pages.

[1] Documentation/core-api/pin_user_pages.rst

[2] "Explicit pinning of user-space pages":
    https://lwn.net/Articles/807108/

	Signed-off-by: John Hubbard <jhubbard@nvidia.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Souptick Joarder <jrdr.linux@gmail.com>
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Jani Nikula <jani.nikula@linux.intel.com>
	Cc: "Joonas Lahtinen" <joonas.lahtinen@linux.intel.com>
	Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Cc: David Airlie <airlied@linux.ie>
	Cc: Daniel Vetter <daniel@ffwll.ch>
	Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
	Cc: Matthew Auld <matthew.auld@intel.com>
Link: http://lkml.kernel.org/r/20200519002124.2025955-5-jhubbard@nvidia.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 2170ecfa768850bb29487baa3101c993ab7d7402)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gem/i915_gem_userptr.c
diff --cc drivers/gpu/drm/i915/gem/i915_gem_userptr.c
index 580319b7bf1a,33776b3f3fa5..000000000000
--- a/drivers/gpu/drm/i915/gem/i915_gem_userptr.c
+++ b/drivers/gpu/drm/i915/gem/i915_gem_userptr.c
@@@ -600,11 -599,22 +601,30 @@@ static int i915_gem_userptr_get_pages(s
  				      GFP_KERNEL |
  				      __GFP_NORETRY |
  				      __GFP_NOWARN);
++<<<<<<< HEAD
 +		if (pvec) /* defer to worker if malloc fails */
 +			pinned = __get_user_pages_fast(obj->userptr.ptr,
 +						       num_pages,
 +						       !i915_gem_object_is_readonly(obj),
 +						       pvec);
++=======
+ 		/*
+ 		 * Using __get_user_pages_fast() with a read-only
+ 		 * access is questionable. A read-only page may be
+ 		 * COW-broken, and then this might end up giving
+ 		 * the wrong side of the COW..
+ 		 *
+ 		 * We may or may not care.
+ 		 */
+ 		if (pvec) {
+ 			/* defer to worker if malloc fails */
+ 			if (!i915_gem_object_is_readonly(obj))
+ 				gup_flags |= FOLL_WRITE;
+ 			pinned = pin_user_pages_fast_only(obj->userptr.ptr,
+ 							  num_pages, gup_flags,
+ 							  pvec);
+ 		}
++>>>>>>> 2170ecfa7688 (drm/i915: convert get_user_pages() --> pin_user_pages())
  	}
  
  	active = false;
* Unmerged path drivers/gpu/drm/i915/gem/i915_gem_userptr.c
