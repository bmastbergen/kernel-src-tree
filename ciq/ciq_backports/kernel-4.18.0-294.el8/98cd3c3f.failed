arm64: vdso: Build vDSO with -ffixed-x18

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Peter Collingbourne <pcc@google.com>
commit 98cd3c3f83fbba27a6bacd75ad12e8388a61a32a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/98cd3c3f.failed

The vDSO needs to be built with x18 reserved in order to accommodate
userspace platform ABIs built on top of Linux that use the register
to carry inter-procedural state, as provided for by the AAPCS.
An example of such a platform ABI is the one that will be used by an
upcoming version of Android.

Although this change is currently a no-op due to the fact that the vDSO
is currently implemented in pure assembly on arm64, it is necessary
in order to prepare for using the generic C implementation of the vDSO.

[ tglx: Massaged changelog ]

	Signed-off-by: Peter Collingbourne <pcc@google.com>
	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Shijith Thotton <sthotton@marvell.com>
	Tested-by: Andre Przywara <andre.przywara@arm.com>
	Cc: linux-arch@vger.kernel.org
	Cc: linux-arm-kernel@lists.infradead.org
	Cc: linux-mips@vger.kernel.org
	Cc: linux-kselftest@vger.kernel.org
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Will Deacon <will.deacon@arm.com>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Cc: Russell King <linux@armlinux.org.uk>
	Cc: Ralf Baechle <ralf@linux-mips.org>
	Cc: Paul Burton <paul.burton@mips.com>
	Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
	Cc: Mark Salyzyn <salyzyn@android.com>
	Cc: Shuah Khan <shuah@kernel.org>
	Cc: Dmitry Safonov <0x7f454c46@gmail.com>
	Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
	Cc: Huw Davies <huw@codeweavers.com>
	Cc: Mark Salyzyn <salyzyn@google.com>
Link: https://lkml.kernel.org/r/20190621095252.32307-6-vincenzo.frascino@arm.com

(cherry picked from commit 98cd3c3f83fbba27a6bacd75ad12e8388a61a32a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/vdso/Makefile
diff --cc arch/arm64/kernel/vdso/Makefile
index fa230ff09aa1,ec81d28aeb5d..000000000000
--- a/arch/arm64/kernel/vdso/Makefile
+++ b/arch/arm64/kernel/vdso/Makefile
@@@ -15,6 -20,24 +15,27 @@@ obj-vdso := $(addprefix $(obj)/, $(obj-
  ldflags-y := -shared -nostdlib -soname=linux-vdso.so.1 --hash-style=sysv \
  		--build-id -n -T
  
++<<<<<<< HEAD
++=======
+ ccflags-y := -fno-common -fno-builtin -fno-stack-protector -ffixed-x18
+ ccflags-y += -DDISABLE_BRANCH_PROFILING
+ 
+ VDSO_LDFLAGS := -Bsymbolic
+ 
+ CFLAGS_REMOVE_vgettimeofday.o = $(CC_FLAGS_FTRACE) -Os
+ KBUILD_CFLAGS			+= $(DISABLE_LTO)
+ KASAN_SANITIZE			:= n
+ UBSAN_SANITIZE			:= n
+ OBJECT_FILES_NON_STANDARD	:= y
+ KCOV_INSTRUMENT			:= n
+ 
+ ifeq ($(c-gettimeofday-y),)
+ CFLAGS_vgettimeofday.o = -O2 -mcmodel=tiny
+ else
+ CFLAGS_vgettimeofday.o = -O2 -mcmodel=tiny -include $(c-gettimeofday-y)
+ endif
+ 
++>>>>>>> 98cd3c3f83fb (arm64: vdso: Build vDSO with -ffixed-x18)
  # Disable gcov profiling for VDSO code
  GCOV_PROFILE := n
  
* Unmerged path arch/arm64/kernel/vdso/Makefile
