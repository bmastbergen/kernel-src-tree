ALSA: hda/ca0132 - Add output selection for SoundBlaster AE-7.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [sound] ALSA: hda/ca0132 - Add output selection for SoundBlaster AE-7 (Jaroslav Kysela) [1869536]
Rebuild_FUZZ: 99.19%
commit-author Connor McAdams <conmanx360@gmail.com>
commit 91b94a933f28b0b819224bc638866b0844317776
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/91b94a93.failed

Add output selection quirk table information for SoundBlaster AE-7, and
slightly modify the AE-5's ca0113 command table to accommodate the AE-7.

	Signed-off-by: Connor McAdams <conmanx360@gmail.com>
Link: https://lore.kernel.org/r/20200825201040.30339-18-conmanx360@gmail.com
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 91b94a933f28b0b819224bc638866b0844317776)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_ca0132.c
diff --cc sound/pci/hda/patch_ca0132.c
index 1877b96e6a16,dcc8d29d934c..000000000000
--- a/sound/pci/hda/patch_ca0132.c
+++ b/sound/pci/hda/patch_ca0132.c
@@@ -1304,6 -1279,199 +1311,202 @@@ static const struct snd_pci_quirk ca013
  	{}
  };
  
++<<<<<<< HEAD
++=======
+ /* Output selection quirk info structures. */
+ #define MAX_QUIRK_MMIO_GPIO_SET_VALS 3
+ #define MAX_QUIRK_SCP_SET_VALS 2
+ struct ca0132_alt_out_set_info {
+ 	unsigned int dac2port; /* ParamID 0x0d value. */
+ 
+ 	bool has_hda_gpio;
+ 	char hda_gpio_pin;
+ 	char hda_gpio_set;
+ 
+ 	unsigned int mmio_gpio_count;
+ 	char mmio_gpio_pin[MAX_QUIRK_MMIO_GPIO_SET_VALS];
+ 	char mmio_gpio_set[MAX_QUIRK_MMIO_GPIO_SET_VALS];
+ 
+ 	unsigned int scp_cmds_count;
+ 	unsigned int scp_cmd_mid[MAX_QUIRK_SCP_SET_VALS];
+ 	unsigned int scp_cmd_req[MAX_QUIRK_SCP_SET_VALS];
+ 	unsigned int scp_cmd_val[MAX_QUIRK_SCP_SET_VALS];
+ 
+ 	bool has_chipio_write;
+ 	unsigned int chipio_write_addr;
+ 	unsigned int chipio_write_data;
+ };
+ 
+ struct ca0132_alt_out_set_quirk_data {
+ 	int quirk_id;
+ 
+ 	bool has_headphone_gain;
+ 	bool is_ae_series;
+ 
+ 	struct ca0132_alt_out_set_info out_set_info[NUM_OF_OUTPUTS];
+ };
+ 
+ static const struct ca0132_alt_out_set_quirk_data quirk_out_set_data[] = {
+ 	{ .quirk_id = QUIRK_R3DI,
+ 	  .has_headphone_gain = false,
+ 	  .is_ae_series       = false,
+ 	  .out_set_info = {
+ 		/* Speakers. */
+ 		{ .dac2port         = 0x24,
+ 		  .has_hda_gpio     = true,
+ 		  .hda_gpio_pin     = 2,
+ 		  .hda_gpio_set     = 1,
+ 		  .mmio_gpio_count  = 0,
+ 		  .scp_cmds_count   = 0,
+ 		  .has_chipio_write = false,
+ 		},
+ 		/* Headphones. */
+ 		{ .dac2port         = 0x21,
+ 		  .has_hda_gpio     = true,
+ 		  .hda_gpio_pin     = 2,
+ 		  .hda_gpio_set     = 0,
+ 		  .mmio_gpio_count  = 0,
+ 		  .scp_cmds_count   = 0,
+ 		  .has_chipio_write = false,
+ 		} },
+ 	},
+ 	{ .quirk_id = QUIRK_R3D,
+ 	  .has_headphone_gain = false,
+ 	  .is_ae_series       = false,
+ 	  .out_set_info = {
+ 		/* Speakers. */
+ 		{ .dac2port         = 0x24,
+ 		  .has_hda_gpio     = false,
+ 		  .mmio_gpio_count  = 1,
+ 		  .mmio_gpio_pin    = { 1 },
+ 		  .mmio_gpio_set    = { 1 },
+ 		  .scp_cmds_count   = 0,
+ 		  .has_chipio_write = false,
+ 		},
+ 		/* Headphones. */
+ 		{ .dac2port         = 0x21,
+ 		  .has_hda_gpio     = false,
+ 		  .mmio_gpio_count  = 1,
+ 		  .mmio_gpio_pin    = { 1 },
+ 		  .mmio_gpio_set    = { 0 },
+ 		  .scp_cmds_count   = 0,
+ 		  .has_chipio_write = false,
+ 		} },
+ 	},
+ 	{ .quirk_id = QUIRK_SBZ,
+ 	  .has_headphone_gain = false,
+ 	  .is_ae_series       = false,
+ 	  .out_set_info = {
+ 		/* Speakers. */
+ 		{ .dac2port         = 0x18,
+ 		  .has_hda_gpio     = false,
+ 		  .mmio_gpio_count  = 3,
+ 		  .mmio_gpio_pin    = { 7, 4, 1 },
+ 		  .mmio_gpio_set    = { 0, 1, 1 },
+ 		  .scp_cmds_count   = 0,
+ 		  .has_chipio_write = false, },
+ 		/* Headphones. */
+ 		{ .dac2port         = 0x12,
+ 		  .has_hda_gpio     = false,
+ 		  .mmio_gpio_count  = 3,
+ 		  .mmio_gpio_pin    = { 7, 4, 1 },
+ 		  .mmio_gpio_set    = { 1, 1, 0 },
+ 		  .scp_cmds_count   = 0,
+ 		  .has_chipio_write = false,
+ 		} },
+ 	},
+ 	{ .quirk_id = QUIRK_ZXR,
+ 	  .has_headphone_gain = true,
+ 	  .is_ae_series       = false,
+ 	  .out_set_info = {
+ 		/* Speakers. */
+ 		{ .dac2port         = 0x24,
+ 		  .has_hda_gpio     = false,
+ 		  .mmio_gpio_count  = 3,
+ 		  .mmio_gpio_pin    = { 2, 3, 5 },
+ 		  .mmio_gpio_set    = { 1, 1, 0 },
+ 		  .scp_cmds_count   = 0,
+ 		  .has_chipio_write = false,
+ 		},
+ 		/* Headphones. */
+ 		{ .dac2port         = 0x21,
+ 		  .has_hda_gpio     = false,
+ 		  .mmio_gpio_count  = 3,
+ 		  .mmio_gpio_pin    = { 2, 3, 5 },
+ 		  .mmio_gpio_set    = { 0, 1, 1 },
+ 		  .scp_cmds_count   = 0,
+ 		  .has_chipio_write = false,
+ 		} },
+ 	},
+ 	{ .quirk_id = QUIRK_AE5,
+ 	  .has_headphone_gain = true,
+ 	  .is_ae_series       = true,
+ 	  .out_set_info = {
+ 		/* Speakers. */
+ 		{ .dac2port          = 0xa4,
+ 		  .has_hda_gpio      = false,
+ 		  .mmio_gpio_count   = 0,
+ 		  .scp_cmds_count    = 2,
+ 		  .scp_cmd_mid       = { 0x96, 0x96 },
+ 		  .scp_cmd_req       = { SPEAKER_TUNING_FRONT_LEFT_INVERT,
+ 					 SPEAKER_TUNING_FRONT_RIGHT_INVERT },
+ 		  .scp_cmd_val       = { FLOAT_ZERO, FLOAT_ZERO },
+ 		  .has_chipio_write  = true,
+ 		  .chipio_write_addr = 0x0018b03c,
+ 		  .chipio_write_data = 0x00000012
+ 		},
+ 		/* Headphones. */
+ 		{ .dac2port          = 0xa1,
+ 		  .has_hda_gpio      = false,
+ 		  .mmio_gpio_count   = 0,
+ 		  .scp_cmds_count    = 2,
+ 		  .scp_cmd_mid       = { 0x96, 0x96 },
+ 		  .scp_cmd_req       = { SPEAKER_TUNING_FRONT_LEFT_INVERT,
+ 					 SPEAKER_TUNING_FRONT_RIGHT_INVERT },
+ 		  .scp_cmd_val       = { FLOAT_ONE, FLOAT_ONE },
+ 		  .has_chipio_write  = true,
+ 		  .chipio_write_addr = 0x0018b03c,
+ 		  .chipio_write_data = 0x00000012
+ 		} },
+ 	},
+ 	{ .quirk_id = QUIRK_AE7,
+ 	  .has_headphone_gain = true,
+ 	  .is_ae_series       = true,
+ 	  .out_set_info = {
+ 		/* Speakers. */
+ 		{ .dac2port          = 0x58,
+ 		  .has_hda_gpio      = false,
+ 		  .mmio_gpio_count   = 1,
+ 		  .mmio_gpio_pin     = { 0 },
+ 		  .mmio_gpio_set     = { 1 },
+ 		  .scp_cmds_count    = 2,
+ 		  .scp_cmd_mid       = { 0x96, 0x96 },
+ 		  .scp_cmd_req       = { SPEAKER_TUNING_FRONT_LEFT_INVERT,
+ 					 SPEAKER_TUNING_FRONT_RIGHT_INVERT },
+ 		  .scp_cmd_val       = { FLOAT_ZERO, FLOAT_ZERO },
+ 		  .has_chipio_write  = true,
+ 		  .chipio_write_addr = 0x0018b03c,
+ 		  .chipio_write_data = 0x00000000
+ 		},
+ 		/* Headphones. */
+ 		{ .dac2port          = 0x58,
+ 		  .has_hda_gpio      = false,
+ 		  .mmio_gpio_count   = 1,
+ 		  .mmio_gpio_pin     = { 0 },
+ 		  .mmio_gpio_set     = { 1 },
+ 		  .scp_cmds_count    = 2,
+ 		  .scp_cmd_mid       = { 0x96, 0x96 },
+ 		  .scp_cmd_req       = { SPEAKER_TUNING_FRONT_LEFT_INVERT,
+ 					 SPEAKER_TUNING_FRONT_RIGHT_INVERT },
+ 		  .scp_cmd_val       = { FLOAT_ONE, FLOAT_ONE },
+ 		  .has_chipio_write  = true,
+ 		  .chipio_write_addr = 0x0018b03c,
+ 		  .chipio_write_data = 0x00000010
+ 		} },
+ 	}
+ };
+ 
++>>>>>>> 91b94a933f28 (ALSA: hda/ca0132 - Add output selection for SoundBlaster AE-7.)
  /*
   * CA0132 codec access
   */
* Unmerged path sound/pci/hda/patch_ca0132.c
