x86/entry/32: Clean up return from interrupt preemption path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Peter Zijlstra <peterz@infradead.org>
commit 5e1246ff2d3707992e3bf3eaa45551f7fab97983
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/5e1246ff.failed

The code flow around the return from interrupt preemption point seems
needlessly complicated.

There is only one site jumping to resume_kernel, and none (outside of
resume_kernel) jumping to restore_all_kernel. Inline resume_kernel
in restore_all_kernel and avoid the CONFIG_PREEMPT dependent label.

	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Reviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 5e1246ff2d3707992e3bf3eaa45551f7fab97983)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/entry/entry_32.S
diff --cc arch/x86/entry/entry_32.S
index 2701db4d4517,7040d7e96250..000000000000
--- a/arch/x86/entry/entry_32.S
+++ b/arch/x86/entry/entry_32.S
@@@ -754,18 -764,6 +753,21 @@@ ENTRY(resume_userspace
  	jmp	restore_all
  END(ret_from_exception)
  
++<<<<<<< HEAD
 +#ifdef CONFIG_PREEMPTION
 +ENTRY(resume_kernel)
 +	DISABLE_INTERRUPTS(CLBR_ANY)
 +	cmpl	$0, PER_CPU_VAR(__preempt_count)
 +	jnz	restore_all_kernel
 +	testl	$X86_EFLAGS_IF, PT_EFLAGS(%esp)	# interrupts off (exception path) ?
 +	jz	restore_all_kernel
 +	call	preempt_schedule_irq
 +	jmp	restore_all_kernel
 +END(resume_kernel)
 +#endif
 +
++=======
++>>>>>>> 5e1246ff2d37 (x86/entry/32: Clean up return from interrupt preemption path)
  GLOBAL(__begin_SYSENTER_singlestep_region)
  /*
   * All code from here through __end_SYSENTER_singlestep_region is subject
* Unmerged path arch/x86/entry/entry_32.S
