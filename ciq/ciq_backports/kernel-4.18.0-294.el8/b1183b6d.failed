bpfilter: check if $(CC) can link static libc in Kconfig

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Masahiro Yamada <masahiroy@kernel.org>
commit b1183b6dca3e0d59ce8fa81767def6ea6188e8ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b1183b6d.failed

On Fedora, linking static glibc requires the glibc-static RPM package,
which is not part of the glibc-devel package.

CONFIG_CC_CAN_LINK does not check the capability of static linking,
so you can enable CONFIG_BPFILTER_UMH, then fail to build:

    HOSTLD  net/bpfilter/bpfilter_umh
  /usr/bin/ld: cannot find -lc
  collect2: error: ld returned 1 exit status

Add CONFIG_CC_CAN_LINK_STATIC, and make CONFIG_BPFILTER_UMH depend
on it.

	Reported-by: Valdis Kletnieks <valdis.kletnieks@vt.edu>
	Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit b1183b6dca3e0d59ce8fa81767def6ea6188e8ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	init/Kconfig
diff --cc init/Kconfig
index 6eaf9c7f706f,fb8ab85de7f8..000000000000
--- a/init/Kconfig
+++ b/init/Kconfig
@@@ -24,7 -45,23 +24,27 @@@ config CLANG_VERSIO
  	default $(shell,$(srctree)/scripts/clang-version.sh $(CC))
  
  config CC_CAN_LINK
++<<<<<<< HEAD
 +	def_bool $(success,$(srctree)/scripts/cc-can-link.sh $(CC))
++=======
+ 	bool
+ 	default $(success,$(srctree)/scripts/cc-can-link.sh $(CC) $(m64-flag)) if 64BIT
+ 	default $(success,$(srctree)/scripts/cc-can-link.sh $(CC) $(m32-flag))
+ 
+ config CC_CAN_LINK_STATIC
+ 	bool
+ 	default $(success,$(srctree)/scripts/cc-can-link.sh $(CC) -static $(m64-flag)) if 64BIT
+ 	default $(success,$(srctree)/scripts/cc-can-link.sh $(CC) -static $(m32-flag))
+ 
+ config CC_HAS_ASM_GOTO
+ 	def_bool $(success,$(srctree)/scripts/gcc-goto.sh $(CC))
+ 
+ config TOOLS_SUPPORT_RELR
+ 	def_bool $(success,env "CC=$(CC)" "LD=$(LD)" "NM=$(NM)" "OBJCOPY=$(OBJCOPY)" $(srctree)/scripts/tools-support-relr.sh)
+ 
+ config CC_HAS_ASM_INLINE
+ 	def_bool $(success,echo 'void foo(void) { asm inline (""); }' | $(CC) -x c - -c -o /dev/null)
++>>>>>>> b1183b6dca3e (bpfilter: check if $(CC) can link static libc in Kconfig)
  
  config CONSTRUCTORS
  	bool
* Unmerged path init/Kconfig
diff --git a/net/bpfilter/Kconfig b/net/bpfilter/Kconfig
index 3e34131d4a2e..af840670ea55 100644
--- a/net/bpfilter/Kconfig
+++ b/net/bpfilter/Kconfig
@@ -8,7 +8,7 @@ menuconfig BPFILTER
 if BPFILTER
 config BPFILTER_UMH
 	tristate "bpfilter kernel module with user mode helper"
-	depends on CC_CAN_LINK
+	depends on CC_CAN_LINK_STATIC
 	default m
 	help
 	  This builds bpfilter kernel module with embedded user mode helper
