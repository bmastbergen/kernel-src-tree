KVM: arm64: Remove S1PTW check from kvm_vcpu_dabt_iswrite()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Marc Zyngier <maz@kernel.org>
commit 620cf45f7a516bf5fe9e5dce675a652e935c8bde
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/620cf45f.failed

Now that kvm_vcpu_trap_is_write_fault() checks for S1PTW, there
is no need for kvm_vcpu_dabt_iswrite() to do the same thing, as
we already check for this condition on all existing paths.

Drop the check and add a comment instead.

	Signed-off-by: Marc Zyngier <maz@kernel.org>
	Reviewed-by: Will Deacon <will@kernel.org>
Link: https://lore.kernel.org/r/20200915104218.1284701-3-maz@kernel.org
(cherry picked from commit 620cf45f7a516bf5fe9e5dce675a652e935c8bde)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/kvm_emulate.h
diff --cc arch/arm64/include/asm/kvm_emulate.h
index 12f9fc791cb8,1cc5f5f72d0b..000000000000
--- a/arch/arm64/include/asm/kvm_emulate.h
+++ b/arch/arm64/include/asm/kvm_emulate.h
@@@ -335,10 -303,10 +335,15 @@@ static __always_inline bool kvm_vcpu_da
  	return !!(kvm_vcpu_get_esr(vcpu) & ESR_ELx_S1PTW);
  }
  
+ /* Always check for S1PTW *before* using this. */
  static __always_inline bool kvm_vcpu_dabt_iswrite(const struct kvm_vcpu *vcpu)
  {
++<<<<<<< HEAD
 +	return !!(kvm_vcpu_get_esr(vcpu) & ESR_ELx_WNR) ||
 +		kvm_vcpu_dabt_iss1tw(vcpu); /* AF/DBM update */
++=======
+ 	return kvm_vcpu_get_esr(vcpu) & ESR_ELx_WNR;
++>>>>>>> 620cf45f7a51 (KVM: arm64: Remove S1PTW check from kvm_vcpu_dabt_iswrite())
  }
  
  static inline bool kvm_vcpu_dabt_is_cm(const struct kvm_vcpu *vcpu)
* Unmerged path arch/arm64/include/asm/kvm_emulate.h
