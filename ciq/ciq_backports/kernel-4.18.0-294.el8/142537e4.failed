net_sched: sch_fq: switch to CLOCK_TAI

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Eric Dumazet <edumazet@google.com>
commit 142537e419234c396890a22806b8644dce21b132
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/142537e4.failed

TCP will soon provide per skb->tstamp with earliest departure time,
so that sch_fq does not have to determine departure time by looking
at socket sk_pacing_rate.

We chose in linux-4.19 CLOCK_TAI as the clock base for transports,
qdiscs, and NIC offloads.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 142537e419234c396890a22806b8644dce21b132)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_fq.c
diff --cc net/sched/sch_fq.c
index 520fc183e0d7,d5185c44e9a5..000000000000
--- a/net/sched/sch_fq.c
+++ b/net/sched/sch_fq.c
@@@ -415,6 -460,7 +415,10 @@@ static void fq_check_throttled(struct f
  static struct sk_buff *fq_dequeue(struct Qdisc *sch)
  {
  	struct fq_sched_data *q = qdisc_priv(sch);
++<<<<<<< HEAD
++=======
+ 	u64 now = ktime_get_tai_ns();
++>>>>>>> 142537e41923 (net_sched: sch_fq: switch to CLOCK_TAI)
  	struct fq_flow_head *head;
  	struct sk_buff *skb;
  	struct fq_flow *f;
@@@ -806,13 -823,7 +810,17 @@@ static int fq_init(struct Qdisc *sch, s
  	q->fq_trees_log		= ilog2(1024);
  	q->orphan_mask		= 1024 - 1;
  	q->low_rate_threshold	= 550000 / 8;
++<<<<<<< HEAD
 +
 +	q->timer_slack = 10 * NSEC_PER_USEC; /* 10 usec of hrtimer slack */
 +
 +	/* Default ce_threshold of 4294 seconds */
 +	q->ce_threshold		= (u64)NSEC_PER_USEC * ~0U;
 +
 +	qdisc_watchdog_init(&q->watchdog, sch);
++=======
+ 	qdisc_watchdog_init_clockid(&q->watchdog, sch, CLOCK_TAI);
++>>>>>>> 142537e41923 (net_sched: sch_fq: switch to CLOCK_TAI)
  
  	if (opt)
  		err = fq_change(sch, opt, extack);
@@@ -872,8 -878,7 +880,12 @@@ static int fq_dump_stats(struct Qdisc *
  	st.flows_plimit		  = q->stat_flows_plimit;
  	st.pkts_too_long	  = q->stat_pkts_too_long;
  	st.allocation_errors	  = q->stat_allocation_errors;
++<<<<<<< HEAD
 +	st.time_next_delayed_flow = q->time_next_delayed_flow + q->timer_slack -
 +				    ktime_get_ns();
++=======
+ 	st.time_next_delayed_flow = q->time_next_delayed_flow - ktime_get_tai_ns();
++>>>>>>> 142537e41923 (net_sched: sch_fq: switch to CLOCK_TAI)
  	st.flows		  = q->flows;
  	st.inactive_flows	  = q->inactive_flows;
  	st.throttled_flows	  = q->throttled_flows;
* Unmerged path net/sched/sch_fq.c
