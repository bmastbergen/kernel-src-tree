net/mlx5e: Use indirect call wrappers for RX post WQEs functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Tariq Toukan <tariqt@mellanox.com>
commit 5d0b84769477fd647a491e882d5aea402c5fafa8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/5d0b8476.failed

Use the indirect call wrapper API macros for declaration and scope
of the RX post WQEs functions.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Reviewed-by: Maxim Mikityanskiy <maximmi@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 5d0b84769477fd647a491e882d5aea402c5fafa8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
#	drivers/net/ethernet/mellanox/mlx5/core/en/xsk/tx.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
index 3019e522646c,f7fd2ed32279..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
@@@ -8,6 -9,43 +9,46 @@@
  
  #define INL_HDR_START_SZ (sizeof(((struct mlx5_wqe_eth_seg *)NULL)->inline_hdr.start))
  
++<<<<<<< HEAD
++=======
+ enum mlx5e_icosq_wqe_type {
+ 	MLX5E_ICOSQ_WQE_NOP,
+ 	MLX5E_ICOSQ_WQE_UMR_RX,
+ #ifdef CONFIG_MLX5_EN_TLS
+ 	MLX5E_ICOSQ_WQE_UMR_TLS,
+ 	MLX5E_ICOSQ_WQE_SET_PSV_TLS,
+ 	MLX5E_ICOSQ_WQE_GET_PSV_TLS,
+ #endif
+ };
+ 
+ /* General */
+ void mlx5e_trigger_irq(struct mlx5e_icosq *sq);
+ void mlx5e_completion_event(struct mlx5_core_cq *mcq, struct mlx5_eqe *eqe);
+ void mlx5e_cq_error_event(struct mlx5_core_cq *mcq, enum mlx5_event event);
+ int mlx5e_napi_poll(struct napi_struct *napi, int budget);
+ int mlx5e_poll_ico_cq(struct mlx5e_cq *cq);
+ 
+ /* RX */
+ void mlx5e_page_dma_unmap(struct mlx5e_rq *rq, struct mlx5e_dma_info *dma_info);
+ void mlx5e_page_release_dynamic(struct mlx5e_rq *rq,
+ 				struct mlx5e_dma_info *dma_info,
+ 				bool recycle);
+ INDIRECT_CALLABLE_DECLARE(bool mlx5e_post_rx_wqes(struct mlx5e_rq *rq));
+ INDIRECT_CALLABLE_DECLARE(bool mlx5e_post_rx_mpwqes(struct mlx5e_rq *rq));
+ int mlx5e_poll_rx_cq(struct mlx5e_cq *cq, int budget);
+ void mlx5e_free_rx_descs(struct mlx5e_rq *rq);
+ void mlx5e_free_rx_in_progress_descs(struct mlx5e_rq *rq);
+ 
+ /* TX */
+ u16 mlx5e_select_queue(struct net_device *dev, struct sk_buff *skb,
+ 		       struct net_device *sb_dev);
+ netdev_tx_t mlx5e_xmit(struct sk_buff *skb, struct net_device *dev);
+ void mlx5e_sq_xmit(struct mlx5e_txqsq *sq, struct sk_buff *skb,
+ 		   struct mlx5e_tx_wqe *wqe, u16 pi, bool xmit_more);
+ bool mlx5e_poll_tx_cq(struct mlx5e_cq *cq, int napi_budget);
+ void mlx5e_free_txqsq_descs(struct mlx5e_txqsq *sq);
+ 
++>>>>>>> 5d0b84769477 (net/mlx5e: Use indirect call wrappers for RX post WQEs functions)
  static inline bool
  mlx5e_wqc_has_room_for(struct mlx5_wq_cyc *wq, u16 cc, u16 pc, u16 n)
  {
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/xsk/tx.c
index 11085a861787,4d892f6cecb3..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/xsk/tx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/xsk/tx.c
@@@ -5,7 -5,7 +5,11 @@@
  #include "umem.h"
  #include "en/xdp.h"
  #include "en/params.h"
++<<<<<<< HEAD
 +#include <net/xdp_sock.h>
++=======
+ #include <net/xdp_sock_drv.h>
++>>>>>>> 5d0b84769477 (net/mlx5e: Use indirect call wrappers for RX post WQEs functions)
  
  int mlx5e_xsk_wakeup(struct net_device *dev, u32 qid, u32 flags)
  {
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index fb2ab3692827,65828af120b7..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -34,8 -34,6 +34,11 @@@
  #include <linux/ip.h>
  #include <linux/ipv6.h>
  #include <linux/tcp.h>
++<<<<<<< HEAD
 +#include <net/busy_poll.h>
 +#include <linux/indirect_call_wrapper.h>
++=======
++>>>>>>> 5d0b84769477 (net/mlx5e: Use indirect call wrappers for RX post WQEs functions)
  #include <net/ip6_checksum.h>
  #include <net/page_pool.h>
  #include <net/inet_ecn.h>
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/xsk/tx.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c b/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c
index c45a2529e19a..e45f154425a9 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c
@@ -31,8 +31,8 @@
  */
 
 #include <linux/irq.h>
-#include <linux/indirect_call_wrapper.h>
 #include "en.h"
+#include "en/txrx.h"
 #include "en/xdp.h"
 #include "en/xsk/rx.h"
 #include "en/xsk/tx.h"
