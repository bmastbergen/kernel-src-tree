docs: fix references for ipmi.rst file

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
commit 283b69bf7948c2470b5b7085bf291f834f3b9d95
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/283b69bf.failed

As this file got moved, fix references for it.

	Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Link: https://lore.kernel.org/r/b6c1ded590f27198de15b16237509128e55fa810.1588345503.git.mchehab+huawei@kernel.org
	Signed-off-by: Jonathan Corbet <corbet@lwn.net>
(cherry picked from commit 283b69bf7948c2470b5b7085bf291f834f3b9d95)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	MAINTAINERS
diff --cc MAINTAINERS
index b358db63e5e4,e4d2e2f01c7f..000000000000
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@@ -7585,9 -8908,10 +7585,14 @@@ F:	net/ipv4/netfilter/ipt_MASQUERADE.
  IPMI SUBSYSTEM
  M:	Corey Minyard <minyard@acm.org>
  L:	openipmi-developer@lists.sourceforge.net (moderated for non-subscribers)
 -S:	Supported
  W:	http://openipmi.sourceforge.net/
++<<<<<<< HEAD
 +S:	Supported
 +F:	Documentation/IPMI.txt
++=======
+ F:	Documentation/driver-api/ipmi.rst
+ F:	Documentation/devicetree/bindings/ipmi/
++>>>>>>> 283b69bf7948 (docs: fix references for ipmi.rst file)
  F:	drivers/char/ipmi/
  F:	include/linux/ipmi*
  F:	include/uapi/linux/ipmi*
* Unmerged path MAINTAINERS
diff --git a/drivers/char/ipmi/Kconfig b/drivers/char/ipmi/Kconfig
index 7dc2c3ec4051..07847d9a459a 100644
--- a/drivers/char/ipmi/Kconfig
+++ b/drivers/char/ipmi/Kconfig
@@ -14,7 +14,7 @@ menuconfig IPMI_HANDLER
 	  IPMI is a standard for managing sensors (temperature,
 	  voltage, etc.) in a system.
 
-	  See <file:Documentation/IPMI.txt> for more details on the driver.
+	  See <file:Documentation/driver-api/ipmi.rst> for more details on the driver.
 
 	  If unsure, say N.
 
diff --git a/drivers/char/ipmi/ipmi_si_hotmod.c b/drivers/char/ipmi/ipmi_si_hotmod.c
index 42a925f8cf69..4fbb4e18bae2 100644
--- a/drivers/char/ipmi/ipmi_si_hotmod.c
+++ b/drivers/char/ipmi/ipmi_si_hotmod.c
@@ -18,7 +18,7 @@ static int hotmod_handler(const char *val, const struct kernel_param *kp);
 
 module_param_call(hotmod, hotmod_handler, NULL, NULL, 0200);
 MODULE_PARM_DESC(hotmod, "Add and remove interfaces.  See"
-		 " Documentation/IPMI.txt in the kernel sources for the"
+		 " Documentation/driver-api/ipmi.rst in the kernel sources for the"
 		 " gory details.");
 
 /*
diff --git a/drivers/char/ipmi/ipmi_si_intf.c b/drivers/char/ipmi/ipmi_si_intf.c
index 423bcd1f4c19..d4f5878cec55 100644
--- a/drivers/char/ipmi/ipmi_si_intf.c
+++ b/drivers/char/ipmi/ipmi_si_intf.c
@@ -968,7 +968,7 @@ static inline bool ipmi_thread_busy_wait(enum si_sm_result smi_result,
  * that are not BT and do not have interrupts.  It starts spinning
  * when an operation is complete or until max_busy tells it to stop
  * (if that is enabled).  See the paragraph on kimid_max_busy_us in
- * Documentation/IPMI.txt for details.
+ * Documentation/driver-api/ipmi.rst for details.
  */
 static int ipmi_thread(void *data)
 {
