net/mlx5e: Fix missing switch_id for representors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Parav Pandit <parav@mellanox.com>
commit 1315971fea66d2c1b09cab115a487898ba628cac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1315971f.failed

Cited commit in fixes tag missed to set the switch id of the PF and VF
ports. Due to this flow cannot be offloaded, a simple command like below
fails to offload with below error.

tc filter add dev ens2f0np0 parent ffff: prio 1 flower \
 dst_mac 00:00:00:00:00:00/00:00:00:00:00:00 skip_sw \
 action mirred egress redirect dev ens2f0np0pf0vf0

Error: mlx5_core: devices are not on same switch HW, can't offload forwarding.

Hence, fix it by setting switch id for each PF and VF representors port
as before the cited commit.

Fixes: 71ad8d55f8e5 ("devlink: Replace devlink_port_attrs_set parameters with a struct")
	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
(cherry picked from commit 1315971fea66d2c1b09cab115a487898ba628cac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 2053796e8e01,c300729fb498..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -1184,23 -1194,24 +1184,39 @@@ static int register_devlink_port(struc
  		return 0;
  
  	mlx5e_rep_get_port_parent_id(rpriv->netdev, &ppid);
 -	dl_port_index = mlx5_esw_vport_to_devlink_port_index(dev, rep->vport);
 +	dl_port_index = vport_to_devlink_port_index(dev, rep->vport);
  	pfnum = PCI_FUNC(dev->pdev->devfn);
++<<<<<<< HEAD
 +
 +	if (rep->vport == MLX5_VPORT_UPLINK)
 +		devlink_port_attrs_set(&rpriv->dl_port,
 +				       DEVLINK_PORT_FLAVOUR_PHYSICAL,
 +				       pfnum, false, 0,
 +				       &ppid.id[0], ppid.id_len);
 +	else if (rep->vport == MLX5_VPORT_PF)
 +		devlink_port_attrs_pci_pf_set(&rpriv->dl_port,
 +					      &ppid.id[0], ppid.id_len,
 +					      pfnum);
 +	else if (mlx5_eswitch_is_vf_vport(dev->priv.eswitch, rpriv->rep->vport))
++=======
+ 	if (rep->vport == MLX5_VPORT_UPLINK) {
+ 		attrs.flavour = DEVLINK_PORT_FLAVOUR_PHYSICAL;
+ 		attrs.phys.port_number = pfnum;
+ 		memcpy(attrs.switch_id.id, &ppid.id[0], ppid.id_len);
+ 		attrs.switch_id.id_len = ppid.id_len;
+ 		devlink_port_attrs_set(&rpriv->dl_port, &attrs);
+ 	} else if (rep->vport == MLX5_VPORT_PF) {
+ 		memcpy(rpriv->dl_port.attrs.switch_id.id, &ppid.id[0], ppid.id_len);
+ 		rpriv->dl_port.attrs.switch_id.id_len = ppid.id_len;
+ 		devlink_port_attrs_pci_pf_set(&rpriv->dl_port, pfnum);
+ 	} else if (mlx5_eswitch_is_vf_vport(dev->priv.eswitch, rpriv->rep->vport)) {
+ 		memcpy(rpriv->dl_port.attrs.switch_id.id, &ppid.id[0], ppid.id_len);
+ 		rpriv->dl_port.attrs.switch_id.id_len = ppid.id_len;
++>>>>>>> 1315971fea66 (net/mlx5e: Fix missing switch_id for representors)
  		devlink_port_attrs_pci_vf_set(&rpriv->dl_port,
 +					      &ppid.id[0], ppid.id_len,
  					      pfnum, rep->vport - 1);
- 
+ 	}
  	return devlink_port_register(devlink, &rpriv->dl_port, dl_port_index);
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
