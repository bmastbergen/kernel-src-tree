lockdep: Rename trace_hardirq_{enter,exit}()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [kernel] lockdep: Rename trace_hardirq_{enter, exit}() (Waiman Long) [1885084]
Rebuild_FUZZ: 98.88%
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 2502ec37a7b228b34c1e2e89480f98b92f53046a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2502ec37.failed

Continue what commit:

  d820ac4c2fa8 ("locking: rename trace_softirq_[enter|exit] => lockdep_softirq_[enter|exit]")

started, rename these to avoid confusing them with tracepoints.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Will Deacon <will@kernel.org>
Link: https://lkml.kernel.org/r/20200320115859.060481361@infradead.org

(cherry picked from commit 2502ec37a7b228b34c1e2e89480f98b92f53046a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/irqflags.h
diff --cc include/linux/irqflags.h
index ee8b3d4eec4d,7c4e64589250..000000000000
--- a/include/linux/irqflags.h
+++ b/include/linux/irqflags.h
@@@ -24,16 -35,11 +24,16 @@@
  # define trace_softirq_context(p)	((p)->softirq_context)
  # define trace_hardirqs_enabled(p)	((p)->hardirqs_enabled)
  # define trace_softirqs_enabled(p)	((p)->softirqs_enabled)
- # define trace_hardirq_enter()			\
+ # define lockdep_hardirq_enter()		\
  do {						\
 -	current->hardirq_context++;		\
 +	if (!current->hardirq_context++)	\
 +		current->hardirq_threaded = 0;	\
 +} while (0)
 +# define trace_hardirq_threaded()		\
 +do {						\
 +	current->hardirq_threaded = 1;		\
  } while (0)
- # define trace_hardirq_exit()			\
+ # define lockdep_hardirq_exit()			\
  do {						\
  	current->hardirq_context--;		\
  } while (0)
@@@ -88,17 -58,10 +88,22 @@@ do {						
  # define trace_softirq_context(p)	0
  # define trace_hardirqs_enabled(p)	0
  # define trace_softirqs_enabled(p)	0
++<<<<<<< HEAD
 +# define trace_hardirq_enter()		do { } while (0)
 +# define trace_hardirq_threaded()	do { } while (0)
 +# define trace_hardirq_exit()		do { } while (0)
++=======
+ # define lockdep_hardirq_enter()	do { } while (0)
+ # define lockdep_hardirq_exit()		do { } while (0)
++>>>>>>> 2502ec37a7b2 (lockdep: Rename trace_hardirq_{enter,exit}())
  # define lockdep_softirq_enter()	do { } while (0)
  # define lockdep_softirq_exit()		do { } while (0)
 +# define lockdep_hrtimer_enter(__hrtimer)		do { } while (0)
 +# define lockdep_hrtimer_exit(__hrtimer)		do { } while (0)
 +# define lockdep_posixtimer_enter()		do { } while (0)
 +# define lockdep_posixtimer_exit()		do { } while (0)
 +# define lockdep_irq_work_enter(__work)		do { } while (0)
 +# define lockdep_irq_work_exit(__work)		do { } while (0)
  #endif
  
  #if defined(CONFIG_IRQSOFF_TRACER) || \
diff --git a/include/linux/hardirq.h b/include/linux/hardirq.h
index da0af631ded5..7c8b82f69288 100644
--- a/include/linux/hardirq.h
+++ b/include/linux/hardirq.h
@@ -37,7 +37,7 @@ extern void rcu_nmi_exit(void);
 	do {						\
 		account_irq_enter_time(current);	\
 		preempt_count_add(HARDIRQ_OFFSET);	\
-		trace_hardirq_enter();			\
+		lockdep_hardirq_enter();		\
 	} while (0)
 
 /*
@@ -50,7 +50,7 @@ extern void irq_enter(void);
  */
 #define __irq_exit()					\
 	do {						\
-		trace_hardirq_exit();			\
+		lockdep_hardirq_exit();			\
 		account_irq_exit_time(current);		\
 		preempt_count_sub(HARDIRQ_OFFSET);	\
 	} while (0)
@@ -74,12 +74,12 @@ extern void irq_exit(void);
 		BUG_ON(in_nmi());				\
 		preempt_count_add(NMI_OFFSET + HARDIRQ_OFFSET);	\
 		rcu_nmi_enter();				\
-		trace_hardirq_enter();				\
+		lockdep_hardirq_enter();			\
 	} while (0)
 
 #define nmi_exit()						\
 	do {							\
-		trace_hardirq_exit();				\
+		lockdep_hardirq_exit();				\
 		rcu_nmi_exit();					\
 		BUG_ON(!in_nmi());				\
 		preempt_count_sub(NMI_OFFSET + HARDIRQ_OFFSET);	\
* Unmerged path include/linux/irqflags.h
diff --git a/kernel/softirq.c b/kernel/softirq.c
index cd64f829bfac..a4f65eabebab 100644
--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -226,7 +226,7 @@ static inline bool lockdep_softirq_start(void)
 
 	if (trace_hardirq_context(current)) {
 		in_hardirq = true;
-		trace_hardirq_exit();
+		lockdep_hardirq_exit();
 	}
 
 	lockdep_softirq_enter();
@@ -239,7 +239,7 @@ static inline void lockdep_softirq_end(bool in_hardirq)
 	lockdep_softirq_exit();
 
 	if (in_hardirq)
-		trace_hardirq_enter();
+		lockdep_hardirq_enter();
 }
 #else
 static inline bool lockdep_softirq_start(void) { return false; }
@@ -414,7 +414,8 @@ void irq_exit(void)
 
 	tick_irq_exit();
 	rcu_irq_exit();
-	trace_hardirq_exit(); /* must be last! */
+	 /* must be last! */
+	lockdep_hardirq_exit();
 }
 
 /*
diff --git a/tools/include/linux/irqflags.h b/tools/include/linux/irqflags.h
index e734da3e5b33..ced6f64a7367 100644
--- a/tools/include/linux/irqflags.h
+++ b/tools/include/linux/irqflags.h
@@ -6,8 +6,8 @@
 # define trace_softirq_context(p)	0
 # define trace_hardirqs_enabled(p)	0
 # define trace_softirqs_enabled(p)	0
-# define trace_hardirq_enter()		do { } while (0)
-# define trace_hardirq_exit()		do { } while (0)
+# define lockdep_hardirq_enter()	do { } while (0)
+# define lockdep_hardirq_exit()		do { } while (0)
 # define lockdep_softirq_enter()	do { } while (0)
 # define lockdep_softirq_exit()		do { } while (0)
 # define INIT_TRACE_IRQFLAGS
