iwlwifi: remove support for QnJ HR FPGA

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Luca Coelho <luciano.coelho@intel.com>
commit f4ed93a192199bd238888efd7a7c226b72263be2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/f4ed93a1.failed

We don't support the FPGA versions of this card combination anymore.
Remove the cfg mangling that tries to load it and all the relevant
structures.

Change-Id: I190652101afcab682cfba873d062992f11efca32
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit f4ed93a192199bd238888efd7a7c226b72263be2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/cfg/22000.c
#	drivers/net/wireless/intel/iwlwifi/iwl-config.h
diff --cc drivers/net/wireless/intel/iwlwifi/cfg/22000.c
index 355af47c5f73,a88aa15afc8c..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/cfg/22000.c
+++ b/drivers/net/wireless/intel/iwlwifi/cfg/22000.c
@@@ -76,10 -76,8 +76,9 @@@
  #define IWL_22000_JF_FW_PRE		"iwlwifi-Qu-a0-jf-b0-"
  #define IWL_22000_HR_FW_PRE		"iwlwifi-Qu-a0-hr-a0-"
  #define IWL_22000_HR_CDB_FW_PRE		"iwlwifi-QuIcp-z0-hrcdb-a0-"
- #define IWL_22000_HR_A_F0_FW_PRE	"iwlwifi-QuQnj-f0-hr-a0-"
  #define IWL_22000_QU_B_HR_B_FW_PRE	"iwlwifi-Qu-b0-hr-b0-"
  #define IWL_22000_HR_B_FW_PRE		"iwlwifi-QuQnj-b0-hr-b0-"
 +#define IWL_22000_HR_A0_FW_PRE		"iwlwifi-QuQnj-a0-hr-a0-"
  #define IWL_QU_C_HR_B_FW_PRE		"iwlwifi-Qu-c0-hr-b0-"
  #define IWL_QU_B_JF_B_FW_PRE		"iwlwifi-Qu-b0-jf-b0-"
  #define IWL_QU_C_JF_B_FW_PRE		"iwlwifi-Qu-c0-jf-b0-"
@@@ -625,32 -499,6 +622,35 @@@ const struct iwl_cfg killer1650i_2ax_cf
  	.num_rbds = IWL_NUM_RBDS_22000_HE,
  };
  
++<<<<<<< HEAD
 +const struct iwl_cfg iwl22000_2ax_cfg_jf = {
 +	.name = "Intel(R) Dual Band Wireless AX 22000",
 +	.fw_name_pre = IWL_QU_B_JF_B_FW_PRE,
 +	IWL_DEVICE_22500,
 +	/*
 +	 * This device doesn't support receiving BlockAck with a large bitmap
 +	 * so we need to restrict the size of transmitted aggregation to the
 +	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
 +	 */
 +	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
 +	.num_rbds = IWL_NUM_RBDS_22000_HE,
 +};
 +
 +const struct iwl_cfg iwl22000_2ax_cfg_qnj_hr_a0_f0 = {
 +	.name = "Intel(R) Dual Band Wireless AX 22000",
 +	.fw_name_pre = IWL_22000_HR_A_F0_FW_PRE,
 +	IWL_DEVICE_22500,
 +	/*
 +	 * This device doesn't support receiving BlockAck with a large bitmap
 +	 * so we need to restrict the size of transmitted aggregation to the
 +	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
 +	 */
 +	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
 +	.num_rbds = IWL_NUM_RBDS_22000_HE,
 +};
 +
++=======
++>>>>>>> f4ed93a19219 (iwlwifi: remove support for QnJ HR FPGA)
  const struct iwl_cfg iwl22000_2ax_cfg_qnj_hr_b0 = {
  	.name = "Intel(R) Dual Band Wireless AX 22000",
  	.fw_name_pre = IWL_22000_HR_B_FW_PRE,
@@@ -725,9 -560,7 +725,8 @@@ const struct iwl_cfg iwlax411_2ax_cfg_s
  
  MODULE_FIRMWARE(IWL_22000_HR_MODULE_FIRMWARE(IWL_22000_UCODE_API_MAX));
  MODULE_FIRMWARE(IWL_22000_JF_MODULE_FIRMWARE(IWL_22000_UCODE_API_MAX));
- MODULE_FIRMWARE(IWL_22000_HR_A_F0_QNJ_MODULE_FIRMWARE(IWL_22000_UCODE_API_MAX));
  MODULE_FIRMWARE(IWL_22000_HR_B_QNJ_MODULE_FIRMWARE(IWL_22000_UCODE_API_MAX));
 +MODULE_FIRMWARE(IWL_22000_HR_A0_QNJ_MODULE_FIRMWARE(IWL_22000_UCODE_API_MAX));
  MODULE_FIRMWARE(IWL_QU_C_HR_B_MODULE_FIRMWARE(IWL_22000_UCODE_API_MAX));
  MODULE_FIRMWARE(IWL_QU_B_JF_B_MODULE_FIRMWARE(IWL_22000_UCODE_API_MAX));
  MODULE_FIRMWARE(IWL_QUZ_A_HR_B_MODULE_FIRMWARE(IWL_22000_UCODE_API_MAX));
diff --cc drivers/net/wireless/intel/iwlwifi/iwl-config.h
index d95b1b513768,d5d984d7ce83..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@@ -586,22 -617,8 +586,25 @@@ extern const struct iwl_cfg killer1650s
  extern const struct iwl_cfg killer1650i_2ax_cfg_qu_c0_hr_b0;
  extern const struct iwl_cfg killer1650x_2ax_cfg;
  extern const struct iwl_cfg killer1650w_2ax_cfg;
++<<<<<<< HEAD
 +extern const struct iwl_cfg iwl9461_2ac_cfg_qu_b0_jf_b0;
 +extern const struct iwl_cfg iwl9462_2ac_cfg_qu_b0_jf_b0;
 +extern const struct iwl_cfg iwl9560_2ac_cfg_qu_b0_jf_b0;
 +extern const struct iwl_cfg iwl9560_2ac_160_cfg_qu_b0_jf_b0;
 +extern const struct iwl_cfg iwl9461_2ac_cfg_qu_c0_jf_b0;
 +extern const struct iwl_cfg iwl9462_2ac_cfg_qu_c0_jf_b0;
 +extern const struct iwl_cfg iwl9560_2ac_cfg_qu_c0_jf_b0;
 +extern const struct iwl_cfg iwl9560_2ac_160_cfg_qu_c0_jf_b0;
 +extern const struct iwl_cfg killer1550i_2ac_cfg_qu_b0_jf_b0;
 +extern const struct iwl_cfg killer1550s_2ac_cfg_qu_b0_jf_b0;
 +extern const struct iwl_cfg iwl22000_2ax_cfg_jf;
 +extern const struct iwl_cfg iwl22000_2ax_cfg_qnj_hr_a0_f0;
++=======
++>>>>>>> f4ed93a19219 (iwlwifi: remove support for QnJ HR FPGA)
  extern const struct iwl_cfg iwl22000_2ax_cfg_qnj_hr_b0_f0;
  extern const struct iwl_cfg iwl22000_2ax_cfg_qnj_hr_b0;
 +extern const struct iwl_cfg iwl9560_2ac_cfg_qnj_jf_b0;
 +extern const struct iwl_cfg iwl22000_2ax_cfg_qnj_hr_a0;
  extern const struct iwl_cfg iwlax210_2ax_cfg_so_jf_a0;
  extern const struct iwl_cfg iwlax210_2ax_cfg_so_hr_a0;
  extern const struct iwl_cfg iwlax211_2ax_cfg_so_gf_a0;
* Unmerged path drivers/net/wireless/intel/iwlwifi/cfg/22000.c
* Unmerged path drivers/net/wireless/intel/iwlwifi/iwl-config.h
diff --git a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index 5f336e51b685..7a28e9c3ca3f 100644
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@ -1100,18 +1100,6 @@ static int iwl_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 				CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id));
 			return -EINVAL;
 		}
-	} else if (CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id) ==
-		   CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_HR) &&
-		   iwl_trans->hw_rev == CSR_HW_REV_TYPE_QNJ_B0) {
-		u32 hw_status;
-
-		hw_status = iwl_read_prph(iwl_trans, UMAG_GEN_HW_STATUS);
-		if (CSR_HW_RF_STEP(iwl_trans->hw_rf_id) == SILICON_B_STEP)
-			iwl_trans->cfg = &iwl22000_2ax_cfg_qnj_hr_b0;
-		else if ((hw_status & UMAG_GEN_HW_IS_FPGA) &&
-			 CSR_HW_RF_STEP(iwl_trans->hw_rf_id) ==
-			 SILICON_A_STEP)
-			iwl_trans->cfg = &iwl22000_2ax_cfg_qnj_hr_a0_f0;
 	}
 
 	/*
