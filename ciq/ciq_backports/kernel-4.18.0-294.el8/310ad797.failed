bpf: Fix build without CONFIG_NET when using BPF XDP link

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 310ad7970a0dec847563dc6dba9e7e587d545622
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/310ad797.failed

Entire net/core subsystem is not built without CONFIG_NET. linux/netdevice.h
just assumes that it's always there, so the easiest way to fix this is to
conditionally compile out bpf_xdp_link_attach() use in bpf/syscall.c.

Fixes: aa8d3a716b59 ("bpf, xdp: Add bpf_link-based XDP attachment API")
	Reported-by: Randy Dunlap <rdunlap@infradead.org>
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
	Acked-by: Song Liu <songliubraving@fb.com>
Link: https://lore.kernel.org/bpf/20200728190527.110830-1-andriin@fb.com
(cherry picked from commit 310ad7970a0dec847563dc6dba9e7e587d545622)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/syscall.c
diff --cc kernel/bpf/syscall.c
index 124e66325086,cd3d599e9e90..000000000000
--- a/kernel/bpf/syscall.c
+++ b/kernel/bpf/syscall.c
@@@ -3850,6 -3916,18 +3850,21 @@@ static int link_create(union bpf_attr *
  	case BPF_PROG_TYPE_CGROUP_SOCKOPT:
  		ret = cgroup_bpf_link_attach(attr, prog);
  		break;
++<<<<<<< HEAD
++=======
+ 	case BPF_PROG_TYPE_TRACING:
+ 		ret = tracing_bpf_link_attach(attr, prog);
+ 		break;
+ 	case BPF_PROG_TYPE_FLOW_DISSECTOR:
+ 	case BPF_PROG_TYPE_SK_LOOKUP:
+ 		ret = netns_bpf_link_create(attr, prog);
+ 		break;
+ #ifdef CONFIG_NET
+ 	case BPF_PROG_TYPE_XDP:
+ 		ret = bpf_xdp_link_attach(attr, prog);
+ 		break;
+ #endif
++>>>>>>> 310ad7970a0d (bpf: Fix build without CONFIG_NET when using BPF XDP link)
  	default:
  		ret = -EINVAL;
  	}
* Unmerged path kernel/bpf/syscall.c
