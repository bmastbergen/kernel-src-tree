mm/userfaultfd: honor FAULT_FLAG_KILLABLE in fault path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Peter Xu <peterx@redhat.com>
commit 3e69ad081c18d138fc7fd0f1ceef3b055ab10549
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/3e69ad08.failed

Userfaultfd fault path was by default killable even if the caller does not
have FAULT_FLAG_KILLABLE.  That makes sense before in that when with gup
we don't have FAULT_FLAG_KILLABLE properly set before.  Now after previous
patch we've got FAULT_FLAG_KILLABLE applied even for gup code so it should
also make sense to let userfaultfd to honor the FAULT_FLAG_KILLABLE.

Because we're unconditionally setting FAULT_FLAG_KILLABLE in gup code
right now, this patch should have no functional change.  It also cleaned
the code a little bit by introducing some helpers.

	Signed-off-by: Peter Xu <peterx@redhat.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Tested-by: Brian Geffon <bgeffon@google.com>
	Cc: Andrea Arcangeli <aarcange@redhat.com>
	Cc: Bobby Powers <bobbypowers@gmail.com>
	Cc: David Hildenbrand <david@redhat.com>
	Cc: Denis Plotnikov <dplotnikov@virtuozzo.com>
	Cc: "Dr . David Alan Gilbert" <dgilbert@redhat.com>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: Jerome Glisse <jglisse@redhat.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: "Kirill A . Shutemov" <kirill@shutemov.name>
	Cc: Martin Cracauer <cracauer@cons.org>
	Cc: Marty McFadden <mcfadden8@llnl.gov>
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Maya Gokhale <gokhale2@llnl.gov>
	Cc: Mel Gorman <mgorman@suse.de>
	Cc: Mike Kravetz <mike.kravetz@oracle.com>
	Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
	Cc: Pavel Emelyanov <xemul@openvz.org>
Link: http://lkml.kernel.org/r/20200220160300.9941-1-peterx@redhat.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 3e69ad081c18d138fc7fd0f1ceef3b055ab10549)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/userfaultfd.c
diff --cc fs/userfaultfd.c
index 42e45a455bd8,703c1c3faa6e..000000000000
--- a/fs/userfaultfd.c
+++ b/fs/userfaultfd.c
@@@ -453,13 -486,9 +477,17 @@@ vm_fault_t handle_userfault(struct vm_f
  	uwq.ctx = ctx;
  	uwq.waken = false;
  
++<<<<<<< HEAD
 +	return_to_userland =
 +		(vmf->flags & (FAULT_FLAG_USER|FAULT_FLAG_KILLABLE)) ==
 +		(FAULT_FLAG_USER|FAULT_FLAG_KILLABLE);
 +	blocking_state = return_to_userland ? TASK_INTERRUPTIBLE :
 +			 TASK_KILLABLE;
++=======
+ 	blocking_state = userfaultfd_get_blocking_state(vmf->flags);
++>>>>>>> 3e69ad081c18 (mm/userfaultfd: honor FAULT_FLAG_KILLABLE in fault path)
  
 -	spin_lock_irq(&ctx->fault_pending_wqh.lock);
 +	spin_lock(&ctx->fault_pending_wqh.lock);
  	/*
  	 * After the __add_wait_queue the uwq is visible to userland
  	 * through poll/read().
* Unmerged path fs/userfaultfd.c
