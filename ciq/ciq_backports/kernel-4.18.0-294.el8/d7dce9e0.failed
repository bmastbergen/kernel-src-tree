ext4: do not use extent after put_bh

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author yangerkun <yangerkun@huawei.com>
commit d7dce9e08595e80bf8039a81794809c66fe26431
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/d7dce9e0.failed

ext4_ext_search_right() will read more extent blocks and call put_bh
after we get the information we need.  However, ret_ex will break this
and may cause use-after-free once pagecache has been freed.  Fix it by
copying the extent structure if needed.

	Signed-off-by: yangerkun <yangerkun@huawei.com>
Link: https://lore.kernel.org/r/20201028055617.2569255-1-yangerkun@huawei.com
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Cc: stable@kernel.org
(cherry picked from commit d7dce9e08595e80bf8039a81794809c66fe26431)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/extents.c
diff --cc fs/ext4/extents.c
index 0b1bdbdfb505,57cfa28919a9..000000000000
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@@ -4288,10 -4040,10 +4289,10 @@@ int ext4_ext_map_blocks(handle_t *handl
  			struct ext4_map_blocks *map, int flags)
  {
  	struct ext4_ext_path *path = NULL;
- 	struct ext4_extent newex, *ex, *ex2;
+ 	struct ext4_extent newex, *ex, ex2;
  	struct ext4_sb_info *sbi = EXT4_SB(inode->i_sb);
 -	ext4_fsblk_t newblock = 0, pblk;
 -	int err = 0, depth, ret;
 +	ext4_fsblk_t newblock = 0;
 +	int free_on_err = 0, err = 0, depth, ret;
  	unsigned int allocated = 0, offset = 0;
  	unsigned int allocated_clusters = 0;
  	struct ext4_allocation_request ar;
@@@ -4419,20 -4174,18 +4420,24 @@@
  	ar.lleft = map->m_lblk;
  	err = ext4_ext_search_left(inode, path, &ar.lleft, &ar.pleft);
  	if (err)
 -		goto out;
 +		goto out2;
  	ar.lright = map->m_lblk;
- 	ex2 = NULL;
  	err = ext4_ext_search_right(inode, path, &ar.lright, &ar.pright, &ex2);
++<<<<<<< HEAD
 +	if (err)
 +		goto out2;
++=======
+ 	if (err < 0)
+ 		goto out;
++>>>>>>> d7dce9e08595 (ext4: do not use extent after put_bh)
  
  	/* Check if the extent after searching to the right implies a
  	 * cluster we can use. */
- 	if ((sbi->s_cluster_ratio > 1) && ex2 &&
- 	    get_implied_cluster_alloc(inode->i_sb, map, ex2, path)) {
+ 	if ((sbi->s_cluster_ratio > 1) && err &&
+ 	    get_implied_cluster_alloc(inode->i_sb, map, &ex2, path)) {
  		ar.len = allocated = map->m_len;
  		newblock = map->m_pblk;
 +		map_from_cluster = true;
  		goto got_allocated_blocks;
  	}
  
* Unmerged path fs/ext4/extents.c
