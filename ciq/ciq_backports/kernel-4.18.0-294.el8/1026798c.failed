powerpc/security: re-name count cache flush to branch cache flush

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Nicholas Piggin <npiggin@gmail.com>
commit 1026798c644bfd3115fc4e32fd5e767cfc30ccf1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1026798c.failed

The count cache flush mostly refers to both count cache and link stack
flushing. As a first step to untangling these a bit, re-name the bits
that apply to both.

	Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20200609070610.846703-2-npiggin@gmail.com
(cherry picked from commit 1026798c644bfd3115fc4e32fd5e767cfc30ccf1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/asm-prototypes.h
#	arch/powerpc/kernel/security.c
diff --cc arch/powerpc/include/asm/asm-prototypes.h
index 792f29cc222f,fa9057360e88..000000000000
--- a/arch/powerpc/include/asm/asm-prototypes.h
+++ b/arch/powerpc/include/asm/asm-prototypes.h
@@@ -152,6 -143,16 +152,19 @@@ struct kvm_vcpu
  void _kvmppc_restore_tm_pr(struct kvm_vcpu *vcpu, u64 guest_msr);
  void _kvmppc_save_tm_pr(struct kvm_vcpu *vcpu, u64 guest_msr);
  
++<<<<<<< HEAD
++=======
+ /* Patch sites */
+ extern s32 patch__call_flush_branch_caches;
+ extern s32 patch__flush_count_cache_return;
+ extern s32 patch__flush_link_stack_return;
+ extern s32 patch__call_kvm_flush_link_stack;
+ extern s32 patch__memset_nocache, patch__memcpy_nocache;
+ 
+ extern long flush_branch_caches;
+ extern long kvm_flush_link_stack;
+ 
++>>>>>>> 1026798c644b (powerpc/security: re-name count cache flush to branch cache flush)
  #ifdef CONFIG_PPC_TRANSACTIONAL_MEM
  void kvmppc_save_tm_hv(struct kvm_vcpu *vcpu, u64 msr, bool preserve_nv);
  void kvmppc_restore_tm_hv(struct kvm_vcpu *vcpu, u64 msr, bool preserve_nv);
diff --cc arch/powerpc/kernel/security.c
index 9203c2cff485,df2a3eff950b..000000000000
--- a/arch/powerpc/kernel/security.c
+++ b/arch/powerpc/kernel/security.c
@@@ -16,16 -16,17 +16,16 @@@
  #include <asm/debugfs.h>
  #include <asm/security_features.h>
  #include <asm/setup.h>
 -#include <asm/inst.h>
  
  
 -u64 powerpc_security_features __read_mostly = SEC_FTR_DEFAULT;
 +unsigned long powerpc_security_features __read_mostly = SEC_FTR_DEFAULT;
  
- enum count_cache_flush_type {
- 	COUNT_CACHE_FLUSH_NONE	= 0x1,
- 	COUNT_CACHE_FLUSH_SW	= 0x2,
- 	COUNT_CACHE_FLUSH_HW	= 0x4,
+ enum branch_cache_flush_type {
+ 	BRANCH_CACHE_FLUSH_NONE	= 0x1,
+ 	BRANCH_CACHE_FLUSH_SW	= 0x2,
+ 	BRANCH_CACHE_FLUSH_HW	= 0x4,
  };
- static enum count_cache_flush_type count_cache_flush_type = COUNT_CACHE_FLUSH_NONE;
+ static enum branch_cache_flush_type count_cache_flush_type = BRANCH_CACHE_FLUSH_NONE;
  static bool link_stack_flush_enabled;
  
  bool barrier_nospec_enabled;
@@@ -426,9 -440,11 +426,14 @@@ static void toggle_branch_cache_flush(b
  		enable = false;
  
  	if (!enable) {
++<<<<<<< HEAD
 +		patch_instruction_site(&patch__call_flush_count_cache, PPC_INST_NOP);
++=======
+ 		patch_instruction_site(&patch__call_flush_branch_caches,
+ 				       ppc_inst(PPC_INST_NOP));
++>>>>>>> 1026798c644b (powerpc/security: re-name count cache flush to branch cache flush)
  #ifdef CONFIG_KVM_BOOK3S_HV_POSSIBLE
 -		patch_instruction_site(&patch__call_kvm_flush_link_stack,
 -				       ppc_inst(PPC_INST_NOP));
 +		patch_instruction_site(&patch__call_kvm_flush_link_stack, PPC_INST_NOP);
  #endif
  		pr_info("link-stack-flush: software flush disabled.\n");
  		link_stack_flush_enabled = false;
@@@ -462,8 -479,8 +467,13 @@@
  		return;
  	}
  
++<<<<<<< HEAD
 +	patch_instruction_site(&patch__flush_count_cache_return, PPC_INST_BLR);
 +	count_cache_flush_type = COUNT_CACHE_FLUSH_HW;
++=======
+ 	patch_instruction_site(&patch__flush_count_cache_return, ppc_inst(PPC_INST_BLR));
+ 	count_cache_flush_type = BRANCH_CACHE_FLUSH_HW;
++>>>>>>> 1026798c644b (powerpc/security: re-name count cache flush to branch cache flush)
  	pr_info("count-cache-flush: hardware assisted flush sequence enabled\n");
  }
  
* Unmerged path arch/powerpc/include/asm/asm-prototypes.h
diff --git a/arch/powerpc/kernel/entry_64.S b/arch/powerpc/kernel/entry_64.S
index c978aff671d9..5dcc487e5f56 100644
--- a/arch/powerpc/kernel/entry_64.S
+++ b/arch/powerpc/kernel/entry_64.S
@@ -509,8 +509,7 @@ _GLOBAL(ret_from_kernel_thread)
 
 #define FLUSH_COUNT_CACHE	\
 1:	nop;			\
-	patch_site 1b, patch__call_flush_count_cache
-
+	patch_site 1b, patch__call_flush_branch_caches
 
 #define BCCTR_FLUSH	.long 0x4c400420
 
@@ -521,8 +520,8 @@ _GLOBAL(ret_from_kernel_thread)
 .endm
 
 .balign 32
-.global flush_count_cache
-flush_count_cache:
+.global flush_branch_caches
+flush_branch_caches:
 	/* Save LR into r9 */
 	mflr	r9
 
* Unmerged path arch/powerpc/kernel/security.c
