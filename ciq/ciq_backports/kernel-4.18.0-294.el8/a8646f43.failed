powerpc/kprobes: Use patch_instruction()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jordan Niethe <jniethe5@gmail.com>
commit a8646f43ba5046e7f5c4396125d5136bfcb17b49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a8646f43.failed

Instead of using memcpy() and flush_icache_range() use
patch_instruction() which not only accomplishes both of these steps but
will also make it easier to add support for prefixed instructions.

	Signed-off-by: Jordan Niethe <jniethe5@gmail.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
	Reviewed-by: Alistair Popple <alistair@popple.id.au>
Link: https://lore.kernel.org/r/20200506034050.24806-16-jniethe5@gmail.com
(cherry picked from commit a8646f43ba5046e7f5c4396125d5136bfcb17b49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/kprobes.c
diff --cc arch/powerpc/kernel/kprobes.c
index e4c5bf33970b,a72c8e1a42ad..000000000000
--- a/arch/powerpc/kernel/kprobes.c
+++ b/arch/powerpc/kernel/kprobes.c
@@@ -137,11 -125,8 +137,16 @@@ int arch_prepare_kprobe(struct kprobe *
  	}
  
  	if (!ret) {
++<<<<<<< HEAD
 +		memcpy(p->ainsn.insn, p->addr,
 +				MAX_INSN_SIZE * sizeof(kprobe_opcode_t));
 +		p->opcode = *p->addr;
 +		flush_icache_range((unsigned long)p->ainsn.insn,
 +			(unsigned long)p->ainsn.insn + sizeof(kprobe_opcode_t));
++=======
+ 		patch_instruction((struct ppc_inst *)p->ainsn.insn, insn);
+ 		p->opcode = ppc_inst_val(insn);
++>>>>>>> a8646f43ba50 (powerpc/kprobes: Use patch_instruction())
  	}
  
  	p->ainsn.boostable = 0;
* Unmerged path arch/powerpc/kernel/kprobes.c
