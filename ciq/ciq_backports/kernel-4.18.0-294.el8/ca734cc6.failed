kasan: fix clang compilation warning due to stack protector

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Andrey Konovalov <andreyknvl@google.com>
commit ca734cc67e3c8ce20eb75dd1e45ae86e10be102b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ca734cc6.failed

KASAN uses a single cc-option invocation to disable both conserve-stack
and stack-protector flags.  The former flag is not present in Clang,
which causes cc-option to fail, and results in stack-protector being
enabled.

Fix by using separate cc-option calls for each flag.  Also collect all
flags in a variable to avoid calling cc-option multiple times for
different files.

	Reported-by: Qian Cai <cai@lca.pw>
	Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Reviewed-by: Marco Elver <elver@google.com>
Link: http://lkml.kernel.org/r/c2f0c8e4048852ae014f4a391d96ca42d27e3255.1590779332.git.andreyknvl@google.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit ca734cc67e3c8ce20eb75dd1e45ae86e10be102b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/kasan/Makefile
diff --cc mm/kasan/Makefile
index 3289db38bc87,d532c2587731..000000000000
--- a/mm/kasan/Makefile
+++ b/mm/kasan/Makefile
@@@ -1,11 -1,34 +1,27 @@@
  # SPDX-License-Identifier: GPL-2.0
  KASAN_SANITIZE := n
 -UBSAN_SANITIZE := n
 +UBSAN_SANITIZE_kasan.o := n
  KCOV_INSTRUMENT := n
  
 -# Disable ftrace to avoid recursion.
 -CFLAGS_REMOVE_common.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_generic.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_generic_report.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_init.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_quarantine.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_report.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_tags.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_tags_report.o = $(CC_FLAGS_FTRACE)
 -
 +CFLAGS_REMOVE_kasan.o = -pg
  # Function splitter causes unnecessary splits in __asan_load1/__asan_store1
  # see: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63533
++<<<<<<< HEAD
 +CFLAGS_kasan.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector)
++=======
+ CC_FLAGS_KASAN_RUNTIME := $(call cc-option, -fno-conserve-stack)
+ CC_FLAGS_KASAN_RUNTIME += $(call cc-option, -fno-stack-protector)
+ # Disable branch tracing to avoid recursion.
+ CC_FLAGS_KASAN_RUNTIME += -DDISABLE_BRANCH_PROFILING
+ 
+ CFLAGS_common.o := $(CC_FLAGS_KASAN_RUNTIME)
+ CFLAGS_generic.o := $(CC_FLAGS_KASAN_RUNTIME)
+ CFLAGS_generic_report.o := $(CC_FLAGS_KASAN_RUNTIME)
+ CFLAGS_init.o := $(CC_FLAGS_KASAN_RUNTIME)
+ CFLAGS_quarantine.o := $(CC_FLAGS_KASAN_RUNTIME)
+ CFLAGS_report.o := $(CC_FLAGS_KASAN_RUNTIME)
+ CFLAGS_tags.o := $(CC_FLAGS_KASAN_RUNTIME)
+ CFLAGS_tags_report.o := $(CC_FLAGS_KASAN_RUNTIME)
++>>>>>>> ca734cc67e3c (kasan: fix clang compilation warning due to stack protector)
  
 -obj-$(CONFIG_KASAN) := common.o init.o report.o
 -obj-$(CONFIG_KASAN_GENERIC) += generic.o generic_report.o quarantine.o
 -obj-$(CONFIG_KASAN_SW_TAGS) += tags.o tags_report.o
 +obj-y := kasan.o report.o kasan_init.o quarantine.o
* Unmerged path mm/kasan/Makefile
