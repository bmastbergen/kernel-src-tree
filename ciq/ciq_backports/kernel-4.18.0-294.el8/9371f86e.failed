bpfilter: match bit size of bpfilter_umh to that of the kernel

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Masahiro Yamada <masahiroy@kernel.org>
commit 9371f86ecb60f6f1f120e3d93fe892bbb70d04c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/9371f86e.failed

bpfilter_umh is built for the default machine bit of the compiler,
which may not match to the bit size of the kernel.

This happens in the scenario below:

You can use biarch GCC that defaults to 64-bit for building the 32-bit
kernel. In this case, Kbuild passes -m32 to teach the compiler to
produce 32-bit kernel space objects. However, it is missing when
building bpfilter_umh. It is built as a 64-bit ELF, and then embedded
into the 32-bit kernel.

The 32-bit kernel and 64-bit umh is a bad combination.

In theory, we can have 32-bit umh running on 64-bit kernel, but we do
not have a good reason to support such a usecase.

The best is to match the bit size between them.

Pass -m32 or -m64 to the umh build command if it is found in
$(KBUILD_CFLAGS). Evaluate CC_CAN_LINK against the kernel bit-size.

	Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
(cherry picked from commit 9371f86ecb60f6f1f120e3d93fe892bbb70d04c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bpfilter/Makefile
#	usr/include/Makefile
diff --cc net/bpfilter/Makefile
index 854395fb98cd,f6209e4827b9..000000000000
--- a/net/bpfilter/Makefile
+++ b/net/bpfilter/Makefile
@@@ -3,9 -3,10 +3,14 @@@
  # Makefile for the Linux BPFILTER layer.
  #
  
 -hostprogs := bpfilter_umh
 +hostprogs-y := bpfilter_umh
  bpfilter_umh-objs := main.o
++<<<<<<< HEAD
 +KBUILD_HOSTCFLAGS += -Itools/include/ -Itools/include/uapi
++=======
+ KBUILD_HOSTCFLAGS += -I $(srctree)/tools/include/ -I $(srctree)/tools/include/uapi \
+ 			$(filter -m32 -m64, $(KBUILD_CFLAGS))
++>>>>>>> 9371f86ecb60 (bpfilter: match bit size of bpfilter_umh to that of the kernel)
  HOSTCC := $(CC)
  
  ifeq ($(CONFIG_BPFILTER_UMH), y)
* Unmerged path usr/include/Makefile
diff --git a/init/Kconfig b/init/Kconfig
index 6eaf9c7f706f..bef0d57fa827 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -24,7 +24,9 @@ config CLANG_VERSION
 	default $(shell,$(srctree)/scripts/clang-version.sh $(CC))
 
 config CC_CAN_LINK
-	def_bool $(success,$(srctree)/scripts/cc-can-link.sh $(CC))
+	bool
+	default $(success,$(srctree)/scripts/cc-can-link.sh $(CC) $(m64-flag)) if 64BIT
+	default $(success,$(srctree)/scripts/cc-can-link.sh $(CC) $(m32-flag))
 
 config CONSTRUCTORS
 	bool
* Unmerged path net/bpfilter/Makefile
* Unmerged path usr/include/Makefile
