net: phylink: use config.an_enabled in ksettings_set method

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Russell King <rmk+kernel@armlinux.org.uk>
commit a83c8829d18d47939980db16a0ec79fa365ce6b0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a83c8829.failed

Rather than recomputing whether AN is enabled, use config.an_enabled.

	Suggested-by: Ioana Ciornei <ioana.ciornei@nxp.com>
	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a83c8829d18d47939980db16a0ec79fa365ce6b0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phylink.c
diff --cc drivers/net/phy/phylink.c
index a4a4987d90c1,6cb9ca74341b..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -1310,66 -1385,34 +1310,93 @@@ int phylink_ethtool_ksettings_set(struc
  		return -EINVAL;
  	}
  
++<<<<<<< HEAD
 +	if (pl->phydev) {
 +		/* If we have a PHY, we process the kset change via phylib.
 +		 * phylib will call our link state function if the PHY
 +		 * parameters have changed, which will trigger a resolve
 +		 * and update the MAC configuration.
++=======
+ 	/* For a fixed link, this isn't able to change any parameters,
+ 	 * which just leaves inband mode.
+ 	 */
+ 	if (phylink_validate(pl, support, &config))
+ 		return -EINVAL;
+ 
+ 	/* If autonegotiation is enabled, we must have an advertisement */
+ 	if (config.an_enabled && phylink_is_empty_linkmode(config.advertising))
+ 		return -EINVAL;
+ 
+ 	mutex_lock(&pl->state_mutex);
+ 	linkmode_copy(pl->link_config.advertising, config.advertising);
+ 	pl->link_config.interface = config.interface;
+ 	pl->link_config.speed = config.speed;
+ 	pl->link_config.duplex = config.duplex;
+ 	pl->link_config.an_enabled = config.an_enabled;
+ 
+ 	if (pl->cur_link_an_mode == MLO_AN_INBAND &&
+ 	    !test_bit(PHYLINK_DISABLE_STOPPED, &pl->phylink_disable_state)) {
+ 		/* If in 802.3z mode, this updates the advertisement.
+ 		 *
+ 		 * If we are in SGMII mode without a PHY, there is no
+ 		 * advertisement; the only thing we have is the pause
+ 		 * modes which can only come from a PHY.
++>>>>>>> a83c8829d18d (net: phylink: use config.an_enabled in ksettings_set method)
  		 */
 -		phylink_pcs_config(pl, true, &pl->link_config);
 +		our_kset = *kset;
 +		linkmode_copy(our_kset.link_modes.advertising,
 +			      config.advertising);
 +		our_kset.base.speed = config.speed;
 +		our_kset.base.duplex = config.duplex;
 +
 +		ret = phy_ethtool_ksettings_set(pl->phydev, &our_kset);
 +		if (ret)
 +			return ret;
 +
 +		mutex_lock(&pl->state_mutex);
 +		/* Save the new configuration */
 +		linkmode_copy(pl->link_config.advertising,
 +			      our_kset.link_modes.advertising);
 +		pl->link_config.interface = config.interface;
 +		pl->link_config.speed = our_kset.base.speed;
 +		pl->link_config.duplex = our_kset.base.duplex;
 +		pl->link_config.an_enabled = our_kset.base.autoneg !=
 +					     AUTONEG_DISABLE;
 +		mutex_unlock(&pl->state_mutex);
 +	} else {
 +		/* For a fixed link, this isn't able to change any parameters,
 +		 * which just leaves inband mode.
 +		 */
 +		if (phylink_validate(pl, support, &config))
 +			return -EINVAL;
 +
 +		/* If autonegotiation is enabled, we must have an advertisement */
 +		if (config.an_enabled &&
 +		    phylink_is_empty_linkmode(config.advertising))
 +			return -EINVAL;
 +
 +		mutex_lock(&pl->state_mutex);
 +		linkmode_copy(pl->link_config.advertising, config.advertising);
 +		pl->link_config.interface = config.interface;
 +		pl->link_config.speed = config.speed;
 +		pl->link_config.duplex = config.duplex;
 +		pl->link_config.an_enabled = kset->base.autoneg !=
 +					     AUTONEG_DISABLE;
 +
 +		if (pl->cur_link_an_mode == MLO_AN_INBAND &&
 +		    !test_bit(PHYLINK_DISABLE_STOPPED,
 +			      &pl->phylink_disable_state)) {
 +			/* If in 802.3z mode, this updates the advertisement.
 +			 *
 +			 * If we are in SGMII mode without a PHY, there is no
 +			 * advertisement; the only thing we have is the pause
 +			 * modes which can only come from a PHY.
 +			 */
 +			phylink_mac_config(pl, &pl->link_config);
 +			phylink_mac_an_restart(pl);
 +		}
 +		mutex_unlock(&pl->state_mutex);
  	}
 -	mutex_unlock(&pl->state_mutex);
  
  	return 0;
  }
* Unmerged path drivers/net/phy/phylink.c
