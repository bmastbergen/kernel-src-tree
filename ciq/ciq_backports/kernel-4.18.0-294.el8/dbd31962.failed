arm64: frace: use asm EXPORT_SYMBOL()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Mark Rutland <mark.rutland@arm.com>
commit dbd3196299fe5878caf43f6637ee08feb0942411
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/dbd31962.failed

For a while now it's been possible to use EXPORT_SYMBOL() in assembly
files, which allows us to place exports immediately after assembly
functions, as we do for C functions.

As a step towards removing arm64ksyms.c, let's move the ftrace exports
to the assembly files the functions are defined in.

There should be no functional change as a result of this patch.

	Signed-off-by: Mark Rutland <mark.rutland@arm.com>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Will Deacon <will.deacon@arm.com>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit dbd3196299fe5878caf43f6637ee08feb0942411)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/arm64ksyms.c
diff --cc arch/arm64/kernel/arm64ksyms.c
index 249b0936cdec,4ca8d2b245d2..000000000000
--- a/arch/arm64/kernel/arm64ksyms.c
+++ b/arch/arm64/kernel/arm64ksyms.c
@@@ -31,49 -28,3 +31,52 @@@
  
  #include <asm/checksum.h>
  
++<<<<<<< HEAD
 +	/* user mem (segment) */
 +EXPORT_SYMBOL(__arch_copy_from_user);
 +EXPORT_SYMBOL(__arch_copy_to_user);
 +EXPORT_SYMBOL(__arch_clear_user);
 +EXPORT_SYMBOL(__arch_copy_in_user);
 +
 +	/* physical memory */
 +EXPORT_SYMBOL(memstart_addr);
 +
 +	/* string / mem functions */
 +#ifndef CONFIG_KASAN
 +EXPORT_SYMBOL(strchr);
 +EXPORT_SYMBOL(strrchr);
 +EXPORT_SYMBOL(strcmp);
 +EXPORT_SYMBOL(strncmp);
 +EXPORT_SYMBOL(strlen);
 +EXPORT_SYMBOL(strnlen);
 +EXPORT_SYMBOL(memcmp);
 +EXPORT_SYMBOL(memchr);
 +#endif
 +
 +EXPORT_SYMBOL(memset);
 +EXPORT_SYMBOL(memcpy);
 +EXPORT_SYMBOL(memmove);
 +EXPORT_SYMBOL(__memset);
 +EXPORT_SYMBOL(__memcpy);
 +EXPORT_SYMBOL(__memmove);
 +
 +#ifdef CONFIG_FUNCTION_TRACER
 +EXPORT_SYMBOL(_mcount);
 +NOKPROBE_SYMBOL(_mcount);
 +#endif
 +
 +	/* arm-smccc */
 +EXPORT_SYMBOL(__arm_smccc_smc);
 +EXPORT_SYMBOL(__arm_smccc_hvc);
 +
 +	/* tishift.S */
 +extern long long __ashlti3(long long a, int b);
 +EXPORT_SYMBOL(__ashlti3);
 +extern long long __ashrti3(long long a, int b);
 +EXPORT_SYMBOL(__ashrti3);
 +extern long long __lshrti3(long long a, int b);
 +EXPORT_SYMBOL(__lshrti3);
 +
 +EXPORT_SYMBOL(kimage_vaddr);
++=======
++>>>>>>> dbd3196299fe (arm64: frace: use asm EXPORT_SYMBOL())
* Unmerged path arch/arm64/kernel/arm64ksyms.c
diff --git a/arch/arm64/kernel/entry-ftrace.S b/arch/arm64/kernel/entry-ftrace.S
index 1175f5827ae1..f9d06aca39f0 100644
--- a/arch/arm64/kernel/entry-ftrace.S
+++ b/arch/arm64/kernel/entry-ftrace.S
@@ -121,6 +121,8 @@ skip_ftrace_call:			// }
 #endif /* CONFIG_FUNCTION_GRAPH_TRACER */
 	mcount_exit
 ENDPROC(_mcount)
+EXPORT_SYMBOL(_mcount)
+NOKPROBE(_mcount)
 
 #else /* CONFIG_DYNAMIC_FTRACE */
 /*
@@ -132,6 +134,8 @@ ENDPROC(_mcount)
 ENTRY(_mcount)
 	ret
 ENDPROC(_mcount)
+EXPORT_SYMBOL(_mcount)
+NOKPROBE(_mcount)
 
 /*
  * void ftrace_caller(unsigned long return_address)
