vgaswitcheroo: call fbcon_remap_all directly

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 1cd51b5d200dec292577a4656803d8aeff54ad51
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1cd51b5d.failed

While at it, clean up the interface a bit and push the console locking
into fbcon.c.

v2: Remove now outdated comment (Lukas).

v3: Forgot to add static inline to the dummy function.

	Acked-by: Lukas Wunner <lukas@wunner.de>
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
	Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Lukas Wunner <lukas@wunner.de>
	Cc: David Airlie <airlied@linux.ie>
	Cc: Daniel Vetter <daniel@ffwll.ch>
	Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Maxime Ripard <maxime.ripard@bootlin.com>
	Cc: Sean Paul <sean@poorly.run>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Hans de Goede <hdegoede@redhat.com>
	Cc: Yisheng Xie <ysxie@foxmail.com>
	Cc: linux-fbdev@vger.kernel.org
Link: https://patchwork.freedesktop.org/patch/msgid/20190528090304.9388-30-daniel.vetter@ffwll.ch
(cherry picked from commit 1cd51b5d200dec292577a4656803d8aeff54ad51)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbcon.c
#	include/linux/fb.h
#	include/linux/fbcon.h
diff --cc drivers/video/fbdev/core/fbcon.c
index d22b1f1246e3,44779a4371ee..000000000000
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@@ -3136,13 -3149,19 +3136,22 @@@ void fbcon_fb_unregistered(struct fb_in
  		do_unregister_con_driver(&fb_con);
  }
  
- /* called with console_lock held */
- static void fbcon_remap_all(int idx)
+ void fbcon_remap_all(struct fb_info *info)
  {
- 	int i;
+ 	int i, idx = info->node;
  
- 	WARN_CONSOLE_UNLOCKED();
++<<<<<<< HEAD
++=======
+ 	console_lock();
+ 	if (deferred_takeover) {
+ 		for (i = first_fb_vc; i <= last_fb_vc; i++)
+ 			con2fb_map_boot[i] = idx;
+ 		fbcon_map_override();
+ 		console_unlock();
+ 		return;
+ 	}
  
++>>>>>>> 1cd51b5d200d (vgaswitcheroo: call fbcon_remap_all directly)
  	for (i = first_fb_vc; i <= last_fb_vc; i++)
  		set_con2fb_map(i, idx, 0);
  
@@@ -3334,20 -3337,6 +3344,23 @@@ static int fbcon_event_notify(struct no
  		con2fb = event->data;
  		con2fb->framebuffer = con2fb_map[con2fb->console - 1];
  		break;
++<<<<<<< HEAD
 +	case FB_EVENT_BLANK:
 +		fbcon_fb_blanked(info, *(int *)event->data);
 +		break;
 +	case FB_EVENT_NEW_MODELIST:
 +		fbcon_new_modelist(info);
 +		break;
 +	case FB_EVENT_GET_REQ:
 +		caps = event->data;
 +		fbcon_get_requirement(info, caps);
 +		break;
 +	case FB_EVENT_REMAP_ALL_CONSOLE:
 +		idx = info->node;
 +		fbcon_remap_all(idx);
 +		break;
++=======
++>>>>>>> 1cd51b5d200d (vgaswitcheroo: call fbcon_remap_all directly)
  	}
  	return ret;
  }
diff --cc include/linux/fb.h
index 98869c8d0fa7,25e4b885f5b3..000000000000
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@@ -147,24 -137,11 +147,28 @@@ struct fb_cursor_user 
  #define FB_EVENT_GET_CONSOLE_MAP        0x07
  /*      CONSOLE-SPECIFIC: set console to framebuffer mapping */
  #define FB_EVENT_SET_CONSOLE_MAP        0x08
 -/*      A display blank is requested       */
 +/*      A hardware display blank change occurred */
  #define FB_EVENT_BLANK                  0x09
++<<<<<<< HEAD
 +/*      Private modelist is to be replaced */
 +#define FB_EVENT_NEW_MODELIST           0x0A
 +/*	The resolution of the passed in fb_info about to change and
 +        all vc's should be changed         */
 +#define FB_EVENT_MODE_CHANGE_ALL	0x0B
 +/*	A software display blank change occurred */
 +#define FB_EVENT_CONBLANK               0x0C
 +/*      Get drawing requirements        */
 +#define FB_EVENT_GET_REQ                0x0D
 +/*      Unbind from the console if possible */
 +#define FB_EVENT_FB_UNBIND              0x0E
 +/*      CONSOLE-SPECIFIC: remap all consoles to new fb - for vga_switcheroo */
 +#define FB_EVENT_REMAP_ALL_CONSOLE      0x0F
 +/*      A hardware display blank early change occured */
++=======
+ /*      A hardware display blank early change occurred */
++>>>>>>> 1cd51b5d200d (vgaswitcheroo: call fbcon_remap_all directly)
  #define FB_EARLY_EVENT_BLANK		0x10
 -/*      A hardware display blank revert early change occurred */
 +/*      A hardware display blank revert early change occured */
  #define FB_R_EARLY_EVENT_BLANK		0x11
  
  struct fb_event {
diff --cc include/linux/fbcon.h
index 94a71e9e1257,69f900d289b2..000000000000
--- a/include/linux/fbcon.h
+++ b/include/linux/fbcon.h
@@@ -6,11 -6,33 +6,39 @@@ void __init fb_console_init(void)
  void __exit fb_console_exit(void);
  int fbcon_fb_registered(struct fb_info *info);
  void fbcon_fb_unregistered(struct fb_info *info);
++<<<<<<< HEAD
++=======
+ void fbcon_fb_unbind(struct fb_info *info);
+ void fbcon_suspended(struct fb_info *info);
+ void fbcon_resumed(struct fb_info *info);
+ int fbcon_mode_deleted(struct fb_info *info,
+ 		       struct fb_videomode *mode);
+ void fbcon_new_modelist(struct fb_info *info);
+ void fbcon_get_requirement(struct fb_info *info,
+ 			   struct fb_blit_caps *caps);
+ void fbcon_fb_blanked(struct fb_info *info, int blank);
+ void fbcon_update_vcs(struct fb_info *info, bool all);
+ void fbcon_remap_all(struct fb_info *info);
++>>>>>>> 1cd51b5d200d (vgaswitcheroo: call fbcon_remap_all directly)
  #else
  static inline void fb_console_init(void) {}
  static inline void fb_console_exit(void) {}
  static inline int fbcon_fb_registered(struct fb_info *info) { return 0; }
  static inline void fbcon_fb_unregistered(struct fb_info *info) {}
++<<<<<<< HEAD
++=======
+ static inline void fbcon_fb_unbind(struct fb_info *info) {}
+ static inline void fbcon_suspended(struct fb_info *info) {}
+ static inline void fbcon_resumed(struct fb_info *info) {}
+ static inline int fbcon_mode_deleted(struct fb_info *info,
+ 				     struct fb_videomode *mode) { return 0; }
+ static inline void fbcon_new_modelist(struct fb_info *info) {}
+ static inline void fbcon_get_requirement(struct fb_info *info,
+ 					 struct fb_blit_caps *caps) {}
+ static inline void fbcon_fb_blanked(struct fb_info *info, int blank) {}
+ static inline void fbcon_update_vcs(struct fb_info *info, bool all) {}
+ static inline void fbcon_remap_all(struct fb_info *info) {}
++>>>>>>> 1cd51b5d200d (vgaswitcheroo: call fbcon_remap_all directly)
  #endif
  
  #endif /* _LINUX_FBCON_H */
diff --git a/drivers/gpu/vga/vga_switcheroo.c b/drivers/gpu/vga/vga_switcheroo.c
index a132c37d7334..65d7541c413a 100644
--- a/drivers/gpu/vga/vga_switcheroo.c
+++ b/drivers/gpu/vga/vga_switcheroo.c
@@ -35,6 +35,7 @@
 #include <linux/debugfs.h>
 #include <linux/fb.h>
 #include <linux/fs.h>
+#include <linux/fbcon.h>
 #include <linux/module.h>
 #include <linux/pci.h>
 #include <linux/pm_domain.h>
@@ -736,14 +737,8 @@ static int vga_switchto_stage2(struct vga_switcheroo_client *new_client)
 	if (!active->driver_power_control)
 		set_audio_state(active->id, VGA_SWITCHEROO_OFF);
 
-	if (new_client->fb_info) {
-		struct fb_event event;
-
-		console_lock();
-		event.info = new_client->fb_info;
-		fb_notifier_call_chain(FB_EVENT_REMAP_ALL_CONSOLE, &event);
-		console_unlock();
-	}
+	if (new_client->fb_info)
+		fbcon_remap_all(new_client->fb_info);
 
 	mutex_lock(&vgasr_priv.mux_hw_lock);
 	ret = vgasr_priv.handler->switchto(new_client->id);
* Unmerged path drivers/video/fbdev/core/fbcon.c
* Unmerged path include/linux/fb.h
* Unmerged path include/linux/fbcon.h
