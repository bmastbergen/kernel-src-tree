iwlwifi: add Pu/PnJ/Th device values to differentiate them

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Luca Coelho <luciano.coelho@intel.com>
commit f673a193d56ea0c92b1ac9bb29710fef55d4c614
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/f673a193.failed

Pu, PnJ and Th devices have different combinations of PCI ID, MAC ID
and RF IDs.  Use these to differentiate them and choose the correct
configuration.

This also includes a change from using soc cfg's for 0x2526
devices (PnJ/Th), which was incorrect.

	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
Link: https://lore.kernel.org/r/iwlwifi.20200309091348.602bb33528cf.I3acacb07c69ed063c7f1ca78f2dce9b7b4ef3946@changeid
(cherry picked from commit f673a193d56ea0c92b1ac9bb29710fef55d4c614)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/iwl-config.h
#	drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --cc drivers/net/wireless/intel/iwlwifi/iwl-config.h
index d95b1b513768,7a985b317807..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@@ -454,9 -454,38 +454,44 @@@ struct iwl_cfg 
  
  #define IWL_CFG_ANY (~0)
  
++<<<<<<< HEAD
 +struct iwl_dev_info {
 +	u16 device;
 +	u16 subdevice;
++=======
+ #define IWL_CFG_MAC_TYPE_PU		0x31
+ #define IWL_CFG_MAC_TYPE_PNJ		0x32
+ #define IWL_CFG_MAC_TYPE_TH		0x32
+ #define IWL_CFG_MAC_TYPE_QU		0x33
+ 
+ #define IWL_CFG_RF_TYPE_TH		0x105
+ #define IWL_CFG_RF_TYPE_JF2		0x105
+ #define IWL_CFG_RF_TYPE_JF1		0x108
+ 
+ #define IWL_CFG_RF_ID_TH		0x1
+ #define IWL_CFG_RF_ID_TH1		0x1
+ #define IWL_CFG_RF_ID_JF		0x3
+ #define IWL_CFG_RF_ID_JF1		0x6
+ 
+ #define IWL_CFG_NO_160			0x0
+ #define IWL_CFG_160			0x1
+ 
+ #define IWL_CFG_CORES_BT		0x0
+ #define IWL_CFG_CORES_BT_GNSS		0x5
+ 
+ #define IWL_SUBDEVICE_RF_ID(subdevice)	((u16)((subdevice) & 0x00F0) >> 4)
+ #define IWL_SUBDEVICE_NO_160(subdevice)	((u16)((subdevice) & 0x0100) >> 9)
+ #define IWL_SUBDEVICE_CORES(subdevice)	((u16)((subdevice) & 0x1C00) >> 10)
+ 
+ struct iwl_dev_info {
+ 	u16 device;
+ 	u16 subdevice;
+ 	u16 mac_type;
+ 	u16 rf_type;
+ 	u8 rf_id;
+ 	u8 no_160;
+ 	u8 cores;
++>>>>>>> f673a193d56e (iwlwifi: add Pu/PnJ/Th device values to differentiate them)
  	const struct iwl_cfg *cfg;
  	const char *name;
  };
diff --cc drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index 161287ba0acb,492aa4469608..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@@ -941,66 -941,61 +941,114 @@@ static const struct pci_device_id iwl_h
  };
  MODULE_DEVICE_TABLE(pci, iwl_hw_card_ids);
  
++<<<<<<< HEAD
 +#define IWL_DEV_INFO(_device, _subdevice, _cfg, _name)			 \
 +	{ .device = (_device), .subdevice = (_subdevice), .cfg = &(_cfg), \
 +	  .name = _name }
++=======
+ #define _IWL_DEV_INFO(_device, _subdevice, _mac_type, _rf_type, _rf_id,    \
+ 		      _no_160, _cores, _cfg, _name)			   \
+ 	{ .device = (_device), .subdevice = (_subdevice), .cfg = &(_cfg),  \
+ 	  .name = _name, .mac_type = _mac_type, .rf_type = _rf_type,	   \
+ 	  .no_160 = _no_160, .cores = _cores, .rf_id = _rf_id, }
+ 
+ #define IWL_DEV_INFO(_device, _subdevice, _cfg, _name) \
+ 	_IWL_DEV_INFO(_device, _subdevice, IWL_CFG_ANY, IWL_CFG_ANY,	   \
+ 		      IWL_CFG_ANY, IWL_CFG_ANY, IWL_CFG_ANY, _cfg, _name)
++>>>>>>> f673a193d56e (iwlwifi: add Pu/PnJ/Th device values to differentiate them)
  
  static const struct iwl_dev_info iwl_dev_info_table[] = {
  #if IS_ENABLED(CONFIG_IWLMVM)
 -	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_2ac_cfg, iwl9260_killer_1550_name),
 -
 +	IWL_DEV_INFO(0x2526, 0x0010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0018, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x001C, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4018, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x401C, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x6010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x6014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x8014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x8010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xA014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xE010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xE014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +
++<<<<<<< HEAD
 +	IWL_DEV_INFO(0x2526, 0x0210, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x0214, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x1010, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x1210, iwl9260_2ac_cfg, iwl9260_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0030, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0038, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x003C, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4030, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x2030, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x2034, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4034, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0034, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0230, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0234, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0238, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x023C, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x1030, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x4234, iwl9560_2ac_cfg_soc, iwl9560_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0060, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0064, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0260, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0264, iwl9461_2ac_cfg_soc, iwl9461_name),
++=======
+ 	IWL_DEV_INFO(0x2526, 0x0060, iwl9560_2ac_cfg_soc, iwl9461_name),
+ 	IWL_DEV_INFO(0x2526, 0x0064, iwl9560_2ac_cfg_soc, iwl9461_name),
+ 	IWL_DEV_INFO(0x2526, 0x0260, iwl9560_2ac_cfg_soc, iwl9461_name),
+ 	IWL_DEV_INFO(0x2526, 0x0264, iwl9560_2ac_cfg_soc, iwl9461_name),
 -
 -	IWL_DEV_INFO(0x2526, 0x00A0, iwl9560_2ac_cfg_soc, iwl9462_name),
 -	IWL_DEV_INFO(0x2526, 0x00A4, iwl9560_2ac_cfg_soc, iwl9462_name),
 -	IWL_DEV_INFO(0x2526, 0x02A0, iwl9560_2ac_cfg_soc, iwl9462_name),
 -	IWL_DEV_INFO(0x2526, 0x02A4, iwl9560_2ac_cfg_soc, iwl9462_name),
 -	IWL_DEV_INFO(0x2526, 0x40A4, iwl9560_2ac_cfg_soc, iwl9462_name),
 -	IWL_DEV_INFO(0x2526, 0x42A4, iwl9560_2ac_cfg_soc, iwl9462_name),
 -
 -	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
 -	IWL_DEV_INFO(0x2526, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
 -
++>>>>>>> f673a193d56e (iwlwifi: add Pu/PnJ/Th device values to differentiate them)
 +
 +	IWL_DEV_INFO(0x2526, 0x00A0, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x00A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x02A0, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x02A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x40A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x42A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_killer_2ac_cfg, iwl9260_killer_1550_name),
 +	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_killer_s_2ac_cfg_soc, iwl9560_killer_1550s_name),
 +	IWL_DEV_INFO(0x2526, 0x1552, iwl9560_killer_2ac_cfg_soc, iwl9560_killer_1550i_name),
 +
++<<<<<<< HEAD
 +	IWL_DEV_INFO(0x2526, 0x1410, iwl9270_2ac_cfg, iwl9270_name),
 +	IWL_DEV_INFO(0x2526, 0x1610, iwl9270_2ac_cfg, iwl9270_name),
++=======
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg, iwl9560_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT_GNSS,
+ 		      iwl9260_2ac_cfg, iwl9270_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT_GNSS,
+ 		      iwl9260_2ac_cfg, iwl9270_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9260_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9260_name),
++>>>>>>> f673a193d56e (iwlwifi: add Pu/PnJ/Th device values to differentiate them)
  #endif /* CONFIG_IWLMVM */
  };
  
@@@ -1036,13 -1031,29 +1084,33 @@@ static int iwl_pci_probe(struct pci_de
  	/* the trans_cfg should never change, so set it now */
  	iwl_trans->trans_cfg = trans;
  
 -	iwl_trans->hw_rf_id = iwl_read32(iwl_trans, CSR_HW_RF_ID);
 -
  	for (i = 0; i < ARRAY_SIZE(iwl_dev_info_table); i++) {
  		const struct iwl_dev_info *dev_info = &iwl_dev_info_table[i];
 -		if ((dev_info->device == (u16)IWL_CFG_ANY ||
 +
 +		if ((dev_info->device == IWL_CFG_ANY ||
  		     dev_info->device == pdev->device) &&
++<<<<<<< HEAD
 +		    (dev_info->subdevice == IWL_CFG_ANY ||
 +		     dev_info->subdevice == pdev->subsystem_device)) {
++=======
+ 		    (dev_info->subdevice == (u16)IWL_CFG_ANY ||
+ 		     dev_info->subdevice == pdev->subsystem_device) &&
+ 		    (dev_info->mac_type == (u16)IWL_CFG_ANY ||
+ 		     dev_info->mac_type ==
+ 		     CSR_HW_REV_TYPE(iwl_trans->hw_rev)) &&
+ 		    (dev_info->rf_type == (u16)IWL_CFG_ANY ||
+ 		     dev_info->rf_type ==
+ 		     CSR_HW_RFID_TYPE(iwl_trans->hw_rf_id)) &&
+ 		    (dev_info->rf_id == (u8)IWL_CFG_ANY ||
+ 		     dev_info->rf_id ==
+ 		     IWL_SUBDEVICE_RF_ID(pdev->subsystem_device)) &&
+ 		    (dev_info->no_160 == (u8)IWL_CFG_ANY ||
+ 		     dev_info->no_160 ==
+ 		     IWL_SUBDEVICE_NO_160(pdev->subsystem_device)) &&
+ 		    (dev_info->cores == (u8)IWL_CFG_ANY ||
+ 		     dev_info->cores ==
+ 		     IWL_SUBDEVICE_CORES(pdev->subsystem_device))) {
++>>>>>>> f673a193d56e (iwlwifi: add Pu/PnJ/Th device values to differentiate them)
  			iwl_trans->cfg = dev_info->cfg;
  			iwl_trans->name = dev_info->name;
  			goto found;
* Unmerged path drivers/net/wireless/intel/iwlwifi/iwl-config.h
* Unmerged path drivers/net/wireless/intel/iwlwifi/pcie/drv.c
