mm, memcg: do not set reclaim_state on soft limit reclaim

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Michal Hocko <mhocko@suse.com>
commit d2e5fb927ee7f52c1fe2a98b554881e9dffd8514
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/d2e5fb92.failed

Adric Blake has noticed[1] the following warning:

  WARNING: CPU: 7 PID: 175 at mm/vmscan.c:245 set_task_reclaim_state+0x1e/0x40
  [...]
  Call Trace:
   mem_cgroup_shrink_node+0x9b/0x1d0
   mem_cgroup_soft_limit_reclaim+0x10c/0x3a0
   balance_pgdat+0x276/0x540
   kswapd+0x200/0x3f0
   ? wait_woken+0x80/0x80
   kthread+0xfd/0x130
   ? balance_pgdat+0x540/0x540
   ? kthread_park+0x80/0x80
   ret_from_fork+0x35/0x40
  ---[ end trace 727343df67b2398a ]---

which tells us that soft limit reclaim is about to overwrite the
reclaim_state configured up in the call chain (kswapd in this case but
the direct reclaim is equally possible).  This means that reclaim stats
would get misleading once the soft reclaim returns and another reclaim
is done.

Fix the warning by dropping set_task_reclaim_state from the soft reclaim
which is always called with reclaim_state set up.

[1] http://lkml.kernel.org/r/CAE1jjeePxYPvw1mw2B3v803xHVR_BNnz0hQUY_JDMN8ny29M6w@mail.gmail.com

Link: http://lkml.kernel.org/r/20190828071808.20410-1-mhocko@kernel.org
	Signed-off-by: Michal Hocko <mhocko@suse.com>
	Reported-by: Adric Blake <promarbler14@gmail.com>
	Acked-by: Yafang Shao <laoar.shao@gmail.com>
	Acked-by: Yang Shi <yang.shi@linux.alibaba.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Hillf Danton <hdanton@sina.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit d2e5fb927ee7f52c1fe2a98b554881e9dffd8514)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/vmscan.c
diff --cc mm/vmscan.c
index af4bfffd9006,a6c5d0b28321..000000000000
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@@ -3296,6 -3236,8 +3297,11 @@@ unsigned long mem_cgroup_shrink_node(st
  	};
  	unsigned long lru_pages;
  
++<<<<<<< HEAD
++=======
+ 	WARN_ON_ONCE(!current->reclaim_state);
+ 
++>>>>>>> d2e5fb927ee7 (mm, memcg: do not set reclaim_state on soft limit reclaim)
  	sc.gfp_mask = (gfp_mask & GFP_RECLAIM_MASK) |
  			(GFP_HIGHUSER_MOVABLE & ~GFP_RECLAIM_MASK);
  
* Unmerged path mm/vmscan.c
