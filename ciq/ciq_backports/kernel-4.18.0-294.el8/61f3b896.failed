nvme-pci: use unsigned for io queue depth

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
commit 61f3b89630973037f67d8e25e5d26e80a51a7b37
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/61f3b896.failed

The NVMe PCIe declares module parameter io_queue_depth as int. Change
this to u16 as queue depth can never be negative. Now to reflect this
update module parameter getter function from param_get_int() ->
param_get_uint() and respective setter function with type of n changed
from int to u16 with param_set_int() to param_set_ushort(). Finally
update struct nvme_dev q_depth member to u16 and use u16 in min_t()
when calculating dev->q_depth in the nvme_pci_enable() (since q_depth is
now u16) and use unsigned int instead of int when calculating
dev->tagset.queue_depth as target variable tagset->queue_depth is of type
unsigned int in nvme_dev_add().

	Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 61f3b89630973037f67d8e25e5d26e80a51a7b37)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 3e1641942592,7ed1e2dfbee6..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -2221,14 -2261,10 +2222,21 @@@ static void nvme_dev_add(struct nvme_de
  		if (dev->io_queues[HCTX_TYPE_POLL])
  			dev->tagset.nr_maps++;
  		dev->tagset.timeout = NVME_IO_TIMEOUT;
++<<<<<<< HEAD
 +		dev->tagset.numa_node = dev_to_node(dev->dev);
 +		dev->tagset.queue_depth =
 +				min_t(int, dev->q_depth, BLK_MQ_MAX_DEPTH) - 1;
 +		dev->tagset.cmd_size = nvme_pci_cmd_size(dev, false);
 +		if ((dev->ctrl.sgls & ((1 << 0) | (1 << 1))) && sgl_threshold) {
 +			dev->tagset.cmd_size = max(dev->tagset.cmd_size,
 +					nvme_pci_cmd_size(dev, true));
 +		}
++=======
+ 		dev->tagset.numa_node = dev->ctrl.numa_node;
+ 		dev->tagset.queue_depth = min_t(unsigned int, dev->q_depth,
+ 						BLK_MQ_MAX_DEPTH) - 1;
+ 		dev->tagset.cmd_size = sizeof(struct nvme_iod);
++>>>>>>> 61f3b8963097 (nvme-pci: use unsigned for io queue depth)
  		dev->tagset.flags = BLK_MQ_F_SHOULD_MERGE;
  		dev->tagset.driver_data = dev;
  
* Unmerged path drivers/nvme/host/pci.c
