sock: Move sock_valbool_flag to header

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Dmitry Yakunin <zeil@yandex-team.ru>
commit dfde1d7dee9bfd095a4f16c9e0579a10f4092e81
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/dfde1d7d.failed

This is preparation for usage in bpf_setsockopt.

	Signed-off-by: Dmitry Yakunin <zeil@yandex-team.ru>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Martin KaFai Lau <kafai@fb.com>
Link: https://lore.kernel.org/bpf/20200620153052.9439-1-zeil@yandex-team.ru
(cherry picked from commit dfde1d7dee9bfd095a4f16c9e0579a10f4092e81)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/sock.c
diff --cc net/core/sock.c
index a2cba8ac2edf,5ba4753bc04d..000000000000
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@@ -664,14 -695,6 +664,17 @@@ out
  	return ret;
  }
  
++<<<<<<< HEAD
 +static inline void sock_valbool_flag(struct sock *sk, int bit, int valbool)
 +{
 +	if (valbool)
 +		sock_set_flag(sk, bit);
 +	else
 +		sock_reset_flag(sk, bit);
 +}
 +
++=======
++>>>>>>> dfde1d7dee9b (sock: Move sock_valbool_flag to header)
  bool sk_mc_loop(struct sock *sk)
  {
  	if (dev_recursion_level())
diff --git a/include/net/sock.h b/include/net/sock.h
index c344c3edd864..585775f30858 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -880,6 +880,15 @@ static inline void sock_reset_flag(struct sock *sk, enum sock_flags flag)
 	__clear_bit(flag, &sk->sk_flags);
 }
 
+static inline void sock_valbool_flag(struct sock *sk, enum sock_flags bit,
+				     int valbool)
+{
+	if (valbool)
+		sock_set_flag(sk, bit);
+	else
+		sock_reset_flag(sk, bit);
+}
+
 static inline bool sock_flag(const struct sock *sk, enum sock_flags flag)
 {
 	return test_bit(flag, &sk->sk_flags);
* Unmerged path net/core/sock.c
