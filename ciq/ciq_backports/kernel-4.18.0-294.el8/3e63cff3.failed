usb: roles: Switch on role-switch uevent reporting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Bryan O'Donoghue <bryan.odonoghue@linaro.org>
commit 3e63cff384e625f09758ce8f4d01ae3033402b63
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/3e63cff3.failed

Right now we don't report to user-space a role switch when doing a
usb_role_switch_set_role() despite having registered the uevent callbacks.

This patch switches on the notifications allowing user-space to see
role-switch change notifications and subsequently determine the current
controller data-role.

example:
PFX=/devices/platform/soc/78d9000.usb/ci_hdrc.0

root@somebox# udevadm monitor -p

KERNEL[49.894994] change $PFX/usb_role/ci_hdrc.0-role-switch (usb_role)
ACTION=change
DEVPATH=$PFX/usb_role/ci_hdrc.0-role-switch
SUBSYSTEM=usb_role
DEVTYPE=usb_role_switch
USB_ROLE_SWITCH=ci_hdrc.0-role-switch
SEQNUM=2432

	Cc: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Chunfeng Yun <chunfeng.yun@mediatek.com>
	Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
	Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>
	Cc: Wen Yang <wenyang@linux.alibaba.com>
	Cc: chenqiwu <chenqiwu@xiaomi.com>
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Link: https://lore.kernel.org/r/20200508162937.2566818-1-bryan.odonoghue@linaro.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 3e63cff384e625f09758ce8f4d01ae3033402b63)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/roles/class.c
diff --cc drivers/usb/roles/class.c
index b56d36bfbaaf,27d92af29635..000000000000
--- a/drivers/usb/roles/class.c
+++ b/drivers/usb/roles/class.c
@@@ -48,9 -48,11 +48,16 @@@ int usb_role_switch_set_role(struct usb
  
  	mutex_lock(&sw->lock);
  
++<<<<<<< HEAD
 +	ret = sw->set(sw->dev.parent, role);
 +	if (!ret)
++=======
+ 	ret = sw->set(sw, role);
+ 	if (!ret) {
++>>>>>>> 3e63cff384e6 (usb: roles: Switch on role-switch uevent reporting)
  		sw->role = role;
+ 		kobject_uevent(&sw->dev.kobj, KOBJ_CHANGE);
+ 	}
  
  	mutex_unlock(&sw->lock);
  
* Unmerged path drivers/usb/roles/class.c
