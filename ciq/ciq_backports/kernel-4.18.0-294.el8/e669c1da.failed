block: don't call invalidate_partition from blk_drop_partitions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Christoph Hellwig <hch@lst.de>
commit e669c1da03a9dde0e7d43852a5b6ade8312e8701
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/e669c1da.failed

Given that the device must not be busy, most of the calls from
invalidate_partition that are related to file system metadata are
guranteed to not happen.  Just open code the calls to sync_blockdev
and invalidate_bdev instead.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit e669c1da03a9dde0e7d43852a5b6ade8312e8701)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/partition-generic.c
diff --cc block/partition-generic.c
index 9e8a0148da7e,a94d296d7aed..000000000000
--- a/block/partition-generic.c
+++ b/block/partition-generic.c
@@@ -457,19 -607,18 +457,24 @@@ int blk_drop_partitions(struct gendisk 
  {
  	struct disk_part_iter piter;
  	struct hd_struct *part;
- 	int res;
  
 -	if (!disk_part_scan_enabled(bdev->bd_disk))
 +	if (!disk_part_scan_enabled(disk))
  		return 0;
 -	if (bdev->bd_part_count || bdev->bd_openers > 1)
 +	if (bdev->bd_part_count)
  		return -EBUSY;
++<<<<<<< HEAD:block/partition-generic.c
 +	res = invalidate_partition(disk, 0);
 +	if (res)
 +		return res;
++=======
+ 
+ 	sync_blockdev(bdev);
+ 	invalidate_bdev(bdev);
++>>>>>>> e669c1da03a9 (block: don't call invalidate_partition from blk_drop_partitions):block/partitions/core.c
  
 -	disk_part_iter_init(&piter, bdev->bd_disk, DISK_PITER_INCL_EMPTY);
 +	disk_part_iter_init(&piter, disk, DISK_PITER_INCL_EMPTY);
  	while ((part = disk_part_iter_next(&piter)))
 -		delete_partition(bdev->bd_disk, part);
 +		delete_partition(disk, part->partno);
  	disk_part_iter_exit(&piter);
  
  	return 0;
* Unmerged path block/partition-generic.c
