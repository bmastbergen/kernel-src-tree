kasan: disable branch tracing for core runtime

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Marco Elver <elver@google.com>
commit 33cd65e73abd693c00c4156cf23677c453b41b3b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/33cd65e7.failed

During early boot, while KASAN is not yet initialized, it is possible to
enter reporting code-path and end up in kasan_report().

While uninitialized, the branch there prevents generating any reports,
however, under certain circumstances when branches are being traced
(TRACE_BRANCH_PROFILING), we may recurse deep enough to cause kernel
reboots without warning.

To prevent similar issues in future, we should disable branch tracing
for the core runtime.

[elver@google.com: remove duplicate DISABLE_BRANCH_PROFILING, per Qian Cai]
  Link: https://lore.kernel.org/lkml/20200517011732.GE24705@shao2-debian/
  Link: http://lkml.kernel.org/r/20200522075207.157349-1-elver@google.com
	Reported-by: kernel test robot <rong.a.chen@intel.com>
	Signed-off-by: Marco Elver <elver@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Reviewed-by: Andrey Konovalov <andreyknvl@google.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: Alexander Potapenko <glider@google.com>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Qian Cai <cai@lca.pw>
	Cc: <stable@vger.kernel.org>
Link: http://lkml.kernel.org/r//20200517011732.GE24705@shao2-debian/
Link: http://lkml.kernel.org/r/20200519182459.87166-1-elver@google.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 33cd65e73abd693c00c4156cf23677c453b41b3b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/kasan/Makefile
#	mm/kasan/generic.c
#	mm/kasan/tags.c
diff --cc mm/kasan/Makefile
index 3289db38bc87,de3121848ddf..000000000000
--- a/mm/kasan/Makefile
+++ b/mm/kasan/Makefile
@@@ -1,11 -1,29 +1,22 @@@
  # SPDX-License-Identifier: GPL-2.0
  KASAN_SANITIZE := n
 -UBSAN_SANITIZE := n
 +UBSAN_SANITIZE_kasan.o := n
  KCOV_INSTRUMENT := n
  
 -# Disable ftrace to avoid recursion.
 -CFLAGS_REMOVE_common.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_generic.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_generic_report.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_init.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_quarantine.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_report.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_tags.o = $(CC_FLAGS_FTRACE)
 -CFLAGS_REMOVE_tags_report.o = $(CC_FLAGS_FTRACE)
 -
 +CFLAGS_REMOVE_kasan.o = -pg
  # Function splitter causes unnecessary splits in __asan_load1/__asan_store1
  # see: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63533
++<<<<<<< HEAD
 +CFLAGS_kasan.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector)
++=======
+ CFLAGS_common.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector) -DDISABLE_BRANCH_PROFILING
+ CFLAGS_generic.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector) -DDISABLE_BRANCH_PROFILING
+ CFLAGS_generic_report.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector) -DDISABLE_BRANCH_PROFILING
+ CFLAGS_init.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector) -DDISABLE_BRANCH_PROFILING
+ CFLAGS_quarantine.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector) -DDISABLE_BRANCH_PROFILING
+ CFLAGS_report.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector) -DDISABLE_BRANCH_PROFILING
+ CFLAGS_tags.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector) -DDISABLE_BRANCH_PROFILING
+ CFLAGS_tags_report.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector) -DDISABLE_BRANCH_PROFILING
++>>>>>>> 33cd65e73abd (kasan: disable branch tracing for core runtime)
  
 -obj-$(CONFIG_KASAN) := common.o init.o report.o
 -obj-$(CONFIG_KASAN_GENERIC) += generic.o generic_report.o quarantine.o
 -obj-$(CONFIG_KASAN_SW_TAGS) += tags.o tags_report.o
 +obj-y := kasan.o report.o kasan_init.o quarantine.o
* Unmerged path mm/kasan/generic.c
* Unmerged path mm/kasan/tags.c
* Unmerged path mm/kasan/Makefile
* Unmerged path mm/kasan/generic.c
* Unmerged path mm/kasan/tags.c
