nvmet-rdma: add an error flow for post_recv failures

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Max Gurtovoy <maxg@mellanox.com>
commit 202093848cac2da7d92ae666b51b7109bbab633c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/20209384.failed

Posting receive buffer operation can fail, thus we should make
sure to have an error flow during initialization phase. While
we're here, add a debug print in case of a failure.

	Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 202093848cac2da7d92ae666b51b7109bbab633c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/rdma.c
diff --cc drivers/nvme/target/rdma.c
index 4fd6850b0cb0,e7f43d1e1779..000000000000
--- a/drivers/nvme/target/rdma.c
+++ b/drivers/nvme/target/rdma.c
@@@ -468,6 -435,7 +468,10 @@@ static void nvmet_rdma_free_rsps(struc
  static int nvmet_rdma_post_recv(struct nvmet_rdma_device *ndev,
  		struct nvmet_rdma_cmd *cmd)
  {
++<<<<<<< HEAD
++=======
+ 	struct ib_recv_wr *bad_wr;
++>>>>>>> 202093848cac (nvmet-rdma: add an error flow for post_recv failures)
  	int ret;
  
  	ib_dma_sync_single_for_device(ndev->device,
@@@ -475,9 -443,9 +479,15 @@@
  		DMA_FROM_DEVICE);
  
  	if (ndev->srq)
++<<<<<<< HEAD
 +		ret = ib_post_srq_recv(ndev->srq, &cmd->wr, NULL);
 +	else
 +		ret = ib_post_recv(cmd->queue->qp, &cmd->wr, NULL);
++=======
+ 		ret = ib_post_srq_recv(ndev->srq, &cmd->wr, &bad_wr);
+ 	else
+ 		ret = ib_post_recv(cmd->queue->cm_id->qp, &cmd->wr, &bad_wr);
++>>>>>>> 202093848cac (nvmet-rdma: add an error flow for post_recv failures)
  
  	if (unlikely(ret))
  		pr_err("post_recv cmd failed\n");
* Unmerged path drivers/nvme/target/rdma.c
