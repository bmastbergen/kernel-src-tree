bpf: Prevent .BTF section elimination

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Tony Ambardar <tony.ambardar@gmail.com>
commit 65c204398928f9c79f1a29912b410439f7052635
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/65c20439.failed

Systems with memory or disk constraints often reduce the kernel footprint
by configuring LD_DEAD_CODE_DATA_ELIMINATION. However, this can result in
removal of any BTF information.

Use the KEEP() macro to preserve the BTF data as done with other important
sections, while still allowing for smaller kernels.

Fixes: 90ceddcb4950 ("bpf: Support llvm-objcopy for vmlinux BTF")
	Signed-off-by: Tony Ambardar <Tony.Ambardar@gmail.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: John Fastabend <john.fastabend@gmail.com>
	Acked-by: Andrii Nakryiko <andriin@fb.com>
Link: https://lore.kernel.org/bpf/a635b5d3e2da044e7b51ec1315e8910fbce0083f.1600417359.git.Tony.Ambardar@gmail.com
(cherry picked from commit 65c204398928f9c79f1a29912b410439f7052635)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/asm-generic/vmlinux.lds.h
diff --cc include/asm-generic/vmlinux.lds.h
index c1ce9140e18a,7636bc71c71f..000000000000
--- a/include/asm-generic/vmlinux.lds.h
+++ b/include/asm-generic/vmlinux.lds.h
@@@ -576,6 -655,24 +576,27 @@@
  	}
  
  /*
++<<<<<<< HEAD
++=======
+  * .BTF
+  */
+ #ifdef CONFIG_DEBUG_INFO_BTF
+ #define BTF								\
+ 	.BTF : AT(ADDR(.BTF) - LOAD_OFFSET) {				\
+ 		__start_BTF = .;					\
+ 		KEEP(*(.BTF))						\
+ 		__stop_BTF = .;						\
+ 	}								\
+ 	. = ALIGN(4);							\
+ 	.BTF_ids : AT(ADDR(.BTF_ids) - LOAD_OFFSET) {			\
+ 		*(.BTF_ids)						\
+ 	}
+ #else
+ #define BTF
+ #endif
+ 
+ /*
++>>>>>>> 65c204398928 (bpf: Prevent .BTF section elimination)
   * Init task
   */
  #define INIT_TASK_DATA_SECTION(align)					\
* Unmerged path include/asm-generic/vmlinux.lds.h
