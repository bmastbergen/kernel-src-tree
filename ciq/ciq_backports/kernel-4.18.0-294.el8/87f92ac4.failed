libbpf: Fix XDP program load regression for old kernels

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 87f92ac4c12758c4da3bbe4393f1d884b610b8a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/87f92ac4.failed

Fix regression in libbpf, introduced by XDP link change, which causes XDP
programs to fail to be loaded into kernel due to specified BPF_XDP
expected_attach_type. While kernel doesn't enforce expected_attach_type for
BPF_PROG_TYPE_XDP, some old kernels already support XDP program, but they
don't yet recognize expected_attach_type field in bpf_attr, so setting it to
non-zero value causes program load to fail.

Luckily, libbpf already has a mechanism to deal with such cases, so just make
expected_attach_type optional for XDP programs.

Fixes: dc8698cac7aa ("libbpf: Add support for BPF XDP link")
	Reported-by: Nikita Shirokov <tehnerd@tehnerd.com>
	Reported-by: Udip Pant <udippant@fb.com>
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200924171705.3803628-1-andriin@fb.com
(cherry picked from commit 87f92ac4c12758c4da3bbe4393f1d884b610b8a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 0798ef0f78df,e493d6048143..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -6863,7 -6917,16 +6863,20 @@@ static const struct bpf_sec_def section
  		.is_attach_btf = true,
  		.expected_attach_type = BPF_LSM_MAC,
  		.attach_fn = attach_lsm),
++<<<<<<< HEAD
 +	BPF_PROG_SEC("xdp",			BPF_PROG_TYPE_XDP),
++=======
+ 	SEC_DEF("iter/", TRACING,
+ 		.expected_attach_type = BPF_TRACE_ITER,
+ 		.is_attach_btf = true,
+ 		.attach_fn = attach_iter),
+ 	BPF_EAPROG_SEC("xdp_devmap/",		BPF_PROG_TYPE_XDP,
+ 						BPF_XDP_DEVMAP),
+ 	BPF_EAPROG_SEC("xdp_cpumap/",		BPF_PROG_TYPE_XDP,
+ 						BPF_XDP_CPUMAP),
+ 	BPF_APROG_SEC("xdp",			BPF_PROG_TYPE_XDP,
+ 						BPF_XDP),
++>>>>>>> 87f92ac4c127 (libbpf: Fix XDP program load regression for old kernels)
  	BPF_PROG_SEC("perf_event",		BPF_PROG_TYPE_PERF_EVENT),
  	BPF_PROG_SEC("lwt_in",			BPF_PROG_TYPE_LWT_IN),
  	BPF_PROG_SEC("lwt_out",			BPF_PROG_TYPE_LWT_OUT),
* Unmerged path tools/lib/bpf/libbpf.c
