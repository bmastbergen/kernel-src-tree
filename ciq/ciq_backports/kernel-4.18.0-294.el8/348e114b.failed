block: move the ->devnode callback to struct block_device_operations

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 348e114bbd4dce430eae70f01a04c8fc259b4cf1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/348e114b.failed

There really isn't any good reason to stash a method directly into
struct gendisk.  Move it together with the other block device
operations.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 348e114bbd4dce430eae70f01a04c8fc259b4cf1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/blkdev.h
diff --cc include/linux/blkdev.h
index a65ba8fbb435,e8defd718d62..000000000000
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@@ -1734,22 -1695,19 +1734,27 @@@ struct block_device_operations 
  	int (*getgeo)(struct block_device *, struct hd_geometry *);
  	/* this callback is with swap_lock and sometimes page table lock held */
  	void (*swap_slot_free_notify) (struct block_device *, unsigned long);
 +
 +	RH_KABI_REPLACE(
 +	int (*report_zones)(struct gendisk *, sector_t sector,
++<<<<<<< HEAD
 +			    struct blk_zone *zones, unsigned int *nr_zones,
 +			    gfp_t gfp_mask),
  	int (*report_zones)(struct gendisk *, sector_t sector,
 +			unsigned int nr_zones, report_zones_cb cb, void *data)
 +	)
++=======
+ 			unsigned int nr_zones, report_zones_cb cb, void *data);
+ 	char *(*devnode)(struct gendisk *disk, umode_t *mode);
++>>>>>>> 348e114bbd4d (block: move the ->devnode callback to struct block_device_operations)
  	struct module *owner;
  	const struct pr_ops *pr_ops;
 -};
  
 -#ifdef CONFIG_COMPAT
 -extern int blkdev_compat_ptr_ioctl(struct block_device *, fmode_t,
 -				      unsigned int, unsigned long);
 -#else
 -#define blkdev_compat_ptr_ioctl NULL
 -#endif
 +	RH_KABI_RESERVE(1)
 +	RH_KABI_RESERVE(2)
 +	RH_KABI_RESERVE(3)
 +	RH_KABI_RESERVE(4)
 +};
  
  extern int __blkdev_driver_ioctl(struct block_device *, fmode_t, unsigned int,
  				 unsigned long);
diff --git a/block/genhd.c b/block/genhd.c
index 4c34a620cd26..5e94bf5ed5cf 100644
--- a/block/genhd.c
+++ b/block/genhd.c
@@ -1455,8 +1455,8 @@ static char *block_devnode(struct device *dev, umode_t *mode,
 {
 	struct gendisk *disk = dev_to_disk(dev);
 
-	if (disk->devnode)
-		return disk->devnode(disk, mode);
+	if (disk->fops->devnode)
+		return disk->fops->devnode(disk, mode);
 	return NULL;
 }
 
diff --git a/drivers/block/pktcdvd.c b/drivers/block/pktcdvd.c
index b97fa14ce514..bb988fb3ec6b 100644
--- a/drivers/block/pktcdvd.c
+++ b/drivers/block/pktcdvd.c
@@ -2679,19 +2679,20 @@ static unsigned int pkt_check_events(struct gendisk *disk,
 	return attached_disk->fops->check_events(attached_disk, clearing);
 }
 
+static char *pkt_devnode(struct gendisk *disk, umode_t *mode)
+{
+	return kasprintf(GFP_KERNEL, "pktcdvd/%s", disk->disk_name);
+}
+
 static const struct block_device_operations pktcdvd_ops = {
 	.owner =		THIS_MODULE,
 	.open =			pkt_open,
 	.release =		pkt_close,
 	.ioctl =		pkt_ioctl,
 	.check_events =		pkt_check_events,
+	.devnode =		pkt_devnode,
 };
 
-static char *pktcdvd_devnode(struct gendisk *gd, umode_t *mode)
-{
-	return kasprintf(GFP_KERNEL, "pktcdvd/%s", gd->disk_name);
-}
-
 /*
  * Set up mapping from pktcdvd device to CD-ROM device.
  */
@@ -2747,7 +2748,6 @@ static int pkt_setup_dev(dev_t dev, dev_t* pkt_dev)
 	disk->fops = &pktcdvd_ops;
 	disk->flags = GENHD_FL_REMOVABLE;
 	strcpy(disk->disk_name, pd->name);
-	disk->devnode = pktcdvd_devnode;
 	disk->private_data = pd;
 	disk->queue = blk_alloc_queue(GFP_KERNEL);
 	if (!disk->queue)
* Unmerged path include/linux/blkdev.h
diff --git a/include/linux/genhd.h b/include/linux/genhd.h
index 17a430524bd8..d0af3790cdec 100644
--- a/include/linux/genhd.h
+++ b/include/linux/genhd.h
@@ -189,7 +189,6 @@ struct gendisk {
                                          * disks that can't be partitioned. */
 
 	char disk_name[DISK_NAME_LEN];	/* name of major driver */
-	char *(*devnode)(struct gendisk *gd, umode_t *mode);
 
 	unsigned int events;		/* supported events */
 	unsigned int async_events;	/* async events, subset of all */
