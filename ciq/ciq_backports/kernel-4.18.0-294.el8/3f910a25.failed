iwlwifi: pcie: convert all AX101 devices to the device tables

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Luca Coelho <luciano.coelho@intel.com>
commit 3f910a25839b13436bf0a22186f1698b23eafb91
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/3f910a25.failed

Convert all Qu/Hr1 devices to the new device tables, by modifying the
corresponding structures, adding a new name and generalizing the
device recognition.

	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
Link: https://lore.kernel.org/r/iwlwifi.20200424194456.ec0e04102d2c.Ia36f2c7bbf06cb6436424d40d6adb2376f2962ee@changeid
(cherry picked from commit 3f910a25839b13436bf0a22186f1698b23eafb91)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/cfg/22000.c
#	drivers/net/wireless/intel/iwlwifi/iwl-config.h
#	drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --cc drivers/net/wireless/intel/iwlwifi/cfg/22000.c
index a76b1ce4aa9a,1fcc346ba425..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/cfg/22000.c
+++ b/drivers/net/wireless/intel/iwlwifi/cfg/22000.c
@@@ -251,9 -284,68 +251,74 @@@ static const struct iwl_ht_params iwl_2
  #define IWL_NUM_RBDS_22000_HE		2048
  #define IWL_NUM_RBDS_AX210_HE		4096
  
++<<<<<<< HEAD
 +const struct iwl_cfg iwl_ax101_cfg_qu_hr = {
 +	.name = "Intel(R) Wi-Fi 6 AX101",
 +	.fw_name_pre = IWL_22000_QU_B_HR_B_FW_PRE,
++=======
+ /*
+  * All JF radio modules are part of the 9000 series, but the MAC part
+  * looks more like 22000.  That's why this device is here, but called
+  * 9560 nevertheless.
+  */
+ const struct iwl_cfg iwl9560_qu_b0_jf_b0_cfg = {
+ 	.fw_name_pre = IWL_QU_B_JF_B_FW_PRE,
+ 	IWL_DEVICE_22500,
+ 	.num_rbds = IWL_NUM_RBDS_NON_HE,
+ };
+ 
+ const struct iwl_cfg iwl9560_qu_c0_jf_b0_cfg = {
+ 	.fw_name_pre = IWL_QU_C_JF_B_FW_PRE,
+ 	IWL_DEVICE_22500,
+ 	.num_rbds = IWL_NUM_RBDS_NON_HE,
+ };
+ 
+ const struct iwl_cfg iwl9560_quz_a0_jf_b0_cfg = {
+ 	.fw_name_pre = IWL_QUZ_A_JF_B_FW_PRE,
+ 	IWL_DEVICE_22500,
+ 	/*
+ 	 * This device doesn't support receiving BlockAck with a large bitmap
+ 	 * so we need to restrict the size of transmitted aggregation to the
+ 	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
+ 	 */
+ 	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
+ 	.num_rbds = IWL_NUM_RBDS_NON_HE,
+ };
+ 
+ const struct iwl_cfg iwl9560_qnj_b0_jf_b0_cfg = {
+ 	.fw_name_pre = IWL_QNJ_B_JF_B_FW_PRE,
+ 	IWL_DEVICE_22500,
+ 	/*
+ 	 * This device doesn't support receiving BlockAck with a large bitmap
+ 	 * so we need to restrict the size of transmitted aggregation to the
+ 	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
+ 	 */
+ 	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
+ 	.num_rbds = IWL_NUM_RBDS_NON_HE,
+ };
+ 
+ const struct iwl_cfg_trans_params iwl_ax200_trans_cfg = {
+ 	.device_family = IWL_DEVICE_FAMILY_22000,
+ 	.base_params = &iwl_22000_base_params,
+ 	.mq_rx_supported = true,
+ 	.use_tfh = true,
+ 	.rf_id = true,
+ 	.gen2 = true,
+ 	.bisr_workaround = 1,
+ };
+ 
+ const char iwl_ax200_name[] = "Intel(R) Wi-Fi 6 AX200 160MHz";
+ const char iwl_ax201_name[] = "Intel(R) Wi-Fi 6 AX201 160MHz";
+ const char iwl_ax101_name[] = "Intel(R) Wi-Fi 6 AX101";
+ 
+ const char iwl_ax200_killer_1650w_name[] =
+ 	"Killer(R) Wi-Fi 6 AX1650w 160MHz Wireless Network Adapter (200D2W)";
+ const char iwl_ax200_killer_1650x_name[] =
+ 	"Killer(R) Wi-Fi 6 AX1650x 160MHz Wireless Network Adapter (200NGW)";
+ 
+ const struct iwl_cfg iwl_qu_b0_hr1_b0 = {
+ 	.fw_name_pre = IWL_QU_B_HR_B_FW_PRE,
++>>>>>>> 3f910a25839b (iwlwifi: pcie: convert all AX101 devices to the device tables)
  	IWL_DEVICE_22500,
  	/*
  	 * This device doesn't support receiving BlockAck with a large bitmap
diff --cc drivers/net/wireless/intel/iwlwifi/iwl-config.h
index 30b0bf02a95a,244899f3f3bf..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@@ -454,6 -466,38 +454,41 @@@ struct iwl_cfg 
  
  #define IWL_CFG_ANY (~0)
  
++<<<<<<< HEAD
++=======
+ #define IWL_CFG_MAC_TYPE_PU		0x31
+ #define IWL_CFG_MAC_TYPE_PNJ		0x32
+ #define IWL_CFG_MAC_TYPE_TH		0x32
+ #define IWL_CFG_MAC_TYPE_QU		0x33
+ #define IWL_CFG_MAC_TYPE_QUZ		0x35
+ #define IWL_CFG_MAC_TYPE_QNJ		0x36
+ 
+ #define IWL_CFG_RF_TYPE_TH		0x105
+ #define IWL_CFG_RF_TYPE_TH1		0x108
+ #define IWL_CFG_RF_TYPE_JF2		0x105
+ #define IWL_CFG_RF_TYPE_JF1		0x108
+ #define IWL_CFG_RF_TYPE_HR2		0x10A
+ #define IWL_CFG_RF_TYPE_HR1		0x10C
+ 
+ #define IWL_CFG_RF_ID_TH		0x1
+ #define IWL_CFG_RF_ID_TH1		0x1
+ #define IWL_CFG_RF_ID_JF		0x3
+ #define IWL_CFG_RF_ID_JF1		0x6
+ #define IWL_CFG_RF_ID_JF1_DIV		0xA
+ #define IWL_CFG_RF_ID_HR		0x7
+ #define IWL_CFG_RF_ID_HR1		0x4
+ 
+ #define IWL_CFG_NO_160			0x0
+ #define IWL_CFG_160			0x1
+ 
+ #define IWL_CFG_CORES_BT		0x0
+ #define IWL_CFG_CORES_BT_GNSS		0x5
+ 
+ #define IWL_SUBDEVICE_RF_ID(subdevice)	((u16)((subdevice) & 0x00F0) >> 4)
+ #define IWL_SUBDEVICE_NO_160(subdevice)	((u16)((subdevice) & 0x0100) >> 9)
+ #define IWL_SUBDEVICE_CORES(subdevice)	((u16)((subdevice) & 0x1C00) >> 10)
+ 
++>>>>>>> 3f910a25839b (iwlwifi: pcie: convert all AX101 devices to the device tables)
  struct iwl_dev_info {
  	u16 device;
  	u16 subdevice;
@@@ -475,6 -538,11 +510,14 @@@ extern const char iwl9560_160_name[]
  extern const char iwl9260_killer_1550_name[];
  extern const char iwl9560_killer_1550i_name[];
  extern const char iwl9560_killer_1550s_name[];
++<<<<<<< HEAD
++=======
+ extern const char iwl_ax200_name[];
+ extern const char iwl_ax201_name[];
+ extern const char iwl_ax101_name[];
+ extern const char iwl_ax200_killer_1650w_name[];
+ extern const char iwl_ax200_killer_1650x_name[];
++>>>>>>> 3f910a25839b (iwlwifi: pcie: convert all AX101 devices to the device tables)
  
  #if IS_ENABLED(CONFIG_IWLDVM)
  extern const struct iwl_cfg iwl5300_agn_cfg;
@@@ -541,38 -609,15 +584,44 @@@ extern const struct iwl_cfg iwl8260_2ac
  extern const struct iwl_cfg iwl8265_2ac_cfg;
  extern const struct iwl_cfg iwl8275_2ac_cfg;
  extern const struct iwl_cfg iwl4165_2ac_cfg;
 +extern const struct iwl_cfg iwl9160_2ac_cfg;
  extern const struct iwl_cfg iwl9260_2ac_cfg;
 -extern const struct iwl_cfg iwl9560_qu_b0_jf_b0_cfg;
 -extern const struct iwl_cfg iwl9560_qu_c0_jf_b0_cfg;
 -extern const struct iwl_cfg iwl9560_quz_a0_jf_b0_cfg;
 -extern const struct iwl_cfg iwl9560_qnj_b0_jf_b0_cfg;
 +extern const struct iwl_cfg iwl9260_2ac_160_cfg;
 +extern const struct iwl_cfg iwl9260_killer_2ac_cfg;
 +extern const struct iwl_cfg iwl9270_2ac_cfg;
 +extern const struct iwl_cfg iwl9460_2ac_cfg;
 +extern const struct iwl_cfg iwl9560_2ac_cfg;
 +extern const struct iwl_cfg iwl9560_2ac_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9560_2ac_160_cfg;
 +extern const struct iwl_cfg iwl9560_2ac_160_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9460_2ac_cfg_soc;
 +extern const struct iwl_cfg iwl9461_2ac_cfg_soc;
 +extern const struct iwl_cfg iwl9461_2ac_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9462_2ac_cfg_soc;
 +extern const struct iwl_cfg iwl9462_2ac_cfg_quz_a0_jf_b0_soc;
  extern const struct iwl_cfg iwl9560_2ac_cfg_soc;
++<<<<<<< HEAD
 +extern const struct iwl_cfg iwl9560_2ac_160_cfg_soc;
 +extern const struct iwl_cfg iwl9560_killer_2ac_cfg_soc;
 +extern const struct iwl_cfg iwl9560_killer_s_2ac_cfg_soc;
 +extern const struct iwl_cfg iwl9560_killer_i_2ac_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9560_killer_s_2ac_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9460_2ac_cfg_shared_clk;
 +extern const struct iwl_cfg iwl9461_2ac_cfg_shared_clk;
 +extern const struct iwl_cfg iwl9462_2ac_cfg_shared_clk;
 +extern const struct iwl_cfg iwl9560_2ac_cfg_shared_clk;
 +extern const struct iwl_cfg iwl9560_2ac_160_cfg_shared_clk;
 +extern const struct iwl_cfg iwl9560_killer_2ac_cfg_shared_clk;
 +extern const struct iwl_cfg iwl9560_killer_s_2ac_cfg_shared_clk;
 +extern const struct iwl_cfg iwl_ax101_cfg_qu_hr;
 +extern const struct iwl_cfg iwl_ax101_cfg_qu_c0_hr_b0;
 +extern const struct iwl_cfg iwl_ax101_cfg_quz_hr;
 +extern const struct iwl_cfg iwl22000_2ax_cfg_hr;
++=======
+ extern const struct iwl_cfg iwl_qu_b0_hr1_b0;
+ extern const struct iwl_cfg iwl_qu_c0_hr1_b0;
+ extern const struct iwl_cfg iwl_quz_a0_hr1_b0;
++>>>>>>> 3f910a25839b (iwlwifi: pcie: convert all AX101 devices to the device tables)
  extern const struct iwl_cfg iwl_ax200_cfg_cc;
  extern const struct iwl_cfg iwl_ax201_cfg_qu_hr;
  extern const struct iwl_cfg iwl_ax201_cfg_qu_hr;
diff --cc drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index f5174670d861,f179cd08b418..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@@ -942,60 -574,385 +942,423 @@@ MODULE_DEVICE_TABLE(pci, iwl_hw_card_id
  
  static const struct iwl_dev_info iwl_dev_info_table[] = {
  #if IS_ENABLED(CONFIG_IWLMVM)
 -/* 9000 */
 -	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_2ac_cfg, iwl9260_killer_1550_name),
 -	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
 -	IWL_DEV_INFO(0x2526, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
 -	IWL_DEV_INFO(0x30DC, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
 -	IWL_DEV_INFO(0x30DC, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
 -	IWL_DEV_INFO(0x31DC, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
 -	IWL_DEV_INFO(0x31DC, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
 -
 -	IWL_DEV_INFO(0x271C, 0x0214, iwl9260_2ac_cfg, iwl9260_1_name),
 -
 -/* AX200 */
 -	IWL_DEV_INFO(0x2723, 0x1653, iwl_ax200_cfg_cc, iwl_ax200_killer_1650w_name),
 -	IWL_DEV_INFO(0x2723, 0x1654, iwl_ax200_cfg_cc, iwl_ax200_killer_1650x_name),
 -	IWL_DEV_INFO(0x2723, IWL_CFG_ANY, iwl_ax200_cfg_cc, iwl_ax200_name),
 -
 -	/* QnJ with Hr */
 -	IWL_DEV_INFO(0x2720, IWL_CFG_ANY, iwl_qnj_b0_hr_b0_cfg, iwl_ax201_name),
 -
 +	IWL_DEV_INFO(0x2526, 0x0010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0018, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x001C, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4018, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x401C, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x6010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x6014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x8014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x8010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xA014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xE010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xE014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0210, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x0214, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x1010, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x1210, iwl9260_2ac_cfg, iwl9260_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0030, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0038, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x003C, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4030, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x2030, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x2034, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4034, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0034, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0230, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0234, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0238, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x023C, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x1030, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x4234, iwl9560_2ac_cfg_soc, iwl9560_name),
 +
++<<<<<<< HEAD
 +	IWL_DEV_INFO(0x2526, 0x0060, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0064, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0260, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0264, iwl9461_2ac_cfg_soc, iwl9461_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x00A0, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x00A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x02A0, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x02A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x40A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x42A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_killer_2ac_cfg, iwl9260_killer_1550_name),
 +	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_killer_s_2ac_cfg_soc, iwl9560_killer_1550s_name),
 +	IWL_DEV_INFO(0x2526, 0x1552, iwl9560_killer_2ac_cfg_soc, iwl9560_killer_1550i_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x1410, iwl9270_2ac_cfg, iwl9270_name),
 +	IWL_DEV_INFO(0x2526, 0x1610, iwl9270_2ac_cfg, iwl9270_name),
++=======
+ 	/* Qu with Hr */
+ 	IWL_DEV_INFO(0x43F0, 0x0070, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x43F0, 0x0074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x43F0, 0x0078, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x43F0, 0x007C, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x43F0, 0x2074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x43F0, 0x4070, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x0070, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x0074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x0078, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x007C, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x0A10, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x1651, killer1650s_2ax_cfg_qu_b0_hr_b0, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x1652, killer1650i_2ax_cfg_qu_b0_hr_b0, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x2074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0xA0F0, 0x4070, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x0070, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x0074, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x0078, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x007C, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x0310, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x1651, iwl_ax1650s_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x1652, iwl_ax1650i_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x2074, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x02F0, 0x4070, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x0070, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x0074, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x0078, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x007C, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x0310, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x1651, iwl_ax1650s_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x1652, iwl_ax1650i_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x2074, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x06F0, 0x4070, iwl_ax201_cfg_quz_hr, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x0070, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x0074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x0078, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x007C, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x0310, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x1651, killer1650s_2ax_cfg_qu_b0_hr_b0, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x1652, killer1650i_2ax_cfg_qu_b0_hr_b0, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x2074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x34F0, 0x4070, iwl_ax201_cfg_qu_hr, NULL),
+ 
+ 	IWL_DEV_INFO(0x3DF0, 0x0070, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x3DF0, 0x0074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x3DF0, 0x0078, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x3DF0, 0x007C, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x3DF0, 0x0310, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x3DF0, 0x1651, killer1650s_2ax_cfg_qu_b0_hr_b0, NULL),
+ 	IWL_DEV_INFO(0x3DF0, 0x1652, killer1650i_2ax_cfg_qu_b0_hr_b0, NULL),
+ 	IWL_DEV_INFO(0x3DF0, 0x2074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x3DF0, 0x4070, iwl_ax201_cfg_qu_hr, NULL),
+ 
+ 	IWL_DEV_INFO(0x4DF0, 0x0070, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x4DF0, 0x0074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x4DF0, 0x0078, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x4DF0, 0x007C, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x4DF0, 0x0310, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x4DF0, 0x1651, killer1650s_2ax_cfg_qu_b0_hr_b0, NULL),
+ 	IWL_DEV_INFO(0x4DF0, 0x1652, killer1650i_2ax_cfg_qu_b0_hr_b0, NULL),
+ 	IWL_DEV_INFO(0x4DF0, 0x2074, iwl_ax201_cfg_qu_hr, NULL),
+ 	IWL_DEV_INFO(0x4DF0, 0x4070, iwl_ax201_cfg_qu_hr, NULL),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9461_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9461_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9462_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9462_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9560_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9461_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9461_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9462_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9462_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9560_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT_GNSS,
+ 		      iwl9260_2ac_cfg, iwl9270_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT_GNSS,
+ 		      iwl9260_2ac_cfg, iwl9270_name),
+ 
+ 	_IWL_DEV_INFO(0x271B, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH1, IWL_CFG_ANY,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9162_160_name),
+ 	_IWL_DEV_INFO(0x271B, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH1, IWL_CFG_ANY,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9162_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9260_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9260_name),
+ 
+ /* Qu with Jf */
+ 	/* Qu B step */
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_b0_jf_b0_cfg, iwl9461_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_b0_jf_b0_cfg, iwl9461_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_b0_jf_b0_cfg, iwl9462_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_b0_jf_b0_cfg, iwl9462_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_b0_jf_b0_cfg, iwl9560_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_b0_jf_b0_cfg, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, 0x1551,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_b0_jf_b0_cfg, iwl9560_killer_1550s_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, 0x1552,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_b0_jf_b0_cfg, iwl9560_killer_1550i_name),
+ 
+ 	/* Qu C step */
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_c0_jf_b0_cfg, iwl9461_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_c0_jf_b0_cfg, iwl9461_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_c0_jf_b0_cfg, iwl9462_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_c0_jf_b0_cfg, iwl9462_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_c0_jf_b0_cfg, iwl9560_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_c0_jf_b0_cfg, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, 0x1551,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_c0_jf_b0_cfg, iwl9560_killer_1550s_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, 0x1552,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qu_c0_jf_b0_cfg, iwl9560_killer_1550i_name),
+ 
+ 	/* QuZ */
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_quz_a0_jf_b0_cfg, iwl9461_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_quz_a0_jf_b0_cfg, iwl9461_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_quz_a0_jf_b0_cfg, iwl9462_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_quz_a0_jf_b0_cfg, iwl9462_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_quz_a0_jf_b0_cfg, iwl9560_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_quz_a0_jf_b0_cfg, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, 0x1551,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_quz_a0_jf_b0_cfg, iwl9560_killer_1550s_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, 0x1552,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_quz_a0_jf_b0_cfg, iwl9560_killer_1550i_name),
+ 
+ 	/* QnJ */
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qnj_b0_jf_b0_cfg, iwl9461_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qnj_b0_jf_b0_cfg, iwl9461_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qnj_b0_jf_b0_cfg, iwl9462_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qnj_b0_jf_b0_cfg, iwl9462_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qnj_b0_jf_b0_cfg, iwl9560_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qnj_b0_jf_b0_cfg, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, 0x1551,
+ 		      IWL_CFG_MAC_TYPE_QNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qnj_b0_jf_b0_cfg, iwl9560_killer_1550s_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, 0x1552,
+ 		      IWL_CFG_MAC_TYPE_QNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_qnj_b0_jf_b0_cfg, iwl9560_killer_1550i_name),
+ 
+ /* Qu with Hr */
+ 	/* Qu B step */
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_B_STEP,
+ 		      IWL_CFG_RF_TYPE_HR1, IWL_CFG_ANY,
+ 		      IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      iwl_qu_b0_hr1_b0, iwl_ax101_name),
+ 
+ 	/* Qu C step */
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QU, SILICON_C_STEP,
+ 		      IWL_CFG_RF_TYPE_HR1, IWL_CFG_ANY,
+ 		      IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      iwl_qu_c0_hr1_b0, iwl_ax101_name),
+ 
+ 	/* QuZ */
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_QUZ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_HR1, IWL_CFG_ANY,
+ 		      IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      iwl_quz_a0_hr1_b0, iwl_ax101_name),
+ 
++>>>>>>> 3f910a25839b (iwlwifi: pcie: convert all AX101 devices to the device tables)
  #endif /* CONFIG_IWLMVM */
  };
  
@@@ -1119,47 -1054,23 +1482,56 @@@ static int iwl_pci_probe(struct pci_de
  
  	/*
  	 * This is a hack to switch from Qu B0 to Qu C0.  We need to
 -	 * do this for all cfgs that use Qu B0, except for those using
 -	 * Jf, which have already been moved to the new table.  The
 -	 * rest must be removed once we convert Qu with Hr as well.
 +	 * do this for all cfgs that use Qu B0.  All this code is in
 +	 * urgent need for a refactor, but for now this is the easiest
 +	 * thing to do to support Qu C-step.
  	 */
  	if (iwl_trans->hw_rev == CSR_HW_REV_TYPE_QU_C0) {
++<<<<<<< HEAD
 +		if (cfg == &iwl_ax101_cfg_qu_hr)
 +			iwl_trans->cfg = &iwl_ax101_cfg_qu_c0_hr_b0;
 +		else if (cfg == &iwl_ax201_cfg_qu_hr)
++=======
+ 		if (iwl_trans->cfg == &iwl_ax201_cfg_qu_hr)
++>>>>>>> 3f910a25839b (iwlwifi: pcie: convert all AX101 devices to the device tables)
  			iwl_trans->cfg = &iwl_ax201_cfg_qu_c0_hr_b0;
 -		else if (iwl_trans->cfg == &killer1650s_2ax_cfg_qu_b0_hr_b0)
 +		else if (cfg == &iwl9461_2ac_cfg_qu_b0_jf_b0)
 +			iwl_trans->cfg = &iwl9461_2ac_cfg_qu_c0_jf_b0;
 +		else if (cfg == &iwl9462_2ac_cfg_qu_b0_jf_b0)
 +			iwl_trans->cfg = &iwl9462_2ac_cfg_qu_c0_jf_b0;
 +		else if (cfg == &iwl9560_2ac_cfg_qu_b0_jf_b0)
 +			iwl_trans->cfg = &iwl9560_2ac_cfg_qu_c0_jf_b0;
 +		else if (cfg == &iwl9560_2ac_160_cfg_qu_b0_jf_b0)
 +			iwl_trans->cfg = &iwl9560_2ac_160_cfg_qu_c0_jf_b0;
 +		else if (cfg == &killer1650s_2ax_cfg_qu_b0_hr_b0)
  			iwl_trans->cfg = &killer1650s_2ax_cfg_qu_c0_hr_b0;
 -		else if (iwl_trans->cfg == &killer1650i_2ax_cfg_qu_b0_hr_b0)
 +		else if (cfg == &killer1650i_2ax_cfg_qu_b0_hr_b0)
  			iwl_trans->cfg = &killer1650i_2ax_cfg_qu_c0_hr_b0;
  	}
  
  	/* same thing for QuZ... */
  	if (iwl_trans->hw_rev == CSR_HW_REV_TYPE_QUZ) {
++<<<<<<< HEAD
 +		if (cfg == &iwl_ax101_cfg_qu_hr)
 +			cfg = &iwl_ax101_cfg_quz_hr;
 +		else if (cfg == &iwl_ax201_cfg_qu_hr)
 +			cfg = &iwl_ax201_cfg_quz_hr;
 +		else if (iwl_trans->cfg == &killer1650s_2ax_cfg_qu_b0_hr_b0)
 +			iwl_trans->cfg = &iwl_ax1650s_cfg_quz_hr;
 +		else if (iwl_trans->cfg == &killer1650i_2ax_cfg_qu_b0_hr_b0)
 +			iwl_trans->cfg = &iwl_ax1650i_cfg_quz_hr;
 +		else if (cfg == &iwl9461_2ac_cfg_qu_b0_jf_b0)
 +			cfg = &iwl9461_2ac_cfg_quz_a0_jf_b0_soc;
 +		else if (cfg == &iwl9462_2ac_cfg_qu_b0_jf_b0)
 +			cfg = &iwl9462_2ac_cfg_quz_a0_jf_b0_soc;
 +		else if (cfg == &iwl9560_2ac_cfg_qu_b0_jf_b0)
 +			cfg = &iwl9560_2ac_cfg_quz_a0_jf_b0_soc;
 +		else if (cfg == &iwl9560_2ac_160_cfg_qu_b0_jf_b0)
 +			cfg = &iwl9560_2ac_160_cfg_quz_a0_jf_b0_soc;
++=======
+ 		if (iwl_trans->cfg == &iwl_ax201_cfg_qu_hr)
+ 			iwl_trans->cfg = &iwl_ax201_cfg_quz_hr;
++>>>>>>> 3f910a25839b (iwlwifi: pcie: convert all AX101 devices to the device tables)
  	}
  
  #endif
* Unmerged path drivers/net/wireless/intel/iwlwifi/cfg/22000.c
* Unmerged path drivers/net/wireless/intel/iwlwifi/iwl-config.h
* Unmerged path drivers/net/wireless/intel/iwlwifi/pcie/drv.c
