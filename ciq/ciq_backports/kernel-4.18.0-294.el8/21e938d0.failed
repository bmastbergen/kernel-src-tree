drm/nouveau/ltc/ga102: initial support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [drm] drm/nouveau/mc/ga10: initial support (Ben Skeggs) [1916583]
Rebuild_FUZZ: 94.59%
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 21e938d0017d3523ef5114a8feebc32e95007983
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/21e938d0.failed

v2. fixup for ga103 early merge

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
	Reviewed-by: Lyude Paul <lyude@redhat.com>
(cherry picked from commit 21e938d0017d3523ef5114a8feebc32e95007983)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/include/nvkm/subdev/ltc.h
#	drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
diff --cc drivers/gpu/drm/nouveau/include/nvkm/subdev/ltc.h
index d76f60d7d29a,64294042ec07..000000000000
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/ltc.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/ltc.h
@@@ -4,7 -4,8 +4,12 @@@
  #include <core/subdev.h>
  #include <core/mm.h>
  
++<<<<<<< HEAD
 +#define NVKM_LTC_MAX_ZBC_CNT 16
++=======
+ #define NVKM_LTC_MAX_ZBC_COLOR_CNT 32
+ #define NVKM_LTC_MAX_ZBC_DEPTH_CNT 16
++>>>>>>> 21e938d0017d (drm/nouveau/ltc/ga102: initial support)
  
  struct nvkm_ltc {
  	const struct nvkm_ltc_func *func;
@@@ -33,12 -37,12 +38,23 @@@ int nvkm_ltc_zbc_stencil_get(struct nvk
  void nvkm_ltc_invalidate(struct nvkm_ltc *);
  void nvkm_ltc_flush(struct nvkm_ltc *);
  
++<<<<<<< HEAD
 +int gf100_ltc_new(struct nvkm_device *, int, struct nvkm_ltc **);
 +int gk104_ltc_new(struct nvkm_device *, int, struct nvkm_ltc **);
 +int gk20a_ltc_new(struct nvkm_device *, int, struct nvkm_ltc **);
 +int gm107_ltc_new(struct nvkm_device *, int, struct nvkm_ltc **);
 +int gm200_ltc_new(struct nvkm_device *, int, struct nvkm_ltc **);
 +int gp100_ltc_new(struct nvkm_device *, int, struct nvkm_ltc **);
 +int gp102_ltc_new(struct nvkm_device *, int, struct nvkm_ltc **);
 +int gp10b_ltc_new(struct nvkm_device *, int, struct nvkm_ltc **);
++=======
+ int gf100_ltc_new(struct nvkm_device *, enum nvkm_subdev_type, int inst, struct nvkm_ltc **);
+ int gk104_ltc_new(struct nvkm_device *, enum nvkm_subdev_type, int inst, struct nvkm_ltc **);
+ int gm107_ltc_new(struct nvkm_device *, enum nvkm_subdev_type, int inst, struct nvkm_ltc **);
+ int gm200_ltc_new(struct nvkm_device *, enum nvkm_subdev_type, int inst, struct nvkm_ltc **);
+ int gp100_ltc_new(struct nvkm_device *, enum nvkm_subdev_type, int inst, struct nvkm_ltc **);
+ int gp102_ltc_new(struct nvkm_device *, enum nvkm_subdev_type, int inst, struct nvkm_ltc **);
+ int gp10b_ltc_new(struct nvkm_device *, enum nvkm_subdev_type, int inst, struct nvkm_ltc **);
+ int ga102_ltc_new(struct nvkm_device *, enum nvkm_subdev_type, int inst, struct nvkm_ltc **);
++>>>>>>> 21e938d0017d (drm/nouveau/ltc/ga102: initial support)
  #endif
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 52406e010cbb,9e4b194f24bf..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@@ -2617,57 -2539,203 +2617,203 @@@ nv167_chipset = 
  static const struct nvkm_device_chip
  nv168_chipset = {
  	.name = "TU116",
 -	.acr      = { 0x00000001, tu102_acr_new },
 -	.bar      = { 0x00000001, tu102_bar_new },
 -	.bios     = { 0x00000001, nvkm_bios_new },
 -	.bus      = { 0x00000001, gf100_bus_new },
 -	.devinit  = { 0x00000001, tu102_devinit_new },
 -	.fault    = { 0x00000001, tu102_fault_new },
 -	.fb       = { 0x00000001, gv100_fb_new },
 -	.fuse     = { 0x00000001, gm107_fuse_new },
 -	.gpio     = { 0x00000001, gk104_gpio_new },
 -	.gsp      = { 0x00000001, gv100_gsp_new },
 -	.i2c      = { 0x00000001, gm200_i2c_new },
 -	.imem     = { 0x00000001, nv50_instmem_new },
 -	.ltc      = { 0x00000001, gp102_ltc_new },
 -	.mc       = { 0x00000001, gp100_mc_new },
 -	.mmu      = { 0x00000001, tu102_mmu_new },
 -	.pci      = { 0x00000001, gp100_pci_new },
 -	.pmu      = { 0x00000001, gp102_pmu_new },
 -	.privring = { 0x00000001, gm200_privring_new },
 -	.therm    = { 0x00000001, gp100_therm_new },
 -	.timer    = { 0x00000001, gk20a_timer_new },
 -	.top      = { 0x00000001, gk104_top_new },
 -	.vfn      = { 0x00000001, tu102_vfn_new },
 -	.ce       = { 0x0000001f, tu102_ce_new },
 -	.disp     = { 0x00000001, tu102_disp_new },
 -	.dma      = { 0x00000001, gv100_dma_new },
 -	.fifo     = { 0x00000001, tu102_fifo_new },
 -	.gr       = { 0x00000001, tu102_gr_new },
 -	.nvdec    = { 0x00000001, gm107_nvdec_new },
 -	.nvenc    = { 0x00000001, gm107_nvenc_new },
 -	.sec2     = { 0x00000001, tu102_sec2_new },
 +	.acr = tu102_acr_new,
 +	.bar = tu102_bar_new,
 +	.bios = nvkm_bios_new,
 +	.bus = gf100_bus_new,
 +	.devinit = tu102_devinit_new,
 +	.fault = tu102_fault_new,
 +	.fb = gv100_fb_new,
 +	.fuse = gm107_fuse_new,
 +	.gpio = gk104_gpio_new,
 +	.gsp = gv100_gsp_new,
 +	.i2c = gm200_i2c_new,
 +	.ibus = gm200_ibus_new,
 +	.imem = nv50_instmem_new,
 +	.ltc = gp102_ltc_new,
 +	.mc = tu102_mc_new,
 +	.mmu = tu102_mmu_new,
 +	.pci = gp100_pci_new,
 +	.pmu = gp102_pmu_new,
 +	.therm = gp100_therm_new,
 +	.timer = gk20a_timer_new,
 +	.top = gk104_top_new,
 +	.ce[0] = tu102_ce_new,
 +	.ce[1] = tu102_ce_new,
 +	.ce[2] = tu102_ce_new,
 +	.ce[3] = tu102_ce_new,
 +	.ce[4] = tu102_ce_new,
 +	.disp = tu102_disp_new,
 +	.dma = gv100_dma_new,
 +	.fifo = tu102_fifo_new,
 +	.gr = tu102_gr_new,
 +	.nvdec[0] = gm107_nvdec_new,
 +	.nvenc[0] = gm107_nvenc_new,
 +	.sec2 = tu102_sec2_new,
  };
  
 -static const struct nvkm_device_chip
 -nv170_chipset = {
 -	.name = "GA100",
 -	.bar      = { 0x00000001, tu102_bar_new },
 -	.bios     = { 0x00000001, nvkm_bios_new },
 -	.devinit  = { 0x00000001, ga100_devinit_new },
 -	.fault    = { 0x00000001, tu102_fault_new },
 -	.fb       = { 0x00000001, ga100_fb_new },
 -	.gpio     = { 0x00000001, gk104_gpio_new },
 -	.i2c      = { 0x00000001, gm200_i2c_new },
 -	.imem     = { 0x00000001, nv50_instmem_new },
 -	.mc       = { 0x00000001, ga100_mc_new },
 -	.mmu      = { 0x00000001, tu102_mmu_new },
 -	.pci      = { 0x00000001, gp100_pci_new },
 -	.privring = { 0x00000001, gm200_privring_new },
 -	.timer    = { 0x00000001, gk20a_timer_new },
 -	.top      = { 0x00000001, ga100_top_new },
 -	.vfn      = { 0x00000001, ga100_vfn_new },
 -	.ce       = { 0x000003ff, ga100_ce_new },
 -	.fifo     = { 0x00000001, ga100_fifo_new },
 -};
 +static int
 +nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 +		       struct nvkm_notify *notify)
 +{
 +	if (!WARN_ON(size != 0)) {
 +		notify->size  = 0;
 +		notify->types = 1;
 +		notify->index = 0;
 +		return 0;
 +	}
 +	return -EINVAL;
 +}
  
++<<<<<<< HEAD
 +static const struct nvkm_event_func
 +nvkm_device_event_func = {
 +	.ctor = nvkm_device_event_ctor,
++=======
+ static const struct nvkm_device_chip
+ nv172_chipset = {
+ 	.name = "GA102",
+ 	.acr      = { 0x00000001, ga102_acr_new },
+ 	.bar      = { 0x00000001, tu102_bar_new },
+ 	.bios     = { 0x00000001, nvkm_bios_new },
+ 	.devinit  = { 0x00000001, ga100_devinit_new },
+ 	.fault    = { 0x00000001, tu102_fault_new },
+ 	.fb       = { 0x00000001, ga102_fb_new },
+ 	.gpio     = { 0x00000001, ga102_gpio_new },
+ 	.gsp      = { 0x00000001, ga102_gsp_new },
+ 	.i2c      = { 0x00000001, gm200_i2c_new },
+ 	.imem     = { 0x00000001, nv50_instmem_new },
+ 	.ltc      = { 0x00000001, ga102_ltc_new },
+ 	.mc       = { 0x00000001, ga100_mc_new },
+ 	.mmu      = { 0x00000001, tu102_mmu_new },
+ 	.pci      = { 0x00000001, gp100_pci_new },
+ 	.privring = { 0x00000001, gm200_privring_new },
+ 	.timer    = { 0x00000001, gk20a_timer_new },
+ 	.top      = { 0x00000001, ga100_top_new },
+ 	.vfn      = { 0x00000001, ga100_vfn_new },
+ 	.ce       = { 0x0000001f, ga102_ce_new },
+ 	.disp     = { 0x00000001, ga102_disp_new },
+ 	.dma      = { 0x00000001, gv100_dma_new },
+ 	.fifo     = { 0x00000001, ga102_fifo_new },
+ 	.nvdec    = { 0x00000001, ga102_nvdec_new },
+ 	.sec2     = { 0x00000001, ga102_sec2_new },
+ };
+ 
+ static const struct nvkm_device_chip
+ nv173_chipset = {
+ 	.name = "GA103",
+ 	.acr      = { 0x00000001, ga102_acr_new },
+ 	.bar      = { 0x00000001, tu102_bar_new },
+ 	.bios     = { 0x00000001, nvkm_bios_new },
+ 	.devinit  = { 0x00000001, ga100_devinit_new },
+ 	.fault    = { 0x00000001, tu102_fault_new },
+ 	.fb       = { 0x00000001, ga102_fb_new },
+ 	.gpio     = { 0x00000001, ga102_gpio_new },
+ 	.gsp      = { 0x00000001, ga102_gsp_new },
+ 	.i2c      = { 0x00000001, gm200_i2c_new },
+ 	.imem     = { 0x00000001, nv50_instmem_new },
+ 	.ltc      = { 0x00000001, ga102_ltc_new },
+ 	.mc       = { 0x00000001, ga100_mc_new },
+ 	.mmu      = { 0x00000001, tu102_mmu_new },
+ 	.pci      = { 0x00000001, gp100_pci_new },
+ 	.privring = { 0x00000001, gm200_privring_new },
+ 	.timer    = { 0x00000001, gk20a_timer_new },
+ 	.top      = { 0x00000001, ga100_top_new },
+ 	.vfn      = { 0x00000001, ga100_vfn_new },
+ 	.ce       = { 0x0000001f, ga102_ce_new },
+ 	.disp     = { 0x00000001, ga102_disp_new },
+ 	.dma      = { 0x00000001, gv100_dma_new },
+ 	.fifo     = { 0x00000001, ga102_fifo_new },
+ 	.nvdec    = { 0x00000001, ga102_nvdec_new },
+ 	.sec2     = { 0x00000001, ga102_sec2_new },
+ };
+ 
+ static const struct nvkm_device_chip
+ nv174_chipset = {
+ 	.name = "GA104",
+ 	.acr      = { 0x00000001, ga102_acr_new },
+ 	.bar      = { 0x00000001, tu102_bar_new },
+ 	.bios     = { 0x00000001, nvkm_bios_new },
+ 	.devinit  = { 0x00000001, ga100_devinit_new },
+ 	.fault    = { 0x00000001, tu102_fault_new },
+ 	.fb       = { 0x00000001, ga102_fb_new },
+ 	.gpio     = { 0x00000001, ga102_gpio_new },
+ 	.gsp      = { 0x00000001, ga102_gsp_new },
+ 	.i2c      = { 0x00000001, gm200_i2c_new },
+ 	.imem     = { 0x00000001, nv50_instmem_new },
+ 	.ltc      = { 0x00000001, ga102_ltc_new },
+ 	.mc       = { 0x00000001, ga100_mc_new },
+ 	.mmu      = { 0x00000001, tu102_mmu_new },
+ 	.pci      = { 0x00000001, gp100_pci_new },
+ 	.privring = { 0x00000001, gm200_privring_new },
+ 	.timer    = { 0x00000001, gk20a_timer_new },
+ 	.top      = { 0x00000001, ga100_top_new },
+ 	.vfn      = { 0x00000001, ga100_vfn_new },
+ 	.ce       = { 0x0000001f, ga102_ce_new },
+ 	.disp     = { 0x00000001, ga102_disp_new },
+ 	.dma      = { 0x00000001, gv100_dma_new },
+ 	.fifo     = { 0x00000001, ga102_fifo_new },
+ 	.nvdec    = { 0x00000001, ga102_nvdec_new },
+ 	.sec2     = { 0x00000001, ga102_sec2_new },
+ };
+ 
+ static const struct nvkm_device_chip
+ nv176_chipset = {
+ 	.name = "GA106",
+ 	.acr      = { 0x00000001, ga102_acr_new },
+ 	.bar      = { 0x00000001, tu102_bar_new },
+ 	.bios     = { 0x00000001, nvkm_bios_new },
+ 	.devinit  = { 0x00000001, ga100_devinit_new },
+ 	.fault    = { 0x00000001, tu102_fault_new },
+ 	.fb       = { 0x00000001, ga102_fb_new },
+ 	.gpio     = { 0x00000001, ga102_gpio_new },
+ 	.gsp      = { 0x00000001, ga102_gsp_new },
+ 	.i2c      = { 0x00000001, gm200_i2c_new },
+ 	.imem     = { 0x00000001, nv50_instmem_new },
+ 	.ltc      = { 0x00000001, ga102_ltc_new },
+ 	.mc       = { 0x00000001, ga100_mc_new },
+ 	.mmu      = { 0x00000001, tu102_mmu_new },
+ 	.pci      = { 0x00000001, gp100_pci_new },
+ 	.privring = { 0x00000001, gm200_privring_new },
+ 	.timer    = { 0x00000001, gk20a_timer_new },
+ 	.top      = { 0x00000001, ga100_top_new },
+ 	.vfn      = { 0x00000001, ga100_vfn_new },
+ 	.ce       = { 0x0000001f, ga102_ce_new },
+ 	.disp     = { 0x00000001, ga102_disp_new },
+ 	.dma      = { 0x00000001, gv100_dma_new },
+ 	.fifo     = { 0x00000001, ga102_fifo_new },
+ 	.nvdec    = { 0x00000001, ga102_nvdec_new },
+ 	.sec2     = { 0x00000001, ga102_sec2_new },
+ };
+ 
+ static const struct nvkm_device_chip
+ nv177_chipset = {
+ 	.name = "GA107",
+ 	.acr      = { 0x00000001, ga102_acr_new },
+ 	.bar      = { 0x00000001, tu102_bar_new },
+ 	.bios     = { 0x00000001, nvkm_bios_new },
+ 	.devinit  = { 0x00000001, ga100_devinit_new },
+ 	.fault    = { 0x00000001, tu102_fault_new },
+ 	.fb       = { 0x00000001, ga102_fb_new },
+ 	.gpio     = { 0x00000001, ga102_gpio_new },
+ 	.gsp      = { 0x00000001, ga102_gsp_new },
+ 	.i2c      = { 0x00000001, gm200_i2c_new },
+ 	.imem     = { 0x00000001, nv50_instmem_new },
+ 	.ltc      = { 0x00000001, ga102_ltc_new },
+ 	.mc       = { 0x00000001, ga100_mc_new },
+ 	.mmu      = { 0x00000001, tu102_mmu_new },
+ 	.pci      = { 0x00000001, gp100_pci_new },
+ 	.privring = { 0x00000001, gm200_privring_new },
+ 	.timer    = { 0x00000001, gk20a_timer_new },
+ 	.top      = { 0x00000001, ga100_top_new },
+ 	.vfn      = { 0x00000001, ga100_vfn_new },
+ 	.ce       = { 0x0000001f, ga102_ce_new },
+ 	.disp     = { 0x00000001, ga102_disp_new },
+ 	.dma      = { 0x00000001, gv100_dma_new },
+ 	.fifo     = { 0x00000001, ga102_fifo_new },
+ 	.nvdec    = { 0x00000001, ga102_nvdec_new },
+ 	.sec2     = { 0x00000001, ga102_sec2_new },
++>>>>>>> 21e938d0017d (drm/nouveau/ltc/ga102: initial support)
  };
  
  struct nvkm_subdev *
* Unmerged path drivers/gpu/drm/nouveau/include/nvkm/subdev/ltc.h
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
diff --git a/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/Kbuild b/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/Kbuild
index 728d75010847..0d8a915d727e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/Kbuild
+++ b/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/Kbuild
@@ -7,3 +7,4 @@ nvkm-y += nvkm/subdev/ltc/gm200.o
 nvkm-y += nvkm/subdev/ltc/gp100.o
 nvkm-y += nvkm/subdev/ltc/gp102.o
 nvkm-y += nvkm/subdev/ltc/gp10b.o
+nvkm-y += nvkm/subdev/ltc/ga102.o
diff --git a/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/ga102.c b/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/ga102.c
new file mode 100644
index 000000000000..159d9f8c95f3
--- /dev/null
+++ b/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/ga102.c
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2021 Red Hat Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ */
+#include "priv.h"
+
+static void
+ga102_ltc_zbc_clear_color(struct nvkm_ltc *ltc, int i, const u32 color[4])
+{
+	struct nvkm_device *device = ltc->subdev.device;
+
+	nvkm_mask(device, 0x17e338, 0x0000001f, i);
+	nvkm_wr32(device, 0x17e33c, color[0]);
+	nvkm_wr32(device, 0x17e340, color[1]);
+	nvkm_wr32(device, 0x17e344, color[2]);
+	nvkm_wr32(device, 0x17e348, color[3]);
+}
+
+static const struct nvkm_ltc_func
+ga102_ltc = {
+	.oneinit = gp100_ltc_oneinit,
+	.init = gp100_ltc_init,
+	.intr = gp100_ltc_intr,
+	.cbc_clear = gm107_ltc_cbc_clear,
+	.cbc_wait = gm107_ltc_cbc_wait,
+	.zbc_color = 31,
+	.zbc_depth = 16,
+	.zbc_clear_color = ga102_ltc_zbc_clear_color,
+	.zbc_clear_depth = gm107_ltc_zbc_clear_depth,
+	.zbc_clear_stencil = gp102_ltc_zbc_clear_stencil,
+	.invalidate = gf100_ltc_invalidate,
+	.flush = gf100_ltc_flush,
+};
+
+int
+ga102_ltc_new(struct nvkm_device *device, enum nvkm_subdev_type type, int inst,
+	      struct nvkm_ltc **pltc)
+{
+	return nvkm_ltc_new_(&ga102_ltc, device, type, inst, pltc);
+}
