PCI: Add PCIE_LNKCAP2_SLS2SPEED() macro

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Yicong Yang <yangyicong@hisilicon.com>
commit 757bfaa2c3515803dde9a6728bbf8c8a3c5f098a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/757bfaa2.failed

Add PCIE_LNKCAP2_SLS2SPEED macro for transforming raw Link Capabilities 2
values to the pci_bus_speed. This is next to PCIE_SPEED2MBS_ENC() to make
it easier to update both places when adding support for new speeds.

Link: https://lore.kernel.org/r/1581937984-40353-10-git-send-email-yangyicong@hisilicon.com
	Signed-off-by: Yicong Yang <yangyicong@hisilicon.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 757bfaa2c3515803dde9a6728bbf8c8a3c5f098a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci.h
diff --cc drivers/pci/pci.h
index cf19ed387686,75d027ecfbcd..000000000000
--- a/drivers/pci/pci.h
+++ b/drivers/pci/pci.h
@@@ -292,14 -292,14 +292,25 @@@ void pci_disable_bridge_window(struct p
  struct pci_bus *pci_bus_get(struct pci_bus *bus);
  void pci_bus_put(struct pci_bus *bus);
  
++<<<<<<< HEAD
 +/* PCIe link information */
 +#define PCIE_SPEED2STR(speed) \
 +	((speed) == PCIE_SPEED_32_0GT ? "32 GT/s" : \
 +	 (speed) == PCIE_SPEED_16_0GT ? "16 GT/s" : \
 +	 (speed) == PCIE_SPEED_8_0GT ? "8 GT/s" : \
 +	 (speed) == PCIE_SPEED_5_0GT ? "5 GT/s" : \
 +	 (speed) == PCIE_SPEED_2_5GT ? "2.5 GT/s" : \
 +	 "Unknown speed")
++=======
+ /* PCIe link information from Link Capabilities 2 */
+ #define PCIE_LNKCAP2_SLS2SPEED(lnkcap2) \
+ 	((lnkcap2) & PCI_EXP_LNKCAP2_SLS_32_0GB ? PCIE_SPEED_32_0GT : \
+ 	 (lnkcap2) & PCI_EXP_LNKCAP2_SLS_16_0GB ? PCIE_SPEED_16_0GT : \
+ 	 (lnkcap2) & PCI_EXP_LNKCAP2_SLS_8_0GB ? PCIE_SPEED_8_0GT : \
+ 	 (lnkcap2) & PCI_EXP_LNKCAP2_SLS_5_0GB ? PCIE_SPEED_5_0GT : \
+ 	 (lnkcap2) & PCI_EXP_LNKCAP2_SLS_2_5GB ? PCIE_SPEED_2_5GT : \
+ 	 PCI_SPEED_UNKNOWN)
++>>>>>>> 757bfaa2c351 (PCI: Add PCIE_LNKCAP2_SLS2SPEED() macro)
  
  /* PCIe speed to Mb/s reduced by encoding overhead */
  #define PCIE_SPEED2MBS_ENC(speed) \
diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 58f398103e3b..a616cb21af07 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -5839,19 +5839,10 @@ enum pci_bus_speed pcie_get_speed_cap(struct pci_dev *dev)
 	 * where only 2.5 GT/s and 5.0 GT/s speeds were defined.
 	 */
 	pcie_capability_read_dword(dev, PCI_EXP_LNKCAP2, &lnkcap2);
-	if (lnkcap2) { /* PCIe r3.0-compliant */
-		if (lnkcap2 & PCI_EXP_LNKCAP2_SLS_32_0GB)
-			return PCIE_SPEED_32_0GT;
-		else if (lnkcap2 & PCI_EXP_LNKCAP2_SLS_16_0GB)
-			return PCIE_SPEED_16_0GT;
-		else if (lnkcap2 & PCI_EXP_LNKCAP2_SLS_8_0GB)
-			return PCIE_SPEED_8_0GT;
-		else if (lnkcap2 & PCI_EXP_LNKCAP2_SLS_5_0GB)
-			return PCIE_SPEED_5_0GT;
-		else if (lnkcap2 & PCI_EXP_LNKCAP2_SLS_2_5GB)
-			return PCIE_SPEED_2_5GT;
-		return PCI_SPEED_UNKNOWN;
-	}
+
+	/* PCIe r3.0-compliant */
+	if (lnkcap2)
+		return PCIE_LNKCAP2_SLS2SPEED(lnkcap2);
 
 	pcie_capability_read_dword(dev, PCI_EXP_LNKCAP, &lnkcap);
 	if ((lnkcap & PCI_EXP_LNKCAP_SLS) == PCI_EXP_LNKCAP_SLS_5_0GB)
* Unmerged path drivers/pci/pci.h
