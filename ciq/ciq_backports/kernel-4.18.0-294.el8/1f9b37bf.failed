posix-timers: Make clock_nanosleep() time namespace aware

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Andrei Vagin <avagin@openvz.org>
commit 1f9b37bfbb607a09d838c248843e63a2cafe1080
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1f9b37bf.failed

clock_nanosleep() accepts absolute values of expiration time, if the
TIMER_ABSTIME flag is set. This value is in the tasks time namespace,
which has to be converted to the host time namespace.

Co-developed-by: Dmitry Safonov <dima@arista.com>
	Signed-off-by: Andrei Vagin <avagin@openvz.org>
	Signed-off-by: Dmitry Safonov <dima@arista.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lore.kernel.org/r/20191112012724.250792-18-dima@arista.com


(cherry picked from commit 1f9b37bfbb607a09d838c248843e63a2cafe1080)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/time/posix-timers.c
diff --cc kernel/time/posix-timers.c
index db5e28ac4dfa,ff0eb30de346..000000000000
--- a/kernel/time/posix-timers.c
+++ b/kernel/time/posix-timers.c
@@@ -1334,8 -1316,9 +1347,14 @@@ static const struct k_clock clock_realt
  
  static const struct k_clock clock_monotonic = {
  	.clock_getres		= posix_get_hrtimer_res,
++<<<<<<< HEAD
 +	.clock_get		= posix_ktime_get_ts,
 +	.nsleep			= common_nsleep,
++=======
+ 	.clock_get_timespec	= posix_get_monotonic_timespec,
+ 	.clock_get_ktime	= posix_get_monotonic_ktime,
+ 	.nsleep			= common_nsleep_timens,
++>>>>>>> 1f9b37bfbb60 (posix-timers: Make clock_nanosleep() time namespace aware)
  	.timer_create		= common_timer_create,
  	.timer_set		= common_timer_set,
  	.timer_get		= common_timer_get,
@@@ -1381,8 -1365,9 +1400,14 @@@ static const struct k_clock clock_tai 
  
  static const struct k_clock clock_boottime = {
  	.clock_getres		= posix_get_hrtimer_res,
++<<<<<<< HEAD
 +	.clock_get		= posix_get_boottime,
 +	.nsleep			= common_nsleep,
++=======
+ 	.clock_get_ktime	= posix_get_boottime_ktime,
+ 	.clock_get_timespec	= posix_get_boottime_timespec,
+ 	.nsleep			= common_nsleep_timens,
++>>>>>>> 1f9b37bfbb60 (posix-timers: Make clock_nanosleep() time namespace aware)
  	.timer_create		= common_timer_create,
  	.timer_set		= common_timer_set,
  	.timer_get		= common_timer_get,
diff --git a/kernel/time/posix-stubs.c b/kernel/time/posix-stubs.c
index 9a48ef665899..6f6ecf58489b 100644
--- a/kernel/time/posix-stubs.c
+++ b/kernel/time/posix-stubs.c
@@ -131,6 +131,7 @@ SYSCALL_DEFINE4(clock_nanosleep, const clockid_t, which_clock, int, flags,
 		struct __kernel_timespec __user *, rmtp)
 {
 	struct timespec64 t;
+	ktime_t texp;
 
 	switch (which_clock) {
 	case CLOCK_REALTIME:
@@ -149,7 +150,10 @@ SYSCALL_DEFINE4(clock_nanosleep, const clockid_t, which_clock, int, flags,
 		rmtp = NULL;
 	current->restart_block.nanosleep.type = rmtp ? TT_NATIVE : TT_NONE;
 	current->restart_block.nanosleep.rmtp = rmtp;
-	return hrtimer_nanosleep(timespec64_to_ktime(t), flags & TIMER_ABSTIME ?
+	texp = timespec64_to_ktime(t);
+	if (flags & TIMER_ABSTIME)
+		texp = timens_ktime_to_host(which_clock, texp);
+	return hrtimer_nanosleep(texp, flags & TIMER_ABSTIME ?
 				 HRTIMER_MODE_ABS : HRTIMER_MODE_REL,
 				 which_clock);
 }
@@ -217,6 +221,7 @@ COMPAT_SYSCALL_DEFINE4(clock_nanosleep, clockid_t, which_clock, int, flags,
 		       struct compat_timespec __user *, rmtp)
 {
 	struct timespec64 t;
+	ktime_t texp;
 
 	switch (which_clock) {
 	case CLOCK_REALTIME:
@@ -235,7 +240,10 @@ COMPAT_SYSCALL_DEFINE4(clock_nanosleep, clockid_t, which_clock, int, flags,
 		rmtp = NULL;
 	current->restart_block.nanosleep.type = rmtp ? TT_COMPAT : TT_NONE;
 	current->restart_block.nanosleep.compat_rmtp = rmtp;
-	return hrtimer_nanosleep(timespec64_to_ktime(t), flags & TIMER_ABSTIME ?
+	texp = timespec64_to_ktime(t);
+	if (flags & TIMER_ABSTIME)
+		texp = timens_ktime_to_host(which_clock, texp);
+	return hrtimer_nanosleep(texp, flags & TIMER_ABSTIME ?
 				 HRTIMER_MODE_ABS : HRTIMER_MODE_REL,
 				 which_clock);
 }
* Unmerged path kernel/time/posix-timers.c
