mm: Convert add_to_swap_cache to XArray

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Matthew Wilcox <willy@infradead.org>
commit 8d93b41c09d1b74f376e3b9779eb3badeb550301
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/8d93b41c.failed

Combine __add_to_swap_cache and add_to_swap_cache into one function
since there is no more need to preload.

	Signed-off-by: Matthew Wilcox <willy@infradead.org>
(cherry picked from commit 8d93b41c09d1b74f376e3b9779eb3badeb550301)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/swap_state.c
diff --cc mm/swap_state.c
index a2c7d535ec74,850314c2c3ab..000000000000
--- a/mm/swap_state.c
+++ b/mm/swap_state.c
@@@ -443,22 -405,15 +415,23 @@@ struct page *__read_swap_cache_async(sw
  			 */
  			cond_resched();
  			continue;
- 		}
- 		if (err) {		/* swp entry is obsolete ? */
- 			radix_tree_preload_end();
+ 		} else if (err)		/* swp entry is obsolete ? */
  			break;
- 		}
  
- 		/* May fail (-ENOMEM) if radix-tree node allocation failed. */
+ 		/* May fail (-ENOMEM) if XArray node allocation failed. */
  		__SetPageLocked(new_page);
  		__SetPageSwapBacked(new_page);
- 		err = __add_to_swap_cache(new_page, entry);
+ 		err = add_to_swap_cache(new_page, entry, gfp_mask & GFP_KERNEL);
  		if (likely(!err)) {
++<<<<<<< HEAD
 +			radix_tree_preload_end();
 +			/*
 +			 * Initiate read into locked page and return.
 +			 */
 +			SetPageWorkingset(new_page);
++=======
+ 			/* Initiate read into locked page */
++>>>>>>> 8d93b41c09d1 (mm: Convert add_to_swap_cache to XArray)
  			lru_cache_add_anon(new_page);
  			*new_page_allocated = true;
  			return new_page;
* Unmerged path mm/swap_state.c
