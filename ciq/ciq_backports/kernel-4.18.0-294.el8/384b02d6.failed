i2c: designware: Add device HID for Hygon I2C controller

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Pu Wen <puwen@hygon.cn>
commit 384b02d6b83bd4c5df96de00658623b4e04e2472
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/384b02d6.failed

Add device HID HYGO0010 to match the Hygon ACPI Vendor ID (HYGO) that
was registered in http://www.uefi.org/acpi_id_list, and the I2C
controller on Hygon paltform will use the HID.

	Signed-off-by: Pu Wen <puwen@hygon.cn>
	Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Acked-by: Wolfram Sang <wsa@kernel.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 384b02d6b83bd4c5df96de00658623b4e04e2472)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/busses/i2c-designware-platdrv.c
diff --cc drivers/i2c/busses/i2c-designware-platdrv.c
index d281d21cdd8e,0dfeb2d11603..000000000000
--- a/drivers/i2c/busses/i2c-designware-platdrv.c
+++ b/drivers/i2c/busses/i2c-designware-platdrv.c
@@@ -150,24 -148,15 +150,29 @@@ static int dw_i2c_acpi_configure(struc
  	return 0;
  }
  
 -static const struct of_device_id dw_i2c_of_match[] = {
 -	{ .compatible = "snps,designware-i2c", },
 -	{ .compatible = "mscc,ocelot-i2c", .data = (void *)MODEL_MSCC_OCELOT },
 -	{ .compatible = "baikal,bt1-sys-i2c", .data = (void *)MODEL_BAIKAL_BT1 },
 -	{},
 +static const struct acpi_device_id dw_i2c_acpi_match[] = {
 +	{ "INT33C2", 0 },
 +	{ "INT33C3", 0 },
 +	{ "INT3432", 0 },
 +	{ "INT3433", 0 },
 +	{ "80860F41", 0 },
 +	{ "808622C1", MODEL_CHERRYTRAIL },
 +	{ "AMD0010", ACCESS_INTR_MASK },
 +	{ "AMDI0010", ACCESS_INTR_MASK },
 +	{ "AMDI0510", 0 },
 +	{ "APMC0D0F", 0 },
 +	{ "HISI02A1", 0 },
 +	{ "HISI02A2", 0 },
++<<<<<<< HEAD
++=======
++	{ "HISI02A3", 0 },
++	{ "HYGO0010", ACCESS_INTR_MASK },
++>>>>>>> 384b02d6b83b (i2c: designware: Add device HID for Hygon I2C controller)
 +	{ }
  };
 -MODULE_DEVICE_TABLE(of, dw_i2c_of_match);
 +MODULE_DEVICE_TABLE(acpi, dw_i2c_acpi_match);
  #else
 -static int bt1_i2c_request_regs(struct dw_i2c_dev *dev)
 +static inline int dw_i2c_acpi_configure(struct platform_device *pdev)
  {
  	return -ENODEV;
  }
diff --git a/drivers/acpi/acpi_apd.c b/drivers/acpi/acpi_apd.c
index daad958add11..7659bc8ec71d 100644
--- a/drivers/acpi/acpi_apd.c
+++ b/drivers/acpi/acpi_apd.c
@@ -242,6 +242,7 @@ static const struct acpi_device_id acpi_apd_device_ids[] = {
 	{ "AMDI0020", APD_ADDR(cz_uart_desc) },
 	{ "AMD0030", },
 	{ "AMD0040", APD_ADDR(st_misc_desc)},
+	{ "HYGO0010", APD_ADDR(wt_i2c_desc) },
 #endif
 #ifdef CONFIG_ARM64
 	{ "APMC0D0F", APD_ADDR(xgene_i2c_desc) },
* Unmerged path drivers/i2c/busses/i2c-designware-platdrv.c
