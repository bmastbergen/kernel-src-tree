cfg80211/mac80211: avoid bss color setting in non-HE modes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author P Praneesh <ppranees@codeaurora.org>
commit 322cd27c06450b2db2cb6bdc68f3814149baf767
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/322cd27c.failed

Adding bss-color configuration is only valid in HE mode.
Earlier we have enabled it by default, irrespective of
capabilities/mode. Fix that.

	Reported-by: kernel test robot <lkp@intel.com>
	Reported-by: Rajkumar Manoharan <rmanohar@codeaurora.org>
	Signed-off-by: P Praneesh <ppranees@codeaurora.org>
Link: https://lore.kernel.org/r/1594262781-21444-1-git-send-email-ppranees@codeaurora.org
[fix up commit message]
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 322cd27c06450b2db2cb6bdc68f3814149baf767)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/cfg.c
diff --cc net/mac80211/cfg.c
index d99010eec336,bbd86cd79954..000000000000
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@@ -1011,8 -1009,19 +1009,22 @@@ static int ieee80211_start_ap(struct wi
  	prev_beacon_int = sdata->vif.bss_conf.beacon_int;
  	sdata->vif.bss_conf.beacon_int = params->beacon_interval;
  
 -	if (params->he_cap && params->he_oper) {
 +	if (params->he_cap)
  		sdata->vif.bss_conf.he_support = true;
++<<<<<<< HEAD
++=======
+ 		sdata->vif.bss_conf.htc_trig_based_pkt_ext =
+ 			le32_get_bits(params->he_oper->he_oper_params,
+ 			      IEEE80211_HE_OPERATION_DFLT_PE_DURATION_MASK);
+ 		sdata->vif.bss_conf.frame_time_rts_th =
+ 			le32_get_bits(params->he_oper->he_oper_params,
+ 			      IEEE80211_HE_OPERATION_RTS_THRESHOLD_MASK);
+ 		changed |= BSS_CHANGED_HE_OBSS_PD;
+ 
+ 		if (!params->he_bss_color.disabled)
+ 			changed |= BSS_CHANGED_HE_BSS_COLOR;
+ 	}
++>>>>>>> 322cd27c0645 (cfg80211/mac80211: avoid bss color setting in non-HE modes)
  
  	mutex_lock(&local->mtx);
  	err = ieee80211_vif_use_channel(sdata, &params->chandef,
* Unmerged path net/mac80211/cfg.c
diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index e43d4a5759de..de00b42454c3 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -3455,7 +3455,9 @@ static bool ieee80211_assoc_success(struct ieee80211_sub_if_data *sdata,
 		bss_conf->he_bss_color.disabled =
 			le32_get_bits(elems->he_operation->he_oper_params,
 				      IEEE80211_HE_OPERATION_BSS_COLOR_DISABLED);
-		changed |= BSS_CHANGED_HE_BSS_COLOR;
+
+		if (!bss_conf->he_bss_color.disabled)
+			changed |= BSS_CHANGED_HE_BSS_COLOR;
 
 		bss_conf->htc_trig_based_pkt_ext =
 			le32_get_bits(elems->he_operation->he_oper_params,
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 0deb4c5c5e4f..a835ca71d38f 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -4867,6 +4867,9 @@ static int nl80211_start_ap(struct sk_buff *skb, struct genl_info *info)
 
 	memset(&params, 0, sizeof(params));
 
+	/* disable BSS color by default */
+	params.he_bss_color.disabled = true;
+
 	/* these are required for START_AP */
 	if (!info->attrs[NL80211_ATTR_BEACON_INTERVAL] ||
 	    !info->attrs[NL80211_ATTR_DTIM_PERIOD] ||
