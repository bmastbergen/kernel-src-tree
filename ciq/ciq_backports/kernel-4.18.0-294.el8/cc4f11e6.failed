mm: migrate: lock buffers before migrate_page_move_mapping()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jan Kara <jack@suse.cz>
commit cc4f11e69fd00c61c38619759b07d00631bda5ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/cc4f11e6.failed

Lock buffers before calling into migrate_page_move_mapping() so that that
function doesn't have to know about buffers (which is somewhat unexpected
anyway) and all the buffer head logic is in buffer_migrate_page().

Link: http://lkml.kernel.org/r/20181211172143.7358-3-jack@suse.cz
	Signed-off-by: Jan Kara <jack@suse.cz>
	Acked-by: Mel Gorman <mgorman@suse.de>
	Cc: Michal Hocko <mhocko@suse.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit cc4f11e69fd00c61c38619759b07d00631bda5ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/migrate.c
diff --cc mm/migrate.c
index 60059875287d,e0bc03e15e74..000000000000
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@@ -485,25 -482,11 +485,28 @@@ int migrate_page_move_mapping(struct ad
  	}
  
  	if (!page_ref_freeze(page, expected_count)) {
 -		xas_unlock_irq(&xas);
 +		xa_unlock_irq(&mapping->i_pages);
 +		return -EAGAIN;
 +	}
 +
 +	/*
++<<<<<<< HEAD
 +	 * In the async migration case of moving a page with buffers, lock the
 +	 * buffers using trylock before the mapping is moved. If the mapping
 +	 * was moved, we later failed to lock the buffers and could not move
 +	 * the mapping back due to an elevated page count, we would have to
 +	 * block waiting on other references to be dropped.
 +	 */
 +	if (mode == MIGRATE_ASYNC && head &&
 +			!buffer_migrate_lock_buffers(head, mode)) {
 +		page_ref_unfreeze(page, expected_count);
 +		xa_unlock_irq(&mapping->i_pages);
  		return -EAGAIN;
  	}
  
  	/*
++=======
++>>>>>>> cc4f11e69fd0 (mm: migrate: lock buffers before migrate_page_move_mapping())
  	 * Now we know that no one else is looking at the page:
  	 * no turning back from here.
  	 */
* Unmerged path mm/migrate.c
