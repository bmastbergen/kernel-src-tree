KVM: arm64: Force PTE mapping on fault resulting in a device mapping

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Santosh Shukla <sashukla@nvidia.com>
commit 91a2c34b7d6fadc9c5d9433c620ea4c32ee7cae8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/91a2c34b.failed

VFIO allows a device driver to resolve a fault by mapping a MMIO
range. This can be subsequently result in user_mem_abort() to
try and compute a huge mapping based on the MMIO pfn, which is
a sure recipe for things to go wrong.

Instead, force a PTE mapping when the pfn faulted in has a device
mapping.

Fixes: 6d674e28f642 ("KVM: arm/arm64: Properly handle faulting of device mappings")
	Suggested-by: Marc Zyngier <maz@kernel.org>
	Signed-off-by: Santosh Shukla <sashukla@nvidia.com>
[maz: rewritten commit message]
	Signed-off-by: Marc Zyngier <maz@kernel.org>
	Reviewed-by: Gavin Shan <gshan@redhat.com>
	Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/1603711447-11998-2-git-send-email-sashukla@nvidia.com
(cherry picked from commit 91a2c34b7d6fadc9c5d9433c620ea4c32ee7cae8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kvm/mmu.c
diff --cc arch/arm64/kvm/mmu.c
index ddc8fde93e95,c7c6df6309d5..000000000000
--- a/arch/arm64/kvm/mmu.c
+++ b/arch/arm64/kvm/mmu.c
@@@ -1776,16 -850,9 +1776,22 @@@ static int user_mem_abort(struct kvm_vc
  		return -EFAULT;
  
  	if (kvm_is_device_pfn(pfn)) {
++<<<<<<< HEAD
 +		mem_type = PAGE_S2_DEVICE;
 +		flags |= KVM_S2PTE_FLAG_IS_IOMAP;
 +	} else if (logging_active) {
 +		/*
 +		 * Faults on pages in a memslot with logging enabled
 +		 * should not be mapped with huge pages (it introduces churn
 +		 * and performance degradation), so force a pte mapping.
 +		 */
 +		flags |= KVM_S2_FLAG_LOGGING_ACTIVE;
 +
++=======
+ 		device = true;
+ 		force_pte = true;
+ 	} else if (logging_active && !write_fault) {
++>>>>>>> 91a2c34b7d6f (KVM: arm64: Force PTE mapping on fault resulting in a device mapping)
  		/*
  		 * Only actually map the page as writable if this was a write
  		 * fault.
* Unmerged path arch/arm64/kvm/mmu.c
