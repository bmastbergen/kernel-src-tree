xdp: Prevent kernel-infoleak in xsk_getsockopt()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Peilin Ye <yepeilin.cs@gmail.com>
commit 3c4f850e8441ac8b3b6dbaa6107604c4199ef01f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/3c4f850e.failed

xsk_getsockopt() is copying uninitialized stack memory to userspace when
'extra_stats' is 'false'. Fix it. Doing '= {};' is sufficient since currently
'struct xdp_statistics' is defined as follows:

  struct xdp_statistics {
    __u64 rx_dropped;
    __u64 rx_invalid_descs;
    __u64 tx_invalid_descs;
    __u64 rx_ring_full;
    __u64 rx_fill_ring_empty_descs;
    __u64 tx_ring_empty_descs;
  };

When being copied to the userspace, 'stats' will not contain any uninitialized
'holes' between struct fields.

Fixes: 8aa5a33578e9 ("xsk: Add new statistics")
	Suggested-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Peilin Ye <yepeilin.cs@gmail.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Björn Töpel <bjorn.topel@intel.com>
	Acked-by: Song Liu <songliubraving@fb.com>
	Acked-by: Arnd Bergmann <arnd@arndb.de>
Link: https://lore.kernel.org/bpf/20200728053604.404631-1-yepeilin.cs@gmail.com
(cherry picked from commit 3c4f850e8441ac8b3b6dbaa6107604c4199ef01f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/xdp/xsk.c
diff --cc net/xdp/xsk.c
index 0bcdbfbd4030,c3231620d210..000000000000
--- a/net/xdp/xsk.c
+++ b/net/xdp/xsk.c
@@@ -902,10 -840,18 +902,16 @@@ static int xsk_getsockopt(struct socke
  	switch (optname) {
  	case XDP_STATISTICS:
  	{
++<<<<<<< HEAD
 +		struct xdp_statistics stats;
++=======
+ 		struct xdp_statistics stats = {};
+ 		bool extra_stats = true;
+ 		size_t stats_size;
++>>>>>>> 3c4f850e8441 (xdp: Prevent kernel-infoleak in xsk_getsockopt())
  
 -		if (len < sizeof(struct xdp_statistics_v1)) {
 +		if (len < sizeof(stats))
  			return -EINVAL;
 -		} else if (len < sizeof(stats)) {
 -			extra_stats = false;
 -			stats_size = sizeof(struct xdp_statistics_v1);
 -		} else {
 -			stats_size = sizeof(stats);
 -		}
  
  		mutex_lock(&xs->mutex);
  		stats.rx_dropped = xs->rx_dropped;
* Unmerged path net/xdp/xsk.c
