scsi: smartpqi: Add RAID bypass counter

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Kevin Barnett <kevin.barnett@microsemi.com>
commit 8b664fefa3413ea42bb68546f1f1756289b080a7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/8b664fef.failed

Add a counter to assist in verifying when RAID bypass is being used.

Link: https://lore.kernel.org/r/159622930468.30579.13153724465552773544.stgit@brunhilda
	Reviewed-by: Scott Teel <scott.teel@microsemi.com>
	Reviewed-by: Scott Benesh <scott.benesh@microsemi.com>
	Reviewed-by: Martin Wilck <mwilck@suse.com>
	Signed-off-by: Kevin Barnett <kevin.barnett@microsemi.com>
	Signed-off-by: Don Brace <don.brace@microsemi.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 8b664fefa3413ea42bb68546f1f1756289b080a7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/smartpqi/smartpqi_init.c
diff --cc drivers/scsi/smartpqi/smartpqi_init.c
index 5cda2a15d619,4a9b4c4e6387..000000000000
--- a/drivers/scsi/smartpqi/smartpqi_init.c
+++ b/drivers/scsi/smartpqi/smartpqi_init.c
@@@ -5872,8 -5841,32 +5871,37 @@@ static int pqi_slave_configure(struct s
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int pqi_getpciinfo_ioctl(struct pqi_ctrl_info *ctrl_info,
 +	void __user *arg)
++=======
+ static void pqi_slave_destroy(struct scsi_device *sdev)
+ {
+ 	unsigned long flags;
+ 	struct pqi_scsi_dev *device;
+ 	struct pqi_ctrl_info *ctrl_info;
+ 
+ 	ctrl_info = shost_to_hba(sdev->host);
+ 
+ 	spin_lock_irqsave(&ctrl_info->scsi_device_list_lock, flags);
+ 
+ 	device = sdev->hostdata;
+ 	if (device) {
+ 		sdev->hostdata = NULL;
+ 		if (!list_empty(&device->scsi_device_list_entry))
+ 			list_del(&device->scsi_device_list_entry);
+ 	}
+ 
+ 	spin_unlock_irqrestore(&ctrl_info->scsi_device_list_lock, flags);
+ 
+ 	if (device) {
+ 		pqi_dev_info(ctrl_info, "removed", device);
+ 		pqi_free_device(device);
+ 	}
+ }
+ 
+ static int pqi_getpciinfo_ioctl(struct pqi_ctrl_info *ctrl_info, void __user *arg)
++>>>>>>> 8b664fefa341 (scsi: smartpqi: Add RAID bypass counter)
  {
  	struct pci_dev *pci_dev;
  	u32 subsystem_vendor;
diff --git a/drivers/scsi/smartpqi/smartpqi.h b/drivers/scsi/smartpqi/smartpqi.h
index 631306d347db..d0c635971481 100644
--- a/drivers/scsi/smartpqi/smartpqi.h
+++ b/drivers/scsi/smartpqi/smartpqi.h
@@ -963,6 +963,7 @@ struct pqi_scsi_dev {
 	struct list_head delete_list_entry;
 
 	atomic_t scsi_cmds_outstanding;
+	atomic_t raid_bypass_cnt;
 };
 
 /* VPD inquiry pages */
* Unmerged path drivers/scsi/smartpqi/smartpqi_init.c
