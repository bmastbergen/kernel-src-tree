lightnvm: disable interleaved metadata

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Igor Konopko <igor.j.konopko@intel.com>
commit a16816b9e462e8ee86a908606bde54b53cfeca80
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a16816b9.failed

Currently pblk only check the size of I/O metadata and does not take
into account if this metadata is in a separate buffer or interleaved
in a single metadata buffer.

In reality only the first scenario is supported, where second mode will
break pblk functionality during any IO operation.

This patch prevents pblk to be instantiated in case device only
supports interleaved metadata.

	Reviewed-by: Javier González <javier@cnexlabs.com>
	Signed-off-by: Igor Konopko <igor.j.konopko@intel.com>
	Signed-off-by: Matias Bjørling <mb@lightnvm.io>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit a16816b9e462e8ee86a908606bde54b53cfeca80)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/lightnvm/pblk-init.c
diff --cc drivers/lightnvm/pblk-init.c
index b57f764d6a16,e8055b796381..000000000000
--- a/drivers/lightnvm/pblk-init.c
+++ b/drivers/lightnvm/pblk-init.c
@@@ -1210,8 -1164,23 +1210,25 @@@ static void *pblk_init(struct nvm_tgt_d
  	pblk->dev = dev;
  	pblk->disk = tdisk;
  	pblk->state = PBLK_STATE_RUNNING;
 -	trace_pblk_state(pblk_disk_name(pblk), pblk->state);
  	pblk->gc.gc_enabled = 0;
  
++<<<<<<< HEAD
++=======
+ 	if (!(geo->version == NVM_OCSSD_SPEC_12 ||
+ 					geo->version == NVM_OCSSD_SPEC_20)) {
+ 		pblk_err(pblk, "OCSSD version not supported (%u)\n",
+ 							geo->version);
+ 		kfree(pblk);
+ 		return ERR_PTR(-EINVAL);
+ 	}
+ 
+ 	if (geo->ext) {
+ 		pblk_err(pblk, "extended metadata not supported\n");
+ 		kfree(pblk);
+ 		return ERR_PTR(-EINVAL);
+ 	}
+ 
++>>>>>>> a16816b9e462 (lightnvm: disable interleaved metadata)
  	spin_lock_init(&pblk->resubmit_lock);
  	spin_lock_init(&pblk->trans_lock);
  	spin_lock_init(&pblk->lock);
* Unmerged path drivers/lightnvm/pblk-init.c
diff --git a/drivers/nvme/host/lightnvm.c b/drivers/nvme/host/lightnvm.c
index 1afd444caa58..0496ecb2d79a 100644
--- a/drivers/nvme/host/lightnvm.c
+++ b/drivers/nvme/host/lightnvm.c
@@ -936,6 +936,7 @@ int nvme_nvm_register(struct nvme_ns *ns, char *disk_name, int node)
 	geo = &dev->geo;
 	geo->csecs = 1 << ns->lba_shift;
 	geo->sos = ns->ms;
+	geo->ext = ns->ext;
 
 	dev->q = q;
 	memcpy(dev->name, disk_name, DISK_NAME_LEN);
diff --git a/include/linux/lightnvm.h b/include/linux/lightnvm.h
index b50d7fa9c1dc..f43f733eb254 100644
--- a/include/linux/lightnvm.h
+++ b/include/linux/lightnvm.h
@@ -348,6 +348,7 @@ struct nvm_geo {
 	u32	clba;		/* sectors per chunk */
 	u16	csecs;		/* sector size */
 	u16	sos;		/* out-of-band area size */
+	bool	ext;		/* metadata in extended data buffer */
 
 	/* device write constrains */
 	u32	ws_min;		/* minimum write size */
