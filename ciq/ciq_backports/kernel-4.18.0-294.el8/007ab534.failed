bonding: fix feature flag setting at init time

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jarod Wilson <jarod@redhat.com>
commit 007ab5345545aba2f9cbe4c096cc35d2fd3275ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/007ab534.failed

Don't try to adjust XFRM support flags if the bond device isn't yet
registered. Bad things can currently happen when netdev_change_features()
is called without having wanted_features fully filled in yet. This code
runs both on post-module-load mode changes, as well as at module init
time, and when run at module init time, it is before register_netdevice()
has been called and filled in wanted_features. The empty wanted_features
led to features also getting emptied out, which was definitely not the
intended behavior, so prevent that from happening.

Originally, I'd hoped to stop adjusting wanted_features at all in the
bonding driver, as it's documented as being something only the network
core should touch, but we actually do need to do this to properly update
both the features and wanted_features fields when changing the bond type,
or we get to a situation where ethtool sees:

    esp-hw-offload: off [requested on]

I do think we should be using netdev_update_features instead of
netdev_change_features here though, so we only send notifiers when the
features actually changed.

Fixes: a3b658cfb664 ("bonding: allow xfrm offload setup post-module-load")
	Reported-by: Ivan Vecera <ivecera@redhat.com>
	Suggested-by: Ivan Vecera <ivecera@redhat.com>
	Cc: Jay Vosburgh <j.vosburgh@gmail.com>
	Cc: Veaceslav Falico <vfalico@gmail.com>
	Cc: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Jarod Wilson <jarod@redhat.com>
Link: https://lore.kernel.org/r/20201205172229.576587-1-jarod@redhat.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 007ab5345545aba2f9cbe4c096cc35d2fd3275ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_options.c
#	include/net/bonding.h
diff --cc drivers/net/bonding/bond_options.c
index 45bc5f1e5812,a4e4e15f574d..000000000000
--- a/drivers/net/bonding/bond_options.c
+++ b/drivers/net/bonding/bond_options.c
@@@ -768,6 -780,9 +781,12 @@@ static int bond_option_mode_set(struct 
  	if (newval->value == BOND_MODE_ALB)
  		bond->params.tlb_dynamic_lb = 1;
  
++<<<<<<< HEAD
++=======
+ 	if (bond->dev->reg_state == NETREG_REGISTERED)
+ 		bond_set_xfrm_features(bond->dev, newval->value);
+ 
++>>>>>>> 007ab5345545 (bonding: fix feature flag setting at init time)
  	/* don't cache arp_validate between modes */
  	bond->params.arp_validate = BOND_ARP_VALIDATE_NONE;
  	bond->params.mode = newval->value;
diff --cc include/net/bonding.h
index 1c34be3c01a1,adc3da776970..000000000000
--- a/include/net/bonding.h
+++ b/include/net/bonding.h
@@@ -86,6 -86,9 +86,12 @@@
  #define bond_for_each_slave_rcu(bond, pos, iter) \
  	netdev_for_each_lower_private_rcu((bond)->dev, pos, iter)
  
++<<<<<<< HEAD
++=======
+ #define BOND_XFRM_FEATURES (NETIF_F_HW_ESP | NETIF_F_HW_ESP_TX_CSUM | \
+ 			    NETIF_F_GSO_ESP)
+ 
++>>>>>>> 007ab5345545 (bonding: fix feature flag setting at init time)
  #ifdef CONFIG_NET_POLL_CONTROLLER
  extern atomic_t netpoll_block_tx;
  
* Unmerged path drivers/net/bonding/bond_options.c
* Unmerged path include/net/bonding.h
