ASoC: soc-core: snd_soc_dai_digital_mute() for both CPU/Codec

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: soc-core: snd_soc_dai_digital_mute() for both CPU/Codec (Jaroslav Kysela) [1869536]
Rebuild_FUZZ: 95.31%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit a0234d0e6014a17c61311fc39b9adc194114c5f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a0234d0e.failed

snd_soc_dai_digital_mute() is used for both CPU and Codec.
For example, soc_pcm_prepare() / soc_pcm_hw_free() are caring
both CPU and Codec.

But soc_resume_deferred() / snd_soc_suspend() are not.
This patch cares it.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Reviewed-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
Link: https://lore.kernel.org/r/87ft9r2dqr.wl-kuninori.morimoto.gx@renesas.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit a0234d0e6014a17c61311fc39b9adc194114c5f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-core.c
diff --cc sound/soc/soc-core.c
index dd08ec003560,defd96b14c28..000000000000
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@@ -573,8 -548,8 +573,13 @@@ int snd_soc_suspend(struct device *dev
  		if (rtd->dai_link->ignore_suspend)
  			continue;
  
++<<<<<<< HEAD
 +		for_each_rtd_codec_dais(rtd, i, dai) {
 +			if (dai->stream_active[playback])
++=======
+ 		for_each_rtd_dais(rtd, i, dai) {
+ 			if (snd_soc_dai_stream_active(dai, playback))
++>>>>>>> a0234d0e6014 (ASoC: soc-core: snd_soc_dai_digital_mute() for both CPU/Codec)
  				snd_soc_dai_digital_mute(dai, 1, playback);
  		}
  	}
@@@ -715,8 -687,8 +720,13 @@@ static void soc_resume_deferred(struct 
  		if (rtd->dai_link->ignore_suspend)
  			continue;
  
++<<<<<<< HEAD
 +		for_each_rtd_codec_dais(rtd, i, dai) {
 +			if (dai->stream_active[playback])
++=======
+ 		for_each_rtd_dais(rtd, i, dai) {
+ 			if (snd_soc_dai_stream_active(dai, playback))
++>>>>>>> a0234d0e6014 (ASoC: soc-core: snd_soc_dai_digital_mute() for both CPU/Codec)
  				snd_soc_dai_digital_mute(dai, 0, playback);
  		}
  	}
* Unmerged path sound/soc/soc-core.c
