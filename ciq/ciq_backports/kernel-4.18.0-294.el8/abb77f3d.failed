arm64: tishift: use asm EXPORT_SYMBOL()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Mark Rutland <mark.rutland@arm.com>
commit abb77f3d96407cf30c2068f4a23a14b9540a1c1f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/abb77f3d.failed

For a while now it's been possible to use EXPORT_SYMBOL() in assembly
files, which allows us to place exports immediately after assembly
functions, as we do for C functions.

As a step towards removing arm64ksyms.c, let's move the tishift exports
to the assembly file the functions are defined in.

There should be no functional change as a result of this patch.

	Signed-off-by: Mark Rutland <mark.rutland@arm.com>
	Cc: Will Deacon <will.deacon@arm.com>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit abb77f3d96407cf30c2068f4a23a14b9540a1c1f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/arm64ksyms.c
diff --cc arch/arm64/kernel/arm64ksyms.c
index 56330e691d2f,d80e9cfc3062..000000000000
--- a/arch/arm64/kernel/arm64ksyms.c
+++ b/arch/arm64/kernel/arm64ksyms.c
@@@ -71,12 -68,3 +71,15 @@@ NOKPROBE_SYMBOL(_mcount)
  EXPORT_SYMBOL(__arm_smccc_smc);
  EXPORT_SYMBOL(__arm_smccc_hvc);
  
++<<<<<<< HEAD
 +	/* tishift.S */
 +extern long long __ashlti3(long long a, int b);
 +EXPORT_SYMBOL(__ashlti3);
 +extern long long __ashrti3(long long a, int b);
 +EXPORT_SYMBOL(__ashrti3);
 +extern long long __lshrti3(long long a, int b);
 +EXPORT_SYMBOL(__lshrti3);
 +
 +EXPORT_SYMBOL(kimage_vaddr);
++=======
++>>>>>>> abb77f3d9640 (arm64: tishift: use asm EXPORT_SYMBOL())
* Unmerged path arch/arm64/kernel/arm64ksyms.c
diff --git a/arch/arm64/lib/tishift.S b/arch/arm64/lib/tishift.S
index 0fdff97794de..047622536535 100644
--- a/arch/arm64/lib/tishift.S
+++ b/arch/arm64/lib/tishift.S
@@ -5,6 +5,8 @@
 
 #include <linux/linkage.h>
 
+#include <asm/assembler.h>
+
 ENTRY(__ashlti3)
 	cbz	x2, 1f
 	mov	x3, #64
@@ -25,6 +27,7 @@ ENTRY(__ashlti3)
 	mov	x0, x2
 	ret
 ENDPROC(__ashlti3)
+EXPORT_SYMBOL(__ashlti3)
 
 ENTRY(__ashrti3)
 	cbz	x2, 1f
@@ -46,6 +49,7 @@ ENTRY(__ashrti3)
 	mov	x1, x2
 	ret
 ENDPROC(__ashrti3)
+EXPORT_SYMBOL(__ashrti3)
 
 ENTRY(__lshrti3)
 	cbz	x2, 1f
@@ -67,3 +71,4 @@ ENTRY(__lshrti3)
 	mov	x1, x2
 	ret
 ENDPROC(__lshrti3)
+EXPORT_SYMBOL(__lshrti3)
