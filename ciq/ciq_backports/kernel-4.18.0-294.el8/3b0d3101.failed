x86/numa: add 'nohmat' option

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Dan Williams <dan.j.williams@intel.com>
commit 3b0d31011d39759e3ba7214f75f77bb31983b5a4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/3b0d3101.failed

Disable parsing of the HMAT for debug, to workaround broken platform
instances, or cases where it is otherwise not wanted.

[rdunlap@infradead.org: fix build when CONFIG_ACPI is not set]
  Link: https://lkml.kernel.org/r/70e5ee34-9809-a997-7b49-499e4be61307@infradead.org

	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Ard Biesheuvel <ardb@kernel.org>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Ben Skeggs <bskeggs@redhat.com>
	Cc: Brice Goglin <Brice.Goglin@inria.fr>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Daniel Vetter <daniel@ffwll.ch>
	Cc: Dave Jiang <dave.jiang@intel.com>
	Cc: David Airlie <airlied@linux.ie>
	Cc: David Hildenbrand <david@redhat.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Ira Weiny <ira.weiny@intel.com>
	Cc: Jason Gunthorpe <jgg@mellanox.com>
	Cc: Jeff Moyer <jmoyer@redhat.com>
	Cc: Jia He <justin.he@arm.com>
	Cc: Joao Martins <joao.m.martins@oracle.com>
	Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Mike Rapoport <rppt@linux.ibm.com>
	Cc: Paul Mackerras <paulus@ozlabs.org>
	Cc: Pavel Tatashin <pasha.tatashin@soleen.com>
	Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
	Cc: Tom Lendacky <thomas.lendacky@amd.com>
	Cc: Vishal Verma <vishal.l.verma@intel.com>
	Cc: Wei Yang <richard.weiyang@linux.alibaba.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Bjorn Helgaas <bhelgaas@google.com>
	Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Cc: Hulk Robot <hulkci@huawei.com>
	Cc: Jason Yan <yanaijie@huawei.com>
	Cc: "Jérôme Glisse" <jglisse@redhat.com>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: kernel test robot <lkp@intel.com>
	Cc: Randy Dunlap <rdunlap@infradead.org>
	Cc: Stefano Stabellini <sstabellini@kernel.org>
	Cc: Vivek Goyal <vgoyal@redhat.com>
Link: https://lkml.kernel.org/r/159643095540.4062302.732962081968036212.stgit@dwillia2-desk3.amr.corp.intel.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 3b0d31011d39759e3ba7214f75f77bb31983b5a4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/x86/x86_64/boot-options.rst
#	arch/x86/mm/numa.c
diff --cc arch/x86/mm/numa.c
index b1672ac8005d,f3805bbaa784..000000000000
--- a/arch/x86/mm/numa.c
+++ b/arch/x86/mm/numa.c
@@@ -39,14 -37,12 +39,20 @@@ static __init int numa_setup(char *opt
  		return -EINVAL;
  	if (!strncmp(opt, "off", 3))
  		numa_off = 1;
 +#ifdef CONFIG_NUMA_EMU
  	if (!strncmp(opt, "fake=", 5))
 -		return numa_emu_cmdline(opt + 5);
 +		numa_emu_cmdline(opt + 5);
 +#endif
 +#ifdef CONFIG_ACPI_NUMA
  	if (!strncmp(opt, "noacpi", 6))
++<<<<<<< HEAD
 +		acpi_numa = -1;
 +#endif
++=======
+ 		disable_srat();
+ 	if (!strncmp(opt, "nohmat", 6))
+ 		disable_hmat();
++>>>>>>> 3b0d31011d39 (x86/numa: add 'nohmat' option)
  	return 0;
  }
  early_param("numa", numa_setup);
* Unmerged path Documentation/x86/x86_64/boot-options.rst
* Unmerged path Documentation/x86/x86_64/boot-options.rst
* Unmerged path arch/x86/mm/numa.c
diff --git a/drivers/acpi/numa/hmat.c b/drivers/acpi/numa/hmat.c
index 6ea95b367a31..fb6b957d21ae 100644
--- a/drivers/acpi/numa/hmat.c
+++ b/drivers/acpi/numa/hmat.c
@@ -26,6 +26,12 @@
 #include <linux/sysfs.h>
 
 static u8 hmat_revision;
+static int hmat_disable __initdata;
+
+void __init disable_hmat(void)
+{
+	hmat_disable = 1;
+}
 
 static LIST_HEAD(targets);
 static LIST_HEAD(initiators);
@@ -865,7 +871,7 @@ static __init int hmat_init(void)
 	enum acpi_hmat_type i;
 	acpi_status status;
 
-	if (srat_disabled())
+	if (srat_disabled() || hmat_disable)
 		return 0;
 
 	status = acpi_get_table(ACPI_SIG_SRAT, 0, &tbl);
diff --git a/include/acpi/acpi_numa.h b/include/acpi/acpi_numa.h
index 09eb3bc20ff5..801f90488814 100644
--- a/include/acpi/acpi_numa.h
+++ b/include/acpi/acpi_numa.h
@@ -28,4 +28,12 @@ static inline int pxm_to_node(int pxm)
 	return 0;
 }
 #endif				/* CONFIG_ACPI_NUMA */
+
+#ifdef CONFIG_ACPI_HMAT
+extern void disable_hmat(void);
+#else				/* CONFIG_ACPI_HMAT */
+static inline void disable_hmat(void)
+{
+}
+#endif				/* CONFIG_ACPI_HMAT */
 #endif				/* __ACP_NUMA_H */
diff --git a/include/linux/acpi.h b/include/linux/acpi.h
index 0d30528e37a5..c8b0d94403b8 100644
--- a/include/linux/acpi.h
+++ b/include/linux/acpi.h
@@ -715,6 +715,8 @@ static inline u64 acpi_arch_get_root_pointer(void)
 #define ACPI_HANDLE_FWNODE(fwnode)	(NULL)
 #define ACPI_DEVICE_CLASS(_cls, _msk)	.cls = (0), .cls_msk = (0),
 
+#include <acpi/acpi_numa.h>
+
 struct fwnode_handle;
 
 static inline bool acpi_dev_found(const char *hid)
