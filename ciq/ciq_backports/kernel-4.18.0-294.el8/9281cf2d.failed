ibmvnic: avoid memset null scrq msgs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Dany Madden <drt@linux.ibm.com>
commit 9281cf2d584083a450fd65fd27cc5f0e692f6e30
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/9281cf2d.failed

scrq->msgs could be NULL during device reset, causing Linux to crash.
So, check before memset scrq->msgs.

Fixes: c8b2ad0a4a901 ("ibmvnic: Sanitize entire SCRQ buffer on reset")
	Signed-off-by: Dany Madden <drt@linux.ibm.com>
	Signed-off-by: Lijun Pan <ljp@linux.ibm.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 9281cf2d584083a450fd65fd27cc5f0e692f6e30)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index 8ead8ff323ca,939a276dae7d..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -2962,11 -2856,14 +2969,22 @@@ static int reset_one_sub_crq_queue(stru
  		irq_dispose_mapping(scrq->irq);
  		scrq->irq = 0;
  	}
++<<<<<<< HEAD
 +
 +	memset(scrq->msgs, 0, 4 * PAGE_SIZE);
 +	atomic_set(&scrq->used, 0);
 +	scrq->cur = 0;
 +	scrq->ind_buf.index = 0;
++=======
+ 	if (scrq->msgs) {
+ 		memset(scrq->msgs, 0, 4 * PAGE_SIZE);
+ 		atomic_set(&scrq->used, 0);
+ 		scrq->cur = 0;
+ 	} else {
+ 		netdev_dbg(adapter->netdev, "Invalid scrq reset\n");
+ 		return -EINVAL;
+ 	}
++>>>>>>> 9281cf2d5840 (ibmvnic: avoid memset null scrq msgs)
  
  	rc = h_reg_sub_crq(adapter->vdev->unit_address, scrq->msg_token,
  			   4 * PAGE_SIZE, &scrq->crq_num, &scrq->hw_irq);
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
