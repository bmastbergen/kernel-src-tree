s390/pci: fix PF/VF linking on hot plug

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Niklas Schnelle <schnelle@linux.ibm.com>
commit b97bf44f99155e57088e16974afb1f2d7b5287aa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b97bf44f.failed

Currently there are four places in which a PCI function is scanned
and made available to drivers:
 1. In pci_scan_root_bus() as part of the initial zbus
    creation.
 2. In zpci_bus_add_devices() when registering
    a device in configured state on a zbus that has already been
    scanned.
 3. When a function is already known to zPCI (in reserved/standby state)
    and configuration is triggered through firmware by PEC 0x301.
 4. When a device is already known to zPCI (in standby/reserved state)
    and configuration is triggered from within Linux using
    enable_slot().

The PF/VF linking step and setting of pdev->is_virtfn introduced with
commit e5794cf1a270 ("s390/pci: create links between PFs and VFs") was
only triggered for the second case, which is where VFs created through
sriov_numvfs usually land. However unlike some other platforms but like
POWER VFs can be individually enabled/disabled through
/sys/bus/pci/slots.

Fix this by doing VF setup as part of pcibios_bus_add_device() which is
called in all of the above cases.

Finally to remove the PF/VF links call the common code
pci_iov_remove_virtfn() function to remove linked VFs.
This takes care of the necessary sysfs cleanup.

Fixes: e5794cf1a270 ("s390/pci: create links between PFs and VFs")
	Cc: <stable@vger.kernel.org> # 5.8: 2f0230b2f2d5: s390/pci: re-introduce zpci_remove_device()
	Cc: <stable@vger.kernel.org> # 5.8
	Acked-by: Pierre Morel <pmorel@linux.ibm.com>
	Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit b97bf44f99155e57088e16974afb1f2d7b5287aa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/pci/pci.c
#	arch/s390/pci/pci_bus.c
#	arch/s390/pci/pci_bus.h
diff --cc arch/s390/pci/pci.c
index 3ca1c80f304d,4b62d6b55024..000000000000
--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@@ -760,6 -672,19 +760,22 @@@ int zpci_disable_device(struct zpci_de
  }
  EXPORT_SYMBOL_GPL(zpci_disable_device);
  
++<<<<<<< HEAD
++=======
+ void zpci_remove_device(struct zpci_dev *zdev)
+ {
+ 	struct zpci_bus *zbus = zdev->zbus;
+ 	struct pci_dev *pdev;
+ 
+ 	pdev = pci_get_slot(zbus->bus, zdev->devfn);
+ 	if (pdev) {
+ 		if (pdev->is_virtfn)
+ 			return zpci_remove_virtfn(pdev, zdev->vfn);
+ 		pci_stop_and_remove_bus_device_locked(pdev);
+ 	}
+ }
+ 
++>>>>>>> b97bf44f9915 (s390/pci: fix PF/VF linking on hot plug)
  int zpci_create_device(struct zpci_dev *zdev)
  {
  	int rc;
* Unmerged path arch/s390/pci/pci_bus.c
* Unmerged path arch/s390/pci/pci_bus.h
* Unmerged path arch/s390/pci/pci.c
* Unmerged path arch/s390/pci/pci_bus.c
* Unmerged path arch/s390/pci/pci_bus.h
