cpufreq: intel_pstate: Tweak the EPP sysfs interface

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit b388eb58ce47484a330681f09d1d058fe122c744
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b388eb58.failed

Modify the EPP sysfs interface to reject attempts to change the EPP
to values different from 0 ("performance") in the active mode with
the "performance" policy (ie. scaling_governor set to "performance"),
to avoid situations in which the kernel appears to discard data
passed to it via the EPP sysfs attribute.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Reviewed-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
	Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
(cherry picked from commit b388eb58ce47484a330681f09d1d058fe122c744)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index 46665cfef5ca,b308c39b6204..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -668,14 -684,15 +668,26 @@@ static int intel_pstate_set_energy_pref
  		else if (epp == -EINVAL)
  			epp = epp_values[pref_index - 1];
  
++<<<<<<< HEAD
 +		value |= (u64)epp << 24;
 +		/*
 +		 * The only other updater of hwp_req_cached in the active mode,
 +		 * intel_pstate_hwp_set(), is called under the same lock as this
 +		 * function, so it cannot run in parallel with the update below.
 +		 */
 +		WRITE_ONCE(cpu_data->hwp_req_cached, value);
 +		ret = wrmsrl_on_cpu(cpu_data->cpu, MSR_HWP_REQUEST, value);
++=======
+ 		/*
+ 		 * To avoid confusion, refuse to set EPP to any values different
+ 		 * from 0 (performance) if the current policy is "performance",
+ 		 * because those values would be overridden.
+ 		 */
+ 		if (epp > 0 && cpu_data->policy == CPUFREQ_POLICY_PERFORMANCE)
+ 			return -EBUSY;
+ 
+ 		ret = intel_pstate_set_epp(cpu_data, epp);
++>>>>>>> b388eb58ce47 (cpufreq: intel_pstate: Tweak the EPP sysfs interface)
  	} else {
  		if (epp == -EINVAL)
  			epp = (pref_index - 1) << 2;
diff --git a/Documentation/admin-guide/pm/intel_pstate.rst b/Documentation/admin-guide/pm/intel_pstate.rst
index f36718e2635c..c1c78647606f 100644
--- a/Documentation/admin-guide/pm/intel_pstate.rst
+++ b/Documentation/admin-guide/pm/intel_pstate.rst
@@ -116,7 +116,9 @@ Energy-Performance Bias (EPB) knob (otherwise), which means that the processor's
 internal P-state selection logic is expected to focus entirely on performance.
 
 This will override the EPP/EPB setting coming from the ``sysfs`` interface
-(see `Energy vs Performance Hints`_ below).
+(see `Energy vs Performance Hints`_ below).  Moreover, any attempts to change
+the EPP/EPB to a value different from 0 ("performance") via ``sysfs`` in this
+configuration will be rejected.
 
 Also, in this configuration the range of P-states available to the processor's
 internal P-state selection logic is always restricted to the upper boundary
* Unmerged path drivers/cpufreq/intel_pstate.c
