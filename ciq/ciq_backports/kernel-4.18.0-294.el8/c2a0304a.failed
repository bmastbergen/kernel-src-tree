x86/boot/compressed/64: Call set_sev_encryption_mask() earlier

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] boot/compressed/64: Call set_sev_encryption_mask() earlier (Vitaly Kuznetsov) [1868080]
Rebuild_FUZZ: 96.67%
commit-author Joerg Roedel <jroedel@suse.de>
commit c2a0304a286f386e45cea3f4b0617f0813de67fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/c2a0304a.failed

Call set_sev_encryption_mask() while still on the stage 1 #VC-handler
because the stage 2 handler needs the kernel's own page tables to be
set up, to which calling set_sev_encryption_mask() is a prerequisite.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20200907131613.12703-21-joro@8bytes.org
(cherry picked from commit c2a0304a286f386e45cea3f4b0617f0813de67fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/head_64.S
diff --cc arch/x86/boot/compressed/head_64.S
index 8b6d90a596e6,42190c00d9c2..000000000000
--- a/arch/x86/boot/compressed/head_64.S
+++ b/arch/x86/boot/compressed/head_64.S
@@@ -504,6 -543,21 +504,24 @@@ ENDPROC(efi64_stub_entry
  	rep	stosq
  
  /*
++<<<<<<< HEAD
++=======
+  * If running as an SEV guest, the encryption mask is required in the
+  * page-table setup code below. When the guest also has SEV-ES enabled
+  * set_sev_encryption_mask() will cause #VC exceptions, but the stage2
+  * handler can't map its GHCB because the page-table is not set up yet.
+  * So set up the encryption mask here while still on the stage1 #VC
+  * handler. Then load stage2 IDT and switch to the kernel's own
+  * page-table.
+  */
+ 	pushq	%rsi
+ 	call	set_sev_encryption_mask
+ 	call	load_stage2_idt
+ 	call	initialize_identity_maps
+ 	popq	%rsi
+ 
+ /*
++>>>>>>> c2a0304a286f (x86/boot/compressed/64: Call set_sev_encryption_mask() earlier)
   * Do the extraction, and jump to the new kernel..
   */
  	pushq	%rsi			/* Save the real mode argument */
* Unmerged path arch/x86/boot/compressed/head_64.S
diff --git a/arch/x86/boot/compressed/kaslr_64.c b/arch/x86/boot/compressed/kaslr_64.c
index 9557c5a15b91..9de93ff12d3e 100644
--- a/arch/x86/boot/compressed/kaslr_64.c
+++ b/arch/x86/boot/compressed/kaslr_64.c
@@ -77,9 +77,6 @@ static struct x86_mapping_info mapping_info;
 /* Locates and clears a region for a new top level page table. */
 void initialize_identity_maps(void)
 {
-	/* If running as an SEV guest, the encryption mask is required. */
-	set_sev_encryption_mask();
-
 	/* Exclude the encryption mask from __PHYSICAL_MASK */
 	physical_mask &= ~sme_me_mask;
 
