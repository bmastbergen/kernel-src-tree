kasan: initialize tag to 0xff in __kasan_kmalloc

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Nathan Chancellor <natechancellor@gmail.com>
commit 0600597c854e53d2f9b7a6a718c1da2b8b4cb4db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/0600597c.failed

When building with -Wuninitialized and CONFIG_KASAN_SW_TAGS unset, Clang
warns:

mm/kasan/common.c:484:40: warning: variable 'tag' is uninitialized when
used here [-Wuninitialized]
        kasan_unpoison_shadow(set_tag(object, tag), size);
                                              ^~~

set_tag ignores tag in this configuration but clang doesn't realize it at
this point in its pipeline, as it points to arch_kasan_set_tag as being
the point where it is used, which will later be expanded to (void
*)(object) without a use of tag.  Initialize tag to 0xff, as it removes
this warning and doesn't change the meaning of the code.

Link: https://github.com/ClangBuiltLinux/linux/issues/465
Link: http://lkml.kernel.org/r/20190502163057.6603-1-natechancellor@gmail.com
Fixes: 7f94ffbc4c6a ("kasan: add hooks implementation for tag-based mode")
	Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
	Reviewed-by: Andrey Konovalov <andreyknvl@google.com>
	Reviewed-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Alexander Potapenko <glider@google.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: Nick Desaulniers <ndesaulniers@google.com>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0600597c854e53d2f9b7a6a718c1da2b8b4cb4db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/kasan/kasan.c
diff --cc mm/kasan/kasan.c
index d79269dd4b58,242fdc01aaa9..000000000000
--- a/mm/kasan/kasan.c
+++ b/mm/kasan/kasan.c
@@@ -534,6 -464,7 +534,10 @@@ void * __must_check kasan_kmalloc(struc
  {
  	unsigned long redzone_start;
  	unsigned long redzone_end;
++<<<<<<< HEAD:mm/kasan/kasan.c
++=======
+ 	u8 tag = 0xff;
++>>>>>>> 0600597c854e (kasan: initialize tag to 0xff in __kasan_kmalloc):mm/kasan/common.c
  
  	if (gfpflags_allow_blocking(flags))
  		quarantine_reduce();
* Unmerged path mm/kasan/kasan.c
