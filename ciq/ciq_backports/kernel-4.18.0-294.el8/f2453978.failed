NFSD: Fix improperly-formatted Doxygen comments

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit f2453978a4f2ddb1938fa80e9bf0c9d6252bd5f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/f2453978.failed

fs/nfsd/nfsctl.c:256: warning: Function parameter or member 'file' not described in 'write_unlock_ip'
fs/nfsd/nfsctl.c:256: warning: Function parameter or member 'buf' not described in 'write_unlock_ip'
fs/nfsd/nfsctl.c:256: warning: Function parameter or member 'size' not described in 'write_unlock_ip'
fs/nfsd/nfsctl.c:295: warning: Function parameter or member 'file' not described in 'write_unlock_fs'
fs/nfsd/nfsctl.c:295: warning: Function parameter or member 'buf' not described in 'write_unlock_fs'
fs/nfsd/nfsctl.c:295: warning: Function parameter or member 'size' not described in 'write_unlock_fs'
fs/nfsd/nfsctl.c:352: warning: Function parameter or member 'file' not described in 'write_filehandle'
fs/nfsd/nfsctl.c:352: warning: Function parameter or member 'buf' not described in 'write_filehandle'
fs/nfsd/nfsctl.c:352: warning: Function parameter or member 'size' not described in 'write_filehandle'
fs/nfsd/nfsctl.c:434: warning: Function parameter or member 'file' not described in 'write_threads'
fs/nfsd/nfsctl.c:434: warning: Function parameter or member 'buf' not described in 'write_threads'
fs/nfsd/nfsctl.c:434: warning: Function parameter or member 'size' not described in 'write_threads'
fs/nfsd/nfsctl.c:478: warning: Function parameter or member 'file' not described in 'write_pool_threads'
fs/nfsd/nfsctl.c:478: warning: Function parameter or member 'buf' not described in 'write_pool_threads'
fs/nfsd/nfsctl.c:478: warning: Function parameter or member 'size' not described in 'write_pool_threads'
fs/nfsd/nfsctl.c:697: warning: Function parameter or member 'file' not described in 'write_versions'
fs/nfsd/nfsctl.c:697: warning: Function parameter or member 'buf' not described in 'write_versions'
fs/nfsd/nfsctl.c:697: warning: Function parameter or member 'size' not described in 'write_versions'
fs/nfsd/nfsctl.c:858: warning: Function parameter or member 'file' not described in 'write_ports'
fs/nfsd/nfsctl.c:858: warning: Function parameter or member 'buf' not described in 'write_ports'
fs/nfsd/nfsctl.c:858: warning: Function parameter or member 'size' not described in 'write_ports'
fs/nfsd/nfsctl.c:892: warning: Function parameter or member 'file' not described in 'write_maxblksize'
fs/nfsd/nfsctl.c:892: warning: Function parameter or member 'buf' not described in 'write_maxblksize'
fs/nfsd/nfsctl.c:892: warning: Function parameter or member 'size' not described in 'write_maxblksize'
fs/nfsd/nfsctl.c:941: warning: Function parameter or member 'file' not described in 'write_maxconn'
fs/nfsd/nfsctl.c:941: warning: Function parameter or member 'buf' not described in 'write_maxconn'
fs/nfsd/nfsctl.c:941: warning: Function parameter or member 'size' not described in 'write_maxconn'
fs/nfsd/nfsctl.c:1023: warning: Function parameter or member 'file' not described in 'write_leasetime'
fs/nfsd/nfsctl.c:1023: warning: Function parameter or member 'buf' not described in 'write_leasetime'
fs/nfsd/nfsctl.c:1023: warning: Function parameter or member 'size' not described in 'write_leasetime'
fs/nfsd/nfsctl.c:1039: warning: Function parameter or member 'file' not described in 'write_gracetime'
fs/nfsd/nfsctl.c:1039: warning: Function parameter or member 'buf' not described in 'write_gracetime'
fs/nfsd/nfsctl.c:1039: warning: Function parameter or member 'size' not described in 'write_gracetime'
fs/nfsd/nfsctl.c:1094: warning: Function parameter or member 'file' not described in 'write_recoverydir'
fs/nfsd/nfsctl.c:1094: warning: Function parameter or member 'buf' not described in 'write_recoverydir'
fs/nfsd/nfsctl.c:1094: warning: Function parameter or member 'size' not described in 'write_recoverydir'
fs/nfsd/nfsctl.c:1125: warning: Function parameter or member 'file' not described in 'write_v4_end_grace'
fs/nfsd/nfsctl.c:1125: warning: Function parameter or member 'buf' not described in 'write_v4_end_grace'
fs/nfsd/nfsctl.c:1125: warning: Function parameter or member 'size' not described in 'write_v4_end_grace'

fs/nfsd/nfs4proc.c:1164: warning: Function parameter or member 'nss' not described in 'nfsd4_interssc_connect'
fs/nfsd/nfs4proc.c:1164: warning: Function parameter or member 'rqstp' not described in 'nfsd4_interssc_connect'
fs/nfsd/nfs4proc.c:1164: warning: Function parameter or member 'mount' not described in 'nfsd4_interssc_connect'
fs/nfsd/nfs4proc.c:1262: warning: Function parameter or member 'rqstp' not described in 'nfsd4_setup_inter_ssc'
fs/nfsd/nfs4proc.c:1262: warning: Function parameter or member 'cstate' not described in 'nfsd4_setup_inter_ssc'
fs/nfsd/nfs4proc.c:1262: warning: Function parameter or member 'copy' not described in 'nfsd4_setup_inter_ssc'
fs/nfsd/nfs4proc.c:1262: warning: Function parameter or member 'mount' not described in 'nfsd4_setup_inter_ssc'

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
(cherry picked from commit f2453978a4f2ddb1938fa80e9bf0c9d6252bd5f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfs4proc.c
diff --cc fs/nfsd/nfs4proc.c
index 3b8e1548e6e2,ec1b28d08c1c..000000000000
--- a/fs/nfsd/nfs4proc.c
+++ b/fs/nfsd/nfs4proc.c
@@@ -1135,6 -1144,206 +1135,209 @@@ void nfsd4_shutdown_copy(struct nfs4_cl
  	while ((copy = nfsd4_get_copy(clp)) != NULL)
  		nfsd4_stop_copy(copy);
  }
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_NFSD_V4_2_INTER_SSC
+ 
+ extern struct file *nfs42_ssc_open(struct vfsmount *ss_mnt,
+ 				   struct nfs_fh *src_fh,
+ 				   nfs4_stateid *stateid);
+ extern void nfs42_ssc_close(struct file *filep);
+ 
+ extern void nfs_sb_deactive(struct super_block *sb);
+ 
+ #define NFSD42_INTERSSC_MOUNTOPS "vers=4.2,addr=%s,sec=sys"
+ 
+ /*
+  * Support one copy source server for now.
+  */
+ static __be32
+ nfsd4_interssc_connect(struct nl4_server *nss, struct svc_rqst *rqstp,
+ 		       struct vfsmount **mount)
+ {
+ 	struct file_system_type *type;
+ 	struct vfsmount *ss_mnt;
+ 	struct nfs42_netaddr *naddr;
+ 	struct sockaddr_storage tmp_addr;
+ 	size_t tmp_addrlen, match_netid_len = 3;
+ 	char *startsep = "", *endsep = "", *match_netid = "tcp";
+ 	char *ipaddr, *dev_name, *raw_data;
+ 	int len, raw_len;
+ 	__be32 status = nfserr_inval;
+ 
+ 	naddr = &nss->u.nl4_addr;
+ 	tmp_addrlen = rpc_uaddr2sockaddr(SVC_NET(rqstp), naddr->addr,
+ 					 naddr->addr_len,
+ 					 (struct sockaddr *)&tmp_addr,
+ 					 sizeof(tmp_addr));
+ 	if (tmp_addrlen == 0)
+ 		goto out_err;
+ 
+ 	if (tmp_addr.ss_family == AF_INET6) {
+ 		startsep = "[";
+ 		endsep = "]";
+ 		match_netid = "tcp6";
+ 		match_netid_len = 4;
+ 	}
+ 
+ 	if (naddr->netid_len != match_netid_len ||
+ 		strncmp(naddr->netid, match_netid, naddr->netid_len))
+ 		goto out_err;
+ 
+ 	/* Construct the raw data for the vfs_kern_mount call */
+ 	len = RPC_MAX_ADDRBUFLEN + 1;
+ 	ipaddr = kzalloc(len, GFP_KERNEL);
+ 	if (!ipaddr)
+ 		goto out_err;
+ 
+ 	rpc_ntop((struct sockaddr *)&tmp_addr, ipaddr, len);
+ 
+ 	/* 2 for ipv6 endsep and startsep. 3 for ":/" and trailing '/0'*/
+ 
+ 	raw_len = strlen(NFSD42_INTERSSC_MOUNTOPS) + strlen(ipaddr);
+ 	raw_data = kzalloc(raw_len, GFP_KERNEL);
+ 	if (!raw_data)
+ 		goto out_free_ipaddr;
+ 
+ 	snprintf(raw_data, raw_len, NFSD42_INTERSSC_MOUNTOPS, ipaddr);
+ 
+ 	status = nfserr_nodev;
+ 	type = get_fs_type("nfs");
+ 	if (!type)
+ 		goto out_free_rawdata;
+ 
+ 	/* Set the server:<export> for the vfs_kern_mount call */
+ 	dev_name = kzalloc(len + 5, GFP_KERNEL);
+ 	if (!dev_name)
+ 		goto out_free_rawdata;
+ 	snprintf(dev_name, len + 5, "%s%s%s:/", startsep, ipaddr, endsep);
+ 
+ 	/* Use an 'internal' mount: SB_KERNMOUNT -> MNT_INTERNAL */
+ 	ss_mnt = vfs_kern_mount(type, SB_KERNMOUNT, dev_name, raw_data);
+ 	module_put(type->owner);
+ 	if (IS_ERR(ss_mnt))
+ 		goto out_free_devname;
+ 
+ 	status = 0;
+ 	*mount = ss_mnt;
+ 
+ out_free_devname:
+ 	kfree(dev_name);
+ out_free_rawdata:
+ 	kfree(raw_data);
+ out_free_ipaddr:
+ 	kfree(ipaddr);
+ out_err:
+ 	return status;
+ }
+ 
+ static void
+ nfsd4_interssc_disconnect(struct vfsmount *ss_mnt)
+ {
+ 	nfs_sb_deactive(ss_mnt->mnt_sb);
+ 	mntput(ss_mnt);
+ }
+ 
+ /*
+  * Verify COPY destination stateid.
+  *
+  * Connect to the source server with NFSv4.1.
+  * Create the source struct file for nfsd_copy_range.
+  * Called with COPY cstate:
+  *    SAVED_FH: source filehandle
+  *    CURRENT_FH: destination filehandle
+  */
+ static __be32
+ nfsd4_setup_inter_ssc(struct svc_rqst *rqstp,
+ 		      struct nfsd4_compound_state *cstate,
+ 		      struct nfsd4_copy *copy, struct vfsmount **mount)
+ {
+ 	struct svc_fh *s_fh = NULL;
+ 	stateid_t *s_stid = &copy->cp_src_stateid;
+ 	__be32 status = nfserr_inval;
+ 
+ 	/* Verify the destination stateid and set dst struct file*/
+ 	status = nfs4_preprocess_stateid_op(rqstp, cstate, &cstate->current_fh,
+ 					    &copy->cp_dst_stateid,
+ 					    WR_STATE, &copy->nf_dst, NULL);
+ 	if (status)
+ 		goto out;
+ 
+ 	status = nfsd4_interssc_connect(&copy->cp_src, rqstp, mount);
+ 	if (status)
+ 		goto out;
+ 
+ 	s_fh = &cstate->save_fh;
+ 
+ 	copy->c_fh.size = s_fh->fh_handle.fh_size;
+ 	memcpy(copy->c_fh.data, &s_fh->fh_handle.fh_base, copy->c_fh.size);
+ 	copy->stateid.seqid = cpu_to_be32(s_stid->si_generation);
+ 	memcpy(copy->stateid.other, (void *)&s_stid->si_opaque,
+ 	       sizeof(stateid_opaque_t));
+ 
+ 	status = 0;
+ out:
+ 	return status;
+ }
+ 
+ static void
+ nfsd4_cleanup_inter_ssc(struct vfsmount *ss_mnt, struct nfsd_file *src,
+ 			struct nfsd_file *dst)
+ {
+ 	nfs42_ssc_close(src->nf_file);
+ 	nfsd_file_put(src);
+ 	nfsd_file_put(dst);
+ 	mntput(ss_mnt);
+ }
+ 
+ #else /* CONFIG_NFSD_V4_2_INTER_SSC */
+ 
+ static __be32
+ nfsd4_setup_inter_ssc(struct svc_rqst *rqstp,
+ 		      struct nfsd4_compound_state *cstate,
+ 		      struct nfsd4_copy *copy,
+ 		      struct vfsmount **mount)
+ {
+ 	*mount = NULL;
+ 	return nfserr_inval;
+ }
+ 
+ static void
+ nfsd4_cleanup_inter_ssc(struct vfsmount *ss_mnt, struct nfsd_file *src,
+ 			struct nfsd_file *dst)
+ {
+ }
+ 
+ static void
+ nfsd4_interssc_disconnect(struct vfsmount *ss_mnt)
+ {
+ }
+ 
+ static struct file *nfs42_ssc_open(struct vfsmount *ss_mnt,
+ 				   struct nfs_fh *src_fh,
+ 				   nfs4_stateid *stateid)
+ {
+ 	return NULL;
+ }
+ #endif /* CONFIG_NFSD_V4_2_INTER_SSC */
+ 
+ static __be32
+ nfsd4_setup_intra_ssc(struct svc_rqst *rqstp,
+ 		      struct nfsd4_compound_state *cstate,
+ 		      struct nfsd4_copy *copy)
+ {
+ 	return nfsd4_verify_copy(rqstp, cstate, &copy->cp_src_stateid,
+ 				 &copy->nf_src, &copy->cp_dst_stateid,
+ 				 &copy->nf_dst);
+ }
+ 
+ static void
+ nfsd4_cleanup_intra_ssc(struct nfsd_file *src, struct nfsd_file *dst)
+ {
+ 	nfsd_file_put(src);
+ 	nfsd_file_put(dst);
+ }
++>>>>>>> f2453978a4f2 (NFSD: Fix improperly-formatted Doxygen comments)
  
  static void nfsd4_cb_offload_release(struct nfsd4_callback *cb)
  {
* Unmerged path fs/nfsd/nfs4proc.c
diff --git a/fs/nfsd/nfsctl.c b/fs/nfsd/nfsctl.c
index f831a0a9bd66..e348474ff011 100644
--- a/fs/nfsd/nfsctl.c
+++ b/fs/nfsd/nfsctl.c
@@ -236,7 +236,7 @@ static inline struct net *netns(struct file *file)
 	return file_inode(file)->i_sb->s_fs_info;
 }
 
-/**
+/*
  * write_unlock_ip - Release all locks used by a client
  *
  * Experimental.
@@ -275,7 +275,7 @@ static ssize_t write_unlock_ip(struct file *file, char *buf, size_t size)
 	return nlmsvc_unlock_all_by_ip(sap);
 }
 
-/**
+/*
  * write_unlock_fs - Release all locks on a local file system
  *
  * Experimental.
@@ -325,7 +325,7 @@ static ssize_t write_unlock_fs(struct file *file, char *buf, size_t size)
 	return error;
 }
 
-/**
+/*
  * write_filehandle - Get a variable-length NFS file handle by path
  *
  * On input, the buffer contains a '\n'-terminated C string comprised of
@@ -400,7 +400,7 @@ static ssize_t write_filehandle(struct file *file, char *buf, size_t size)
 	return mesg - buf;	
 }
 
-/**
+/*
  * write_threads - Start NFSD, or report the current number of running threads
  *
  * Input:
@@ -450,7 +450,7 @@ static ssize_t write_threads(struct file *file, char *buf, size_t size)
 	return scnprintf(buf, SIMPLE_TRANSACTION_LIMIT, "%d\n", rv);
 }
 
-/**
+/*
  * write_pool_threads - Set or report the current number of threads per pool
  *
  * Input:
@@ -659,7 +659,7 @@ static ssize_t __write_versions(struct file *file, char *buf, size_t size)
 	return tlen + len;
 }
 
-/**
+/*
  * write_versions - Set or report the available NFS protocol versions
  *
  * Input:
@@ -809,7 +809,7 @@ static ssize_t __write_ports(struct file *file, char *buf, size_t size,
 	return -EINVAL;
 }
 
-/**
+/*
  * write_ports - Pass a socket file descriptor or transport name to listen on
  *
  * Input:
@@ -865,7 +865,7 @@ static ssize_t write_ports(struct file *file, char *buf, size_t size)
 
 int nfsd_max_blksize;
 
-/**
+/*
  * write_maxblksize - Set or report the current NFS blksize
  *
  * Input:
@@ -915,7 +915,7 @@ static ssize_t write_maxblksize(struct file *file, char *buf, size_t size)
 							nfsd_max_blksize);
 }
 
-/**
+/*
  * write_maxconn - Set or report the current max number of connections
  *
  * Input:
@@ -996,7 +996,7 @@ static ssize_t nfsd4_write_time(struct file *file, char *buf, size_t size,
 	return rv;
 }
 
-/**
+/*
  * write_leasetime - Set or report the current NFSv4 lease time
  *
  * Input:
@@ -1023,7 +1023,7 @@ static ssize_t write_leasetime(struct file *file, char *buf, size_t size)
 	return nfsd4_write_time(file, buf, size, &nn->nfsd4_lease, nn);
 }
 
-/**
+/*
  * write_gracetime - Set or report current NFSv4 grace period time
  *
  * As above, but sets the time of the NFSv4 grace period.
@@ -1067,7 +1067,7 @@ static ssize_t __write_recoverydir(struct file *file, char *buf, size_t size,
 							nfs4_recoverydir());
 }
 
-/**
+/*
  * write_recoverydir - Set or report the pathname of the recovery directory
  *
  * Input:
@@ -1099,7 +1099,7 @@ static ssize_t write_recoverydir(struct file *file, char *buf, size_t size)
 	return rv;
 }
 
-/**
+/*
  * write_v4_end_grace - release grace period for nfsd's v4.x lock manager
  *
  * Input:
