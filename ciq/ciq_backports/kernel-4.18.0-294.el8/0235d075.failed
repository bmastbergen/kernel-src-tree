mptcp: mark as fallback even early ones

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit 0235d075a592dfde575df81f150feb0d95a5ef5c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/0235d075.failed

In the unlikely event of a failure at connect time,
we currently clear the request_mptcp flag - so that
the MPC handshake is not started at all, but the msk
is not explicitly marked as fallback.

This would lead to later insertion of wrong DSS options
in the xmitted packets, in violation of RFC specs and
possibly fooling the peer.

Fixes: e1ff9e82e2ea ("net: mptcp: improve fallback to TCP")
	Reviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Tested-by: Christoph Paasch <cpaasch@apple.com>
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0235d075a592dfde575df81f150feb0d95a5ef5c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/protocol.c
diff --cc net/mptcp/protocol.c
index ad2f879f7449,2936413171be..000000000000
--- a/net/mptcp/protocol.c
+++ b/net/mptcp/protocol.c
@@@ -1972,8 -1982,10 +1979,15 @@@ static int mptcp_stream_connect(struct 
  	 * TCP option space.
  	 */
  	if (rcu_access_pointer(tcp_sk(ssock->sk)->md5sig_info))
++<<<<<<< HEAD
 +		mptcp_subflow_ctx(ssock->sk)->request_mptcp = 0;
 +#endif
++=======
+ 		mptcp_subflow_early_fallback(msk, subflow);
+ #endif
+ 	if (subflow->request_mptcp && mptcp_token_new_connect(ssock->sk))
+ 		mptcp_subflow_early_fallback(msk, subflow);
++>>>>>>> 0235d075a592 (mptcp: mark as fallback even early ones)
  
  do_connect:
  	err = ssock->ops->connect(ssock, uaddr, addr_len, flags);
* Unmerged path net/mptcp/protocol.c
