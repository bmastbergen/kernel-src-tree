selftests: fixes for UDP GRO

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit ada641ff6ed34a125fbf62ec79733352ffd4305d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ada641ff.failed

The current implementation for UDP GRO tests is racy: the receiver
may flush the RX queue while the sending is still transmitting and
incorrectly report RX errors, with a wrong number of packet received.

Add explicit timeouts to the receiver for both connection activation
(first packet received for UDP) and reception completion, so that
in the above critical scenario the receiver will wait for the
transfer completion.

Fixes: 3327a9c46352 ("selftests: add functionals test for UDP GRO")
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Acked-by: Willem de Bruijn <willemb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ada641ff6ed34a125fbf62ec79733352ffd4305d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/net/udpgro.sh
#	tools/testing/selftests/net/udpgso_bench_rx.c
diff --cc tools/testing/selftests/net/udpgso_bench_rx.c
index 8f48d7fb32cf,db3d4a8b5a4c..000000000000
--- a/tools/testing/selftests/net/udpgso_bench_rx.c
+++ b/tools/testing/selftests/net/udpgso_bench_rx.c
@@@ -40,6 -40,14 +40,17 @@@ static bool cfg_tcp
  static bool cfg_verify;
  static bool cfg_read_all;
  static bool cfg_gro_segment;
++<<<<<<< HEAD
++=======
+ static int  cfg_family		= PF_INET6;
+ static int  cfg_alen 		= sizeof(struct sockaddr_in6);
+ static int  cfg_expected_pkt_nr;
+ static int  cfg_expected_pkt_len;
+ static int  cfg_expected_gso_size;
+ static int  cfg_connect_timeout_ms;
+ static int  cfg_rcv_timeout_ms;
+ static struct sockaddr_storage cfg_bind_addr;
++>>>>>>> ada641ff6ed3 (selftests: fixes for UDP GRO)
  
  static bool interrupted;
  static unsigned long packets, bytes;
@@@ -202,15 -283,30 +221,39 @@@ static void do_flush_udp(int fd
  
  static void usage(const char *filepath)
  {
++<<<<<<< HEAD
 +	error(1, 0, "Usage: %s [-Grtv] [-p port]", filepath);
++=======
+ 	error(1, 0, "Usage: %s [-C connect_timeout] [-Grtv] [-b addr] [-p port]"
+ 	      " [-l pktlen] [-n packetnr] [-R rcv_timeout] [-S gsosize]",
+ 	      filepath);
++>>>>>>> ada641ff6ed3 (selftests: fixes for UDP GRO)
  }
  
  static void parse_opts(int argc, char **argv)
  {
  	int c;
  
++<<<<<<< HEAD
 +	while ((c = getopt(argc, argv, "Gp:rtv")) != -1) {
 +		switch (c) {
++=======
+ 	/* bind to any by default */
+ 	setup_sockaddr(PF_INET6, "::", &cfg_bind_addr);
+ 	while ((c = getopt(argc, argv, "4b:C:Gl:n:p:rR:S:tv")) != -1) {
+ 		switch (c) {
+ 		case '4':
+ 			cfg_family = PF_INET;
+ 			cfg_alen = sizeof(struct sockaddr_in);
+ 			setup_sockaddr(PF_INET, "0.0.0.0", &cfg_bind_addr);
+ 			break;
+ 		case 'b':
+ 			setup_sockaddr(cfg_family, optarg, &cfg_bind_addr);
+ 			break;
+ 		case 'C':
+ 			cfg_connect_timeout_ms = strtoul(optarg, NULL, 0);
+ 			break;
++>>>>>>> ada641ff6ed3 (selftests: fixes for UDP GRO)
  		case 'G':
  			cfg_gro_segment = true;
  			break;
@@@ -220,6 -322,12 +263,15 @@@
  		case 'r':
  			cfg_read_all = true;
  			break;
++<<<<<<< HEAD
++=======
+ 		case 'R':
+ 			cfg_rcv_timeout_ms = strtoul(optarg, NULL, 0);
+ 			break;
+ 		case 'S':
+ 			cfg_expected_gso_size = strtol(optarg, NULL, 0);
+ 			break;
++>>>>>>> ada641ff6ed3 (selftests: fixes for UDP GRO)
  		case 't':
  			cfg_tcp = true;
  			break;
@@@ -252,7 -361,7 +305,11 @@@ static void do_recv(void
  
  	treport = gettimeofday_ms() + 1000;
  	do {
++<<<<<<< HEAD
 +		do_poll(fd);
++=======
+ 		do_poll(fd, timeout_ms);
++>>>>>>> ada641ff6ed3 (selftests: fixes for UDP GRO)
  
  		if (cfg_tcp)
  			do_flush_tcp(fd);
@@@ -270,8 -379,14 +327,10 @@@
  			treport = tnow + 1000;
  		}
  
+ 		timeout_ms = cfg_rcv_timeout_ms;
+ 
  	} while (!interrupted);
  
 -	if (cfg_expected_pkt_nr && (packets != cfg_expected_pkt_nr))
 -		error(1, 0, "wrong packet number! got %ld, expected %d\n",
 -		      packets, cfg_expected_pkt_nr);
 -
  	if (close(fd))
  		error(1, errno, "close");
  }
* Unmerged path tools/testing/selftests/net/udpgro.sh
* Unmerged path tools/testing/selftests/net/udpgro.sh
* Unmerged path tools/testing/selftests/net/udpgso_bench_rx.c
