Bluetooth: btusb: Update boot parameter specific to SKU

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Kiran K <kiraank@gmail.com>
commit dc45d375cfa5676ca40b67c40e568cdfb9fa915c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/dc45d375.failed

boot parameter gets updated during firmware download process. Use the
updated boot parameter while doing soft reset of controller. This patch
fixes updating of boot parameter.

	Signed-off-by: Kiran K <kiran.k@intel.com>
	Reviewed-by: Chethan T N <chethan.tumkur.narayan@intel.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit dc45d375cfa5676ca40b67c40e568cdfb9fa915c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/btusb.c
diff --cc drivers/bluetooth/btusb.c
index 16b4132259d9,414575eccbad..000000000000
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@@ -2187,38 -2336,18 +2187,44 @@@ static bool btusb_setup_intel_new_get_f
  	return true;
  }
  
++<<<<<<< HEAD
 +static int btusb_setup_intel_new(struct hci_dev *hdev)
++=======
+ static int btusb_intel_download_firmware(struct hci_dev *hdev,
+ 					 struct intel_version *ver,
+ 					 struct intel_boot_params *params,
+ 					 u32 *boot_param)
++>>>>>>> dc45d375cfa5 (Bluetooth: btusb: Update boot parameter specific to SKU)
  {
 +	struct btusb_data *data = hci_get_drvdata(hdev);
 +	struct intel_version ver;
 +	struct intel_boot_params params;
  	const struct firmware *fw;
- 	u32 boot_param;
  	char fwname[64];
 +	ktime_t calltime, delta, rettime;
 +	unsigned long long duration;
  	int err;
 -	struct btusb_data *data = hci_get_drvdata(hdev);
  
 -	if (!ver || !params)
 -		return -EINVAL;
 +	BT_DBG("%s", hdev->name);
 +
 +	/* Set the default boot parameter to 0x0 and it is updated to
 +	 * SKU specific boot parameter after reading Intel_Write_Boot_Params
 +	 * command while downloading the firmware.
 +	 */
 +	boot_param = 0x00000000;
 +
 +	calltime = ktime_get();
 +
 +	/* Read the Intel version information to determine if the device
 +	 * is in bootloader mode or if it already has operational firmware
 +	 * loaded.
 +	 */
 +	err = btintel_read_version(hdev, &ver);
 +	if (err) {
 +		bt_dev_err(hdev, "Intel Read version failed (%d)", err);
 +		btintel_reset_to_bootloader(hdev);
 +		return err;
 +	}
  
  	/* The hardware platform number has a fixed value of 0x37 and
  	 * for now only accept this single value.
@@@ -2404,6 -2523,52 +2410,55 @@@
  		goto done;
  	}
  
++<<<<<<< HEAD
++=======
+ done:
+ 	release_firmware(fw);
+ 	return err;
+ }
+ 
+ static int btusb_setup_intel_new(struct hci_dev *hdev)
+ {
+ 	struct btusb_data *data = hci_get_drvdata(hdev);
+ 	struct intel_version ver;
+ 	struct intel_boot_params params;
+ 	u32 boot_param;
+ 	char ddcname[64];
+ 	ktime_t calltime, delta, rettime;
+ 	unsigned long long duration;
+ 	int err;
+ 	struct intel_debug_features features;
+ 
+ 	BT_DBG("%s", hdev->name);
+ 
+ 	/* Set the default boot parameter to 0x0 and it is updated to
+ 	 * SKU specific boot parameter after reading Intel_Write_Boot_Params
+ 	 * command while downloading the firmware.
+ 	 */
+ 	boot_param = 0x00000000;
+ 
+ 	calltime = ktime_get();
+ 
+ 	/* Read the Intel version information to determine if the device
+ 	 * is in bootloader mode or if it already has operational firmware
+ 	 * loaded.
+ 	 */
+ 	err = btintel_read_version(hdev, &ver);
+ 	if (err) {
+ 		bt_dev_err(hdev, "Intel Read version failed (%d)", err);
+ 		btintel_reset_to_bootloader(hdev);
+ 		return err;
+ 	}
+ 
+ 	err = btusb_intel_download_firmware(hdev, &ver, &params, &boot_param);
+ 	if (err)
+ 		return err;
+ 
+ 	/* controller is already having an operational firmware */
+ 	if (ver.fw_variant == 0x23)
+ 		goto finish;
+ 
++>>>>>>> dc45d375cfa5 (Bluetooth: btusb: Update boot parameter specific to SKU)
  	rettime = ktime_get();
  	delta = ktime_sub(rettime, calltime);
  	duration = (unsigned long long) ktime_to_ns(delta) >> 10;
* Unmerged path drivers/bluetooth/btusb.c
