selftests/bpf: Switch test_vmlinux to use hrtimer_range_start_ns.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [tools] selftests/bpf: Switch test_vmlinux to use hrtimer_range_start_ns (Yauheni Kaliuta) [1874005]
Rebuild_FUZZ: 99.22%
commit-author Hao Luo <haoluo@google.com>
commit 8d821b5db70723d27ee749b4870de90760606918
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/8d821b5d.failed

The test_vmlinux test uses hrtimer_nanosleep as hook to test tracing
programs. But in a kernel built by clang, which performs more aggresive
inlining, that function gets inlined into its caller SyS_nanosleep.
Therefore, even though fentry and kprobe do hook on the function,
they aren't triggered by the call to nanosleep in the test.

A possible fix is switching to use a function that is less likely to
be inlined, such as hrtimer_range_start_ns. The EXPORT_SYMBOL functions
shouldn't be inlined based on the description of [1], therefore safe
to use for this test. Also the arguments of this function include the
duration of sleep, therefore suitable for test verification.

[1] af3b56289be1 time: don't inline EXPORT_SYMBOL functions

Tested:
 In a clang build kernel, before this change, the test fails:

 test_vmlinux:PASS:skel_open 0 nsec
 test_vmlinux:PASS:skel_attach 0 nsec
 test_vmlinux:PASS:tp 0 nsec
 test_vmlinux:PASS:raw_tp 0 nsec
 test_vmlinux:PASS:tp_btf 0 nsec
 test_vmlinux:FAIL:kprobe not called
 test_vmlinux:FAIL:fentry not called

 After switching to hrtimer_range_start_ns, the test passes:

 test_vmlinux:PASS:skel_open 0 nsec
 test_vmlinux:PASS:skel_attach 0 nsec
 test_vmlinux:PASS:tp 0 nsec
 test_vmlinux:PASS:raw_tp 0 nsec
 test_vmlinux:PASS:tp_btf 0 nsec
 test_vmlinux:PASS:kprobe 0 nsec
 test_vmlinux:PASS:fentry 0 nsec

	Signed-off-by: Hao Luo <haoluo@google.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Andrii Nakryiko <andriin@fb.com>
	Acked-by: Yonghong Song <yhs@fb.com>
Link: https://lore.kernel.org/bpf/20200701175315.1161242-1-haoluo@google.com
(cherry picked from commit 8d821b5db70723d27ee749b4870de90760606918)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/progs/test_vmlinux.c
diff --cc tools/testing/selftests/bpf/progs/test_vmlinux.c
index 4d7eb83b4185,29fa09d6a6c6..000000000000
--- a/tools/testing/selftests/bpf/progs/test_vmlinux.c
+++ b/tools/testing/selftests/bpf/progs/test_vmlinux.c
@@@ -63,23 -63,21 +63,39 @@@ int BPF_PROG(handle__tp_btf, struct pt_
  	return 0;
  }
  
++<<<<<<< HEAD
 +SEC("kprobe/hrtimer_nanosleep")
 +int BPF_KPROBE(handle__kprobe,
 +	       const struct timespec64 *rqtp, enum hrtimer_mode mode, clockid_t clockid)
 +{
 +	if (BPF_CORE_READ(rqtp, tv_nsec) == MY_TV_NSEC)
++=======
+ SEC("kprobe/hrtimer_start_range_ns")
+ int BPF_KPROBE(handle__kprobe, struct hrtimer *timer, ktime_t tim, u64 delta_ns,
+ 	       const enum hrtimer_mode mode)
+ {
+ 	if (tim == MY_TV_NSEC)
++>>>>>>> 8d821b5db707 (selftests/bpf: Switch test_vmlinux to use hrtimer_range_start_ns.)
  		kprobe_called = true;
 +
  	return 0;
  }
  
++<<<<<<< HEAD
 +SEC("fentry/hrtimer_nanosleep")
 +int BPF_PROG(handle__fentry,
 +	     const struct timespec64 *rqtp, enum hrtimer_mode mode, clockid_t clockid)
 +{
 +	if (BPF_CORE_READ(rqtp, tv_nsec) == MY_TV_NSEC)
++=======
+ SEC("fentry/hrtimer_start_range_ns")
+ int BPF_PROG(handle__fentry, struct hrtimer *timer, ktime_t tim, u64 delta_ns,
+ 	     const enum hrtimer_mode mode)
+ {
+ 	if (tim == MY_TV_NSEC)
++>>>>>>> 8d821b5db707 (selftests/bpf: Switch test_vmlinux to use hrtimer_range_start_ns.)
  		fentry_called = true;
 +
  	return 0;
  }
  
* Unmerged path tools/testing/selftests/bpf/progs/test_vmlinux.c
