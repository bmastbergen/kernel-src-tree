mptcp: use adding up size to get ADD_ADDR length

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Geliang Tang <geliangtang@gmail.com>
commit 2ec72faec86bc92c573fc3bada8001115670da44
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2ec72fae.failed

This patch uses adding up size to get the ADD_ADDR suboption length rather
than returning the ADD_ADDR size constants.

	Signed-off-by: Geliang Tang <geliangtang@gmail.com>
	Signed-off-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2ec72faec86bc92c573fc3bada8001115670da44)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/protocol.h
diff --cc net/mptcp/protocol.h
index ec3d81e5cc62,9315f6a8343a..000000000000
--- a/net/mptcp/protocol.h
+++ b/net/mptcp/protocol.h
@@@ -447,14 -557,34 +447,25 @@@ int mptcp_pm_remove_subflow(struct mptc
  
  static inline bool mptcp_pm_should_add_signal(struct mptcp_sock *msk)
  {
 -	return READ_ONCE(msk->pm.add_addr_signal) & BIT(MPTCP_ADD_ADDR_SIGNAL);
 +	return READ_ONCE(msk->pm.add_addr_signal);
  }
  
 -static inline bool mptcp_pm_should_add_signal_echo(struct mptcp_sock *msk)
 -{
 -	return READ_ONCE(msk->pm.add_addr_signal) & BIT(MPTCP_ADD_ADDR_ECHO);
 -}
 -
 -static inline bool mptcp_pm_should_add_signal_ipv6(struct mptcp_sock *msk)
 -{
 -	return READ_ONCE(msk->pm.add_addr_signal) & BIT(MPTCP_ADD_ADDR_IPV6);
 -}
 -
 -static inline bool mptcp_pm_should_rm_signal(struct mptcp_sock *msk)
 -{
 -	return READ_ONCE(msk->pm.rm_addr_signal);
 -}
 -
 -static inline unsigned int mptcp_add_addr_len(int family, bool echo)
 +static inline unsigned int mptcp_add_addr_len(int family)
  {
++<<<<<<< HEAD
 +	if (family == AF_INET)
 +		return TCPOLEN_MPTCP_ADD_ADDR;
 +	return TCPOLEN_MPTCP_ADD_ADDR6;
++=======
+ 	u8 len = TCPOLEN_MPTCP_ADD_ADDR_BASE;
+ 
+ 	if (family == AF_INET6)
+ 		len = TCPOLEN_MPTCP_ADD_ADDR6_BASE;
+ 	if (!echo)
+ 		len += MPTCPOPT_THMAC_LEN;
+ 
+ 	return len;
++>>>>>>> 2ec72faec86b (mptcp: use adding up size to get ADD_ADDR length)
  }
  
  bool mptcp_pm_add_addr_signal(struct mptcp_sock *msk, unsigned int remaining,
* Unmerged path net/mptcp/protocol.h
