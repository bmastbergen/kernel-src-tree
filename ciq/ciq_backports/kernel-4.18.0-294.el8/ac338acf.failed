driver core: Add dev_has_sync_state()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Saravana Kannan <saravanak@google.com>
commit ac338acf514e7b578fa9e3742ec2c292323b4c1a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ac338acf.failed

Add an API to check if a device has sync_state support in its driver or
bus.

	Signed-off-by: Saravana Kannan <saravanak@google.com>
Link: https://lore.kernel.org/r/20200221080510.197337-3-saravanak@google.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ac338acf514e7b578fa9e3742ec2c292323b4c1a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/device.h
diff --cc include/linux/device.h
index bf5cdf5966df,fa04dfd22bbc..000000000000
--- a/include/linux/device.h
+++ b/include/linux/device.h
@@@ -1411,7 -798,16 +1411,20 @@@ static inline struct device_node *dev_o
  	return dev->of_node;
  }
  
++<<<<<<< HEAD
 +void driver_init(void);
++=======
+ static inline bool dev_has_sync_state(struct device *dev)
+ {
+ 	if (!dev)
+ 		return false;
+ 	if (dev->driver && dev->driver->sync_state)
+ 		return true;
+ 	if (dev->bus && dev->bus->sync_state)
+ 		return true;
+ 	return false;
+ }
++>>>>>>> ac338acf514e (driver core: Add dev_has_sync_state())
  
  /*
   * High level routines for use by the bus drivers
* Unmerged path include/linux/device.h
