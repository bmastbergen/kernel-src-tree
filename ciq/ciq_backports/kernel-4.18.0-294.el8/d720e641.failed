iommu/arm-smmu: Ensure 64-bit I/O accessors are available on 32-bit CPU

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Robin Murphy <robin.murphy@arm.com>
commit d720e64150c79d14f4faf931604faa1f0755134d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/d720e641.failed

As part of the grand SMMU driver refactoring effort, the I/O register
accessors were moved into 'arm-smmu.h' in commit 6d7dff62afb0
("iommu/arm-smmu: Move Secure access quirk to implementation").

On 32-bit architectures (such as ARM), the 64-bit accessors are defined
in 'linux/io-64-nonatomic-hi-lo.h', so include this header to fix the
build.

	Signed-off-by: Robin Murphy <robin.murphy@arm.com>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit d720e64150c79d14f4faf931604faa1f0755134d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/arm-smmu.c
#	drivers/iommu/arm-smmu.h
diff --cc drivers/iommu/arm-smmu.c
index c913cdd695bd,523a88842e7f..000000000000
--- a/drivers/iommu/arm-smmu.c
+++ b/drivers/iommu/arm-smmu.c
@@@ -38,9 -26,6 +38,12 @@@
  #include <linux/err.h>
  #include <linux/interrupt.h>
  #include <linux/io.h>
++<<<<<<< HEAD
 +#include <linux/io-64-nonatomic-hi-lo.h>
 +#include <linux/io-pgtable.h>
 +#include <linux/iommu.h>
++=======
++>>>>>>> d720e64150c7 (iommu/arm-smmu: Ensure 64-bit I/O accessors are available on 32-bit CPU)
  #include <linux/iopoll.h>
  #include <linux/init.h>
  #include <linux/moduleparam.h>
diff --cc drivers/iommu/arm-smmu.h
index 671b3a337fea,ac9eac966cf5..000000000000
--- a/drivers/iommu/arm-smmu.h
+++ b/drivers/iommu/arm-smmu.h
@@@ -22,21 -10,31 +22,35 @@@
  #ifndef _ARM_SMMU_H
  #define _ARM_SMMU_H
  
++<<<<<<< HEAD
++=======
+ #include <linux/atomic.h>
+ #include <linux/bits.h>
+ #include <linux/clk.h>
+ #include <linux/device.h>
+ #include <linux/io-64-nonatomic-hi-lo.h>
+ #include <linux/io-pgtable.h>
+ #include <linux/iommu.h>
+ #include <linux/mutex.h>
+ #include <linux/spinlock.h>
+ #include <linux/types.h>
+ 
++>>>>>>> d720e64150c7 (iommu/arm-smmu: Ensure 64-bit I/O accessors are available on 32-bit CPU)
  /* Configuration registers */
  #define ARM_SMMU_GR0_sCR0		0x0
 -#define sCR0_VMID16EN			BIT(31)
 -#define sCR0_BSU			GENMASK(15, 14)
 -#define sCR0_FB				BIT(13)
 -#define sCR0_PTM			BIT(12)
 -#define sCR0_VMIDPNE			BIT(11)
 -#define sCR0_USFCFG			BIT(10)
 -#define sCR0_GCFGFIE			BIT(5)
 -#define sCR0_GCFGFRE			BIT(4)
 -#define sCR0_EXIDENABLE			BIT(3)
 -#define sCR0_GFIE			BIT(2)
 -#define sCR0_GFRE			BIT(1)
 -#define sCR0_CLIENTPD			BIT(0)
 +#define sCR0_CLIENTPD			(1 << 0)
 +#define sCR0_GFRE			(1 << 1)
 +#define sCR0_GFIE			(1 << 2)
 +#define sCR0_EXIDENABLE			(1 << 3)
 +#define sCR0_GCFGFRE			(1 << 4)
 +#define sCR0_GCFGFIE			(1 << 5)
 +#define sCR0_USFCFG			(1 << 10)
 +#define sCR0_VMIDPNE			(1 << 11)
 +#define sCR0_PTM			(1 << 12)
 +#define sCR0_FB				(1 << 13)
 +#define sCR0_VMID16EN			(1 << 31)
 +#define sCR0_BSU_SHIFT			14
 +#define sCR0_BSU_MASK			0x3
  
  /* Auxiliary Configuration register */
  #define ARM_SMMU_GR0_sACR		0x10
* Unmerged path drivers/iommu/arm-smmu.c
* Unmerged path drivers/iommu/arm-smmu.h
