powerpc: silence a -Wcast-function-type warning in dawr_write_file_bool

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [powerpc] silence a -Wcast-function-type warning in dawr_write_file_bool (Greg Kurz) [1882796]
Rebuild_FUZZ: 93.23%
commit-author Mathieu Malaterre <malat@debian.org>
commit 548c54acba5bd1388d50727a9a126a42d0cd4ad0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/548c54ac.failed

In commit c1fe190c0672 ("powerpc: Add force enable of DAWR on P9
option") the following piece of code was added:

   smp_call_function((smp_call_func_t)set_dawr, &null_brk, 0);

Since GCC 8 this triggers the following warning about incompatible
function types:

  arch/powerpc/kernel/hw_breakpoint.c:408:21: error: cast between incompatible function types from 'int (*)(struct arch_hw_breakpoint *)' to 'void (*)(void *)' [-Werror=cast-function-type]

Since the warning is there for a reason, and should not be hidden behind
a cast, provide an intermediate callback function to avoid the warning.

Fixes: c1fe190c0672 ("powerpc: Add force enable of DAWR on P9 option")
	Suggested-by: Christoph Hellwig <hch@infradead.org>
	Signed-off-by: Mathieu Malaterre <malat@debian.org>
	Signed-off-by: Michael Neuling <mikey@neuling.org>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 548c54acba5bd1388d50727a9a126a42d0cd4ad0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/hw_breakpoint.c
diff --cc arch/powerpc/kernel/hw_breakpoint.c
index cb5dfa15ad41,ca3a2358b768..000000000000
--- a/arch/powerpc/kernel/hw_breakpoint.c
+++ b/arch/powerpc/kernel/hw_breakpoint.c
@@@ -409,3 -380,64 +409,67 @@@ void hw_breakpoint_pmu_read(struct perf
  {
  	/* TODO */
  }
++<<<<<<< HEAD
++=======
+ 
+ bool dawr_force_enable;
+ EXPORT_SYMBOL_GPL(dawr_force_enable);
+ 
+ static void set_dawr_cb(void *info)
+ {
+ 	set_dawr(info);
+ }
+ 
+ static ssize_t dawr_write_file_bool(struct file *file,
+ 				    const char __user *user_buf,
+ 				    size_t count, loff_t *ppos)
+ {
+ 	struct arch_hw_breakpoint null_brk = {0, 0, 0};
+ 	size_t rc;
+ 
+ 	/* Send error to user if they hypervisor won't allow us to write DAWR */
+ 	if ((!dawr_force_enable) &&
+ 	    (firmware_has_feature(FW_FEATURE_LPAR)) &&
+ 	    (set_dawr(&null_brk) != H_SUCCESS))
+ 		return -1;
+ 
+ 	rc = debugfs_write_file_bool(file, user_buf, count, ppos);
+ 	if (rc)
+ 		return rc;
+ 
+ 	/* If we are clearing, make sure all CPUs have the DAWR cleared */
+ 	if (!dawr_force_enable)
+ 		smp_call_function(set_dawr_cb, &null_brk, 0);
+ 
+ 	return rc;
+ }
+ 
+ static const struct file_operations dawr_enable_fops = {
+ 	.read =		debugfs_read_file_bool,
+ 	.write =	dawr_write_file_bool,
+ 	.open =		simple_open,
+ 	.llseek =	default_llseek,
+ };
+ 
+ static int __init dawr_force_setup(void)
+ {
+ 	dawr_force_enable = false;
+ 
+ 	if (cpu_has_feature(CPU_FTR_DAWR)) {
+ 		/* Don't setup sysfs file for user control on P8 */
+ 		dawr_force_enable = true;
+ 		return 0;
+ 	}
+ 
+ 	if (PVR_VER(mfspr(SPRN_PVR)) == PVR_POWER9) {
+ 		/* Turn DAWR off by default, but allow admin to turn it on */
+ 		dawr_force_enable = false;
+ 		debugfs_create_file_unsafe("dawr_enable_dangerous", 0600,
+ 					   powerpc_debugfs_root,
+ 					   &dawr_force_enable,
+ 					   &dawr_enable_fops);
+ 	}
+ 	return 0;
+ }
+ arch_initcall(dawr_force_setup);
++>>>>>>> 548c54acba5b (powerpc: silence a -Wcast-function-type warning in dawr_write_file_bool)
* Unmerged path arch/powerpc/kernel/hw_breakpoint.c
