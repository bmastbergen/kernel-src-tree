KVM: VMX: Rename vcpu_vmx's "nmsrs" to "nr_uret_msrs"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit fbc18007382cb99ca68b1c6cb49d38f4f3b7a5da
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/fbc18007.failed

Rename vcpu_vmx.nsmrs to vcpu_vmx.nr_uret_msrs to explicitly associate
it with the guest_uret_msrs array.

No functional change intended.

	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Message-Id: <20200923180409.32255-6-sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit fbc18007382cb99ca68b1c6cb49d38f4f3b7a5da)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/vmx.c
#	arch/x86/kvm/vmx/vmx.h
diff --cc arch/x86/kvm/vmx/vmx.c
index 985a4bfb7517,07249571f6d5..000000000000
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@@ -615,8 -615,8 +615,13 @@@ static inline int __find_msr_index(stru
  {
  	int i;
  
++<<<<<<< HEAD
 +	for (i = 0; i < vmx->nmsrs; ++i)
 +		if (vmx_msr_index[vmx->guest_msrs[i].index] == msr)
++=======
+ 	for (i = 0; i < vmx->nr_uret_msrs; ++i)
+ 		if (vmx_msr_index[vmx->guest_uret_msrs[i].index] == msr)
++>>>>>>> fbc18007382c (KVM: VMX: Rename vcpu_vmx's "nmsrs" to "nr_uret_msrs")
  			return i;
  	return -1;
  }
@@@ -6798,13 -6742,13 +6803,13 @@@ static int vmx_create_vcpu(struct kvm_v
  			 * let's avoid changing CPUID bits under the host
  			 * kernel's feet.
  			 */
 -			vmx->guest_uret_msrs[j].mask = ~(u64)TSX_CTRL_CPUID_CLEAR;
 +			vmx->guest_msrs[j].mask = ~(u64)TSX_CTRL_CPUID_CLEAR;
  			break;
  		default:
 -			vmx->guest_uret_msrs[j].mask = -1ull;
 +			vmx->guest_msrs[j].mask = -1ull;
  			break;
  		}
- 		++vmx->nmsrs;
+ 		++vmx->nr_uret_msrs;
  	}
  
  	err = alloc_loaded_vmcs(&vmx->vmcs01);
diff --cc arch/x86/kvm/vmx/vmx.h
index 131d638ba270,82c39ac53165..000000000000
--- a/arch/x86/kvm/vmx/vmx.h
+++ b/arch/x86/kvm/vmx/vmx.h
@@@ -195,8 -196,8 +195,13 @@@ struct vcpu_vmx 
  	u32                   idt_vectoring_info;
  	ulong                 rflags;
  
++<<<<<<< HEAD
 +	struct shared_msr_entry guest_msrs[MAX_NR_SHARED_MSRS];
 +	int                   nmsrs;
++=======
+ 	struct vmx_uret_msr   guest_uret_msrs[MAX_NR_USER_RETURN_MSRS];
+ 	int                   nr_uret_msrs;
++>>>>>>> fbc18007382c (KVM: VMX: Rename vcpu_vmx's "nmsrs" to "nr_uret_msrs")
  	int                   save_nmsrs;
  	bool                  guest_msrs_ready;
  #ifdef CONFIG_X86_64
* Unmerged path arch/x86/kvm/vmx/vmx.c
* Unmerged path arch/x86/kvm/vmx/vmx.h
