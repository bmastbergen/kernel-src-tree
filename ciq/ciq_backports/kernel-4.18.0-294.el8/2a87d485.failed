scsi: qla2xxx: Fix regression on sparc64

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author René Rebe <rene@exactcode.com>
commit 2a87d485c4cb4d1b34be6c278a1c6ce3e15c8b8a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2a87d485.failed

Commit 98aee70d19a7 ("qla2xxx: Add endianizer to max_payload_size
modifier.") in 2014 broke qla2xxx on sparc64, e.g. as in the Sun Blade 1000
/ 2000. Unbreak by partial revert to fix endianness in nvram firmware
default initialization. Also mark the second frame_payload_size in nvram_t
__le16 to avoid new sparse warnings.

Link: https://lore.kernel.org/r/20200827.222729.1875148247374704975.rene@exactcode.com
Fixes: 98aee70d19a7 ("qla2xxx: Add endianizer to max_payload_size modifier.")
	Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Acked-by: Arun Easi <aeasi@marvell.com>
	Signed-off-by: René Rebe <rene@exactcode.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 2a87d485c4cb4d1b34be6c278a1c6ce3e15c8b8a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_def.h
diff --cc drivers/scsi/qla2xxx/qla_def.h
index fbac8553d518,a165120d2976..000000000000
--- a/drivers/scsi/qla2xxx/qla_def.h
+++ b/drivers/scsi/qla2xxx/qla_def.h
@@@ -1601,9 -1626,9 +1601,15 @@@ typedef struct 
  	 */
  	uint8_t	 firmware_options[2];
  
++<<<<<<< HEAD
 +	uint16_t frame_payload_size;
 +	uint16_t max_iocb_allocation;
 +	uint16_t execution_throttle;
++=======
+ 	__le16	frame_payload_size;
+ 	__le16	max_iocb_allocation;
+ 	__le16	execution_throttle;
++>>>>>>> 2a87d485c4cb (scsi: qla2xxx: Fix regression on sparc64)
  	uint8_t	 retry_count;
  	uint8_t	 retry_delay;			/* unused */
  	uint8_t	 port_name[WWN_SIZE];		/* Big endian. */
* Unmerged path drivers/scsi/qla2xxx/qla_def.h
diff --git a/drivers/scsi/qla2xxx/qla_init.c b/drivers/scsi/qla2xxx/qla_init.c
index b1a0b8670831..8f61f938d9e4 100644
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@ -4590,18 +4590,18 @@ qla2x00_nvram_config(scsi_qla_host_t *vha)
 			nv->firmware_options[1] = BIT_7 | BIT_5;
 			nv->add_firmware_options[0] = BIT_5;
 			nv->add_firmware_options[1] = BIT_5 | BIT_4;
-			nv->frame_payload_size = 2048;
+			nv->frame_payload_size = cpu_to_le16(2048);
 			nv->special_options[1] = BIT_7;
 		} else if (IS_QLA2200(ha)) {
 			nv->firmware_options[0] = BIT_2 | BIT_1;
 			nv->firmware_options[1] = BIT_7 | BIT_5;
 			nv->add_firmware_options[0] = BIT_5;
 			nv->add_firmware_options[1] = BIT_5 | BIT_4;
-			nv->frame_payload_size = 1024;
+			nv->frame_payload_size = cpu_to_le16(1024);
 		} else if (IS_QLA2100(ha)) {
 			nv->firmware_options[0] = BIT_3 | BIT_1;
 			nv->firmware_options[1] = BIT_5;
-			nv->frame_payload_size = 1024;
+			nv->frame_payload_size = cpu_to_le16(1024);
 		}
 
 		nv->max_iocb_allocation = cpu_to_le16(256);
