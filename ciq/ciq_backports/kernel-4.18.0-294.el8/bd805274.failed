cpuidle: Drop misleading comments about RCU usage

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Ulf Hansson <ulf.hansson@linaro.org>
commit bd805274577457f301bf826f86543f550cf5c1ef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/bd805274.failed

The commit 1098582a0f6c ("sched,idle,rcu: Push rcu_idle deeper into the
idle path"), moved the calls rcu_idle_enter|exit() into the cpuidle core.

However, it forgot to remove a couple of comments in enter_s2idle_proper()
about why RCU_NONIDLE earlier was needed. So, let's drop them as they have
become a bit misleading.

Fixes: 1098582a0f6c ("sched,idle,rcu: Push rcu_idle deeper into the idle path")
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit bd805274577457f301bf826f86543f550cf5c1ef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpuidle/cpuidle.c
diff --cc drivers/cpuidle/cpuidle.c
index 7b9da773160e,29e84687f3c3..000000000000
--- a/drivers/cpuidle/cpuidle.c
+++ b/drivers/cpuidle/cpuidle.c
@@@ -150,16 -149,13 +145,21 @@@ static void enter_s2idle_proper(struct 
  	 * suspended is generally unsafe.
  	 */
  	stop_critical_timings();
 -	if (!(target_state->flags & CPUIDLE_FLAG_RCU_IDLE))
 -		rcu_idle_enter();
 -	target_state->enter_s2idle(dev, drv, index);
 +	rcu_idle_enter();
 +	drv->states[index].enter_s2idle(dev, drv, index);
  	if (WARN_ON_ONCE(!irqs_disabled()))
  		local_irq_disable();
++<<<<<<< HEAD
 +	/*
 +	 * timekeeping_resume() that will be called by tick_unfreeze() for the
 +	 * first CPU executing it calls functions containing RCU read-side
 +	 * critical sections, so tell RCU about that.
 +	 */
 +	rcu_idle_exit();
++=======
+ 	if (!(target_state->flags & CPUIDLE_FLAG_RCU_IDLE))
+ 		rcu_idle_exit();
++>>>>>>> bd8052745774 (cpuidle: Drop misleading comments about RCU usage)
  	tick_unfreeze();
  	start_critical_timings();
  
* Unmerged path drivers/cpuidle/cpuidle.c
