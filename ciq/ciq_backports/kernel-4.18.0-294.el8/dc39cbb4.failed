virtio-balloon: make virtballoon_free_page_report() static

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jason Yan <yanaijie@huawei.com>
commit dc39cbb4e8bcd684840885f04606a7c649bc97bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/dc39cbb4.failed

Fix the following sparse warning:

drivers/virtio/virtio_balloon.c:168:5: warning: symbol
'virtballoon_free_page_report' was not declared. Should it be static?

	Reported-by: Hulk Robot <hulkci@huawei.com>
	Signed-off-by: Jason Yan <yanaijie@huawei.com>
Link: https://lore.kernel.org/r/20200409085047.45483-1-yanaijie@huawei.com
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
(cherry picked from commit dc39cbb4e8bcd684840885f04606a7c649bc97bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/virtio/virtio_balloon.c
diff --cc drivers/virtio/virtio_balloon.c
index b554d8e684d2,8c964b3eebdf..000000000000
--- a/drivers/virtio/virtio_balloon.c
+++ b/drivers/virtio/virtio_balloon.c
@@@ -165,6 -165,33 +165,36 @@@ static void tell_host(struct virtio_bal
  
  }
  
++<<<<<<< HEAD
++=======
+ static int virtballoon_free_page_report(struct page_reporting_dev_info *pr_dev_info,
+ 				   struct scatterlist *sg, unsigned int nents)
+ {
+ 	struct virtio_balloon *vb =
+ 		container_of(pr_dev_info, struct virtio_balloon, pr_dev_info);
+ 	struct virtqueue *vq = vb->reporting_vq;
+ 	unsigned int unused, err;
+ 
+ 	/* We should always be able to add these buffers to an empty queue. */
+ 	err = virtqueue_add_inbuf(vq, sg, nents, vb, GFP_NOWAIT | __GFP_NOWARN);
+ 
+ 	/*
+ 	 * In the extremely unlikely case that something has occurred and we
+ 	 * are able to trigger an error we will simply display a warning
+ 	 * and exit without actually processing the pages.
+ 	 */
+ 	if (WARN_ON_ONCE(err))
+ 		return err;
+ 
+ 	virtqueue_kick(vq);
+ 
+ 	/* When host has read buffer, this completes via balloon_ack */
+ 	wait_event(vb->acked, virtqueue_get_buf(vq, &unused));
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> dc39cbb4e8bc (virtio-balloon: make virtballoon_free_page_report() static)
  static void set_page_pfns(struct virtio_balloon *vb,
  			  __virtio32 pfns[], struct page *page)
  {
* Unmerged path drivers/virtio/virtio_balloon.c
