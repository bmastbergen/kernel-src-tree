mm: thp: don't need care deferred split queue in memcg charge move path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Wei Yang <richardw.yang@linux.intel.com>
commit fac0516b5534897bf4c4a88daa06a8cfa5611b23
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/fac0516b.failed

If compound is true, this means it is a PMD mapped THP.  Which implies
the page is not linked to any defer list.  So the first code chunk will
not be executed.

Also with this reason, it would not be proper to add this page to a
defer list.  So the second code chunk is not correct.

Based on this, we should remove the defer list related code.

[yang.shi@linux.alibaba.com: better patch title]
Link: http://lkml.kernel.org/r/20200117233836.3434-1-richardw.yang@linux.intel.com
Fixes: 87eaceb3faa5 ("mm: thp: make deferred split shrinker memcg aware")
	Signed-off-by: Wei Yang <richardw.yang@linux.intel.com>
	Suggested-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Acked-by: Yang Shi <yang.shi@linux.alibaba.com>
	Cc: David Rientjes <rientjes@google.com>
	Cc: Michal Hocko <mhocko@suse.com>
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
	Cc: <stable@vger.kernel.org>    [5.4+]
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit fac0516b5534897bf4c4a88daa06a8cfa5611b23)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memcontrol.c
diff --cc mm/memcontrol.c
index 48fa67e8a272,27c231bf4565..000000000000
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@@ -5169,6 -5348,7 +5169,10 @@@ static int mem_cgroup_move_account(stru
  
  	/* caller should have done css_get */
  	page->mem_cgroup = to;
++<<<<<<< HEAD
++=======
+ 
++>>>>>>> fac0516b5534 (mm: thp: don't need care deferred split queue in memcg charge move path)
  	spin_unlock_irqrestore(&from->move_lock, flags);
  
  	ret = 0;
* Unmerged path mm/memcontrol.c
