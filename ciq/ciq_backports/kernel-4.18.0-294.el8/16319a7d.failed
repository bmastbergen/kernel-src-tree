net: phylink: ensure link is down when changing interface

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Russell King <rmk+kernel@armlinux.org.uk>
commit 16319a7d31b5df881ab61c9a9e8b4265355d157f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/16319a7d.failed

The only PHYs that are used with phylink which change their interface
are the BCM84881 and MV88X3310 family, both of which only change their
interface modes on link-up events.  However, rather than relying upon
this behaviour by the PHY, we should give a stronger guarantee when
resolving that the link will be down whenever we change the interface
mode.  This patch implements that stronger guarantee for resolve.

	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 16319a7d31b5df881ab61c9a9e8b4265355d157f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phylink.c
diff --cc drivers/net/phy/phylink.c
index 8ae109f323a0,1507ea8a9385..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -590,6 -620,19 +590,22 @@@ static void phylink_resolve(struct work
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (mac_config) {
+ 		if (link_state.interface != pl->link_config.interface) {
+ 			/* The interface has changed, force the link down and
+ 			 * then reconfigure.
+ 			 */
+ 			if (cur_link_state) {
+ 				phylink_link_down(pl);
+ 				cur_link_state = false;
+ 			}
+ 		}
+ 		phylink_mac_config(pl, &link_state);
+ 	}
+ 
++>>>>>>> 16319a7d31b5 (net: phylink: ensure link is down when changing interface)
  	if (link_state.link != cur_link_state) {
  		pl->old_link_state = link_state.link;
  		if (!link_state.link)
* Unmerged path drivers/net/phy/phylink.c
