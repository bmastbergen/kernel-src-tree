cgroup: fix psi_show() crash on 32bit ino archs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Qian Cai <cai@lca.pw>
commit 190ecb190a9cd8c0599d8499b901e3c32e87966a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/190ecb19.failed

Similar to the commit d7495343228f ("cgroup: fix incorrect
WARN_ON_ONCE() in cgroup_setup_root()"), cgroup_id(root_cgrp) does not
equal to 1 on 32bit ino archs which triggers all sorts of issues with
psi_show() on s390x. For example,

 BUG: KASAN: slab-out-of-bounds in collect_percpu_times+0x2d0/
 Read of size 4 at addr 000000001e0ce000 by task read_all/3667
 collect_percpu_times+0x2d0/0x798
 psi_show+0x7c/0x2a8
 seq_read+0x2ac/0x830
 vfs_read+0x92/0x150
 ksys_read+0xe2/0x188
 system_call+0xd8/0x2b4

Fix it by using cgroup_ino().

Fixes: 743210386c03 ("cgroup: use cgrp->kn->id as the cgroup ID")
	Signed-off-by: Qian Cai <cai@lca.pw>
	Acked-by: Johannes Weiner <hannes@cmpxchg.org>
	Signed-off-by: Tejun Heo <tj@kernel.org>
	Cc: stable@vger.kernel.org # v5.5
(cherry picked from commit 190ecb190a9cd8c0599d8499b901e3c32e87966a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/cgroup/cgroup.c
diff --cc kernel/cgroup/cgroup.c
index 9e08519ae6db,7a39dc882095..000000000000
--- a/kernel/cgroup/cgroup.c
+++ b/kernel/cgroup/cgroup.c
@@@ -3491,22 -3541,22 +3491,37 @@@ static ssize_t cgroup_freeze_write(stru
  #ifdef CONFIG_PSI
  static int cgroup_io_pressure_show(struct seq_file *seq, void *v)
  {
++<<<<<<< HEAD
 +	struct cgroup *cgroup = seq_css(seq)->cgroup;
 +	struct psi_group *psi = cgroup->id == 1 ? &psi_system : &cgroup->psi;
++=======
+ 	struct cgroup *cgrp = seq_css(seq)->cgroup;
+ 	struct psi_group *psi = cgroup_ino(cgrp) == 1 ? &psi_system : &cgrp->psi;
++>>>>>>> 190ecb190a9c (cgroup: fix psi_show() crash on 32bit ino archs)
  
  	return psi_show(seq, psi, PSI_IO);
  }
  static int cgroup_memory_pressure_show(struct seq_file *seq, void *v)
  {
++<<<<<<< HEAD
 +	struct cgroup *cgroup = seq_css(seq)->cgroup;
 +	struct psi_group *psi = cgroup->id == 1 ? &psi_system : &cgroup->psi;
++=======
+ 	struct cgroup *cgrp = seq_css(seq)->cgroup;
+ 	struct psi_group *psi = cgroup_ino(cgrp) == 1 ? &psi_system : &cgrp->psi;
++>>>>>>> 190ecb190a9c (cgroup: fix psi_show() crash on 32bit ino archs)
  
  	return psi_show(seq, psi, PSI_MEM);
  }
  static int cgroup_cpu_pressure_show(struct seq_file *seq, void *v)
  {
++<<<<<<< HEAD
 +	struct cgroup *cgroup = seq_css(seq)->cgroup;
 +	struct psi_group *psi = cgroup->id == 1 ? &psi_system : &cgroup->psi;
++=======
+ 	struct cgroup *cgrp = seq_css(seq)->cgroup;
+ 	struct psi_group *psi = cgroup_ino(cgrp) == 1 ? &psi_system : &cgrp->psi;
++>>>>>>> 190ecb190a9c (cgroup: fix psi_show() crash on 32bit ino archs)
  
  	return psi_show(seq, psi, PSI_CPU);
  }
* Unmerged path kernel/cgroup/cgroup.c
