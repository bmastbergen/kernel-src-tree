arm64: replace arm64-obj-* in Makefile with obj-*

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Masahiro Yamada <yamada.masahiro@socionext.com>
commit 2f328fea47ac9020ac47c88dd01cd8f93da55bcc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2f328fea.failed

Use the standard obj-$(CONFIG_...) syntex. The behavior is still the
same.

	Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit 2f328fea47ac9020ac47c88dd01cd8f93da55bcc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/Makefile
diff --cc arch/arm64/kernel/Makefile
index aa002ad6e084,cd434d0719c1..000000000000
--- a/arch/arm64/kernel/Makefile
+++ b/arch/arm64/kernel/Makefile
@@@ -27,40 -27,40 +27,61 @@@ OBJCOPYFLAGS := --prefix-symbols=__efis
  $(obj)/%.stub.o: $(obj)/%.o FORCE
  	$(call if_changed,objcopy)
  
- arm64-obj-$(CONFIG_COMPAT)		+= sys32.o kuser32.o signal32.o 	\
+ obj-$(CONFIG_COMPAT)			+= sys32.o kuser32.o signal32.o 	\
  					   sys_compat.o
++<<<<<<< HEAD
 +arm64-obj-$(CONFIG_FUNCTION_TRACER)	+= ftrace.o entry-ftrace.o
 +arm64-obj-$(CONFIG_MODULES)		+= arm64ksyms.o module.o
 +arm64-obj-$(CONFIG_ARM64_MODULE_PLTS)	+= module-plts.o
 +arm64-obj-$(CONFIG_PERF_EVENTS)		+= perf_regs.o perf_callchain.o
 +arm64-obj-$(CONFIG_HW_PERF_EVENTS)	+= perf_event.o
 +arm64-obj-$(CONFIG_HAVE_HW_BREAKPOINT)	+= hw_breakpoint.o
 +arm64-obj-$(CONFIG_CPU_PM)		+= sleep.o suspend.o
 +arm64-obj-$(CONFIG_CPU_IDLE)		+= cpuidle.o
 +arm64-obj-$(CONFIG_JUMP_LABEL)		+= jump_label.o
 +arm64-obj-$(CONFIG_KGDB)		+= kgdb.o
 +arm64-obj-$(CONFIG_EFI)			+= efi.o efi-entry.stub.o		\
++=======
+ obj-$(CONFIG_FUNCTION_TRACER)		+= ftrace.o entry-ftrace.o
+ obj-$(CONFIG_MODULES)			+= module.o
+ obj-$(CONFIG_ARM64_MODULE_PLTS)		+= module-plts.o
+ obj-$(CONFIG_PERF_EVENTS)		+= perf_regs.o perf_callchain.o
+ obj-$(CONFIG_HW_PERF_EVENTS)		+= perf_event.o
+ obj-$(CONFIG_HAVE_HW_BREAKPOINT)	+= hw_breakpoint.o
+ obj-$(CONFIG_CPU_PM)			+= sleep.o suspend.o
+ obj-$(CONFIG_CPU_IDLE)			+= cpuidle.o
+ obj-$(CONFIG_JUMP_LABEL)		+= jump_label.o
+ obj-$(CONFIG_KGDB)			+= kgdb.o
+ obj-$(CONFIG_EFI)			+= efi.o efi-entry.stub.o		\
++>>>>>>> 2f328fea47ac (arm64: replace arm64-obj-* in Makefile with obj-*)
  					   efi-rt-wrapper.o
- arm64-obj-$(CONFIG_PCI)			+= pci.o
- arm64-obj-$(CONFIG_ARMV8_DEPRECATED)	+= armv8_deprecated.o
- arm64-obj-$(CONFIG_ACPI)		+= acpi.o
- arm64-obj-$(CONFIG_ACPI_NUMA)		+= acpi_numa.o
- arm64-obj-$(CONFIG_ARM64_ACPI_PARKING_PROTOCOL)	+= acpi_parking_protocol.o
- arm64-obj-$(CONFIG_PARAVIRT)		+= paravirt.o
- arm64-obj-$(CONFIG_RANDOMIZE_BASE)	+= kaslr.o
- arm64-obj-$(CONFIG_HIBERNATION)		+= hibernate.o hibernate-asm.o
- arm64-obj-$(CONFIG_KEXEC_CORE)		+= machine_kexec.o relocate_kernel.o	\
+ obj-$(CONFIG_PCI)			+= pci.o
+ obj-$(CONFIG_ARMV8_DEPRECATED)		+= armv8_deprecated.o
+ obj-$(CONFIG_ACPI)			+= acpi.o
+ obj-$(CONFIG_ACPI_NUMA)			+= acpi_numa.o
+ obj-$(CONFIG_ARM64_ACPI_PARKING_PROTOCOL)	+= acpi_parking_protocol.o
+ obj-$(CONFIG_PARAVIRT)			+= paravirt.o
+ obj-$(CONFIG_RANDOMIZE_BASE)		+= kaslr.o
+ obj-$(CONFIG_HIBERNATION)		+= hibernate.o hibernate-asm.o
+ obj-$(CONFIG_KEXEC_CORE)		+= machine_kexec.o relocate_kernel.o	\
  					   cpu-reset.o
- arm64-obj-$(CONFIG_KEXEC_FILE)		+= machine_kexec_file.o kexec_image.o
- arm64-obj-$(CONFIG_ARM64_RELOC_TEST)	+= arm64-reloc-test.o
+ obj-$(CONFIG_KEXEC_FILE)		+= machine_kexec_file.o kexec_image.o
+ obj-$(CONFIG_ARM64_RELOC_TEST)		+= arm64-reloc-test.o
  arm64-reloc-test-y := reloc_test_core.o reloc_test_syms.o
++<<<<<<< HEAD
 +arm64-obj-$(CONFIG_CRASH_DUMP)		+= crash_dump.o
 +arm64-obj-$(CONFIG_ARM_SDE_INTERFACE)	+= sdei.o
 +arm64-obj-$(CONFIG_ARM64_SSBD)		+= ssbd.o
 +arm64-obj-$(CONFIG_ARM64_PTR_AUTH)	+= pointer_auth.o
++=======
+ obj-$(CONFIG_CRASH_DUMP)		+= crash_dump.o
+ obj-$(CONFIG_CRASH_CORE)		+= crash_core.o
+ obj-$(CONFIG_ARM_SDE_INTERFACE)		+= sdei.o
+ obj-$(CONFIG_ARM64_SSBD)		+= ssbd.o
+ obj-$(CONFIG_ARM64_PTR_AUTH)		+= pointer_auth.o
++>>>>>>> 2f328fea47ac (arm64: replace arm64-obj-* in Makefile with obj-*)
  
- obj-y					+= $(arm64-obj-y) vdso/ probes/
- obj-m					+= $(arm64-obj-m)
+ obj-y					+= vdso/ probes/
  head-y					:= head.o
  extra-y					+= $(head-y) vmlinux.lds
  
* Unmerged path arch/arm64/kernel/Makefile
