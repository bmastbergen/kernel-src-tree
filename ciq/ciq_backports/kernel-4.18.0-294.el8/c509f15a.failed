SUNRPC: Split the xdr_buf event class

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit c509f15a5801605652126831d965751e8d602471
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/c509f15a.failed

To help tie the recorded xdr_buf to a particular RPC transaction,
the client side version of this class should display task ID
information and the server side one should show the request's XID.

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit c509f15a5801605652126831d965751e8d602471)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/trace/events/sunrpc.h
#	net/sunrpc/svc_xprt.c
diff --cc include/trace/events/sunrpc.h
index c5304abd0872,4747803b370e..000000000000
--- a/include/trace/events/sunrpc.h
+++ b/include/trace/events/sunrpc.h
@@@ -14,41 -14,9 +14,46 @@@
  #include <linux/net.h>
  #include <linux/tracepoint.h>
  
++<<<<<<< HEAD
 +TRACE_DEFINE_ENUM(SOCK_STREAM);
 +TRACE_DEFINE_ENUM(SOCK_DGRAM);
 +TRACE_DEFINE_ENUM(SOCK_RAW);
 +TRACE_DEFINE_ENUM(SOCK_RDM);
 +TRACE_DEFINE_ENUM(SOCK_SEQPACKET);
 +TRACE_DEFINE_ENUM(SOCK_DCCP);
 +TRACE_DEFINE_ENUM(SOCK_PACKET);
 +
 +#define show_socket_type(type)					\
 +	__print_symbolic(type,					\
 +		{ SOCK_STREAM,		"STREAM" },		\
 +		{ SOCK_DGRAM,		"DGRAM" },		\
 +		{ SOCK_RAW,		"RAW" },		\
 +		{ SOCK_RDM,		"RDM" },		\
 +		{ SOCK_SEQPACKET,	"SEQPACKET" },		\
 +		{ SOCK_DCCP,		"DCCP" },		\
 +		{ SOCK_PACKET,		"PACKET" })
 +
 +/* This list is known to be incomplete, add new enums as needed. */
 +TRACE_DEFINE_ENUM(AF_UNSPEC);
 +TRACE_DEFINE_ENUM(AF_UNIX);
 +TRACE_DEFINE_ENUM(AF_LOCAL);
 +TRACE_DEFINE_ENUM(AF_INET);
 +TRACE_DEFINE_ENUM(AF_INET6);
 +
 +#define rpc_show_address_family(family)				\
 +	__print_symbolic(family,				\
 +		{ AF_UNSPEC,		"AF_UNSPEC" },		\
 +		{ AF_UNIX,		"AF_UNIX" },		\
 +		{ AF_LOCAL,		"AF_LOCAL" },		\
 +		{ AF_INET,		"AF_INET" },		\
 +		{ AF_INET6,		"AF_INET6" })
 +
 +DECLARE_EVENT_CLASS(xdr_buf_class,
++=======
+ DECLARE_EVENT_CLASS(rpc_xdr_buf_class,
++>>>>>>> c509f15a5801 (SUNRPC: Split the xdr_buf event class)
  	TP_PROTO(
+ 		const struct rpc_task *task,
  		const struct xdr_buf *xdr
  	),
  
diff --cc net/sunrpc/svc_xprt.c
index be8328c00ba4,8ef44275c255..000000000000
--- a/net/sunrpc/svc_xprt.c
+++ b/net/sunrpc/svc_xprt.c
@@@ -905,11 -913,17 +905,18 @@@ int svc_send(struct svc_rqst *rqstp
  	xb->len = xb->head[0].iov_len +
  		xb->page_len +
  		xb->tail[0].iov_len;
++<<<<<<< HEAD
 +	trace_svc_sendto(xb);
++=======
+ 	trace_svc_xdr_sendto(rqstp, xb);
+ 
+ 	/* Grab mutex to serialize outgoing data. */
+ 	mutex_lock(&xprt->xpt_mutex);
++>>>>>>> c509f15a5801 (SUNRPC: Split the xdr_buf event class)
  	trace_svc_stats_latency(rqstp);
 -	if (test_bit(XPT_DEAD, &xprt->xpt_flags)
 -			|| test_bit(XPT_CLOSE, &xprt->xpt_flags))
 -		len = -ENOTCONN;
 -	else
 -		len = xprt->xpt_ops->xpo_sendto(rqstp);
 -	mutex_unlock(&xprt->xpt_mutex);
 +
 +	len = xprt->xpt_ops->xpo_sendto(rqstp);
 +
  	trace_svc_send(rqstp, len);
  	svc_xprt_release(rqstp);
  
* Unmerged path include/trace/events/sunrpc.h
diff --git a/net/sunrpc/clnt.c b/net/sunrpc/clnt.c
index 146592179757..003d722ac891 100644
--- a/net/sunrpc/clnt.c
+++ b/net/sunrpc/clnt.c
@@ -1269,7 +1269,7 @@ void rpc_prepare_reply_pages(struct rpc_rqst *req, struct page **pages,
 	hdrsize += RPC_REPHDRSIZE + req->rq_cred->cr_auth->au_ralign - 1;
 
 	xdr_inline_pages(&req->rq_rcv_buf, hdrsize << 2, pages, base, len);
-	trace_rpc_reply_pages(req);
+	trace_rpc_xdr_reply_pages(req->rq_task, &req->rq_rcv_buf);
 }
 EXPORT_SYMBOL_GPL(rpc_prepare_reply_pages);
 
@@ -2531,7 +2531,7 @@ call_decode(struct rpc_task *task)
 		goto out;
 
 	req->rq_rcv_buf.len = req->rq_private_buf.len;
-	trace_xprt_recvfrom(&req->rq_rcv_buf);
+	trace_rpc_xdr_recvfrom(task, &req->rq_rcv_buf);
 
 	/* Check that the softirq receive buffer is valid */
 	WARN_ON(memcmp(&req->rq_rcv_buf, &req->rq_private_buf,
* Unmerged path net/sunrpc/svc_xprt.c
diff --git a/net/sunrpc/xprt.c b/net/sunrpc/xprt.c
index 65204304beb1..1cab75edc6b8 100644
--- a/net/sunrpc/xprt.c
+++ b/net/sunrpc/xprt.c
@@ -1468,7 +1468,7 @@ xprt_request_transmit(struct rpc_rqst *req, struct rpc_task *snd_task)
 	 */
 	req->rq_ntrans++;
 
-	trace_xprt_sendto(&req->rq_snd_buf);
+	trace_rpc_xdr_sendto(task, &req->rq_snd_buf);
 	connect_cookie = xprt->connect_cookie;
 	status = xprt->ops->send_request(req);
 	if (status != 0) {
