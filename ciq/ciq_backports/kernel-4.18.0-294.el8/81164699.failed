RDMA/core: Add the core support field to METHOD_GET_CONTEXT

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Michael Guralnik <michaelgur@mellanox.com>
commit 811646998e3e64af19524c8e99b790a4043c5f9b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/81164699.failed

Add the core support field to METHOD_GET_CONTEXT, this field should
represent capabilities that are not device-specific.

Return support for optional access flags for memory regions. User-space
will use this capability to mask the optional access flags for
unsupporting kernels.

Link: https://lore.kernel.org/r/1578506740-22188-10-git-send-email-yishaih@mellanox.com
	Signed-off-by: Michael Guralnik <michaelgur@mellanox.com>
	Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 811646998e3e64af19524c8e99b790a4043c5f9b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_std_types_device.c
#	include/uapi/rdma/ib_user_ioctl_cmds.h
diff --cc drivers/infiniband/core/uverbs_std_types_device.c
index 2a3f2f01028d,ae4a59d6f9b1..000000000000
--- a/drivers/infiniband/core/uverbs_std_types_device.c
+++ b/drivers/infiniband/core/uverbs_std_types_device.c
@@@ -200,6 -200,43 +200,46 @@@ static int UVERBS_HANDLER(UVERBS_METHOD
  					     &resp, sizeof(resp));
  }
  
++<<<<<<< HEAD
++=======
+ static int UVERBS_HANDLER(UVERBS_METHOD_GET_CONTEXT)(
+ 	struct uverbs_attr_bundle *attrs)
+ {
+ 	u32 num_comp = attrs->ufile->device->num_comp_vectors;
+ 	u64 core_support = IB_UVERBS_CORE_SUPPORT_OPTIONAL_MR_ACCESS;
+ 	int ret;
+ 
+ 	ret = uverbs_copy_to(attrs, UVERBS_ATTR_GET_CONTEXT_NUM_COMP_VECTORS,
+ 			     &num_comp, sizeof(num_comp));
+ 	if (IS_UVERBS_COPY_ERR(ret))
+ 		return ret;
+ 
+ 	ret = uverbs_copy_to(attrs, UVERBS_ATTR_GET_CONTEXT_CORE_SUPPORT,
+ 			     &core_support, sizeof(core_support));
+ 	if (IS_UVERBS_COPY_ERR(ret))
+ 		return ret;
+ 
+ 	ret = ib_alloc_ucontext(attrs);
+ 	if (ret)
+ 		return ret;
+ 	ret = ib_init_ucontext(attrs);
+ 	if (ret) {
+ 		kfree(attrs->context);
+ 		attrs->context = NULL;
+ 		return ret;
+ 	}
+ 	return 0;
+ }
+ 
+ DECLARE_UVERBS_NAMED_METHOD(
+ 	UVERBS_METHOD_GET_CONTEXT,
+ 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_GET_CONTEXT_NUM_COMP_VECTORS,
+ 			    UVERBS_ATTR_TYPE(u32), UA_OPTIONAL),
+ 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_GET_CONTEXT_CORE_SUPPORT,
+ 			    UVERBS_ATTR_TYPE(u64), UA_OPTIONAL),
+ 	UVERBS_ATTR_UHW());
+ 
++>>>>>>> 811646998e3e (RDMA/core: Add the core support field to METHOD_GET_CONTEXT)
  DECLARE_UVERBS_NAMED_METHOD(
  	UVERBS_METHOD_INFO_HANDLES,
  	/* Also includes any device specific object ids */
diff --cc include/uapi/rdma/ib_user_ioctl_cmds.h
index 498955c576f3,d4ddbe4e696c..000000000000
--- a/include/uapi/rdma/ib_user_ioctl_cmds.h
+++ b/include/uapi/rdma/ib_user_ioctl_cmds.h
@@@ -81,6 -82,11 +81,14 @@@ enum uverbs_attrs_query_port_cmd_attr_i
  	UVERBS_ATTR_QUERY_PORT_RESP,
  };
  
++<<<<<<< HEAD
++=======
+ enum uverbs_attrs_get_context_attr_ids {
+ 	UVERBS_ATTR_GET_CONTEXT_NUM_COMP_VECTORS,
+ 	UVERBS_ATTR_GET_CONTEXT_CORE_SUPPORT,
+ };
+ 
++>>>>>>> 811646998e3e (RDMA/core: Add the core support field to METHOD_GET_CONTEXT)
  enum uverbs_attrs_create_cq_cmd_attr_ids {
  	UVERBS_ATTR_CREATE_CQ_HANDLE,
  	UVERBS_ATTR_CREATE_CQ_CQE,
* Unmerged path drivers/infiniband/core/uverbs_std_types_device.c
* Unmerged path include/uapi/rdma/ib_user_ioctl_cmds.h
diff --git a/include/uapi/rdma/ib_user_ioctl_verbs.h b/include/uapi/rdma/ib_user_ioctl_verbs.h
index 2a165f40ee38..a640bb814be0 100644
--- a/include/uapi/rdma/ib_user_ioctl_verbs.h
+++ b/include/uapi/rdma/ib_user_ioctl_verbs.h
@@ -44,6 +44,10 @@
 #define IB_UVERBS_ACCESS_OPTIONAL_FIRST (1 << 20)
 #define IB_UVERBS_ACCESS_OPTIONAL_LAST (1 << 29)
 
+enum ib_uverbs_core_support {
+	IB_UVERBS_CORE_SUPPORT_OPTIONAL_MR_ACCESS = 1 << 0,
+};
+
 enum ib_uverbs_access_flags {
 	IB_UVERBS_ACCESS_LOCAL_WRITE = 1 << 0,
 	IB_UVERBS_ACCESS_REMOTE_WRITE = 1 << 1,
