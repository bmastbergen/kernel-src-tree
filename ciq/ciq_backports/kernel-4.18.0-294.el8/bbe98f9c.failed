khugepaged: khugepaged_test_exit() check mmget_still_valid()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Hugh Dickins <hughd@google.com>
commit bbe98f9cadff58cdd6a4acaeba0efa8565dabe65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/bbe98f9c.failed

Move collapse_huge_page()'s mmget_still_valid() check into
khugepaged_test_exit() itself.  collapse_huge_page() is used for anon THP
only, and earned its mmget_still_valid() check because it inserts a huge
pmd entry in place of the page table's pmd entry; whereas
collapse_file()'s retract_page_tables() or collapse_pte_mapped_thp()
merely clears the page table's pmd entry.  But core dumping without mmap
lock must have been as open to mistaking a racily cleared pmd entry for a
page table at physical page 0, as exit_mmap() was.  And we certainly have
no interest in mapping as a THP once dumping core.

Fixes: 59ea6d06cfa9 ("coredump: fix race condition between collapse_huge_page() and core dumping")
	Signed-off-by: Hugh Dickins <hughd@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andrea Arcangeli <aarcange@redhat.com>
	Cc: Song Liu <songliubraving@fb.com>
	Cc: Mike Kravetz <mike.kravetz@oracle.com>
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: <stable@vger.kernel.org>	[4.8+]
Link: http://lkml.kernel.org/r/alpine.LSU.2.11.2008021217020.27773@eggly.anvils
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit bbe98f9cadff58cdd6a4acaeba0efa8565dabe65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/khugepaged.c
diff --cc mm/khugepaged.c
index 9b4e03006b98,b52bd46ad146..000000000000
--- a/mm/khugepaged.c
+++ b/mm/khugepaged.c
@@@ -1036,10 -1099,7 +1036,14 @@@ static void collapse_huge_page(struct m
  	 * gup_fast later handled by the ptep_clear_flush and the VM
  	 * handled by the anon_vma lock + PG_lock.
  	 */
++<<<<<<< HEAD
 +	down_write(&mm->mmap_sem);
 +	result = SCAN_ANY_PROCESS;
 +	if (!mmget_still_valid(mm))
 +		goto out;
++=======
+ 	mmap_write_lock(mm);
++>>>>>>> bbe98f9cadff (khugepaged: khugepaged_test_exit() check mmget_still_valid())
  	result = hugepage_vma_revalidate(mm, address, &vma);
  	if (result)
  		goto out;
* Unmerged path mm/khugepaged.c
