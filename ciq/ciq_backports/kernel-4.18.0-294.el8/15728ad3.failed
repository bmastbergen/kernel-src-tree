libbpf: Fix BTF-defined map-in-map initialization on 32-bit host arches

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 15728ad3e71c120278105f20fa65b3735e715e0f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/15728ad3.failed

Libbpf built in 32-bit mode should be careful about not conflating 64-bit BPF
pointers in BPF ELF file and host architecture pointers. This patch fixes
issue of incorrect initializating of map-in-map inner map slots due to such
difference.

Fixes: 646f02ffdd49 ("libbpf: Add BTF-defined map-in-map support")
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200813204945.1020225-4-andriin@fb.com
(cherry picked from commit 15728ad3e71c120278105f20fa65b3735e715e0f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 161a96c2ea5a,6accddaaedab..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -5172,9 -5195,10 +5172,15 @@@ static int bpf_object__collect_st_ops_r
  static int bpf_object__collect_map_relos(struct bpf_object *obj,
  					 GElf_Shdr *shdr, Elf_Data *data)
  {
++<<<<<<< HEAD
 +	int i, j, nrels, new_sz, ptr_sz = sizeof(void *);
++=======
+ 	const int bpf_ptr_sz = 8, host_ptr_sz = sizeof(void *);
+ 	int i, j, nrels, new_sz;
+ 	const struct btf_var_secinfo *vi = NULL;
++>>>>>>> 15728ad3e71c (libbpf: Fix BTF-defined map-in-map initialization on 32-bit host arches)
  	const struct btf_type *sec, *var, *def;
 +	const struct btf_var_secinfo *vi;
  	const struct btf_member *member;
  	struct bpf_map *map, *targ_map;
  	const char *name, *mname;
* Unmerged path tools/lib/bpf/libbpf.c
