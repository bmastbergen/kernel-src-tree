powerpc/security: make display of branch cache flush more consistent

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Nicholas Piggin <npiggin@gmail.com>
commit 1afe00c74ffe6d502bffa81c7d849cb4640d7ae5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1afe00c7.failed

Make the count-cache and link-stack messages look the same

	Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20200609070610.846703-4-npiggin@gmail.com
(cherry picked from commit 1afe00c74ffe6d502bffa81c7d849cb4640d7ae5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/security.c
diff --cc arch/powerpc/kernel/security.c
index 9203c2cff485,659ef6a92bb9..000000000000
--- a/arch/powerpc/kernel/security.c
+++ b/arch/powerpc/kernel/security.c
@@@ -415,23 -429,25 +415,33 @@@ device_initcall(stf_barrier_debugfs_ini
  
  static void no_count_cache_flush(void)
  {
++<<<<<<< HEAD
 +	count_cache_flush_type = COUNT_CACHE_FLUSH_NONE;
 +	pr_info("count-cache-flush: software flush disabled.\n");
++=======
+ 	count_cache_flush_type = BRANCH_CACHE_FLUSH_NONE;
+ 	pr_info("count-cache-flush: flush disabled.\n");
++>>>>>>> 1afe00c74ffe (powerpc/security: make display of branch cache flush more consistent)
  }
  
 -static void toggle_branch_cache_flush(bool enable)
 +static void toggle_count_cache_flush(bool enable)
  {
  	if (!security_ftr_enabled(SEC_FTR_FLUSH_COUNT_CACHE) &&
  	    !security_ftr_enabled(SEC_FTR_FLUSH_LINK_STACK))
  		enable = false;
  
  	if (!enable) {
 -		patch_instruction_site(&patch__call_flush_branch_caches,
 -				       ppc_inst(PPC_INST_NOP));
 +		patch_instruction_site(&patch__call_flush_count_cache, PPC_INST_NOP);
  #ifdef CONFIG_KVM_BOOK3S_HV_POSSIBLE
 -		patch_instruction_site(&patch__call_kvm_flush_link_stack,
 -				       ppc_inst(PPC_INST_NOP));
 +		patch_instruction_site(&patch__call_kvm_flush_link_stack, PPC_INST_NOP);
  #endif
++<<<<<<< HEAD
 +		pr_info("link-stack-flush: software flush disabled.\n");
 +		link_stack_flush_enabled = false;
++=======
+ 		pr_info("link-stack-flush: flush disabled.\n");
+ 		link_stack_flush_type = BRANCH_CACHE_FLUSH_NONE;
++>>>>>>> 1afe00c74ffe (powerpc/security: make display of branch cache flush more consistent)
  		no_count_cache_flush();
  		return;
  	}
@@@ -457,14 -474,14 +467,25 @@@
  	}
  
  	if (!security_ftr_enabled(SEC_FTR_BCCTR_FLUSH_ASSIST)) {
++<<<<<<< HEAD
 +		count_cache_flush_type = COUNT_CACHE_FLUSH_SW;
 +		pr_info("count-cache-flush: full software flush sequence enabled.\n");
 +		return;
 +	}
 +
 +	patch_instruction_site(&patch__flush_count_cache_return, PPC_INST_BLR);
 +	count_cache_flush_type = COUNT_CACHE_FLUSH_HW;
 +	pr_info("count-cache-flush: hardware assisted flush sequence enabled\n");
++=======
+ 		count_cache_flush_type = BRANCH_CACHE_FLUSH_SW;
+ 		pr_info("count-cache-flush: software flush enabled.\n");
+ 		return;
+ 	}
+ 
+ 	patch_instruction_site(&patch__flush_count_cache_return, ppc_inst(PPC_INST_BLR));
+ 	count_cache_flush_type = BRANCH_CACHE_FLUSH_HW;
+ 	pr_info("count-cache-flush: hardware flush enabled.\n");
++>>>>>>> 1afe00c74ffe (powerpc/security: make display of branch cache flush more consistent)
  }
  
  void setup_count_cache_flush(void)
* Unmerged path arch/powerpc/kernel/security.c
