ath10k: fix few checkpatch warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Kalle Valo <kvalo@codeaurora.org>
commit 9a5fccc1e8079a5e506b7a9aa44f2cfef2752ec2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/9a5fccc1.failed

Fix warnings which were recently introduced:

drivers/net/wireless/ath/ath10k/ahb.c:462: Alignment should match open parenthesis
drivers/net/wireless/ath/ath10k/ahb.c:470: Alignment should match open parenthesis
drivers/net/wireless/ath/ath10k/sdio.c:697: space prohibited before that close parenthesis ')'

	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
(cherry picked from commit 9a5fccc1e8079a5e506b7a9aa44f2cfef2752ec2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/ath/ath10k/ahb.c
diff --cc drivers/net/wireless/ath/ath10k/ahb.c
index f80854180e21,342a7e58018a..000000000000
--- a/drivers/net/wireless/ath/ath10k/ahb.c
+++ b/drivers/net/wireless/ath/ath10k/ahb.c
@@@ -458,16 -458,16 +458,26 @@@ static int ath10k_ahb_resource_init(str
  
  	ar_ahb->mem_len = resource_size(res);
  
++<<<<<<< HEAD
 +	ar_ahb->gcc_mem = ioremap_nocache(ATH10K_GCC_REG_BASE,
 +					  ATH10K_GCC_REG_SIZE);
++=======
+ 	ar_ahb->gcc_mem = ioremap(ATH10K_GCC_REG_BASE,
+ 				  ATH10K_GCC_REG_SIZE);
++>>>>>>> 9a5fccc1e807 (ath10k: fix few checkpatch warnings)
  	if (!ar_ahb->gcc_mem) {
  		ath10k_err(ar, "gcc mem ioremap error\n");
  		ret = -ENOMEM;
  		goto err_mem_unmap;
  	}
  
++<<<<<<< HEAD
 +	ar_ahb->tcsr_mem = ioremap_nocache(ATH10K_TCSR_REG_BASE,
 +					   ATH10K_TCSR_REG_SIZE);
++=======
+ 	ar_ahb->tcsr_mem = ioremap(ATH10K_TCSR_REG_BASE,
+ 				   ATH10K_TCSR_REG_SIZE);
++>>>>>>> 9a5fccc1e807 (ath10k: fix few checkpatch warnings)
  	if (!ar_ahb->tcsr_mem) {
  		ath10k_err(ar, "tcsr mem ioremap error\n");
  		ret = -ENOMEM;
* Unmerged path drivers/net/wireless/ath/ath10k/ahb.c
diff --git a/drivers/net/wireless/ath/ath10k/sdio.c b/drivers/net/wireless/ath/ath10k/sdio.c
index e5316b911e1d..2e9d78222153 100644
--- a/drivers/net/wireless/ath/ath10k/sdio.c
+++ b/drivers/net/wireless/ath/ath10k/sdio.c
@@ -694,7 +694,7 @@ static int ath10k_sdio_mbox_rx_fetch_bundle(struct ath10k *ar)
 		htc_hdr = (struct ath10k_htc_hdr *)(ar_sdio->vsg_buffer + pkt_offset);
 		pkt->act_len = le16_to_cpu(htc_hdr->len) + sizeof(*htc_hdr);
 
-		if (pkt->act_len > pkt->alloc_len ) {
+		if (pkt->act_len > pkt->alloc_len) {
 			ret = -EINVAL;
 			goto err;
 		}
