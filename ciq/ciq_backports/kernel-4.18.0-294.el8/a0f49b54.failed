devlink: Add a new devlink port split ability attribute and pass to netlink

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Danielle Ratson <danieller@mellanox.com>
commit a0f49b54865273c895be3826d6d59cbc5ad725c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a0f49b54.failed

Add a new attribute that indicates the split ability of devlink port.

Drivers are expected to set it via devlink_port_attrs_set(), before
registering the port.

	Signed-off-by: Danielle Ratson <danieller@mellanox.com>
	Reviewed-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a0f49b54865273c895be3826d6d59cbc5ad725c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/core.c
#	drivers/net/ethernet/netronome/nfp/nfp_devlink.c
#	include/net/devlink.h
#	include/uapi/linux/devlink.h
#	net/core/devlink.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/core.c
index 6c4024937698,8b3791d73c99..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/core.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/core.c
@@@ -2130,12 -2130,19 +2130,23 @@@ static int __mlxsw_core_port_init(struc
  	struct mlxsw_core_port *mlxsw_core_port =
  					&mlxsw_core->ports[local_port];
  	struct devlink_port *devlink_port = &mlxsw_core_port->devlink_port;
 -	struct devlink_port_attrs attrs = {};
  	int err;
  
++<<<<<<< HEAD
++=======
+ 	attrs.split = split;
+ 	attrs.lanes = lanes;
+ 	attrs.splittable = splittable;
+ 	attrs.flavour = flavour;
+ 	attrs.phys.port_number = port_number;
+ 	attrs.phys.split_subport_number = split_port_subnumber;
+ 	memcpy(attrs.switch_id.id, switch_id, switch_id_len);
+ 	attrs.switch_id.id_len = switch_id_len;
++>>>>>>> a0f49b548652 (devlink: Add a new devlink port split ability attribute and pass to netlink)
  	mlxsw_core_port->local_port = local_port;
 -	devlink_port_attrs_set(devlink_port, &attrs);
 +	devlink_port_attrs_set(devlink_port, flavour, port_number,
 +			       split, split_port_subnumber,
 +			       switch_id, switch_id_len);
  	err = devlink_port_register(devlink, devlink_port, local_port);
  	if (err)
  		memset(mlxsw_core_port, 0, sizeof(*mlxsw_core_port));
diff --cc drivers/net/ethernet/netronome/nfp/nfp_devlink.c
index 07dbf4d72227,b6a10565309a..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_devlink.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_devlink.c
@@@ -365,10 -366,15 +365,18 @@@ int nfp_devlink_port_register(struct nf
  	if (ret)
  		return ret;
  
++<<<<<<< HEAD
++=======
+ 	attrs.split = eth_port.is_split;
+ 	attrs.splittable = !attrs.split;
+ 	attrs.flavour = DEVLINK_PORT_FLAVOUR_PHYSICAL;
+ 	attrs.phys.port_number = eth_port.label_port;
+ 	attrs.phys.split_subport_number = eth_port.label_subport;
++>>>>>>> a0f49b548652 (devlink: Add a new devlink port split ability attribute and pass to netlink)
  	serial_len = nfp_cpp_serial(port->app->cpp, &serial);
 -	memcpy(attrs.switch_id.id, serial, serial_len);
 -	attrs.switch_id.id_len = serial_len;
 -	devlink_port_attrs_set(&port->dl_port, &attrs);
 +	devlink_port_attrs_set(&port->dl_port, DEVLINK_PORT_FLAVOUR_PHYSICAL,
 +			       eth_port.label_port, eth_port.is_split,
 +			       eth_port.label_subport, serial, serial_len);
  
  	devlink = priv_to_devlink(app->pf);
  
diff --cc include/net/devlink.h
index 8fb457f77884,746bed538664..000000000000
--- a/include/net/devlink.h
+++ b/include/net/devlink.h
@@@ -68,8 -64,18 +68,23 @@@ struct devlink_port_pci_vf_attrs 
  	u16 vf;	/* Associated PCI VF for of the PCI PF for this port. */
  };
  
++<<<<<<< HEAD
 +struct devlink_port_attrs {
 +	u8 split:1;
++=======
+ /**
+  * struct devlink_port_attrs - devlink port object
+  * @flavour: flavour of the port
+  * @split: indicates if this is split port
+  * @splittable: indicates if the port can be split.
+  * @lanes: maximum number of lanes the port supports. 0 value is not passed to netlink.
+  * @switch_id: if the port is part of switch, this is buffer with ID, otherwise this is NULL
+  */
+ struct devlink_port_attrs {
+ 	u8 split:1,
+ 	   splittable:1;
+ 	u32 lanes;
++>>>>>>> a0f49b548652 (devlink: Add a new devlink port split ability attribute and pass to netlink)
  	enum devlink_port_flavour flavour;
  	struct netdev_phys_item_id switch_id;
  	union {
diff --cc include/uapi/linux/devlink.h
index 87c83a82991b,cfef4245ea5a..000000000000
--- a/include/uapi/linux/devlink.h
+++ b/include/uapi/linux/devlink.h
@@@ -455,6 -455,9 +455,12 @@@ enum devlink_attr 
  
  	DEVLINK_ATTR_INFO_BOARD_SERIAL_NUMBER,	/* string */
  
++<<<<<<< HEAD
++=======
+ 	DEVLINK_ATTR_PORT_LANES,			/* u32 */
+ 	DEVLINK_ATTR_PORT_SPLITTABLE,			/* u8 */
+ 
++>>>>>>> a0f49b548652 (devlink: Add a new devlink port split ability attribute and pass to netlink)
  	/* add new attributes above here, update the policy in devlink.c */
  
  	__DEVLINK_ATTR_MAX,
diff --cc net/core/devlink.c
index 128fc933cb1d,94c797b74378..000000000000
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@@ -534,6 -530,12 +534,15 @@@ static int devlink_nl_port_attrs_put(st
  
  	if (!devlink_port->attrs_set)
  		return 0;
++<<<<<<< HEAD
++=======
+ 	if (attrs->lanes) {
+ 		if (nla_put_u32(msg, DEVLINK_ATTR_PORT_LANES, attrs->lanes))
+ 			return -EMSGSIZE;
+ 	}
+ 	if (nla_put_u8(msg, DEVLINK_ATTR_PORT_SPLITTABLE, attrs->splittable))
+ 		return -EMSGSIZE;
++>>>>>>> a0f49b548652 (devlink: Add a new devlink port split ability attribute and pass to netlink)
  	if (nla_put_u16(msg, DEVLINK_ATTR_PORT_FLAVOUR, attrs->flavour))
  		return -EMSGSIZE;
  	switch (devlink_port->attrs.flavour) {
@@@ -7574,33 -7538,18 +7583,37 @@@ static int __devlink_port_attrs_set(str
   *	devlink_port_attrs_set - Set port attributes
   *
   *	@devlink_port: devlink port
 - *	@attrs: devlink port attrs
 + *	@flavour: flavour of the port
 + *	@port_number: number of the port that is facing user, for example
 + *	              the front panel port number
 + *	@split: indicates if this is split port
 + *	@split_subport_number: if the port is split, this is the number
 + *	                       of subport.
 + *	@switch_id: if the port is part of switch, this is buffer with ID,
 + *	            otwerwise this is NULL
 + *	@switch_id_len: length of the switch_id buffer
   */
  void devlink_port_attrs_set(struct devlink_port *devlink_port,
 -			    struct devlink_port_attrs *attrs)
 +			    enum devlink_port_flavour flavour,
 +			    u32 port_number, bool split,
 +			    u32 split_subport_number,
 +			    const unsigned char *switch_id,
 +			    unsigned char switch_id_len)
  {
 +	struct devlink_port_attrs *attrs = &devlink_port->attrs;
  	int ret;
  
 -	devlink_port->attrs = *attrs;
 -	ret = __devlink_port_attrs_set(devlink_port, attrs->flavour);
 +	ret = __devlink_port_attrs_set(devlink_port, flavour,
 +				       switch_id, switch_id_len);
  	if (ret)
  		return;
++<<<<<<< HEAD
 +	attrs->split = split;
 +	attrs->phys.port_number = port_number;
 +	attrs->phys.split_subport_number = split_subport_number;
++=======
+ 	WARN_ON(attrs->splittable && attrs->split);
++>>>>>>> a0f49b548652 (devlink: Add a new devlink port split ability attribute and pass to netlink)
  }
  EXPORT_SYMBOL_GPL(devlink_port_attrs_set);
  
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/core.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_devlink.c
* Unmerged path include/net/devlink.h
* Unmerged path include/uapi/linux/devlink.h
* Unmerged path net/core/devlink.c
