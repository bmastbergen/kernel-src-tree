IB/core: Add interface to advise_mr for kernel users

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Moni Shoua <monis@mellanox.com>
commit 87d8069f6b028793254ddd0a66df1d7b6d79b450
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/87d8069f.failed

Allow ULPs to call advise_mr, so they can control ODP regions
in the same way as user space applications.

	Signed-off-by: Moni Shoua <monis@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
(cherry picked from commit 87d8069f6b028793254ddd0a66df1d7b6d79b450)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/verbs.c
#	include/rdma/ib_verbs.h
diff --cc drivers/infiniband/core/verbs.c
index 302bd0aaa311,d33bdc9b01cd..000000000000
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@@ -1981,6 -1990,47 +1981,50 @@@ EXPORT_SYMBOL(ib_resize_cq)
  
  /* Memory regions */
  
++<<<<<<< HEAD
++=======
+ struct ib_mr *ib_reg_user_mr(struct ib_pd *pd, u64 start, u64 length,
+ 			     u64 virt_addr, int access_flags)
+ {
+ 	struct ib_mr *mr;
+ 
+ 	if (access_flags & IB_ACCESS_ON_DEMAND) {
+ 		if (!(pd->device->attrs.device_cap_flags &
+ 		      IB_DEVICE_ON_DEMAND_PAGING)) {
+ 			pr_debug("ODP support not available\n");
+ 			return ERR_PTR(-EINVAL);
+ 		}
+ 	}
+ 
+ 	mr = pd->device->ops.reg_user_mr(pd, start, length, virt_addr,
+ 					 access_flags, NULL);
+ 
+ 	if (IS_ERR(mr))
+ 		return mr;
+ 
+ 	mr->device = pd->device;
+ 	mr->pd = pd;
+ 	mr->dm = NULL;
+ 	atomic_inc(&pd->usecnt);
+ 	mr->res.type = RDMA_RESTRACK_MR;
+ 	rdma_restrack_kadd(&mr->res);
+ 
+ 	return mr;
+ }
+ EXPORT_SYMBOL(ib_reg_user_mr);
+ 
+ int ib_advise_mr(struct ib_pd *pd, enum ib_uverbs_advise_mr_advice advice,
+ 		 u32 flags, struct ib_sge *sg_list, u32 num_sge)
+ {
+ 	if (!pd->device->ops.advise_mr)
+ 		return -EOPNOTSUPP;
+ 
+ 	return pd->device->ops.advise_mr(pd, advice, flags, sg_list, num_sge,
+ 					 NULL);
+ }
+ EXPORT_SYMBOL(ib_advise_mr);
+ 
++>>>>>>> 87d8069f6b02 (IB/core: Add interface to advise_mr for kernel users)
  int ib_dereg_mr_user(struct ib_mr *mr, struct ib_udata *udata)
  {
  	struct ib_pd *pd = mr->pd;
diff --cc include/rdma/ib_verbs.h
index ef44680fa669,e2cc62217cc2..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -4160,6 -4153,15 +4160,18 @@@ static inline void ib_dma_free_coherent
  	dma_free_coherent(dev->dma_device, size, cpu_addr, dma_handle);
  }
  
++<<<<<<< HEAD
++=======
+ /* ib_reg_user_mr - register a memory region for virtual addresses from kernel
+  * space. This function should be called when 'current' is the owning MM.
+  */
+ struct ib_mr *ib_reg_user_mr(struct ib_pd *pd, u64 start, u64 length,
+ 			     u64 virt_addr, int mr_access_flags);
+ 
+ /* ib_advise_mr -  give an advice about an address range in a memory region */
+ int ib_advise_mr(struct ib_pd *pd, enum ib_uverbs_advise_mr_advice advice,
+ 		 u32 flags, struct ib_sge *sg_list, u32 num_sge);
++>>>>>>> 87d8069f6b02 (IB/core: Add interface to advise_mr for kernel users)
  /**
   * ib_dereg_mr_user - Deregisters a memory region and removes it from the
   *   HCA translation table.
* Unmerged path drivers/infiniband/core/verbs.c
* Unmerged path include/rdma/ib_verbs.h
