x86/realmode: Add SEV-ES specific trampoline entry point

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] realmode: Add SEV-ES specific trampoline entry point (Vitaly Kuznetsov) [1868080]
Rebuild_FUZZ: 96.30%
commit-author Joerg Roedel <jroedel@suse.de>
commit bf5ff276448f64f1f9ef9ffc9e231026e3887d3d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/bf5ff276.failed

The code at the trampoline entry point is executed in real-mode. In
real-mode, #VC exceptions can't be handled so anything that might cause
such an exception must be avoided.

In the standard trampoline entry code this is the WBINVD instruction and
the call to verify_cpu(), which are both not needed anyway when running
as an SEV-ES guest.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20200907131613.12703-66-joro@8bytes.org
(cherry picked from commit bf5ff276448f64f1f9ef9ffc9e231026e3887d3d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/realmode/rm/trampoline_64.S
diff --cc arch/x86/realmode/rm/trampoline_64.S
index 24bb7598774e,84c5d1b33d10..000000000000
--- a/arch/x86/realmode/rm/trampoline_64.S
+++ b/arch/x86/realmode/rm/trampoline_64.S
@@@ -81,6 -79,27 +82,30 @@@ ENTRY(trampoline_start
  no_longmode:
  	hlt
  	jmp no_longmode
++<<<<<<< HEAD
++=======
+ SYM_CODE_END(trampoline_start)
+ 
+ #ifdef CONFIG_AMD_MEM_ENCRYPT
+ /* SEV-ES supports non-zero IP for entry points - no alignment needed */
+ SYM_CODE_START(sev_es_trampoline_start)
+ 	cli			# We should be safe anyway
+ 
+ 	LJMPW_RM(1f)
+ 1:
+ 	mov	%cs, %ax	# Code and data in the same place
+ 	mov	%ax, %ds
+ 	mov	%ax, %es
+ 	mov	%ax, %ss
+ 
+ 	# Setup stack
+ 	movl	$rm_stack_end, %esp
+ 
+ 	jmp	.Lswitch_to_protected
+ SYM_CODE_END(sev_es_trampoline_start)
+ #endif	/* CONFIG_AMD_MEM_ENCRYPT */
+ 
++>>>>>>> bf5ff276448f (x86/realmode: Add SEV-ES specific trampoline entry point)
  #include "../kernel/verify_cpu.S"
  
  	.section ".text32","ax"
diff --git a/arch/x86/include/asm/realmode.h b/arch/x86/include/asm/realmode.h
index c53682303c9c..07a6bb9dc196 100644
--- a/arch/x86/include/asm/realmode.h
+++ b/arch/x86/include/asm/realmode.h
@@ -22,6 +22,9 @@ struct real_mode_header {
 	u32	trampoline_start;
 	u32	trampoline_status;
 	u32	trampoline_header;
+#ifdef CONFIG_AMD_MEM_ENCRYPT
+	u32	sev_es_trampoline_start;
+#endif
 #ifdef CONFIG_X86_64
 	u32	trampoline_pgd;
 #endif
diff --git a/arch/x86/realmode/rm/header.S b/arch/x86/realmode/rm/header.S
index 30b0d30d861a..885274dd829c 100644
--- a/arch/x86/realmode/rm/header.S
+++ b/arch/x86/realmode/rm/header.S
@@ -21,6 +21,9 @@ GLOBAL(real_mode_header)
 	.long	pa_trampoline_start
 	.long	pa_trampoline_status
 	.long	pa_trampoline_header
+#ifdef CONFIG_AMD_MEM_ENCRYPT
+	.long	pa_sev_es_trampoline_start
+#endif
 #ifdef CONFIG_X86_64
 	.long	pa_trampoline_pgd;
 #endif
* Unmerged path arch/x86/realmode/rm/trampoline_64.S
