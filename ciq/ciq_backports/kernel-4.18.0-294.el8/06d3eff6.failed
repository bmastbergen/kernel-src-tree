mm/thp: fix node page state in split_huge_page_to_list()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
commit 06d3eff62d9dc6f21e7ebeb14399f2542a36cdf5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/06d3eff6.failed

Make sure split_huge_page_to_list() handles the state of shmem THP and
file THP properly.

Link: http://lkml.kernel.org/r/20191017164223.2762148-3-songliubraving@fb.com
Fixes: 60fbf0ab5da1 ("mm,thp: stats for file backed THP")
	Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Signed-off-by: Song Liu <songliubraving@fb.com>
	Tested-by: Song Liu <songliubraving@fb.com>
	Acked-by: Yang Shi <yang.shi@linux.alibaba.com>
	Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
	Cc: Oleg Nesterov <oleg@redhat.com>
	Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Cc: William Kucharski <william.kucharski@oracle.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 06d3eff62d9dc6f21e7ebeb14399f2542a36cdf5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/huge_memory.c
diff --cc mm/huge_memory.c
index d50d4bea43b7,13cc93785006..000000000000
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@@ -2765,12 -2786,17 +2765,23 @@@ int split_huge_page_to_list(struct pag
  	mapcount = total_mapcount(head);
  	if (!mapcount && page_ref_freeze(head, 1 + extra_pins)) {
  		if (!list_empty(page_deferred_list(head))) {
 -			ds_queue->split_queue_len--;
 +			pgdata->split_queue_len--;
  			list_del(page_deferred_list(head));
  		}
++<<<<<<< HEAD
 +		if (mapping)
 +			__dec_node_page_state(page, NR_SHMEM_THPS);
 +		spin_unlock(&pgdata->split_queue_lock);
++=======
+ 		if (mapping) {
+ 			if (PageSwapBacked(page))
+ 				__dec_node_page_state(page, NR_SHMEM_THPS);
+ 			else
+ 				__dec_node_page_state(page, NR_FILE_THPS);
+ 		}
+ 
+ 		spin_unlock(&ds_queue->split_queue_lock);
++>>>>>>> 06d3eff62d9d (mm/thp: fix node page state in split_huge_page_to_list())
  		__split_huge_page(page, list, end, flags);
  		if (PageSwapCache(head)) {
  			swp_entry_t entry = { .val = page_private(head) };
* Unmerged path mm/huge_memory.c
