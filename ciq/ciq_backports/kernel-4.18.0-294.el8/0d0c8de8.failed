kasan: mark file common so ftrace doesn't trace it

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Anders Roxell <anders.roxell@linaro.org>
commit 0d0c8de8788b6c441ea01365612de7efc20cc682
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/0d0c8de8.failed

When option CONFIG_KASAN is enabled toghether with ftrace, function
ftrace_graph_caller() gets in to a recursion, via functions
kasan_check_read() and kasan_check_write().

 Breakpoint 2, ftrace_graph_caller () at ../arch/arm64/kernel/entry-ftrace.S:179
 179             mcount_get_pc             x0    //     function's pc
 (gdb) bt
 #0  ftrace_graph_caller () at ../arch/arm64/kernel/entry-ftrace.S:179
 #1  0xffffff90101406c8 in ftrace_caller () at ../arch/arm64/kernel/entry-ftrace.S:151
 #2  0xffffff90106fd084 in kasan_check_write (p=0xffffffc06c170878, size=4) at ../mm/kasan/common.c:105
 #3  0xffffff90104a2464 in atomic_add_return (v=<optimized out>, i=<optimized out>) at ./include/generated/atomic-instrumented.h:71
 #4  atomic_inc_return (v=<optimized out>) at ./include/generated/atomic-fallback.h:284
 #5  trace_graph_entry (trace=0xffffffc03f5ff380) at ../kernel/trace/trace_functions_graph.c:441
 #6  0xffffff9010481774 in trace_graph_entry_watchdog (trace=<optimized out>) at ../kernel/trace/trace_selftest.c:741
 #7  0xffffff90104a185c in function_graph_enter (ret=<optimized out>, func=<optimized out>, frame_pointer=18446743799894897728, retp=<optimized out>) at ../kernel/trace/trace_functions_graph.c:196
 #8  0xffffff9010140628 in prepare_ftrace_return (self_addr=18446743592948977792, parent=0xffffffc03f5ff418, frame_pointer=18446743799894897728) at ../arch/arm64/kernel/ftrace.c:231
 #9  0xffffff90101406f4 in ftrace_graph_caller () at ../arch/arm64/kernel/entry-ftrace.S:182
 Backtrace stopped: previous frame identical to this frame (corrupt stack?)
 (gdb)

Rework so that the kasan implementation isn't traced.

Link: http://lkml.kernel.org/r/20181212183447.15890-1-anders.roxell@linaro.org
	Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
	Acked-by: Dmitry Vyukov <dvyukov@google.com>
	Tested-by: Dmitry Vyukov <dvyukov@google.com>
	Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0d0c8de8788b6c441ea01365612de7efc20cc682)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/kasan/Makefile
diff --cc mm/kasan/Makefile
index 3289db38bc87,e2bb06c1b45e..000000000000
--- a/mm/kasan/Makefile
+++ b/mm/kasan/Makefile
@@@ -1,11 -1,19 +1,16 @@@
  # SPDX-License-Identifier: GPL-2.0
  KASAN_SANITIZE := n
 -UBSAN_SANITIZE_common.o := n
 -UBSAN_SANITIZE_generic.o := n
 -UBSAN_SANITIZE_tags.o := n
 +UBSAN_SANITIZE_kasan.o := n
  KCOV_INSTRUMENT := n
  
++<<<<<<< HEAD
 +CFLAGS_REMOVE_kasan.o = -pg
++=======
+ CFLAGS_REMOVE_common.o = -pg
+ CFLAGS_REMOVE_generic.o = -pg
++>>>>>>> 0d0c8de8788b (kasan: mark file common so ftrace doesn't trace it)
  # Function splitter causes unnecessary splits in __asan_load1/__asan_store1
  # see: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63533
 +CFLAGS_kasan.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector)
  
 -CFLAGS_common.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector)
 -CFLAGS_generic.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector)
 -CFLAGS_tags.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector)
 -
 -obj-$(CONFIG_KASAN) := common.o init.o report.o
 -obj-$(CONFIG_KASAN_GENERIC) += generic.o generic_report.o quarantine.o
 -obj-$(CONFIG_KASAN_SW_TAGS) += tags.o tags_report.o
 +obj-y := kasan.o report.o kasan_init.o quarantine.o
* Unmerged path mm/kasan/Makefile
