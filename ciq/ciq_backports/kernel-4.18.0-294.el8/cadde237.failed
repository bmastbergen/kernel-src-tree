x86/efi: Delete SGI UV1 detection.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] x86/efi: Delete SGI UV1 detection (Frank Ramsay) [1861439]
Rebuild_FUZZ: 98.51%
commit-author steve.wahl@hpe.com <steve.wahl@hpe.com>
commit cadde2379f0c64f00bb17834c7095a90595255b0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/cadde237.failed

As a part of UV1 platform removal, don't try to recognize the platform
through DMI to set the EFI_UV1_MEMMAP bit.

	Signed-off-by: Steve Wahl <steve.wahl@hpe.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
Link: https://lkml.kernel.org/r/20200713212955.667726896@hpe.com

(cherry picked from commit cadde2379f0c64f00bb17834c7095a90595255b0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/platform/efi/quirks.c
diff --cc arch/x86/platform/efi/quirks.c
index 4ccb57c20f71,d627f55d17df..000000000000
--- a/arch/x86/platform/efi/quirks.c
+++ b/arch/x86/platform/efi/quirks.c
@@@ -550,16 -558,6 +550,19 @@@ out
  	return ret;
  }
  
++<<<<<<< HEAD
 +static const struct dmi_system_id sgi_uv1_dmi[] = {
 +	{ NULL, "SGI UV1",
 +		{	DMI_MATCH(DMI_PRODUCT_NAME,	"Stoutland Platform"),
 +			DMI_MATCH(DMI_PRODUCT_VERSION,	"1.0"),
 +			DMI_MATCH(DMI_BIOS_VENDOR,	"SGI.COM"),
 +		}
 +	},
 +	{ } /* NULL entry stops DMI scanning */
 +};
 +
++=======
++>>>>>>> cadde2379f0c (x86/efi: Delete SGI UV1 detection.)
  void __init efi_apply_memmap_quirks(void)
  {
  	/*
@@@ -571,10 -569,6 +574,13 @@@
  		pr_info("Setup done, disabling due to 32/64-bit mismatch\n");
  		efi_memmap_unmap();
  	}
++<<<<<<< HEAD
 +
 +	/* UV2+ BIOS has a fix for this issue.  UV1 still needs the quirk. */
 +	if (dmi_check_system(sgi_uv1_dmi))
 +		set_bit(EFI_OLD_MEMMAP, &efi.flags);
++=======
++>>>>>>> cadde2379f0c (x86/efi: Delete SGI UV1 detection.)
  }
  
  /*
@@@ -708,10 -702,8 +714,13 @@@ void efi_recover_from_page_fault(unsign
  
  	/*
  	 * Make sure that an efi runtime service caused the page fault.
++<<<<<<< HEAD
 +	 * "efi_mm" cannot be used to check if the page fault had occurred
 +	 * in the firmware context because efi=old_map doesn't use efi_pgd.
++=======
++>>>>>>> cadde2379f0c (x86/efi: Delete SGI UV1 detection.)
  	 */
 -	if (efi_rts_work.efi_rts_id == EFI_NONE)
 +	if (efi_rts_work.efi_rts_id == NONE)
  		return;
  
  	/*
* Unmerged path arch/x86/platform/efi/quirks.c
