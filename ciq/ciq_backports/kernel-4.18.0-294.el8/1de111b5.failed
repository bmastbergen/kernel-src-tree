KVM: arm64: ARM_SMCCC_ARCH_WORKAROUND_1 doesn't return SMCCC_RET_NOT_REQUIRED

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Stephen Boyd <swboyd@chromium.org>
commit 1de111b51b829bcf01d2e57971f8fd07a665fa3f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1de111b5.failed

According to the SMCCC spec[1](7.5.2 Discovery) the
ARM_SMCCC_ARCH_WORKAROUND_1 function id only returns 0, 1, and
SMCCC_RET_NOT_SUPPORTED.

 0 is "workaround required and safe to call this function"
 1 is "workaround not required but safe to call this function"
 SMCCC_RET_NOT_SUPPORTED is "might be vulnerable or might not be, who knows, I give up!"

SMCCC_RET_NOT_SUPPORTED might as well mean "workaround required, except
calling this function may not work because it isn't implemented in some
cases". Wonderful. We map this SMC call to

 0 is SPECTRE_MITIGATED
 1 is SPECTRE_UNAFFECTED
 SMCCC_RET_NOT_SUPPORTED is SPECTRE_VULNERABLE

For KVM hypercalls (hvc), we've implemented this function id to return
SMCCC_RET_NOT_SUPPORTED, 0, and SMCCC_RET_NOT_REQUIRED. One of those
isn't supposed to be there. Per the code we call
arm64_get_spectre_v2_state() to figure out what to return for this
feature discovery call.

 0 is SPECTRE_MITIGATED
 SMCCC_RET_NOT_REQUIRED is SPECTRE_UNAFFECTED
 SMCCC_RET_NOT_SUPPORTED is SPECTRE_VULNERABLE

Let's clean this up so that KVM tells the guest this mapping:

 0 is SPECTRE_MITIGATED
 1 is SPECTRE_UNAFFECTED
 SMCCC_RET_NOT_SUPPORTED is SPECTRE_VULNERABLE

Note: SMCCC_RET_NOT_AFFECTED is 1 but isn't part of the SMCCC spec

Fixes: c118bbb52743 ("arm64: KVM: Propagate full Spectre v2 workaround state to KVM guests")
	Signed-off-by: Stephen Boyd <swboyd@chromium.org>
	Acked-by: Marc Zyngier <maz@kernel.org>
	Acked-by: Will Deacon <will@kernel.org>
	Cc: Andre Przywara <andre.przywara@arm.com>
	Cc: Steven Price <steven.price@arm.com>
	Cc: Marc Zyngier <maz@kernel.org>
	Cc: stable@vger.kernel.org
Link: https://developer.arm.com/documentation/den0028/latest [1]
Link: https://lore.kernel.org/r/20201023154751.1973872-1-swboyd@chromium.org
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 1de111b51b829bcf01d2e57971f8fd07a665fa3f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/proton-pack.c
#	arch/arm64/kvm/hypercalls.c
diff --cc arch/arm64/kvm/hypercalls.c
index 550dfa3e53cd,25ea4ecb6449..000000000000
--- a/arch/arm64/kvm/hypercalls.c
+++ b/arch/arm64/kvm/hypercalls.c
@@@ -24,14 -24,14 +24,19 @@@ int kvm_hvc_call_handler(struct kvm_vcp
  		feature = smccc_get_arg1(vcpu);
  		switch (feature) {
  		case ARM_SMCCC_ARCH_WORKAROUND_1:
 -			switch (arm64_get_spectre_v2_state()) {
 -			case SPECTRE_VULNERABLE:
 +			switch (kvm_arm_harden_branch_predictor()) {
 +			case KVM_BP_HARDEN_UNKNOWN:
  				break;
 -			case SPECTRE_MITIGATED:
 +			case KVM_BP_HARDEN_WA_NEEDED:
  				val = SMCCC_RET_SUCCESS;
  				break;
++<<<<<<< HEAD
 +			case KVM_BP_HARDEN_NOT_REQUIRED:
 +				val = SMCCC_RET_NOT_REQUIRED;
++=======
+ 			case SPECTRE_UNAFFECTED:
+ 				val = SMCCC_ARCH_WORKAROUND_RET_UNAFFECTED;
++>>>>>>> 1de111b51b82 (KVM: arm64: ARM_SMCCC_ARCH_WORKAROUND_1 doesn't return SMCCC_RET_NOT_REQUIRED)
  				break;
  			}
  			break;
* Unmerged path arch/arm64/kernel/proton-pack.c
* Unmerged path arch/arm64/kernel/proton-pack.c
* Unmerged path arch/arm64/kvm/hypercalls.c
diff --git a/include/linux/arm-smccc.h b/include/linux/arm-smccc.h
index ba52de053360..d4631a54d0a1 100644
--- a/include/linux/arm-smccc.h
+++ b/include/linux/arm-smccc.h
@@ -89,6 +89,8 @@
 			   ARM_SMCCC_SMC_32,				\
 			   0, 0x7fff)
 
+#define SMCCC_ARCH_WORKAROUND_RET_UNAFFECTED	1
+
 /* Paravirtualised time calls (defined by ARM DEN0057A) */
 #define ARM_SMCCC_HV_PV_TIME_FEATURES				\
 	ARM_SMCCC_CALL_VAL(ARM_SMCCC_FAST_CALL,			\
