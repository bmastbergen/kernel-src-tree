kheaders: remove the last bashism to allow sh to run it

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Masahiro Yamada <yamada.masahiro@socionext.com>
commit 1463f74f492eea7191f0178e01f3d38371a48210
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1463f74f.failed

'pushd' ... 'popd' is the last bash-specific code in this script.
One way to avoid it is to run the code in a sub-shell.

With that addressed, you can run this script with sh.

I replaced $(BASH) with $(CONFIG_SHELL), and I changed the hashbang
to #!/bin/sh.

	Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
(cherry picked from commit 1463f74f492eea7191f0178e01f3d38371a48210)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/Makefile
#	kernel/gen_kheaders.sh
diff --cc kernel/Makefile
index 331368aef029,42557f251fea..000000000000
--- a/kernel/Makefile
+++ b/kernel/Makefile
@@@ -119,7 -125,11 +119,18 @@@ targets += config_data.g
  $(obj)/config_data.gz: $(KCONFIG_CONFIG) FORCE
  	$(call if_changed,gzip)
  
++<<<<<<< HEAD
 +      filechk_ikconfiggz = (echo "static const char kernel_config_data[] __used = MAGIC_START"; cat $< | scripts/basic/bin2c; echo "MAGIC_END;")
 +targets += config_data.h
 +$(obj)/config_data.h: $(obj)/config_data.gz FORCE
 +	$(call filechk,ikconfiggz)
++=======
+ $(obj)/kheaders.o: $(obj)/kheaders_data.tar.xz
+ 
+ quiet_cmd_genikh = CHK     $(obj)/kheaders_data.tar.xz
+       cmd_genikh = $(CONFIG_SHELL) $(srctree)/kernel/gen_kheaders.sh $@
+ $(obj)/kheaders_data.tar.xz: FORCE
+ 	$(call cmd,genikh)
+ 
+ clean-files := kheaders_data.tar.xz kheaders.md5
++>>>>>>> 1463f74f492e (kheaders: remove the last bashism to allow sh to run it)
* Unmerged path kernel/gen_kheaders.sh
* Unmerged path kernel/Makefile
* Unmerged path kernel/gen_kheaders.sh
