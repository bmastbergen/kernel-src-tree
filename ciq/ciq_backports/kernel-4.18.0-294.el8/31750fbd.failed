scsi: ibmvfc: Send commands down HW Sub-CRQ when channelized

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Tyrel Datwyler <tyreld@linux.ibm.com>
commit 31750fbd7b6decc81d7736f236ea8be0f397df08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/31750fbd.failed

When the client has negotiated the use of channels all vfcFrames are
required to go down a Sub-CRQ channel or it is a protocoal violation. If
the adapter state is channelized submit vfcFrames to the appropriate
Sub-CRQ via the h_send_sub_crq() helper.

Link: https://lore.kernel.org/r/20210114203148.246656-16-tyreld@linux.ibm.com
	Reviewed-by: Brian King <brking@linux.vnet.ibm.com>
	Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 31750fbd7b6decc81d7736f236ea8be0f397df08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/ibmvscsi/ibmvfc.c
diff --cc drivers/scsi/ibmvscsi/ibmvfc.c
index 54859df4d95f,ca36c882a7e6..000000000000
--- a/drivers/scsi/ibmvscsi/ibmvfc.c
+++ b/drivers/scsi/ibmvscsi/ibmvfc.c
@@@ -1853,6 -1858,9 +1871,12 @@@ static int ibmvfc_queuecommand(struct S
  	struct ibmvfc_cmd *vfc_cmd;
  	struct ibmvfc_fcp_cmd_iu *iu;
  	struct ibmvfc_event *evt;
++<<<<<<< HEAD
++=======
+ 	u32 tag_and_hwq = blk_mq_unique_tag(cmnd->request);
+ 	u16 hwq = blk_mq_unique_tag_to_hwq(tag_and_hwq);
+ 	u16 scsi_channel;
++>>>>>>> 31750fbd7b6d (scsi: ibmvfc: Send commands down HW Sub-CRQ when channelized)
  	int rc;
  
  	if (unlikely((rc = fc_remote_port_chkready(rport))) ||
@@@ -1878,7 -1892,7 +1908,11 @@@
  		iu->pri_task_attr = IBMVFC_SIMPLE_TASK;
  	}
  
++<<<<<<< HEAD
 +	vfc_cmd->correlation = cpu_to_be64((u64)evt);
++=======
+ 	vfc_cmd->correlation = cpu_to_be64(evt);
++>>>>>>> 31750fbd7b6d (scsi: ibmvfc: Send commands down HW Sub-CRQ when channelized)
  
  	if (likely(!(rc = ibmvfc_map_sg_data(cmnd, evt, vfc_cmd, vhost->dev))))
  		return ibmvfc_send_event(evt, vhost, 0);
* Unmerged path drivers/scsi/ibmvscsi/ibmvfc.c
