powerpc/smp: Optimize update_coregroup_mask

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Srikar Dronamraju <srikar@linux.vnet.ibm.com>
commit 70a94089d7f7fa91bc1795622426b3ed017ec71a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/70a94089.failed

All threads of a SMT4/SMT8 core can either be part of CPU's coregroup
mask or outside the coregroup. Use this relation to reduce the
number of iterations needed to find all the CPUs that share the same
coregroup

Use a temporary mask to iterate through the CPUs that may share
coregroup mask. Also instead of setting one CPU at a time into
cpu_coregroup_mask, copy the SMT4/SMT8/submask at one shot.

	Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20200921095653.9701-12-srikar@linux.vnet.ibm.com
(cherry picked from commit 70a94089d7f7fa91bc1795622426b3ed017ec71a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/smp.c
diff --cc arch/powerpc/kernel/smp.c
index ac60a5ed6f13,0dc1b8591cc8..000000000000
--- a/arch/powerpc/kernel/smp.c
+++ b/arch/powerpc/kernel/smp.c
@@@ -1294,6 -1337,37 +1294,40 @@@ static inline void add_cpu_to_smallcore
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static void update_coregroup_mask(int cpu)
+ {
+ 	struct cpumask *(*submask_fn)(int) = cpu_sibling_mask;
+ 	cpumask_var_t mask;
+ 	int coregroup_id = cpu_to_coregroup_id(cpu);
+ 	int i;
+ 
+ 	alloc_cpumask_var_node(&mask, GFP_KERNEL, cpu_to_node(cpu));
+ 	cpumask_and(mask, cpu_online_mask, cpu_cpu_mask(cpu));
+ 
+ 	if (shared_caches)
+ 		submask_fn = cpu_l2_cache_mask;
+ 
+ 	/* Update coregroup mask with all the CPUs that are part of submask */
+ 	or_cpumasks_related(cpu, cpu, submask_fn, cpu_coregroup_mask);
+ 
+ 	/* Skip all CPUs already part of coregroup mask */
+ 	cpumask_andnot(mask, mask, cpu_coregroup_mask(cpu));
+ 
+ 	for_each_cpu(i, mask) {
+ 		/* Skip all CPUs not part of this coregroup */
+ 		if (coregroup_id == cpu_to_coregroup_id(i)) {
+ 			or_cpumasks_related(cpu, i, submask_fn, cpu_coregroup_mask);
+ 			cpumask_andnot(mask, mask, submask_fn(i));
+ 		} else {
+ 			cpumask_andnot(mask, mask, cpu_coregroup_mask(i));
+ 		}
+ 	}
+ 	free_cpumask_var(mask);
+ }
+ 
++>>>>>>> 70a94089d7f7 (powerpc/smp: Optimize update_coregroup_mask)
  static void add_cpu_to_masks(int cpu)
  {
  	int first_thread = cpu_first_thread_sibling(cpu);
* Unmerged path arch/powerpc/kernel/smp.c
