mptcp: fix subflow's remote_id issues

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Geliang Tang <geliangtang@gmail.com>
commit 2ff0e566faa4e92cba8138c5b396d6ba96a215f1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2ff0e566.failed

This patch set the init remote_id to zero, otherwise it will be a random
number.

Then it added the missing subflow's remote_id setting code both in
__mptcp_subflow_connect and in subflow_ulp_clone.

Fixes: 01cacb00b35cb ("mptcp: add netlink-based PM")
Fixes: ec3edaa7ca6ce ("mptcp: Add handling of outgoing MP_JOIN requests")
Fixes: f296234c98a8f ("mptcp: Add handling of incoming MP_JOIN requests")
	Signed-off-by: Geliang Tang <geliangtang@gmail.com>
	Reviewed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2ff0e566faa4e92cba8138c5b396d6ba96a215f1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/subflow.c
diff --cc net/mptcp/subflow.c
index 0831472e1e77,9ead43f79023..000000000000
--- a/net/mptcp/subflow.c
+++ b/net/mptcp/subflow.c
@@@ -1027,7 -1063,10 +1027,12 @@@ int __mptcp_subflow_connect(struct soc
  	struct mptcp_sock *msk = mptcp_sk(sk);
  	struct mptcp_subflow_context *subflow;
  	struct sockaddr_storage addr;
++<<<<<<< HEAD
++=======
+ 	int remote_id = remote->id;
+ 	int local_id = loc->id;
++>>>>>>> 2ff0e566faa4 (mptcp: fix subflow's remote_id issues)
  	struct socket *sf;
 -	struct sock *ssk;
  	u32 remote_token;
  	int addrlen;
  	int err;
@@@ -1056,9 -1108,11 +1061,17 @@@
  		goto failed;
  
  	mptcp_crypto_key_sha(subflow->remote_key, &remote_token, NULL);
++<<<<<<< HEAD
 +	pr_debug("msk=%p remote_token=%u", msk, remote_token);
 +	subflow->remote_token = remote_token;
 +	subflow->local_id = loc->id;
++=======
+ 	pr_debug("msk=%p remote_token=%u local_id=%d remote_id=%d", msk,
+ 		 remote_token, local_id, remote_id);
+ 	subflow->remote_token = remote_token;
+ 	subflow->local_id = local_id;
+ 	subflow->remote_id = remote_id;
++>>>>>>> 2ff0e566faa4 (mptcp: fix subflow's remote_id issues)
  	subflow->request_join = 1;
  	subflow->request_bkup = 1;
  	mptcp_info2sockaddr(remote, &addr);
diff --git a/net/mptcp/pm_netlink.c b/net/mptcp/pm_netlink.c
index 0e5e1c238635..d2026e26359c 100644
--- a/net/mptcp/pm_netlink.c
+++ b/net/mptcp/pm_netlink.c
@@ -181,9 +181,9 @@ static void check_work_pending(struct mptcp_sock *msk)
 
 static void mptcp_pm_create_subflow_or_signal_addr(struct mptcp_sock *msk)
 {
+	struct mptcp_addr_info remote = { 0 };
 	struct sock *sk = (struct sock *)msk;
 	struct mptcp_pm_addr_entry *local;
-	struct mptcp_addr_info remote;
 	struct pm_nl_pernet *pernet;
 
 	pernet = net_generic(sock_net((struct sock *)msk), pm_nl_pernet_id);
* Unmerged path net/mptcp/subflow.c
