iwlwifi: pcie: remove mangling for iwl_ax101_cfg_qu_hr

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Luca Coelho <luciano.coelho@intel.com>
commit ebe7b061e9293968181bbe60a3e261681358c50f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ebe7b061.failed

All devices that use iwl_ax101_cfg_qu_hr are recognized via the device
info table, so the cfg will never be iwl_ax101_cfg_qu_hr.  Remove the
code that converts this into QuZ and Qu-C, since it's not needed
anymore.

	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
Link: https://lore.kernel.org/r/iwlwifi.20200424194456.30b6b4aae1c1.If5e583835c9f7f2771a50ba1b2f33bb85f25b383@changeid
(cherry picked from commit ebe7b061e9293968181bbe60a3e261681358c50f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --cc drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index f5174670d861,4146526b1278..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@@ -1077,44 -1062,6 +1077,47 @@@ static int iwl_pci_probe(struct pci_de
  			   CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_GF4)) {
  			iwl_trans->cfg = &iwlax411_2ax_cfg_so_gf4_a0;
  		}
++<<<<<<< HEAD
 +	} else if (cfg == &iwl_ax101_cfg_qu_hr) {
 +		if ((CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id) ==
 +		     CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_HR) &&
 +		     iwl_trans->hw_rev == CSR_HW_REV_TYPE_QNJ_B0) ||
 +		    (CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id) ==
 +		     CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_HR1))) {
 +			iwl_trans->cfg = &iwl22000_2ax_cfg_qnj_hr_b0;
 +		} else if (CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id) ==
 +		    CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_HR) &&
 +		    iwl_trans->hw_rev == CSR_HW_REV_TYPE_QUZ) {
 +			iwl_trans->cfg = &iwl_ax101_cfg_quz_hr;
 +		} else if (CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id) ==
 +			   CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_HR)) {
 +			iwl_trans->cfg = &iwl_ax101_cfg_qu_hr;
 +		} else if (CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id) ==
 +			   CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_JF)) {
 +			iwl_trans->cfg = &iwl22000_2ax_cfg_jf;
 +		} else if (CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id) ==
 +			   CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_HRCDB)) {
 +			IWL_ERR(iwl_trans, "RF ID HRCDB is not supported\n");
 +			return -EINVAL;
 +		} else {
 +			IWL_ERR(iwl_trans, "Unrecognized RF ID 0x%08x\n",
 +				CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id));
 +			return -EINVAL;
 +		}
 +	} else if (CSR_HW_RF_ID_TYPE_CHIP_ID(iwl_trans->hw_rf_id) ==
 +		   CSR_HW_RF_ID_TYPE_CHIP_ID(CSR_HW_RF_ID_TYPE_HR) &&
 +		   iwl_trans->hw_rev == CSR_HW_REV_TYPE_QNJ_B0) {
 +		u32 hw_status;
 +
 +		hw_status = iwl_read_prph(iwl_trans, UMAG_GEN_HW_STATUS);
 +		if (CSR_HW_RF_STEP(iwl_trans->hw_rf_id) == SILICON_B_STEP)
 +			iwl_trans->cfg = &iwl22000_2ax_cfg_qnj_hr_b0;
 +		else if ((hw_status & UMAG_GEN_HW_IS_FPGA) &&
 +			 CSR_HW_RF_STEP(iwl_trans->hw_rf_id) ==
 +			 SILICON_A_STEP)
 +			iwl_trans->cfg = &iwl22000_2ax_cfg_qnj_hr_a0_f0;
++=======
++>>>>>>> ebe7b061e929 (iwlwifi: pcie: remove mangling for iwl_ax101_cfg_qu_hr)
  	}
  
  	/*
* Unmerged path drivers/net/wireless/intel/iwlwifi/pcie/drv.c
