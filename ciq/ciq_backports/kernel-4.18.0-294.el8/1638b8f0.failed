lib/vdso: Make clock_getres() POSIX compliant again

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 1638b8f096ca165965189b9626564c933c79fe63
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1638b8f0.failed

A recent commit removed the NULL pointer check from the clock_getres()
implementation causing a test case to fault.

POSIX requires an explicit NULL pointer check for clock_getres() aside of
the validity check of the clock_id argument for obscure reasons.

Add it back for both 32bit and 64bit.

Note, this is only a partial revert of the offending commit which does not
bring back the broken fallback invocation in the the 32bit compat
implementations of clock_getres() and clock_gettime().

Fixes: a9446a906f52 ("lib/vdso/32: Remove inconsistent NULL pointer checks")
	Reported-by: Andreas Schwab <schwab@linux-m68k.org>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Christophe Leroy <christophe.leroy@c-s.fr>
	Cc: stable@vger.kernel.org
Link: https://lkml.kernel.org/r/alpine.DEB.2.21.1910211202260.1904@nanos.tec.linutronix.de

(cherry picked from commit 1638b8f096ca165965189b9626564c933c79fe63)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/vdso/gettimeofday.c
diff --cc lib/vdso/gettimeofday.c
index 227d592db5c8,45f57fd2db64..000000000000
--- a/lib/vdso/gettimeofday.c
+++ b/lib/vdso/gettimeofday.c
@@@ -184,16 -211,23 +184,17 @@@ int __cvdso_clock_getres(clockid_t cloc
  		 */
  		ns = hrtimer_res;
  	} else {
 -		return -1;
 +		goto fallback;
  	}
  
- 	res->tv_sec = 0;
- 	res->tv_nsec = ns;
- 
+ 	if (likely(res)) {
+ 		res->tv_sec = 0;
+ 		res->tv_nsec = ns;
+ 	}
  	return 0;
 -}
 -
 -int __cvdso_clock_getres(clockid_t clock, struct __kernel_timespec *res)
 -{
 -	int ret = __cvdso_clock_getres_common(clock, res);
  
 -	if (unlikely(ret))
 -		return clock_getres_fallback(clock, res);
 -	return 0;
 +fallback:
 +	return clock_getres_fallback(clock, res);
  }
  
  static __maybe_unused int
@@@ -202,9 -236,17 +203,21 @@@ __cvdso_clock_getres_time32(clockid_t c
  	struct __kernel_timespec ts;
  	int ret;
  
 -	ret = __cvdso_clock_getres_common(clock, &ts);
 +	ret = __cvdso_clock_getres(clock, &ts);
  
++<<<<<<< HEAD
 +	if (ret == 0) {
++=======
+ #ifdef VDSO_HAS_32BIT_FALLBACK
+ 	if (unlikely(ret))
+ 		return clock_getres32_fallback(clock, res);
+ #else
+ 	if (unlikely(ret))
+ 		ret = clock_getres_fallback(clock, &ts);
+ #endif
+ 
+ 	if (likely(!ret && res)) {
++>>>>>>> 1638b8f096ca (lib/vdso: Make clock_getres() POSIX compliant again)
  		res->tv_sec = ts.tv_sec;
  		res->tv_nsec = ts.tv_nsec;
  	}
* Unmerged path lib/vdso/gettimeofday.c
