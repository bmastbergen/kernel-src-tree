x86/boot/compressed/64: Add page-fault handler

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] boot/compressed/64: Add page-fault handler (Vitaly Kuznetsov) [1868080]
Rebuild_FUZZ: 95.45%
commit-author Joerg Roedel <jroedel@suse.de>
commit 8b0d3b3b41ab6f14f1ce6d4a6b1c5f60b825123f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/8b0d3b3b.failed

Install a page-fault handler to add an identity mapping to addresses
not yet mapped. Also do some checking whether the error code is sane.

This makes non SEV-ES machines use the exception handling
infrastructure in the pre-decompressions boot code too, making it less
likely to break in the future.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Kees Cook <keescook@chromium.org>
Link: https://lkml.kernel.org/r/20200907131613.12703-16-joro@8bytes.org
(cherry picked from commit 8b0d3b3b41ab6f14f1ce6d4a6b1c5f60b825123f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/idt_64.c
#	arch/x86/boot/compressed/idt_handlers_64.S
#	arch/x86/boot/compressed/kaslr_64.c
#	arch/x86/boot/compressed/misc.h
diff --cc arch/x86/boot/compressed/kaslr_64.c
index 9557c5a15b91,e3d980ae9c2b..000000000000
--- a/arch/x86/boot/compressed/kaslr_64.c
+++ b/arch/x86/boot/compressed/kaslr_64.c
@@@ -22,8 -23,10 +23,14 @@@
  #include "misc.h"
  
  /* These actually do the work of building the kernel identity maps. */
++<<<<<<< HEAD:arch/x86/boot/compressed/kaslr_64.c
++=======
+ #include <linux/pgtable.h>
+ #include <asm/trap_pf.h>
+ #include <asm/trapnr.h>
++>>>>>>> 8b0d3b3b41ab (x86/boot/compressed/64: Add page-fault handler):arch/x86/boot/compressed/ident_map_64.c
  #include <asm/init.h>
 +#include <asm/pgtable.h>
  /* Use the static base for this part of the boot process */
  #undef __PAGE_OFFSET
  #define __PAGE_OFFSET __PAGE_OFFSET_BASE
diff --cc arch/x86/boot/compressed/misc.h
index d55a1ca4f95b,f0e199174c5f..000000000000
--- a/arch/x86/boot/compressed/misc.h
+++ b/arch/x86/boot/compressed/misc.h
@@@ -133,4 -137,19 +136,22 @@@ int count_immovable_mem_regions(void)
  static inline int count_immovable_mem_regions(void) { return 0; }
  #endif
  
++<<<<<<< HEAD
++=======
+ /* ident_map_64.c */
+ #ifdef CONFIG_X86_5LEVEL
+ extern unsigned int __pgtable_l5_enabled, pgdir_shift, ptrs_per_p4d;
+ #endif
+ 
+ /* Used by PAGE_KERN* macros: */
+ extern pteval_t __default_kernel_pte_mask;
+ 
+ /* idt_64.c */
+ extern gate_desc boot_idt[BOOT_IDT_ENTRIES];
+ extern struct desc_ptr boot_idt_desc;
+ 
+ /* IDT Entry Points */
+ void boot_page_fault(void);
+ 
++>>>>>>> 8b0d3b3b41ab (x86/boot/compressed/64: Add page-fault handler)
  #endif /* BOOT_COMPRESSED_MISC_H */
* Unmerged path arch/x86/boot/compressed/idt_64.c
* Unmerged path arch/x86/boot/compressed/idt_handlers_64.S
* Unmerged path arch/x86/boot/compressed/idt_64.c
* Unmerged path arch/x86/boot/compressed/idt_handlers_64.S
* Unmerged path arch/x86/boot/compressed/kaslr_64.c
* Unmerged path arch/x86/boot/compressed/misc.h
