tcp: cleanup sk_tx_skb_cache before reuse

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Eric Dumazet <edumazet@google.com>
commit eb70a1ae2339769156f8ecddd7f6cd59ac994888
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/eb70a1ae.failed

TCP stack relies on the fact that a freshly allocated skb
has skb->cb[] and skb_shinfo(skb)->tx_flags cleared.

When recycling tx skb, we must ensure these fields are cleared.

Fixes: 472c2e07eef0 ("tcp: add one skb cache for tx")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Cc: Soheil Hassas Yeganeh <soheil@google.com>
	Cc: Willem de Bruijn <willemb@google.com>
	Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit eb70a1ae2339769156f8ecddd7f6cd59ac994888)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp.c
diff --cc net/ipv4/tcp.c
index 93a220a78f1b,603e770d59b3..000000000000
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@@ -867,6 -865,18 +867,21 @@@ struct sk_buff *sk_stream_alloc_skb(str
  {
  	struct sk_buff *skb;
  
++<<<<<<< HEAD
++=======
+ 	if (likely(!size)) {
+ 		skb = sk->sk_tx_skb_cache;
+ 		if (skb && !skb_cloned(skb)) {
+ 			skb->truesize -= skb->data_len;
+ 			sk->sk_tx_skb_cache = NULL;
+ 			pskb_trim(skb, 0);
+ 			INIT_LIST_HEAD(&skb->tcp_tsorted_anchor);
+ 			skb_shinfo(skb)->tx_flags = 0;
+ 			memset(TCP_SKB_CB(skb), 0, sizeof(struct tcp_skb_cb));
+ 			return skb;
+ 		}
+ 	}
++>>>>>>> eb70a1ae2339 (tcp: cleanup sk_tx_skb_cache before reuse)
  	/* The TCP header must be at least 32-bit aligned.  */
  	size = ALIGN(size, 4);
  
* Unmerged path net/ipv4/tcp.c
