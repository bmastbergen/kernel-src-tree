lib/vdso: Only read hrtimer_res when needed in __cvdso_clock_getres()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Christophe Leroy <christophe.leroy@c-s.fr>
commit 49a101d7169c7729c7bab6b2f896faae34bd6c3d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/49a101d7.failed

Only perform READ_ONCE(vd[CS_HRES_COARSE].hrtimer_res) for
HRES and RAW clocks.

	Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lore.kernel.org/r/7ac2f0d21652f95e2bbdfa6bd514ae6c7caf53ab.1579196675.git.christophe.leroy@c-s.fr
(cherry picked from commit 49a101d7169c7729c7bab6b2f896faae34bd6c3d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/vdso/gettimeofday.c
diff --cc lib/vdso/gettimeofday.c
index 632c43443888,f8b8ec5e63ac..000000000000
--- a/lib/vdso/gettimeofday.c
+++ b/lib/vdso/gettimeofday.c
@@@ -154,17 -309,19 +154,27 @@@ static __maybe_unused time_t __cvdso_ti
  
  #ifdef VDSO_HAS_CLOCK_GETRES
  static __maybe_unused
 -int __cvdso_clock_getres_common(clockid_t clock, struct __kernel_timespec *res)
 +int __cvdso_clock_getres(clockid_t clock, struct __kernel_timespec *res)
  {
  	const struct vdso_data *vd = __arch_get_vdso_data();
++<<<<<<< HEAD
++=======
+ 	u32 msk;
++>>>>>>> 49a101d7169c (lib/vdso: Only read hrtimer_res when needed in __cvdso_clock_getres())
  	u64 ns;
 +	u32 msk;
 +	u64 hrtimer_res = READ_ONCE(vd[CS_HRES_COARSE].hrtimer_res);
  
  	/* Check for negative values or invalid clocks */
  	if (unlikely((u32) clock >= MAX_CLOCKS))
 -		return -1;
 +		goto fallback;
  
++<<<<<<< HEAD
++=======
+ 	if (IS_ENABLED(CONFIG_TIME_NS) && vd->clock_mode == VCLOCK_TIMENS)
+ 		vd = __arch_get_timens_vdso_data();
+ 
++>>>>>>> 49a101d7169c (lib/vdso: Only read hrtimer_res when needed in __cvdso_clock_getres())
  	/*
  	 * Convert the clockid to a bitmask and use it to check which
  	 * clocks are handled in the VDSO directly.
* Unmerged path lib/vdso/gettimeofday.c
