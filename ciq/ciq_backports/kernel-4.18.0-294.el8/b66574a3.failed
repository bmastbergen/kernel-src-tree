vfio/pci: Cleanup .probe() exit paths

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [vfio] pci: Cleanup .probe() exit paths (Clark Williams) [1860192]
Rebuild_FUZZ: 92.75%
commit-author Alex Williamson <alex.williamson@redhat.com>
commit b66574a3fb32e2bac5bf3589dae6d335b7a70689
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b66574a3.failed

The cleanup is getting a tad long.

	Reviewed-by: Cornelia Huck <cohuck@redhat.com>
	Reviewed-by: Kevin Tian <kevin.tian@intel.com>
	Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
(cherry picked from commit b66574a3fb32e2bac5bf3589dae6d335b7a70689)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/vfio/pci/vfio_pci.c
diff --cc drivers/vfio/pci/vfio_pci.c
index 5f0a4af4b896,6c6b37b5c04e..000000000000
--- a/drivers/vfio/pci/vfio_pci.c
+++ b/drivers/vfio/pci/vfio_pci.c
@@@ -1683,25 -1608,31 +1683,37 @@@ static int vfio_pci_probe(struct pci_de
  	spin_lock_init(&vdev->irqlock);
  	mutex_init(&vdev->ioeventfds_lock);
  	INIT_LIST_HEAD(&vdev->ioeventfds_list);
 +	mutex_init(&vdev->vma_lock);
 +	INIT_LIST_HEAD(&vdev->vma_list);
 +	init_rwsem(&vdev->memory_lock);
  
  	ret = vfio_add_group_dev(&pdev->dev, &vfio_pci_ops, vdev);
- 	if (ret) {
- 		vfio_iommu_group_put(group, &pdev->dev);
- 		kfree(vdev);
- 		return ret;
- 	}
+ 	if (ret)
+ 		goto out_free;
  
  	ret = vfio_pci_reflck_attach(vdev);
- 	if (ret) {
- 		vfio_del_group_dev(&pdev->dev);
- 		vfio_iommu_group_put(group, &pdev->dev);
- 		kfree(vdev);
- 		return ret;
+ 	if (ret)
+ 		goto out_del_group_dev;
+ 
++<<<<<<< HEAD
++=======
+ 	if (pdev->is_physfn) {
+ 		vdev->vf_token = kzalloc(sizeof(*vdev->vf_token), GFP_KERNEL);
+ 		if (!vdev->vf_token) {
+ 			ret = -ENOMEM;
+ 			goto out_reflck;
+ 		}
+ 
+ 		mutex_init(&vdev->vf_token->lock);
+ 		uuid_gen(&vdev->vf_token->uuid);
+ 
+ 		vdev->nb.notifier_call = vfio_pci_bus_notifier;
+ 		ret = bus_register_notifier(&pci_bus_type, &vdev->nb);
+ 		if (ret)
+ 			goto out_vf_token;
  	}
  
++>>>>>>> b66574a3fb32 (vfio/pci: Cleanup .probe() exit paths)
  	if (vfio_pci_is_vga(pdev)) {
  		vga_client_register(pdev, vdev, NULL, vfio_pci_set_vga_decode);
  		vga_set_legacy_decoding(pdev,
* Unmerged path drivers/vfio/pci/vfio_pci.c
