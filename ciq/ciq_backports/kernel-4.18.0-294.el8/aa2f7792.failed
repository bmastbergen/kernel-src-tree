ext4: disallow modifying DAX inode flag if inline_data has been set

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Xiao Yang <yangx.jy@cn.fujitsu.com>
commit aa2f77920b743c44e02e2dc8474bbf8bd30007a2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/aa2f7792.failed

inline_data is mutually exclusive to DAX so enabling both of them triggers
the following issue:
------------------------------------------
# mkfs.ext4 -F -O inline_data /dev/pmem1
...
# mount /dev/pmem1 /mnt
# echo 'test' >/mnt/file
# lsattr -l /mnt/file
/mnt/file                    Inline_Data
# xfs_io -c "chattr +x" /mnt/file
# xfs_io -c "lsattr -v" /mnt/file
[dax] /mnt/file
# umount /mnt
# mount /dev/pmem1 /mnt
# cat /mnt/file
cat: /mnt/file: Numerical result out of range
------------------------------------------

Fixes: b383a73f2b83 ("fs/ext4: Introduce DAX inode flag")
	Signed-off-by: Xiao Yang <yangx.jy@cn.fujitsu.com>
	Reviewed-by: Jan Kara <jack@suse.cz>
	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Reviewed-by: Andreas Dilger <adilger@dilger.ca>
Link: https://lore.kernel.org/r/20200828084330.15776-1-yangx.jy@cn.fujitsu.com
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit aa2f77920b743c44e02e2dc8474bbf8bd30007a2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/ext4.h
diff --cc fs/ext4/ext4.h
index 3fa62516bbdb,d2a4b67319d4..000000000000
--- a/fs/ext4/ext4.h
+++ b/fs/ext4/ext4.h
@@@ -435,6 -490,10 +435,13 @@@ struct flex_groups 
  /* The only flags that should be swapped */
  #define EXT4_FL_SHOULD_SWAP (EXT4_HUGE_FILE_FL | EXT4_EXTENTS_FL)
  
++<<<<<<< HEAD
++=======
+ /* Flags which are mutually exclusive to DAX */
+ #define EXT4_DAX_MUT_EXCL (EXT4_VERITY_FL | EXT4_ENCRYPT_FL |\
+ 			   EXT4_JOURNAL_DATA_FL | EXT4_INLINE_DATA_FL)
+ 
++>>>>>>> aa2f77920b74 (ext4: disallow modifying DAX inode flag if inline_data has been set)
  /* Mask out flags that are inappropriate for the given type of inode. */
  static inline __u32 ext4_mask_flags(umode_t mode, __u32 flags)
  {
* Unmerged path fs/ext4/ext4.h
