net: atlantic: add defines for 10M and EEE 100M link mode

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Igor Russkikh <irusskikh@marvell.com>
commit 3d464aadef75415c55a5a4feb611a9bbf034d7d3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/3d464aad.failed

This patch adds defines for 10M and EEE 100M link modes, which are
supported by A2.

10M support is added in this patch series.
EEE is out of scope, but will be added in a follow-up series.

	Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
	Signed-off-by: Mark Starovoytov <mstarovoitov@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3d464aadef75415c55a5a4feb611a9bbf034d7d3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/aq_nic.c
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_nic.c
index d52c8833a137,80dd744dcbd1..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_nic.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_nic.c
@@@ -798,9 -885,16 +798,17 @@@ void aq_nic_get_link_ksettings(struct a
  		ethtool_link_ksettings_add_link_mode(cmd, supported,
  						     100baseT_Full);
  
++<<<<<<< HEAD
 +	if (self->aq_nic_cfg.aq_hw_caps->flow_control)
++=======
+ 	if (self->aq_nic_cfg.aq_hw_caps->link_speed_msk & AQ_NIC_RATE_10M)
+ 		ethtool_link_ksettings_add_link_mode(cmd, supported,
+ 						     10baseT_Full);
+ 
+ 	if (self->aq_nic_cfg.aq_hw_caps->flow_control) {
++>>>>>>> 3d464aadef75 (net: atlantic: add defines for 10M and EEE 100M link mode)
  		ethtool_link_ksettings_add_link_mode(cmd, supported,
  						     Pause);
 -		ethtool_link_ksettings_add_link_mode(cmd, supported,
 -						     Asym_Pause);
 -	}
  
  	ethtool_link_ksettings_add_link_mode(cmd, supported, Autoneg);
  
@@@ -834,7 -928,11 +842,15 @@@
  		ethtool_link_ksettings_add_link_mode(cmd, advertising,
  						     100baseT_Full);
  
++<<<<<<< HEAD
 +	if (self->aq_nic_cfg.flow_control & AQ_NIC_FC_RX)
++=======
+ 	if (self->aq_nic_cfg.link_speed_msk  & AQ_NIC_RATE_10M)
+ 		ethtool_link_ksettings_add_link_mode(cmd, advertising,
+ 						     10baseT_Full);
+ 
+ 	if (self->aq_nic_cfg.fc.cur & AQ_NIC_FC_RX)
++>>>>>>> 3d464aadef75 (net: atlantic: add defines for 10M and EEE 100M link mode)
  		ethtool_link_ksettings_add_link_mode(cmd, advertising,
  						     Pause);
  
diff --git a/drivers/net/ethernet/aquantia/atlantic/aq_common.h b/drivers/net/ethernet/aquantia/atlantic/aq_common.h
index ce5211d234bb..b1b5df86f5f3 100644
--- a/drivers/net/ethernet/aquantia/atlantic/aq_common.h
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_common.h
@@ -54,16 +54,18 @@
 #define AQ_HWREV_1	1
 #define AQ_HWREV_2	2
 
-#define AQ_NIC_RATE_10G        BIT(0)
-#define AQ_NIC_RATE_5G         BIT(1)
-#define AQ_NIC_RATE_5GSR       BIT(2)
-#define AQ_NIC_RATE_2GS        BIT(3)
-#define AQ_NIC_RATE_1G         BIT(4)
-#define AQ_NIC_RATE_100M       BIT(5)
+#define AQ_NIC_RATE_10G		BIT(0)
+#define AQ_NIC_RATE_5G		BIT(1)
+#define AQ_NIC_RATE_5GSR	BIT(2)
+#define AQ_NIC_RATE_2GS		BIT(3)
+#define AQ_NIC_RATE_1G		BIT(4)
+#define AQ_NIC_RATE_100M	BIT(5)
+#define AQ_NIC_RATE_10M		BIT(6)
 
-#define AQ_NIC_RATE_EEE_10G	BIT(6)
-#define AQ_NIC_RATE_EEE_5G	BIT(7)
-#define AQ_NIC_RATE_EEE_2GS	BIT(8)
-#define AQ_NIC_RATE_EEE_1G	BIT(9)
+#define AQ_NIC_RATE_EEE_10G	BIT(7)
+#define AQ_NIC_RATE_EEE_5G	BIT(8)
+#define AQ_NIC_RATE_EEE_2GS	BIT(9)
+#define AQ_NIC_RATE_EEE_1G	BIT(10)
+#define AQ_NIC_RATE_EEE_100M	BIT(11)
 
 #endif /* AQ_COMMON_H */
diff --git a/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c b/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
index a64230722f5c..427ddc2ac212 100644
--- a/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
@@ -382,6 +382,9 @@ static enum hw_atl_fw2x_rate eee_mask_to_ethtool_mask(u32 speed)
 	if (speed & AQ_NIC_RATE_EEE_1G)
 		rate |= SUPPORTED_1000baseT_Full;
 
+	if (speed & AQ_NIC_RATE_EEE_100M)
+		rate |= SUPPORTED_100baseT_Full;
+
 	return rate;
 }
 
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_nic.c
