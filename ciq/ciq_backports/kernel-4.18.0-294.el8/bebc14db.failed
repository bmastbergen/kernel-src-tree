iwlwifi: mvm: avoid possible NULL pointer dereference

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Avraham Stern <avraham.stern@intel.com>
commit bebc14db4eb7120a2c12fb08ee2ea95cdecb8042
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/bebc14db.failed

When adding a PASN station, the station is added to the list only
if a TK is configured. Otherwise the station pointer should not be
used.

	Signed-off-by: Avraham Stern <avraham.stern@intel.com>
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
Link: https://lore.kernel.org/r/iwlwifi.20201008180656.b8a493c168a7.Ie9a0f9dfd9e9c58c603dd06e45151119467a7804@changeid
(cherry picked from commit bebc14db4eb7120a2c12fb08ee2ea95cdecb8042)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
diff --cc drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
index 2c2ec2538d37,dd3662b9a5bc..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
@@@ -251,6 -316,56 +251,59 @@@ static void iwl_mvm_resp_del_pasn_sta(s
  	kfree(sta);
  }
  
++<<<<<<< HEAD
++=======
+ int iwl_mvm_ftm_respoder_add_pasn_sta(struct iwl_mvm *mvm,
+ 				      struct ieee80211_vif *vif,
+ 				      u8 *addr, u32 cipher, u8 *tk, u32 tk_len,
+ 				      u8 *hltk, u32 hltk_len)
+ {
+ 	int ret;
+ 	struct iwl_mvm_pasn_sta *sta = NULL;
+ 	struct iwl_mvm_pasn_hltk_data hltk_data = {
+ 		.addr = addr,
+ 		.hltk = hltk,
+ 	};
+ 	u8 cmd_ver = iwl_fw_lookup_cmd_ver(mvm->fw, LOCATION_GROUP,
+ 					   TOF_RESPONDER_DYN_CONFIG_CMD, 2);
+ 
+ 	lockdep_assert_held(&mvm->mutex);
+ 
+ 	if (cmd_ver < 3) {
+ 		IWL_ERR(mvm, "Adding PASN station not supported by FW\n");
+ 		return -ENOTSUPP;
+ 	}
+ 
+ 	hltk_data.cipher = iwl_mvm_cipher_to_location_cipher(cipher);
+ 	if (hltk_data.cipher == IWL_LOCATION_CIPHER_INVALID) {
+ 		IWL_ERR(mvm, "invalid cipher: %u\n", cipher);
+ 		return -EINVAL;
+ 	}
+ 
+ 	if (tk && tk_len) {
+ 		sta = kzalloc(sizeof(*sta), GFP_KERNEL);
+ 		if (!sta)
+ 			return -ENOBUFS;
+ 
+ 		ret = iwl_mvm_add_pasn_sta(mvm, vif, &sta->int_sta, addr,
+ 					   cipher, tk, tk_len);
+ 		if (ret) {
+ 			kfree(sta);
+ 			return ret;
+ 		}
+ 
+ 		memcpy(sta->addr, addr, ETH_ALEN);
+ 		list_add_tail(&sta->list, &mvm->resp_pasn_list);
+ 	}
+ 
+ 	ret = iwl_mvm_ftm_responder_dyn_cfg_v3(mvm, vif, NULL, &hltk_data);
+ 	if (ret && sta)
+ 		iwl_mvm_resp_del_pasn_sta(mvm, vif, sta);
+ 
+ 	return ret;
+ }
+ 
++>>>>>>> bebc14db4eb7 (iwlwifi: mvm: avoid possible NULL pointer dereference)
  int iwl_mvm_ftm_resp_remove_pasn_sta(struct iwl_mvm *mvm,
  				     struct ieee80211_vif *vif, u8 *addr)
  {
* Unmerged path drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
