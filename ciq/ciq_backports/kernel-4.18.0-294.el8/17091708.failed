mptcp: fill skb page frag cache outside of mptcp_sendmsg_frag

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Florian Westphal <fw@strlen.de>
commit 17091708d1e503383f20934631305ccb375b0eb1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/17091708.failed

The mptcp_sendmsg_frag helper contains a loop that will wait on the
subflow sk.

It seems preferrable to only wait in mptcp_sendmsg() when blocking io is
requested.  mptcp_sendmsg already has such a wait loop that is used when
no subflow socket is available for transmission.

This is another preparation patch that makes sure we call
mptcp_sendmsg_frag only if the page frag cache has been refilled.

Followup patch will remove the wait loop from mptcp_sendmsg_frag().

The retransmit worker doesn't need to do this refill as it won't
transmit new mptcp-level data.

	Acked-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 17091708d1e503383f20934631305ccb375b0eb1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/protocol.c
diff --cc net/mptcp/protocol.c
index 19fdd62bdade,a11e51222e59..000000000000
--- a/net/mptcp/protocol.c
+++ b/net/mptcp/protocol.c
@@@ -740,6 -713,8 +740,11 @@@ static int mptcp_sendmsg(struct sock *s
  {
  	int mss_now = 0, size_goal = 0, ret = 0;
  	struct mptcp_sock *msk = mptcp_sk(sk);
++<<<<<<< HEAD
++=======
+ 	struct page_frag *pfrag;
+ 	struct socket *ssock;
++>>>>>>> 17091708d1e5 (mptcp: fill skb page frag cache outside of mptcp_sendmsg_frag)
  	size_t copied = 0;
  	struct sock *ssk;
  	bool tx_ok;
@@@ -758,6 -733,16 +763,19 @@@
  			goto out;
  	}
  
++<<<<<<< HEAD
++=======
+ fallback:
+ 	ssock = __mptcp_tcp_fallback(msk);
+ 	if (unlikely(ssock)) {
+ 		release_sock(sk);
+ 		pr_debug("fallback passthrough");
+ 		ret = sock_sendmsg(ssock, msg);
+ 		return ret >= 0 ? ret + copied : (copied ? copied : ret);
+ 	}
+ 
+ 	pfrag = sk_page_frag(sk);
++>>>>>>> 17091708d1e5 (mptcp: fill skb page frag cache outside of mptcp_sendmsg_frag)
  restart:
  	mptcp_clean_una(sk);
  
* Unmerged path net/mptcp/protocol.c
