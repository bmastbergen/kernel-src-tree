net: atlantic: Replace ENOTSUPP usage to EOPNOTSUPP

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Mark Starovoytov <mstarovoitov@marvell.com>
commit e35df2186580885c59886452c9b33f02f57ab91f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/e35df218.failed

This patch replaces ENOTSUPP (where it was used by mistake) with
EOPNOTSUPP.

	Signed-off-by: Mark Starovoytov <mstarovoitov@marvell.com>
	Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e35df2186580885c59886452c9b33f02f57ab91f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/aq_nic.c
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_nic.c
index ed7d344e3ed7,43b8914c3ef5..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_nic.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_nic.c
@@@ -936,11 -1179,45 +936,46 @@@ struct aq_nic_cfg_s *aq_nic_get_cfg(str
  
  u32 aq_nic_get_fw_version(struct aq_nic_s *self)
  {
 -	return self->aq_hw_ops->hw_get_fw_version(self->aq_hw);
 -}
 +	u32 fw_version = 0U;
  
 -int aq_nic_set_loopback(struct aq_nic_s *self)
 -{
 -	struct aq_nic_cfg_s *cfg = &self->aq_nic_cfg;
 +	self->aq_hw_ops->hw_get_fw_version(self->aq_hw, &fw_version);
  
++<<<<<<< HEAD
 +	return fw_version;
++=======
+ 	if (!self->aq_hw_ops->hw_set_loopback ||
+ 	    !self->aq_fw_ops->set_phyloopback)
+ 		return -EOPNOTSUPP;
+ 
+ 	mutex_lock(&self->fwreq_mutex);
+ 	self->aq_hw_ops->hw_set_loopback(self->aq_hw,
+ 					 AQ_HW_LOOPBACK_DMA_SYS,
+ 					 !!(cfg->priv_flags &
+ 					    BIT(AQ_HW_LOOPBACK_DMA_SYS)));
+ 
+ 	self->aq_hw_ops->hw_set_loopback(self->aq_hw,
+ 					 AQ_HW_LOOPBACK_PKT_SYS,
+ 					 !!(cfg->priv_flags &
+ 					    BIT(AQ_HW_LOOPBACK_PKT_SYS)));
+ 
+ 	self->aq_hw_ops->hw_set_loopback(self->aq_hw,
+ 					 AQ_HW_LOOPBACK_DMA_NET,
+ 					 !!(cfg->priv_flags &
+ 					    BIT(AQ_HW_LOOPBACK_DMA_NET)));
+ 
+ 	self->aq_fw_ops->set_phyloopback(self->aq_hw,
+ 					 AQ_HW_LOOPBACK_PHYINT_SYS,
+ 					 !!(cfg->priv_flags &
+ 					    BIT(AQ_HW_LOOPBACK_PHYINT_SYS)));
+ 
+ 	self->aq_fw_ops->set_phyloopback(self->aq_hw,
+ 					 AQ_HW_LOOPBACK_PHYEXT_SYS,
+ 					 !!(cfg->priv_flags &
+ 					    BIT(AQ_HW_LOOPBACK_PHYEXT_SYS)));
+ 	mutex_unlock(&self->fwreq_mutex);
+ 
+ 	return 0;
++>>>>>>> e35df2186580 (net: atlantic: Replace ENOTSUPP usage to EOPNOTSUPP)
  }
  
  int aq_nic_stop(struct aq_nic_s *self)
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_nic.c
diff --git a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c
index 38915aa0fd19..d1cf61ed0c48 100644
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c
@@ -214,7 +214,7 @@ static int hw_atl_utils_soft_reset_rbl(struct aq_hw_s *self)
 
 	if (rbl_status == 0xF1A7) {
 		aq_pr_err("No FW detected. Dynamic FW load not implemented\n");
-		return -ENOTSUPP;
+		return -EOPNOTSUPP;
 	}
 
 	for (k = 0; k < 1000; k++) {
