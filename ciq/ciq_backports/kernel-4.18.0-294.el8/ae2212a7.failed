rculist: Introduce list/hlist_for_each_entry_srcu() macros

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
commit ae2212a7216b674633bdc3bd2e24947a0665efb8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ae2212a7.failed

list/hlist_for_each_entry_rcu() provides an optional cond argument
to specify the lock held in the updater side.
However for SRCU read side, not providing the cond argument results
into false positive as whether srcu_read_lock is held or not is not
checked implicitly. Therefore, on read side the lockdep expression
srcu_read_lock_held(srcu struct) can solve this issue.

However, the function still fails to check the cases where srcu
protected list is traversed with rcu_read_lock() instead of
srcu_read_lock(). Therefore, to remove the false negative,
this patch introduces two new list traversal primitives :
list_for_each_entry_srcu() and hlist_for_each_entry_srcu().

Both of the functions have non-optional cond argument
as it is required for both read and update side, and simply checks
if the cond is true. For regular read side the lockdep expression
srcu_read_lock_head() can be passed as the cond argument to
list/hlist_for_each_entry_srcu().

	Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
	Tested-by: Suraj Upadhyay <usuraj35@gmail.com>
	Tested-by: Naresh Kamboju <naresh.kamboju@linaro.org>
[ paulmck: Add "true" per kbuild test robot feedback. ]
	Signed-off-by: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit ae2212a7216b674633bdc3bd2e24947a0665efb8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/rculist.h
diff --cc include/linux/rculist.h
index 817e30de16ac,f8633d37e358..000000000000
--- a/include/linux/rculist.h
+++ b/include/linux/rculist.h
@@@ -60,9 -60,15 +60,19 @@@ static inline void INIT_LIST_HEAD_RCU(s
  #define __list_check_rcu(dummy, cond, extra...)				\
  	({								\
  	check_arg_count_one(extra);					\
 -	RCU_LOCKDEP_WARN(!(cond) && !rcu_read_lock_any_held(),		\
 +	RCU_LOCKDEP_WARN(!cond && !rcu_read_lock_any_held(),		\
  			 "RCU-list traversed in non-reader section!");	\
++<<<<<<< HEAD
 +	 })
++=======
+ 	})
+ 
+ #define __list_check_srcu(cond)					 \
+ 	({								 \
+ 	RCU_LOCKDEP_WARN(!(cond),					 \
+ 		"RCU-list traversed without holding the required lock!");\
+ 	})
++>>>>>>> ae2212a7216b (rculist: Introduce list/hlist_for_each_entry_srcu() macros)
  #else
  #define __list_check_rcu(dummy, cond, extra...)				\
  	({ check_arg_count_one(extra); })
* Unmerged path include/linux/rculist.h
