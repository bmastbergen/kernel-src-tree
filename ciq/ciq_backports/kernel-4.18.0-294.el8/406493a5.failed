net/mlx5: E-Switch, Dedicated metadata for uplink vport

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vu Pham <vuhuong@mellanox.com>
commit 406493a52f48a20b36b34701d541081cae00b900
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/406493a5.failed

Uplink vport must have a dedicated metadata with vhca_id
being part of the metadata.

Fixes: 133dcfc577ea ("net/mlx5: E-Switch, Alloc and free unique metadata for match")
	Signed-off-by: Vu Pham <vuhuong@mellanox.com>
	Reviewed-by: Mark Bloch <mbloch@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 406493a52f48a20b36b34701d541081cae00b900)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index afb4bff4a4e1,9c740ce73085..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -1957,6 -1876,53 +1957,56 @@@ static bool esw_use_vport_metadata(cons
  	       esw_check_vport_match_metadata_supported(esw);
  }
  
++<<<<<<< HEAD
++=======
+ u32 mlx5_esw_match_metadata_alloc(struct mlx5_eswitch *esw)
+ {
+ 	u32 num_vports = GENMASK(ESW_VPORT_BITS - 1, 0) - 1;
+ 	u32 vhca_id_mask = GENMASK(ESW_VHCA_ID_BITS - 1, 0);
+ 	u32 vhca_id = MLX5_CAP_GEN(esw->dev, vhca_id);
+ 	u32 start;
+ 	u32 end;
+ 	int id;
+ 
+ 	/* Make sure the vhca_id fits the ESW_VHCA_ID_BITS */
+ 	WARN_ON_ONCE(vhca_id >= BIT(ESW_VHCA_ID_BITS));
+ 
+ 	/* Trim vhca_id to ESW_VHCA_ID_BITS */
+ 	vhca_id &= vhca_id_mask;
+ 
+ 	start = (vhca_id << ESW_VPORT_BITS);
+ 	end = start + num_vports;
+ 	if (!vhca_id)
+ 		start += 1; /* zero is reserved/invalid metadata */
+ 	id = ida_alloc_range(&esw->offloads.vport_metadata_ida, start, end, GFP_KERNEL);
+ 
+ 	return (id < 0) ? 0 : id;
+ }
+ 
+ void mlx5_esw_match_metadata_free(struct mlx5_eswitch *esw, u32 metadata)
+ {
+ 	ida_free(&esw->offloads.vport_metadata_ida, metadata);
+ }
+ 
+ static int esw_offloads_vport_metadata_setup(struct mlx5_eswitch *esw,
+ 					     struct mlx5_vport *vport)
+ {
+ 	vport->default_metadata = mlx5_esw_match_metadata_alloc(esw);
+ 	vport->metadata = vport->default_metadata;
+ 	return vport->metadata ? 0 : -ENOSPC;
+ }
+ 
+ static void esw_offloads_vport_metadata_cleanup(struct mlx5_eswitch *esw,
+ 						struct mlx5_vport *vport)
+ {
+ 	if (!vport->default_metadata)
+ 		return;
+ 
+ 	WARN_ON(vport->metadata != vport->default_metadata);
+ 	mlx5_esw_match_metadata_free(esw, vport->default_metadata);
+ }
+ 
++>>>>>>> 406493a52f48 (net/mlx5: E-Switch, Dedicated metadata for uplink vport)
  int
  esw_vport_create_offloads_acl_tables(struct mlx5_eswitch *esw,
  				     struct mlx5_vport *vport)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
