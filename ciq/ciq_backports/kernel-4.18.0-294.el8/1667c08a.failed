virtio_net: Fix out of bounds access of sq

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
commit 1667c08a9d31c7cdf09f4890816bfbf20b685495
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1667c08a.failed

When XDP is disabled, curr_queue_pairs + smp_processor_id() can be
larger than max_queue_pairs.
There is no guarantee that we have enough XDP send queues dedicated for
each cpu when XDP is disabled, so do not count drops on sq in that case.

Fixes: 5b8f3c8d30a6 ("virtio_net: Add XDP related stats")
	Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
	Acked-by: Jason Wang <jasowang@redhat.com>
	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1667c08a9d31c7cdf09f4890816bfbf20b685495)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/virtio_net.c
diff --cc drivers/net/virtio_net.c
index 60ab9b0a1570,669b65c232a2..000000000000
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@@ -513,29 -487,28 +513,46 @@@ static int virtnet_xdp_xmit(struct net_
  	struct send_queue *sq;
  	unsigned int len;
  	int drops = 0;
 -	int kicks = 0;
 -	int ret, err;
 +	int err;
 +	void *ptr;
  	int i;
  
++<<<<<<< HEAD
 +	if (unlikely(flags & ~XDP_XMIT_FLAGS_MASK))
 +		return -EINVAL;
 +
 +	sq = virtnet_xdp_sq(vi);
 +
 +	/* Only allow ndo_xdp_xmit if XDP is loaded on dev, as this
 +	 * indicate XDP resources have been successfully allocated.
 +	 */
 +	xdp_prog = rcu_access_pointer(rq->xdp_prog);
 +	if (!xdp_prog)
 +		return -ENXIO;
++=======
+ 	/* Only allow ndo_xdp_xmit if XDP is loaded on dev, as this
+ 	 * indicate XDP resources have been successfully allocated.
+ 	 */
+ 	xdp_prog = rcu_dereference(rq->xdp_prog);
+ 	if (!xdp_prog)
+ 		return -ENXIO;
+ 
+ 	sq = virtnet_xdp_sq(vi);
+ 
+ 	if (unlikely(flags & ~XDP_XMIT_FLAGS_MASK)) {
+ 		ret = -EINVAL;
+ 		drops = n;
+ 		goto out;
+ 	}
++>>>>>>> 1667c08a9d31 (virtio_net: Fix out of bounds access of sq)
  
  	/* Free up any pending old buffers before queueing new ones. */
 -	while ((xdpf_sent = virtqueue_get_buf(sq->vq, &len)) != NULL)
 -		xdp_return_frame(xdpf_sent);
 +	while ((ptr = virtqueue_get_buf(sq->vq, &len)) != NULL) {
 +		if (likely(is_xdp_frame(ptr)))
 +			xdp_return_frame(ptr_to_xdp(ptr));
 +		else
 +			dev_consume_skb_any(ptr);
 +	}
  
  	for (i = 0; i < n; i++) {
  		struct xdp_frame *xdpf = frames[i];
* Unmerged path drivers/net/virtio_net.c
