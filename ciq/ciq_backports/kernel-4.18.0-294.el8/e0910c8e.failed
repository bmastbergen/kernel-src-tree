dm raid: fix discard limits for raid1 and raid10

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [md] dm raid: fix discard limits for raid0, raid1 and raid10 (Mike Snitzer) [1885650]
Rebuild_FUZZ: 93.20%
commit-author Mike Snitzer <snitzer@redhat.com>
commit e0910c8e4f87bb9f767e61a778b0d9271c4dc512
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/e0910c8e.failed

Block core warned that discard_granularity was 0 for dm-raid with
personality of raid1.  Reason is that raid_io_hints() was incorrectly
special-casing raid1 rather than raid0.

But since commit 29efc390b9462 ("md/md0: optimize raid0 discard
handling") even raid0 properly handles large discards.

Fix raid_io_hints() by removing discard limits settings for raid1.
Also, fix limits for raid10 by properly stacking underlying limits as
done in blk_stack_limits().

Depends-on: 29efc390b9462 ("md/md0: optimize raid0 discard handling")
Fixes: 61697a6abd24a ("dm: eliminate 'split_discard_bios' flag from DM target interface")
	Cc: stable@vger.kernel.org
	Reported-by: Zdenek Kabelac <zkabelac@redhat.com>
	Reported-by: Mikulas Patocka <mpatocka@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit e0910c8e4f87bb9f767e61a778b0d9271c4dc512)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-raid.c
diff --cc drivers/md/dm-raid.c
index a738cb20fe94,dc8568ab96f2..000000000000
--- a/drivers/md/dm-raid.c
+++ b/drivers/md/dm-raid.c
@@@ -3741,10 -3724,21 +3741,26 @@@ static int raid_iterate_devices(struct 
  static void raid_io_hints(struct dm_target *ti, struct queue_limits *limits)
  {
  	struct raid_set *rs = ti->private;
 -	unsigned int chunk_size_bytes = to_bytes(rs->md.chunk_sectors);
 +	unsigned int chunk_size = to_bytes(rs->md.chunk_sectors);
  
++<<<<<<< HEAD
 +	blk_limits_io_min(limits, chunk_size);
 +	blk_limits_io_opt(limits, chunk_size * mddev_data_stripes(rs));
++=======
+ 	blk_limits_io_min(limits, chunk_size_bytes);
+ 	blk_limits_io_opt(limits, chunk_size_bytes * mddev_data_stripes(rs));
+ 
+ 	/*
+ 	 * RAID10 personality requires bio splitting,
+ 	 * RAID0/1/4/5/6 don't and process large discard bios properly.
+ 	 */
+ 	if (rs_is_raid10(rs)) {
+ 		limits->discard_granularity = max(chunk_size_bytes,
+ 						  limits->discard_granularity);
+ 		limits->max_discard_sectors = min_not_zero(rs->md.chunk_sectors,
+ 							   limits->max_discard_sectors);
+ 	}
++>>>>>>> e0910c8e4f87 (dm raid: fix discard limits for raid1 and raid10)
  }
  
  static void raid_postsuspend(struct dm_target *ti)
* Unmerged path drivers/md/dm-raid.c
