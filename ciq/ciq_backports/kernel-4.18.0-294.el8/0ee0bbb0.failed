net: atlantic: make symbol 'aq_pm_ops' static

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author zhengbin <zhengbin13@huawei.com>
commit 0ee0bbb018938addf87b54d447cc5633d2e53490
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/0ee0bbb0.failed

Fix sparse warnings:

drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c:426:25: warning: symbol 'aq_pm_ops' was not declared. Should it be static?

	Reported-by: Hulk Robot <hulkci@huawei.com>
Fixes: 8aaa112a57c1 ("net: atlantic: refactoring pm logic")
	Signed-off-by: zhengbin <zhengbin13@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0ee0bbb018938addf87b54d447cc5633d2e53490)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c
index 9cb0864d6d8d,2bb329606794..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c
@@@ -347,21 -349,89 +347,53 @@@ static void aq_pci_shutdown(struct pci_
  	}
  }
  
 -static int aq_suspend_common(struct device *dev, bool deep)
 +static int aq_pci_suspend(struct pci_dev *pdev, pm_message_t pm_msg)
  {
 -	struct aq_nic_s *nic = pci_get_drvdata(to_pci_dev(dev));
 -
 -	rtnl_lock();
 -
 -	nic->power_state = AQ_HW_POWER_STATE_D3;
 -	netif_device_detach(nic->ndev);
 -	netif_tx_stop_all_queues(nic->ndev);
 -
 -	aq_nic_stop(nic);
 -
 -	if (deep) {
 -		aq_nic_deinit(nic, !nic->aq_hw->aq_nic_cfg->wol);
 -		aq_nic_set_power(nic);
 -	}
 -
 -	rtnl_unlock();
 +	struct aq_nic_s *self = pci_get_drvdata(pdev);
  
 -	return 0;
 +	return aq_nic_change_pm_state(self, &pm_msg);
  }
  
 -static int atl_resume_common(struct device *dev, bool deep)
 +static int aq_pci_resume(struct pci_dev *pdev)
  {
 -	struct pci_dev *pdev = to_pci_dev(dev);
 -	struct aq_nic_s *nic;
 -	int ret;
 -
 -	nic = pci_get_drvdata(pdev);
 -
 -	rtnl_lock();
 -
 -	pci_set_power_state(pdev, PCI_D0);
 -	pci_restore_state(pdev);
 -
 -	if (deep) {
 -		ret = aq_nic_init(nic);
 -		if (ret)
 -			goto err_exit;
 -	}
 -
 -	ret = aq_nic_start(nic);
 -	if (ret)
 -		goto err_exit;
 -
 -	netif_device_attach(nic->ndev);
 -	netif_tx_start_all_queues(nic->ndev);
 -
 -err_exit:
 -	rtnl_unlock();
 +	struct aq_nic_s *self = pci_get_drvdata(pdev);
 +	pm_message_t pm_msg = PMSG_RESTORE;
  
 -	return ret;
 +	return aq_nic_change_pm_state(self, &pm_msg);
  }
  
++<<<<<<< HEAD
++=======
+ static int aq_pm_freeze(struct device *dev)
+ {
+ 	return aq_suspend_common(dev, false);
+ }
+ 
+ static int aq_pm_suspend_poweroff(struct device *dev)
+ {
+ 	return aq_suspend_common(dev, true);
+ }
+ 
+ static int aq_pm_thaw(struct device *dev)
+ {
+ 	return atl_resume_common(dev, false);
+ }
+ 
+ static int aq_pm_resume_restore(struct device *dev)
+ {
+ 	return atl_resume_common(dev, true);
+ }
+ 
+ static const struct dev_pm_ops aq_pm_ops = {
+ 	.suspend = aq_pm_suspend_poweroff,
+ 	.poweroff = aq_pm_suspend_poweroff,
+ 	.freeze = aq_pm_freeze,
+ 	.resume = aq_pm_resume_restore,
+ 	.restore = aq_pm_resume_restore,
+ 	.thaw = aq_pm_thaw,
+ };
+ 
++>>>>>>> 0ee0bbb01893 (net: atlantic: make symbol 'aq_pm_ops' static)
  static struct pci_driver aq_pci_ops = {
  	.name = AQ_CFG_DRV_NAME,
  	.id_table = aq_pci_tbl,
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c
