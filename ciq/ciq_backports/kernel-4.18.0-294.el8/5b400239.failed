LSM: turn sb_eat_lsm_opts() into a method

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit 5b4002391153acebce2557af318bbdc17e235134
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/5b400239.failed

Kill ->sb_copy_data() - it's used only in combination with immediately
following ->sb_parse_opts_str().  Turn that combination into a new
method.

This is just a mechanical move - cleanups will be the next step.

	Reviewed-by: David Howells <dhowells@redhat.com>
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 5b4002391153acebce2557af318bbdc17e235134)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/smack/smack_lsm.c
diff --cc security/smack/smack_lsm.c
index 77b0bfb018e5,835cca277c2a..000000000000
--- a/security/smack/smack_lsm.c
+++ b/security/smack/smack_lsm.c
@@@ -4631,8 -4651,7 +4645,12 @@@ static struct security_hook_list smack_
  
  	LSM_HOOK_INIT(sb_alloc_security, smack_sb_alloc_security),
  	LSM_HOOK_INIT(sb_free_security, smack_sb_free_security),
++<<<<<<< HEAD
 +	LSM_HOOK_INIT(sb_copy_data, smack_sb_copy_data),
 +	LSM_HOOK_INIT(sb_kern_mount, smack_sb_kern_mount),
++=======
+ 	LSM_HOOK_INIT(sb_eat_lsm_opts, smack_sb_eat_lsm_opts),
++>>>>>>> 5b4002391153 (LSM: turn sb_eat_lsm_opts() into a method)
  	LSM_HOOK_INIT(sb_statfs, smack_sb_statfs),
  	LSM_HOOK_INIT(sb_set_mnt_opts, smack_set_mnt_opts),
  	LSM_HOOK_INIT(sb_parse_opts_str, smack_parse_opts_str),
diff --git a/include/linux/lsm_hooks.h b/include/linux/lsm_hooks.h
index b8d4d4fd9a29..cd564cc5ba20 100644
--- a/include/linux/lsm_hooks.h
+++ b/include/linux/lsm_hooks.h
@@ -1471,7 +1471,7 @@ union security_list_options {
 
 	int (*sb_alloc_security)(struct super_block *sb);
 	void (*sb_free_security)(struct super_block *sb);
-	int (*sb_copy_data)(char *orig, char *copy);
+	int (*sb_eat_lsm_opts)(char *orig, struct security_mnt_opts *opts);
 	int (*sb_remount)(struct super_block *sb,
 			  struct security_mnt_opts *opts);
 	int (*sb_kern_mount)(struct super_block *sb, int flags,
@@ -1814,7 +1814,7 @@ struct security_hook_heads {
 	struct hlist_head bprm_committed_creds;
 	struct hlist_head sb_alloc_security;
 	struct hlist_head sb_free_security;
-	struct hlist_head sb_copy_data;
+	struct hlist_head sb_eat_lsm_opts;
 	struct hlist_head sb_remount;
 	struct hlist_head sb_kern_mount;
 	struct hlist_head sb_show_options;
diff --git a/security/security.c b/security/security.c
index 7eaa4e984e36..543fa22061eb 100644
--- a/security/security.c
+++ b/security/security.c
@@ -369,16 +369,7 @@ void security_sb_free(struct super_block *sb)
 
 int security_sb_eat_lsm_opts(char *options, struct security_mnt_opts *opts)
 {
-	char *s = (char *)get_zeroed_page(GFP_KERNEL);
-	int err;
-
-	if (!s)
-		return -ENOMEM;
-	err = call_int_hook(sb_copy_data, 0, options, s);
-	if (!err)
-		err = call_int_hook(sb_parse_opts_str, 0, s, opts);
-	free_page((unsigned long)s);
-	return err;
+	return call_int_hook(sb_eat_lsm_opts, 0, options, opts);
 }
 EXPORT_SYMBOL(security_sb_eat_lsm_opts);
 
diff --git a/security/selinux/hooks.c b/security/selinux/hooks.c
index 42145010da10..1cb805f3aebe 100644
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@ -2761,6 +2761,20 @@ static int selinux_sb_copy_data(char *orig, char *copy)
 	return rc;
 }
 
+static int selinux_sb_eat_lsm_opts(char *options, struct security_mnt_opts *opts)
+{
+	char *s = (char *)get_zeroed_page(GFP_KERNEL);
+	int err;
+
+	if (!s)
+		return -ENOMEM;
+	err = selinux_sb_copy_data(options, s);
+	if (!err)
+		err = selinux_parse_opts_str(s, opts);
+	free_page((unsigned long)s);
+	return err;
+}
+
 static int selinux_sb_remount(struct super_block *sb,
 			      struct security_mnt_opts *opts)
 {
@@ -6953,7 +6967,7 @@ static struct security_hook_list selinux_hooks[] __lsm_ro_after_init = {
 	LSM_HOOK_INIT(bprm_committed_creds, selinux_bprm_committed_creds),
 
 	LSM_HOOK_INIT(sb_free_security, selinux_sb_free_security),
-	LSM_HOOK_INIT(sb_copy_data, selinux_sb_copy_data),
+	LSM_HOOK_INIT(sb_eat_lsm_opts, selinux_sb_eat_lsm_opts),
 	LSM_HOOK_INIT(sb_remount, selinux_sb_remount),
 	LSM_HOOK_INIT(sb_kern_mount, selinux_sb_kern_mount),
 	LSM_HOOK_INIT(sb_show_options, selinux_sb_show_options),
* Unmerged path security/smack/smack_lsm.c
