null_blk: Support REQ_OP_ZONE_APPEND

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Damien Le Moal <damien.lemoal@wdc.com>
commit e0489ed5daeb48cf182c4c98da4a873f947f2afa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/e0489ed5.failed

Support REQ_OP_ZONE_APPEND requests for null_blk devices with zoned
mode enabled. Use the internally tracked zone write pointer position
as the actual write position and return it using the command request
__sector field in the case of an mq device and using the command BIO
sector in the case of a BIO device.

	Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
	Signed-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
	Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit e0489ed5daeb48cf182c4c98da4a873f947f2afa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/null_blk_zoned.c
diff --cc drivers/block/null_blk_zoned.c
index de6be9eec94a,9c19f747f394..000000000000
--- a/drivers/block/null_blk_zoned.c
+++ b/drivers/block/null_blk_zoned.c
@@@ -68,7 -64,31 +68,31 @@@ int null_zone_init(struct nullb_device 
  	return 0;
  }
  
++<<<<<<< HEAD
 +void null_zone_exit(struct nullb_device *dev)
++=======
+ int null_register_zoned_dev(struct nullb *nullb)
+ {
+ 	struct nullb_device *dev = nullb->dev;
+ 	struct request_queue *q = nullb->q;
+ 
+ 	if (queue_is_mq(q)) {
+ 		int ret = blk_revalidate_disk_zones(nullb->disk, NULL);
+ 
+ 		if (ret)
+ 			return ret;
+ 	} else {
+ 		blk_queue_chunk_sectors(q, dev->zone_size_sects);
+ 		q->nr_zones = blkdev_nr_zones(nullb->disk);
+ 	}
+ 
+ 	blk_queue_max_zone_append_sectors(q, dev->zone_size_sects);
+ 
+ 	return 0;
+ }
+ 
+ void null_free_zoned_dev(struct nullb_device *dev)
++>>>>>>> e0489ed5daeb (null_blk: Support REQ_OP_ZONE_APPEND)
  {
  	kvfree(dev->zones);
  }
* Unmerged path drivers/block/null_blk_zoned.c
