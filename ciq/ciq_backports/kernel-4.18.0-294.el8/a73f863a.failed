sched/features: Fix !CONFIG_JUMP_LABEL case

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Juri Lelli <juri.lelli@redhat.com>
commit a73f863af4ce9730795eab7097fb2102e6854365
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a73f863a.failed

Commit:

  765cc3a4b224e ("sched/core: Optimize sched_feat() for !CONFIG_SCHED_DEBUG builds")

made sched features static for !CONFIG_SCHED_DEBUG configurations, but
overlooked the CONFIG_SCHED_DEBUG=y and !CONFIG_JUMP_LABEL cases.

For the latter echoing changes to /sys/kernel/debug/sched_features has
the nasty effect of effectively changing what sched_features reports,
but without actually changing the scheduler behaviour (since different
translation units get different sysctl_sched_features).

Fix CONFIG_SCHED_DEBUG=y and !CONFIG_JUMP_LABEL configurations by properly
restructuring ifdefs.

Fixes: 765cc3a4b224e ("sched/core: Optimize sched_feat() for !CONFIG_SCHED_DEBUG builds")
Co-developed-by: Daniel Bristot de Oliveira <bristot@redhat.com>
	Signed-off-by: Daniel Bristot de Oliveira <bristot@redhat.com>
	Signed-off-by: Juri Lelli <juri.lelli@redhat.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Patrick Bellasi <patrick.bellasi@matbug.net>
	Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
Link: https://lore.kernel.org/r/20201013053114.160628-1-juri.lelli@redhat.com
(cherry picked from commit a73f863af4ce9730795eab7097fb2102e6854365)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/core.c
#	kernel/sched/sched.h
diff --cc kernel/sched/core.c
index 288dd69ea072,d2003a7d5ab5..000000000000
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@@ -38,7 -43,8 +38,11 @@@ EXPORT_TRACEPOINT_SYMBOL_GPL(sched_util
  
  DEFINE_PER_CPU_SHARED_ALIGNED(struct rq, runqueues);
  
++<<<<<<< HEAD
 +#if defined(CONFIG_SCHED_DEBUG) && defined(HAVE_JUMP_LABEL)
++=======
+ #ifdef CONFIG_SCHED_DEBUG
++>>>>>>> a73f863af4ce (sched/features: Fix !CONFIG_JUMP_LABEL case)
  /*
   * Debugging: various feature bits
   *
diff --cc kernel/sched/sched.h
index b002c124556d,df80bfcea92e..000000000000
--- a/kernel/sched/sched.h
+++ b/kernel/sched/sched.h
@@@ -1537,7 -1629,7 +1537,11 @@@ enum 
  
  #undef SCHED_FEAT
  
++<<<<<<< HEAD
 +#if defined(CONFIG_SCHED_DEBUG) && defined(HAVE_JUMP_LABEL)
++=======
+ #ifdef CONFIG_SCHED_DEBUG
++>>>>>>> a73f863af4ce (sched/features: Fix !CONFIG_JUMP_LABEL case)
  
  /*
   * To support run-time toggling of sched features, all the translation units
@@@ -1557,7 -1650,13 +1562,17 @@@ static __always_inline bool static_bran
  extern struct static_key sched_feat_keys[__SCHED_FEAT_NR];
  #define sched_feat(x) (static_branch_##x(&sched_feat_keys[__SCHED_FEAT_##x]))
  
++<<<<<<< HEAD
 +#else /* !(SCHED_DEBUG && HAVE_JUMP_LABEL) */
++=======
+ #else /* !CONFIG_JUMP_LABEL */
+ 
+ #define sched_feat(x) (sysctl_sched_features & (1UL << __SCHED_FEAT_##x))
+ 
+ #endif /* CONFIG_JUMP_LABEL */
+ 
+ #else /* !SCHED_DEBUG */
++>>>>>>> a73f863af4ce (sched/features: Fix !CONFIG_JUMP_LABEL case)
  
  /*
   * Each translation unit has its own copy of sysctl_sched_features to allow
@@@ -1571,9 -1670,9 +1586,13 @@@ static const_debug __maybe_unused unsig
  	0;
  #undef SCHED_FEAT
  
 -#define sched_feat(x) !!(sysctl_sched_features & (1UL << __SCHED_FEAT_##x))
 +#define sched_feat(x) (sysctl_sched_features & (1UL << __SCHED_FEAT_##x))
  
++<<<<<<< HEAD
 +#endif /* SCHED_DEBUG && HAVE_JUMP_LABEL */
++=======
+ #endif /* SCHED_DEBUG */
++>>>>>>> a73f863af4ce (sched/features: Fix !CONFIG_JUMP_LABEL case)
  
  extern struct static_key_false sched_numa_balancing;
  extern struct static_key_false sched_schedstats;
* Unmerged path kernel/sched/core.c
* Unmerged path kernel/sched/sched.h
