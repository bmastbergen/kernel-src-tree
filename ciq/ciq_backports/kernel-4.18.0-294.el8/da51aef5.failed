mptcp: basic sndbuf autotuning

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit da51aef5fe5b9ef389055f693472d4fb5a3f58f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/da51aef5.failed

Let the msk sendbuf track the size of the larger subflow's
send window, so that we ensure mptcp_sendmsg() does not
exceed MPTCP-level send window.

The update is performed just before try to send any data.

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Reviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit da51aef5fe5b9ef389055f693472d4fb5a3f58f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/protocol.c
diff --cc net/mptcp/protocol.c
index 86cc132efa3d,4f12a8ce0ddd..000000000000
--- a/net/mptcp/protocol.c
+++ b/net/mptcp/protocol.c
@@@ -914,8 -903,10 +917,9 @@@ static int mptcp_sendmsg(struct sock *s
  {
  	int mss_now = 0, size_goal = 0, ret = 0;
  	struct mptcp_sock *msk = mptcp_sk(sk);
 -	struct page_frag *pfrag;
  	size_t copied = 0;
  	struct sock *ssk;
+ 	u32 sndbuf;
  	bool tx_ok;
  	long timeo;
  
@@@ -941,8 -933,10 +945,15 @@@ restart
  	}
  
  	__mptcp_flush_join_list(msk);
++<<<<<<< HEAD
 +	ssk = mptcp_subflow_get_send(msk);
 +	while (!sk_stream_memory_free(sk) || !ssk) {
++=======
+ 	ssk = mptcp_subflow_get_send(msk, &sndbuf);
+ 	while (!sk_stream_memory_free(sk) ||
+ 	       !ssk ||
+ 	       !mptcp_page_frag_refill(ssk, pfrag)) {
++>>>>>>> da51aef5fe5b (mptcp: basic sndbuf autotuning)
  		if (ssk) {
  			/* make sure retransmit timer is
  			 * running before we wait for memory.
@@@ -1527,9 -1550,13 +1543,9 @@@ static int mptcp_init_sock(struct sock 
  	if (ret)
  		return ret;
  
 -	ret = __mptcp_socket_create(mptcp_sk(sk));
 -	if (ret)
 -		return ret;
 -
  	sk_sockets_allocated_inc(sk);
  	sk->sk_rcvbuf = sock_net(sk)->ipv4.sysctl_tcp_rmem[1];
- 	sk->sk_sndbuf = sock_net(sk)->ipv4.sysctl_tcp_wmem[2];
+ 	sk->sk_sndbuf = sock_net(sk)->ipv4.sysctl_tcp_wmem[1];
  
  	return 0;
  }
* Unmerged path net/mptcp/protocol.c
