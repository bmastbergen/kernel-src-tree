powerpc/watchpoint: Fix quadword instruction handling on p10 predecessors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Ravi Bangoria <ravi.bangoria@linux.ibm.com>
commit 4759c11ed20454b7b36db4ec15f7d5aa1519af4a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/4759c11e.failed

On p10 predecessors, watchpoint with quadword access is compared at
quadword length. If the watch range is doubleword or less than that
in a first half of quadword aligned 16 bytes, and if there is any
unaligned quadword access which will access only the 2nd half, the
handler should consider it as extraneous and emulate/single-step it
before continuing.

Fixes: 74c6881019b7 ("powerpc/watchpoint: Prepare handler to handle more than one watchpoint")
	Reported-by: Pedro Miraglia Franco de Carvalho <pedromfc@linux.ibm.com>
	Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20200902042945.129369-2-ravi.bangoria@linux.ibm.com
(cherry picked from commit 4759c11ed20454b7b36db4ec15f7d5aa1519af4a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/hw_breakpoint.h
#	arch/powerpc/kernel/hw_breakpoint.c
diff --cc arch/powerpc/include/asm/hw_breakpoint.h
index f0b028781c74,9b68eafebf43..000000000000
--- a/arch/powerpc/include/asm/hw_breakpoint.h
+++ b/arch/powerpc/include/asm/hw_breakpoint.h
@@@ -47,6 -36,22 +47,25 @@@ struct arch_hw_breakpoint 
  #define HW_BRK_TYPE_PRIV_ALL	(HW_BRK_TYPE_USER | HW_BRK_TYPE_KERNEL | \
  				 HW_BRK_TYPE_HYP)
  
++<<<<<<< HEAD
++=======
+ /* Minimum granularity */
+ #ifdef CONFIG_PPC_8xx
+ #define HW_BREAKPOINT_SIZE  0x4
+ #else
+ #define HW_BREAKPOINT_SIZE  0x8
+ #endif
+ #define HW_BREAKPOINT_SIZE_QUADWORD	0x10
+ 
+ #define DABR_MAX_LEN	8
+ #define DAWR_MAX_LEN	512
+ 
+ static inline int nr_wp_slots(void)
+ {
+ 	return cpu_has_feature(CPU_FTR_DAWR1) ? 2 : 1;
+ }
+ 
++>>>>>>> 4759c11ed204 (powerpc/watchpoint: Fix quadword instruction handling on p10 predecessors)
  #ifdef CONFIG_HAVE_HW_BREAKPOINT
  #include <linux/kdebug.h>
  #include <asm/reg.h>
diff --cc arch/powerpc/kernel/hw_breakpoint.c
index 90c5c77a5704,9f7df1c37233..000000000000
--- a/arch/powerpc/kernel/hw_breakpoint.c
+++ b/arch/powerpc/kernel/hw_breakpoint.c
@@@ -436,11 -499,40 +436,45 @@@ static bool dar_within_range(unsigned l
  	return ((info->address <= dar) && (dar - info->address < info->len));
  }
  
 -static bool ea_user_range_overlaps(unsigned long ea, int size,
 -				   struct arch_hw_breakpoint *info)
 +static bool
 +dar_range_overlaps(unsigned long dar, int size, struct arch_hw_breakpoint *info)
  {
++<<<<<<< HEAD
 +	return ((dar <= info->address + info->len - 1) &&
 +		(dar + size - 1 >= info->address));
++=======
+ 	return ((ea < info->address + info->len) &&
+ 		(ea + size > info->address));
+ }
+ 
+ static bool dar_in_hw_range(unsigned long dar, struct arch_hw_breakpoint *info)
+ {
+ 	unsigned long hw_start_addr, hw_end_addr;
+ 
+ 	hw_start_addr = ALIGN_DOWN(info->address, HW_BREAKPOINT_SIZE);
+ 	hw_end_addr = ALIGN(info->address + info->len, HW_BREAKPOINT_SIZE);
+ 
+ 	return ((hw_start_addr <= dar) && (hw_end_addr > dar));
+ }
+ 
+ static bool ea_hw_range_overlaps(unsigned long ea, int size,
+ 				 struct arch_hw_breakpoint *info)
+ {
+ 	unsigned long hw_start_addr, hw_end_addr;
+ 	unsigned long align_size = HW_BREAKPOINT_SIZE;
+ 
+ 	/*
+ 	 * On p10 predecessors, quadword is handle differently then
+ 	 * other instructions.
+ 	 */
+ 	if (!cpu_has_feature(CPU_FTR_ARCH_31) && size == 16)
+ 		align_size = HW_BREAKPOINT_SIZE_QUADWORD;
+ 
+ 	hw_start_addr = ALIGN_DOWN(info->address, align_size);
+ 	hw_end_addr = ALIGN(info->address + info->len, align_size);
+ 
+ 	return ((ea < hw_end_addr) && (ea + size > hw_start_addr));
++>>>>>>> 4759c11ed204 (powerpc/watchpoint: Fix quadword instruction handling on p10 predecessors)
  }
  
  /*
* Unmerged path arch/powerpc/include/asm/hw_breakpoint.h
* Unmerged path arch/powerpc/kernel/hw_breakpoint.c
