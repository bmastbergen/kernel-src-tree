rcu: Fix uninitialized variable in nocb_gp_wait()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit b8889c9c89a2655a231dfed93cc9bdca0930ea67
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b8889c9c.failed

We never set this to false.  This probably doesn't affect most people's
runtime because GCC will automatically initialize it to false at certain
common optimization levels.  But that behavior is related to a bug in
GCC and obviously should not be relied on.

Fixes: 5d6742b37727 ("rcu/nocb: Use rcu_segcblist for no-CBs CPUs")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit b8889c9c89a2655a231dfed93cc9bdca0930ea67)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/rcu/tree_plugin.h
diff --cc kernel/rcu/tree_plugin.h
index c7952848f1c8,fa08d55f7040..000000000000
--- a/kernel/rcu/tree_plugin.h
+++ b/kernel/rcu/tree_plugin.h
@@@ -1701,7 -1944,10 +1701,12 @@@ static void nocb_gp_wait(struct rcu_dat
  	int __maybe_unused cpu = my_rdp->cpu;
  	unsigned long cur_gp_seq;
  	unsigned long flags;
++<<<<<<< HEAD
 +	bool gotcbs;
++=======
+ 	bool gotcbs = false;
+ 	unsigned long j = jiffies;
++>>>>>>> b8889c9c89a2 (rcu: Fix uninitialized variable in nocb_gp_wait())
  	bool needwait_gp = false; // This prevents actual uninitialized use.
  	bool needwake;
  	bool needwake_gp;
* Unmerged path kernel/rcu/tree_plugin.h
