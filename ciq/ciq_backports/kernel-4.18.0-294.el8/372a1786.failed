IB/srpt: Fix memory leak in srpt_add_one

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Maor Gottlieb <maorg@nvidia.com>
commit 372a1786283e50e7cb437ab7fdb1b95597310ad7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/372a1786.failed

Failure in srpt_refresh_port() for the second port will leave MAD
registered for the first one, however, the srpt_add_one() will be marked
as "failed" and SRPT will leak resources for that registered but not used
and released first port.

Unregister the MAD agent for all ports in case of failure.

Fixes: a42d985bd5b2 ("ib_srpt: Initial SRP Target merge for v3.3-rc1")
Link: https://lore.kernel.org/r/20201028065051.112430-1-leon@kernel.org
	Signed-off-by: Maor Gottlieb <maorg@nvidia.com>
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit 372a1786283e50e7cb437ab7fdb1b95597310ad7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srpt/ib_srpt.c
diff --cc drivers/infiniband/ulp/srpt/ib_srpt.c
index 16014c6ddbd7,1b096305de1a..000000000000
--- a/drivers/infiniband/ulp/srpt/ib_srpt.c
+++ b/drivers/infiniband/ulp/srpt/ib_srpt.c
@@@ -3177,10 -3182,12 +3178,11 @@@ static void srpt_add_one(struct ib_devi
  		mutex_init(&sport->port_gid_id.mutex);
  		INIT_LIST_HEAD(&sport->port_gid_id.tpg_list);
  
 -		ret = srpt_refresh_port(sport);
 -		if (ret) {
 +		if (srpt_refresh_port(sport)) {
  			pr_err("MAD registration failed for %s-%d.\n",
  			       dev_name(&sdev->device->dev), i);
- 			goto err_event;
+ 			i--;
+ 			goto err_port;
  		}
  	}
  
@@@ -3188,12 -3195,12 +3190,13 @@@
  	list_add_tail(&sdev->list, &srpt_dev_list);
  	spin_unlock(&srpt_dev_lock);
  
 +out:
  	ib_set_client_data(device, &srpt_client, sdev);
  	pr_debug("added %s.\n", dev_name(&device->dev));
 -	return 0;
 +	return;
  
- err_event:
+ err_port:
+ 	srpt_unregister_mad_agent(sdev, i);
  	ib_unregister_event_handler(&sdev->event_handler);
  err_cm:
  	if (sdev->cm_id)
@@@ -3219,13 -3224,7 +3222,17 @@@ static void srpt_remove_one(struct ib_d
  	struct srpt_device *sdev = client_data;
  	int i;
  
++<<<<<<< HEAD
 +	if (!sdev) {
 +		pr_info("%s(%s): nothing to do.\n", __func__,
 +			dev_name(&device->dev));
 +		return;
 +	}
 +
 +	srpt_unregister_mad_agent(sdev);
++=======
+ 	srpt_unregister_mad_agent(sdev, sdev->device->phys_port_cnt);
++>>>>>>> 372a1786283e (IB/srpt: Fix memory leak in srpt_add_one)
  
  	ib_unregister_event_handler(&sdev->event_handler);
  
* Unmerged path drivers/infiniband/ulp/srpt/ib_srpt.c
