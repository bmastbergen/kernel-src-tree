mm/memory_hotplug.c: prevent memory leak when reusing pgdat

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Wei Yang <richardw.yang@linux.intel.com>
commit 33fce0113da2f8a5c1bbce0c46a8b131500f1677
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/33fce011.failed

When offlining a node in try_offline_node(), pgdat is not released.  So
that pgdat could be reused in hotadd_new_pgdat().  While we reallocate
pgdat->per_cpu_nodestats if this pgdat is reused.

This patch prevents the memory leak by just allocating per_cpu_nodestats
when it is a new pgdat.

Link: http://lkml.kernel.org/r/20190813020608.10194-1-richardw.yang@linux.intel.com
	Signed-off-by: Wei Yang <richardw.yang@linux.intel.com>
	Acked-by: Michal Hocko <mhocko@suse.com>
	Cc: Oscar Salvador <OSalvador@suse.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 33fce0113da2f8a5c1bbce0c46a8b131500f1677)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memory_hotplug.c
diff --cc mm/memory_hotplug.c
index 57fa46f17050,c28e5dd017ba..000000000000
--- a/mm/memory_hotplug.c
+++ b/mm/memory_hotplug.c
@@@ -896,9 -948,11 +905,13 @@@ static pg_data_t __ref *hotadd_new_pgda
  
  	/* we can use NODE_DATA(nid) from here */
  
 -	pgdat->node_id = nid;
 -	pgdat->node_start_pfn = start_pfn;
 -
  	/* init node's zones as empty zones, we don't have any present pages.*/
++<<<<<<< HEAD
 +	free_area_init_node(nid, zones_size, start_pfn, zholes_size);
 +	pgdat->per_cpu_nodestats = alloc_percpu(struct per_cpu_nodestat);
++=======
+ 	free_area_init_core_hotplug(nid);
++>>>>>>> 33fce0113da2 (mm/memory_hotplug.c: prevent memory leak when reusing pgdat)
  
  	/*
  	 * The node we allocated has no zone fallback lists. For avoiding
* Unmerged path mm/memory_hotplug.c
