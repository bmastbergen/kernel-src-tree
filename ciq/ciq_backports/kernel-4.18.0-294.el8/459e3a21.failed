gcc-9: properly declare the {pv,hv}clock_page storage

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] gcc-9: properly declare the {pv, hv}clock_page storage (Waiman Long) [1548297]
Rebuild_FUZZ: 99.07%
commit-author Linus Torvalds <torvalds@linux-foundation.org>
commit 459e3a21535ae3c7a9a123650e54f5c882b8fcbf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/459e3a21.failed

The pvlock_page and hvclock_page variables are (as the name implies)
addresses to pages, created by the linker script.

But we declared them as just "extern u8" variables, which _works_, but
now that gcc does some more bounds checking, it causes warnings like

    warning: array subscript 1 is outside array bounds of ‘u8[1]’

when we then access more than one byte from those variables.

Fix this by simply making the declaration of the variables match
reality, which makes the compiler happy too.

	Signed-off-by: Linus Torvalds <torvalds@-linux-foundation.org>
(cherry picked from commit 459e3a21535ae3c7a9a123650e54f5c882b8fcbf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/entry/vdso/vclock_gettime.c
diff --cc arch/x86/entry/vdso/vclock_gettime.c
index 7eb640252452,98c7d12b945c..000000000000
--- a/arch/x86/entry/vdso/vclock_gettime.c
+++ b/arch/x86/entry/vdso/vclock_gettime.c
@@@ -33,8 -33,8 +33,13 @@@ extern u8 pvclock_page[PAGE_SIZE
  	__attribute__((visibility("hidden")));
  #endif
  
++<<<<<<< HEAD
 +#ifdef CONFIG_HYPERV_TIMER
 +extern u8 hvclock_page
++=======
+ #ifdef CONFIG_HYPERV_TSCPAGE
+ extern u8 hvclock_page[PAGE_SIZE]
++>>>>>>> 459e3a21535a (gcc-9: properly declare the {pv,hv}clock_page storage)
  	__attribute__((visibility("hidden")));
  #endif
  
* Unmerged path arch/x86/entry/vdso/vclock_gettime.c
