bpf: disallow attaching modify_return tracing functions to other BPF programs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Toke Høiland-Jørgensen <toke@redhat.com>
commit 1af9270e908cd50a4f5d815c9b6f794c7d57ed07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1af9270e.failed

From the checks and commit messages for modify_return, it seems it was
never the intention that it should be possible to attach a tracing program
with expected_attach_type == BPF_MODIFY_RETURN to another BPF program.
However, check_attach_modify_return() will only look at the function name,
so if the target function starts with "security_", the attach will be
allowed even for bpf2bpf attachment.

Fix this oversight by also blocking the modification if a target program is
supplied.

Fixes: 18644cec714a ("bpf: Fix use-after-free in fmod_ret check")
Fixes: 6ba43b761c41 ("bpf: Attachment verification for BPF_MODIFY_RETURN")
	Acked-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit 1af9270e908cd50a4f5d815c9b6f794c7d57ed07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/verifier.c
diff --cc kernel/bpf/verifier.c
index 9fd915b15d99,52649a5497ce..000000000000
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@@ -10793,7 -11475,36 +10793,40 @@@ static int check_attach_btf_id(struct b
  			}
  		}
  
++<<<<<<< HEAD
 +		if (prog->expected_attach_type == BPF_MODIFY_RETURN) {
++=======
+ 		if (prog->aux->sleepable) {
+ 			ret = -EINVAL;
+ 			switch (prog->type) {
+ 			case BPF_PROG_TYPE_TRACING:
+ 				/* fentry/fexit/fmod_ret progs can be sleepable only if they are
+ 				 * attached to ALLOW_ERROR_INJECTION and are not in denylist.
+ 				 */
+ 				if (!check_non_sleepable_error_inject(btf_id) &&
+ 				    within_error_injection_list(addr))
+ 					ret = 0;
+ 				break;
+ 			case BPF_PROG_TYPE_LSM:
+ 				/* LSM progs check that they are attached to bpf_lsm_*() funcs.
+ 				 * Only some of them are sleepable.
+ 				 */
+ 				if (check_sleepable_lsm_hook(btf_id))
+ 					ret = 0;
+ 				break;
+ 			default:
+ 				break;
+ 			}
+ 			if (ret)
+ 				verbose(env, "%s is not sleepable\n",
+ 					prog->aux->attach_func_name);
+ 		} else if (prog->expected_attach_type == BPF_MODIFY_RETURN) {
+ 			if (tgt_prog) {
+ 				verbose(env, "can't modify return codes of BPF programs\n");
+ 				ret = -EINVAL;
+ 				goto out;
+ 			}
++>>>>>>> 1af9270e908c (bpf: disallow attaching modify_return tracing functions to other BPF programs)
  			ret = check_attach_modify_return(prog, addr);
  			if (ret)
  				verbose(env, "%s() is not modifiable\n",
* Unmerged path kernel/bpf/verifier.c
