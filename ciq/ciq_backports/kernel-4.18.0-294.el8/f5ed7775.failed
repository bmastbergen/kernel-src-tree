x86/sev-es: Check required CPU features for SEV-ES

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] sev-es: Check required CPU features for SEV-ES (Vitaly Kuznetsov) [1868080]
Rebuild_FUZZ: 95.83%
commit-author Martin Radev <martin.b.radev@gmail.com>
commit f5ed777586e08e09c4b6f1e87161a145ee1431cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/f5ed7775.failed

Make sure the machine supports RDRAND, otherwise there is no trusted
source of randomness in the system.

To also check this in the pre-decompression stage, make has_cpuflag()
not depend on CONFIG_RANDOMIZE_BASE anymore.

	Signed-off-by: Martin Radev <martin.b.radev@gmail.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Kees Cook <keescook@chromium.org>
Link: https://lkml.kernel.org/r/20200907131613.12703-73-joro@8bytes.org
(cherry picked from commit f5ed777586e08e09c4b6f1e87161a145ee1431cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/sev-es.c
#	arch/x86/kernel/sev-es-shared.c
#	arch/x86/kernel/sev-es.c
* Unmerged path arch/x86/boot/compressed/sev-es.c
* Unmerged path arch/x86/kernel/sev-es-shared.c
* Unmerged path arch/x86/kernel/sev-es.c
diff --git a/arch/x86/boot/compressed/cpuflags.c b/arch/x86/boot/compressed/cpuflags.c
index 6448a8196d32..0cc1323896d1 100644
--- a/arch/x86/boot/compressed/cpuflags.c
+++ b/arch/x86/boot/compressed/cpuflags.c
@@ -1,6 +1,4 @@
 // SPDX-License-Identifier: GPL-2.0
-#ifdef CONFIG_RANDOMIZE_BASE
-
 #include "../cpuflags.c"
 
 bool has_cpuflag(int flag)
@@ -9,5 +7,3 @@ bool has_cpuflag(int flag)
 
 	return test_bit(flag, cpu.flags);
 }
-
-#endif
diff --git a/arch/x86/boot/compressed/misc.h b/arch/x86/boot/compressed/misc.h
index d55a1ca4f95b..7cbd61848b36 100644
--- a/arch/x86/boot/compressed/misc.h
+++ b/arch/x86/boot/compressed/misc.h
@@ -81,8 +81,6 @@ void choose_random_location(unsigned long input,
 			    unsigned long *output,
 			    unsigned long output_size,
 			    unsigned long *virt_addr);
-/* cpuflags.c */
-bool has_cpuflag(int flag);
 #else
 static inline void choose_random_location(unsigned long input,
 					  unsigned long input_size,
@@ -93,6 +91,9 @@ static inline void choose_random_location(unsigned long input,
 }
 #endif
 
+/* cpuflags.c */
+bool has_cpuflag(int flag);
+
 #ifdef CONFIG_X86_64
 void initialize_identity_maps(void);
 void add_identity_map(unsigned long start, unsigned long size);
* Unmerged path arch/x86/boot/compressed/sev-es.c
* Unmerged path arch/x86/kernel/sev-es-shared.c
* Unmerged path arch/x86/kernel/sev-es.c
