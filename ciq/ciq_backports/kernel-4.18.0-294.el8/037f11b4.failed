mnt_init(): call shmem_init() unconditionally

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit 037f11b4752f717201143a1dc5d6acf3cb71ddfa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/037f11b4.failed

No point having two call sites (earlier in init_rootfs() from
mnt_init() in case we are going to use shmem-style rootfs,
later from do_basic_setup() unconditionally), along with the
logics in shmem_init() itself to make the second call a no-op...

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 037f11b4752f717201143a1dc5d6acf3cb71ddfa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/namespace.c
diff --cc fs/namespace.c
index 7a95a570643b,e6990f3d526d..000000000000
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@@ -26,6 -27,9 +26,12 @@@
  #include <linux/memblock.h>
  #include <linux/task_work.h>
  #include <linux/sched/task.h>
++<<<<<<< HEAD
++=======
+ #include <uapi/linux/mount.h>
+ #include <linux/fs_context.h>
+ #include <linux/shmem_fs.h>
++>>>>>>> 037f11b4752f (mnt_init(): call shmem_init() unconditionally)
  
  #include "pnode.h"
  #include "internal.h"
* Unmerged path fs/namespace.c
diff --git a/include/linux/init.h b/include/linux/init.h
index 28329918d89e..993bd8c3dfc8 100644
--- a/include/linux/init.h
+++ b/include/linux/init.h
@@ -149,7 +149,7 @@ extern unsigned int reset_devices;
 /* used by init/main.c */
 void setup_arch(char **);
 void prepare_namespace(void);
-int __init init_rootfs(void);
+void __init init_rootfs(void);
 extern struct file_system_type rootfs_fs_type;
 
 #if defined(CONFIG_STRICT_KERNEL_RWX) || defined(CONFIG_STRICT_MODULE_RWX)
diff --git a/init/do_mounts.c b/init/do_mounts.c
index 0cae82efe0ea..8cf8e13167de 100644
--- a/init/do_mounts.c
+++ b/init/do_mounts.c
@@ -621,14 +621,9 @@ struct file_system_type rootfs_fs_type = {
 	.kill_sb	= kill_litter_super,
 };
 
-int __init init_rootfs(void)
+void __init init_rootfs(void)
 {
-	int err = 0;
-
 	if (IS_ENABLED(CONFIG_TMPFS) && !saved_root_name[0] &&
-		(!root_fs_names || strstr(root_fs_names, "tmpfs"))) {
-		err = shmem_init();
+		(!root_fs_names || strstr(root_fs_names, "tmpfs")))
 		is_tmpfs = true;
-	}
-	return err;
 }
diff --git a/init/main.c b/init/main.c
index f22fda4698e1..949dfc8d234b 100644
--- a/init/main.c
+++ b/init/main.c
@@ -982,7 +982,6 @@ static void __init do_initcalls(void)
 static void __init do_basic_setup(void)
 {
 	cpuset_init_smp();
-	shmem_init();
 	driver_init();
 	init_irq_proc();
 	do_ctors();
diff --git a/mm/shmem.c b/mm/shmem.c
index ac78b5ec6241..f923ecf47509 100644
--- a/mm/shmem.c
+++ b/mm/shmem.c
@@ -3745,10 +3745,6 @@ int __init shmem_init(void)
 {
 	int error;
 
-	/* If rootfs called this, don't re-init */
-	if (shmem_inode_cachep)
-		return 0;
-
 	shmem_init_inodecache();
 
 	error = register_filesystem(&shmem_fs_type);
