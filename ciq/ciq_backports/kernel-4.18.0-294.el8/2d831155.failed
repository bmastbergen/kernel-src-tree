drm/nouveau/kms/nv50-: Get rid of bogus nouveau_conn_mode_valid()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Lyude Paul <lyude@redhat.com>
commit 2d831155cf0607566e43d8465da33774b2dc7221
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2d831155.failed

Ville also pointed out that I got a lot of the logic here wrong as well, whoops.
While I don't think anyone's likely using 3D output with nouveau, the next patch
will make nouveau_conn_mode_valid() make a lot less sense. So, let's just get
rid of it and open-code it like before, while taking care to move the 3D frame
packing calculations on the dot clock into the right place.

	Signed-off-by: Lyude Paul <lyude@redhat.com>
Fixes: d6a9efece724 ("drm/nouveau/kms/nv50-: Share DP SST mode_valid() handling with MST")
	Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Cc: <stable@vger.kernel.org> # v5.8+
	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 2d831155cf0607566e43d8465da33774b2dc7221)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nouveau_dp.c
diff --cc drivers/gpu/drm/nouveau/nouveau_dp.c
index 8a0f7994e1ae,93e3751ad7f1..000000000000
--- a/drivers/gpu/drm/nouveau/nouveau_dp.c
+++ b/drivers/gpu/drm/nouveau/nouveau_dp.c
@@@ -114,18 -232,28 +114,34 @@@ nv50_dp_mode_valid(struct drm_connecto
  		   unsigned *out_clock)
  {
  	const unsigned min_clock = 25000;
++<<<<<<< HEAD
 +	unsigned max_clock, clock;
 +	enum drm_mode_status ret;
++=======
+ 	unsigned max_clock, ds_clock, clock = mode->clock;
++>>>>>>> 2d831155cf06 (drm/nouveau/kms/nv50-: Get rid of bogus nouveau_conn_mode_valid())
  
  	if (mode->flags & DRM_MODE_FLAG_INTERLACE && !outp->caps.dp_interlace)
  		return MODE_NO_INTERLACE;
  
+ 	if ((mode->flags & DRM_MODE_FLAG_3D_MASK) == DRM_MODE_FLAG_3D_FRAME_PACKING)
+ 		clock *= 2;
+ 
  	max_clock = outp->dp.link_nr * outp->dp.link_bw;
 -	ds_clock = drm_dp_downstream_max_dotclock(outp->dp.dpcd,
 -						  outp->dp.downstream_ports);
 -	if (ds_clock)
 -		max_clock = min(max_clock, ds_clock);
 -
  	clock = mode->clock * (connector->display_info.bpc * 3) / 10;
++<<<<<<< HEAD
 +
 +	ret = nouveau_conn_mode_clock_valid(mode, min_clock, max_clock,
 +					    &clock);
++=======
+ 	if (clock < min_clock)
+ 		return MODE_CLOCK_LOW;
+ 	if (clock > max_clock)
+ 		return MODE_CLOCK_HIGH;
+ 
++>>>>>>> 2d831155cf06 (drm/nouveau/kms/nv50-: Get rid of bogus nouveau_conn_mode_valid())
  	if (out_clock)
  		*out_clock = clock;
- 	return ret;
+ 
+ 	return MODE_OK;
  }
diff --git a/drivers/gpu/drm/nouveau/nouveau_connector.c b/drivers/gpu/drm/nouveau/nouveau_connector.c
index 96b0435c9a28..3d5a9f690139 100644
--- a/drivers/gpu/drm/nouveau/nouveau_connector.c
+++ b/drivers/gpu/drm/nouveau/nouveau_connector.c
@@ -1034,29 +1034,6 @@ get_tmds_link_bandwidth(struct drm_connector *connector)
 		return 112000 * duallink_scale;
 }
 
-enum drm_mode_status
-nouveau_conn_mode_clock_valid(const struct drm_display_mode *mode,
-			      const unsigned min_clock,
-			      const unsigned max_clock,
-			      unsigned int *clock_out)
-{
-	unsigned int clock = mode->clock;
-
-	if ((mode->flags & DRM_MODE_FLAG_3D_MASK) ==
-	    DRM_MODE_FLAG_3D_FRAME_PACKING)
-		clock *= 2;
-
-	if (clock < min_clock)
-		return MODE_CLOCK_LOW;
-	if (clock > max_clock)
-		return MODE_CLOCK_HIGH;
-
-	if (clock_out)
-		*clock_out = clock;
-
-	return MODE_OK;
-}
-
 static enum drm_mode_status
 nouveau_connector_mode_valid(struct drm_connector *connector,
 			     struct drm_display_mode *mode)
@@ -1064,7 +1041,7 @@ nouveau_connector_mode_valid(struct drm_connector *connector,
 	struct nouveau_connector *nv_connector = nouveau_connector(connector);
 	struct nouveau_encoder *nv_encoder = nv_connector->detected_encoder;
 	struct drm_encoder *encoder = to_drm_encoder(nv_encoder);
-	unsigned min_clock = 25000, max_clock = min_clock;
+	unsigned int min_clock = 25000, max_clock = min_clock, clock = mode->clock;
 
 	switch (nv_encoder->dcb->type) {
 	case DCB_OUTPUT_LVDS:
@@ -1093,8 +1070,15 @@ nouveau_connector_mode_valid(struct drm_connector *connector,
 		return MODE_BAD;
 	}
 
-	return nouveau_conn_mode_clock_valid(mode, min_clock, max_clock,
-					     NULL);
+	if ((mode->flags & DRM_MODE_FLAG_3D_MASK) == DRM_MODE_FLAG_3D_FRAME_PACKING)
+		clock *= 2;
+
+	if (clock < min_clock)
+		return MODE_CLOCK_LOW;
+	if (clock > max_clock)
+		return MODE_CLOCK_HIGH;
+
+	return MODE_OK;
 }
 
 static struct drm_encoder *
* Unmerged path drivers/gpu/drm/nouveau/nouveau_dp.c
