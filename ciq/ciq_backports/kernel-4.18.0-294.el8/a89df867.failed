net: atlantic: A0 ntuple filters

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Dmitry Bogdanov <dbogdanov@marvell.com>
commit a89df867ce1a3368015ff6f85ab4a23d2a0aaba1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a89df867.failed

This patch adds support for ntuple filters on A0.

	Signed-off-by: Dmitry Bogdanov <dbogdanov@marvell.com>
	Signed-off-by: Mark Starovoytov <mstarovoitov@marvell.com>
	Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a89df867ce1a3368015ff6f85ab4a23d2a0aaba1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
diff --cc drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
index 3cc67cd80605,c38a4b8a14cb..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
@@@ -18,32 -16,35 +18,64 @@@
  #include "hw_atl_llh.h"
  #include "hw_atl_a0_internal.h"
  
++<<<<<<< HEAD
 +#define DEFAULT_A0_BOARD_BASIC_CAPABILITIES \
 +	.is_64_dma = true,		  \
 +	.msix_irqs = 4U,		  \
 +	.irq_mask = ~0U,		  \
 +	.vecs = HW_ATL_A0_RSS_MAX,	  \
 +	.tcs = HW_ATL_A0_TC_MAX,	  \
 +	.rxd_alignment = 1U,		  \
 +	.rxd_size = HW_ATL_A0_RXD_SIZE,   \
 +	.rxds_max = HW_ATL_A0_MAX_RXD,    \
 +	.rxds_min = HW_ATL_A0_MIN_RXD,    \
 +	.txd_alignment = 1U,		  \
 +	.txd_size = HW_ATL_A0_TXD_SIZE,   \
 +	.txds_max = HW_ATL_A0_MAX_TXD,    \
 +	.txds_min = HW_ATL_A0_MIN_RXD,    \
 +	.txhwb_alignment = 4096U,	  \
 +	.tx_rings = HW_ATL_A0_TX_RINGS,   \
 +	.rx_rings = HW_ATL_A0_RX_RINGS,   \
 +	.hw_features = NETIF_F_HW_CSUM |  \
 +			NETIF_F_RXHASH |  \
 +			NETIF_F_RXCSUM |  \
 +			NETIF_F_SG |	  \
 +			NETIF_F_TSO,	  \
 +	.hw_priv_flags = IFF_UNICAST_FLT, \
 +	.flow_control = true,		  \
 +	.mtu = HW_ATL_A0_MTU_JUMBO,       \
 +	.mac_regs_count = 88,		  \
++=======
+ #define DEFAULT_A0_BOARD_BASIC_CAPABILITIES	     \
+ 	.is_64_dma = true,			     \
+ 	.op64bit = false,			     \
+ 	.msix_irqs = 4U,			     \
+ 	.irq_mask = ~0U,			     \
+ 	.vecs = HW_ATL_A0_RSS_MAX,		     \
+ 	.tcs_max = HW_ATL_A0_TC_MAX,		     \
+ 	.rxd_alignment = 1U,			     \
+ 	.rxd_size = HW_ATL_A0_RXD_SIZE,		     \
+ 	.rxds_max = HW_ATL_A0_MAX_RXD,		     \
+ 	.rxds_min = HW_ATL_A0_MIN_RXD,		     \
+ 	.txd_alignment = 1U,			     \
+ 	.txd_size = HW_ATL_A0_TXD_SIZE,		     \
+ 	.txds_max = HW_ATL_A0_MAX_TXD,		     \
+ 	.txds_min = HW_ATL_A0_MIN_RXD,		     \
+ 	.txhwb_alignment = 4096U,		     \
+ 	.tx_rings = HW_ATL_A0_TX_RINGS,		     \
+ 	.rx_rings = HW_ATL_A0_RX_RINGS,		     \
+ 	.hw_features = NETIF_F_HW_CSUM |	     \
+ 			NETIF_F_RXHASH |	     \
+ 			NETIF_F_RXCSUM |	     \
+ 			NETIF_F_SG |		     \
+ 			NETIF_F_TSO |		     \
+ 			NETIF_F_NTUPLE |	     \
+ 			NETIF_F_HW_VLAN_CTAG_FILTER, \
+ 	.hw_priv_flags = IFF_UNICAST_FLT,	     \
+ 	.flow_control = true,			     \
+ 	.mtu = HW_ATL_A0_MTU_JUMBO,		     \
+ 	.mac_regs_count = 88,			     \
++>>>>>>> a89df867ce1a (net: atlantic: A0 ntuple filters)
  	.hw_alive_check_addr = 0x10U
  
  const struct aq_hw_caps_s hw_atl_a0_caps_aqc100 = {
@@@ -355,11 -356,9 +388,14 @@@ static int hw_atl_a0_hw_init(struct aq_
  		[AQ_HW_IRQ_MSI]     = { 0x20000021U, 0x20000025U },
  		[AQ_HW_IRQ_MSIX]    = { 0x20000022U, 0x20000026U },
  	};
 -	struct aq_nic_cfg_s *aq_nic_cfg = self->aq_nic_cfg;
 +
  	int err = 0;
  
++<<<<<<< HEAD
 +	struct aq_nic_cfg_s *aq_nic_cfg = self->aq_nic_cfg;
 +
++=======
++>>>>>>> a89df867ce1a (net: atlantic: A0 ntuple filters)
  	hw_atl_a0_hw_init_tx_path(self);
  	hw_atl_a0_hw_init_rx_path(self);
  
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c
