virtio-net: get rid of unnecessary container of rq stats

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jason Wang <jasowang@redhat.com>
commit d46eeeaf99bcfab884e3d658e2ba1356939ea783
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/d46eeeaf.failed

We don't maintain tx counters in rx stats any more. There's no need
for an extra container of rq stats.

	Cc: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
	Signed-off-by: Jason Wang <jasowang@redhat.com>
	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d46eeeaf99bcfab884e3d658e2ba1356939ea783)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/virtio_net.c
diff --cc drivers/net/virtio_net.c
index bb87a9822737,14f661cbae18..000000000000
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@@ -85,29 -82,32 +85,21 @@@ struct virtnet_sq_stats 
  	struct u64_stats_sync syncp;
  	u64 packets;
  	u64 bytes;
 -	u64 xdp_tx;
 -	u64 xdp_tx_drops;
 -	u64 kicks;
  };
  
- struct virtnet_rq_stat_items {
+ struct virtnet_rq_stats {
+ 	struct u64_stats_sync syncp;
  	u64 packets;
  	u64 bytes;
  	u64 drops;
 -	u64 xdp_packets;
 -	u64 xdp_tx;
 -	u64 xdp_redirects;
 -	u64 xdp_drops;
 -	u64 kicks;
  };
  
- struct virtnet_rq_stats {
- 	struct u64_stats_sync syncp;
- 	struct virtnet_rq_stat_items items;
- };
- 
- struct virtnet_rx_stats {
- 	struct virtnet_rq_stat_items rx;
- };
- 
  #define VIRTNET_SQ_STAT(m)	offsetof(struct virtnet_sq_stats, m)
- #define VIRTNET_RQ_STAT(m)	offsetof(struct virtnet_rq_stat_items, m)
+ #define VIRTNET_RQ_STAT(m)	offsetof(struct virtnet_rq_stats, m)
  
  static const struct virtnet_stat_desc virtnet_sq_stats_desc[] = {
 -	{ "packets",		VIRTNET_SQ_STAT(packets) },
 -	{ "bytes",		VIRTNET_SQ_STAT(bytes) },
 -	{ "xdp_tx",		VIRTNET_SQ_STAT(xdp_tx) },
 -	{ "xdp_tx_drops",	VIRTNET_SQ_STAT(xdp_tx_drops) },
 -	{ "kicks",		VIRTNET_SQ_STAT(kicks) },
 +	{ "packets",	VIRTNET_SQ_STAT(packets) },
 +	{ "bytes",	VIRTNET_SQ_STAT(bytes) },
  };
  
  static const struct virtnet_stat_desc virtnet_rq_stats_desc[] = {
@@@ -681,6 -666,7 +673,10 @@@ static struct sk_buff *receive_small(st
  		xdp.rxq = &rq->xdp_rxq;
  		orig_data = xdp.data;
  		act = bpf_prog_run_xdp(xdp_prog, &xdp);
++<<<<<<< HEAD
++=======
+ 		stats->xdp_packets++;
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  
  		switch (act) {
  		case XDP_PASS:
@@@ -689,6 -675,7 +685,10 @@@
  			len = xdp.data_end - xdp.data;
  			break;
  		case XDP_TX:
++<<<<<<< HEAD
++=======
+ 			stats->xdp_tx++;
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  			xdpf = convert_to_xdp_frame(&xdp);
  			if (unlikely(!xdpf))
  				goto err_xdp;
@@@ -701,6 -688,7 +701,10 @@@
  			rcu_read_unlock();
  			goto xdp_xmit;
  		case XDP_REDIRECT:
++<<<<<<< HEAD
++=======
+ 			stats->xdp_redirects++;
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  			err = xdp_do_redirect(dev, &xdp, xdp_prog);
  			if (err)
  				goto err_xdp;
@@@ -734,7 -722,8 +738,12 @@@ err
  
  err_xdp:
  	rcu_read_unlock();
++<<<<<<< HEAD
 +	stats->rx.drops++;
++=======
+ 	stats->xdp_drops++;
+ 	stats->drops++;
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  	put_page(page);
  xdp_xmit:
  	return NULL;
@@@ -831,6 -820,7 +840,10 @@@ static struct sk_buff *receive_mergeabl
  		xdp.rxq = &rq->xdp_rxq;
  
  		act = bpf_prog_run_xdp(xdp_prog, &xdp);
++<<<<<<< HEAD
++=======
+ 		stats->xdp_packets++;
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  
  		switch (act) {
  		case XDP_PASS:
@@@ -855,6 -845,7 +868,10 @@@
  			}
  			break;
  		case XDP_TX:
++<<<<<<< HEAD
++=======
+ 			stats->xdp_tx++;
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  			xdpf = convert_to_xdp_frame(&xdp);
  			if (unlikely(!xdpf))
  				goto err_xdp;
@@@ -871,6 -862,7 +888,10 @@@
  			rcu_read_unlock();
  			goto xdp_xmit;
  		case XDP_REDIRECT:
++<<<<<<< HEAD
++=======
+ 			stats->xdp_redirects++;
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  			err = xdp_do_redirect(dev, &xdp, xdp_prog);
  			if (err) {
  				if (unlikely(xdp_page != page))
@@@ -966,6 -958,7 +987,10 @@@
  
  err_xdp:
  	rcu_read_unlock();
++<<<<<<< HEAD
++=======
+ 	stats->xdp_drops++;
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  err_skb:
  	put_page(page);
  	while (num_buf-- > 1) {
@@@ -1210,7 -1202,12 +1235,16 @@@ static bool try_fill_recv(struct virtne
  		if (err)
  			break;
  	} while (rq->vq->num_free);
++<<<<<<< HEAD
 +	virtqueue_kick(rq->vq);
++=======
+ 	if (virtqueue_kick_prepare(rq->vq) && virtqueue_notify(rq->vq)) {
+ 		u64_stats_update_begin(&rq->stats.syncp);
+ 		rq->stats.kicks++;
+ 		u64_stats_update_end(&rq->stats.syncp);
+ 	}
+ 
++>>>>>>> d46eeeaf99bc (virtio-net: get rid of unnecessary container of rq stats)
  	return !oom;
  }
  
* Unmerged path drivers/net/virtio_net.c
