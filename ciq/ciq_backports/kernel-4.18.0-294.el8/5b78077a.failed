KVM: arm64: debug: Drop useless vpcu parameter

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Marc Zyngier <maz@kernel.org>
commit 5b78077a00f8109f7a4717b19309ef0a76d73372
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/5b78077a.failed

As part of the ongoing spring cleanup, remove the now useless
vcpu parameter that is passed around (host and guest contexts
give us everything we need).

	Signed-off-by: Marc Zyngier <maz@kernel.org>
(cherry picked from commit 5b78077a00f8109f7a4717b19309ef0a76d73372)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kvm/hyp/debug-sr.c
diff --cc arch/arm64/kvm/hyp/debug-sr.c
index d825b78b3f10,0297dc63988c..000000000000
--- a/arch/arm64/kvm/hyp/debug-sr.c
+++ b/arch/arm64/kvm/hyp/debug-sr.c
@@@ -96,53 -88,8 +96,58 @@@
  	default:	write_debug(ptr[0], reg, 0);			\
  	}
  
++<<<<<<< HEAD:arch/arm64/kvm/hyp/debug-sr.c
 +static void __hyp_text __debug_save_spe_nvhe(u64 *pmscr_el1)
 +{
 +	u64 reg;
 +
 +	/* Clear pmscr in case of early return */
 +	*pmscr_el1 = 0;
 +
 +	/* SPE present on this CPU? */
 +	if (!cpuid_feature_extract_unsigned_field(read_sysreg(id_aa64dfr0_el1),
 +						  ID_AA64DFR0_PMSVER_SHIFT))
 +		return;
 +
 +	/* Yes; is it owned by EL3? */
 +	reg = read_sysreg_s(SYS_PMBIDR_EL1);
 +	if (reg & BIT(SYS_PMBIDR_EL1_P_SHIFT))
 +		return;
 +
 +	/* No; is the host actually using the thing? */
 +	reg = read_sysreg_s(SYS_PMBLIMITR_EL1);
 +	if (!(reg & BIT(SYS_PMBLIMITR_EL1_E_SHIFT)))
 +		return;
 +
 +	/* Yes; save the control register and disable data generation */
 +	*pmscr_el1 = read_sysreg_s(SYS_PMSCR_EL1);
 +	write_sysreg_s(0, SYS_PMSCR_EL1);
 +	isb();
 +
 +	/* Now drain all buffered data to memory */
 +	psb_csync();
 +	dsb(nsh);
 +}
 +
 +static void __hyp_text __debug_restore_spe_nvhe(u64 pmscr_el1)
 +{
 +	if (!pmscr_el1)
 +		return;
 +
 +	/* The host page table is installed, but not yet synchronised */
 +	isb();
 +
 +	/* Re-enable data generation */
 +	write_sysreg_s(pmscr_el1, SYS_PMSCR_EL1);
 +}
 +
 +static void __hyp_text __debug_save_state(struct kvm_vcpu *vcpu,
 +					  struct kvm_guest_debug_arch *dbg,
 +					  struct kvm_cpu_context *ctxt)
++=======
+ static void __debug_save_state(struct kvm_guest_debug_arch *dbg,
+ 			       struct kvm_cpu_context *ctxt)
++>>>>>>> 5b78077a00f8 (KVM: arm64: debug: Drop useless vpcu parameter):arch/arm64/kvm/hyp/include/hyp/debug-sr.h
  {
  	u64 aa64dfr0;
  	int brps, wrps;
@@@ -156,12 -103,11 +161,17 @@@
  	save_debug(dbg->dbg_wcr, dbgwcr, wrps);
  	save_debug(dbg->dbg_wvr, dbgwvr, wrps);
  
 -	ctxt_sys_reg(ctxt, MDCCINT_EL1) = read_sysreg(mdccint_el1);
 +	ctxt->sys_regs[MDCCINT_EL1] = read_sysreg(mdccint_el1);
  }
  
++<<<<<<< HEAD:arch/arm64/kvm/hyp/debug-sr.c
 +static void __hyp_text __debug_restore_state(struct kvm_vcpu *vcpu,
 +					     struct kvm_guest_debug_arch *dbg,
 +					     struct kvm_cpu_context *ctxt)
++=======
+ static void __debug_restore_state(struct kvm_guest_debug_arch *dbg,
+ 				  struct kvm_cpu_context *ctxt)
++>>>>>>> 5b78077a00f8 (KVM: arm64: debug: Drop useless vpcu parameter):arch/arm64/kvm/hyp/include/hyp/debug-sr.h
  {
  	u64 aa64dfr0;
  	int brps, wrps;
@@@ -201,11 -140,11 +211,11 @@@ void __hyp_text __debug_switch_to_guest
  	host_dbg = &vcpu->arch.host_debug_state.regs;
  	guest_dbg = kern_hyp_va(vcpu->arch.debug_ptr);
  
- 	__debug_save_state(vcpu, host_dbg, host_ctxt);
- 	__debug_restore_state(vcpu, guest_dbg, guest_ctxt);
+ 	__debug_save_state(host_dbg, host_ctxt);
+ 	__debug_restore_state(guest_dbg, guest_ctxt);
  }
  
 -static inline void __debug_switch_to_host_common(struct kvm_vcpu *vcpu)
 +void __hyp_text __debug_switch_to_host(struct kvm_vcpu *vcpu)
  {
  	struct kvm_cpu_context *host_ctxt;
  	struct kvm_cpu_context *guest_ctxt;
* Unmerged path arch/arm64/kvm/hyp/debug-sr.c
