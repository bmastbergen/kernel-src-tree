virtio-balloon: add support for providing free page reports to host

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Alexander Duyck <alexander.h.duyck@linux.intel.com>
commit b0c504f154718904ae49349147e3b7e6ae91ffdc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b0c504f1.failed

Add support for the page reporting feature provided by virtio-balloon.
Reporting differs from the regular balloon functionality in that is is
much less durable than a standard memory balloon.  Instead of creating a
list of pages that cannot be accessed the pages are only inaccessible
while they are being indicated to the virtio interface.  Once the
interface has acknowledged them they are placed back into their respective
free lists and are once again accessible by the guest system.

Unlike a standard balloon we don't inflate and deflate the pages.  Instead
we perform the reporting, and once the reporting is completed it is
assumed that the page has been dropped from the guest and will be faulted
back in the next time the page is accessed.

	Signed-off-by: Alexander Duyck <alexander.h.duyck@linux.intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Reviewed-by: David Hildenbrand <david@redhat.com>
	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Cc: Andrea Arcangeli <aarcange@redhat.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Cc: Luiz Capitulino <lcapitulino@redhat.com>
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Mel Gorman <mgorman@techsingularity.net>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Nitesh Narayan Lal <nitesh@redhat.com>
	Cc: Oscar Salvador <osalvador@suse.de>
	Cc: Pankaj Gupta <pagupta@redhat.com>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Rik van Riel <riel@surriel.com>
	Cc: Vlastimil Babka <vbabka@suse.cz>
	Cc: Wei Wang <wei.w.wang@intel.com>
	Cc: Yang Zhang <yang.zhang.wz@gmail.com>
	Cc: wei qi <weiqi4@huawei.com>
Link: http://lkml.kernel.org/r/20200211224657.29318.68624.stgit@localhost.localdomain
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit b0c504f154718904ae49349147e3b7e6ae91ffdc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/virtio/virtio_balloon.c
diff --cc drivers/virtio/virtio_balloon.c
index b554d8e684d2,9e0177529bad..000000000000
--- a/drivers/virtio/virtio_balloon.c
+++ b/drivers/virtio/virtio_balloon.c
@@@ -31,6 -18,8 +31,11 @@@
  #include <linux/mm.h>
  #include <linux/mount.h>
  #include <linux/magic.h>
++<<<<<<< HEAD
++=======
+ #include <linux/pseudo_fs.h>
+ #include <linux/page_reporting.h>
++>>>>>>> b0c504f15471 (virtio-balloon: add support for providing free page reports to host)
  
  /*
   * Balloon device works in 4K page units.  So each page is pointed to by
diff --git a/drivers/virtio/Kconfig b/drivers/virtio/Kconfig
index 2d43852cae04..2974e7fc494a 100644
--- a/drivers/virtio/Kconfig
+++ b/drivers/virtio/Kconfig
@@ -59,6 +59,7 @@ config VIRTIO_BALLOON
 	tristate "Virtio balloon driver"
 	depends on VIRTIO
 	select MEMORY_BALLOON
+	select PAGE_REPORTING
 	---help---
 	 This driver supports increasing and decreasing the amount
 	 of memory within a KVM guest.
* Unmerged path drivers/virtio/virtio_balloon.c
diff --git a/include/uapi/linux/virtio_balloon.h b/include/uapi/linux/virtio_balloon.h
index a1966cd7b677..19974392d324 100644
--- a/include/uapi/linux/virtio_balloon.h
+++ b/include/uapi/linux/virtio_balloon.h
@@ -36,6 +36,7 @@
 #define VIRTIO_BALLOON_F_DEFLATE_ON_OOM	2 /* Deflate balloon on OOM */
 #define VIRTIO_BALLOON_F_FREE_PAGE_HINT	3 /* VQ to report free pages */
 #define VIRTIO_BALLOON_F_PAGE_POISON	4 /* Guest is using page poisoning */
+#define VIRTIO_BALLOON_F_REPORTING	5 /* Page reporting virtqueue */
 
 /* Size of a PFN in the balloon interface. */
 #define VIRTIO_BALLOON_PFN_SHIFT 12
