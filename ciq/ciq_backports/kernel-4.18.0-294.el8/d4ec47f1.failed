nvme-pci: initialize tagset numa value to the value of the ctrl

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Max Gurtovoy <maxg@mellanox.com>
commit d4ec47f120537c75184c3dc939d3b2e1bcc8b260
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/d4ec47f1.failed

Both admin's and drive's tagsets should be set according the numa node
of the controller.

	Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit d4ec47f120537c75184c3dc939d3b2e1bcc8b260)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 3e1641942592,b1d18f0633c7..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -1555,8 -1593,8 +1555,13 @@@ static int nvme_alloc_admin_tags(struc
  
  		dev->admin_tagset.queue_depth = NVME_AQ_MQ_TAG_DEPTH;
  		dev->admin_tagset.timeout = ADMIN_TIMEOUT;
++<<<<<<< HEAD
 +		dev->admin_tagset.numa_node = dev_to_node(dev->dev);
 +		dev->admin_tagset.cmd_size = nvme_pci_cmd_size(dev, false);
++=======
+ 		dev->admin_tagset.numa_node = dev->ctrl.numa_node;
+ 		dev->admin_tagset.cmd_size = sizeof(struct nvme_iod);
++>>>>>>> d4ec47f12053 (nvme-pci: initialize tagset numa value to the value of the ctrl)
  		dev->admin_tagset.flags = BLK_MQ_F_NO_SCHED;
  		dev->admin_tagset.driver_data = dev;
  
@@@ -2221,14 -2259,10 +2226,14 @@@ static void nvme_dev_add(struct nvme_de
  		if (dev->io_queues[HCTX_TYPE_POLL])
  			dev->tagset.nr_maps++;
  		dev->tagset.timeout = NVME_IO_TIMEOUT;
- 		dev->tagset.numa_node = dev_to_node(dev->dev);
+ 		dev->tagset.numa_node = dev->ctrl.numa_node;
  		dev->tagset.queue_depth =
  				min_t(int, dev->q_depth, BLK_MQ_MAX_DEPTH) - 1;
 -		dev->tagset.cmd_size = sizeof(struct nvme_iod);
 +		dev->tagset.cmd_size = nvme_pci_cmd_size(dev, false);
 +		if ((dev->ctrl.sgls & ((1 << 0) | (1 << 1))) && sgl_threshold) {
 +			dev->tagset.cmd_size = max(dev->tagset.cmd_size,
 +					nvme_pci_cmd_size(dev, true));
 +		}
  		dev->tagset.flags = BLK_MQ_F_SHOULD_MERGE;
  		dev->tagset.driver_data = dev;
  
* Unmerged path drivers/nvme/host/pci.c
