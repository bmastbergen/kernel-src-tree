KVM: VMX: Fix x2APIC MSR intercept handling on !APICV platforms

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Peter Xu <peterx@redhat.com>
commit 628ade2d0816b2675ab61ba6aadfc9a94e3e1589
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/628ade2d.failed

Fix an inverted flag for intercepting x2APIC MSRs and intercept writes
by default, even when APICV is enabled.

Fixes: 3eb900173c71 ("KVM: x86: VMX: Prevent MSR passthrough when MSR access is denied")
Co-developed-by: Peter Xu <peterx@redhat.com>
[sean: added changelog]
	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Message-Id: <20201005195532.8674-2-sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 628ade2d0816b2675ab61ba6aadfc9a94e3e1589)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/vmx.c
diff --cc arch/x86/kvm/vmx/vmx.c
index 985a4bfb7517,4797ec92c88c..000000000000
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@@ -3699,10 -3786,11 +3699,18 @@@ static void vmx_update_msr_bitmap_x2api
  {
  	int msr;
  
++<<<<<<< HEAD
 +	for (msr = 0x800; msr <= 0x8ff; msr += BITS_PER_LONG) {
 +		unsigned word = msr / BITS_PER_LONG;
 +		msr_bitmap[word] = (mode & MSR_BITMAP_MODE_X2APIC_APICV) ? 0 : ~0;
 +		msr_bitmap[word + (0x800 / sizeof(long))] = ~0;
++=======
+ 	for (msr = 0x800; msr <= 0x8ff; msr++) {
+ 		bool apicv = !!(mode & MSR_BITMAP_MODE_X2APIC_APICV);
+ 
+ 		vmx_set_intercept_for_msr(vcpu, msr, MSR_TYPE_R, !apicv);
+ 		vmx_set_intercept_for_msr(vcpu, msr, MSR_TYPE_W, true);
++>>>>>>> 628ade2d0816 (KVM: VMX: Fix x2APIC MSR intercept handling on !APICV platforms)
  	}
  
  	if (mode & MSR_BITMAP_MODE_X2APIC) {
* Unmerged path arch/x86/kvm/vmx/vmx.c
