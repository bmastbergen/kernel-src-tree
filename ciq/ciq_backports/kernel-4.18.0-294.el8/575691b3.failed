net: phylink: only restart AN if the link mode is using in-band AN

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Russell King <rmk+kernel@armlinux.org.uk>
commit 575691b309291c5163cca5877ec159120a68774d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/575691b3.failed

If we are not using in-band autonegotiation, there is no point passing
the request to restart autonegotiation on to the driver.

	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 575691b309291c5163cca5877ec159120a68774d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phylink.c
diff --cc drivers/net/phy/phylink.c
index 6fb47b42e86d,494af91535ba..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -424,16 -426,38 +424,26 @@@ static void phylink_mac_config_up(struc
  		phylink_mac_config(pl, state);
  }
  
 -static void phylink_mac_pcs_an_restart(struct phylink *pl)
 +static void phylink_mac_an_restart(struct phylink *pl)
  {
  	if (pl->link_config.an_enabled &&
++<<<<<<< HEAD
 +	    phy_interface_mode_is_8023z(pl->link_config.interface))
 +		pl->ops->mac_an_restart(pl->config);
++=======
+ 	    phy_interface_mode_is_8023z(pl->link_config.interface) &&
+ 	    phylink_autoneg_inband(pl->cur_link_an_mode)) {
+ 		if (pl->pcs_ops)
+ 			pl->pcs_ops->pcs_an_restart(pl->config);
+ 		else
+ 			pl->mac_ops->mac_an_restart(pl->config);
+ 	}
++>>>>>>> 575691b30929 (net: phylink: only restart AN if the link mode is using in-band AN)
  }
  
 -static void phylink_pcs_config(struct phylink *pl, bool force_restart,
 -			       const struct phylink_link_state *state)
 +static int phylink_get_mac_state(struct phylink *pl, struct phylink_link_state *state)
  {
 -	bool restart = force_restart;
 -
 -	if (pl->pcs_ops && pl->pcs_ops->pcs_config(pl->config,
 -						   pl->cur_link_an_mode,
 -						   state->interface,
 -						   state->advertising))
 -		restart = true;
 -
 -	phylink_mac_config(pl, state);
 -
 -	if (restart)
 -		phylink_mac_pcs_an_restart(pl);
 -}
  
 -static void phylink_mac_pcs_get_state(struct phylink *pl,
 -				      struct phylink_link_state *state)
 -{
  	linkmode_copy(state->advertising, pl->link_config.advertising);
  	linkmode_zero(state->lp_advertising);
  	state->interface = pl->link_config.interface;
* Unmerged path drivers/net/phy/phylink.c
