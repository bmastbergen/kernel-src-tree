rcu/tiny: support vmalloc in tiny-RCU

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Uladzislau Rezki (Sony) <urezki@gmail.com>
commit 64d1d06ccb1b7de245ccf781b91517f328bebd9f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/64d1d06c.failed

Replace kfree() with kvfree() in rcu_reclaim_tiny().
This makes it possible to release either SLAB or vmalloc
objects after a GP.

	Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
	Signed-off-by: Uladzislau Rezki (Sony) <urezki@gmail.com>
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit 64d1d06ccb1b7de245ccf781b91517f328bebd9f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/rcu/tiny.c
diff --cc kernel/rcu/tiny.c
index 319285a8c55c,4b99f7b88bee..000000000000
--- a/kernel/rcu/tiny.c
+++ b/kernel/rcu/tiny.c
@@@ -35,6 -22,8 +35,11 @@@
  #include <linux/time.h>
  #include <linux/cpu.h>
  #include <linux/prefetch.h>
++<<<<<<< HEAD
++=======
+ #include <linux/slab.h>
+ #include <linux/mm.h>
++>>>>>>> 64d1d06ccb1b (rcu/tiny: support vmalloc in tiny-RCU)
  
  #include "rcu.h"
  
@@@ -86,6 -75,31 +91,34 @@@ void rcu_sched_clock_irq(int user
  	}
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * Reclaim the specified callback, either by invoking it for non-kfree cases or
+  * freeing it directly (for kfree). Return true if kfreeing, false otherwise.
+  */
+ static inline bool rcu_reclaim_tiny(struct rcu_head *head)
+ {
+ 	rcu_callback_t f;
+ 	unsigned long offset = (unsigned long)head->func;
+ 
+ 	rcu_lock_acquire(&rcu_callback_map);
+ 	if (__is_kfree_rcu_offset(offset)) {
+ 		trace_rcu_invoke_kfree_callback("", head, offset);
+ 		kvfree((void *)head - offset);
+ 		rcu_lock_release(&rcu_callback_map);
+ 		return true;
+ 	}
+ 
+ 	trace_rcu_invoke_callback("", head);
+ 	f = head->func;
+ 	WRITE_ONCE(head->func, (rcu_callback_t)0L);
+ 	f(head);
+ 	rcu_lock_release(&rcu_callback_map);
+ 	return false;
+ }
+ 
++>>>>>>> 64d1d06ccb1b (rcu/tiny: support vmalloc in tiny-RCU)
  /* Invoke the RCU callbacks whose grace period has elapsed.  */
  static __latent_entropy void rcu_process_callbacks(struct softirq_action *unused)
  {
* Unmerged path kernel/rcu/tiny.c
