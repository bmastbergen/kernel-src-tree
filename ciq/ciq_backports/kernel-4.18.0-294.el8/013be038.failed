scsi: s390: zfcp_fc: use sg helper to iterate over scatterlist

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit 013be03840c2ba3a2717f9cee457f01fdc4d8436
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/013be038.failed

Unlike the legacy I/O path, scsi-mq preallocates a large array to hold
the scatterlist for each request. This static allocation can consume
substantial amounts of memory on modern controllers which support a
large number of concurrently outstanding requests.

To facilitate a switch to a smaller static allocation combined with a
dynamic allocation for requests that need it, we need to make sure all
SCSI drivers handle chained scatterlists correctly.

Convert remaining drivers that directly dereference the scatterlist
array to using the iterator functions.

[mkp: clarified commit message]

	Cc: Steffen Maier <maier@linux.ibm.com>
	Cc: Benjamin Block <bblock@linux.ibm.com>
	Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
	Cc: linux-s390@vger.kernel.org
	Acked-by: Benjamin Block <bblock@linux.ibm.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 013be03840c2ba3a2717f9cee457f01fdc4d8436)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/scsi/zfcp_fc.c
diff --cc drivers/s390/scsi/zfcp_fc.c
index 5eb7aabe2d8b,b018b61bd168..000000000000
--- a/drivers/s390/scsi/zfcp_fc.c
+++ b/drivers/s390/scsi/zfcp_fc.c
@@@ -610,6 -610,48 +610,51 @@@ void zfcp_fc_test_link(struct zfcp_por
  		put_device(&port->dev);
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * zfcp_fc_sg_free_table - free memory used by scatterlists
+  * @sg: pointer to scatterlist
+  * @count: number of scatterlist which are to be free'ed
+  * the scatterlist are expected to reference pages always
+  */
+ static void zfcp_fc_sg_free_table(struct scatterlist *sg, int count)
+ {
+ 	int i;
+ 
+ 	for (i = 0; i < count; i++, sg = sg_next(sg))
+ 		if (sg)
+ 			free_page((unsigned long) sg_virt(sg));
+ 		else
+ 			break;
+ }
+ 
+ /**
+  * zfcp_fc_sg_setup_table - init scatterlist and allocate, assign buffers
+  * @sg: pointer to struct scatterlist
+  * @count: number of scatterlists which should be assigned with buffers
+  * of size page
+  *
+  * Returns: 0 on success, -ENOMEM otherwise
+  */
+ static int zfcp_fc_sg_setup_table(struct scatterlist *sg, int count)
+ {
+ 	void *addr;
+ 	int i;
+ 
+ 	sg_init_table(sg, count);
+ 	for (i = 0; i < count; i++, sg = sg_next(sg)) {
+ 		addr = (void *) get_zeroed_page(GFP_KERNEL);
+ 		if (!addr) {
+ 			zfcp_fc_sg_free_table(sg, i);
+ 			return -ENOMEM;
+ 		}
+ 		sg_set_buf(sg, addr, PAGE_SIZE);
+ 	}
+ 	return 0;
+ }
+ 
++>>>>>>> 013be03840c2 (scsi: s390: zfcp_fc: use sg helper to iterate over scatterlist)
  static struct zfcp_fc_req *zfcp_fc_alloc_sg_env(int buf_num)
  {
  	struct zfcp_fc_req *fc_req;
* Unmerged path drivers/s390/scsi/zfcp_fc.c
