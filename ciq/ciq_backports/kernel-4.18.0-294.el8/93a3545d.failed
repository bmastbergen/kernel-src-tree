tools/bpftool: Add name mappings for SK_LOOKUP prog and attach type

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jakub Sitnicki <jakub@cloudflare.com>
commit 93a3545d812ae7cfe4426374e00a7d8f64ac02e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/93a3545d.failed

Make bpftool show human-friendly identifiers for newly introduced program
and attach type, BPF_PROG_TYPE_SK_LOOKUP and BPF_SK_LOOKUP, respectively.

Also, add the new prog type bash-completion, man page and help message.

	Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200717103536.397595-14-jakub@cloudflare.com
(cherry picked from commit 93a3545d812ae7cfe4426374e00a7d8f64ac02e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/bpf/bpftool/prog.c
diff --cc tools/bpf/bpftool/prog.c
index 888bad69ace3,3e6ecc6332e2..000000000000
--- a/tools/bpf/bpftool/prog.c
+++ b/tools/bpf/bpftool/prog.c
@@@ -29,6 -29,41 +29,44 @@@
  #include "main.h"
  #include "xlated_dumper.h"
  
++<<<<<<< HEAD
++=======
+ const char * const prog_type_name[] = {
+ 	[BPF_PROG_TYPE_UNSPEC]			= "unspec",
+ 	[BPF_PROG_TYPE_SOCKET_FILTER]		= "socket_filter",
+ 	[BPF_PROG_TYPE_KPROBE]			= "kprobe",
+ 	[BPF_PROG_TYPE_SCHED_CLS]		= "sched_cls",
+ 	[BPF_PROG_TYPE_SCHED_ACT]		= "sched_act",
+ 	[BPF_PROG_TYPE_TRACEPOINT]		= "tracepoint",
+ 	[BPF_PROG_TYPE_XDP]			= "xdp",
+ 	[BPF_PROG_TYPE_PERF_EVENT]		= "perf_event",
+ 	[BPF_PROG_TYPE_CGROUP_SKB]		= "cgroup_skb",
+ 	[BPF_PROG_TYPE_CGROUP_SOCK]		= "cgroup_sock",
+ 	[BPF_PROG_TYPE_LWT_IN]			= "lwt_in",
+ 	[BPF_PROG_TYPE_LWT_OUT]			= "lwt_out",
+ 	[BPF_PROG_TYPE_LWT_XMIT]		= "lwt_xmit",
+ 	[BPF_PROG_TYPE_SOCK_OPS]		= "sock_ops",
+ 	[BPF_PROG_TYPE_SK_SKB]			= "sk_skb",
+ 	[BPF_PROG_TYPE_CGROUP_DEVICE]		= "cgroup_device",
+ 	[BPF_PROG_TYPE_SK_MSG]			= "sk_msg",
+ 	[BPF_PROG_TYPE_RAW_TRACEPOINT]		= "raw_tracepoint",
+ 	[BPF_PROG_TYPE_CGROUP_SOCK_ADDR]	= "cgroup_sock_addr",
+ 	[BPF_PROG_TYPE_LWT_SEG6LOCAL]		= "lwt_seg6local",
+ 	[BPF_PROG_TYPE_LIRC_MODE2]		= "lirc_mode2",
+ 	[BPF_PROG_TYPE_SK_REUSEPORT]		= "sk_reuseport",
+ 	[BPF_PROG_TYPE_FLOW_DISSECTOR]		= "flow_dissector",
+ 	[BPF_PROG_TYPE_CGROUP_SYSCTL]		= "cgroup_sysctl",
+ 	[BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE]	= "raw_tracepoint_writable",
+ 	[BPF_PROG_TYPE_CGROUP_SOCKOPT]		= "cgroup_sockopt",
+ 	[BPF_PROG_TYPE_TRACING]			= "tracing",
+ 	[BPF_PROG_TYPE_STRUCT_OPS]		= "struct_ops",
+ 	[BPF_PROG_TYPE_EXT]			= "ext",
+ 	[BPF_PROG_TYPE_SK_LOOKUP]		= "sk_lookup",
+ };
+ 
+ const size_t prog_type_name_size = ARRAY_SIZE(prog_type_name);
+ 
++>>>>>>> 93a3545d812a (tools/bpftool: Add name mappings for SK_LOOKUP prog and attach type)
  enum dump_mode {
  	DUMP_JITED,
  	DUMP_XLATED,
diff --git a/tools/bpf/bpftool/Documentation/bpftool-prog.rst b/tools/bpf/bpftool/Documentation/bpftool-prog.rst
index 412ea3d9bf7f..82e356b664e8 100644
--- a/tools/bpf/bpftool/Documentation/bpftool-prog.rst
+++ b/tools/bpf/bpftool/Documentation/bpftool-prog.rst
@@ -45,7 +45,7 @@ PROG COMMANDS
 |               **cgroup/getsockname4** | **cgroup/getsockname6** | **cgroup/sendmsg4** | **cgroup/sendmsg6** |
 |		**cgroup/recvmsg4** | **cgroup/recvmsg6** | **cgroup/sysctl** |
 |		**cgroup/getsockopt** | **cgroup/setsockopt** |
-|		**struct_ops** | **fentry** | **fexit** | **freplace**
+|		**struct_ops** | **fentry** | **fexit** | **freplace** | **sk_lookup**
 |	}
 |       *ATTACH_TYPE* := {
 |		**msg_verdict** | **stream_verdict** | **stream_parser** | **flow_dissector**
diff --git a/tools/bpf/bpftool/bash-completion/bpftool b/tools/bpf/bpftool/bash-completion/bpftool
index 25b25aca1112..7b137264ea3a 100644
--- a/tools/bpf/bpftool/bash-completion/bpftool
+++ b/tools/bpf/bpftool/bash-completion/bpftool
@@ -479,7 +479,7 @@ _bpftool()
                                 cgroup/post_bind4 cgroup/post_bind6 \
                                 cgroup/sysctl cgroup/getsockopt \
                                 cgroup/setsockopt struct_ops \
-                                fentry fexit freplace" -- \
+                                fentry fexit freplace sk_lookup" -- \
                                                    "$cur" ) )
                             return 0
                             ;;
diff --git a/tools/bpf/bpftool/common.c b/tools/bpf/bpftool/common.c
index 29f4e7611ae8..9b28c69dd8e4 100644
--- a/tools/bpf/bpftool/common.c
+++ b/tools/bpf/bpftool/common.c
@@ -64,6 +64,7 @@ const char * const attach_type_name[__MAX_BPF_ATTACH_TYPE] = {
 	[BPF_TRACE_FEXIT]		= "fexit",
 	[BPF_MODIFY_RETURN]		= "mod_ret",
 	[BPF_LSM_MAC]			= "lsm_mac",
+	[BPF_SK_LOOKUP]			= "sk_lookup",
 };
 
 void p_err(const char *fmt, ...)
* Unmerged path tools/bpf/bpftool/prog.c
