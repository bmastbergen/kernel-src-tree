arm64: vdso: Add '-Bsymbolic' to ldflags

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vincenzo Frascino <vincenzo.frascino@arm.com>
commit 86b8783701246a22a734824674cc3f87a5ed9f13
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/86b87837.failed

Commit 28b1a824a4f44 ("arm64: vdso: Substitute gettimeofday() with C
implementation") introduced an unused 'VDSO_LDFLAGS' variable to the
vdso Makefile, suggesting that we should be passing '-Bsymbolic' to the
linker, as we do when linking the compat vDSO.

Although it's not strictly necessary to pass this flag, it would be
required if we were to add any internal references to the exported
symbols. It's also consistent with how we link the compat vdso so, since
there's no real downside from passing it, add '-Bsymbolic' to the ldflags
for the native vDSO.

Fixes: 28b1a824a4f44 ("arm64: vdso: Substitute gettimeofday() with C implementation")
	Reported-by: Geoff Levand <geoff@infradead.org>
	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Ard Biesheuvel <ardb@kernel.org>
Link: https://lore.kernel.org/r/20200428150854.33130-1-vincenzo.frascino@arm.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 86b8783701246a22a734824674cc3f87a5ed9f13)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/vdso/Makefile
diff --cc arch/arm64/kernel/vdso/Makefile
index fa230ff09aa1,abf61c96edbc..000000000000
--- a/arch/arm64/kernel/vdso/Makefile
+++ b/arch/arm64/kernel/vdso/Makefile
@@@ -12,9 -17,36 +12,39 @@@ obj-vdso := gettimeofday.o note.o sigre
  targets := $(obj-vdso) vdso.so vdso.so.dbg
  obj-vdso := $(addprefix $(obj)/, $(obj-vdso))
  
+ # -Bsymbolic has been added for consistency with arm, the compat vDSO and
+ # potential future proofing if we end up with internal calls to the exported
+ # routines, as x86 does (see 6f121e548f83 ("x86, vdso: Reimplement vdso.so
+ # preparation in build-time C")).
  ldflags-y := -shared -nostdlib -soname=linux-vdso.so.1 --hash-style=sysv \
- 		--build-id -n -T
+ 		-Bsymbolic --build-id -n -T
  
++<<<<<<< HEAD
++=======
+ ccflags-y := -fno-common -fno-builtin -fno-stack-protector -ffixed-x18
+ ccflags-y += -DDISABLE_BRANCH_PROFILING
+ 
+ CFLAGS_REMOVE_vgettimeofday.o = $(CC_FLAGS_FTRACE) -Os
+ KBUILD_CFLAGS			+= $(DISABLE_LTO)
+ KASAN_SANITIZE			:= n
+ UBSAN_SANITIZE			:= n
+ OBJECT_FILES_NON_STANDARD	:= y
+ KCOV_INSTRUMENT			:= n
+ 
+ CFLAGS_vgettimeofday.o = -O2 -mcmodel=tiny
+ 
+ ifneq ($(c-gettimeofday-y),)
+   CFLAGS_vgettimeofday.o += -include $(c-gettimeofday-y)
+ endif
+ 
+ # Clang versions less than 8 do not support -mcmodel=tiny
+ ifeq ($(CONFIG_CC_IS_CLANG), y)
+   ifeq ($(shell test $(CONFIG_CLANG_VERSION) -lt 80000; echo $$?),0)
+     CFLAGS_REMOVE_vgettimeofday.o += -mcmodel=tiny
+   endif
+ endif
+ 
++>>>>>>> 86b878370124 (arm64: vdso: Add '-Bsymbolic' to ldflags)
  # Disable gcov profiling for VDSO code
  GCOV_PROFILE := n
  
* Unmerged path arch/arm64/kernel/vdso/Makefile
