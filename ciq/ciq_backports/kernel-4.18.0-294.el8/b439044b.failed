s390/qeth: remove redundant if-clause in RX poll code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Julian Wiedmann <jwi@linux.ibm.com>
commit b439044b70e4b7992f82974eb77d92c95da5960f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b439044b.failed

Whenever all completed RX buffers have been processed
(ie. rx->b_count == 0), we call down to the HW layer to scan for
additional buffers. If no further buffers are available, the code
breaks out of the while-loop.

So we never reach the 'process an RX buffer' step with rx->b_count == 0,
eliminate that check and one level of indentation.

	Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b439044b70e4b7992f82974eb77d92c95da5960f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_core_main.c
diff --cc drivers/s390/net/qeth_core_main.c
index 7c95b272c820,13facf2d602b..000000000000
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@@ -5285,26 -5505,42 +5285,35 @@@ walk_packet
  	if (!skb)
  		goto next_packet;
  
 -	*element_no = element - &buffer->element[0];
 +	*__element = element;
  	*__offset = offset;
 -
 -	qeth_receive_skb(card, skb, hdr, uses_frags);
 -	return 0;
 -}
 -
 -static unsigned int qeth_extract_skbs(struct qeth_card *card, int budget,
 -				      struct qeth_qdio_buffer *buf, bool *done)
 -{
 -	unsigned int work_done = 0;
 -
 -	while (budget) {
 -		if (qeth_extract_skb(card, buf, &card->rx.buf_element,
 -				     &card->rx.e_offset)) {
 -			*done = true;
 -			break;
 -		}
 -
 -		work_done++;
 -		budget--;
 +	if (use_rx_sg) {
 +		QETH_CARD_STAT_INC(card, rx_sg_skbs);
 +		QETH_CARD_STAT_ADD(card, rx_sg_frags,
 +				   skb_shinfo(skb)->nr_frags);
  	}
 -
 -	return work_done;
 +	return skb;
  }
 +EXPORT_SYMBOL_GPL(qeth_core_get_next_skb);
  
 -static unsigned int qeth_rx_poll(struct qeth_card *card, int budget)
 +int qeth_poll(struct napi_struct *napi, int budget)
  {
 -	unsigned int work_done = 0;
 +	struct qeth_card *card = container_of(napi, struct qeth_card, napi);
 +	int work_done = 0;
 +	struct qeth_qdio_buffer *buffer;
 +	int done;
 +	int new_budget = budget;
  
++<<<<<<< HEAD
 +	while (1) {
++=======
+ 	while (budget > 0) {
+ 		struct qeth_qdio_buffer *buffer;
+ 		unsigned int skbs_done = 0;
+ 		bool done = false;
+ 
+ 		/* Fetch completed RX buffers: */
++>>>>>>> b439044b70e4 (s390/qeth: remove redundant if-clause in RX poll code)
  		if (!card->rx.b_count) {
  			card->rx.qdio_err = 0;
  			card->rx.b_count = qdio_get_next_buffers(
@@@ -5314,44 -5550,31 +5323,70 @@@
  				card->rx.b_count = 0;
  				break;
  			}
 +			card->rx.b_element =
 +				&card->qdio.in_q->bufs[card->rx.b_index]
 +				.buffer->element[0];
 +			card->rx.e_offset = 0;
  		}
  
++<<<<<<< HEAD
 +		while (card->rx.b_count) {
 +			buffer = &card->qdio.in_q->bufs[card->rx.b_index];
 +			if (!(card->rx.qdio_err &&
 +			    qeth_check_qdio_errors(card, buffer->buffer,
 +			    card->rx.qdio_err, "qinerr")))
 +				work_done +=
 +					card->discipline->process_rx_buffer(
 +						card, new_budget, &done);
 +			else
 +				done = 1;
 +
 +			if (done) {
 +				QETH_CARD_STAT_INC(card, rx_bufs);
 +				qeth_put_buffer_pool_entry(card,
 +					buffer->pool_entry);
 +				qeth_queue_input_buffer(card, card->rx.b_index);
 +				card->rx.b_count--;
 +				if (card->rx.b_count) {
 +					card->rx.b_index =
 +						QDIO_BUFNR(card->rx.b_index + 1);
 +					card->rx.b_element =
 +						&card->qdio.in_q
 +						->bufs[card->rx.b_index]
 +						.buffer->element[0];
 +					card->rx.e_offset = 0;
 +				}
 +			}
 +
 +			if (work_done >= budget)
 +				goto out;
 +			else
 +				new_budget = budget - work_done;
++=======
+ 		/* Process one completed RX buffer: */
+ 		buffer = &card->qdio.in_q->bufs[card->rx.b_index];
+ 		if (!(card->rx.qdio_err &&
+ 		      qeth_check_qdio_errors(card, buffer->buffer,
+ 					     card->rx.qdio_err, "qinerr")))
+ 			skbs_done = qeth_extract_skbs(card, budget, buffer,
+ 						      &done);
+ 		else
+ 			done = true;
+ 
+ 		work_done += skbs_done;
+ 		budget -= skbs_done;
+ 
+ 		if (done) {
+ 			QETH_CARD_STAT_INC(card, rx_bufs);
+ 			qeth_put_buffer_pool_entry(card, buffer->pool_entry);
+ 			qeth_queue_input_buffer(card, card->rx.b_index);
+ 			card->rx.b_count--;
+ 
+ 			/* Step forward to next buffer: */
+ 			card->rx.b_index = QDIO_BUFNR(card->rx.b_index + 1);
+ 			card->rx.buf_element = 0;
+ 			card->rx.e_offset = 0;
++>>>>>>> b439044b70e4 (s390/qeth: remove redundant if-clause in RX poll code)
  		}
  	}
  
* Unmerged path drivers/s390/net/qeth_core_main.c
