KVM: Check the allocation of pv cpu mask

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Haiwei Li <lihaiwei@tencent.com>
commit 0f990222108d214a0924d920e6095b58107d7b59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/0f990222.failed

check the allocation of per-cpu __pv_cpu_mask. Initialize ops only when
successful.

	Signed-off-by: Haiwei Li <lihaiwei@tencent.com>
Message-Id: <d59f05df-e6d3-3d31-a036-cc25a2b2f33f@gmail.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 0f990222108d214a0924d920e6095b58107d7b59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/kvm.c
diff --cc arch/x86/kernel/kvm.c
index 9b0b1b406854,9e7dd3a96873..000000000000
--- a/arch/x86/kernel/kvm.c
+++ b/arch/x86/kernel/kvm.c
@@@ -655,8 -654,7 +655,12 @@@ static void __init kvm_guest_init(void
  	}
  
  	if (pv_tlb_flush_supported()) {
++<<<<<<< HEAD
 +		pv_mmu_ops.flush_tlb_others = kvm_flush_tlb_others;
 +		pv_mmu_ops.tlb_remove_table = tlb_remove_table;
++=======
+ 		pv_ops.mmu.tlb_remove_table = tlb_remove_table;
++>>>>>>> 0f990222108d (KVM: Check the allocation of pv cpu mask)
  		pr_info("KVM setup pv remote TLB flush\n");
  	}
  
* Unmerged path arch/x86/kernel/kvm.c
