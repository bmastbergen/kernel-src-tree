x86/sev-es: Print SEV-ES info into the kernel log

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] sev-es: Print SEV-ES info into the kernel log (Vitaly Kuznetsov) [1868080]
Rebuild_FUZZ: 95.74%
commit-author Joerg Roedel <jroedel@suse.de>
commit c685eb0c12b4d4816d22ee734e91f4005b152fcd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/c685eb0c.failed

Refactor the message printed to the kernel log which indicates whether
SEV or SME, etc is active. This will scale better in the future when
more memory encryption features might be added. Also add SEV-ES to the
list of features.

 [ bp: Massage. ]

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Kees Cook <keescook@chromium.org>
Link: https://lkml.kernel.org/r/20200907131613.12703-38-joro@8bytes.org
(cherry picked from commit c685eb0c12b4d4816d22ee734e91f4005b152fcd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/mm/mem_encrypt.c
diff --cc arch/x86/mm/mem_encrypt.c
index 0d3e133cbb17,ebb7edc8bc0a..000000000000
--- a/arch/x86/mm/mem_encrypt.c
+++ b/arch/x86/mm/mem_encrypt.c
@@@ -412,6 -407,32 +412,35 @@@ void __init mem_encrypt_free_decrypted_
  	free_init_pages("unused decrypted", vaddr, vaddr_end);
  }
  
++<<<<<<< HEAD
++=======
+ static void print_mem_encrypt_feature_info(void)
+ {
+ 	pr_info("AMD Memory Encryption Features active:");
+ 
+ 	/* Secure Memory Encryption */
+ 	if (sme_active()) {
+ 		/*
+ 		 * SME is mutually exclusive with any of the SEV
+ 		 * features below.
+ 		 */
+ 		pr_cont(" SME\n");
+ 		return;
+ 	}
+ 
+ 	/* Secure Encrypted Virtualization */
+ 	if (sev_active())
+ 		pr_cont(" SEV");
+ 
+ 	/* Encrypted Register State */
+ 	if (sev_es_active())
+ 		pr_cont(" SEV-ES");
+ 
+ 	pr_cont("\n");
+ }
+ 
+ /* Architecture __weak replacement functions */
++>>>>>>> c685eb0c12b4 (x86/sev-es: Print SEV-ES info into the kernel log)
  void __init mem_encrypt_init(void)
  {
  	if (!sme_me_mask)
* Unmerged path arch/x86/mm/mem_encrypt.c
