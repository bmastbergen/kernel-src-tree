kasan: Fix required compiler version

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Marco Elver <elver@google.com>
commit acf7b0bf7dcf5a96d9b44a0997227c7210d995c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/acf7b0bf.failed

The first working GCC version to satisfy
CC_HAS_WORKING_NOSANITIZE_ADDRESS is GCC 8.3.0.

Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89124
	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
	Signed-off-by: Marco Elver <elver@google.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lkml.kernel.org/r/20200623112448.GA208112@elver.google.com
(cherry picked from commit acf7b0bf7dcf5a96d9b44a0997227c7210d995c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/Kconfig.kasan
diff --cc lib/Kconfig.kasan
index d0bad1bd9a2b,34b84bcbd3d9..000000000000
--- a/lib/Kconfig.kasan
+++ b/lib/Kconfig.kasan
@@@ -1,10 -1,49 +1,27 @@@
  config HAVE_ARCH_KASAN
  	bool
  
++<<<<<<< HEAD
 +if HAVE_ARCH_KASAN
++=======
+ config HAVE_ARCH_KASAN_SW_TAGS
+ 	bool
+ 
+ config	HAVE_ARCH_KASAN_VMALLOC
+ 	bool
+ 
+ config CC_HAS_KASAN_GENERIC
+ 	def_bool $(cc-option, -fsanitize=kernel-address)
+ 
+ config CC_HAS_KASAN_SW_TAGS
+ 	def_bool $(cc-option, -fsanitize=kernel-hwaddress)
+ 
+ config CC_HAS_WORKING_NOSANITIZE_ADDRESS
+ 	def_bool !CC_IS_GCC || GCC_VERSION >= 80300
++>>>>>>> acf7b0bf7dcf (kasan: Fix required compiler version)
  
  config KASAN
 -	bool "KASAN: runtime memory debugger"
 -	depends on (HAVE_ARCH_KASAN && CC_HAS_KASAN_GENERIC) || \
 -		   (HAVE_ARCH_KASAN_SW_TAGS && CC_HAS_KASAN_SW_TAGS)
 -	depends on (SLUB && SYSFS) || (SLAB && !DEBUG_SLAB)
 -	depends on CC_HAS_WORKING_NOSANITIZE_ADDRESS
 -	help
 -	  Enables KASAN (KernelAddressSANitizer) - runtime memory debugger,
 -	  designed to find out-of-bounds accesses and use-after-free bugs.
 -	  See Documentation/dev-tools/kasan.rst for details.
 -
 -choice
 -	prompt "KASAN mode"
 -	depends on KASAN
 -	default KASAN_GENERIC
 -	help
 -	  KASAN has two modes: generic KASAN (similar to userspace ASan,
 -	  x86_64/arm64/xtensa, enabled with CONFIG_KASAN_GENERIC) and
 -	  software tag-based KASAN (a version based on software memory
 -	  tagging, arm64 only, similar to userspace HWASan, enabled with
 -	  CONFIG_KASAN_SW_TAGS).
 -	  Both generic and tag-based KASAN are strictly debugging features.
 -
 -config KASAN_GENERIC
 -	bool "Generic mode"
 -	depends on HAVE_ARCH_KASAN && CC_HAS_KASAN_GENERIC
 +	bool "KASan: runtime memory debugger"
  	depends on (SLUB && SYSFS) || (SLAB && !DEBUG_SLAB)
  	select SLUB_DEBUG if SLUB
  	select CONSTRUCTORS
* Unmerged path lib/Kconfig.kasan
