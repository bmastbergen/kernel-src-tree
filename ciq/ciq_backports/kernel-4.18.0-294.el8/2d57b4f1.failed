net-sysfs: take the rtnl lock when storing xps_rxqs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Antoine Tenart <atenart@kernel.org>
commit 2d57b4f142e0b03e854612b8e28978935414bced
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2d57b4f1.failed

Two race conditions can be triggered when storing xps rxqs, resulting in
various oops and invalid memory accesses:

1. Calling netdev_set_num_tc while netif_set_xps_queue:

   - netif_set_xps_queue uses dev->tc_num as one of the parameters to
     compute the size of new_dev_maps when allocating it. dev->tc_num is
     also used to access the map, and the compiler may generate code to
     retrieve this field multiple times in the function.

   - netdev_set_num_tc sets dev->tc_num.

   If new_dev_maps is allocated using dev->tc_num and then dev->tc_num
   is set to a higher value through netdev_set_num_tc, later accesses to
   new_dev_maps in netif_set_xps_queue could lead to accessing memory
   outside of new_dev_maps; triggering an oops.

2. Calling netif_set_xps_queue while netdev_set_num_tc is running:

   2.1. netdev_set_num_tc starts by resetting the xps queues,
        dev->tc_num isn't updated yet.

   2.2. netif_set_xps_queue is called, setting up the map with the
        *old* dev->num_tc.

   2.3. netdev_set_num_tc updates dev->tc_num.

   2.4. Later accesses to the map lead to out of bound accesses and
        oops.

   A similar issue can be found with netdev_reset_tc.

One way of triggering this is to set an iface up (for which the driver
uses netdev_set_num_tc in the open path, such as bnx2x) and writing to
xps_rxqs in a concurrent thread. With the right timing an oops is
triggered.

Both issues have the same fix: netif_set_xps_queue, netdev_set_num_tc
and netdev_reset_tc should be mutually exclusive. We do that by taking
the rtnl lock in xps_rxqs_store.

Fixes: 8af2c06ff4b1 ("net-sysfs: Add interface for Rx queue(s) map per Tx queue")
	Signed-off-by: Antoine Tenart <atenart@kernel.org>
	Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 2d57b4f142e0b03e854612b8e28978935414bced)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/net-sysfs.c
diff --cc net/core/net-sysfs.c
index 24e8d9a116b2,62ca2f2c0ee6..000000000000
--- a/net/core/net-sysfs.c
+++ b/net/core/net-sysfs.c
@@@ -1419,7 -1508,9 +1424,13 @@@ static ssize_t xps_rxqs_store(struct ne
  	err = __netif_set_xps_queue(dev, mask, index, true);
  	cpus_read_unlock();
  
++<<<<<<< HEAD
 +	kfree(mask);
++=======
+ 	rtnl_unlock();
+ 
+ 	bitmap_free(mask);
++>>>>>>> 2d57b4f142e0 (net-sysfs: take the rtnl lock when storing xps_rxqs)
  	return err ? : len;
  }
  
* Unmerged path net/core/net-sysfs.c
