arm64: asm-offsets: remove unused offsets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Andrew Murray <andrew.murray@arm.com>
commit 83a680dd97ad2d1ed7a6355aa5baddbc0c8ae2ae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/83a680dd.failed

There are a number of offsets defined in asm-offsets.c which no longer
have any users. Let's clean this up by removing them.

All the remaining offsets are in use.

	Acked-by: Mark Rutland <mark.rutland@arm.com>
	Signed-off-by: Andrew Murray <andrew.murray@arm.com>
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit 83a680dd97ad2d1ed7a6355aa5baddbc0c8ae2ae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/asm-offsets.c
diff --cc arch/arm64/kernel/asm-offsets.c
index 56cdbd132e2a,0552b91d7666..000000000000
--- a/arch/arm64/kernel/asm-offsets.c
+++ b/arch/arm64/kernel/asm-offsets.c
@@@ -73,15 -69,10 +69,11 @@@ int main(void
    DEFINE(S_X28,			offsetof(struct pt_regs, regs[28]));
    DEFINE(S_LR,			offsetof(struct pt_regs, regs[30]));
    DEFINE(S_SP,			offsetof(struct pt_regs, sp));
- #ifdef CONFIG_COMPAT
-   DEFINE(S_COMPAT_SP,		offsetof(struct pt_regs, compat_sp));
- #endif
    DEFINE(S_PSTATE,		offsetof(struct pt_regs, pstate));
    DEFINE(S_PC,			offsetof(struct pt_regs, pc));
-   DEFINE(S_ORIG_X0,		offsetof(struct pt_regs, orig_x0));
    DEFINE(S_SYSCALLNO,		offsetof(struct pt_regs, syscallno));
    DEFINE(S_ORIG_ADDR_LIMIT,	offsetof(struct pt_regs, orig_addr_limit));
 +  DEFINE(S_PMR_SAVE,		offsetof(struct pt_regs, pmr_save));
    DEFINE(S_STACKFRAME,		offsetof(struct pt_regs, stackframe));
    DEFINE(S_FRAME_SIZE,		sizeof(struct pt_regs));
    BLANK();
@@@ -141,21 -124,11 +125,23 @@@
    DEFINE(VCPU_CONTEXT,		offsetof(struct kvm_vcpu, arch.ctxt));
    DEFINE(VCPU_FAULT_DISR,	offsetof(struct kvm_vcpu, arch.fault.disr_el1));
    DEFINE(VCPU_WORKAROUND_FLAGS,	offsetof(struct kvm_vcpu, arch.workaround_flags));
 +  DEFINE(VCPU_HCR_EL2,		offsetof(struct kvm_vcpu, arch.hcr_el2));
    DEFINE(CPU_GP_REGS,		offsetof(struct kvm_cpu_context, gp_regs));
 +  DEFINE(CPU_APIAKEYLO_EL1,	offsetof(struct kvm_cpu_context, sys_regs[APIAKEYLO_EL1]));
 +  DEFINE(CPU_APIBKEYLO_EL1,	offsetof(struct kvm_cpu_context, sys_regs[APIBKEYLO_EL1]));
 +  DEFINE(CPU_APDAKEYLO_EL1,	offsetof(struct kvm_cpu_context, sys_regs[APDAKEYLO_EL1]));
 +  DEFINE(CPU_APDBKEYLO_EL1,	offsetof(struct kvm_cpu_context, sys_regs[APDBKEYLO_EL1]));
 +  DEFINE(CPU_APGAKEYLO_EL1,	offsetof(struct kvm_cpu_context, sys_regs[APGAKEYLO_EL1]));
    DEFINE(CPU_USER_PT_REGS,	offsetof(struct kvm_regs, regs));
++<<<<<<< HEAD
 +  DEFINE(CPU_FP_REGS,		offsetof(struct kvm_regs, fp_regs));
 +  DEFINE(VCPU_FPEXC32_EL2,	offsetof(struct kvm_vcpu, arch.ctxt.sys_regs[FPEXC32_EL2]));
++=======
++>>>>>>> 83a680dd97ad (arm64: asm-offsets: remove unused offsets)
    DEFINE(HOST_CONTEXT_VCPU,	offsetof(struct kvm_cpu_context, __hyp_running_vcpu));
 +  DEFINE(HOST_DATA_CONTEXT,	offsetof(struct kvm_host_data, host_ctxt));
  #endif
  #ifdef CONFIG_CPU_PM
-   DEFINE(CPU_SUSPEND_SZ,	sizeof(struct cpu_suspend_ctx));
    DEFINE(CPU_CTX_SP,		offsetof(struct cpu_suspend_ctx, sp));
    DEFINE(MPIDR_HASH_MASK,	offsetof(struct mpidr_hash, mask));
    DEFINE(MPIDR_HASH_SHIFTS,	offsetof(struct mpidr_hash, shift_aff));
* Unmerged path arch/arm64/kernel/asm-offsets.c
