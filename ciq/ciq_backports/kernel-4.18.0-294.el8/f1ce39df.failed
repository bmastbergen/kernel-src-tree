lib/test_printf: Add tests for %pfw printk modifier

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [lib] lib/test_printf: Add tests for pfw printk modifier (Torez Smith) [1900751 1856683 1838295 1837563 1783493]
Rebuild_FUZZ: 99.01%
commit-author Sakari Ailus <sakari.ailus@linux.intel.com>
commit f1ce39df508de4a4abd83daa3e589ccea46b1480
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/f1ce39df.failed

Add a test for the %pfw printk modifier using software nodes.

	Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Reviewed-by: Petr Mladek <pmladek@suse.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit f1ce39df508de4a4abd83daa3e589ccea46b1480)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/test_printf.c
diff --cc lib/test_printf.c
index 74b678036192,422b847db424..000000000000
--- a/lib/test_printf.c
+++ b/lib/test_printf.c
@@@ -588,26 -595,35 +590,55 @@@ flags(void
  	kfree(cmp_buffer);
  }
  
+ static void __init fwnode_pointer(void)
+ {
+ 	const struct software_node softnodes[] = {
+ 		{ .name = "first", },
+ 		{ .name = "second", .parent = &softnodes[0], },
+ 		{ .name = "third", .parent = &softnodes[1], },
+ 		{ NULL /* Guardian */ }
+ 	};
+ 	const char * const full_name = "first/second/third";
+ 	const char * const full_name_second = "first/second";
+ 	const char * const second_name = "second";
+ 	const char * const third_name = "third";
+ 	int rval;
+ 
+ 	rval = software_node_register_nodes(softnodes);
+ 	if (rval) {
+ 		pr_warn("cannot register softnodes; rval %d\n", rval);
+ 		return;
+ 	}
+ 
+ 	test(full_name_second, "%pfw", software_node_fwnode(&softnodes[1]));
+ 	test(full_name, "%pfw", software_node_fwnode(&softnodes[2]));
+ 	test(full_name, "%pfwf", software_node_fwnode(&softnodes[2]));
+ 	test(second_name, "%pfwP", software_node_fwnode(&softnodes[1]));
+ 	test(third_name, "%pfwP", software_node_fwnode(&softnodes[2]));
+ 
+ 	software_node_unregister_nodes(softnodes);
+ }
+ 
 +static void __init
 +errptr(void)
 +{
 +	test("-1234", "%pe", ERR_PTR(-1234));
 +
 +	/* Check that %pe with a non-ERR_PTR gets treated as ordinary %p. */
 +	BUILD_BUG_ON(IS_ERR(PTR));
 +	test_hashed("%pe", PTR);
 +
 +#ifdef CONFIG_SYMBOLIC_ERRNAME
 +	test("(-ENOTSOCK)", "(%pe)", ERR_PTR(-ENOTSOCK));
 +	test("(-EAGAIN)", "(%pe)", ERR_PTR(-EAGAIN));
 +	BUILD_BUG_ON(EAGAIN != EWOULDBLOCK);
 +	test("(-EAGAIN)", "(%pe)", ERR_PTR(-EWOULDBLOCK));
 +	test("[-EIO    ]", "[%-8pe]", ERR_PTR(-EIO));
 +	test("[    -EIO]", "[%8pe]", ERR_PTR(-EIO));
 +	test("-EPROBE_DEFER", "%pe", ERR_PTR(-EPROBE_DEFER));
 +#endif
 +}
 +
  static void __init
  test_pointer(void)
  {
@@@ -630,7 -646,7 +661,11 @@@
  	bitmap();
  	netdev_features();
  	flags();
++<<<<<<< HEAD
 +	errptr();
++=======
+ 	fwnode_pointer();
++>>>>>>> f1ce39df508d (lib/test_printf: Add tests for %pfw printk modifier)
  }
  
  static void __init selftest(void)
* Unmerged path lib/test_printf.c
