iommu/vt-d: Change flags type to unsigned int in binding mm

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Fenghua Yu <fenghua.yu@intel.com>
commit 2a5054c6e7b16906984ac36a7363ca46b8d99ade
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2a5054c6.failed

"flags" passed to intel_svm_bind_mm() is a bit mask and should be
defined as "unsigned int" instead of "int".

Change its type to "unsigned int".

	Suggested-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Tony Luck <tony.luck@intel.com>
	Reviewed-by: Lu Baolu <baolu.lu@linux.intel.com>
	Acked-by: Joerg Roedel <jroedel@suse.de>
Link: https://lkml.kernel.org/r/1600187413-163670-3-git-send-email-fenghua.yu@intel.com
(cherry picked from commit 2a5054c6e7b16906984ac36a7363ca46b8d99ade)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/intel-iommu.h
diff --cc include/linux/intel-iommu.h
index 60d2b8b208aa,9c3e8337442a..000000000000
--- a/include/linux/intel-iommu.h
+++ b/include/linux/intel-iommu.h
@@@ -750,8 -765,8 +750,13 @@@ struct intel_svm 
  	struct mm_struct *mm;
  
  	struct intel_iommu *iommu;
++<<<<<<< HEAD
 +	int flags;
 +	int pasid;
++=======
+ 	unsigned int flags;
+ 	u32 pasid;
++>>>>>>> 2a5054c6e7b1 (iommu/vt-d: Change flags type to unsigned int in binding mm)
  	int gpasid; /* In case that guest PASID is different from host PASID */
  	struct list_head devs;
  	struct list_head list;
diff --git a/drivers/iommu/intel-svm.c b/drivers/iommu/intel-svm.c
index 969ee9183c39..903b42b742e8 100644
--- a/drivers/iommu/intel-svm.c
+++ b/drivers/iommu/intel-svm.c
@@ -460,7 +460,8 @@ int intel_svm_unbind_gpasid(struct device *dev, int pasid)
 
 /* Caller must hold pasid_mutex, mm reference */
 static int
-intel_svm_bind_mm(struct device *dev, int flags, struct svm_dev_ops *ops,
+intel_svm_bind_mm(struct device *dev, unsigned int flags,
+		  struct svm_dev_ops *ops,
 		  struct mm_struct *mm, struct intel_svm_dev **sd)
 {
 	struct intel_iommu *iommu = device_to_iommu(dev, NULL, NULL);
@@ -979,7 +980,7 @@ intel_svm_bind(struct device *dev, struct mm_struct *mm, void *drvdata)
 {
 	struct iommu_sva *sva = ERR_PTR(-EINVAL);
 	struct intel_svm_dev *sdev = NULL;
-	int flags = 0;
+	unsigned int flags = 0;
 	int ret;
 
 	/*
@@ -988,7 +989,7 @@ intel_svm_bind(struct device *dev, struct mm_struct *mm, void *drvdata)
 	 * and intel_svm etc.
 	 */
 	if (drvdata)
-		flags = *(int *)drvdata;
+		flags = *(unsigned int *)drvdata;
 	mutex_lock(&pasid_mutex);
 	ret = intel_svm_bind_mm(dev, flags, NULL, mm, &sdev);
 	if (ret)
* Unmerged path include/linux/intel-iommu.h
