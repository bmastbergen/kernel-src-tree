net: stmmac: xgmac: Add TBS support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jose Abreu <Jose.Abreu@synopsys.com>
commit 6a549b9f0dcd9a73991077da64eb3603b3e5f681
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/6a549b9f.failed

Adds all the necessary HW hooks to support TBS feature in XGMAC cores.

Changes from v1:
- Remove unneeded LT shift as the IP already does this.

	Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 6a549b9f0dcd9a73991077da64eb3603b3e5f681)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/stmicro/stmmac/dwxgmac2.h
#	drivers/net/ethernet/stmicro/stmmac/dwxgmac2_dma.c
diff --cc drivers/net/ethernet/stmicro/stmmac/dwxgmac2.h
index 0c36cd172685,6c3b8a950f58..000000000000
--- a/drivers/net/ethernet/stmicro/stmmac/dwxgmac2.h
+++ b/drivers/net/ethernet/stmicro/stmmac/dwxgmac2.h
@@@ -133,6 -139,11 +133,14 @@@
  #define XGMAC_HWFEAT_TXQCNT		GENMASK(9, 6)
  #define XGMAC_HWFEAT_RXQCNT		GENMASK(3, 0)
  #define XGMAC_HW_FEATURE3		0x00000128
++<<<<<<< HEAD
++=======
+ #define XGMAC_HWFEAT_TBSSEL		BIT(27)
+ #define XGMAC_HWFEAT_FPESEL		BIT(26)
+ #define XGMAC_HWFEAT_ESTWID		GENMASK(24, 23)
+ #define XGMAC_HWFEAT_ESTDEP		GENMASK(22, 20)
+ #define XGMAC_HWFEAT_ESTSEL		BIT(19)
++>>>>>>> 6a549b9f0dcd (net: stmmac: xgmac: Add TBS support)
  #define XGMAC_HWFEAT_ASP		GENMASK(15, 14)
  #define XGMAC_HWFEAT_DVLAN		BIT(13)
  #define XGMAC_HWFEAT_FRPES		GENMASK(12, 11)
diff --cc drivers/net/ethernet/stmicro/stmmac/dwxgmac2_dma.c
index 2717ae2429aa,77308c5c5d29..000000000000
--- a/drivers/net/ethernet/stmicro/stmmac/dwxgmac2_dma.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwxgmac2_dma.c
@@@ -426,6 -429,11 +426,14 @@@ static void dwxgmac2_get_hw_feature(voi
  
  	/* MAC HW feature 3 */
  	hw_cap = readl(ioaddr + XGMAC_HW_FEATURE3);
++<<<<<<< HEAD
++=======
+ 	dma_cap->tbssel = (hw_cap & XGMAC_HWFEAT_TBSSEL) >> 27;
+ 	dma_cap->fpesel = (hw_cap & XGMAC_HWFEAT_FPESEL) >> 26;
+ 	dma_cap->estwid = (hw_cap & XGMAC_HWFEAT_ESTWID) >> 23;
+ 	dma_cap->estdep = (hw_cap & XGMAC_HWFEAT_ESTDEP) >> 20;
+ 	dma_cap->estsel = (hw_cap & XGMAC_HWFEAT_ESTSEL) >> 19;
++>>>>>>> 6a549b9f0dcd (net: stmmac: xgmac: Add TBS support)
  	dma_cap->asp = (hw_cap & XGMAC_HWFEAT_ASP) >> 14;
  	dma_cap->dvlan = (hw_cap & XGMAC_HWFEAT_DVLAN) >> 13;
  	dma_cap->frpes = (hw_cap & XGMAC_HWFEAT_FRPES) >> 11;
* Unmerged path drivers/net/ethernet/stmicro/stmmac/dwxgmac2.h
diff --git a/drivers/net/ethernet/stmicro/stmmac/dwxgmac2_descs.c b/drivers/net/ethernet/stmicro/stmmac/dwxgmac2_descs.c
index bd5838ce1e8a..c3d654cfa9ef 100644
--- a/drivers/net/ethernet/stmicro/stmmac/dwxgmac2_descs.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwxgmac2_descs.c
@@ -339,6 +339,14 @@ static void dwxgmac2_set_vlan(struct dma_desc *p, u32 type)
 	p->des2 |= cpu_to_le32(type & XGMAC_TDES2_VTIR);
 }
 
+static void dwxgmac2_set_tbs(struct dma_edesc *p, u32 sec, u32 nsec)
+{
+	p->des4 = cpu_to_le32((sec & XGMAC_TDES0_LT) | XGMAC_TDES0_LTV);
+	p->des5 = cpu_to_le32(nsec & XGMAC_TDES1_LT);
+	p->des6 = 0;
+	p->des7 = 0;
+}
+
 const struct stmmac_desc_ops dwxgmac210_desc_ops = {
 	.tx_status = dwxgmac2_get_tx_status,
 	.rx_status = dwxgmac2_get_rx_status,
@@ -368,4 +376,5 @@ const struct stmmac_desc_ops dwxgmac210_desc_ops = {
 	.set_sarc = dwxgmac2_set_sarc,
 	.set_vlan_tag = dwxgmac2_set_vlan_tag,
 	.set_vlan = dwxgmac2_set_vlan,
+	.set_tbs = dwxgmac2_set_tbs,
 };
* Unmerged path drivers/net/ethernet/stmicro/stmmac/dwxgmac2_dma.c
