iommu/io-pgtable-arm: Fix IOVA validation for 32-bit

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Robin Murphy <robin.murphy@arm.com>
commit 08090744f2dbba6b10d38fb17443c81f66798ca0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/08090744.failed

Since we ony support the TTB1 quirk for AArch64 contexts, and
consequently only for 64-bit builds, the sign-extension aspect of the
"are all bits above IAS consistent?" check should implicitly only apply
to 64-bit IOVAs. Change the type of the cast to ensure that 32-bit longs
don't inadvertently get sign-extended, and thus considered invalid, if
they happen to be above 2GB in the TTB0 region.

	Reported-by: Stephan Gerhold <stephan@gerhold.net>
	Signed-off-by: Robin Murphy <robin.murphy@arm.com>
	Acked-by: Acked-by: Will Deacon <will@kernel.org>
Fixes: db6903010aa5 ("iommu/io-pgtable-arm: Prepare for TTBR1 usage")
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 08090744f2dbba6b10d38fb17443c81f66798ca0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/io-pgtable-arm.c
diff --cc drivers/iommu/io-pgtable-arm.c
index c5503d730284,04fbd4bf0ff9..000000000000
--- a/drivers/iommu/io-pgtable-arm.c
+++ b/drivers/iommu/io-pgtable-arm.c
@@@ -485,6 -468,7 +485,10 @@@ static int arm_lpae_map(struct io_pgtab
  	arm_lpae_iopte *ptep = data->pgd;
  	int ret, lvl = data->start_level;
  	arm_lpae_iopte prot;
++<<<<<<< HEAD
++=======
+ 	long iaext = (s64)iova >> cfg->ias;
++>>>>>>> 08090744f2db (iommu/io-pgtable-arm: Fix IOVA validation for 32-bit)
  
  	/* If no access, then nothing to do */
  	if (!(iommu_prot & (IOMMU_READ | IOMMU_WRITE)))
@@@ -659,6 -645,7 +663,10 @@@ static size_t arm_lpae_unmap(struct io_
  	struct arm_lpae_io_pgtable *data = io_pgtable_ops_to_data(ops);
  	struct io_pgtable_cfg *cfg = &data->iop.cfg;
  	arm_lpae_iopte *ptep = data->pgd;
++<<<<<<< HEAD
++=======
+ 	long iaext = (s64)iova >> cfg->ias;
++>>>>>>> 08090744f2db (iommu/io-pgtable-arm: Fix IOVA validation for 32-bit)
  
  	if (WARN_ON(!size || (size & cfg->pgsize_bitmap) != size))
  		return 0;
* Unmerged path drivers/iommu/io-pgtable-arm.c
