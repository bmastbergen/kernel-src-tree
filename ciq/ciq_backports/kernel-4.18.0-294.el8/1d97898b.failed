ipv6: add ipv6_fragment hook in ipv6_stub

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author wenxu <wenxu@ucloud.cn>
commit 1d97898b36bab91e8ffb38a660cc40eaba613f88
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1d97898b.failed

Add ipv6_fragment to ipv6_stub to avoid calling netfilter when
access ip6_fragment.

	Signed-off-by: wenxu <wenxu@ucloud.cn>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1d97898b36bab91e8ffb38a660cc40eaba613f88)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/addrconf_core.c
diff --cc net/ipv6/addrconf_core.c
index 5cdf0c4becab,c70c192bc91b..000000000000
--- a/net/ipv6/addrconf_core.c
+++ b/net/ipv6/addrconf_core.c
@@@ -174,14 -177,38 +174,44 @@@ eafnosupport_ip6_mtu_from_fib6(struct f
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static int eafnosupport_fib6_nh_init(struct net *net, struct fib6_nh *fib6_nh,
+ 				     struct fib6_config *cfg, gfp_t gfp_flags,
+ 				     struct netlink_ext_ack *extack)
+ {
+ 	NL_SET_ERR_MSG(extack, "IPv6 support not enabled in kernel");
+ 	return -EAFNOSUPPORT;
+ }
+ 
+ static int eafnosupport_ip6_del_rt(struct net *net, struct fib6_info *rt,
+ 				   bool skip_notify)
+ {
+ 	return -EAFNOSUPPORT;
+ }
+ 
+ static int eafnosupport_ipv6_fragment(struct net *net, struct sock *sk, struct sk_buff *skb,
+ 				      int (*output)(struct net *, struct sock *, struct sk_buff *))
+ {
+ 	kfree_skb(skb);
+ 	return -EAFNOSUPPORT;
+ }
+ 
++>>>>>>> 1d97898b36ba (ipv6: add ipv6_fragment hook in ipv6_stub)
  const struct ipv6_stub *ipv6_stub __read_mostly = &(struct ipv6_stub) {
  	.ipv6_dst_lookup_flow = eafnosupport_ipv6_dst_lookup_flow,
  	.ipv6_route_input  = eafnosupport_ipv6_route_input,
  	.fib6_get_table    = eafnosupport_fib6_get_table,
  	.fib6_table_lookup = eafnosupport_fib6_table_lookup,
  	.fib6_lookup       = eafnosupport_fib6_lookup,
 -	.fib6_select_path  = eafnosupport_fib6_select_path,
 +	.fib6_multipath_select = eafnosupport_fib6_multipath_select,
  	.ip6_mtu_from_fib6 = eafnosupport_ip6_mtu_from_fib6,
++<<<<<<< HEAD
++=======
+ 	.fib6_nh_init	   = eafnosupport_fib6_nh_init,
+ 	.ip6_del_rt	   = eafnosupport_ip6_del_rt,
+ 	.ipv6_fragment	   = eafnosupport_ipv6_fragment,
++>>>>>>> 1d97898b36ba (ipv6: add ipv6_fragment hook in ipv6_stub)
  };
  EXPORT_SYMBOL_GPL(ipv6_stub);
  
diff --git a/include/net/ipv6_stubs.h b/include/net/ipv6_stubs.h
index a5316aad5844..920be9628a82 100644
--- a/include/net/ipv6_stubs.h
+++ b/include/net/ipv6_stubs.h
@@ -55,6 +55,9 @@ struct ipv6_stub {
 			       int encap_type);
 #endif
 	struct neigh_table *nd_tbl;
+
+	int (*ipv6_fragment)(struct net *net, struct sock *sk, struct sk_buff *skb,
+			     int (*output)(struct net *, struct sock *, struct sk_buff *));
 };
 extern const struct ipv6_stub *ipv6_stub __read_mostly;
 
* Unmerged path net/ipv6/addrconf_core.c
diff --git a/net/ipv6/af_inet6.c b/net/ipv6/af_inet6.c
index 86de22b3cc6d..de6b8f673046 100644
--- a/net/ipv6/af_inet6.c
+++ b/net/ipv6/af_inet6.c
@@ -961,6 +961,7 @@ static const struct ipv6_stub ipv6_stub_impl = {
 	.xfrm6_rcv_encap = xfrm6_rcv_encap,
 #endif
 	.nd_tbl	= &nd_tbl,
+	.ipv6_fragment = ip6_fragment,
 };
 
 static const struct ipv6_bpf_stub ipv6_bpf_stub_impl = {
