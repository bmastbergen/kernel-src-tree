lib/vdso: Remove VDSO_HAS_32BIT_FALLBACK

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vincenzo Frascino <vincenzo.frascino@arm.com>
commit b767081c07a400ff1c6f95b87639a9405886e7a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b767081c.failed

VDSO_HAS_32BIT_FALLBACK was introduced to address a regression which
caused seccomp to deny access to the applications to clock_gettime64()
and clock_getres64() because they are not enabled in the existing
filters.

The purpose of VDSO_HAS_32BIT_FALLBACK was to simplify the conditional
implementation of __cvdso_clock_get*time32() variants.

Now that all the architectures that support the generic vDSO library
have been converted to support the 32 bit fallbacks the conditional
can be removed.

	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lore.kernel.org/r/20190830135902.20861-5-vincenzo.frascino@arm.com

References: c60a32ea4f45 ("lib/vdso/32: Provide legacy syscall fallbacks")

(cherry picked from commit b767081c07a400ff1c6f95b87639a9405886e7a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/vdso/gettimeofday.c
diff --cc lib/vdso/gettimeofday.c
index b30c5801ec9b,cd3aacf1cf86..000000000000
--- a/lib/vdso/gettimeofday.c
+++ b/lib/vdso/gettimeofday.c
@@@ -105,9 -124,12 +105,16 @@@ __cvdso_clock_gettime32(clockid_t clock
  	struct __kernel_timespec ts;
  	int ret;
  
 -	ret = __cvdso_clock_gettime_common(clock, &ts);
 +	ret = __cvdso_clock_gettime(clock, &ts);
  
++<<<<<<< HEAD
 +	if (ret == 0) {
++=======
+ 	if (unlikely(ret))
+ 		return clock_gettime32_fallback(clock, res);
+ 
+ 	if (likely(!ret)) {
++>>>>>>> b767081c07a4 (lib/vdso: Remove VDSO_HAS_32BIT_FALLBACK)
  		res->tv_sec = ts.tv_sec;
  		res->tv_nsec = ts.tv_nsec;
  	}
@@@ -205,9 -235,12 +212,16 @@@ __cvdso_clock_getres_time32(clockid_t c
  	struct __kernel_timespec ts;
  	int ret;
  
 -	ret = __cvdso_clock_getres_common(clock, &ts);
 +	ret = __cvdso_clock_getres(clock, &ts);
  
++<<<<<<< HEAD
 +	if (ret == 0) {
++=======
+ 	if (unlikely(ret))
+ 		return clock_getres32_fallback(clock, res);
+ 
+ 	if (likely(!ret && res)) {
++>>>>>>> b767081c07a4 (lib/vdso: Remove VDSO_HAS_32BIT_FALLBACK)
  		res->tv_sec = ts.tv_sec;
  		res->tv_nsec = ts.tv_nsec;
  	}
* Unmerged path lib/vdso/gettimeofday.c
