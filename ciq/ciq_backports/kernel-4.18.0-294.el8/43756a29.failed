powercap: Add AMD Fam17h RAPL support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Victor Ding <victording@google.com>
commit 43756a298928c9a4e8201baaeb205c0c103728af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/43756a29.failed

Enable AMD Fam17h RAPL support for the power capping framework.

The support is as per AMD Fam17h Model31h (Zen2) and model 00-ffh
(Zen1) PPR.

Tested by comparing the results of following two sysfs entries and the
values directly read from corresponding MSRs via /dev/cpu/[x]/msr:
  /sys/class/powercap/intel-rapl/intel-rapl:0/energy_uj
  /sys/class/powercap/intel-rapl/intel-rapl:0/intel-rapl:0:0/energy_uj

	Signed-off-by: Victor Ding <victording@google.com>
	Acked-by: Kim Phillips <kim.phillips@amd.com>
[ rjw: Changelog edits ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 43756a298928c9a4e8201baaeb205c0c103728af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/powercap/intel_rapl_msr.c
diff --cc drivers/powercap/intel_rapl_msr.c
index 809d567a374b,78213d4b5b16..000000000000
--- a/drivers/powercap/intel_rapl_msr.c
+++ b/drivers/powercap/intel_rapl_msr.c
@@@ -124,17 -135,42 +132,33 @@@ static int rapl_msr_write_raw(int cpu, 
  	return ra->err;
  }
  
 -/* List of verified CPUs. */
 -static const struct x86_cpu_id pl4_support_ids[] = {
 -	{ X86_VENDOR_INTEL, 6, INTEL_FAM6_TIGERLAKE_L, X86_FEATURE_ANY },
 -	{}
 -};
 -
  static int rapl_msr_probe(struct platform_device *pdev)
  {
 -	const struct x86_cpu_id *id = x86_match_cpu(pl4_support_ids);
  	int ret;
  
++<<<<<<< HEAD
 +	rapl_msr_priv.read_raw = rapl_msr_read_raw;
 +	rapl_msr_priv.write_raw = rapl_msr_write_raw;
++=======
+ 	switch (boot_cpu_data.x86_vendor) {
+ 	case X86_VENDOR_INTEL:
+ 		rapl_msr_priv = &rapl_msr_priv_intel;
+ 		break;
+ 	case X86_VENDOR_AMD:
+ 		rapl_msr_priv = &rapl_msr_priv_amd;
+ 		break;
+ 	default:
+ 		pr_err("intel-rapl does not support CPU vendor %d\n", boot_cpu_data.x86_vendor);
+ 		return -ENODEV;
+ 	}
+ 	rapl_msr_priv->read_raw = rapl_msr_read_raw;
+ 	rapl_msr_priv->write_raw = rapl_msr_write_raw;
++>>>>>>> 43756a298928 (powercap: Add AMD Fam17h RAPL support)
  
 -	if (id) {
 -		rapl_msr_priv->limits[RAPL_DOMAIN_PACKAGE] = 3;
 -		rapl_msr_priv->regs[RAPL_DOMAIN_PACKAGE][RAPL_DOMAIN_REG_PL4] =
 -			MSR_VR_CURRENT_CONFIG;
 -		pr_info("PL4 support detected.\n");
 -	}
 -
 -	rapl_msr_priv->control_type = powercap_register_control_type(NULL, "intel-rapl", NULL);
 -	if (IS_ERR(rapl_msr_priv->control_type)) {
 +	rapl_msr_priv.control_type = powercap_register_control_type(NULL, "intel-rapl", NULL);
 +	if (IS_ERR(rapl_msr_priv.control_type)) {
  		pr_debug("failed to register powercap control_type.\n");
 -		return PTR_ERR(rapl_msr_priv->control_type);
 +		return PTR_ERR(rapl_msr_priv.control_type);
  	}
  
  	ret = cpuhp_setup_state(CPUHP_AP_ONLINE_DYN, "powercap/rapl:online",
diff --git a/arch/x86/include/asm/msr-index.h b/arch/x86/include/asm/msr-index.h
index a2c2cc66b2bd..90bb084e1ed8 100644
--- a/arch/x86/include/asm/msr-index.h
+++ b/arch/x86/include/asm/msr-index.h
@@ -324,6 +324,7 @@
 #define MSR_PP1_POLICY			0x00000642
 
 #define MSR_AMD_RAPL_POWER_UNIT		0xc0010299
+#define MSR_AMD_CORE_ENERGY_STATUS		0xc001029a
 #define MSR_AMD_PKG_ENERGY_STATUS	0xc001029b
 
 /* Config TDP MSRs */
diff --git a/drivers/powercap/intel_rapl_common.c b/drivers/powercap/intel_rapl_common.c
index 1526d04c55db..9902a2ecdabe 100644
--- a/drivers/powercap/intel_rapl_common.c
+++ b/drivers/powercap/intel_rapl_common.c
@@ -989,6 +989,10 @@ static const struct rapl_defaults rapl_defaults_cht = {
 	.compute_time_window = rapl_compute_time_window_atom,
 };
 
+static const struct rapl_defaults rapl_defaults_amd = {
+	.check_unit = rapl_check_unit_core,
+};
+
 static const struct x86_cpu_id rapl_ids[] __initconst = {
 	X86_MATCH_INTEL_FAM6_MODEL(SANDYBRIDGE,		&rapl_defaults_core),
 	X86_MATCH_INTEL_FAM6_MODEL(SANDYBRIDGE_X,	&rapl_defaults_core),
@@ -1032,6 +1036,8 @@ static const struct x86_cpu_id rapl_ids[] __initconst = {
 
 	X86_MATCH_INTEL_FAM6_MODEL(XEON_PHI_KNL,	&rapl_defaults_hsw_server),
 	X86_MATCH_INTEL_FAM6_MODEL(XEON_PHI_KNM,	&rapl_defaults_hsw_server),
+
+	X86_MATCH_VENDOR_FAM(AMD, 0x17, &rapl_defaults_amd),
 	{}
 };
 MODULE_DEVICE_TABLE(x86cpu, rapl_ids);
* Unmerged path drivers/powercap/intel_rapl_msr.c
