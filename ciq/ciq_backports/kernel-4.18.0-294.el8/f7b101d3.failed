kheaders: Move from proc to sysfs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Joel Fernandes (Google) <joel@joelfernandes.org>
commit f7b101d33046a837c2aa4526cef28a3c785d7af2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/f7b101d3.failed

The kheaders archive consisting of the kernel headers used for compiling
bpf programs is in /proc. However there is concern that moving it here
will make it permanent. Let us move it to /sys/kernel as discussed [1].

[1] https://lore.kernel.org/patchwork/patch/1067310/#1265969

	Suggested-by: Steven Rostedt <rostedt@goodmis.org>
	Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit f7b101d33046a837c2aa4526cef28a3c785d7af2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	init/Kconfig
#	kernel/Makefile
#	kernel/gen_kheaders.sh
#	kernel/kheaders.c
diff --cc init/Kconfig
index a097e31b18a7,16a7540d60c8..000000000000
--- a/init/Kconfig
+++ b/init/Kconfig
@@@ -546,6 -579,15 +546,18 @@@ config IKCONFIG_PRO
  	  This option enables access to the kernel configuration file
  	  through /proc/config.gz.
  
++<<<<<<< HEAD
++=======
+ config IKHEADERS
+ 	tristate "Enable kernel headers through /sys/kernel/kheaders.tar.xz"
+ 	depends on SYSFS
+ 	help
+ 	  This option enables access to the in-kernel headers that are generated during
+ 	  the build process. These can be used to build eBPF tracing programs,
+ 	  or similar programs.  If you build the headers as a module, a module called
+ 	  kheaders.ko is built which can be loaded on-demand to get access to headers.
+ 
++>>>>>>> f7b101d33046 (kheaders: Move from proc to sysfs)
  config LOG_BUF_SHIFT
  	int "Kernel log buffer size (16 => 64KB, 17 => 128KB)"
  	range 12 25
diff --cc kernel/Makefile
index 331368aef029,a8d923b5481b..000000000000
--- a/kernel/Makefile
+++ b/kernel/Makefile
@@@ -72,6 -71,7 +72,10 @@@ obj-$(CONFIG_UTS_NS) += utsname.
  obj-$(CONFIG_USER_NS) += user_namespace.o
  obj-$(CONFIG_PID_NS) += pid_namespace.o
  obj-$(CONFIG_IKCONFIG) += configs.o
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_IKHEADERS) += kheaders.o
++>>>>>>> f7b101d33046 (kheaders: Move from proc to sysfs)
  obj-$(CONFIG_SMP) += stop_machine.o
  obj-$(CONFIG_KPROBES_SANITY_TEST) += test_kprobes.o
  obj-$(CONFIG_AUDIT) += audit.o auditfilter.o
@@@ -119,7 -124,11 +123,18 @@@ targets += config_data.g
  $(obj)/config_data.gz: $(KCONFIG_CONFIG) FORCE
  	$(call if_changed,gzip)
  
++<<<<<<< HEAD
 +      filechk_ikconfiggz = (echo "static const char kernel_config_data[] __used = MAGIC_START"; cat $< | scripts/basic/bin2c; echo "MAGIC_END;")
 +targets += config_data.h
 +$(obj)/config_data.h: $(obj)/config_data.gz FORCE
 +	$(call filechk,ikconfiggz)
++=======
+ $(obj)/kheaders.o: $(obj)/kheaders_data.tar.xz
+ 
+ quiet_cmd_genikh = CHK     $(obj)/kheaders_data.tar.xz
+ cmd_genikh = $(CONFIG_SHELL) $(srctree)/kernel/gen_kheaders.sh $@
+ $(obj)/kheaders_data.tar.xz: FORCE
+ 	$(call cmd,genikh)
+ 
+ clean-files := kheaders_data.tar.xz kheaders.md5
++>>>>>>> f7b101d33046 (kheaders: Move from proc to sysfs)
* Unmerged path kernel/gen_kheaders.sh
* Unmerged path kernel/kheaders.c
* Unmerged path init/Kconfig
* Unmerged path kernel/Makefile
* Unmerged path kernel/gen_kheaders.sh
* Unmerged path kernel/kheaders.c
