thunderbolt: Add support for Intel Tiger Lake-H

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Mika Westerberg <mika.westerberg@linux.intel.com>
commit f6439c531d52193f890807958aaec52905bc0f2e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/f6439c53.failed

Intel Tiger Lake-H has the same Thunderbolt/USB4 controller as Tiger
Lake-LP. Add the Tiger Lake-H PCI IDs to the driver list of supported
devices.

	Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
(cherry picked from commit f6439c531d52193f890807958aaec52905bc0f2e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/thunderbolt/tb.h
diff --cc drivers/thunderbolt/tb.h
index 9c0e8f814f52,8ea360b0ff77..000000000000
--- a/drivers/thunderbolt/tb.h
+++ b/drivers/thunderbolt/tb.h
@@@ -776,6 -778,20 +776,23 @@@ static inline bool tb_switch_is_ice_lak
  	return false;
  }
  
++<<<<<<< HEAD
++=======
+ static inline bool tb_switch_is_tiger_lake(const struct tb_switch *sw)
+ {
+ 	if (sw->config.vendor_id == PCI_VENDOR_ID_INTEL) {
+ 		switch (sw->config.device_id) {
+ 		case PCI_DEVICE_ID_INTEL_TGL_NHI0:
+ 		case PCI_DEVICE_ID_INTEL_TGL_NHI1:
+ 		case PCI_DEVICE_ID_INTEL_TGL_H_NHI0:
+ 		case PCI_DEVICE_ID_INTEL_TGL_H_NHI1:
+ 			return true;
+ 		}
+ 	}
+ 	return false;
+ }
+ 
++>>>>>>> f6439c531d52 (thunderbolt: Add support for Intel Tiger Lake-H)
  /**
   * tb_switch_is_usb4() - Is the switch USB4 compliant
   * @sw: Switch to check
diff --git a/drivers/thunderbolt/icm.c b/drivers/thunderbolt/icm.c
index b51fc3f62b1f..977ba91f4d0e 100644
--- a/drivers/thunderbolt/icm.c
+++ b/drivers/thunderbolt/icm.c
@@ -2284,6 +2284,8 @@ struct tb *icm_probe(struct tb_nhi *nhi)
 
 	case PCI_DEVICE_ID_INTEL_TGL_NHI0:
 	case PCI_DEVICE_ID_INTEL_TGL_NHI1:
+	case PCI_DEVICE_ID_INTEL_TGL_H_NHI0:
+	case PCI_DEVICE_ID_INTEL_TGL_H_NHI1:
 		icm->is_supported = icm_tgl_is_supported;
 		icm->driver_ready = icm_icl_driver_ready;
 		icm->set_uuid = icm_icl_set_uuid;
diff --git a/drivers/thunderbolt/nhi.c b/drivers/thunderbolt/nhi.c
index e29ac3e3aa1e..db80dc5dfeba 100644
--- a/drivers/thunderbolt/nhi.c
+++ b/drivers/thunderbolt/nhi.c
@@ -1345,6 +1345,10 @@ static struct pci_device_id nhi_ids[] = {
 	  .driver_data = (kernel_ulong_t)&icl_nhi_ops },
 	{ PCI_VDEVICE(INTEL, PCI_DEVICE_ID_INTEL_TGL_NHI1),
 	  .driver_data = (kernel_ulong_t)&icl_nhi_ops },
+	{ PCI_VDEVICE(INTEL, PCI_DEVICE_ID_INTEL_TGL_H_NHI0),
+	  .driver_data = (kernel_ulong_t)&icl_nhi_ops },
+	{ PCI_VDEVICE(INTEL, PCI_DEVICE_ID_INTEL_TGL_H_NHI1),
+	  .driver_data = (kernel_ulong_t)&icl_nhi_ops },
 
 	/* Any USB4 compliant host */
 	{ PCI_DEVICE_CLASS(PCI_CLASS_SERIAL_USB_USB4, ~0) },
diff --git a/drivers/thunderbolt/nhi.h b/drivers/thunderbolt/nhi.h
index 80162e4b013f..4e0861d75072 100644
--- a/drivers/thunderbolt/nhi.h
+++ b/drivers/thunderbolt/nhi.h
@@ -75,6 +75,8 @@ extern const struct tb_nhi_ops icl_nhi_ops;
 #define PCI_DEVICE_ID_INTEL_ICL_NHI0			0x8a17
 #define PCI_DEVICE_ID_INTEL_TGL_NHI0			0x9a1b
 #define PCI_DEVICE_ID_INTEL_TGL_NHI1			0x9a1d
+#define PCI_DEVICE_ID_INTEL_TGL_H_NHI0			0x9a1f
+#define PCI_DEVICE_ID_INTEL_TGL_H_NHI1			0x9a21
 
 #define PCI_CLASS_SERIAL_USB_USB4			0x0c0340
 
* Unmerged path drivers/thunderbolt/tb.h
