cgroup: fix incorrect WARN_ON_ONCE() in cgroup_setup_root()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Tejun Heo <tj@kernel.org>
commit d7495343228f30d8206e92dccfd1c41adcfa142d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/d7495343.failed

743210386c03 ("cgroup: use cgrp->kn->id as the cgroup ID") added WARN
which triggers if cgroup_id(root_cgrp) is not 1.  This is fine on
64bit ino archs but on 32bit archs cgroup ID is ((gen << 32) | ino)
and gen starts at 1, so the root id is 0x1_0000_0001 instead of 1
always triggering the WARN.

What we wanna make sure is that the ino part is 1.  Fix it.

	Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
Fixes: 743210386c03 ("cgroup: use cgrp->kn->id as the cgroup ID")
	Signed-off-by: Tejun Heo <tj@kernel.org>
(cherry picked from commit d7495343228f30d8206e92dccfd1c41adcfa142d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/cgroup/cgroup.c
diff --cc kernel/cgroup/cgroup.c
index 9e08519ae6db,53098c1d45e2..000000000000
--- a/kernel/cgroup/cgroup.c
+++ b/kernel/cgroup/cgroup.c
@@@ -1958,6 -1966,8 +1958,11 @@@ int cgroup_setup_root(struct cgroup_roo
  		goto exit_root_id;
  	}
  	root_cgrp->kn = root->kf_root->kn;
++<<<<<<< HEAD
++=======
+ 	WARN_ON_ONCE(cgroup_ino(root_cgrp) != 1);
+ 	root_cgrp->ancestor_ids[0] = cgroup_id(root_cgrp);
++>>>>>>> d7495343228f (cgroup: fix incorrect WARN_ON_ONCE() in cgroup_setup_root())
  
  	ret = css_populate_dir(&root_cgrp->self);
  	if (ret)
* Unmerged path kernel/cgroup/cgroup.c
