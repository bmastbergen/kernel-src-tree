iommu: Remove IOMMU_OF_DECLARE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Rob Herring <robh@kernel.org>
commit ac6bbf0cdf4206c517ac9789814c23e372ebce4d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ac6bbf0c.failed

Now that we use the driver core to stop deferred probe for missing
drivers, IOMMU_OF_DECLARE can be removed.

This is slightly less optimal than having a list of built-in drivers in
that we'll now defer probe twice before giving up. This shouldn't have a
significant impact on boot times as past discussions about deferred
probe have given no evidence of deferred probe having a substantial
impact.

	Cc: Robin Murphy <robin.murphy@arm.com>
	Cc: Kukjin Kim <kgene@kernel.org>
	Cc: Krzysztof Kozlowski <krzk@kernel.org>
	Cc: Rob Clark <robdclark@gmail.com>
	Cc: Heiko Stuebner <heiko@sntech.de>
	Cc: Frank Rowand <frowand.list@gmail.com>
	Cc: linux-arm-kernel@lists.infradead.org
	Cc: iommu@lists.linux-foundation.org
	Cc: linux-samsung-soc@vger.kernel.org
	Cc: linux-arm-msm@vger.kernel.org
	Cc: linux-rockchip@lists.infradead.org
	Cc: devicetree@vger.kernel.org
	Acked-by: Will Deacon <will.deacon@arm.com>
	Acked-by: Marek Szyprowski <m.szyprowski@samsung.com>
	Acked-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Rob Herring <robh@kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ac6bbf0cdf4206c517ac9789814c23e372ebce4d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/arm-smmu-v3.c
#	drivers/iommu/arm-smmu.c
diff --cc drivers/iommu/arm-smmu-v3.c
index d076622e2dd4,22bdabd3d8e0..000000000000
--- a/drivers/iommu/arm-smmu-v3.c
+++ b/drivers/iommu/arm-smmu-v3.c
@@@ -3701,11 -2908,13 +3701,17 @@@ static struct platform_driver arm_smmu_
  	.driver	= {
  		.name		= "arm-smmu-v3",
  		.of_match_table	= of_match_ptr(arm_smmu_of_match),
 +		.suppress_bind_attrs = true,
  	},
  	.probe	= arm_smmu_device_probe,
 -	.remove	= arm_smmu_device_remove,
  	.shutdown = arm_smmu_device_shutdown,
  };
 -module_platform_driver(arm_smmu_driver);
  
++<<<<<<< HEAD
 +IOMMU_OF_DECLARE(arm_smmuv3, "arm,smmu-v3");
 +builtin_platform_driver(arm_smmu_driver);
++=======
+ MODULE_DESCRIPTION("IOMMU API for ARM architected SMMUv3 implementations");
+ MODULE_AUTHOR("Will Deacon <will.deacon@arm.com>");
+ MODULE_LICENSE("GPL v2");
++>>>>>>> ac6bbf0cdf42 (iommu: Remove IOMMU_OF_DECLARE)
diff --cc drivers/iommu/arm-smmu.c
index 9705df08ff99,c73cfce1ccc0..000000000000
--- a/drivers/iommu/arm-smmu.c
+++ b/drivers/iommu/arm-smmu.c
@@@ -2438,19 -2201,16 +2438,25 @@@ static const struct dev_pm_ops arm_smmu
  
  static struct platform_driver arm_smmu_driver = {
  	.driver	= {
 -		.name		= "arm-smmu",
 -		.of_match_table	= of_match_ptr(arm_smmu_of_match),
 -		.pm		= &arm_smmu_pm_ops,
 +		.name			= "arm-smmu",
 +		.of_match_table		= of_match_ptr(arm_smmu_of_match),
 +		.pm			= &arm_smmu_pm_ops,
 +		.suppress_bind_attrs	= true,
  	},
  	.probe	= arm_smmu_device_probe,
 -	.remove	= arm_smmu_device_remove,
  	.shutdown = arm_smmu_device_shutdown,
  };
 -module_platform_driver(arm_smmu_driver);
  
++<<<<<<< HEAD
 +IOMMU_OF_DECLARE(arm_smmuv1, "arm,smmu-v1");
 +IOMMU_OF_DECLARE(arm_smmuv2, "arm,smmu-v2");
 +IOMMU_OF_DECLARE(arm_mmu400, "arm,mmu-400");
 +IOMMU_OF_DECLARE(arm_mmu401, "arm,mmu-401");
 +IOMMU_OF_DECLARE(arm_mmu500, "arm,mmu-500");
 +IOMMU_OF_DECLARE(cavium_smmuv2, "cavium,smmu-v2");
 +builtin_platform_driver(arm_smmu_driver);
++=======
+ MODULE_DESCRIPTION("IOMMU API for ARM architected SMMU implementations");
+ MODULE_AUTHOR("Will Deacon <will.deacon@arm.com>");
+ MODULE_LICENSE("GPL v2");
++>>>>>>> ac6bbf0cdf42 (iommu: Remove IOMMU_OF_DECLARE)
* Unmerged path drivers/iommu/arm-smmu-v3.c
* Unmerged path drivers/iommu/arm-smmu.c
diff --git a/drivers/iommu/exynos-iommu.c b/drivers/iommu/exynos-iommu.c
index e34d5700282c..aa932a06b9b6 100644
--- a/drivers/iommu/exynos-iommu.c
+++ b/drivers/iommu/exynos-iommu.c
@@ -1390,5 +1390,3 @@ static int __init exynos_iommu_init(void)
 	return ret;
 }
 core_initcall(exynos_iommu_init);
-
-IOMMU_OF_DECLARE(exynos_iommu_of, "samsung,exynos-sysmmu");
diff --git a/drivers/iommu/ipmmu-vmsa.c b/drivers/iommu/ipmmu-vmsa.c
index 8ccab8ec763c..5a8da82fc7ca 100644
--- a/drivers/iommu/ipmmu-vmsa.c
+++ b/drivers/iommu/ipmmu-vmsa.c
@@ -1113,9 +1113,6 @@ static void __exit ipmmu_exit(void)
 subsys_initcall(ipmmu_init);
 module_exit(ipmmu_exit);
 
-IOMMU_OF_DECLARE(ipmmu_vmsa_iommu_of, "renesas,ipmmu-vmsa");
-IOMMU_OF_DECLARE(ipmmu_r8a7795_iommu_of, "renesas,ipmmu-r8a7795");
-
 MODULE_DESCRIPTION("IOMMU API for Renesas VMSA-compatible IPMMU");
 MODULE_AUTHOR("Laurent Pinchart <laurent.pinchart@ideasonboard.com>");
 MODULE_LICENSE("GPL v2");
diff --git a/drivers/iommu/msm_iommu.c b/drivers/iommu/msm_iommu.c
index 306a90d2f5e4..d1c9366fe949 100644
--- a/drivers/iommu/msm_iommu.c
+++ b/drivers/iommu/msm_iommu.c
@@ -892,7 +892,5 @@ static void __exit msm_iommu_driver_exit(void)
 subsys_initcall(msm_iommu_driver_init);
 module_exit(msm_iommu_driver_exit);
 
-IOMMU_OF_DECLARE(msm_iommu_of, "qcom,apq8064-iommu");
-
 MODULE_LICENSE("GPL v2");
 MODULE_AUTHOR("Stepan Moskovchenko <stepanm@codeaurora.org>");
diff --git a/drivers/iommu/of_iommu.c b/drivers/iommu/of_iommu.c
index ab29106f132c..1f2baa27b42c 100644
--- a/drivers/iommu/of_iommu.c
+++ b/drivers/iommu/of_iommu.c
@@ -30,9 +30,6 @@
 
 #define NO_IOMMU	1
 
-static const struct of_device_id __iommu_of_table_sentinel
-	__used __section(__iommu_of_table_end);
-
 /**
  * of_get_dma_window - Parse *dma-window property and returns 0 if found.
  *
@@ -101,19 +98,6 @@ int of_get_dma_window(struct device_node *dn, const char *prefix, int index,
 }
 EXPORT_SYMBOL_GPL(of_get_dma_window);
 
-static bool of_iommu_driver_present(struct device_node *np)
-{
-	/*
-	 * If the IOMMU still isn't ready by the time we reach init, assume
-	 * it never will be. We don't want to defer indefinitely, nor attempt
-	 * to dereference __iommu_of_table after it's been freed.
-	 */
-	if (system_state >= SYSTEM_RUNNING)
-		return false;
-
-	return of_match_node(&__iommu_of_table, np);
-}
-
 static int of_iommu_xlate(struct device *dev,
 			  struct of_phandle_args *iommu_spec)
 {
@@ -123,8 +107,7 @@ static int of_iommu_xlate(struct device *dev,
 
 	ops = iommu_ops_from_fwnode(fwnode);
 	if ((ops && !ops->of_xlate) ||
-	    !of_device_is_available(iommu_spec->np) ||
-	    (!ops && !of_iommu_driver_present(iommu_spec->np)))
+	    !of_device_is_available(iommu_spec->np))
 		return NO_IOMMU;
 
 	ret = iommu_fwspec_init(dev, &iommu_spec->np->fwnode, ops);
diff --git a/drivers/iommu/qcom_iommu.c b/drivers/iommu/qcom_iommu.c
index 2768ddabba1c..451472239a39 100644
--- a/drivers/iommu/qcom_iommu.c
+++ b/drivers/iommu/qcom_iommu.c
@@ -972,7 +972,5 @@ static void __exit qcom_iommu_exit(void)
 module_init(qcom_iommu_init);
 module_exit(qcom_iommu_exit);
 
-IOMMU_OF_DECLARE(qcom_iommu_dev, "qcom,msm-iommu-v1");
-
 MODULE_DESCRIPTION("IOMMU API for QCOM IOMMU v1 implementations");
 MODULE_LICENSE("GPL v2");
diff --git a/drivers/iommu/rockchip-iommu.c b/drivers/iommu/rockchip-iommu.c
index 8efc2293cc23..4326ad7e94fc 100644
--- a/drivers/iommu/rockchip-iommu.c
+++ b/drivers/iommu/rockchip-iommu.c
@@ -1300,8 +1300,6 @@ static int __init rk_iommu_init(void)
 }
 subsys_initcall(rk_iommu_init);
 
-IOMMU_OF_DECLARE(rk_iommu_of, "rockchip,iommu");
-
 MODULE_DESCRIPTION("IOMMU API for Rockchip");
 MODULE_AUTHOR("Simon Xue <xxm@rock-chips.com> and Daniel Kurtz <djkurtz@chromium.org>");
 MODULE_ALIAS("platform:rockchip-iommu");
diff --git a/include/asm-generic/vmlinux.lds.h b/include/asm-generic/vmlinux.lds.h
index c1ce9140e18a..2b05c49b4fa0 100644
--- a/include/asm-generic/vmlinux.lds.h
+++ b/include/asm-generic/vmlinux.lds.h
@@ -218,7 +218,6 @@
 #define TIMER_OF_TABLES()	OF_TABLE(CONFIG_TIMER_OF, timer)
 #define IRQCHIP_OF_MATCH_TABLE() OF_TABLE(CONFIG_IRQCHIP, irqchip)
 #define CLK_OF_TABLES()		OF_TABLE(CONFIG_COMMON_CLK, clk)
-#define IOMMU_OF_TABLES()	OF_TABLE(CONFIG_OF_IOMMU, iommu)
 #define RESERVEDMEM_OF_TABLES()	OF_TABLE(CONFIG_OF_RESERVED_MEM, reservedmem)
 #define CPU_METHOD_OF_TABLES()	OF_TABLE(CONFIG_SMP, cpu_method)
 #define CPUIDLE_METHOD_OF_TABLES() OF_TABLE(CONFIG_CPU_IDLE, cpuidle_method)
@@ -611,7 +610,6 @@
 	CLK_OF_TABLES()							\
 	RESERVEDMEM_OF_TABLES()						\
 	TIMER_OF_TABLES()						\
-	IOMMU_OF_TABLES()						\
 	CPU_METHOD_OF_TABLES()						\
 	CPUIDLE_METHOD_OF_TABLES()					\
 	KERNEL_DTB()							\
diff --git a/include/linux/of_iommu.h b/include/linux/of_iommu.h
index 4fa654e4b5a9..f3d40dd7bb66 100644
--- a/include/linux/of_iommu.h
+++ b/include/linux/of_iommu.h
@@ -32,8 +32,4 @@ static inline const struct iommu_ops *of_iommu_configure(struct device *dev,
 
 #endif	/* CONFIG_OF_IOMMU */
 
-extern struct of_device_id __iommu_of_table;
-
-#define IOMMU_OF_DECLARE(name, compat)	OF_DECLARE_1(iommu, name, compat, NULL)
-
 #endif /* __OF_IOMMU_H */
