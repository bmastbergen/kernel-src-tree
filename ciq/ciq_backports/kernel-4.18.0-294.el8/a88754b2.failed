arm64: vdso: Cleanup Makefiles

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vincenzo Frascino <vincenzo.frascino@arm.com>
commit a88754b23114cfb61efed56ed448c05e4cb7e20d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a88754b2.failed

The recent changes to the vdso library for arm64 and the introduction of
the compat vdso library have generated some misalignment in the
Makefiles.

Cleanup the Makefiles for vdso and vdso32 libraries:
  * Removing unused rules.
  * Unifying the displayed compilation messages.
  * Simplifying the generic library inclusion path for
    arm64 vdso.

	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Will Deacon <will@kernel.org>
	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit a88754b23114cfb61efed56ed448c05e4cb7e20d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/vdso/Makefile
#	arch/arm64/kernel/vdso32/Makefile
diff --cc arch/arm64/kernel/vdso/Makefile
index fa230ff09aa1,dd2514bb1511..000000000000
--- a/arch/arm64/kernel/vdso/Makefile
+++ b/arch/arm64/kernel/vdso/Makefile
@@@ -15,6 -20,31 +15,34 @@@ obj-vdso := $(addprefix $(obj)/, $(obj-
  ldflags-y := -shared -nostdlib -soname=linux-vdso.so.1 --hash-style=sysv \
  		--build-id -n -T
  
++<<<<<<< HEAD
++=======
+ ccflags-y := -fno-common -fno-builtin -fno-stack-protector -ffixed-x18
+ ccflags-y += -DDISABLE_BRANCH_PROFILING
+ 
+ VDSO_LDFLAGS := -Bsymbolic
+ 
+ CFLAGS_REMOVE_vgettimeofday.o = $(CC_FLAGS_FTRACE) -Os
+ KBUILD_CFLAGS			+= $(DISABLE_LTO)
+ KASAN_SANITIZE			:= n
+ UBSAN_SANITIZE			:= n
+ OBJECT_FILES_NON_STANDARD	:= y
+ KCOV_INSTRUMENT			:= n
+ 
+ CFLAGS_vgettimeofday.o = -O2 -mcmodel=tiny
+ 
+ ifneq ($(c-gettimeofday-y),)
+   CFLAGS_vgettimeofday.o += -include $(c-gettimeofday-y)
+ endif
+ 
+ # Clang versions less than 8 do not support -mcmodel=tiny
+ ifeq ($(CONFIG_CC_IS_CLANG), y)
+   ifeq ($(shell test $(CONFIG_CLANG_VERSION) -lt 80000; echo $$?),0)
+     CFLAGS_REMOVE_vgettimeofday.o += -mcmodel=tiny
+   endif
+ endif
+ 
++>>>>>>> a88754b23114 (arm64: vdso: Cleanup Makefiles)
  # Disable gcov profiling for VDSO code
  GCOV_PROFILE := n
  
@@@ -42,13 -72,9 +70,19 @@@ quiet_cmd_vdsosym = VDSOSYM $
  include/generated/vdso-offsets.h: $(obj)/vdso.so.dbg FORCE
  	$(call if_changed,vdsosym)
  
++<<<<<<< HEAD
 +# Assembly rules for the .S files
 +$(obj-vdso): %.o: %.S FORCE
 +	$(call if_changed_dep,vdsoas)
 +
 +# Actual build commands
 +quiet_cmd_vdsoas = VDSOA   $@
 +      cmd_vdsoas = $(CC) $(a_flags) -c -o $@ $<
++=======
+ # Actual build commands
+ quiet_cmd_vdsold_and_vdso_check = LD      $@
+       cmd_vdsold_and_vdso_check = $(cmd_ld); $(cmd_vdso_check)
++>>>>>>> a88754b23114 (arm64: vdso: Cleanup Makefiles)
  
  # Install commands for the unstripped file
  quiet_cmd_vdso_install = INSTALL $@
diff --cc arch/arm64/kernel/vdso32/Makefile
index 288c14d30b45,1fba0776ed40..000000000000
--- a/arch/arm64/kernel/vdso32/Makefile
+++ b/arch/arm64/kernel/vdso32/Makefile
@@@ -156,14 -155,17 +156,21 @@@ $(asm-obj-vdso): %.o: %.S FORC
  	$(call if_changed_dep,vdsoas)
  
  # Actual build commands
++<<<<<<< HEAD
 +quiet_cmd_vdsold = VDSOL   $@
++=======
+ quiet_cmd_vdsold_and_vdso_check = LD32    $@
+       cmd_vdsold_and_vdso_check = $(cmd_vdsold); $(cmd_vdso_check)
+ 
+ quiet_cmd_vdsold = LD32    $@
++>>>>>>> a88754b23114 (arm64: vdso: Cleanup Makefiles)
        cmd_vdsold = $(COMPATCC) -Wp,-MD,$(depfile) $(VDSO_LDFLAGS) \
                     -Wl,-T $(filter %.lds,$^) $(filter %.o,$^) -o $@
- quiet_cmd_vdsocc = VDSOC   $@
+ quiet_cmd_vdsocc = CC32    $@
        cmd_vdsocc = $(COMPATCC) -Wp,-MD,$(depfile) $(VDSO_CFLAGS) -c -o $@ $<
- quiet_cmd_vdsocc_gettimeofday = VDSOC_GTD   $@
+ quiet_cmd_vdsocc_gettimeofday = CC32    $@
        cmd_vdsocc_gettimeofday = $(COMPATCC) -Wp,-MD,$(depfile) $(VDSO_CFLAGS) $(VDSO_CFLAGS_gettimeofday_o) -c -o $@ $<
- quiet_cmd_vdsoas = VDSOA   $@
+ quiet_cmd_vdsoas = AS32    $@
        cmd_vdsoas = $(COMPATCC) -Wp,-MD,$(depfile) $(VDSO_AFLAGS) -c -o $@ $<
  
  quiet_cmd_vdsomunge = MUNGE   $@
* Unmerged path arch/arm64/kernel/vdso/Makefile
* Unmerged path arch/arm64/kernel/vdso32/Makefile
