get rid of fs_value_is_filename_empty

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit aa1918f9491442a007a0cbe41a31539233209777
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/aa1918f9.failed

Its behaviour is identical to that of fs_value_is_filename.
It makes no sense, anyway - LOOKUP_EMPTY affects nothing
whatsoever once the pathname has been imported from userland.
And both fs_value_is_filename and fs_value_is_filename_empty
carry an already imported pathname.

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit aa1918f9491442a007a0cbe41a31539233209777)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fs_parser.c
#	fs/fsopen.c
#	include/linux/fs_context.h
* Unmerged path fs/fs_parser.c
* Unmerged path fs/fsopen.c
* Unmerged path include/linux/fs_context.h
diff --git a/Documentation/filesystems/mount_api.txt b/Documentation/filesystems/mount_api.txt
index 944d1965e917..6d25ca32268c 100644
--- a/Documentation/filesystems/mount_api.txt
+++ b/Documentation/filesystems/mount_api.txt
@@ -424,7 +424,6 @@ returned.
 	fs_value_is_string,		Value is a string
 	fs_value_is_blob,		Value is a binary blob
 	fs_value_is_filename,		Value is a filename* + dirfd
-	fs_value_is_filename_empty,	Value is a filename* + dirfd + AT_EMPTY_PATH
 	fs_value_is_file,		Value is an open file (file*)
 
      If there is a value, that value is stored in a union in the struct in one
* Unmerged path fs/fs_parser.c
* Unmerged path fs/fsopen.c
* Unmerged path include/linux/fs_context.h
