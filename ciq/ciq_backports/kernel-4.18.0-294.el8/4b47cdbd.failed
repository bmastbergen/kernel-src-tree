x86/head/64: Move early exception dispatch to C code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] head/64: Move early exception dispatch to C code (Vitaly Kuznetsov) [1868080]
Rebuild_FUZZ: 96.00%
commit-author Joerg Roedel <jroedel@suse.de>
commit 4b47cdbda6f1ad73b08dc7d497bac12b8f26ae0d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/4b47cdbd.failed

Move the assembly coded dispatch between page-faults and all other
exceptions to C code to make it easier to maintain and extend.

Also change the return-type of early_make_pgtable() to bool and make it
static.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20200907131613.12703-36-joro@8bytes.org
(cherry picked from commit 4b47cdbda6f1ad73b08dc7d497bac12b8f26ae0d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/setup.h
#	arch/x86/kernel/head64.c
#	arch/x86/kernel/head_64.S
diff --cc arch/x86/include/asm/setup.h
index ae13bc974416,7d7a064af6ff..000000000000
--- a/arch/x86/include/asm/setup.h
+++ b/arch/x86/include/asm/setup.h
@@@ -46,6 -48,11 +48,14 @@@ extern unsigned long saved_video_mode
  
  extern void reserve_standard_io_resources(void);
  extern void i386_reserve_resources(void);
++<<<<<<< HEAD
++=======
+ extern unsigned long __startup_64(unsigned long physaddr, struct boot_params *bp);
+ extern unsigned long __startup_secondary_64(void);
+ extern void startup_64_setup_env(unsigned long physbase);
+ extern void early_setup_idt(void);
+ extern void __init do_early_exception(struct pt_regs *regs, int trapnr);
++>>>>>>> 4b47cdbda6f1 (x86/head/64: Move early exception dispatch to C code)
  
  #ifdef CONFIG_X86_INTEL_MID
  extern void x86_intel_mid_early_setup(void);
diff --cc arch/x86/kernel/head64.c
index d68a9e3968b3,4282dac694c3..000000000000
--- a/arch/x86/kernel/head64.c
+++ b/arch/x86/kernel/head64.c
@@@ -36,6 -36,10 +36,13 @@@
  #include <asm/microcode.h>
  #include <asm/kasan.h>
  #include <asm/fixmap.h>
++<<<<<<< HEAD
++=======
+ #include <asm/realmode.h>
+ #include <asm/desc.h>
+ #include <asm/extable.h>
+ #include <asm/trapnr.h>
++>>>>>>> 4b47cdbda6f1 (x86/head/64: Move early exception dispatch to C code)
  
  /*
   * Manage page tables very early on.
diff --cc arch/x86/kernel/head_64.S
index f62d1d12a0aa,3b40ec44a67d..000000000000
--- a/arch/x86/kernel/head_64.S
+++ b/arch/x86/kernel/head_64.S
@@@ -324,31 -341,16 +324,33 @@@ early_idt_handler_common
  	pushq %r15				/* pt_regs->r15 */
  	UNWIND_HINT_REGS
  
++<<<<<<< HEAD
 +	cmpq $14,%rsi		/* Page fault? */
 +	jnz 10f
 +	GET_CR2_INTO(%rdi)	/* Can clobber any volatile register if pv */
 +	call early_make_pgtable
 +	andl %eax,%eax
 +	jz 20f			/* All good */
 +
 +10:
++=======
++>>>>>>> 4b47cdbda6f1 (x86/head/64: Move early exception dispatch to C code)
  	movq %rsp,%rdi		/* RDI = pt_regs; RSI is already trapnr */
- 	call early_fixup_exception
+ 	call do_early_exception
  
- 20:
  	decl early_recursion_flag(%rip)
  	jmp restore_regs_and_return_to_kernel
 -SYM_CODE_END(early_idt_handler_common)
 +END(early_idt_handler_common)
  
 +	__INITDATA
  
 -#define SYM_DATA_START_PAGE_ALIGNED(name)			\
 -	SYM_START(name, SYM_L_GLOBAL, .balign PAGE_SIZE)
 +	.balign 4
 +GLOBAL(early_recursion_flag)
 +	.long 0
 +
 +#define NEXT_PAGE(name) \
 +	.balign	PAGE_SIZE; \
 +GLOBAL(name)
  
  #ifdef CONFIG_PAGE_TABLE_ISOLATION
  /*
diff --git a/arch/x86/include/asm/pgtable.h b/arch/x86/include/asm/pgtable.h
index bd5e9f663e09..a0f964c69f44 100644
--- a/arch/x86/include/asm/pgtable.h
+++ b/arch/x86/include/asm/pgtable.h
@@ -27,7 +27,7 @@
 #include <asm/fpu/api.h>
 
 extern pgd_t early_top_pgt[PTRS_PER_PGD];
-int __init __early_make_pgtable(unsigned long address, pmdval_t pmd);
+bool __init __early_make_pgtable(unsigned long address, pmdval_t pmd);
 
 void ptdump_walk_pgd_level(struct seq_file *m, pgd_t *pgd);
 void ptdump_walk_pgd_level_debugfs(struct seq_file *m, pgd_t *pgd, bool user);
* Unmerged path arch/x86/include/asm/setup.h
* Unmerged path arch/x86/kernel/head64.c
* Unmerged path arch/x86/kernel/head_64.S
