block: add a bio_queue_enter helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Christoph Hellwig <hch@lst.de>
commit accea322f5439df22b19465bbe67b836f36165e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/accea322.failed

Add a little helper that passes the right nowait flag to blk_queue_enter
based on the bio flag, and terminates the bio with the right error code
if entering the queue fails.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit accea322f5439df22b19465bbe67b836f36165e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-core.c
diff --cc block/blk-core.c
index 794d6b507e2d,7f11560bfddb..000000000000
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@@ -1112,21 -1115,17 +1121,32 @@@ EXPORT_SYMBOL(generic_make_request)
  blk_qc_t direct_make_request(struct bio *bio)
  {
  	struct request_queue *q = bio->bi_disk->queue;
- 	bool nowait = bio->bi_opf & REQ_NOWAIT;
  	blk_qc_t ret;
  
++<<<<<<< HEAD
 +	if (!generic_make_request_checks(bio))
 +		return BLK_QC_T_NONE;
 +
 +	if (unlikely(blk_queue_enter(q, nowait ? BLK_MQ_REQ_NOWAIT : 0))) {
 +		if (nowait && !blk_queue_dying(q))
 +			bio_wouldblock_error(bio);
 +		else
 +			bio_io_error(bio);
 +		return BLK_QC_T_NONE;
 +	}
 +
 +	ret = q->make_request_fn(q, bio);
++=======
+ 	if (WARN_ON_ONCE(q->make_request_fn)) {
+ 		bio_io_error(bio);
+ 		return BLK_QC_T_NONE;
+ 	}
+ 	if (!generic_make_request_checks(bio))
+ 		return BLK_QC_T_NONE;
+ 	if (unlikely(bio_queue_enter(bio)))
+ 		return BLK_QC_T_NONE;
+ 	ret = blk_mq_make_request(q, bio);
++>>>>>>> accea322f543 (block: add a bio_queue_enter helper)
  	blk_queue_exit(q);
  	return ret;
  }
* Unmerged path block/blk-core.c
