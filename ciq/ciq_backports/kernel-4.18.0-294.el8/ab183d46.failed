RDMA/mlx5: Add missed RST2INIT and INIT2INIT steps during ECE handshake

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit ab183d460daac6292cb0cfd989d88b37b2437844
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ab183d46.failed

Missed steps during ECE handshake left userspace application with less
options for the ECE handshake. Pass ECE options in the additional
transitions.

Fixes: 50aec2c3135e ("RDMA/mlx5: Return ECE data after modify QP")
Link: https://lore.kernel.org/r/20200616104536.2426384-1-leon@kernel.org
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit ab183d460daac6292cb0cfd989d88b37b2437844)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/qpc.c
diff --cc drivers/infiniband/hw/mlx5/qpc.c
index ea62735042f0,7c3968ef9cd1..000000000000
--- a/drivers/infiniband/hw/mlx5/qpc.c
+++ b/drivers/infiniband/hw/mlx5/qpc.c
@@@ -341,9 -341,36 +341,39 @@@ static void mbox_free(struct mbox_info 
  	kfree(mbox->out);
  }
  
++<<<<<<< HEAD
++=======
+ static int get_ece_from_mbox(void *out, u16 opcode)
+ {
+ 	int ece = 0;
+ 
+ 	switch (opcode) {
+ 	case MLX5_CMD_OP_INIT2INIT_QP:
+ 		ece = MLX5_GET(init2init_qp_out, out, ece);
+ 		break;
+ 	case MLX5_CMD_OP_INIT2RTR_QP:
+ 		ece = MLX5_GET(init2rtr_qp_out, out, ece);
+ 		break;
+ 	case MLX5_CMD_OP_RTR2RTS_QP:
+ 		ece = MLX5_GET(rtr2rts_qp_out, out, ece);
+ 		break;
+ 	case MLX5_CMD_OP_RTS2RTS_QP:
+ 		ece = MLX5_GET(rts2rts_qp_out, out, ece);
+ 		break;
+ 	case MLX5_CMD_OP_RST2INIT_QP:
+ 		ece = MLX5_GET(rst2init_qp_out, out, ece);
+ 		break;
+ 	default:
+ 		break;
+ 	}
+ 
+ 	return ece;
+ }
+ 
++>>>>>>> ab183d460daa (RDMA/mlx5: Add missed RST2INIT and INIT2INIT steps during ECE handshake)
  static int modify_qp_mbox_alloc(struct mlx5_core_dev *dev, u16 opcode, int qpn,
  				u32 opt_param_mask, void *qpc,
 -				struct mbox_info *mbox, u16 uid, u32 ece)
 +				struct mbox_info *mbox, u16 uid)
  {
  	mbox->out = NULL;
  	mbox->in = NULL;
* Unmerged path drivers/infiniband/hw/mlx5/qpc.c
diff --git a/include/linux/mlx5/mlx5_ifc.h b/include/linux/mlx5/mlx5_ifc.h
index 602ff546e1c8..02797002aa53 100644
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@ -4280,7 +4280,8 @@ struct mlx5_ifc_rst2init_qp_out_bits {
 
 	u8         syndrome[0x20];
 
-	u8         reserved_at_40[0x40];
+	u8         reserved_at_40[0x20];
+	u8         ece[0x20];
 };
 
 struct mlx5_ifc_rst2init_qp_in_bits {
@@ -4297,7 +4298,7 @@ struct mlx5_ifc_rst2init_qp_in_bits {
 
 	u8         opt_param_mask[0x20];
 
-	u8         reserved_at_a0[0x20];
+	u8         ece[0x20];
 
 	struct mlx5_ifc_qpc_bits qpc;
 
@@ -6617,7 +6618,8 @@ struct mlx5_ifc_init2init_qp_out_bits {
 
 	u8         syndrome[0x20];
 
-	u8         reserved_at_40[0x40];
+	u8         reserved_at_40[0x20];
+	u8         ece[0x20];
 };
 
 struct mlx5_ifc_init2init_qp_in_bits {
@@ -6634,7 +6636,7 @@ struct mlx5_ifc_init2init_qp_in_bits {
 
 	u8         opt_param_mask[0x20];
 
-	u8         reserved_at_a0[0x20];
+	u8         ece[0x20];
 
 	struct mlx5_ifc_qpc_bits qpc;
 
