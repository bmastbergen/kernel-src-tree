net: phylink: fix ethtool -A with attached PHYs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Russell King <rmk+kernel@armlinux.org.uk>
commit c718af2d00a37587b09e5958d142da7569f3d55b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/c718af2d.failed

Fix a phylink's ethtool set_pauseparam support deadlock caused by phylib
interacting with phylink: we must not hold the state lock while calling
phylib functions that may call into phylink_phy_change().

Fixes: f904f15ea9b5 ("net: phylink: allow ethtool -A to change flow control advertisement")
	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c718af2d00a37587b09e5958d142da7569f3d55b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phylink.c
diff --cc drivers/net/phy/phylink.c
index 9078efe83495,453f9a399bb1..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -1463,19 -1502,20 +1463,29 @@@ int phylink_ethtool_set_pauseparam(stru
  	linkmode_set_pause(config->advertising, pause->tx_pause,
  			   pause->rx_pause);
  
- 	/* If we have a PHY, phylib will call our link state function if the
- 	 * mode has changed, which will trigger a resolve and update the MAC
- 	 * configuration.
+ 	if (!pl->phydev && !test_bit(PHYLINK_DISABLE_STOPPED,
+ 				     &pl->phylink_disable_state))
+ 		phylink_pcs_config(pl, true, &pl->link_config);
+ 
+ 	mutex_unlock(&pl->state_mutex);
+ 
+ 	/* If we have a PHY, a change of the pause frame advertisement will
+ 	 * cause phylib to renegotiate (if AN is enabled) which will in turn
+ 	 * call our phylink_phy_change() and trigger a resolve.  Note that
+ 	 * we can't hold our state mutex while calling phy_set_asym_pause().
  	 */
- 	if (pl->phydev) {
+ 	if (pl->phydev)
  		phy_set_asym_pause(pl->phydev, pause->rx_pause,
  				   pause->tx_pause);
++<<<<<<< HEAD
 +	} else if (!test_bit(PHYLINK_DISABLE_STOPPED,
 +			     &pl->phylink_disable_state)) {
 +		phylink_mac_config(pl, &pl->link_config);
 +		phylink_mac_an_restart(pl);
 +	}
 +	mutex_unlock(&pl->state_mutex);
++=======
++>>>>>>> c718af2d00a3 (net: phylink: fix ethtool -A with attached PHYs)
  
  	return 0;
  }
* Unmerged path drivers/net/phy/phylink.c
