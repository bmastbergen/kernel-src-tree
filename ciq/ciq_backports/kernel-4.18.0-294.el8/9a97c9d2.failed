tools, bpftool: Add LSM type to array of prog names

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Quentin Monnet <quentin@isovalent.com>
commit 9a97c9d2af5ca798377342debf7f0f44281d050e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/9a97c9d2.failed

Assign "lsm" as a printed name for BPF_PROG_TYPE_LSM in bpftool, so that
it can use it when listing programs loaded on the system or when probing
features.

	Signed-off-by: Quentin Monnet <quentin@isovalent.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20200724090618.16378-3-quentin@isovalent.com
(cherry picked from commit 9a97c9d2af5ca798377342debf7f0f44281d050e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/bpf/bpftool/prog.c
diff --cc tools/bpf/bpftool/prog.c
index 888bad69ace3,158995d853b0..000000000000
--- a/tools/bpf/bpftool/prog.c
+++ b/tools/bpf/bpftool/prog.c
@@@ -29,6 -29,42 +29,45 @@@
  #include "main.h"
  #include "xlated_dumper.h"
  
++<<<<<<< HEAD
++=======
+ const char * const prog_type_name[] = {
+ 	[BPF_PROG_TYPE_UNSPEC]			= "unspec",
+ 	[BPF_PROG_TYPE_SOCKET_FILTER]		= "socket_filter",
+ 	[BPF_PROG_TYPE_KPROBE]			= "kprobe",
+ 	[BPF_PROG_TYPE_SCHED_CLS]		= "sched_cls",
+ 	[BPF_PROG_TYPE_SCHED_ACT]		= "sched_act",
+ 	[BPF_PROG_TYPE_TRACEPOINT]		= "tracepoint",
+ 	[BPF_PROG_TYPE_XDP]			= "xdp",
+ 	[BPF_PROG_TYPE_PERF_EVENT]		= "perf_event",
+ 	[BPF_PROG_TYPE_CGROUP_SKB]		= "cgroup_skb",
+ 	[BPF_PROG_TYPE_CGROUP_SOCK]		= "cgroup_sock",
+ 	[BPF_PROG_TYPE_LWT_IN]			= "lwt_in",
+ 	[BPF_PROG_TYPE_LWT_OUT]			= "lwt_out",
+ 	[BPF_PROG_TYPE_LWT_XMIT]		= "lwt_xmit",
+ 	[BPF_PROG_TYPE_SOCK_OPS]		= "sock_ops",
+ 	[BPF_PROG_TYPE_SK_SKB]			= "sk_skb",
+ 	[BPF_PROG_TYPE_CGROUP_DEVICE]		= "cgroup_device",
+ 	[BPF_PROG_TYPE_SK_MSG]			= "sk_msg",
+ 	[BPF_PROG_TYPE_RAW_TRACEPOINT]		= "raw_tracepoint",
+ 	[BPF_PROG_TYPE_CGROUP_SOCK_ADDR]	= "cgroup_sock_addr",
+ 	[BPF_PROG_TYPE_LWT_SEG6LOCAL]		= "lwt_seg6local",
+ 	[BPF_PROG_TYPE_LIRC_MODE2]		= "lirc_mode2",
+ 	[BPF_PROG_TYPE_SK_REUSEPORT]		= "sk_reuseport",
+ 	[BPF_PROG_TYPE_FLOW_DISSECTOR]		= "flow_dissector",
+ 	[BPF_PROG_TYPE_CGROUP_SYSCTL]		= "cgroup_sysctl",
+ 	[BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE]	= "raw_tracepoint_writable",
+ 	[BPF_PROG_TYPE_CGROUP_SOCKOPT]		= "cgroup_sockopt",
+ 	[BPF_PROG_TYPE_TRACING]			= "tracing",
+ 	[BPF_PROG_TYPE_STRUCT_OPS]		= "struct_ops",
+ 	[BPF_PROG_TYPE_EXT]			= "ext",
+ 	[BPF_PROG_TYPE_LSM]			= "lsm",
+ 	[BPF_PROG_TYPE_SK_LOOKUP]		= "sk_lookup",
+ };
+ 
+ const size_t prog_type_name_size = ARRAY_SIZE(prog_type_name);
+ 
++>>>>>>> 9a97c9d2af5c (tools, bpftool: Add LSM type to array of prog names)
  enum dump_mode {
  	DUMP_JITED,
  	DUMP_XLATED,
* Unmerged path tools/bpf/bpftool/prog.c
