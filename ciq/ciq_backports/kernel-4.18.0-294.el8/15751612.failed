NFS: Fix fscache super_cookie allocation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Dave Wysochanski <dwysocha@redhat.com>
commit 15751612734ca0c419ac43ce986c9badcb5e2829
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/15751612.failed

Commit f2aedb713c28 ("NFS: Add fs_context support.") reworked
NFS mount code paths for fs_context support which included
super_block initialization.  In the process there was an extra
return left in the code and so we never call
nfs_fscache_get_super_cookie even if 'fsc' is given on as mount
option.  In addition, there is an extra check inside
nfs_fscache_get_super_cookie for the NFS_OPTION_FSCACHE which
is unnecessary since the only caller nfs_get_cache_cookie
checks this flag.

Fixes: f2aedb713c28 ("NFS: Add fs_context support.")
	Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
	Signed-off-by: David Howells <dhowells@redhat.com>
(cherry picked from commit 15751612734ca0c419ac43ce986c9badcb5e2829)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/super.c
diff --cc fs/nfs/super.c
index 5a0a0d311ce8,cc34aa3a8ba4..000000000000
--- a/fs/nfs/super.c
+++ b/fs/nfs/super.c
@@@ -2541,8 -1182,14 +2541,19 @@@ static void nfs_get_cache_cookie(struc
  			uniq = mnt_s->fscache_key->key.uniquifier;
  			ulen = mnt_s->fscache_key->key.uniq_len;
  		}
++<<<<<<< HEAD
 +	} else
 +		return;
++=======
+ 	} else {
+ 		if (!(ctx->options & NFS_OPTION_FSCACHE))
+ 			return;
+ 		if (ctx->fscache_uniq) {
+ 			uniq = ctx->fscache_uniq;
+ 			ulen = strlen(ctx->fscache_uniq);
+ 		}
+ 	}
++>>>>>>> 15751612734c (NFS: Fix fscache super_cookie allocation)
  
  	nfs_fscache_get_super_cookie(sb, uniq, ulen);
  }
diff --git a/fs/nfs/fscache.c b/fs/nfs/fscache.c
index 7dfa45a38088..90c6d37f2a24 100644
--- a/fs/nfs/fscache.c
+++ b/fs/nfs/fscache.c
@@ -122,8 +122,6 @@ void nfs_fscache_get_super_cookie(struct super_block *sb, const char *uniq, int
 
 	nfss->fscache_key = NULL;
 	nfss->fscache = NULL;
-	if (!(nfss->options & NFS_OPTION_FSCACHE))
-		return;
 	if (!uniq) {
 		uniq = "";
 		ulen = 1;
* Unmerged path fs/nfs/super.c
