net: Revert "net: optimize the sockptr_t for unified kernel/user address spaces"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [net] Revert "net: optimize the sockptr_t for unified kernel/user address spaces" (Jiri Benc) [1882709]
Rebuild_FUZZ: 96.77%
commit-author Christoph Hellwig <hch@lst.de>
commit 519a8a6cf91dda095be2d36216fc4ebc525270a1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/519a8a6c.failed

This reverts commits 6d04fe15f78acdf8e32329e208552e226f7a8ae6 and
a31edb2059ed4e498f9aa8230c734b59d0ad797a.

It turns out the idea to share a single pointer for both kernel and user
space address causes various kinds of problems.  So use the slightly less
optimal version that uses an extra bit, but which is guaranteed to be safe
everywhere.

Fixes: 6d04fe15f78a ("net: optimize the sockptr_t for unified kernel/user address spaces")
	Reported-by: Eric Dumazet <edumazet@google.com>
	Reported-by: John Stultz <john.stultz@linaro.org>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 519a8a6cf91dda095be2d36216fc4ebc525270a1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/socket.c
diff --cc net/socket.c
index 5a1fb545df6d,dbbe8ea7d395..000000000000
--- a/net/socket.c
+++ b/net/socket.c
@@@ -2050,11 -2092,10 +2050,15 @@@ static bool sock_use_custom_sol_socket(
   *	Set a socket option. Because we don't know the option lengths we have
   *	to pass the user mode parameter for the protocols to sort out.
   */
 -int __sys_setsockopt(int fd, int level, int optname, char __user *user_optval,
 -		int optlen)
 +
 +static int __sys_setsockopt(int fd, int level, int optname,
 +			    char __user *optval, int optlen)
  {
++<<<<<<< HEAD
 +	mm_segment_t oldfs = get_fs();
++=======
+ 	sockptr_t optval = USER_SOCKPTR(user_optval);
++>>>>>>> 519a8a6cf91d (net: Revert "net: optimize the sockptr_t for unified kernel/user address spaces")
  	char *kernel_optval = NULL;
  	int err, fput_needed;
  	struct socket *sock;
* Unmerged path net/socket.c
