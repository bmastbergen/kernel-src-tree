net: spread "enum sock_flags"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [net] spread "enum sock_flags" (Jiri Benc) [1882709]
Rebuild_FUZZ: 90.57%
commit-author Alexey Dobriyan <adobriyan@gmail.com>
commit 193d357d087309f2d5ab8e8caab1af5e3bc29fa0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/193d357d.failed

Some ints are "enum sock_flags" in fact.

	Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 193d357d087309f2d5ab8e8caab1af5e3bc29fa0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/sock.h
diff --cc include/net/sock.h
index c344c3edd864,ab905c4b1f0e..000000000000
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@@ -2549,9 -2512,7 +2549,13 @@@ static inline bool sk_listener(const st
  	return (1 << sk->sk_state) & (TCPF_LISTEN | TCPF_NEW_SYN_RECV);
  }
  
++<<<<<<< HEAD
 +void sock_enable_timestamp(struct sock *sk, int flag);
 +int sock_get_timestamp(struct sock *, struct timeval __user *);
 +int sock_get_timestampns(struct sock *, struct timespec __user *);
++=======
+ void sock_enable_timestamp(struct sock *sk, enum sock_flags flag);
++>>>>>>> 193d357d0873 (net: spread "enum sock_flags")
  int sock_recv_errqueue(struct sock *sk, struct msghdr *msg, int len, int level,
  		       int type);
  
* Unmerged path include/net/sock.h
diff --git a/net/core/sock.c b/net/core/sock.c
index a2cba8ac2edf..eb6303960174 100644
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@ -664,7 +664,8 @@ static int sock_getbindtodevice(struct sock *sk, char __user *optval,
 	return ret;
 }
 
-static inline void sock_valbool_flag(struct sock *sk, int bit, int valbool)
+static inline void sock_valbool_flag(struct sock *sk, enum sock_flags bit,
+				     int valbool)
 {
 	if (valbool)
 		sock_set_flag(sk, bit);
@@ -3028,7 +3029,7 @@ int sock_get_timestampns(struct sock *sk, struct timespec __user *userstamp)
 }
 EXPORT_SYMBOL(sock_get_timestampns);
 
-void sock_enable_timestamp(struct sock *sk, int flag)
+void sock_enable_timestamp(struct sock *sk, enum sock_flags flag)
 {
 	if (!sock_flag(sk, flag)) {
 		unsigned long previous_flags = sk->sk_flags;
