scsi: scsi_debug: Add per_host_store option

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Douglas Gilbert <dgilbert@interlog.com>
commit 87c715dcde633f4cc4690a24a240e838181e6a9d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/87c715dc.failed

The scsi_debug driver has always been restricted to using one ramdisk image
(or none) for its storage. This means that thousands of scsi_debug devices
can be created without exhausting the host machine's RAM. The downside is
that all scsi_debug devices share the same ramdisk image. This option
changes the way a following write to the add_host parameter (or an add_host
in the module/driver invocation) operates.  For each new host that is
created while per_host_store is true, a new store (of dev-size_mb MiB) is
created and associated with all the LUs that belong to that new host. The
user (who will need root permissions) needs to take care not to exhaust all
the machine's available RAM.

One reason for doing this is to check that (partial) disk to disk copies
based on scsi_debug devices have actually copied accurately. To test this
the add_host=<n> parameter where <n> is 2 or greater can be used when the
scsi_debug module is loaded. Let us assume that /dev/sdb and /dev/sg1 are
the same scsi_debug device, while /dev/sdc and /dev/sg2 are the same
scsi_debug device. With per_host_store=1 add_host=2 they will have
different ramdisk images. Then the following pseudocode could be executed
to check if the sgh_dd copy worked:

    dd if=/dev/urandom of=/dev/sdb
    sgh_dd if=/dev/sg1 of=/dev/sg2 [plus option(s) to test]
    cmp /dev/sdb /dev/sdc

If the cmp fails then the copy has failed (or some other mechanism wrote to
/dev/sdb or /dev/sdc in the interim).

[mkp: use kstrtobool()]

Link: https://lore.kernel.org/r/20200421151424.32668-3-dgilbert@interlog.com
	Signed-off-by: Douglas Gilbert <dgilbert@interlog.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 87c715dcde633f4cc4690a24a240e838181e6a9d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_debug.c
diff --cc drivers/scsi/scsi_debug.c
index bf9881fbdd10,0eea828d6292..000000000000
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@@ -43,6 -38,9 +43,12 @@@
  #include <linux/hrtimer.h>
  #include <linux/uuid.h>
  #include <linux/t10-pi.h>
++<<<<<<< HEAD
++=======
+ #include <linux/msdos_partition.h>
+ #include <linux/random.h>
+ #include <linux/xarray.h>
++>>>>>>> 87c715dcde63 (scsi: scsi_debug: Add per_host_store option)
  
  #include <net/checksum.h>
  
@@@ -660,6 -679,8 +686,11 @@@ static unsigned int sdebug_unmap_max_bl
  static unsigned int sdebug_unmap_max_desc = DEF_UNMAP_MAX_DESC;
  static unsigned int sdebug_write_same_length = DEF_WRITESAME_LENGTH;
  static int sdebug_uuid_ctl = DEF_UUID_CTL;
++<<<<<<< HEAD
++=======
+ static bool sdebug_random = DEF_RANDOM;
+ static bool sdebug_per_host_store = DEF_PER_HOST_STORE;
++>>>>>>> 87c715dcde63 (scsi: scsi_debug: Add per_host_store option)
  static bool sdebug_removable = DEF_REMOVABLE;
  static bool sdebug_clustering;
  static bool sdebug_host_lock = DEF_HOST_LOCK;
@@@ -1043,8 -1077,8 +1086,13 @@@ static int p_fill_from_dev_buffer(struc
  	pr_debug("%s: off_dst=%u, scsi_bufflen=%u, act_len=%u, resid=%d\n",
  		 __func__, off_dst, scsi_bufflen(scp), act_len,
  		 scsi_get_resid(scp));
++<<<<<<< HEAD
 +	n = (int)scsi_bufflen(scp) - ((int)off_dst + act_len);
 +	scsi_set_resid(scp, min(scsi_get_resid(scp), n));
++=======
+ 	n = scsi_bufflen(scp) - (off_dst + act_len);
+ 	scsi_set_resid(scp, min_t(int, scsi_get_resid(scp), n));
++>>>>>>> 87c715dcde63 (scsi: scsi_debug: Add per_host_store option)
  	return 0;
  }
  
@@@ -4148,10 -4221,9 +4236,9 @@@ static int scsi_debug_host_reset(struc
  	return SUCCESS;
  }
  
- static void __init sdebug_build_parts(unsigned char *ramp,
- 				      unsigned long store_size)
+ static void sdebug_build_parts(unsigned char *ramp, unsigned long store_size)
  {
 -	struct msdos_partition *pp;
 +	struct partition *pp;
  	int starts[SDEBUG_MAX_PARTS + 2];
  	int sectors_per_part, num_sectors, k;
  	int heads_by_sects, start_sec, end_sec;
* Unmerged path drivers/scsi/scsi_debug.c
