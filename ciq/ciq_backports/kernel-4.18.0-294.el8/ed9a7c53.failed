net/mlx5e: kTLS, Cleanup redundant capability check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Tariq Toukan <tariqt@mellanox.com>
commit ed9a7c53b8781f851bd8406551d6abfb2d826683
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ed9a7c53.failed

All callers of mlx5e_ktls_build_netdev() check capability
before the call.
Remove the repeated check in the function.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Reviewed-by: Maxim Mikityanskiy <maximmi@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit ed9a7c53b8781f851bd8406551d6abfb2d826683)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls.c
index 8970ea68d005,1b392696280d..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls.c
@@@ -43,12 -56,15 +43,22 @@@ static const struct tlsdev_ops mlx5e_kt
  void mlx5e_ktls_build_netdev(struct mlx5e_priv *priv)
  {
  	struct net_device *netdev = priv->netdev;
 -	struct mlx5_core_dev *mdev = priv->mdev;
  
++<<<<<<< HEAD
 +	if (!mlx5_accel_is_ktls_device(priv->mdev))
 +		return;
 +
 +	netdev->hw_features |= NETIF_F_HW_TLS_TX;
 +	netdev->features    |= NETIF_F_HW_TLS_TX;
++=======
+ 	if (mlx5_accel_is_ktls_tx(mdev)) {
+ 		netdev->hw_features |= NETIF_F_HW_TLS_TX;
+ 		netdev->features    |= NETIF_F_HW_TLS_TX;
+ 	}
+ 
+ 	if (mlx5_accel_is_ktls_rx(mdev))
+ 		netdev->hw_features |= NETIF_F_HW_TLS_RX;
++>>>>>>> ed9a7c53b878 (net/mlx5e: kTLS, Cleanup redundant capability check)
  
  	netdev->tlsdev_ops = &mlx5e_ktls_ops;
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls.c
