powerpc/watchpoint: Provide DAWR number to set_dawr

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Ravi Bangoria <ravi.bangoria@linux.ibm.com>
commit a18b834625d345bfa89c4e2754dd6cbb0133c4d7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a18b8346.failed

Introduce new parameter 'nr' to set_dawr() which indicates which DAWR
should be programed.

	Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
	Reviewed-by: Michael Neuling <mikey@neuling.org>
Link: https://lore.kernel.org/r/20200514111741.97993-6-ravi.bangoria@linux.ibm.com
(cherry picked from commit a18b834625d345bfa89c4e2754dd6cbb0133c4d7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/hw_breakpoint.h
#	arch/powerpc/kernel/dawr.c
#	arch/powerpc/kernel/process.c
diff --cc arch/powerpc/include/asm/hw_breakpoint.h
index 27d6e3c8fde9,5b3b02834e0b..000000000000
--- a/arch/powerpc/include/asm/hw_breakpoint.h
+++ b/arch/powerpc/include/asm/hw_breakpoint.h
@@@ -93,6 -94,21 +93,23 @@@ int hw_breakpoint_handler(struct die_ar
  static inline void hw_breakpoint_disable(void) { }
  static inline void thread_change_pc(struct task_struct *tsk,
  					struct pt_regs *regs) { }
 -
  #endif	/* CONFIG_HAVE_HW_BREAKPOINT */
++<<<<<<< HEAD
++=======
+ 
+ 
+ #ifdef CONFIG_PPC_DAWR
+ extern bool dawr_force_enable;
+ static inline bool dawr_enabled(void)
+ {
+ 	return dawr_force_enable;
+ }
+ int set_dawr(int nr, struct arch_hw_breakpoint *brk);
+ #else
+ static inline bool dawr_enabled(void) { return false; }
+ static inline int set_dawr(int nr, struct arch_hw_breakpoint *brk) { return -1; }
+ #endif
+ 
++>>>>>>> a18b834625d3 (powerpc/watchpoint: Provide DAWR number to set_dawr)
  #endif	/* __KERNEL__ */
  #endif	/* _PPC_BOOK3S_64_HW_BREAKPOINT_H */
diff --cc arch/powerpc/kernel/process.c
index 6ca2453dede4,dc161b0adc82..000000000000
--- a/arch/powerpc/kernel/process.c
+++ b/arch/powerpc/kernel/process.c
@@@ -807,9 -804,11 +807,15 @@@ void __set_breakpoint(struct arch_hw_br
  {
  	memcpy(this_cpu_ptr(&current_brk), brk, sizeof(*brk));
  
 -	if (dawr_enabled())
 +	if (cpu_has_feature(CPU_FTR_DAWR))
  		// Power8 or later
++<<<<<<< HEAD
 +		set_dawr(brk);
++=======
+ 		set_dawr(0, brk);
+ 	else if (IS_ENABLED(CONFIG_PPC_8xx))
+ 		set_breakpoint_8xx(brk);
++>>>>>>> a18b834625d3 (powerpc/watchpoint: Provide DAWR number to set_dawr)
  	else if (!cpu_has_feature(CPU_FTR_ARCH_207S))
  		// Power7 or earlier
  		set_dabr(brk);
* Unmerged path arch/powerpc/kernel/dawr.c
* Unmerged path arch/powerpc/include/asm/hw_breakpoint.h
* Unmerged path arch/powerpc/kernel/dawr.c
* Unmerged path arch/powerpc/kernel/process.c
