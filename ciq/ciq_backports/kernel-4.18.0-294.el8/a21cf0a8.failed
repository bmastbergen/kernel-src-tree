devlink: Add a new devlink port lanes attribute and pass to netlink

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Danielle Ratson <danieller@mellanox.com>
commit a21cf0a8330bba60e44ca6c99e1591042f336ff5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a21cf0a8.failed

Add a new devlink port attribute that indicates the port's number of lanes.

Drivers are expected to set it via devlink_port_attrs_set(), before
registering the port.

The attribute is not passed to user space in case the number of lanes is
invalid (0).

	Signed-off-by: Danielle Ratson <danieller@mellanox.com>
	Reviewed-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a21cf0a8330bba60e44ca6c99e1591042f336ff5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/core.c
#	include/net/devlink.h
diff --cc drivers/net/ethernet/mellanox/mlxsw/core.c
index 3120926a5300,6cde196f6b70..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/core.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/core.c
@@@ -2130,12 -2130,18 +2130,22 @@@ static int __mlxsw_core_port_init(struc
  	struct mlxsw_core_port *mlxsw_core_port =
  					&mlxsw_core->ports[local_port];
  	struct devlink_port *devlink_port = &mlxsw_core_port->devlink_port;
 -	struct devlink_port_attrs attrs = {};
  	int err;
  
++<<<<<<< HEAD
++=======
+ 	attrs.split = split;
+ 	attrs.lanes = lanes;
+ 	attrs.flavour = flavour;
+ 	attrs.phys.port_number = port_number;
+ 	attrs.phys.split_subport_number = split_port_subnumber;
+ 	memcpy(attrs.switch_id.id, switch_id, switch_id_len);
+ 	attrs.switch_id.id_len = switch_id_len;
++>>>>>>> a21cf0a8330b (devlink: Add a new devlink port lanes attribute and pass to netlink)
  	mlxsw_core_port->local_port = local_port;
 -	devlink_port_attrs_set(devlink_port, &attrs);
 +	devlink_port_attrs_set(devlink_port, flavour, port_number,
 +			       split, split_port_subnumber,
 +			       switch_id, switch_id_len);
  	err = devlink_port_register(devlink, devlink_port, local_port);
  	if (err)
  		memset(mlxsw_core_port, 0, sizeof(*mlxsw_core_port));
diff --cc include/net/devlink.h
index 8fb457f77884,91a9f8770d08..000000000000
--- a/include/net/devlink.h
+++ b/include/net/devlink.h
@@@ -68,8 -64,16 +68,19 @@@ struct devlink_port_pci_vf_attrs 
  	u16 vf;	/* Associated PCI VF for of the PCI PF for this port. */
  };
  
++<<<<<<< HEAD
++=======
+ /**
+  * struct devlink_port_attrs - devlink port object
+  * @flavour: flavour of the port
+  * @split: indicates if this is split port
+  * @lanes: maximum number of lanes the port supports. 0 value is not passed to netlink.
+  * @switch_id: if the port is part of switch, this is buffer with ID, otherwise this is NULL
+  */
++>>>>>>> a21cf0a8330b (devlink: Add a new devlink port lanes attribute and pass to netlink)
  struct devlink_port_attrs {
  	u8 split:1;
+ 	u32 lanes;
  	enum devlink_port_flavour flavour;
  	struct netdev_phys_item_id switch_id;
  	union {
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/core.c
* Unmerged path include/net/devlink.h
diff --git a/include/uapi/linux/devlink.h b/include/uapi/linux/devlink.h
index 87c83a82991b..f741ab8d9cf0 100644
--- a/include/uapi/linux/devlink.h
+++ b/include/uapi/linux/devlink.h
@@ -455,6 +455,8 @@ enum devlink_attr {
 
 	DEVLINK_ATTR_INFO_BOARD_SERIAL_NUMBER,	/* string */
 
+	DEVLINK_ATTR_PORT_LANES,			/* u32 */
+
 	/* add new attributes above here, update the policy in devlink.c */
 
 	__DEVLINK_ATTR_MAX,
diff --git a/net/core/devlink.c b/net/core/devlink.c
index 128fc933cb1d..92227bc871f5 100644
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@ -534,6 +534,10 @@ static int devlink_nl_port_attrs_put(struct sk_buff *msg,
 
 	if (!devlink_port->attrs_set)
 		return 0;
+	if (attrs->lanes) {
+		if (nla_put_u32(msg, DEVLINK_ATTR_PORT_LANES, attrs->lanes))
+			return -EMSGSIZE;
+	}
 	if (nla_put_u16(msg, DEVLINK_ATTR_PORT_FLAVOUR, attrs->flavour))
 		return -EMSGSIZE;
 	switch (devlink_port->attrs.flavour) {
