nbd: don't update block size after device is started

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit b40813ddcd6bf9f01d020804e4cb8febc480b9e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b40813dd.failed

Mounted NBD device can be resized, one use case is rbd-nbd.

Fix the issue by setting up default block size, then not touch it
in nbd_size_update() any more. This kind of usage is aligned with loop
which has same use case too.

	Cc: stable@vger.kernel.org
Fixes: c8a83a6b54d0 ("nbd: Use set_blocksize() to set device blocksize")
	Reported-by: lining <lining2020x@163.com>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Cc: Josef Bacik <josef@toxicpanda.com>
	Cc: Jan Kara <jack@suse.cz>
	Tested-by: lining <lining2020x@163.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit b40813ddcd6bf9f01d020804e4cb8febc480b9e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nbd.c
diff --cc drivers/block/nbd.c
index 75841fc8f85b,c4f9ccf5cc2a..000000000000
--- a/drivers/block/nbd.c
+++ b/drivers/block/nbd.c
@@@ -306,13 -309,14 +306,19 @@@ static void nbd_size_update(struct nbd_
  	}
  	blk_queue_logical_block_size(nbd->disk->queue, config->blksize);
  	blk_queue_physical_block_size(nbd->disk->queue, config->blksize);
 -	set_capacity(nbd->disk, nr_sectors);
 +	set_capacity(nbd->disk, config->bytesize >> 9);
  	if (bdev) {
  		if (bdev->bd_disk) {
++<<<<<<< HEAD
 +			bd_set_size(bdev, config->bytesize);
 +			set_blocksize(bdev, config->blksize);
++=======
+ 			bd_set_nr_sectors(bdev, nr_sectors);
+ 			if (start)
+ 				set_blocksize(bdev, config->blksize);
++>>>>>>> b40813ddcd6b (nbd: don't update block size after device is started)
  		} else
 -			set_bit(GD_NEED_PART_SCAN, &nbd->disk->state);
 +			bdev->bd_invalidated = 1;
  		bdput(bdev);
  	}
  	kobject_uevent(&nbd_to_dev(nbd)->kobj, KOBJ_CHANGE);
* Unmerged path drivers/block/nbd.c
