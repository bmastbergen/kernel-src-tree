software node: unify PROPERTY_ENTRY_XXX macros

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Dmitry Torokhov <dmitry.torokhov@gmail.com>
commit daeba9bf62e6d03667915899af48471cdf26fde4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/daeba9bf.failed

We can unify string properties initializer macros with integer
initializers.

	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit daeba9bf62e6d03667915899af48471cdf26fde4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/property.h
diff --cc include/linux/property.h
index b1dbe0ba27b1,48335288c2a9..000000000000
--- a/include/linux/property.h
+++ b/include/linux/property.h
@@@ -296,30 -289,24 +292,43 @@@ struct property_entry 
  #define PROPERTY_ENTRY_STRING_ARRAY(_name_, _val_)			\
  	PROPERTY_ENTRY_STRING_ARRAY_LEN(_name_, _val_, ARRAY_SIZE(_val_))
  
- #define __PROPERTY_ENTRY_INTEGER(_name_, _type_, _Type_, _val_)	\
- (struct property_entry) {					\
- 	.name = _name_,						\
- 	.length = sizeof(_type_),				\
- 	.type = DEV_PROP_##_Type_,				\
- 	{ .value = { ._type_##_data = _val_ } },		\
+ #define __PROPERTY_ENTRY_ELEMENT(_name_, _elem_, _Type_, _val_)		\
+ (struct property_entry) {						\
+ 	.name = _name_,							\
+ 	.length = __PROPERTY_ENTRY_ELEMENT_SIZE(_elem_),		\
+ 	.type = DEV_PROP_##_Type_,					\
+ 	{ .value = { ._elem_ = _val_ } },				\
  }
  
++<<<<<<< HEAD
 +#define PROPERTY_ENTRY_U8(_name_, _val_)		\
 +	__PROPERTY_ENTRY_INTEGER(_name_, u8, U8, _val_)
 +#define PROPERTY_ENTRY_U16(_name_, _val_)		\
 +	__PROPERTY_ENTRY_INTEGER(_name_, u16, U16, _val_)
 +#define PROPERTY_ENTRY_U32(_name_, _val_)		\
 +	__PROPERTY_ENTRY_INTEGER(_name_, u32, U32, _val_)
 +#define PROPERTY_ENTRY_U64(_name_, _val_)		\
 +	__PROPERTY_ENTRY_INTEGER(_name_, u64, U64, _val_)
 +
 +#define PROPERTY_ENTRY_STRING(_name_, _val_)		\
 +(struct property_entry) {				\
 +	.name = _name_,					\
 +	.length = sizeof(_val_),			\
 +	.type = DEV_PROP_STRING,			\
 +	{ .value = { .str = _val_ } },			\
 +}
++=======
+ #define PROPERTY_ENTRY_U8(_name_, _val_)				\
+ 	__PROPERTY_ENTRY_ELEMENT(_name_, u8_data, U8, _val_)
+ #define PROPERTY_ENTRY_U16(_name_, _val_)				\
+ 	__PROPERTY_ENTRY_ELEMENT(_name_, u16_data, U16, _val_)
+ #define PROPERTY_ENTRY_U32(_name_, _val_)				\
+ 	__PROPERTY_ENTRY_ELEMENT(_name_, u32_data, U32, _val_)
+ #define PROPERTY_ENTRY_U64(_name_, _val_)				\
+ 	__PROPERTY_ENTRY_ELEMENT(_name_, u64_data, U64, _val_)
+ #define PROPERTY_ENTRY_STRING(_name_, _val_)				\
+ 	__PROPERTY_ENTRY_ELEMENT(_name_, str, STRING, _val_)
++>>>>>>> daeba9bf62e6 (software node: unify PROPERTY_ENTRY_XXX macros)
  
  #define PROPERTY_ENTRY_BOOL(_name_)		\
  (struct property_entry) {			\
* Unmerged path include/linux/property.h
