ASoC: SOF: IPC: make sof_ipc_window monosized

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: SOF: IPC: make sof_ipc_window monosized (Jaroslav Kysela) [1869536]
Rebuild_FUZZ: 93.75%
commit-author Karol Trzcinski <karolx.trzcinski@linux.intel.com>
commit 76ab546cd8f0c64d4603b2faad4558c5b670561e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/76ab546c.failed

This step is needed to add possibility to pack sof_ipc_window inside
another one in used FW build tools - for example in extended manifest.
Structure reusability leads to easy parsing function reuse, so source
code is shorter and easier to maintain.

Using structures with constant size is less tricky and properly
supported by each toolchain by contrast to variable size elements.

This is minor ABI change - backward compatibility is kept.

	Signed-off-by: Karol Trzcinski <karolx.trzcinski@linux.intel.com>
	Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
	Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Link: https://lore.kernel.org/r/20200825235854.1588034-2-ranjani.sridharan@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 76ab546cd8f0c64d4603b2faad4558c5b670561e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/loader.c
diff --cc sound/soc/sof/loader.c
index d32bfa0aad69,25dc28ebafb7..000000000000
--- a/sound/soc/sof/loader.c
+++ b/sound/soc/sof/loader.c
@@@ -20,21 -20,20 +20,25 @@@ static int get_ext_windows(struct snd_s
  {
  	const struct sof_ipc_window *w =
  		container_of(ext_hdr, struct sof_ipc_window, ext_hdr);
- 	size_t w_size = struct_size(w, window, w->num_windows);
  
 -	if (w->num_windows == 0 || w->num_windows > SOF_IPC_MAX_ELEMS)
 -		return -EINVAL;
 -
  	if (sdev->info_window) {
++<<<<<<< HEAD
 +		if (memcmp(sdev->info_window, w, w_size)) {
 +			dev_err(sdev->dev, "error: mistmatch between window descriptor from extended manifest and mailbox");
++=======
+ 		if (memcmp(sdev->info_window, w, ext_hdr->hdr.size)) {
+ 			dev_err(sdev->dev, "error: mismatch between window descriptor from extended manifest and mailbox");
++>>>>>>> 76ab546cd8f0 (ASoC: SOF: IPC: make sof_ipc_window monosized)
  			return -EINVAL;
  		}
  		return 0;
  	}
  
 +	if (w->num_windows == 0 || w->num_windows > SOF_IPC_MAX_ELEMS)
 +		return -EINVAL;
 +
  	/* keep a local copy of the data */
- 	sdev->info_window = kmemdup(w, w_size, GFP_KERNEL);
+ 	sdev->info_window = kmemdup(w, ext_hdr->hdr.size, GFP_KERNEL);
  	if (!sdev->info_window)
  		return -ENOMEM;
  
diff --git a/include/sound/sof/info.h b/include/sound/sof/info.h
index 5a55ba8b7e56..313e3e70c630 100644
--- a/include/sound/sof/info.h
+++ b/include/sound/sof/info.h
@@ -99,7 +99,7 @@ struct sof_ipc_window_elem {
 struct sof_ipc_window {
 	struct sof_ipc_ext_data_hdr ext_hdr;
 	uint32_t num_windows;
-	struct sof_ipc_window_elem window[];
+	struct sof_ipc_window_elem window[SOF_IPC_MAX_ELEMS];
 }  __packed;
 
 struct sof_ipc_cc_version {
diff --git a/include/uapi/sound/sof/abi.h b/include/uapi/sound/sof/abi.h
index d54be303090f..6af32f82fb99 100644
--- a/include/uapi/sound/sof/abi.h
+++ b/include/uapi/sound/sof/abi.h
@@ -26,7 +26,7 @@
 
 /* SOF ABI version major, minor and patch numbers */
 #define SOF_ABI_MAJOR 3
-#define SOF_ABI_MINOR 16
+#define SOF_ABI_MINOR 17
 #define SOF_ABI_PATCH 0
 
 /* SOF ABI version number. Format within 32bit word is MMmmmppp */
* Unmerged path sound/soc/sof/loader.c
