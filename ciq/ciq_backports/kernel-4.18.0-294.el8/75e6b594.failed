cfg80211: invert HE BSS color 'disabled' to 'enabled'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit 75e6b594bbaeeb3f8287a2e6eb8811384b8c7195
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/75e6b594.failed

This is in fact 'disabled' in the spec, but there it's in a
place where that actually makes sense. In our internal data
structures, it doesn't really make sense, and in fact the
previous commit just fixed a bug in that area.

Make this safer by inverting the polarity from 'disabled' to
'enabled'.

Link: https://lore.kernel.org/r/20200730130051.5d8399545bd9.Ie62fdcd1a6cd9c969315bc124084a494ca6c8df3@changeid
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 75e6b594bbaeeb3f8287a2e6eb8811384b8c7195)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/cfg.c
#	net/mac80211/mlme.c
diff --cc net/mac80211/cfg.c
index 694f23967997,24e9e00decb8..000000000000
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@@ -1011,8 -1009,19 +1011,22 @@@ static int ieee80211_start_ap(struct wi
  	prev_beacon_int = sdata->vif.bss_conf.beacon_int;
  	sdata->vif.bss_conf.beacon_int = params->beacon_interval;
  
 -	if (params->he_cap && params->he_oper) {
 +	if (params->he_cap)
  		sdata->vif.bss_conf.he_support = true;
++<<<<<<< HEAD
++=======
+ 		sdata->vif.bss_conf.htc_trig_based_pkt_ext =
+ 			le32_get_bits(params->he_oper->he_oper_params,
+ 			      IEEE80211_HE_OPERATION_DFLT_PE_DURATION_MASK);
+ 		sdata->vif.bss_conf.frame_time_rts_th =
+ 			le32_get_bits(params->he_oper->he_oper_params,
+ 			      IEEE80211_HE_OPERATION_RTS_THRESHOLD_MASK);
+ 		changed |= BSS_CHANGED_HE_OBSS_PD;
+ 
+ 		if (params->he_bss_color.enabled)
+ 			changed |= BSS_CHANGED_HE_BSS_COLOR;
+ 	}
++>>>>>>> 75e6b594bbae (cfg80211: invert HE BSS color 'disabled' to 'enabled')
  
  	mutex_lock(&local->mtx);
  	err = ieee80211_vif_use_channel(sdata, &params->chandef,
diff --cc net/mac80211/mlme.c
index e43d4a5759de,839d0367446c..000000000000
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@@ -3452,10 -3460,12 +3452,19 @@@ static bool ieee80211_assoc_success(str
  		bss_conf->he_bss_color.partial =
  			le32_get_bits(elems->he_operation->he_oper_params,
  				      IEEE80211_HE_OPERATION_PARTIAL_BSS_COLOR);
++<<<<<<< HEAD
 +		bss_conf->he_bss_color.disabled =
 +			le32_get_bits(elems->he_operation->he_oper_params,
 +				      IEEE80211_HE_OPERATION_BSS_COLOR_DISABLED);
 +		changed |= BSS_CHANGED_HE_BSS_COLOR;
++=======
+ 		bss_conf->he_bss_color.enabled =
+ 			!le32_get_bits(elems->he_operation->he_oper_params,
+ 				       IEEE80211_HE_OPERATION_BSS_COLOR_DISABLED);
+ 
+ 		if (bss_conf->he_bss_color.enabled)
+ 			changed |= BSS_CHANGED_HE_BSS_COLOR;
++>>>>>>> 75e6b594bbae (cfg80211: invert HE BSS color 'disabled' to 'enabled')
  
  		bss_conf->htc_trig_based_pkt_ext =
  			le32_get_bits(elems->he_operation->he_oper_params,
diff --git a/drivers/net/wireless/ath/ath11k/mac.c b/drivers/net/wireless/ath/ath11k/mac.c
index 07d3e031c75a..94ae2b9ea663 100644
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -2072,7 +2072,7 @@ static void ath11k_mac_op_bss_info_changed(struct ieee80211_hw *hw,
 			ret = ath11k_wmi_send_obss_color_collision_cfg_cmd(
 				ar, arvif->vdev_id, info->he_bss_color.color,
 				ATH11K_BSS_COLOR_COLLISION_DETECTION_AP_PERIOD_MS,
-				!info->he_bss_color.disabled);
+				info->he_bss_color.enabled);
 			if (ret)
 				ath11k_warn(ar->ab, "failed to set bss color collision on vdev %i: %d\n",
 					    arvif->vdev_id,  ret);
diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index c3ebf3602ab5..9cd8dcdc2959 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -267,12 +267,12 @@ struct ieee80211_he_obss_pd {
  * struct cfg80211_he_bss_color - AP settings for BSS coloring
  *
  * @color: the current color.
- * @disabled: is the feature disabled.
+ * @enabled: HE BSS color is used
  * @partial: define the AID equation.
  */
 struct cfg80211_he_bss_color {
 	u8 color;
-	bool disabled;
+	bool enabled;
 	bool partial;
 };
 
* Unmerged path net/mac80211/cfg.c
* Unmerged path net/mac80211/mlme.c
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 0deb4c5c5e4f..4c335c4f2f25 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -4715,8 +4715,8 @@ static int nl80211_parse_he_bss_color(struct nlattr *attrs,
 
 	he_bss_color->color =
 		nla_get_u8(tb[NL80211_HE_BSS_COLOR_ATTR_COLOR]);
-	he_bss_color->disabled =
-		nla_get_flag(tb[NL80211_HE_BSS_COLOR_ATTR_DISABLED]);
+	he_bss_color->enabled =
+		!nla_get_flag(tb[NL80211_HE_BSS_COLOR_ATTR_DISABLED]);
 	he_bss_color->partial =
 		nla_get_flag(tb[NL80211_HE_BSS_COLOR_ATTR_PARTIAL]);
 
