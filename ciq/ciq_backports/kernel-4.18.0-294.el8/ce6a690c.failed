net: atlantic: A2: EEE support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Nikita Danilov <ndanilov@marvell.com>
commit ce6a690ccc99a7ece8b061d88d9457ddb556a749
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ce6a690c.failed

This patch adds EEE support on A2.

	Signed-off-by: Nikita Danilov <ndanilov@marvell.com>
Co-developed-by: Igor Russkikh <irusskikh@marvell.com>
	Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ce6a690ccc99a7ece8b061d88d9457ddb556a749)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/aq_common.h
#	drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
#	drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils_fw.c
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_common.h
index ce5211d234bb,23b2d390fcdd..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_common.h
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_common.h
@@@ -54,16 -51,26 +54,29 @@@
  #define AQ_HWREV_1	1
  #define AQ_HWREV_2	2
  
 -#define AQ_NIC_RATE_10G		BIT(0)
 -#define AQ_NIC_RATE_5G		BIT(1)
 -#define AQ_NIC_RATE_5GSR	BIT(2)
 -#define AQ_NIC_RATE_2G5		BIT(3)
 -#define AQ_NIC_RATE_1G		BIT(4)
 -#define AQ_NIC_RATE_100M	BIT(5)
 -#define AQ_NIC_RATE_10M		BIT(6)
 -#define AQ_NIC_RATE_1G_HALF	BIT(7)
 -#define AQ_NIC_RATE_100M_HALF	BIT(8)
 -#define AQ_NIC_RATE_10M_HALF	BIT(9)
 +#define AQ_NIC_RATE_10G        BIT(0)
 +#define AQ_NIC_RATE_5G         BIT(1)
 +#define AQ_NIC_RATE_5GSR       BIT(2)
 +#define AQ_NIC_RATE_2GS        BIT(3)
 +#define AQ_NIC_RATE_1G         BIT(4)
 +#define AQ_NIC_RATE_100M       BIT(5)
  
++<<<<<<< HEAD
 +#define AQ_NIC_RATE_EEE_10G	BIT(6)
 +#define AQ_NIC_RATE_EEE_5G	BIT(7)
 +#define AQ_NIC_RATE_EEE_2GS	BIT(8)
 +#define AQ_NIC_RATE_EEE_1G	BIT(9)
++=======
+ #define AQ_NIC_RATE_EEE_10G	BIT(10)
+ #define AQ_NIC_RATE_EEE_5G	BIT(11)
+ #define AQ_NIC_RATE_EEE_2G5	BIT(12)
+ #define AQ_NIC_RATE_EEE_1G	BIT(13)
+ #define AQ_NIC_RATE_EEE_100M	BIT(14)
+ #define AQ_NIC_RATE_EEE_MSK     (AQ_NIC_RATE_EEE_10G |\
+ 				 AQ_NIC_RATE_EEE_5G |\
+ 				 AQ_NIC_RATE_EEE_2G5 |\
+ 				 AQ_NIC_RATE_EEE_1G |\
+ 				 AQ_NIC_RATE_EEE_100M)
++>>>>>>> ce6a690ccc99 (net: atlantic: A2: EEE support)
  
  #endif /* AQ_COMMON_H */
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
index a64230722f5c,8225187eeef2..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
@@@ -1,10 -1,8 +1,18 @@@
++<<<<<<< HEAD
 +/*
 + * aQuantia Corporation Network Driver
 + * Copyright (C) 2014-2017 aQuantia Corporation. All rights reserved
 + *
 + * This program is free software; you can redistribute it and/or modify it
 + * under the terms and conditions of the GNU General Public License,
 + * version 2, as published by the Free Software Foundation.
++=======
+ // SPDX-License-Identifier: GPL-2.0-only
+ /* Atlantic Network Driver
+  *
+  * Copyright (C) 2014-2019 aQuantia Corporation
+  * Copyright (C) 2019-2020 Marvell International Ltd.
++>>>>>>> ce6a690ccc99 (net: atlantic: A2: EEE support)
   */
  
  /* File aq_ethtool.c: Definition of ethertool related functions. */
@@@ -369,7 -583,36 +377,40 @@@ static int aq_ethtool_set_wol(struct ne
  	return err;
  }
  
++<<<<<<< HEAD
 +static enum hw_atl_fw2x_rate eee_mask_to_ethtool_mask(u32 speed)
++=======
+ static int aq_ethtool_get_ts_info(struct net_device *ndev,
+ 				  struct ethtool_ts_info *info)
+ {
+ 	struct aq_nic_s *aq_nic = netdev_priv(ndev);
+ 
+ 	ethtool_op_get_ts_info(ndev, info);
+ 
+ 	if (!aq_nic->aq_ptp)
+ 		return 0;
+ 
+ 	info->so_timestamping |=
+ 		SOF_TIMESTAMPING_TX_HARDWARE |
+ 		SOF_TIMESTAMPING_RX_HARDWARE |
+ 		SOF_TIMESTAMPING_RAW_HARDWARE;
+ 
+ 	info->tx_types = BIT(HWTSTAMP_TX_OFF) |
+ 			 BIT(HWTSTAMP_TX_ON);
+ 
+ 	info->rx_filters = BIT(HWTSTAMP_FILTER_NONE);
+ 
+ 	info->rx_filters |= BIT(HWTSTAMP_FILTER_PTP_V2_L4_EVENT) |
+ 			    BIT(HWTSTAMP_FILTER_PTP_V2_L2_EVENT) |
+ 			    BIT(HWTSTAMP_FILTER_PTP_V2_EVENT);
+ 
+ 	info->phc_index = ptp_clock_index(aq_ptp_get_ptp_clock(aq_nic->aq_ptp));
+ 
+ 	return 0;
+ }
+ 
+ static u32 eee_mask_to_ethtool_mask(u32 speed)
++>>>>>>> ce6a690ccc99 (net: atlantic: A2: EEE support)
  {
  	u32 rate = 0;
  
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils_fw.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_common.h
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils_fw.c
