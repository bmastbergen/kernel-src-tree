KVM: x86: report sev_pin_memory errors with PTR_ERR

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit a8d908b5873cad212b0f74569f5a23b804e694ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a8d908b5.failed

Callers of sev_pin_memory() treat
NULL differently:

sev_launch_secret()/svm_register_enc_region() return -ENOMEM
sev_dbg_crypt() returns -EFAULT.

Switching to ERR_PTR() preserves the error and enables cleaner reporting of
different kinds of failures.

	Suggested-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit a8d908b5873cad212b0f74569f5a23b804e694ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm/sev.c
diff --cc arch/x86/kvm/svm/sev.c
index 9693db1af57c,2b4916ffa906..000000000000
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@@ -346,10 -345,10 +346,10 @@@ static struct page **sev_pin_memory(str
  		pages = kmalloc(size, GFP_KERNEL_ACCOUNT);
  
  	if (!pages)
- 		return NULL;
+ 		return ERR_PTR(-ENOMEM);
  
  	/* Pin the user virtual address. */
 -	npinned = pin_user_pages_fast(uaddr, npages, write ? FOLL_WRITE : 0, pages);
 +	npinned = get_user_pages_fast(uaddr, npages, write ? FOLL_WRITE : 0, pages);
  	if (npinned != npages) {
  		pr_err("SEV: Failure locking %lu pages.\n", npages);
  		goto err;
@@@ -361,11 -360,13 +361,18 @@@
  	return pages;
  
  err:
++<<<<<<< HEAD
 +	if (npinned > 0)
 +		release_pages(pages, npinned);
++=======
+ 	if (npinned > 0) {
+ 		unpin_user_pages(pages, npinned);
+ 		npinned = -ENOMEM;
+ 	}
++>>>>>>> a8d908b5873c (KVM: x86: report sev_pin_memory errors with PTR_ERR)
  
  	kvfree(pages);
- 	return NULL;
+ 	return ERR_PTR(npinned);
  }
  
  static void sev_unpin_memory(struct kvm *kvm, struct page **pages,
* Unmerged path arch/x86/kvm/svm/sev.c
