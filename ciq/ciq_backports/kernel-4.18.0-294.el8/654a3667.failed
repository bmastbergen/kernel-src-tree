block: return NULL in blk_alloc_queue() on error

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
commit 654a3667df364f778b9b5bcdfb32e545aceb6a51
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/654a3667.failed

This patch fixes follwoing warning:

block/blk-core.c: In function ‘blk_alloc_queue’:
block/blk-core.c:558:10: warning: returning ‘int’ from a function with return type ‘struct request_queue *’ makes pointer from integer without a cast [-Wint-conversion]
   return -EINVAL;

Fixes: 3d745ea5b095a ("block: simplify queue allocation")
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 654a3667df364f778b9b5bcdfb32e545aceb6a51)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-core.c
diff --cc block/blk-core.c
index 18766cd76af5,7e4a1da0715e..000000000000
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@@ -566,16 -549,23 +566,35 @@@ fail_q
  	kmem_cache_free(blk_requestq_cachep, q);
  	return NULL;
  }
 +EXPORT_SYMBOL(blk_alloc_queue_node);
  
++<<<<<<< HEAD
 +/**
 + * blk_get_queue - increment the request_queue refcount
 + * @q: the request_queue structure to increment the refcount for
 + *
 + * Increment the refcount of the request_queue kobject.
 + *
 + * Context: Any context.
 + */
++=======
+ struct request_queue *blk_alloc_queue(make_request_fn make_request, int node_id)
+ {
+ 	struct request_queue *q;
+ 
+ 	if (WARN_ON_ONCE(!make_request))
+ 		return NULL;
+ 
+ 	q = __blk_alloc_queue(node_id);
+ 	if (!q)
+ 		return NULL;
+ 	q->make_request_fn = make_request;
+ 	q->nr_requests = BLKDEV_MAX_RQ;
+ 	return q;
+ }
+ EXPORT_SYMBOL(blk_alloc_queue);
+ 
++>>>>>>> 654a3667df36 (block: return NULL in blk_alloc_queue() on error)
  bool blk_get_queue(struct request_queue *q)
  {
  	if (likely(!blk_queue_dying(q))) {
* Unmerged path block/blk-core.c
