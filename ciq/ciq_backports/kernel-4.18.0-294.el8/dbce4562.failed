powerpc/numa: Limit possible nodes to within num_possible_nodes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Srikar Dronamraju <srikar@linux.vnet.ibm.com>
commit dbce456280857f329af9069af5e48a9b6ebad146
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/dbce4562.failed

MAX_NUMNODES is a theoretical maximum number of nodes thats is
supported by the kernel. Device tree properties exposes the number of
possible nodes on the current platform. The kernel would detected this
and would use it for most of its resource allocations. If the platform
now increases the nodes to over what was already exposed, then it may
lead to inconsistencies. Hence limit it to the already exposed nodes.

	Suggested-by: Nathan Lynch <nathanl@linux.ibm.com>
	Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20200724105809.24733-1-srikar@linux.vnet.ibm.com
(cherry picked from commit dbce456280857f329af9069af5e48a9b6ebad146)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/mm/numa.c
diff --cc arch/powerpc/mm/numa.c
index c09828e005a2,92938393fec6..000000000000
--- a/arch/powerpc/mm/numa.c
+++ b/arch/powerpc/mm/numa.c
@@@ -240,8 -236,8 +241,13 @@@ static int associativity_to_nid(const _
  		nid = of_read_number(&associativity[min_common_depth], 1);
  
  	/* POWER4 LPAR uses 0xffff as invalid node */
++<<<<<<< HEAD
 +	if (nid == 0xffff || nid >= MAX_NUMNODES)
 +		nid = -1;
++=======
+ 	if (nid == 0xffff || nid >= nr_node_ids)
+ 		nid = NUMA_NO_NODE;
++>>>>>>> dbce45628085 (powerpc/numa: Limit possible nodes to within num_possible_nodes)
  
  	if (nid > 0 &&
  		of_read_number(associativity, 1) >= distance_ref_points_depth) {
* Unmerged path arch/powerpc/mm/numa.c
