x86/cpu_entry_area: Cleanup setup functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 881a463cf21dbf83aab2cf6c9a359f34f88c2491
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/881a463c.failed

No point in retrieving the entry area pointer over and over. Do it once
and use unsigned int for 'cpu' everywhere.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: x86-ml <x86@kernel.org>
Link: https://lkml.kernel.org/r/20190414160144.419653165@linutronix.de
(cherry picked from commit 881a463cf21dbf83aab2cf6c9a359f34f88c2491)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/mm/cpu_entry_area.c
diff --cc arch/x86/mm/cpu_entry_area.c
index 26fa2a5a8715,c2a54f75d335..000000000000
--- a/arch/x86/mm/cpu_entry_area.c
+++ b/arch/x86/mm/cpu_entry_area.c
@@@ -128,16 -128,7 +128,20 @@@ static void __init setup_cpu_entry_area
  	BUILD_BUG_ON((offsetof(struct tss_struct, x86_tss) ^
  		      offsetofend(struct tss_struct, x86_tss)) & PAGE_MASK);
  	BUILD_BUG_ON(sizeof(struct tss_struct) % PAGE_SIZE != 0);
++<<<<<<< HEAD
 +	/*
 +	 * VMX changes the host TR limit to 0x67 after a VM exit. This is
 +	 * okay, since 0x67 covers the size of struct x86_hw_tss. Make sure
 +	 * that this is correct.
 +	 */
 +	BUILD_BUG_ON(offsetof(struct tss_struct, x86_tss) != 0);
 +	BUILD_BUG_ON(sizeof(struct x86_hw_tss) != 0x68);
 +
 +	cea_map_percpu_pages(&get_cpu_entry_area(cpu)->tss,
 +			     &per_cpu(cpu_tss_rw, cpu),
++=======
+ 	cea_map_percpu_pages(&cea->tss, &per_cpu(cpu_tss_rw, cpu),
++>>>>>>> 881a463cf21d (x86/cpu_entry_area: Cleanup setup functions)
  			     sizeof(struct tss_struct) / PAGE_SIZE, tss_prot);
  
  #ifdef CONFIG_X86_32
* Unmerged path arch/x86/mm/cpu_entry_area.c
