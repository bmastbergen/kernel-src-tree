net: phylink: rename 'ops' to 'mac_ops'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Russell King <rmk+kernel@armlinux.org.uk>
commit e7765d634aaa9dd5db3cb59155269ef6c18d4592
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/e7765d63.failed

Rename the bland 'ops' member of struct phylink to be a more
descriptive 'mac_ops' - this is necessary as we're about to introduce
another set of operations.

	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e7765d634aaa9dd5db3cb59155269ef6c18d4592)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phylink.c
diff --cc drivers/net/phy/phylink.c
index 203fde8d6f51,e2f30fd4d235..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -428,12 -429,12 +428,12 @@@ static void phylink_mac_an_restart(stru
  {
  	if (pl->link_config.an_enabled &&
  	    phy_interface_mode_is_8023z(pl->link_config.interface))
- 		pl->ops->mac_an_restart(pl->config);
+ 		pl->mac_ops->mac_an_restart(pl->config);
  }
  
 -static void phylink_mac_pcs_get_state(struct phylink *pl,
 -				      struct phylink_link_state *state)
 +static int phylink_get_mac_state(struct phylink *pl, struct phylink_link_state *state)
  {
 +
  	linkmode_copy(state->advertising, pl->link_config.advertising);
  	linkmode_zero(state->lp_advertising);
  	state->interface = pl->link_config.interface;
@@@ -444,7 -445,7 +444,11 @@@
  	state->an_complete = 0;
  	state->link = 1;
  
++<<<<<<< HEAD
 +	return pl->ops->mac_link_state(pl->config, state);
++=======
+ 	pl->mac_ops->mac_pcs_get_state(pl->config, state);
++>>>>>>> e7765d634aaa (net: phylink: rename 'ops' to 'mac_ops')
  }
  
  /* The fixed state is... fixed except for the link state,
@@@ -511,8 -512,11 +515,16 @@@ static void phylink_mac_link_up(struct 
  	struct net_device *ndev = pl->netdev;
  
  	pl->cur_interface = link_state.interface;
++<<<<<<< HEAD
 +	pl->ops->mac_link_up(pl->config, pl->link_an_mode,
 +			     pl->cur_interface, pl->phydev);
++=======
+ 	pl->mac_ops->mac_link_up(pl->config, pl->phydev,
+ 				 pl->cur_link_an_mode, pl->cur_interface,
+ 				 link_state.speed, link_state.duplex,
+ 				 !!(link_state.pause & MLO_PAUSE_TX),
+ 				 !!(link_state.pause & MLO_PAUSE_RX));
++>>>>>>> e7765d634aaa (net: phylink: rename 'ops' to 'mac_ops')
  
  	if (ndev)
  		netif_carrier_on(ndev);
* Unmerged path drivers/net/phy/phylink.c
diff --git a/include/linux/phylink.h b/include/linux/phylink.h
index ac0a5167c2ac..e296c3368ae5 100644
--- a/include/linux/phylink.h
+++ b/include/linux/phylink.h
@@ -244,7 +244,7 @@ void mac_link_up(struct phylink_config *config, unsigned int mode,
 
 struct phylink *phylink_create(struct phylink_config *, struct fwnode_handle *,
 			       phy_interface_t iface,
-			       const struct phylink_mac_ops *ops);
+			       const struct phylink_mac_ops *mac_ops);
 void phylink_destroy(struct phylink *);
 
 int phylink_connect_phy(struct phylink *, struct phy_device *);
