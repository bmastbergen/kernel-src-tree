iwlwifi: mvm: responder: allow to set only the HLTK for an associated station

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Avraham Stern <avraham.stern@intel.com>
commit 68ad24742f174735d24dc5b60653c80140d249b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/68ad2474.failed

For secure ranging with an associated station, the driver only needs
to set the HLTK. There is no need to add an internal station for PMF
since the FW will use the existing station which already has the TK
installed.

	Signed-off-by: Avraham Stern <avraham.stern@intel.com>
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
Link: https://lore.kernel.org/r/iwlwifi.20200930161256.fcebaa5c9bc8.Ic584cc47fee717d0bdb43965798dbdf45d89910a@changeid
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit 68ad24742f174735d24dc5b60653c80140d249b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
diff --cc drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
index 2c2ec2538d37,c794612c41d5..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
@@@ -219,22 -322,46 +219,60 @@@ int iwl_mvm_ftm_respoder_add_pasn_sta(s
  				      u8 *hltk, u32 hltk_len)
  {
  	int ret;
++<<<<<<< HEAD
 +	struct iwl_mvm_pasn_sta *sta;
 +
 +	lockdep_assert_held(&mvm->mutex);
 +
 +	sta = kmalloc(sizeof(*sta), GFP_KERNEL);
 +	if (!sta)
 +		return -ENOBUFS;
++=======
+ 	struct iwl_mvm_pasn_sta *sta = NULL;
+ 	struct iwl_mvm_pasn_hltk_data hltk_data = {
+ 		.addr = addr,
+ 		.hltk = hltk,
+ 	};
+ 	u8 cmd_ver = iwl_fw_lookup_cmd_ver(mvm->fw, LOCATION_GROUP,
+ 					   TOF_RESPONDER_DYN_CONFIG_CMD, 2);
  
- 	ret = iwl_mvm_add_pasn_sta(mvm, vif, &sta->int_sta, addr, cipher, tk,
- 				   tk_len);
- 	if (ret) {
- 		kfree(sta);
- 		return ret;
+ 	lockdep_assert_held(&mvm->mutex);
+ 
+ 	if (cmd_ver < 3) {
+ 		IWL_ERR(mvm, "Adding PASN station not supported by FW\n");
+ 		return -ENOTSUPP;
+ 	}
+ 
+ 	hltk_data.cipher = iwl_mvm_cipher_to_location_cipher(cipher);
+ 	if (hltk_data.cipher == IWL_LOCATION_CIPHER_INVALID) {
+ 		IWL_ERR(mvm, "invalid cipher: %u\n", cipher);
+ 		return -EINVAL;
+ 	}
+ 
+ 	if (tk && tk_len) {
+ 		sta = kzalloc(sizeof(*sta), GFP_KERNEL);
+ 		if (!sta)
+ 			return -ENOBUFS;
++>>>>>>> 68ad24742f17 (iwlwifi: mvm: responder: allow to set only the HLTK for an associated station)
+ 
+ 		ret = iwl_mvm_add_pasn_sta(mvm, vif, &sta->int_sta, addr,
+ 					   cipher, tk, tk_len);
+ 		if (ret) {
+ 			kfree(sta);
+ 			return ret;
+ 		}
  	}
  
++<<<<<<< HEAD
 +	// TODO: set the HLTK to fw
++=======
+ 	ret = iwl_mvm_ftm_responder_dyn_cfg_v3(mvm, vif, NULL, &hltk_data);
+ 	if (ret) {
+ 		if (sta)
+ 			iwl_mvm_resp_del_pasn_sta(mvm, vif, sta);
+ 		return ret;
+ 	}
++>>>>>>> 68ad24742f17 (iwlwifi: mvm: responder: allow to set only the HLTK for an associated station)
  
  	memcpy(sta->addr, addr, ETH_ALEN);
  	list_add_tail(&sta->list, &mvm->resp_pasn_list);
* Unmerged path drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
