kprobes: Prohibit probing on lockdep functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Masami Hiramatsu <mhiramat@kernel.org>
commit 2f43c6022d84b2f562623a7023f49f1431e50747
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2f43c602.failed

Some lockdep functions can be involved in breakpoint handling
and probing on those functions can cause a breakpoint recursion.

Prohibit probing on those functions by blacklist.

	Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andrea Righi <righi.andrea@gmail.com>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/154998810578.31052.1680977921449292812.stgit@devbox
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 2f43c6022d84b2f562623a7023f49f1431e50747)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/locking/lockdep.c
diff --cc kernel/locking/lockdep.c
index 5648ed245897,bc35a54ae3d4..000000000000
--- a/kernel/locking/lockdep.c
+++ b/kernel/locking/lockdep.c
@@@ -51,7 -50,7 +51,11 @@@
  #include <linux/random.h>
  #include <linux/jhash.h>
  #include <linux/nmi.h>
++<<<<<<< HEAD
 +#include <linux/rcupdate.h>
++=======
+ #include <linux/kprobes.h>
++>>>>>>> 2f43c6022d84 (kprobes: Prohibit probing on lockdep functions)
  
  #include <asm/sections.h>
  
@@@ -3678,13 -2815,7 +3682,17 @@@ __visible void trace_hardirqs_on_caller
  	__trace_hardirqs_on_caller(ip);
  	current->lockdep_recursion = 0;
  }
++<<<<<<< HEAD
 +EXPORT_SYMBOL(trace_hardirqs_on_caller);
 +
 +void trace_hardirqs_on(void)
 +{
 +	trace_hardirqs_on_caller(CALLER_ADDR0);
 +}
 +EXPORT_SYMBOL(trace_hardirqs_on);
++=======
+ NOKPROBE_SYMBOL(lockdep_hardirqs_on);
++>>>>>>> 2f43c6022d84 (kprobes: Prohibit probing on lockdep functions)
  
  /*
   * Hardirqs were disabled:
@@@ -3716,13 -2845,7 +3724,17 @@@ __visible void trace_hardirqs_off_calle
  	} else
  		debug_atomic_inc(redundant_hardirqs_off);
  }
++<<<<<<< HEAD
 +EXPORT_SYMBOL(trace_hardirqs_off_caller);
 +
 +void trace_hardirqs_off(void)
 +{
 +	trace_hardirqs_off_caller(CALLER_ADDR0);
 +}
 +EXPORT_SYMBOL(trace_hardirqs_off);
++=======
+ NOKPROBE_SYMBOL(lockdep_hardirqs_off);
++>>>>>>> 2f43c6022d84 (kprobes: Prohibit probing on lockdep functions)
  
  /*
   * Softirqs will be enabled:
* Unmerged path kernel/locking/lockdep.c
