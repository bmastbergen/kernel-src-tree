rcu/tree: Simplify KFREE_BULK_MAX_ENTR macro

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Uladzislau Rezki (Sony) <urezki@gmail.com>
commit 3af84862817403d317dc33312e7a88d76e79401a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/3af84862.failed

We can simplify KFREE_BULK_MAX_ENTR macro and get rid of
magic numbers which were used to make the structure to be
exactly one page.

	Suggested-by: Boqun Feng <boqun.feng@gmail.com>
	Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
	Signed-off-by: Uladzislau Rezki (Sony) <urezki@gmail.com>
	Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit 3af84862817403d317dc33312e7a88d76e79401a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/rcu/tree.c
diff --cc kernel/rcu/tree.c
index 4aa7b6bbcde6,bcdc06364426..000000000000
--- a/kernel/rcu/tree.c
+++ b/kernel/rcu/tree.c
@@@ -2682,6 -2958,26 +2682,29 @@@ EXPORT_SYMBOL_GPL(call_rcu)
  #define KFREE_DRAIN_JIFFIES (HZ / 50)
  #define KFREE_N_BATCHES 2
  
++<<<<<<< HEAD
++=======
+ /**
+  * struct kfree_rcu_bulk_data - single block to store kfree_rcu() pointers
+  * @nr_records: Number of active pointers in the array
+  * @records: Array of the kfree_rcu() pointers
+  * @next: Next bulk object in the block chain
+  */
+ struct kfree_rcu_bulk_data {
+ 	unsigned long nr_records;
+ 	struct kfree_rcu_bulk_data *next;
+ 	void *records[];
+ };
+ 
+ /*
+  * This macro defines how many entries the "records" array
+  * will contain. It is based on the fact that the size of
+  * kfree_rcu_bulk_data structure becomes exactly one page.
+  */
+ #define KFREE_BULK_MAX_ENTR \
+ 	((PAGE_SIZE - sizeof(struct kfree_rcu_bulk_data)) / sizeof(void *))
+ 
++>>>>>>> 3af848628174 (rcu/tree: Simplify KFREE_BULK_MAX_ENTR macro)
  /**
   * struct kfree_rcu_cpu_work - single batch of kfree_rcu() requests
   * @rcu_work: Let queue_rcu_work() invoke workqueue handler after grace period
* Unmerged path kernel/rcu/tree.c
