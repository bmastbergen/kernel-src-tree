x86/boot/compressed/64: Unmap GHCB page before booting the kernel

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [x86] boot/compressed/64: Unmap GHCB page before booting the kernel (Vitaly Kuznetsov) [1868080]
Rebuild_FUZZ: 96.83%
commit-author Joerg Roedel <jroedel@suse.de>
commit 69add17a7c1992593a7cf775a66e0256ad4b3ef8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/69add17a.failed

Force a page-fault on any further accesses to the GHCB page when they
shouldn't happen anymore. This will catch any bugs where a #VC exception
is raised even though none is expected anymore.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20200907131613.12703-25-joro@8bytes.org
(cherry picked from commit 69add17a7c1992593a7cf775a66e0256ad4b3ef8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/ident_map_64.c
#	arch/x86/boot/compressed/misc.h
#	arch/x86/boot/compressed/sev-es.c
diff --cc arch/x86/boot/compressed/misc.h
index d55a1ca4f95b,c0e0ffeee50a..000000000000
--- a/arch/x86/boot/compressed/misc.h
+++ b/arch/x86/boot/compressed/misc.h
@@@ -94,17 -98,10 +94,23 @@@ static inline void choose_random_locati
  #endif
  
  #ifdef CONFIG_X86_64
++<<<<<<< HEAD
 +void initialize_identity_maps(void);
 +void add_identity_map(unsigned long start, unsigned long size);
 +void finalize_identity_maps(void);
++=======
+ extern int set_page_decrypted(unsigned long address);
+ extern int set_page_encrypted(unsigned long address);
+ extern int set_page_non_present(unsigned long address);
++>>>>>>> 69add17a7c19 (x86/boot/compressed/64: Unmap GHCB page before booting the kernel)
  extern unsigned char _pgtable[];
 +#else
 +static inline void initialize_identity_maps(void)
 +{ }
 +static inline void add_identity_map(unsigned long start, unsigned long size)
 +{ }
 +static inline void finalize_identity_maps(void)
 +{ }
  #endif
  
  #ifdef CONFIG_EARLY_PRINTK
@@@ -119,6 -116,17 +125,20 @@@ static inline void console_init(void
  
  void set_sev_encryption_mask(void);
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_AMD_MEM_ENCRYPT
+ void sev_es_shutdown_ghcb(void);
+ extern bool sev_es_check_ghcb_fault(unsigned long address);
+ #else
+ static inline void sev_es_shutdown_ghcb(void) { }
+ static inline bool sev_es_check_ghcb_fault(unsigned long address)
+ {
+ 	return false;
+ }
+ #endif
+ 
++>>>>>>> 69add17a7c19 (x86/boot/compressed/64: Unmap GHCB page before booting the kernel)
  /* acpi.c */
  #ifdef CONFIG_ACPI
  acpi_physical_address get_rsdp_addr(void);
* Unmerged path arch/x86/boot/compressed/ident_map_64.c
* Unmerged path arch/x86/boot/compressed/sev-es.c
* Unmerged path arch/x86/boot/compressed/ident_map_64.c
* Unmerged path arch/x86/boot/compressed/misc.h
* Unmerged path arch/x86/boot/compressed/sev-es.c
