iwlwifi: add HW step to new cfg device table

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Luca Coelho <luciano.coelho@intel.com>
commit be2f6886a34eb121f5599313769bfc7ebdc852e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/be2f6886.failed

We need to use different firmware versions for different HW steps with
certain devices.  Prepare for this differentiation by adding HW step
to the new device table.

Change-Id: Ib1afb7b0c89e9dc2d26e6d32ea19e978c17ba1dd
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit be2f6886a34eb121f5599313769bfc7ebdc852e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/iwl-config.h
#	drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --cc drivers/net/wireless/intel/iwlwifi/iwl-config.h
index d95b1b513768,13f38c21cbd7..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@@ -457,6 -460,38 +457,15 @@@ struct iwl_cfg 
  struct iwl_dev_info {
  	u16 device;
  	u16 subdevice;
++<<<<<<< HEAD
++=======
+ 	u16 mac_type;
+ 	u16 rf_type;
+ 	u8 mac_step;
+ 	u8 rf_id;
+ 	u8 no_160;
+ 	u8 cores;
++>>>>>>> be2f6886a34e (iwlwifi: add HW step to new cfg device table)
  	const struct iwl_cfg *cfg;
  	const char *name;
  };
diff --cc drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index 5f336e51b685,ee692e45bdb3..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@@ -933,66 -807,133 +933,184 @@@ static const struct pci_device_id iwl_h
  };
  MODULE_DEVICE_TABLE(pci, iwl_hw_card_ids);
  
++<<<<<<< HEAD
 +#define IWL_DEV_INFO(_device, _subdevice, _cfg, _name)			 \
 +	{ .device = (_device), .subdevice = (_subdevice), .cfg = &(_cfg), \
 +	  .name = _name }
++=======
+ #define _IWL_DEV_INFO(_device, _subdevice, _mac_type, _mac_step, _rf_type, \
+ 		      _rf_id, _no_160, _cores, _cfg, _name)		   \
+ 	{ .device = (_device), .subdevice = (_subdevice), .cfg = &(_cfg),  \
+ 	  .name = _name, .mac_type = _mac_type, .rf_type = _rf_type,	   \
+ 	  .no_160 = _no_160, .cores = _cores, .rf_id = _rf_id,		   \
+ 	  .mac_step = _mac_step }
+ 
+ #define IWL_DEV_INFO(_device, _subdevice, _cfg, _name) \
+ 	_IWL_DEV_INFO(_device, _subdevice, IWL_CFG_ANY, IWL_CFG_ANY,	   \
+ 		      IWL_CFG_ANY, IWL_CFG_ANY, IWL_CFG_ANY, IWL_CFG_ANY,  \
+ 		      _cfg, _name)
++>>>>>>> be2f6886a34e (iwlwifi: add HW step to new cfg device table)
  
  static const struct iwl_dev_info iwl_dev_info_table[] = {
  #if IS_ENABLED(CONFIG_IWLMVM)
 -/* 9000 */
 -	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_2ac_cfg, iwl9260_killer_1550_name),
 -	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
 -	IWL_DEV_INFO(0x2526, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
 -	IWL_DEV_INFO(0x30DC, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
 -	IWL_DEV_INFO(0x30DC, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
 -	IWL_DEV_INFO(0x31DC, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
 -	IWL_DEV_INFO(0x31DC, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
 -
 -	IWL_DEV_INFO(0x271C, 0x0214, iwl9260_2ac_cfg, iwl9260_1_name),
 -
 +	IWL_DEV_INFO(0x2526, 0x0010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0018, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x001C, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4018, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x401C, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x6010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x6014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x8014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x8010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xA014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xE010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xE014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0210, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x0214, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x1010, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x1210, iwl9260_2ac_cfg, iwl9260_name),
 +
++<<<<<<< HEAD
 +	IWL_DEV_INFO(0x2526, 0x0030, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0038, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x003C, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4030, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x2030, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x2034, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4034, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0034, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0230, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0234, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0238, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x023C, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x1030, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x4234, iwl9560_2ac_cfg_soc, iwl9560_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0060, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0064, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0260, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0264, iwl9461_2ac_cfg_soc, iwl9461_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x00A0, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x00A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x02A0, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x02A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x40A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x42A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_killer_2ac_cfg, iwl9260_killer_1550_name),
 +	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_killer_s_2ac_cfg_soc, iwl9560_killer_1550s_name),
 +	IWL_DEV_INFO(0x2526, 0x1552, iwl9560_killer_2ac_cfg_soc, iwl9560_killer_1550i_name),
++=======
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9461_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9461_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9462_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9462_name),
+ 
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9560_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9461_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9461_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9462_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9462_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9560_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9560_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT_GNSS,
+ 		      iwl9260_2ac_cfg, iwl9270_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT_GNSS,
+ 		      iwl9260_2ac_cfg, iwl9270_name),
+ 
+ 	_IWL_DEV_INFO(0x271B, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH1, IWL_CFG_ANY,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9162_160_name),
+ 	_IWL_DEV_INFO(0x271B, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH1, IWL_CFG_ANY,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9162_name),
+ 
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9260_160_name),
+ 	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9260_2ac_cfg, iwl9260_name),
+ 
+ /* AX200 */
+ 	IWL_DEV_INFO(0x2723, 0x1653, iwl_ax200_cfg_cc, iwl_ax200_killer_1650w_name),
+ 	IWL_DEV_INFO(0x2723, 0x1654, iwl_ax200_cfg_cc, iwl_ax200_killer_1650x_name),
+ 	IWL_DEV_INFO(0x2723, IWL_CFG_ANY, iwl_ax200_cfg_cc, iwl_ax200_name),
++>>>>>>> be2f6886a34e (iwlwifi: add HW step to new cfg device table)
  
 +	IWL_DEV_INFO(0x2526, 0x1410, iwl9270_2ac_cfg, iwl9270_name),
 +	IWL_DEV_INFO(0x2526, 0x1610, iwl9270_2ac_cfg, iwl9270_name),
  #endif /* CONFIG_IWLMVM */
  };
  
@@@ -1028,13 -969,32 +1146,36 @@@ static int iwl_pci_probe(struct pci_de
  	/* the trans_cfg should never change, so set it now */
  	iwl_trans->trans_cfg = trans;
  
 -	iwl_trans->hw_rf_id = iwl_read32(iwl_trans, CSR_HW_RF_ID);
 -
  	for (i = 0; i < ARRAY_SIZE(iwl_dev_info_table); i++) {
  		const struct iwl_dev_info *dev_info = &iwl_dev_info_table[i];
 -		if ((dev_info->device == (u16)IWL_CFG_ANY ||
 +
 +		if ((dev_info->device == IWL_CFG_ANY ||
  		     dev_info->device == pdev->device) &&
++<<<<<<< HEAD
 +		    (dev_info->subdevice == IWL_CFG_ANY ||
 +		     dev_info->subdevice == pdev->subsystem_device)) {
++=======
+ 		    (dev_info->subdevice == (u16)IWL_CFG_ANY ||
+ 		     dev_info->subdevice == pdev->subsystem_device) &&
+ 		    (dev_info->mac_type == (u16)IWL_CFG_ANY ||
+ 		     dev_info->mac_type ==
+ 		     CSR_HW_REV_TYPE(iwl_trans->hw_rev)) &&
+ 		    (dev_info->mac_step == (u8)IWL_CFG_ANY ||
+ 		     dev_info->mac_step ==
+ 		     CSR_HW_REV_STEP(iwl_trans->hw_rev)) &&
+ 		    (dev_info->rf_type == (u16)IWL_CFG_ANY ||
+ 		     dev_info->rf_type ==
+ 		     CSR_HW_RFID_TYPE(iwl_trans->hw_rf_id)) &&
+ 		    (dev_info->rf_id == (u8)IWL_CFG_ANY ||
+ 		     dev_info->rf_id ==
+ 		     IWL_SUBDEVICE_RF_ID(pdev->subsystem_device)) &&
+ 		    (dev_info->no_160 == (u8)IWL_CFG_ANY ||
+ 		     dev_info->no_160 ==
+ 		     IWL_SUBDEVICE_NO_160(pdev->subsystem_device)) &&
+ 		    (dev_info->cores == (u8)IWL_CFG_ANY ||
+ 		     dev_info->cores ==
+ 		     IWL_SUBDEVICE_CORES(pdev->subsystem_device))) {
++>>>>>>> be2f6886a34e (iwlwifi: add HW step to new cfg device table)
  			iwl_trans->cfg = dev_info->cfg;
  			iwl_trans->name = dev_info->name;
  			goto found;
* Unmerged path drivers/net/wireless/intel/iwlwifi/iwl-config.h
* Unmerged path drivers/net/wireless/intel/iwlwifi/pcie/drv.c
