bpf: Reset data_meta before running programs attached to devmap entry

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author David Ahern <dsahern@kernel.org>
commit 26afa0a4eb3fd87757f9de56ec5db5a03b14e120
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/26afa0a4.failed

This is a new context that does not handle metadata at the moment, so
mark data_meta invalid.

Fixes: fbee97feed9b ("bpf: Add support to attach bpf program to a devmap entry")
	Signed-off-by: David Ahern <dsahern@kernel.org>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200608151723.9539-1-dsahern@kernel.org
(cherry picked from commit 26afa0a4eb3fd87757f9de56ec5db5a03b14e120)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/devmap.c
diff --cc kernel/bpf/devmap.c
index 2c33953067b1,bfdff2faf5cb..000000000000
--- a/kernel/bpf/devmap.c
+++ b/kernel/bpf/devmap.c
@@@ -457,6 -472,34 +457,37 @@@ static inline int __xdp_enqueue(struct 
  	return bq_enqueue(dev, xdpf, dev_rx);
  }
  
++<<<<<<< HEAD
++=======
+ static struct xdp_buff *dev_map_run_prog(struct net_device *dev,
+ 					 struct xdp_buff *xdp,
+ 					 struct bpf_prog *xdp_prog)
+ {
+ 	struct xdp_txq_info txq = { .dev = dev };
+ 	u32 act;
+ 
+ 	xdp_set_data_meta_invalid(xdp);
+ 	xdp->txq = &txq;
+ 
+ 	act = bpf_prog_run_xdp(xdp_prog, xdp);
+ 	switch (act) {
+ 	case XDP_PASS:
+ 		return xdp;
+ 	case XDP_DROP:
+ 		break;
+ 	default:
+ 		bpf_warn_invalid_xdp_action(act);
+ 		fallthrough;
+ 	case XDP_ABORTED:
+ 		trace_xdp_exception(dev, xdp_prog, act);
+ 		break;
+ 	}
+ 
+ 	xdp_return_buff(xdp);
+ 	return NULL;
+ }
+ 
++>>>>>>> 26afa0a4eb3f (bpf: Reset data_meta before running programs attached to devmap entry)
  int dev_xdp_enqueue(struct net_device *dev, struct xdp_buff *xdp,
  		    struct net_device *dev_rx)
  {
* Unmerged path kernel/bpf/devmap.c
