drivers/misc/sgi-xp: Adjust references in UV kernel modules

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Mike Travis <mike.travis@hpe.com>
commit 788b66e34e8ab82a93c63a83ba5a9d04f2f4ae26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/788b66e3.failed

Remove the define is_uv() is_uv_system and just use the latter as is.
This removes a conflict with a new symbol in the generated uv_mmrs.h
file (is_uv()).

	Signed-off-by: Mike Travis <mike.travis@hpe.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Dimitri Sivanich <dimitri.sivanich@hpe.com>
	Reviewed-by: Steve Wahl <steve.wahl@hpe.com>
Link: https://lkml.kernel.org/r/20201005203929.148656-4-mike.travis@hpe.com
(cherry picked from commit 788b66e34e8ab82a93c63a83ba5a9d04f2f4ae26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/sgi-xp/xp_main.c
#	drivers/misc/sgi-xp/xpc_main.c
#	drivers/misc/sgi-xp/xpnet.c
diff --cc drivers/misc/sgi-xp/xp_main.c
index d7c07d33d1a9,0eea2f518967..000000000000
--- a/drivers/misc/sgi-xp/xp_main.c
+++ b/drivers/misc/sgi-xp/xp_main.c
@@@ -233,9 -233,7 +233,13 @@@ xp_init(void
  	for (ch_number = 0; ch_number < XPC_MAX_NCHANNELS; ch_number++)
  		mutex_init(&xpc_registrations[ch_number].mutex);
  
++<<<<<<< HEAD
 +	if (is_shub())
 +		ret = xp_init_sn2();
 +	else if (is_uv())
++=======
+ 	if (is_uv_system())
++>>>>>>> 788b66e34e8a (drivers/misc/sgi-xp: Adjust references in UV kernel modules)
  		ret = xp_init_uv();
  	else
  		ret = 0;
@@@ -251,9 -249,7 +255,13 @@@ module_init(xp_init)
  static void __exit
  xp_exit(void)
  {
++<<<<<<< HEAD
 +	if (is_shub())
 +		xp_exit_sn2();
 +	else if (is_uv())
++=======
+ 	if (is_uv_system())
++>>>>>>> 788b66e34e8a (drivers/misc/sgi-xp: Adjust references in UV kernel modules)
  		xp_exit_uv();
  }
  
diff --cc drivers/misc/sgi-xp/xpc_main.c
index 83fc748a91a7,e3261e63d1f6..000000000000
--- a/drivers/misc/sgi-xp/xpc_main.c
+++ b/drivers/misc/sgi-xp/xpc_main.c
@@@ -1050,9 -1043,7 +1050,13 @@@ xpc_do_exit(enum xp_retval reason
  
  	xpc_teardown_partitions();
  
++<<<<<<< HEAD
 +	if (is_shub())
 +		xpc_exit_sn2();
 +	else if (is_uv())
++=======
+ 	if (is_uv_system())
++>>>>>>> 788b66e34e8a (drivers/misc/sgi-xp: Adjust references in UV kernel modules)
  		xpc_exit_uv();
  }
  
@@@ -1235,21 -1226,7 +1239,25 @@@ xpc_init(void
  	dev_set_name(xpc_part, "part");
  	dev_set_name(xpc_chan, "chan");
  
++<<<<<<< HEAD
 +	if (is_shub()) {
 +		/*
 +		 * The ia64-sn2 architecture supports at most 64 partitions.
 +		 * And the inability to unregister remote amos restricts us
 +		 * further to only support exactly 64 partitions on this
 +		 * architecture, no less.
 +		 */
 +		if (xp_max_npartitions != 64) {
 +			dev_err(xpc_part, "max #of partitions not set to 64\n");
 +			ret = -EINVAL;
 +		} else {
 +			ret = xpc_init_sn2();
 +		}
 +
 +	} else if (is_uv()) {
++=======
+ 	if (is_uv_system()) {
++>>>>>>> 788b66e34e8a (drivers/misc/sgi-xp: Adjust references in UV kernel modules)
  		ret = xpc_init_uv();
  
  	} else {
@@@ -1335,9 -1312,7 +1343,13 @@@ out_2
  
  	xpc_teardown_partitions();
  out_1:
++<<<<<<< HEAD
 +	if (is_shub())
 +		xpc_exit_sn2();
 +	else if (is_uv())
++=======
+ 	if (is_uv_system())
++>>>>>>> 788b66e34e8a (drivers/misc/sgi-xp: Adjust references in UV kernel modules)
  		xpc_exit_uv();
  	return ret;
  }
diff --cc drivers/misc/sgi-xp/xpnet.c
index 92ed2f2f133d,8ee39910b309..000000000000
--- a/drivers/misc/sgi-xp/xpnet.c
+++ b/drivers/misc/sgi-xp/xpnet.c
@@@ -515,7 -515,7 +515,11 @@@ xpnet_init(void
  {
  	int result;
  
++<<<<<<< HEAD
 +	if (!is_shub() && !is_uv())
++=======
+ 	if (!is_uv_system())
++>>>>>>> 788b66e34e8a (drivers/misc/sgi-xp: Adjust references in UV kernel modules)
  		return -ENODEV;
  
  	dev_info(xpnet, "registering network device %s\n", XPNET_DEVICE_NAME);
diff --git a/drivers/misc/sgi-xp/xp.h b/drivers/misc/sgi-xp/xp.h
index b8069eec18cb..946a35f439fb 100644
--- a/drivers/misc/sgi-xp/xp.h
+++ b/drivers/misc/sgi-xp/xp.h
@@ -17,11 +17,6 @@
 
 #if defined CONFIG_X86_UV || defined CONFIG_IA64_SGI_UV
 #include <asm/uv/uv.h>
-#define is_uv()		is_uv_system()
-#endif
-
-#ifndef is_uv
-#define is_uv()		0
 #endif
 
 #if defined CONFIG_IA64
@@ -96,7 +91,7 @@
 
 #define XPC_MSG_SIZE(_payload_size) \
 				ALIGN(XPC_MSG_HDR_MAX_SIZE + (_payload_size), \
-				      is_uv() ? 64 : 128)
+				      is_uv_system() ? 64 : 128)
 
 
 /*
* Unmerged path drivers/misc/sgi-xp/xp_main.c
diff --git a/drivers/misc/sgi-xp/xp_uv.c b/drivers/misc/sgi-xp/xp_uv.c
index a0d093274dc0..3fe54370e60a 100644
--- a/drivers/misc/sgi-xp/xp_uv.c
+++ b/drivers/misc/sgi-xp/xp_uv.c
@@ -148,7 +148,9 @@ xp_restrict_memprotect_uv(unsigned long phys_addr, unsigned long size)
 enum xp_retval
 xp_init_uv(void)
 {
-	BUG_ON(!is_uv());
+	WARN_ON(!is_uv_system());
+	if (!is_uv_system())
+		return xpUnsupported;
 
 	xp_max_npartitions = XP_MAX_NPARTITIONS_UV;
 	xp_partition_id = sn_partition_id;
@@ -167,5 +169,5 @@ xp_init_uv(void)
 void
 xp_exit_uv(void)
 {
-	BUG_ON(!is_uv());
+	WARN_ON(!is_uv_system());
 }
* Unmerged path drivers/misc/sgi-xp/xpc_main.c
diff --git a/drivers/misc/sgi-xp/xpc_partition.c b/drivers/misc/sgi-xp/xpc_partition.c
index 7284413dabfd..b38e823f5462 100644
--- a/drivers/misc/sgi-xp/xpc_partition.c
+++ b/drivers/misc/sgi-xp/xpc_partition.c
@@ -441,7 +441,7 @@ xpc_discovery(void)
 	 */
 	region_size = xp_region_size;
 
-	if (is_uv())
+	if (is_uv_system())
 		max_regions = 256;
 	else {
 		max_regions = 64;
* Unmerged path drivers/misc/sgi-xp/xpnet.c
