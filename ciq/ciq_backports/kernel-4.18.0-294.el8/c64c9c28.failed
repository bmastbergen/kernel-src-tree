udp, bpf: Ignore connections in reuseport group after BPF sk lookup

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jakub Sitnicki <jakub@cloudflare.com>
commit c64c9c282a9a7ec0515b725d5aaed68c32e403a4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/c64c9c28.failed

When BPF sk lookup invokes reuseport handling for the selected socket, it
should ignore the fact that reuseport group can contain connected UDP
sockets. With BPF sk lookup this is not relevant as we are not scoring
sockets to find the best match, which might be a connected UDP socket.

Fix it by unconditionally accepting the socket selected by reuseport.

This fixes the following two failures reported by test_progs.

  # ./test_progs -t sk_lookup
  ...
  #73/14 UDP IPv4 redir and reuseport with conns:FAIL
  ...
  #73/20 UDP IPv6 redir and reuseport with conns:FAIL
  ...

Fixes: a57066b1a019 ("Merge git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net")
	Reported-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>
	Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20200726120228.1414348-1-jakub@cloudflare.com
(cherry picked from commit c64c9c282a9a7ec0515b725d5aaed68c32e403a4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/udp.c
diff --cc net/ipv4/udp.c
index cfc98bf6ef18,e88efba07551..000000000000
--- a/net/ipv4/udp.c
+++ b/net/ipv4/udp.c
@@@ -449,6 -455,29 +449,32 @@@ static struct sock *udp4_lib_lookup2(st
  	return result;
  }
  
++<<<<<<< HEAD
++=======
+ static struct sock *udp4_lookup_run_bpf(struct net *net,
+ 					struct udp_table *udptable,
+ 					struct sk_buff *skb,
+ 					__be32 saddr, __be16 sport,
+ 					__be32 daddr, u16 hnum)
+ {
+ 	struct sock *sk, *reuse_sk;
+ 	bool no_reuseport;
+ 
+ 	if (udptable != &udp_table)
+ 		return NULL; /* only UDP is supported */
+ 
+ 	no_reuseport = bpf_sk_lookup_run_v4(net, IPPROTO_UDP,
+ 					    saddr, sport, daddr, hnum, &sk);
+ 	if (no_reuseport || IS_ERR_OR_NULL(sk))
+ 		return sk;
+ 
+ 	reuse_sk = lookup_reuseport(net, sk, skb, saddr, sport, daddr, hnum);
+ 	if (reuse_sk)
+ 		sk = reuse_sk;
+ 	return sk;
+ }
+ 
++>>>>>>> c64c9c282a9a (udp, bpf: Ignore connections in reuseport group after BPF sk lookup)
  /* UDP is nearly always wildcards out the wazoo, it makes no sense to try
   * harder than this. -DaveM
   */
* Unmerged path net/ipv4/udp.c
