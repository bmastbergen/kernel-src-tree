vfs: Convert sockfs to use the new mount API

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author David Howells <dhowells@redhat.com>
commit fba9be49701a8e89a691beffb11bfa97df8f0c9f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/fba9be49.failed

Convert the sockfs filesystem to the new internal mount API as the old
one will be obsoleted and removed.  This allows greater flexibility in
communication of mount parameters between userspace, the VFS and the
filesystem.

See Documentation/filesystems/mount_api.txt for more information.

	Signed-off-by: David Howells <dhowells@redhat.com>
cc: netdev@vger.kernel.org
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit fba9be49701a8e89a691beffb11bfa97df8f0c9f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/socket.c
diff --cc net/socket.c
index b6a667cf3569,5061c5d2730c..000000000000
--- a/net/socket.c
+++ b/net/socket.c
@@@ -361,12 -360,15 +362,21 @@@ static const struct xattr_handler *sock
  	NULL
  };
  
- static struct dentry *sockfs_mount(struct file_system_type *fs_type,
- 			 int flags, const char *dev_name, void *data)
+ static int sockfs_init_fs_context(struct fs_context *fc)
  {
++<<<<<<< HEAD
 +	return mount_pseudo_xattr(fs_type, "socket:", &sockfs_ops,
 +				  sockfs_xattr_handlers,
 +				  &sockfs_dentry_operations, SOCKFS_MAGIC);
++=======
+ 	struct pseudo_fs_context *ctx = init_pseudo(fc, SOCKFS_MAGIC);
+ 	if (!ctx)
+ 		return -ENOMEM;
+ 	ctx->ops = &sockfs_ops;
+ 	ctx->dops = &sockfs_dentry_operations;
+ 	ctx->xattr = sockfs_xattr_handlers;
+ 	return 0;
++>>>>>>> fba9be49701a (vfs: Convert sockfs to use the new mount API)
  }
  
  static struct vfsmount *sock_mnt __read_mostly;
* Unmerged path net/socket.c
