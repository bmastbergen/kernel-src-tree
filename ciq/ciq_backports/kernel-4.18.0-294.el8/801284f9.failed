x86/platform/uv: Recognize UV5 hubless system identifier

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Mike Travis <mike.travis@hpe.com>
commit 801284f9737883a2b2639bd494455a72c82fdedf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/801284f9.failed

Testing shows a problem in that UV5 hubless systems were not being
recognized.  Add them to the list of OEM IDs checked.

Fixes: 6c7794423a998 ("Add UV5 direct references")
	Signed-off-by: Mike Travis <mike.travis@hpe.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lore.kernel.org/r/20201105222741.157029-4-mike.travis@hpe.com


(cherry picked from commit 801284f9737883a2b2639bd494455a72c82fdedf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/apic/x2apic_uv_x.c
diff --cc arch/x86/kernel/apic/x2apic_uv_x.c
index f642f9a42a24,3115caa7d7d0..000000000000
--- a/arch/x86/kernel/apic/x2apic_uv_x.c
+++ b/arch/x86/kernel/apic/x2apic_uv_x.c
@@@ -312,24 -295,118 +312,36 @@@ static void __init uv_stringify(int len
  	(void)strim(to);
  }
  
 -/* Find UV arch type entry in UVsystab */
 -static unsigned long __init early_find_archtype(struct uv_systab *st)
 +static int __init uv_set_system_type(char *_oem_id)
  {
 -	int i;
 -
 -	for (i = 0; st->entry[i].type != UV_SYSTAB_TYPE_UNUSED; i++) {
 -		unsigned long ptr = st->entry[i].offset;
 -
 -		if (!ptr)
 -			continue;
 -		ptr += (unsigned long)st;
 -		if (st->entry[i].type == UV_SYSTAB_TYPE_ARCH_TYPE)
 -			return ptr;
 -	}
 -	return 0;
 -}
 -
 -/* Validate UV arch type field in UVsystab */
 -static int __init decode_arch_type(unsigned long ptr)
 -{
 -	struct uv_arch_type_entry *uv_ate = (struct uv_arch_type_entry *)ptr;
 -	int n = strlen(uv_ate->archtype);
 -
 -	if (n > 0 && n < sizeof(uv_ate->archtype)) {
 -		pr_info("UV: UVarchtype received from BIOS\n");
 -		uv_stringify(UV_AT_SIZE, uv_archtype, uv_ate->archtype);
 -		return 1;
 -	}
 -	return 0;
 -}
 -
 -/* Determine if UV arch type entry might exist in UVsystab */
 -static int __init early_get_arch_type(void)
 -{
 -	unsigned long uvst_physaddr, uvst_size, ptr;
 -	struct uv_systab *st;
 -	u32 rev;
 -	int ret;
 -
 -	uvst_physaddr = get_uv_systab_phys(0);
 -	if (!uvst_physaddr)
 -		return 0;
 -
 -	st = early_memremap_ro(uvst_physaddr, sizeof(struct uv_systab));
 -	if (!st) {
 -		pr_err("UV: Cannot access UVsystab, remap failed\n");
 -		return 0;
 -	}
 -
 -	rev = st->revision;
 -	if (rev < UV_SYSTAB_VERSION_UV5) {
 -		early_memunmap(st, sizeof(struct uv_systab));
 -		return 0;
 -	}
 -
 -	uvst_size = st->size;
 -	early_memunmap(st, sizeof(struct uv_systab));
 -	st = early_memremap_ro(uvst_physaddr, uvst_size);
 -	if (!st) {
 -		pr_err("UV: Cannot access UVarchtype, remap failed\n");
 -		return 0;
 -	}
 -
 -	ptr = early_find_archtype(st);
 -	if (!ptr) {
 -		early_memunmap(st, uvst_size);
 -		return 0;
 -	}
 -
 -	ret = decode_arch_type(ptr);
 -	early_memunmap(st, uvst_size);
 -	return ret;
 -}
 -
 -static int __init uv_set_system_type(char *_oem_id, char *_oem_table_id)
 -{
 -	/* Save OEM_ID passed from ACPI MADT */
 +	/* Save OEM ID */
  	uv_stringify(sizeof(oem_id), oem_id, _oem_id);
  
 -	/* Check if BIOS sent us a UVarchtype */
 -	if (!early_get_arch_type())
 -
 -		/* If not use OEM ID for UVarchtype */
 -		uv_stringify(UV_AT_SIZE, uv_archtype, _oem_id);
 -
 -	/* Check if not hubbed */
 -	if (strncmp(uv_archtype, "SGI", 3) != 0) {
 -
 -		/* (Not hubbed), check if not hubless */
 -		if (strncmp(uv_archtype, "NSGI", 4) != 0)
 -
 -			/* (Not hubless), not a UV */
 +	/* Set hubless type if true */
 +	if (strncmp(oem_id, "SGI", 3) != 0) {
 +		if (strncmp(oem_id, "NSGI", 4) != 0)
  			return 0;
  
+ 		/* Is UV hubless system */
+ 		uv_hubless_system = 0x01;
+ 
+ 		/* UV5 Hubless */
+ 		if (strncmp(uv_archtype, "NSGI5", 5) == 0)
+ 			uv_hubless_system |= 0x20;
+ 
  		/* UV4 Hubless: CH */
++<<<<<<< HEAD
 +		if (strncmp(oem_id, "NSGI4", 5) == 0)
 +			uv_hubless_system = 0x11;
++=======
+ 		else if (strncmp(uv_archtype, "NSGI4", 5) == 0)
+ 			uv_hubless_system |= 0x10;
++>>>>>>> 801284f97378 (x86/platform/uv: Recognize UV5 hubless system identifier)
  
  		/* UV3 Hubless: UV300/MC990X w/o hub */
  		else
- 			uv_hubless_system = 0x9;
+ 			uv_hubless_system |= 0x8;
  
 -		/* Copy APIC type */
 -		uv_stringify(sizeof(oem_table_id), oem_table_id, _oem_table_id);
 -
  		pr_info("UV: OEM IDs %s/%s, SystemType %d, HUBLESS ID %x\n",
  			oem_id, oem_table_id, uv_system_type, uv_hubless_system);
  		return 0;
* Unmerged path arch/x86/kernel/apic/x2apic_uv_x.c
