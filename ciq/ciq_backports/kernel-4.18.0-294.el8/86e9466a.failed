intel_idle: Clean up irtl_2_usec()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 86e9466ae620824dee861f0f6ed933fcd0b449f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/86e9466a.failed

Move the irtl_ns_units[] definition into irtl_2_usec() which is the
only user of it, use div_u64() for the division in there (as the
divisor is small enough) and use the NSEC_PER_USEC symbol for the
divisor.  Also convert the irtl_2_usec() comment to a proper
kerneldo one.

No intentional functional impact.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 86e9466ae620824dee861f0f6ed933fcd0b449f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/idle/intel_idle.c
diff --cc drivers/idle/intel_idle.c
index ea562fdda44c,9f38ff02a7b8..000000000000
--- a/drivers/idle/intel_idle.c
+++ b/drivers/idle/intel_idle.c
@@@ -1410,15 -1292,17 +1410,25 @@@ static void ivt_idle_state_table_update
  	/* else, 1 and 2 socket systems use default ivt_cstates */
  }
  
- /*
-  * Translate IRTL (Interrupt Response Time Limit) MSR to usec
+ /**
+  * irtl_2_usec - IRTL to microseconds conversion.
+  * @irtl: IRTL MSR value.
+  *
+  * Translate the IRTL (Interrupt Response Time Limit) MSR value to microseconds.
   */
++<<<<<<< HEAD
 +
 +static unsigned int irtl_ns_units[] = {
 +	1, 32, 1024, 32768, 1048576, 33554432, 0, 0 };
 +
 +static unsigned long long irtl_2_usec(unsigned long long irtl)
++=======
+ static unsigned long long __init irtl_2_usec(unsigned long long irtl)
++>>>>>>> 86e9466ae620 (intel_idle: Clean up irtl_2_usec())
  {
+ 	static const unsigned int irtl_ns_units[] __initconst = {
+ 		1, 32, 1024, 32768, 1048576, 33554432, 0, 0
+ 	};
  	unsigned long long ns;
  
  	if (!irtl)
* Unmerged path drivers/idle/intel_idle.c
