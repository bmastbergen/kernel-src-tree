bpf: Restore behaviour of CAP_SYS_ADMIN allowing the loading of networking bpf programs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Maciej Żenczykowski <maze@google.com>
commit b338cb921e6739ff59ce32f43342779fe5ffa732
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b338cb92.failed

This is a fix for a regression in commit 2c78ee898d8f ("bpf: Implement CAP_BPF").
Before the above commit it was possible to load network bpf programs
with just the CAP_SYS_ADMIN privilege.

The Android bpfloader happens to run in such a configuration (it has
SYS_ADMIN but not NET_ADMIN) and creates maps and loads bpf programs
for later use by Android's netd (which has NET_ADMIN but not SYS_ADMIN).

Fixes: 2c78ee898d8f ("bpf: Implement CAP_BPF")
	Reported-by: John Stultz <john.stultz@linaro.org>
	Signed-off-by: Maciej Żenczykowski <maze@google.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Tested-by: John Stultz <john.stultz@linaro.org>
Link: https://lore.kernel.org/bpf/20200620212616.93894-1-zenczykowski@gmail.com
(cherry picked from commit b338cb921e6739ff59ce32f43342779fe5ffa732)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/syscall.c
diff --cc kernel/bpf/syscall.c
index c6b9e5e810c4,7d946435587d..000000000000
--- a/kernel/bpf/syscall.c
+++ b/kernel/bpf/syscall.c
@@@ -2078,7 -2118,12 +2078,16 @@@ static int bpf_prog_load(union bpf_att
  		return -E2BIG;
  	if (type != BPF_PROG_TYPE_SOCKET_FILTER &&
  	    type != BPF_PROG_TYPE_CGROUP_SKB &&
++<<<<<<< HEAD
 +	    !capable(CAP_SYS_ADMIN))
++=======
+ 	    !bpf_capable())
+ 		return -EPERM;
+ 
+ 	if (is_net_admin_prog_type(type) && !capable(CAP_NET_ADMIN) && !capable(CAP_SYS_ADMIN))
+ 		return -EPERM;
+ 	if (is_perfmon_prog_type(type) && !perfmon_capable())
++>>>>>>> b338cb921e67 (bpf: Restore behaviour of CAP_SYS_ADMIN allowing the loading of networking bpf programs)
  		return -EPERM;
  
  	bpf_prog_load_fixup_attach_type(attr);
* Unmerged path kernel/bpf/syscall.c
