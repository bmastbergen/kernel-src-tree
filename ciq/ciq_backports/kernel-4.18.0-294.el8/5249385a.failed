powerpc: Define and use get_user_instr() et. al.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [powerpc] powerpc: Define and use get_user_instr() et. al (Desnes Augusto Nunes do Rosario) [1854524]
Rebuild_FUZZ: 98.95%
commit-author Jordan Niethe <jniethe5@gmail.com>
commit 5249385ad7f0ac178433f0ae9cc5b64612c8ff77
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/5249385a.failed

Define specialised get_user_instr(), __get_user_instr() and
__get_user_instr_inatomic() macros for reading instructions from user
and/or kernel space.

	Signed-off-by: Jordan Niethe <jniethe5@gmail.com>
	Reviewed-by: Alistair Popple <alistair@popple.id.au>
[mpe: Squash in addition of get_user_instr() & __user annotations]
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20200506034050.24806-17-jniethe5@gmail.com
(cherry picked from commit 5249385ad7f0ac178433f0ae9cc5b64612c8ff77)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/align.c
#	arch/powerpc/kernel/hw_breakpoint.c
#	arch/powerpc/kernel/vecemu.c
diff --cc arch/powerpc/kernel/align.c
index 0d1b6370bae0,1f1ce8b86d5b..000000000000
--- a/arch/powerpc/kernel/align.c
+++ b/arch/powerpc/kernel/align.c
@@@ -303,7 -305,7 +303,11 @@@ int fix_alignment(struct pt_regs *regs
  	 */
  	CHECK_FULL_REGS(regs);
  
++<<<<<<< HEAD
 +	if (unlikely(__get_user(instr, (unsigned int __user *)regs->nip)))
++=======
+ 	if (unlikely(__get_user_instr(instr, (void __user *)regs->nip)))
++>>>>>>> 5249385ad7f0 (powerpc: Define and use get_user_instr() et. al.)
  		return -EFAULT;
  	if ((regs->msr & MSR_LE) != (MSR_KERNEL & MSR_LE)) {
  		/* We don't handle PPC little-endian any more... */
diff --cc arch/powerpc/kernel/hw_breakpoint.c
index cb5dfa15ad41,423603c92c0f..000000000000
--- a/arch/powerpc/kernel/hw_breakpoint.c
+++ b/arch/powerpc/kernel/hw_breakpoint.c
@@@ -228,7 -249,7 +228,11 @@@ static bool stepping_handler(struct pt_
  	struct instruction_op op;
  	unsigned long addr = info->address;
  
++<<<<<<< HEAD
 +	if (__get_user_inatomic(instr, (unsigned int *)regs->nip))
++=======
+ 	if (__get_user_instr_inatomic(instr, (void __user *)regs->nip))
++>>>>>>> 5249385ad7f0 (powerpc: Define and use get_user_instr() et. al.)
  		goto fail;
  
  	ret = analyse_instr(&op, regs, instr);
diff --cc arch/powerpc/kernel/vecemu.c
index 4acd3fb2b38e,ae632569446f..000000000000
--- a/arch/powerpc/kernel/vecemu.c
+++ b/arch/powerpc/kernel/vecemu.c
@@@ -264,17 -266,19 +264,21 @@@ int emulate_altivec(struct pt_regs *reg
  	unsigned int va, vb, vc, vd;
  	vector128 *vrs;
  
++<<<<<<< HEAD
 +	if (get_user(instr, (unsigned int __user *) regs->nip))
++=======
+ 	if (get_user_instr(instr, (void __user *)regs->nip))
++>>>>>>> 5249385ad7f0 (powerpc: Define and use get_user_instr() et. al.)
  		return -EFAULT;
 -
 -	word = ppc_inst_val(instr);
 -	if (ppc_inst_primary_opcode(instr) != 4)
 +	if ((instr >> 26) != 4)
  		return -EINVAL;		/* not an altivec instruction */
 -	vd = (word >> 21) & 0x1f;
 -	va = (word >> 16) & 0x1f;
 -	vb = (word >> 11) & 0x1f;
 -	vc = (word >> 6) & 0x1f;
 +	vd = (instr >> 21) & 0x1f;
 +	va = (instr >> 16) & 0x1f;
 +	vb = (instr >> 11) & 0x1f;
 +	vc = (instr >> 6) & 0x1f;
  
  	vrs = current->thread.vr_state.vr;
 -	switch (word & 0x3f) {
 +	switch (instr & 0x3f) {
  	case 10:
  		switch (vc) {
  		case 0:	/* vaddfp */
diff --git a/arch/powerpc/include/asm/uaccess.h b/arch/powerpc/include/asm/uaccess.h
index ab580a78bb2b..21e72803adb5 100644
--- a/arch/powerpc/include/asm/uaccess.h
+++ b/arch/powerpc/include/asm/uaccess.h
@@ -101,6 +101,15 @@ static inline int __access_ok(unsigned long addr, unsigned long size,
 #define __put_user_inatomic(x, ptr) \
 	__put_user_nosleep((__typeof__(*(ptr)))(x), (ptr), sizeof(*(ptr)))
 
+#define get_user_instr(x, ptr) \
+	get_user((x).val, (u32 __user *)(ptr))
+
+#define __get_user_instr(x, ptr) \
+	__get_user_nocheck((x).val, (u32 __user *)(ptr), sizeof(u32), true)
+
+#define __get_user_instr_inatomic(x, ptr) \
+	__get_user_nosleep((x).val, (u32 __user *)(ptr), sizeof(u32))
+
 extern long __put_user_bad(void);
 
 /*
* Unmerged path arch/powerpc/kernel/align.c
* Unmerged path arch/powerpc/kernel/hw_breakpoint.c
* Unmerged path arch/powerpc/kernel/vecemu.c
