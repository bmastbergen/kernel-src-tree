ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro (Jaroslav Kysela) [1869536]
Rebuild_FUZZ: 94.74%
commit-author Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
commit fde106552845b7c369c2385b27062b1c2130a4dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/fde10655.failed

Remove the HDA_DSP_CORE_MASK() macro and use BIT() and GENMASK()
macros directly for more clarity.

	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: Rander Wang <rander.wang@linux.intel.com>
	Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
	Reviewed-by: Keyon Jie <yang.jie@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Link: https://lore.kernel.org/r/20200910164125.2033062-4-kai.vehmanen@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit fde106552845b7c369c2385b27062b1c2130a4dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/apl.c
#	sound/soc/sof/intel/cnl.c
#	sound/soc/sof/intel/hda-loader.c
#	sound/soc/sof/intel/tgl.c
diff --cc sound/soc/sof/intel/apl.c
index 80ac9df01d95,4eeade2e77f7..000000000000
--- a/sound/soc/sof/intel/apl.c
+++ b/sound/soc/sof/intel/apl.c
@@@ -129,7 -129,7 +129,11 @@@ const struct sof_intel_dsp_desc apl_chi
  	/* Apollolake */
  	.cores_num = 2,
  	.init_core_mask = 1,
++<<<<<<< HEAD
 +	.cores_mask = HDA_DSP_CORE_MASK(0) | HDA_DSP_CORE_MASK(1),
++=======
+ 	.host_managed_cores_mask = GENMASK(1, 0),
++>>>>>>> fde106552845 (ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro)
  	.ipc_req = HDA_DSP_REG_HIPCI,
  	.ipc_req_mask = HDA_DSP_REG_HIPCI_BUSY,
  	.ipc_ack = HDA_DSP_REG_HIPCIE,
diff --cc sound/soc/sof/intel/cnl.c
index ece08268ab9a,a5d3258104c0..000000000000
--- a/sound/soc/sof/intel/cnl.c
+++ b/sound/soc/sof/intel/cnl.c
@@@ -335,10 -334,7 +335,14 @@@ const struct sof_intel_dsp_desc cnl_chi
  	/* Cannonlake */
  	.cores_num = 4,
  	.init_core_mask = 1,
++<<<<<<< HEAD
 +	.cores_mask = HDA_DSP_CORE_MASK(0) |
 +				HDA_DSP_CORE_MASK(1) |
 +				HDA_DSP_CORE_MASK(2) |
 +				HDA_DSP_CORE_MASK(3),
++=======
+ 	.host_managed_cores_mask = GENMASK(3, 0),
++>>>>>>> fde106552845 (ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro)
  	.ipc_req = CNL_DSP_REG_HIPCIDR,
  	.ipc_req_mask = CNL_DSP_REG_HIPCIDR_BUSY,
  	.ipc_ack = CNL_DSP_REG_HIPCIDA,
@@@ -354,10 -350,7 +358,14 @@@ const struct sof_intel_dsp_desc icl_chi
  	/* Icelake */
  	.cores_num = 4,
  	.init_core_mask = 1,
++<<<<<<< HEAD
 +	.cores_mask = HDA_DSP_CORE_MASK(0) |
 +				HDA_DSP_CORE_MASK(1) |
 +				HDA_DSP_CORE_MASK(2) |
 +				HDA_DSP_CORE_MASK(3),
++=======
+ 	.host_managed_cores_mask = GENMASK(3, 0),
++>>>>>>> fde106552845 (ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro)
  	.ipc_req = CNL_DSP_REG_HIPCIDR,
  	.ipc_req_mask = CNL_DSP_REG_HIPCIDR_BUSY,
  	.ipc_ack = CNL_DSP_REG_HIPCIDA,
@@@ -367,23 -360,7 +375,27 @@@
  	.ssp_count = ICL_SSP_COUNT,
  	.ssp_base_offset = CNL_SSP_BASE_OFFSET,
  };
 -EXPORT_SYMBOL_NS(icl_chip_info, SND_SOC_SOF_INTEL_HDA_COMMON);
 +EXPORT_SYMBOL(icl_chip_info);
 +
 +const struct sof_intel_dsp_desc tgl_chip_info = {
 +	/* Tigerlake */
 +	.cores_num = 4,
 +	.init_core_mask = 1,
++<<<<<<< HEAD
 +	.cores_mask = HDA_DSP_CORE_MASK(0),
++=======
++	.host_managed_cores_mask = BIT(0),
++>>>>>>> fde106552845 (ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro)
 +	.ipc_req = CNL_DSP_REG_HIPCIDR,
 +	.ipc_req_mask = CNL_DSP_REG_HIPCIDR_BUSY,
 +	.ipc_ack = CNL_DSP_REG_HIPCIDA,
 +	.ipc_ack_mask = CNL_DSP_REG_HIPCIDA_DONE,
 +	.ipc_ctl = CNL_DSP_REG_HIPCCTL,
 +	.rom_init_timeout	= 300,
 +	.ssp_count = ICL_SSP_COUNT,
 +	.ssp_base_offset = CNL_SSP_BASE_OFFSET,
 +};
 +EXPORT_SYMBOL(tgl_chip_info);
  
  const struct sof_intel_dsp_desc ehl_chip_info = {
  	/* Elkhartlake */
@@@ -405,8 -382,7 +417,12 @@@ const struct sof_intel_dsp_desc jsl_chi
  	/* Jasperlake */
  	.cores_num = 2,
  	.init_core_mask = 1,
++<<<<<<< HEAD
 +	.cores_mask = HDA_DSP_CORE_MASK(0) |
 +				HDA_DSP_CORE_MASK(1),
++=======
+ 	.host_managed_cores_mask = GENMASK(1, 0),
++>>>>>>> fde106552845 (ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro)
  	.ipc_req = CNL_DSP_REG_HIPCIDR,
  	.ipc_req_mask = CNL_DSP_REG_HIPCIDR_BUSY,
  	.ipc_ack = CNL_DSP_REG_HIPCIDA,
diff --cc sound/soc/sof/intel/hda-loader.c
index 70727495fdbf,5515c75e53e4..000000000000
--- a/sound/soc/sof/intel/hda-loader.c
+++ b/sound/soc/sof/intel/hda-loader.c
@@@ -146,8 -146,7 +146,12 @@@ static int cl_dsp_init(struct snd_sof_d
  				       chip->ipc_ack_mask);
  
  	/* step 5: power down corex */
++<<<<<<< HEAD
 +	ret = hda_dsp_core_power_down(sdev,
 +				  chip->cores_mask & ~(HDA_DSP_CORE_MASK(0)));
++=======
+ 	ret = hda_dsp_core_power_down(sdev, chip->host_managed_cores_mask & ~(BIT(0)));
++>>>>>>> fde106552845 (ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro)
  	if (ret < 0) {
  		if (iteration == HDA_FW_BOOT_ATTEMPTS)
  			dev_err(sdev->dev,
* Unmerged path sound/soc/sof/intel/tgl.c
* Unmerged path sound/soc/sof/intel/apl.c
* Unmerged path sound/soc/sof/intel/cnl.c
* Unmerged path sound/soc/sof/intel/hda-loader.c
diff --git a/sound/soc/sof/intel/hda.h b/sound/soc/sof/intel/hda.h
index a2e6050f0ef0..8025a93ebec0 100644
--- a/sound/soc/sof/intel/hda.h
+++ b/sound/soc/sof/intel/hda.h
@@ -305,9 +305,6 @@
 #define HDA_DSP_ADSPCS_CPA_SHIFT	24
 #define HDA_DSP_ADSPCS_CPA_MASK(cm)	((cm) << HDA_DSP_ADSPCS_CPA_SHIFT)
 
-/* Mask for a given core index, c = 0.. number of supported cores - 1 */
-#define HDA_DSP_CORE_MASK(c)		BIT(c)
-
 /*
  * Mask for a given number of cores
  * nc = number of supported cores
* Unmerged path sound/soc/sof/intel/tgl.c
