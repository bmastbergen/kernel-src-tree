mptcp: do nonce initialization at subflow creation time

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit 6bad912b7e5ab51c23d8fa8362ca2d4ceeebdb74
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/6bad912b.failed

This clean-up the code a bit, reduces the number of
used hooks and indirect call requested, and allow
better error reporting from __mptcp_subflow_connect()

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Reviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6bad912b7e5ab51c23d8fa8362ca2d4ceeebdb74)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/subflow.c
diff --cc net/mptcp/subflow.c
index 2b2e7c18e1f0,664aa9158363..000000000000
--- a/net/mptcp/subflow.c
+++ b/net/mptcp/subflow.c
@@@ -29,40 -29,6 +29,43 @@@ static void SUBFLOW_REQ_INC_STATS(struc
  	MPTCP_INC_STATS(sock_net(req_to_sk(req)), field);
  }
  
++<<<<<<< HEAD
 +static int subflow_rebuild_header(struct sock *sk)
 +{
 +	struct mptcp_subflow_context *subflow = mptcp_subflow_ctx(sk);
 +	int local_id, err = 0;
 +
 +	if (subflow->request_mptcp && !subflow->token) {
 +		pr_debug("subflow=%p", sk);
 +		err = mptcp_token_new_connect(sk);
 +	} else if (subflow->request_join && !subflow->local_nonce) {
 +		struct mptcp_sock *msk = (struct mptcp_sock *)subflow->conn;
 +
 +		pr_debug("subflow=%p", sk);
 +
 +		do {
 +			get_random_bytes(&subflow->local_nonce, sizeof(u32));
 +		} while (!subflow->local_nonce);
 +
 +		if (subflow->local_id)
 +			goto out;
 +
 +		local_id = mptcp_pm_get_local_id(msk, (struct sock_common *)sk);
 +		if (local_id < 0)
 +			return -EINVAL;
 +
 +		subflow->local_id = local_id;
 +	}
 +
 +out:
 +	if (err)
 +		return err;
 +
 +	return subflow->icsk_af_ops->rebuild_header(sk);
 +}
 +
++=======
++>>>>>>> 6bad912b7e5a (mptcp: do nonce initialization at subflow creation time)
  static void subflow_req_destructor(struct request_sock *req)
  {
  	struct mptcp_subflow_request_sock *subflow_req = mptcp_subflow_rsk(req);
* Unmerged path net/mptcp/subflow.c
