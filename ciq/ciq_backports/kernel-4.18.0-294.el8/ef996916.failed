lockdep: Rename trace_{hard,soft}{irq_context,irqs_enabled}()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [kernel] lockdep: Rename trace_{hard, soft}{irq_context, irqs_enabled}() (Waiman Long) [1885084]
Rebuild_FUZZ: 98.39%
commit-author Peter Zijlstra <peterz@infradead.org>
commit ef996916e78e03d25e56c2d372e5e21fdb471882
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ef996916.failed

Continue what commit:

  d820ac4c2fa8 ("locking: rename trace_softirq_[enter|exit] => lockdep_softirq_[enter|exit]")

started, rename these to avoid confusing them with tracepoints.

git grep -l "trace_\(soft\|hard\)\(irq_context\|irqs_enabled\)" | while read file;
do
	sed -ie 's/trace_\(soft\|hard\)\(irq_context\|irqs_enabled\)/lockdep_\1\2/g' $file;
done

	Reported-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Will Deacon <will@kernel.org>
Link: https://lkml.kernel.org/r/20200320115859.178626842@infradead.org

(cherry picked from commit ef996916e78e03d25e56c2d372e5e21fdb471882)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/irqflags.h
#	tools/include/linux/irqflags.h
diff --cc include/linux/irqflags.h
index ee8b3d4eec4d,f4c3907e241a..000000000000
--- a/include/linux/irqflags.h
+++ b/include/linux/irqflags.h
@@@ -15,25 -15,31 +15,33 @@@
  #include <linux/typecheck.h>
  #include <asm/irqflags.h>
  
 -/* Currently lockdep_softirqs_on/off is used only by lockdep */
 -#ifdef CONFIG_PROVE_LOCKING
 -  extern void lockdep_softirqs_on(unsigned long ip);
 -  extern void lockdep_softirqs_off(unsigned long ip);
 -  extern void lockdep_hardirqs_on(unsigned long ip);
 -  extern void lockdep_hardirqs_off(unsigned long ip);
 -#else
 -  static inline void lockdep_softirqs_on(unsigned long ip) { }
 -  static inline void lockdep_softirqs_off(unsigned long ip) { }
 -  static inline void lockdep_hardirqs_on(unsigned long ip) { }
 -  static inline void lockdep_hardirqs_off(unsigned long ip) { }
 -#endif
 -
  #ifdef CONFIG_TRACE_IRQFLAGS
 +  extern void trace_softirqs_on(unsigned long ip);
 +  extern void trace_softirqs_off(unsigned long ip);
    extern void trace_hardirqs_on(void);
    extern void trace_hardirqs_off(void);
++<<<<<<< HEAD
 +# define trace_hardirq_context(p)	((p)->hardirq_context)
 +# define trace_softirq_context(p)	((p)->softirq_context)
 +# define trace_hardirqs_enabled(p)	((p)->hardirqs_enabled)
 +# define trace_softirqs_enabled(p)	((p)->softirqs_enabled)
 +# define trace_hardirq_enter()			\
++=======
+ # define lockdep_hardirq_context(p)	((p)->hardirq_context)
+ # define lockdep_softirq_context(p)	((p)->softirq_context)
+ # define lockdep_hardirqs_enabled(p)	((p)->hardirqs_enabled)
+ # define lockdep_softirqs_enabled(p)	((p)->softirqs_enabled)
+ # define lockdep_hardirq_enter()		\
++>>>>>>> ef996916e78e (lockdep: Rename trace_{hard,soft}{irq_context,irqs_enabled}())
  do {						\
 -	current->hardirq_context++;		\
 +	if (!current->hardirq_context++)	\
 +		current->hardirq_threaded = 0;	\
  } while (0)
 -# define lockdep_hardirq_exit()			\
 +# define trace_hardirq_threaded()		\
 +do {						\
 +	current->hardirq_threaded = 1;		\
 +} while (0)
 +# define trace_hardirq_exit()			\
  do {						\
  	current->hardirq_context--;		\
  } while (0)
@@@ -82,23 -54,14 +90,32 @@@ do {						
  #else
  # define trace_hardirqs_on()		do { } while (0)
  # define trace_hardirqs_off()		do { } while (0)
++<<<<<<< HEAD
 +# define trace_softirqs_on(ip)		do { } while (0)
 +# define trace_softirqs_off(ip)		do { } while (0)
 +# define trace_hardirq_context(p)	0
 +# define trace_softirq_context(p)	0
 +# define trace_hardirqs_enabled(p)	0
 +# define trace_softirqs_enabled(p)	0
 +# define trace_hardirq_enter()		do { } while (0)
 +# define trace_hardirq_threaded()	do { } while (0)
 +# define trace_hardirq_exit()		do { } while (0)
++=======
+ # define lockdep_hardirq_context(p)	0
+ # define lockdep_softirq_context(p)	0
+ # define lockdep_hardirqs_enabled(p)	0
+ # define lockdep_softirqs_enabled(p)	0
+ # define lockdep_hardirq_enter()	do { } while (0)
+ # define lockdep_hardirq_exit()		do { } while (0)
++>>>>>>> ef996916e78e (lockdep: Rename trace_{hard,soft}{irq_context,irqs_enabled}())
  # define lockdep_softirq_enter()	do { } while (0)
  # define lockdep_softirq_exit()		do { } while (0)
 +# define lockdep_hrtimer_enter(__hrtimer)		do { } while (0)
 +# define lockdep_hrtimer_exit(__hrtimer)		do { } while (0)
 +# define lockdep_posixtimer_enter()		do { } while (0)
 +# define lockdep_posixtimer_exit()		do { } while (0)
 +# define lockdep_irq_work_enter(__work)		do { } while (0)
 +# define lockdep_irq_work_exit(__work)		do { } while (0)
  #endif
  
  #if defined(CONFIG_IRQSOFF_TRACER) || \
diff --cc tools/include/linux/irqflags.h
index e734da3e5b33,67e01bbadbfe..000000000000
--- a/tools/include/linux/irqflags.h
+++ b/tools/include/linux/irqflags.h
@@@ -2,12 -2,12 +2,21 @@@
  #ifndef _LIBLOCKDEP_LINUX_TRACE_IRQFLAGS_H_
  #define _LIBLOCKDEP_LINUX_TRACE_IRQFLAGS_H_
  
++<<<<<<< HEAD
 +# define trace_hardirq_context(p)	0
 +# define trace_softirq_context(p)	0
 +# define trace_hardirqs_enabled(p)	0
 +# define trace_softirqs_enabled(p)	0
 +# define trace_hardirq_enter()		do { } while (0)
 +# define trace_hardirq_exit()		do { } while (0)
++=======
+ # define lockdep_hardirq_context(p)	0
+ # define lockdep_softirq_context(p)	0
+ # define lockdep_hardirqs_enabled(p)	0
+ # define lockdep_softirqs_enabled(p)	0
+ # define lockdep_hardirq_enter()	do { } while (0)
+ # define lockdep_hardirq_exit()		do { } while (0)
++>>>>>>> ef996916e78e (lockdep: Rename trace_{hard,soft}{irq_context,irqs_enabled}())
  # define lockdep_softirq_enter()	do { } while (0)
  # define lockdep_softirq_exit()		do { } while (0)
  # define INIT_TRACE_IRQFLAGS
* Unmerged path include/linux/irqflags.h
diff --git a/kernel/locking/lockdep.c b/kernel/locking/lockdep.c
index 01e6447ff037..d4810b1f78f5 100644
--- a/kernel/locking/lockdep.c
+++ b/kernel/locking/lockdep.c
@@ -3354,10 +3354,10 @@ print_usage_bug(struct task_struct *curr, struct held_lock *this,
 
 	pr_warn("%s/%d [HC%u[%lu]:SC%u[%lu]:HE%u:SE%u] takes:\n",
 		curr->comm, task_pid_nr(curr),
-		trace_hardirq_context(curr), hardirq_count() >> HARDIRQ_SHIFT,
-		trace_softirq_context(curr), softirq_count() >> SOFTIRQ_SHIFT,
-		trace_hardirqs_enabled(curr),
-		trace_softirqs_enabled(curr));
+		lockdep_hardirq_context(curr), hardirq_count() >> HARDIRQ_SHIFT,
+		lockdep_softirq_context(curr), softirq_count() >> SOFTIRQ_SHIFT,
+		lockdep_hardirqs_enabled(curr),
+		lockdep_softirqs_enabled(curr));
 	print_lock(this);
 
 	pr_warn("{%s} state was registered at:\n", usage_str[prev_bit]);
diff --git a/kernel/softirq.c b/kernel/softirq.c
index cd64f829bfac..2f0a38b7f33c 100644
--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -224,7 +224,7 @@ static inline bool lockdep_softirq_start(void)
 {
 	bool in_hardirq = false;
 
-	if (trace_hardirq_context(current)) {
+	if (lockdep_hardirq_context(current)) {
 		in_hardirq = true;
 		trace_hardirq_exit();
 	}
* Unmerged path tools/include/linux/irqflags.h
