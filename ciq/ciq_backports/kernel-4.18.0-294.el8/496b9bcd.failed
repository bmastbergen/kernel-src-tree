xfs: fix use-after-free when aborting corrupt attr inactivation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 496b9bcd62b0b3a160be61e3265a086f97adcbd3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/496b9bcd.failed

Log the corrupt buffer before we release the buffer.

Fixes: a5155b870d687 ("xfs: always log corruption errors")
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 496b9bcd62b0b3a160be61e3265a086f97adcbd3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_attr_inactive.c
diff --cc fs/xfs/xfs_attr_inactive.c
index fb972a21554d,fe8f60b59ec4..000000000000
--- a/fs/xfs/xfs_attr_inactive.c
+++ b/fs/xfs/xfs_attr_inactive.c
@@@ -143,8 -145,9 +143,14 @@@ xfs_attr3_node_inactive
  	 * Since this code is recursive (gasp!) we must protect ourselves.
  	 */
  	if (level > XFS_DA_NODE_MAXDEPTH) {
++<<<<<<< HEAD
 +		xfs_trans_brelse(*trans, bp);	/* no locks for later trans */
 +		return -EIO;
++=======
+ 		xfs_buf_corruption_error(bp);
+ 		xfs_trans_brelse(*trans, bp);	/* no locks for later trans */
+ 		return -EFSCORRUPTED;
++>>>>>>> 496b9bcd62b0 (xfs: fix use-after-free when aborting corrupt attr inactivation)
  	}
  
  	xfs_da3_node_hdr_from_disk(dp->i_mount, &ichdr, bp->b_addr);
* Unmerged path fs/xfs/xfs_attr_inactive.c
