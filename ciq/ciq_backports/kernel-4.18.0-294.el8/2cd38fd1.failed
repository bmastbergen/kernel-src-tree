driver core: Remove unnecessary is_fwnode_dev variable in device_add()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Saravana Kannan <saravanak@google.com>
commit 2cd38fd15e4ebcfe917a443734820269f8b5ba2b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2cd38fd1.failed

That variable is no longer necessary. Remove it and also fix a minor
typo in comments.

	Signed-off-by: Saravana Kannan <saravanak@google.com>
Link: https://lore.kernel.org/r/20200520034824.79049-2-saravanak@google.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 2cd38fd15e4ebcfe917a443734820269f8b5ba2b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/core.c
diff --cc drivers/base/core.c
index a7a93bf98225,55310c97a8b7..000000000000
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@@ -2175,8 -2623,22 +2175,27 @@@ int device_add(struct device *dev
  
  	kobject_uevent(&dev->kobj, KOBJ_ADD);
  
++<<<<<<< HEAD
 +	if (dev->fwnode && !dev->fwnode->dev)
 +		dev->fwnode->dev = dev;
++=======
+ 	/*
+ 	 * Check if any of the other devices (consumers) have been waiting for
+ 	 * this device (supplier) to be added so that they can create a device
+ 	 * link to it.
+ 	 *
+ 	 * This needs to happen after device_pm_add() because device_link_add()
+ 	 * requires the supplier be registered before it's called.
+ 	 *
+ 	 * But this also needs to happen before bus_probe_device() to make sure
+ 	 * waiting consumers can link to it before the driver is bound to the
+ 	 * device and the driver sync_state callback is called for this device.
+ 	 */
+ 	if (dev->fwnode && !dev->fwnode->dev) {
+ 		dev->fwnode->dev = dev;
+ 		fw_devlink_link_device(dev);
+ 	}
++>>>>>>> 2cd38fd15e4e (driver core: Remove unnecessary is_fwnode_dev variable in device_add())
  
  	bus_probe_device(dev);
  	if (parent)
* Unmerged path drivers/base/core.c
