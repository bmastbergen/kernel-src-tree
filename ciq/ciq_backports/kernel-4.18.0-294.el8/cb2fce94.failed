ASoC: soc-pcm: ignore un-needed mutex_unlock() case on soc_pcm_open()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: soc-pcm: ignore un-needed mutex_unlock() case on soc_pcm_open() (Jaroslav Kysela) [1783462]
Rebuild_FUZZ: 95.83%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit cb2fce94c84e2c2798dca45aa00d1e03294fab95
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/cb2fce94.failed

commit 140a4532cdb8c ("ASoC: soc-pcm: add soc_pcm_clean() and call it
from soc_pcm_open/close()") switch to call soc_pcm_clean() on
soc_pcm_open() when rollback case.

But, it uses "goto err" (A) *before* mutex_lock() (B) when error of
snd_soc_pcm_component_pm_runtime_get().
The mutex_unlock() (C) is not needed in such case. This patch fix it.

	static int soc_pcm_open(...)
	{
		...
		ret = snd_soc_pcm_component_pm_runtime_get(rtd, substream);
		if (ret < 0)
(A)			goto err;

(B)		mutex_lock_nested(...);
		...
	err:
(C)		mutex_unlock(..);
		...
	}

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Link: https://lore.kernel.org/r/87k0waag44.wl-kuninori.morimoto.gx@renesas.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit cb2fce94c84e2c2798dca45aa00d1e03294fab95)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-pcm.c
diff --cc sound/soc/soc-pcm.c
index 82d806ac486a,5d538520e2cf..000000000000
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@@ -601,8 -704,9 +601,14 @@@ static int soc_pcm_open(struct snd_pcm_
  	for_each_rtd_components(rtd, i, component)
  		pinctrl_pm_select_default_state(component->dev);
  
++<<<<<<< HEAD
 +	for_each_rtd_components(rtd, i, component)
 +		pm_runtime_get_sync(component->dev);
++=======
+ 	ret = snd_soc_pcm_component_pm_runtime_get(rtd, substream);
+ 	if (ret < 0)
+ 		goto pm_err;
++>>>>>>> cb2fce94c84e (ASoC: soc-pcm: ignore un-needed mutex_unlock() case on soc_pcm_open())
  
  	mutex_lock_nested(&rtd->card->pcm_mutex, rtd->card->pcm_subclass);
  
@@@ -685,32 -782,13 +691,38 @@@
  		 runtime->hw.channels_max);
  	pr_debug("ASoC: min rate %d max rate %d\n", runtime->hw.rate_min,
  		 runtime->hw.rate_max);
 +
  dynamic:
 +
  	snd_soc_runtime_activate(rtd, substream->stream);
 -err:
 +
  	mutex_unlock(&rtd->card->pcm_mutex);
 +	return 0;
 +
 +config_err:
 +	for_each_rtd_dais_rollback(rtd, i, dai)
 +		snd_soc_dai_shutdown(dai, substream, 1);
 +
 +	soc_rtd_shutdown(rtd, substream);
 +rtd_startup_err:
 +	soc_pcm_components_close(substream);
 +component_err:
 +	mutex_unlock(&rtd->card->pcm_mutex);
++<<<<<<< HEAD
 +
 +	for_each_rtd_components(rtd, i, component) {
 +		pm_runtime_mark_last_busy(component->dev);
 +		pm_runtime_put_autosuspend(component->dev);
 +	}
 +
 +	for_each_rtd_components(rtd, i, component)
 +		if (!component->active)
 +			pinctrl_pm_select_sleep_state(component->dev);
++=======
+ pm_err:
+ 	if (ret < 0)
+ 		soc_pcm_clean(substream, 1);
++>>>>>>> cb2fce94c84e (ASoC: soc-pcm: ignore un-needed mutex_unlock() case on soc_pcm_open())
  
  	return ret;
  }
* Unmerged path sound/soc/soc-pcm.c
