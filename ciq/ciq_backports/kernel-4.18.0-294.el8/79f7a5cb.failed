iommu/arm-smmu: Improve SMR mask test

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Robin Murphy <robin.murphy@arm.com>
commit 79f7a5cb87baa229b321246b3f33af875d8a1ef7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/79f7a5cb.failed

Make the SMR mask test more robust against SMR0 being live
at probe time, which might happen once we start supporting
firmware reservations for framebuffers and suchlike.

	Signed-off-by: Robin Murphy <robin.murphy@arm.com>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 79f7a5cb87baa229b321246b3f33af875d8a1ef7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/arm-smmu.c
diff --cc drivers/iommu/arm-smmu.c
index b4652ac29e56,cca94c30b301..000000000000
--- a/drivers/iommu/arm-smmu.c
+++ b/drivers/iommu/arm-smmu.c
@@@ -1133,8 -970,8 +1133,9 @@@ static void arm_smmu_write_sme(struct a
   */
  static void arm_smmu_test_smr_masks(struct arm_smmu_device *smmu)
  {
 +	void __iomem *gr0_base = ARM_SMMU_GR0(smmu);
  	u32 smr;
+ 	int i;
  
  	if (!smmu->smrs)
  		return;
@@@ -1144,15 -993,15 +1157,27 @@@ smr_ok
  	 * bits are set, so check each one separately. We can reject
  	 * masters later if they try to claim IDs outside these masks.
  	 */
++<<<<<<< HEAD
 +	smr = smmu->streamid_mask << SMR_ID_SHIFT;
 +	writel_relaxed(smr, gr0_base + ARM_SMMU_GR0_SMR(0));
 +	smr = readl_relaxed(gr0_base + ARM_SMMU_GR0_SMR(0));
 +	smmu->streamid_mask = smr >> SMR_ID_SHIFT;
 +
 +	smr = smmu->streamid_mask << SMR_MASK_SHIFT;
 +	writel_relaxed(smr, gr0_base + ARM_SMMU_GR0_SMR(0));
 +	smr = readl_relaxed(gr0_base + ARM_SMMU_GR0_SMR(0));
 +	smmu->smr_mask_mask = smr >> SMR_MASK_SHIFT;
++=======
+ 	smr = FIELD_PREP(ARM_SMMU_SMR_ID, smmu->streamid_mask);
+ 	arm_smmu_gr0_write(smmu, ARM_SMMU_GR0_SMR(i), smr);
+ 	smr = arm_smmu_gr0_read(smmu, ARM_SMMU_GR0_SMR(i));
+ 	smmu->streamid_mask = FIELD_GET(ARM_SMMU_SMR_ID, smr);
+ 
+ 	smr = FIELD_PREP(ARM_SMMU_SMR_MASK, smmu->streamid_mask);
+ 	arm_smmu_gr0_write(smmu, ARM_SMMU_GR0_SMR(i), smr);
+ 	smr = arm_smmu_gr0_read(smmu, ARM_SMMU_GR0_SMR(i));
+ 	smmu->smr_mask_mask = FIELD_GET(ARM_SMMU_SMR_MASK, smr);
++>>>>>>> 79f7a5cb87ba (iommu/arm-smmu: Improve SMR mask test)
  }
  
  static int arm_smmu_find_sme(struct arm_smmu_device *smmu, u16 id, u16 mask)
* Unmerged path drivers/iommu/arm-smmu.c
