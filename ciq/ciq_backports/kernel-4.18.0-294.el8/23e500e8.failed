net: atlantic: disable PTP on AQC111, AQC112

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Nikita Danilov <ndanilov@marvell.com>
commit 23e500e88723f243c27e1b26c9d035d4cdd1b24a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/23e500e8.failed

This patch disables PTP on AQC111 and AQC112 due to a known HW issue,
which can cause datapath issues.

Ideally PTP block should have been disabled via PHY provisioning, but
unfortunately many units have been shipped with enabled PTP block.
Thus, we have to work around this in the driver.

Fixes: dbcd6806af420 ("net: aquantia: add support for Phy access")
	Signed-off-by: Nikita Danilov <ndanilov@marvell.com>
	Signed-off-by: Mark Starovoytov <mstarovoitov@marvell.com>
	Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 23e500e88723f243c27e1b26c9d035d4cdd1b24a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/aq_hw.h
#	drivers/net/ethernet/aquantia/atlantic/aq_nic.c
#	drivers/net/ethernet/aquantia/atlantic/aq_nic.h
#	drivers/net/ethernet/aquantia/atlantic/aq_phy.c
#	drivers/net/ethernet/aquantia/atlantic/aq_phy.h
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_hw.h
index 46eaf70c5ccb,992fedbe4ce3..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_hw.h
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_hw.h
@@@ -55,6 -64,8 +55,11 @@@ struct aq_hw_caps_s 
  	u8 rx_rings;
  	bool flow_control;
  	bool is_64_dma;
++<<<<<<< HEAD
++=======
+ 	u32 quirks;
+ 	u32 priv_data_len;
++>>>>>>> 23e500e88723 (net: atlantic: disable PTP on AQC111, AQC112)
  };
  
  struct aq_hw_link_status_s {
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_nic.c
index ed7d344e3ed7,7c7bf6bf163f..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_nic.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_nic.c
@@@ -342,9 -411,44 +342,34 @@@ int aq_nic_init(struct aq_nic_s *self
  	if (err < 0)
  		goto err_exit;
  
++<<<<<<< HEAD
 +	for (i = 0U, aq_vec = self->aq_vec[0];
 +		self->aq_vecs > i; ++i, aq_vec = self->aq_vec[i])
++=======
+ 	if (ATL_HW_IS_CHIP_FEATURE(self->aq_hw, ATLANTIC) &&
+ 	    self->aq_nic_cfg.aq_hw_caps->media_type == AQ_HW_MEDIA_TYPE_TP) {
+ 		self->aq_hw->phy_id = HW_ATL_PHY_ID_MAX;
+ 		err = aq_phy_init(self->aq_hw);
+ 
+ 		/* Disable the PTP on NICs where it's known to cause datapath
+ 		 * problems.
+ 		 * Ideally this should have been done by PHY provisioning, but
+ 		 * many units have been shipped with enabled PTP block already.
+ 		 */
+ 		if (self->aq_nic_cfg.aq_hw_caps->quirks & AQ_NIC_QUIRK_BAD_PTP)
+ 			if (self->aq_hw->phy_id != HW_ATL_PHY_ID_MAX)
+ 				aq_phy_disable_ptp(self->aq_hw);
+ 	}
+ 
+ 	for (i = 0U; i < self->aq_vecs; i++) {
+ 		aq_vec = self->aq_vec[i];
+ 		err = aq_vec_ring_alloc(aq_vec, self, i,
+ 					aq_nic_get_cfg(self));
+ 		if (err)
+ 			goto err_exit;
+ 
++>>>>>>> 23e500e88723 (net: atlantic: disable PTP on AQC111, AQC112)
  		aq_vec_init(aq_vec, self->aq_hw_ops, self->aq_hw);
 -	}
 -
 -	if (aq_nic_get_cfg(self)->is_ptp) {
 -		err = aq_ptp_init(self, self->irqvecs - 1);
 -		if (err < 0)
 -			goto err_exit;
 -
 -		err = aq_ptp_ring_alloc(self);
 -		if (err < 0)
 -			goto err_exit;
 -
 -		err = aq_ptp_ring_init(self);
 -		if (err < 0)
 -			goto err_exit;
 -	}
  
  	netif_carrier_off(self->ndev);
  
diff --cc drivers/net/ethernet/aquantia/atlantic/aq_nic.h
index f6d04351e098,439ce9692dac..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/aq_nic.h
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_nic.h
@@@ -58,10 -81,21 +58,17 @@@ struct aq_nic_cfg_s 
  #define AQ_NIC_FLAG_ERR_UNPLUG  0x40000000U
  #define AQ_NIC_FLAG_ERR_HW      0x80000000U
  
++<<<<<<< HEAD
 +#define AQ_NIC_WOL_ENABLED	BIT(0)
++=======
+ #define AQ_NIC_QUIRK_BAD_PTP    BIT(0)
+ 
+ #define AQ_NIC_WOL_MODES        (WAKE_MAGIC |\
+ 				 WAKE_PHY)
++>>>>>>> 23e500e88723 (net: atlantic: disable PTP on AQC111, AQC112)
  
 -#define AQ_NIC_CFG_RING_PER_TC(_NIC_CFG_) \
 -	(((_NIC_CFG_)->tc_mode == AQ_TC_MODE_4TCS) ? 8 : 4)
 -
 -#define AQ_NIC_CFG_TCVEC2RING(_NIC_CFG_, _TC_, _VEC_) \
 -	((_TC_) * AQ_NIC_CFG_RING_PER_TC(_NIC_CFG_) + (_VEC_))
 -
 -#define AQ_NIC_RING2QMAP(_NIC_, _ID_) \
 -	((_ID_) / AQ_NIC_CFG_RING_PER_TC(&(_NIC_)->aq_nic_cfg) * \
 -		(_NIC_)->aq_vecs + \
 -	((_ID_) % AQ_NIC_CFG_RING_PER_TC(&(_NIC_)->aq_nic_cfg)))
 +#define AQ_NIC_TCVEC2RING(_NIC_, _TC_, _VEC_) \
 +	((_TC_) * AQ_CFG_TCS_MAX + (_VEC_))
  
  struct aq_hw_rx_fl2 {
  	struct aq_rx_filter_vlan aq_vlans[AQ_VLAN_MAX_FILTERS];
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_phy.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_phy.h
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_hw.h
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_nic.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_nic.h
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_phy.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/aq_phy.h
diff --git a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c
index b7e5ce0d7af5..f6aa66d7255a 100644
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c
@@ -87,6 +87,25 @@ const struct aq_hw_caps_s hw_atl_b0_caps_aqc109 = {
 			  AQ_NIC_RATE_100M,
 };
 
+const struct aq_hw_caps_s hw_atl_b0_caps_aqc111 = {
+	DEFAULT_B0_BOARD_BASIC_CAPABILITIES,
+	.media_type = AQ_HW_MEDIA_TYPE_TP,
+	.link_speed_msk = AQ_NIC_RATE_5G |
+			  AQ_NIC_RATE_2G5 |
+			  AQ_NIC_RATE_1G |
+			  AQ_NIC_RATE_100M,
+	.quirks = AQ_NIC_QUIRK_BAD_PTP,
+};
+
+const struct aq_hw_caps_s hw_atl_b0_caps_aqc112 = {
+	DEFAULT_B0_BOARD_BASIC_CAPABILITIES,
+	.media_type = AQ_HW_MEDIA_TYPE_TP,
+	.link_speed_msk = AQ_NIC_RATE_2G5 |
+			  AQ_NIC_RATE_1G  |
+			  AQ_NIC_RATE_100M,
+	.quirks = AQ_NIC_QUIRK_BAD_PTP,
+};
+
 static int hw_atl_b0_hw_reset(struct aq_hw_s *self)
 {
 	int err = 0;
diff --git a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h
index b1c0b6850e60..82e93ecb4956 100644
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h
@@ -20,17 +20,15 @@ extern const struct aq_hw_caps_s hw_atl_b0_caps_aqc100;
 extern const struct aq_hw_caps_s hw_atl_b0_caps_aqc107;
 extern const struct aq_hw_caps_s hw_atl_b0_caps_aqc108;
 extern const struct aq_hw_caps_s hw_atl_b0_caps_aqc109;
-
-#define hw_atl_b0_caps_aqc111 hw_atl_b0_caps_aqc108
-#define hw_atl_b0_caps_aqc112 hw_atl_b0_caps_aqc109
+extern const struct aq_hw_caps_s hw_atl_b0_caps_aqc111;
+extern const struct aq_hw_caps_s hw_atl_b0_caps_aqc112;
 
 #define hw_atl_b0_caps_aqc100s hw_atl_b0_caps_aqc100
 #define hw_atl_b0_caps_aqc107s hw_atl_b0_caps_aqc107
 #define hw_atl_b0_caps_aqc108s hw_atl_b0_caps_aqc108
 #define hw_atl_b0_caps_aqc109s hw_atl_b0_caps_aqc109
-
-#define hw_atl_b0_caps_aqc111s hw_atl_b0_caps_aqc108
-#define hw_atl_b0_caps_aqc112s hw_atl_b0_caps_aqc109
+#define hw_atl_b0_caps_aqc111s hw_atl_b0_caps_aqc111
+#define hw_atl_b0_caps_aqc112s hw_atl_b0_caps_aqc112
 
 extern const struct aq_hw_ops hw_atl_ops_b0;
 
