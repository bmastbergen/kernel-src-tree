ASoC: use snd_soc_xxx_active()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: use snd_soc_xxx_active() (Jaroslav Kysela) [1869536]
Rebuild_FUZZ: 90.91%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit b3dea624b52e8b18cd49f804ce70fe50374aa5db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b3dea624.failed

We have snd_soc_dai/dai_stream/component_active() macro
This patch uses it.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Link: https://lore.kernel.org/r/8736826n44.wl-kuninori.morimoto.gx@renesas.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit b3dea624b52e8b18cd49f804ce70fe50374aa5db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-pcm.c
diff --cc sound/soc/soc-pcm.c
index a13e43103b4d,b7899da4217e..000000000000
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@@ -2552,7 -2709,7 +2552,11 @@@ static int soc_dpcm_fe_runtime_update(s
  		return 0;
  
  	/* only check active links */
++<<<<<<< HEAD
 +	if (!fe->cpu_dai->active)
++=======
+ 	if (!snd_soc_dai_active(asoc_rtd_to_cpu(fe, 0)))
++>>>>>>> b3dea624b52e (ASoC: use snd_soc_xxx_active())
  		return 0;
  
  	/* DAPM sync will call this to update DSP paths */
@@@ -2567,8 -2724,8 +2571,13 @@@
  			continue;
  
  		/* skip if FE isn't currently playing/capturing */
++<<<<<<< HEAD
 +		if (!fe->cpu_dai->stream_active[stream] ||
 +		    !fe->codec_dai->stream_active[stream])
++=======
+ 		if (!snd_soc_dai_stream_active(asoc_rtd_to_cpu(fe, 0), stream) ||
+ 		    !snd_soc_dai_stream_active(asoc_rtd_to_codec(fe, 0), stream))
++>>>>>>> b3dea624b52e (ASoC: use snd_soc_xxx_active())
  			continue;
  
  		paths = dpcm_path_get(fe, stream, &list);
diff --git a/sound/soc/soc-compress.c b/sound/soc/soc-compress.c
index 1a83d7bd465d..569e19a3ba17 100644
--- a/sound/soc/soc-compress.c
+++ b/sound/soc/soc-compress.c
@@ -231,10 +231,10 @@ static int soc_compr_free(struct snd_compr_stream *cstream)
 
 	snd_soc_dai_digital_mute(codec_dai, 1, cstream->direction);
 
-	if (!cpu_dai->active)
+	if (!snd_soc_dai_active(cpu_dai))
 		cpu_dai->rate = 0;
 
-	if (!codec_dai->active)
+	if (!snd_soc_dai_active(codec_dai))
 		codec_dai->rate = 0;
 
 	if (rtd->dai_link->compr_ops && rtd->dai_link->compr_ops->shutdown)
diff --git a/sound/soc/soc-core.c b/sound/soc/soc-core.c
index f4462b91aeda..db8d64946ad0 100644
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@ -399,7 +399,8 @@ void snd_soc_close_delayed_work(struct snd_soc_pcm_runtime *rtd)
 	dev_dbg(rtd->dev,
 		"ASoC: pop wq checking: %s status: %s waiting: %s\n",
 		codec_dai->driver->playback.stream_name,
-		codec_dai->stream_active[playback] ? "active" : "inactive",
+		snd_soc_dai_stream_active(codec_dai, playback) ?
+		"active" : "inactive",
 		rtd->pop_wait ? "yes" : "no");
 
 	/* are we waiting on this codec DAI stream */
@@ -573,7 +574,7 @@ int snd_soc_suspend(struct device *dev)
 			continue;
 
 		for_each_rtd_codec_dais(rtd, i, dai) {
-			if (dai->stream_active[playback])
+			if (snd_soc_dai_stream_active(dai, playback))
 				snd_soc_dai_digital_mute(dai, 1, playback);
 		}
 	}
@@ -715,7 +716,7 @@ static void soc_resume_deferred(struct work_struct *work)
 			continue;
 
 		for_each_rtd_codec_dais(rtd, i, dai) {
-			if (dai->stream_active[playback])
+			if (snd_soc_dai_stream_active(dai, playback))
 				snd_soc_dai_digital_mute(dai, 0, playback);
 		}
 	}
@@ -745,7 +746,7 @@ int snd_soc_resume(struct device *dev)
 
 	/* activate pins from sleep state */
 	for_each_card_components(card, component)
-		if (component->active)
+		if (snd_soc_component_active(component))
 			pinctrl_pm_select_default_state(component->dev);
 
 	dev_dbg(dev, "ASoC: Scheduling resume work\n");
@@ -1970,7 +1971,7 @@ static int snd_soc_bind_card(struct snd_soc_card *card)
 
 	/* deactivate pins to sleep state */
 	for_each_card_components(card, component)
-		if (!component->active)
+		if (!snd_soc_component_active(component))
 			pinctrl_pm_select_sleep_state(component->dev);
 
 probe_end:
* Unmerged path sound/soc/soc-pcm.c
