net: atlantic: align return value of ver_match function with function name

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Mark Starovoytov <mstarovoitov@marvell.com>
commit b567edbfc85ac375181862808928aeb381560c68
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b567edbf.failed

This patch aligns the return value of hw_atl_utils_ver_match function with
its name.
Change the return type to bool, because it's better aligned with the actual
usage. Return true when the version matches, false otherwise.

	Signed-off-by: Mark Starovoytov <mstarovoitov@marvell.com>
	Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b567edbfc85ac375181862808928aeb381560c68)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c
#	drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h
#	drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils.c
diff --cc drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c
index 38915aa0fd19,22f68e4a638c..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c
@@@ -68,16 -70,13 +68,13 @@@ int hw_atl_utils_initfw(struct aq_hw_s 
  	hw_atl_utils_hw_chip_features_init(self,
  					   &self->chip_features);
  
 -	self->fw_ver_actual = hw_atl_utils_get_fw_version(self);
 +	hw_atl_utils_get_fw_version(self, &self->fw_ver_actual);
  
- 	if (hw_atl_utils_ver_match(HW_ATL_FW_VER_1X,
- 				   self->fw_ver_actual) == 0) {
+ 	if (hw_atl_utils_ver_match(HW_ATL_FW_VER_1X, self->fw_ver_actual)) {
  		*fw_ops = &aq_fw_1x_ops;
- 	} else if (hw_atl_utils_ver_match(HW_ATL_FW_VER_2X,
- 					  self->fw_ver_actual) == 0) {
+ 	} else if (hw_atl_utils_ver_match(HW_ATL_FW_VER_2X, self->fw_ver_actual)) {
  		*fw_ops = &aq_fw_2x_ops;
- 	} else if (hw_atl_utils_ver_match(HW_ATL_FW_VER_3X,
- 					  self->fw_ver_actual) == 0) {
+ 	} else if (hw_atl_utils_ver_match(HW_ATL_FW_VER_3X, self->fw_ver_actual)) {
  		*fw_ops = &aq_fw_2x_ops;
  	} else {
  		aq_pr_err("Bad FW version detected: %x\n",
@@@ -375,19 -418,33 +372,46 @@@ err_exit
  	return err;
  }
  
++<<<<<<< HEAD
 +static int hw_atl_utils_ver_match(u32 ver_expected, u32 ver_actual)
++=======
+ int hw_atl_write_fwcfg_dwords(struct aq_hw_s *self, u32 *p, u32 cnt)
+ {
+ 	return hw_atl_utils_fw_upload_dwords(self, self->rpc_addr, p,
+ 					     cnt, MCP_AREA_CONFIG);
+ }
+ 
+ int hw_atl_write_fwsettings_dwords(struct aq_hw_s *self, u32 offset, u32 *p,
+ 				   u32 cnt)
+ {
+ 	return hw_atl_utils_fw_upload_dwords(self, self->settings_addr + offset,
+ 					     p, cnt, MCP_AREA_SETTINGS);
+ }
+ 
+ bool hw_atl_utils_ver_match(u32 ver_expected, u32 ver_actual)
++>>>>>>> b567edbfc85a (net: atlantic: align return value of ver_match function with function name)
  {
 +	int err = 0;
  	const u32 dw_major_mask = 0xff000000U;
  	const u32 dw_minor_mask = 0x00ffffffU;
++<<<<<<< HEAD
++=======
+ 	bool ver_match;
++>>>>>>> b567edbfc85a (net: atlantic: align return value of ver_match function with function name)
  
- 	err = (dw_major_mask & (ver_expected ^ ver_actual)) ? -EOPNOTSUPP : 0;
- 	if (err < 0)
+ 	ver_match = (dw_major_mask & (ver_expected ^ ver_actual)) ? false : true;
+ 	if (!ver_match)
  		goto err_exit;
++<<<<<<< HEAD
 +	err = ((dw_minor_mask & ver_expected) > (dw_minor_mask & ver_actual)) ?
 +		-EOPNOTSUPP : 0;
++=======
+ 	ver_match = ((dw_minor_mask & ver_expected) > (dw_minor_mask & ver_actual)) ?
+ 		false : true;
+ 
++>>>>>>> b567edbfc85a (net: atlantic: align return value of ver_match function with function name)
  err_exit:
- 	return err;
+ 	return ver_match;
  }
  
  static int hw_atl_utils_init_ucp(struct aq_hw_s *self,
diff --cc drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h
index 7b58f16ebe72,f5901f8e3907..000000000000
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h
@@@ -485,6 -635,8 +485,11 @@@ int hw_atl_utils_fw_rpc_call(struct aq_
  int hw_atl_utils_fw_rpc_wait(struct aq_hw_s *self,
  			     struct hw_atl_utils_fw_rpc **rpc);
  
++<<<<<<< HEAD
++=======
+ bool hw_atl_utils_ver_match(u32 ver_expected, u32 ver_actual);
+ 
++>>>>>>> b567edbfc85a (net: atlantic: align return value of ver_match function with function name)
  extern const struct aq_fw_ops aq_fw_1x_ops;
  extern const struct aq_fw_ops aq_fw_2x_ops;
  
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h
* Unmerged path drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils.c
