mm, memcg: fix error return value of mem_cgroup_css_alloc()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Yafang Shao <laoar.shao@gmail.com>
commit 11d6761218d19ca06ae5387f4e3692c4fa9e7493
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/11d67612.failed

When I run my memcg testcase which creates lots of memcgs, I found
there're unexpected out of memory logs while there're still enough
available free memory.  The error log is

  mkdir: cannot create directory 'foo.65533': Cannot allocate memory

The reason is when we try to create more than MEM_CGROUP_ID_MAX memcgs,
an -ENOMEM errno will be set by mem_cgroup_css_alloc(), but the right
errno should be -ENOSPC "No space left on device", which is an
appropriate errno for userspace's failed mkdir.

As the errno really misled me, we should make it right.  After this
patch, the error log will be

  mkdir: cannot create directory 'foo.65533': No space left on device

[akpm@linux-foundation.org: s/EBUSY/ENOSPC/, per Michal]
[akpm@linux-foundation.org: s/EBUSY/ENOSPC/, per Michal]
Fixes: 73f576c04b94 ("mm: memcontrol: fix cgroup creation failure after many small jobs")
	Suggested-by: Matthew Wilcox <willy@infradead.org>
	Signed-off-by: Yafang Shao <laoar.shao@gmail.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Acked-by: Michal Hocko <mhocko@kernel.org>
	Acked-by: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
Link: http://lkml.kernel.org/r/20200407063621.GA18914@dhcp22.suse.cz
Link: http://lkml.kernel.org/r/1586192163-20099-1-git-send-email-laoar.shao@gmail.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 11d6761218d19ca06ae5387f4e3692c4fa9e7493)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memcontrol.c
diff --cc mm/memcontrol.c
index 9d531ee4d76f,a3b97f103966..000000000000
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@@ -4870,8 -4987,10 +4870,13 @@@ static void mem_cgroup_free(struct mem_
  static struct mem_cgroup *mem_cgroup_alloc(void)
  {
  	struct mem_cgroup *memcg;
 -	unsigned int size;
 +	size_t size;
  	int node;
++<<<<<<< HEAD
++=======
+ 	int __maybe_unused i;
+ 	long error = -ENOMEM;
++>>>>>>> 11d6761218d1 (mm, memcg: fix error return value of mem_cgroup_css_alloc())
  
  	size = sizeof(struct mem_cgroup);
  	size += nr_node_ids * sizeof(struct mem_cgroup_per_node *);
* Unmerged path mm/memcontrol.c
