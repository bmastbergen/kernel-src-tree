arm64: pgtable: Ensure dirty bit is preserved across pte_wrprotect()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Will Deacon <will@kernel.org>
commit ff1712f953e27f0b0718762ec17d0adb15c9fd0b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ff1712f9.failed

With hardware dirty bit management, calling pte_wrprotect() on a writable,
dirty PTE will lose the dirty state and return a read-only, clean entry.

Move the logic from ptep_set_wrprotect() into pte_wrprotect() to ensure that
the dirty bit is preserved for writable entries, as this is required for
soft-dirty bit management if we enable it in the future.

	Cc: <stable@vger.kernel.org>
Fixes: 2f4b829c625e ("arm64: Add support for hardware updates of the access and dirty pte bits")
	Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
Link: https://lore.kernel.org/r/20201120143557.6715-3-will@kernel.org
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit ff1712f953e27f0b0718762ec17d0adb15c9fd0b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/pgtable.h
diff --cc arch/arm64/include/asm/pgtable.h
index 26da08cb39f3,5628289b9d5e..000000000000
--- a/arch/arm64/include/asm/pgtable.h
+++ b/arch/arm64/include/asm/pgtable.h
@@@ -146,11 -153,16 +146,24 @@@ static inline pte_t set_pte_bit(pte_t p
  	return pte;
  }
  
++<<<<<<< HEAD
 +static inline pte_t pte_wrprotect(pte_t pte)
 +{
 +	pte = clear_pte_bit(pte, __pgprot(PTE_WRITE));
 +	pte = set_pte_bit(pte, __pgprot(PTE_RDONLY));
 +	return pte;
++=======
+ static inline pmd_t clear_pmd_bit(pmd_t pmd, pgprot_t prot)
+ {
+ 	pmd_val(pmd) &= ~pgprot_val(prot);
+ 	return pmd;
+ }
+ 
+ static inline pmd_t set_pmd_bit(pmd_t pmd, pgprot_t prot)
+ {
+ 	pmd_val(pmd) |= pgprot_val(prot);
+ 	return pmd;
++>>>>>>> ff1712f953e2 (arm64: pgtable: Ensure dirty bit is preserved across pte_wrprotect())
  }
  
  static inline pte_t pte_mkwrite(pte_t pte)
* Unmerged path arch/arm64/include/asm/pgtable.h
