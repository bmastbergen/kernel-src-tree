selinux: Implement the new mount API LSM hooks

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author David Howells <dhowells@redhat.com>
commit 442155c1bd84f82bff2d05d0ec4d0090df17ecfa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/442155c1.failed

Implement the new mount API LSM hooks for SELinux.  At some point the old
hooks will need to be removed.

	Signed-off-by: David Howells <dhowells@redhat.com>
cc: Paul Moore <paul@paul-moore.com>
cc: Stephen Smalley <sds@tycho.nsa.gov>
cc: selinux@tycho.nsa.gov
cc: linux-security-module@vger.kernel.org
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 442155c1bd84f82bff2d05d0ec4d0090df17ecfa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/selinux/hooks.c
diff --cc security/selinux/hooks.c
index 42145010da10,f99381e97d73..000000000000
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@@ -437,24 -456,46 +439,30 @@@ static inline int inode_doinit(struct i
  
  enum {
  	Opt_error = -1,
- 	Opt_context = 1,
+ 	Opt_context = 0,
+ 	Opt_defcontext = 1,
  	Opt_fscontext = 2,
++<<<<<<< HEAD
 +	Opt_defcontext = 3,
 +	Opt_rootcontext = 4,
 +	Opt_labelsupport = 5,
 +	Opt_nextmntopt = 6,
++=======
+ 	Opt_rootcontext = 3,
+ 	Opt_seclabel = 4,
++>>>>>>> 442155c1bd84 (selinux: Implement the new mount API LSM hooks)
  };
  
 -#define A(s, has_arg) {#s, sizeof(#s) - 1, Opt_##s, has_arg}
 -static struct {
 -	const char *name;
 -	int len;
 -	int opt;
 -	bool has_arg;
 -} tokens[] = {
 -	A(context, true),
 -	A(fscontext, true),
 -	A(defcontext, true),
 -	A(rootcontext, true),
 -	A(seclabel, false),
 -};
 -#undef A
 +#define NUM_SEL_MNT_OPTS	(Opt_nextmntopt - 1)
  
 -static int match_opt_prefix(char *s, int l, char **arg)
 -{
 -	int i;
 -
 -	for (i = 0; i < ARRAY_SIZE(tokens); i++) {
 -		size_t len = tokens[i].len;
 -		if (len > l || memcmp(s, tokens[i].name, len))
 -			continue;
 -		if (tokens[i].has_arg) {
 -			if (len == l || s[len] != '=')
 -				continue;
 -			*arg = s + len + 1;
 -		} else if (len != l)
 -			continue;
 -		return tokens[i].opt;
 -	}
 -	return Opt_error;
 -}
 +static const match_table_t tokens = {
 +	{Opt_context, CONTEXT_STR "%s"},
 +	{Opt_fscontext, FSCONTEXT_STR "%s"},
 +	{Opt_defcontext, DEFCONTEXT_STR "%s"},
 +	{Opt_rootcontext, ROOTCONTEXT_STR "%s"},
 +	{Opt_labelsupport, LABELSUPP_STR},
 +	{Opt_error, NULL},
 +};
  
  #define SEL_MOUNT_FAIL_MSG "SELinux:  duplicate or incompatible mount options\n"
  
@@@ -6952,8 -6745,12 +6993,14 @@@ static struct security_hook_list selinu
  	LSM_HOOK_INIT(bprm_committing_creds, selinux_bprm_committing_creds),
  	LSM_HOOK_INIT(bprm_committed_creds, selinux_bprm_committed_creds),
  
++<<<<<<< HEAD
++=======
+ 	LSM_HOOK_INIT(fs_context_parse_param, selinux_fs_context_parse_param),
+ 
+ 	LSM_HOOK_INIT(sb_alloc_security, selinux_sb_alloc_security),
++>>>>>>> 442155c1bd84 (selinux: Implement the new mount API LSM hooks)
  	LSM_HOOK_INIT(sb_free_security, selinux_sb_free_security),
 -	LSM_HOOK_INIT(sb_eat_lsm_opts, selinux_sb_eat_lsm_opts),
 -	LSM_HOOK_INIT(sb_free_mnt_opts, selinux_free_mnt_opts),
 +	LSM_HOOK_INIT(sb_copy_data, selinux_sb_copy_data),
  	LSM_HOOK_INIT(sb_remount, selinux_sb_remount),
  	LSM_HOOK_INIT(sb_kern_mount, selinux_sb_kern_mount),
  	LSM_HOOK_INIT(sb_show_options, selinux_sb_show_options),
* Unmerged path security/selinux/hooks.c
diff --git a/security/selinux/include/security.h b/security/selinux/include/security.h
index 7aa46da70ccb..ba08bfa43f38 100644
--- a/security/selinux/include/security.h
+++ b/security/selinux/include/security.h
@@ -64,11 +64,11 @@
 /* RHEL8-only */
 #define SE_SBGENFS_SYMLINKS	0x8000
 
-#define CONTEXT_STR	"context="
-#define FSCONTEXT_STR	"fscontext="
-#define ROOTCONTEXT_STR	"rootcontext="
-#define DEFCONTEXT_STR	"defcontext="
-#define LABELSUPP_STR "seclabel"
+#define CONTEXT_STR	"context"
+#define FSCONTEXT_STR	"fscontext"
+#define ROOTCONTEXT_STR	"rootcontext"
+#define DEFCONTEXT_STR	"defcontext"
+#define SECLABEL_STR "seclabel"
 
 struct netlbl_lsm_secattr;
 
