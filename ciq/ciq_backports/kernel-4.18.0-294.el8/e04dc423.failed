shmem_parse_options(): take handling a single option into a helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit e04dc423ae2c0fc862fef6b43ed9083226375e98
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/e04dc423.failed

mechanical move.

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit e04dc423ae2c0fc862fef6b43ed9083226375e98)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/shmem.c
diff --cc mm/shmem.c
index 10d9fe3cd81e,b392a8263329..000000000000
--- a/mm/shmem.c
+++ b/mm/shmem.c
@@@ -3362,71 -3471,8 +3438,74 @@@ static int shmem_parse_options(char *op
  			       this_char);
  			goto error;
  		}
++<<<<<<< HEAD
 +
 +		if (!strcmp(this_char,"size")) {
 +			unsigned long long size;
 +			size = memparse(value,&rest);
 +			if (*rest == '%') {
 +				size <<= PAGE_SHIFT;
 +				size *= totalram_pages;
 +				do_div(size, 100);
 +				rest++;
 +			}
 +			if (*rest)
 +				goto bad_val;
 +			ctx->blocks = DIV_ROUND_UP(size, PAGE_SIZE);
 +			ctx->seen |= SHMEM_SEEN_BLOCKS;
 +		} else if (!strcmp(this_char,"nr_blocks")) {
 +			ctx->blocks = memparse(value, &rest);
 +			if (*rest)
 +				goto bad_val;
 +			ctx->seen |= SHMEM_SEEN_BLOCKS;
 +		} else if (!strcmp(this_char,"nr_inodes")) {
 +			ctx->inodes = memparse(value, &rest);
 +			if (*rest)
 +				goto bad_val;
 +			ctx->seen |= SHMEM_SEEN_INODES;
 +		} else if (!strcmp(this_char,"mode")) {
 +			ctx->mode = simple_strtoul(value, &rest, 8) & 07777;
 +			if (*rest)
 +				goto bad_val;
 +		} else if (!strcmp(this_char,"uid")) {
 +			uid = simple_strtoul(value, &rest, 0);
 +			if (*rest)
 +				goto bad_val;
 +			ctx->uid = make_kuid(current_user_ns(), uid);
 +			if (!uid_valid(ctx->uid))
 +				goto bad_val;
 +		} else if (!strcmp(this_char,"gid")) {
 +			gid = simple_strtoul(value, &rest, 0);
 +			if (*rest)
 +				goto bad_val;
 +			ctx->gid = make_kgid(current_user_ns(), gid);
 +			if (!gid_valid(ctx->gid))
 +				goto bad_val;
 +#ifdef CONFIG_TRANSPARENT_HUGE_PAGECACHE
 +		} else if (!strcmp(this_char, "huge")) {
 +			int huge;
 +			huge = shmem_parse_huge(value);
 +			if (huge < 0)
 +				goto bad_val;
 +			if (!has_transparent_hugepage() &&
 +					huge != SHMEM_HUGE_NEVER)
 +				goto bad_val;
 +			ctx->huge = huge;
 +			ctx->seen |= SHMEM_SEEN_HUGE;
 +#endif
 +#ifdef CONFIG_NUMA
 +		} else if (!strcmp(this_char,"mpol")) {
 +			mpol_put(ctx->mpol);
 +			ctx->mpol = NULL;
 +			if (mpol_parse_str(value, &ctx->mpol))
 +				goto bad_val;
 +#endif
 +		} else {
 +			pr_err("tmpfs: Bad mount option %s\n", this_char);
++=======
+ 		if (shmem_parse_one(ctx, this_char, value) < 0)
++>>>>>>> e04dc423ae2c (shmem_parse_options(): take handling a single option into a helper)
  			goto error;
- 		}
  	}
  	return 0;
  
* Unmerged path mm/shmem.c
