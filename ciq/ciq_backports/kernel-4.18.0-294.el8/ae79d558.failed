perf/core: Fix !CONFIG_PERF_EVENTS build warnings and failures

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Ingo Molnar <mingo@kernel.org>
commit ae79d5588a04aec9dc4b0c6df700d131447306e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/ae79d558.failed

sparc64 runs into this warning:

  include/linux/security.h:1913:52: warning: 'struct perf_event' declared inside parameter list will not be visible outside of this definition or declaration

which is escalated to a build error in some of the .c files due to -Werror.

Fix it via a forward declaration, like we do for perf_event_attr, the stub inlines
don't actually need to know the structure of this struct.

Fixes: da97e18458fb: ("perf_event: Add support for LSM and SELinux checks")
	Cc: "Joel Fernandes (Google)" <joel@joelfernandes.org>
	Cc: linux-kernel@vger.kernel.org
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit ae79d5588a04aec9dc4b0c6df700d131447306e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/security.h
diff --cc include/linux/security.h
index ea494663ce29,0a86bfea64d0..000000000000
--- a/include/linux/security.h
+++ b/include/linux/security.h
@@@ -1834,5 -1894,42 +1834,46 @@@ static inline void security_bpf_prog_fr
  #endif /* CONFIG_SECURITY */
  #endif /* CONFIG_BPF_SYSCALL */
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_PERF_EVENTS
+ struct perf_event_attr;
+ struct perf_event;
+ 
+ #ifdef CONFIG_SECURITY
+ extern int security_perf_event_open(struct perf_event_attr *attr, int type);
+ extern int security_perf_event_alloc(struct perf_event *event);
+ extern void security_perf_event_free(struct perf_event *event);
+ extern int security_perf_event_read(struct perf_event *event);
+ extern int security_perf_event_write(struct perf_event *event);
+ #else
+ static inline int security_perf_event_open(struct perf_event_attr *attr,
+ 					   int type)
+ {
+ 	return 0;
+ }
+ 
+ static inline int security_perf_event_alloc(struct perf_event *event)
+ {
+ 	return 0;
+ }
+ 
+ static inline void security_perf_event_free(struct perf_event *event)
+ {
+ }
+ 
+ static inline int security_perf_event_read(struct perf_event *event)
+ {
+ 	return 0;
+ }
+ 
+ static inline int security_perf_event_write(struct perf_event *event)
+ {
+ 	return 0;
+ }
+ #endif /* CONFIG_SECURITY */
+ #endif /* CONFIG_PERF_EVENTS */
+ 
++>>>>>>> ae79d5588a04 (perf/core: Fix !CONFIG_PERF_EVENTS build warnings and failures)
  #endif /* ! __LINUX_SECURITY_H */
 +
* Unmerged path include/linux/security.h
