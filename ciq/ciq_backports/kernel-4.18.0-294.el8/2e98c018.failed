cifs: remove the retry in cifs_poxis_lock_set

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author yangerkun <yangerkun@huawei.com>
commit 2e98c01846b2ce96cc41f60b70fd03cd47d3ac77
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/2e98c018.failed

The caller of cifs_posix_lock_set will do retry(like
fcntl_setlk64->do_lock_file_wait) if we will wait for any file_lock.
So the retry in cifs_poxis_lock_set seems duplicated, remove it to
make a cleanup.

	Signed-off-by: yangerkun <yangerkun@huawei.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
	Reviewed-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 2e98c01846b2ce96cc41f60b70fd03cd47d3ac77)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/file.c
diff --cc fs/cifs/file.c
index d8dd97303ee2,be46fab4c96d..000000000000
--- a/fs/cifs/file.c
+++ b/fs/cifs/file.c
@@@ -1170,12 -1171,6 +1170,15 @@@ cifs_posix_lock_set(struct file *file, 
  
  	rc = posix_lock_file(file, flock, NULL);
  	up_write(&cinode->lock_sem);
++<<<<<<< HEAD
 +	if (rc == FILE_LOCK_DEFERRED) {
 +		rc = wait_event_interruptible(flock->fl_wait, !flock->fl_next);
 +		if (!rc)
 +			goto try_again;
 +		posix_unblock_lock(flock);
 +	}
++=======
++>>>>>>> 2e98c01846b2 (cifs: remove the retry in cifs_poxis_lock_set)
  	return rc;
  }
  
* Unmerged path fs/cifs/file.c
