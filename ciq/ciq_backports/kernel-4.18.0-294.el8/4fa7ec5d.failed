vfs: Convert pipe to use the new mount API

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author David Howells <dhowells@redhat.com>
commit 4fa7ec5db7e731a3db26b9647f39b0595f74347d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/4fa7ec5d.failed

Convert the pipe filesystem to the new internal mount API as the old
one will be obsoleted and removed.  This allows greater flexibility in
communication of mount parameters between userspace, the VFS and the
filesystem.

See Documentation/filesystems/mount_api.txt for more information.

	Signed-off-by: David Howells <dhowells@redhat.com>
cc: linux-fsdevel@vger.kernel.org
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 4fa7ec5db7e731a3db26b9647f39b0595f74347d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/pipe.c
diff --cc fs/pipe.c
index cac019cb19fc,8a2ab2f974bd..000000000000
--- a/fs/pipe.c
+++ b/fs/pipe.c
@@@ -1176,11 -1183,15 +1177,20 @@@ static const struct super_operations pi
   * any operations on the root directory. However, we need a non-trivial
   * d_name - pipe: will go nicely and kill the special-casing in procfs.
   */
- static struct dentry *pipefs_mount(struct file_system_type *fs_type,
- 			 int flags, const char *dev_name, void *data)
+ 
+ static int pipefs_init_fs_context(struct fs_context *fc)
  {
++<<<<<<< HEAD
 +	return mount_pseudo(fs_type, "pipe:", &pipefs_ops,
 +			&pipefs_dentry_operations, PIPEFS_MAGIC);
++=======
+ 	struct pseudo_fs_context *ctx = init_pseudo(fc, PIPEFS_MAGIC);
+ 	if (!ctx)
+ 		return -ENOMEM;
+ 	ctx->ops = &pipefs_ops;
+ 	ctx->dops = &pipefs_dentry_operations;
+ 	return 0;
++>>>>>>> 4fa7ec5db7e7 (vfs: Convert pipe to use the new mount API)
  }
  
  static struct file_system_type pipe_fs_type = {
* Unmerged path fs/pipe.c
