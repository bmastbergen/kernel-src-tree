linux/time.h: Extract common header for vDSO

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vincenzo Frascino <vincenzo.frascino@arm.com>
commit 639fff1cce0f7462bb4440deeffc1048ecfc6ebb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/639fff1c.failed

The vDSO library should only include the necessary headers required for
a userspace library (UAPI and a minimal set of kernel headers). To make
this possible it is necessary to isolate from the kernel headers the
common parts that are strictly necessary to build the library.

Split time.h into linux and common headers to make the latter suitable
for inclusion in the vDSO library.

	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20200320145351.32292-11-vincenzo.frascino@arm.com

(cherry picked from commit 639fff1cce0f7462bb4440deeffc1048ecfc6ebb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/time.h
diff --cc include/linux/time.h
index 5f3e49978837,4c325bf44ce0..000000000000
--- a/include/linux/time.h
+++ b/include/linux/time.h
@@@ -109,4 -110,7 +109,10 @@@ static inline bool itimerspec64_valid(c
   * Equivalent to !(time_before32(@t, @l) || time_after32(@t, @h)).
   */
  #define time_between32(t, l, h) ((u32)(h) - (u32)(l) >= (u32)(t) - (u32)(l))
++<<<<<<< HEAD
++=======
+ 
+ # include <vdso/time.h>
+ 
++>>>>>>> 639fff1cce0f (linux/time.h: Extract common header for vDSO)
  #endif
* Unmerged path include/linux/time.h
diff --git a/include/vdso/time.h b/include/vdso/time.h
new file mode 100644
index 000000000000..739f53cd2949
--- /dev/null
+++ b/include/vdso/time.h
@@ -0,0 +1,12 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef __VDSO_TIME_H
+#define __VDSO_TIME_H
+
+#include <uapi/linux/types.h>
+
+struct timens_offset {
+	s64	sec;
+	u64	nsec;
+};
+
+#endif /* __VDSO_TIME_H */
