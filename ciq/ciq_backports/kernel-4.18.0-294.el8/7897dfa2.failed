iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Luca Coelho <luciano.coelho@intel.com>
commit 7897dfa2bc8fdfd47e95f94375e7af88d465d71a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/7897dfa2.failed

These values are selected based on the PCI device ID, so the decision
to use them can be made early.  By moving them to the trans_cfg, we
avoid duplicating the large cfg structs for small pieces of
data (sometimes a single boolean).  This will also allow us to make
more decisions based on, for instance, the SoC type in used.

The trans_cfg concept changes a bit, because previously it was used
only to boot the device before reading further characteristics and now
it also contains more data that is associated with the device ID.

Change-Id: Ib71b07ea9e322eb74571dc5e8aa58f17eece5c9c
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit 7897dfa2bc8fdfd47e95f94375e7af88d465d71a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/cfg/9000.c
#	drivers/net/wireless/intel/iwlwifi/iwl-config.h
#	drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --cc drivers/net/wireless/intel/iwlwifi/cfg/9000.c
index d6eef65d3937,f84b8e5d3f0b..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
+++ b/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
@@@ -174,18 -174,28 +174,38 @@@ const struct iwl_cfg_trans_params iwl90
  	.rf_id = true,
  };
  
++<<<<<<< HEAD
 +const struct iwl_cfg iwl9160_2ac_cfg = {
 +	.name = "Intel(R) Dual Band Wireless AC 9160",
 +	.fw_name_pre = IWL9260_FW_PRE,
 +	IWL_DEVICE_9000,
 +};
 +
 +const struct iwl_cfg iwl9260_2ac_cfg = {
 +	.fw_name_pre = IWL9260_FW_PRE,
 +	IWL_DEVICE_9000,
++=======
+ const struct iwl_cfg_trans_params iwl9560_trans_cfg = {
+ 	.device_family = IWL_DEVICE_FAMILY_9000,
+ 	.base_params = &iwl9000_base_params,
+ 	.mq_rx_supported = true,
+ 	.rf_id = true,
+ 	.integrated = true,
+ 	.xtal_latency = 5000,
+ };
+ 
+ const struct iwl_cfg_trans_params iwl9560_shared_clk_trans_cfg = {
+ 	.device_family = IWL_DEVICE_FAMILY_9000,
+ 	.base_params = &iwl9000_base_params,
+ 	.mq_rx_supported = true,
+ 	.rf_id = true,
+ 	.integrated = true,
+ 	.xtal_latency = 5000,
+ 	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
++>>>>>>> 7897dfa2bc8f (iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg)
  };
  
 -const char iwl9162_name[] = "Intel(R) Wireless-AC 9162";
  const char iwl9260_name[] = "Intel(R) Wireless-AC 9260";
 -const char iwl9260_1_name[] = "Intel(R) Wireless-AC 9260-1";
  const char iwl9270_name[] = "Intel(R) Wireless-AC 9270";
  const char iwl9461_name[] = "Intel(R) Wireless-AC 9461";
  const char iwl9462_name[] = "Intel(R) Wireless-AC 9462";
@@@ -200,155 -214,14 +220,165 @@@ const char iwl9560_killer_1550i_name[] 
  const char iwl9560_killer_1550s_name[] =
  	"Killer (R) Wireless-AC 1550s Wireless Network Adapter (9560NGW)";
  
++<<<<<<< HEAD
 +const struct iwl_cfg iwl9260_2ac_160_cfg = {
++=======
+ const struct iwl_cfg iwl9260_2ac_cfg = {
++>>>>>>> 7897dfa2bc8f (iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg)
 +	.fw_name_pre = IWL9260_FW_PRE,
 +	IWL_DEVICE_9000,
 +};
 +
++<<<<<<< HEAD
 +const struct iwl_cfg iwl9260_killer_2ac_cfg = {
 +	.fw_name_pre = IWL9260_FW_PRE,
 +	IWL_DEVICE_9000,
 +};
 +
 +const struct iwl_cfg iwl9270_2ac_cfg = {
 +	.fw_name_pre = IWL9260_FW_PRE,
 +	IWL_DEVICE_9000,
 +};
 +
 +const struct iwl_cfg iwl9460_2ac_cfg = {
 +	.name = "Intel(R) Dual Band Wireless AC 9460",
 +	.fw_name_pre = IWL9260_FW_PRE,
 +	IWL_DEVICE_9000,
 +};
 +
 +const struct iwl_cfg iwl9460_2ac_cfg_soc = {
 +	.name = "Intel(R) Dual Band Wireless AC 9460",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +};
 +
 +const struct iwl_cfg iwl9461_2ac_cfg_soc = {
 +	.name = "Intel(R) Dual Band Wireless AC 9461",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +};
 +
 +const struct iwl_cfg iwl9462_2ac_cfg_soc = {
 +	.name = "Intel(R) Dual Band Wireless AC 9462",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +};
 +
 +const struct iwl_cfg iwl9560_2ac_cfg = {
 +	.name = "Intel(R) Dual Band Wireless AC 9560",
 +	.fw_name_pre = IWL9260_FW_PRE,
 +	IWL_DEVICE_9000,
 +};
 +
 +const struct iwl_cfg iwl9560_2ac_160_cfg = {
  	.fw_name_pre = IWL9260_FW_PRE,
  	IWL_DEVICE_9000,
  };
  
 +const struct iwl_cfg iwl9560_2ac_cfg_soc = {
 +	.name = "Intel(R) Dual Band Wireless AC 9560",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +};
 +
 +const struct iwl_cfg iwl9560_2ac_160_cfg_soc = {
 +	.name = "Intel(R) Wireless-AC 9560 160MHz",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +};
 +
 +const struct iwl_cfg iwl9560_killer_2ac_cfg_soc = {
 +	.name = "Killer (R) Wireless-AC 1550i Wireless Network Adapter (9560NGW)",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +};
 +
 +const struct iwl_cfg iwl9560_killer_s_2ac_cfg_soc = {
 +	.name = "Killer (R) Wireless-AC 1550s Wireless Network Adapter (9560NGW)",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +};
 +
 +const struct iwl_cfg iwl9460_2ac_cfg_shared_clk = {
 +	.name = "Intel(R) Dual Band Wireless AC 9460",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
 +};
 +
 +const struct iwl_cfg iwl9461_2ac_cfg_shared_clk = {
 +	.name = "Intel(R) Dual Band Wireless AC 9461",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
 +};
 +
 +const struct iwl_cfg iwl9462_2ac_cfg_shared_clk = {
 +	.name = "Intel(R) Dual Band Wireless AC 9462",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
 +};
 +
 +const struct iwl_cfg iwl9560_2ac_cfg_shared_clk = {
 +	.name = "Intel(R) Dual Band Wireless AC 9560",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
 +};
 +
 +const struct iwl_cfg iwl9560_2ac_160_cfg_shared_clk = {
 +	.name = "Intel(R) Wireless-AC 9560 160MHz",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
 +};
 +
 +const struct iwl_cfg iwl9560_killer_2ac_cfg_shared_clk = {
 +	.name = "Killer (R) Wireless-AC 1550i Wireless Network Adapter (9560NGW)",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
 +};
 +
 +const struct iwl_cfg iwl9560_killer_s_2ac_cfg_shared_clk = {
 +	.name = "Killer (R) Wireless-AC 1550s Wireless Network Adapter (9560NGW)",
 +	.fw_name_pre = IWL9000_FW_PRE,
 +	IWL_DEVICE_9000,
 +	.integrated = true,
 +	.soc_latency = 5000,
 +	.extra_phy_cfg_flags = FW_PHY_CFG_SHARED_CLK
++=======
+ const struct iwl_cfg iwl9560_2ac_cfg_soc = {
+ 	.fw_name_pre = IWL9000_FW_PRE,
+ 	IWL_DEVICE_9000,
++>>>>>>> 7897dfa2bc8f (iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg)
  };
  
  MODULE_FIRMWARE(IWL9000_MODULE_FIRMWARE(IWL9000_UCODE_API_MAX));
diff --cc drivers/net/wireless/intel/iwlwifi/iwl-config.h
index d95b1b513768,2e9a85a9ee67..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@@ -465,7 -499,12 +468,14 @@@ struct iwl_dev_info 
   * This list declares the config structures for all devices.
   */
  extern const struct iwl_cfg_trans_params iwl9000_trans_cfg;
++<<<<<<< HEAD
++=======
+ extern const struct iwl_cfg_trans_params iwl9560_trans_cfg;
+ extern const struct iwl_cfg_trans_params iwl9560_shared_clk_trans_cfg;
+ extern const struct iwl_cfg_trans_params iwl_ax200_trans_cfg;
+ extern const char iwl9162_name[];
++>>>>>>> 7897dfa2bc8f (iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg)
  extern const char iwl9260_name[];
 -extern const char iwl9260_1_name[];
  extern const char iwl9270_name[];
  extern const char iwl9461_name[];
  extern const char iwl9462_name[];
@@@ -546,26 -591,15 +556,28 @@@ extern const struct iwl_cfg iwl9260_2ac
  extern const struct iwl_cfg iwl9260_2ac_160_cfg;
  extern const struct iwl_cfg iwl9260_killer_2ac_cfg;
  extern const struct iwl_cfg iwl9270_2ac_cfg;
++<<<<<<< HEAD
 +extern const struct iwl_cfg iwl9460_2ac_cfg;
 +extern const struct iwl_cfg iwl9560_2ac_cfg;
++=======
++>>>>>>> 7897dfa2bc8f (iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg)
  extern const struct iwl_cfg iwl9560_2ac_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9560_2ac_160_cfg;
  extern const struct iwl_cfg iwl9560_2ac_160_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9460_2ac_cfg_soc;
 +extern const struct iwl_cfg iwl9461_2ac_cfg_soc;
  extern const struct iwl_cfg iwl9461_2ac_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9462_2ac_cfg_soc;
  extern const struct iwl_cfg iwl9462_2ac_cfg_quz_a0_jf_b0_soc;
  extern const struct iwl_cfg iwl9560_2ac_cfg_soc;
 +extern const struct iwl_cfg iwl9560_2ac_160_cfg_soc;
 +extern const struct iwl_cfg iwl9560_killer_2ac_cfg_soc;
 +extern const struct iwl_cfg iwl9560_killer_s_2ac_cfg_soc;
  extern const struct iwl_cfg iwl9560_killer_i_2ac_cfg_quz_a0_jf_b0_soc;
  extern const struct iwl_cfg iwl9560_killer_s_2ac_cfg_quz_a0_jf_b0_soc;
 +extern const struct iwl_cfg iwl9460_2ac_cfg_shared_clk;
  extern const struct iwl_cfg iwl9461_2ac_cfg_shared_clk;
  extern const struct iwl_cfg iwl9462_2ac_cfg_shared_clk;
- extern const struct iwl_cfg iwl9560_2ac_cfg_shared_clk;
  extern const struct iwl_cfg iwl9560_2ac_160_cfg_shared_clk;
  extern const struct iwl_cfg iwl9560_killer_2ac_cfg_shared_clk;
  extern const struct iwl_cfg iwl9560_killer_s_2ac_cfg_shared_clk;
diff --cc drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index 5f336e51b685,76c8df244dba..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@@ -567,12 -567,12 +567,21 @@@ static const struct pci_device_id iwl_h
  	{IWL_PCI_DEVICE(0x06F0, 0x42A4, iwl9462_2ac_cfg_quz_a0_jf_b0_soc)},
  
  	{IWL_PCI_DEVICE(0x2526, PCI_ANY_ID, iwl9000_trans_cfg)},
++<<<<<<< HEAD
 +
 +	{IWL_PCI_DEVICE(0x271B, 0x0010, iwl9160_2ac_cfg)},
 +	{IWL_PCI_DEVICE(0x271B, 0x0014, iwl9160_2ac_cfg)},
 +	{IWL_PCI_DEVICE(0x271B, 0x0210, iwl9160_2ac_cfg)},
 +	{IWL_PCI_DEVICE(0x271B, 0x0214, iwl9260_2ac_cfg)},
 +	{IWL_PCI_DEVICE(0x271C, 0x0214, iwl9260_2ac_cfg)},
++=======
+ 	{IWL_PCI_DEVICE(0x271B, PCI_ANY_ID, iwl9560_trans_cfg)},
+ 	{IWL_PCI_DEVICE(0x271C, PCI_ANY_ID, iwl9560_trans_cfg)},
+ 	{IWL_PCI_DEVICE(0x30DC, PCI_ANY_ID, iwl9560_trans_cfg)},
+ 	{IWL_PCI_DEVICE(0x31DC, PCI_ANY_ID, iwl9560_shared_clk_trans_cfg)},
+ 	{IWL_PCI_DEVICE(0x9DF0, PCI_ANY_ID, iwl9560_trans_cfg)},
+ 	{IWL_PCI_DEVICE(0xA370, PCI_ANY_ID, iwl9560_trans_cfg)},
++>>>>>>> 7897dfa2bc8f (iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg)
  
  	{IWL_PCI_DEVICE(0x2720, 0x0034, iwl9560_2ac_cfg_qu_b0_jf_b0)},
  	{IWL_PCI_DEVICE(0x2720, 0x0038, iwl9560_2ac_160_cfg_qu_b0_jf_b0)},
@@@ -939,60 -819,101 +948,90 @@@ MODULE_DEVICE_TABLE(pci, iwl_hw_card_id
  
  static const struct iwl_dev_info iwl_dev_info_table[] = {
  #if IS_ENABLED(CONFIG_IWLMVM)
++<<<<<<< HEAD
 +	IWL_DEV_INFO(0x2526, 0x0010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0018, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x001C, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4018, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x401C, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x6010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x6014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x8014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0x8010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xA014, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xE010, iwl9260_2ac_160_cfg, iwl9260_160_name),
 +	IWL_DEV_INFO(0x2526, 0xE014, iwl9260_2ac_160_cfg, iwl9260_160_name),
++=======
+ /* 9000 */
+ 	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_2ac_cfg, iwl9260_killer_1550_name),
+ 	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
+ 	IWL_DEV_INFO(0x2526, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
+ 	IWL_DEV_INFO(0x30DC, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
+ 	IWL_DEV_INFO(0x30DC, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
+ 	IWL_DEV_INFO(0x31DC, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
+ 	IWL_DEV_INFO(0x31DC, 0x1552, iwl9560_2ac_cfg_soc, iwl9560_killer_1550i_name),
 -
 -	IWL_DEV_INFO(0x271C, 0x0214, iwl9260_2ac_cfg, iwl9260_1_name),
 -
++>>>>>>> 7897dfa2bc8f (iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg)
 +
 +	IWL_DEV_INFO(0x2526, 0x0210, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x0214, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x1010, iwl9260_2ac_cfg, iwl9260_name),
 +	IWL_DEV_INFO(0x2526, 0x1210, iwl9260_2ac_cfg, iwl9260_name),
 +
++<<<<<<< HEAD
 +	IWL_DEV_INFO(0x2526, 0x0030, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x0038, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x003C, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4030, iwl9560_2ac_160_cfg, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x2030, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x2034, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +	IWL_DEV_INFO(0x2526, 0x4034, iwl9560_2ac_160_cfg_soc, iwl9560_160_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0034, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0230, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0234, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x0238, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x023C, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x1030, iwl9560_2ac_cfg, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x4234, iwl9560_2ac_cfg_soc, iwl9560_name),
 +
 +	IWL_DEV_INFO(0x2526, 0x0060, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0064, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0260, iwl9461_2ac_cfg_soc, iwl9461_name),
 +	IWL_DEV_INFO(0x2526, 0x0264, iwl9461_2ac_cfg_soc, iwl9461_name),
++=======
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9461_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9461_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9462_160_name),
+ 	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
+ 		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
+ 		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
+ 		      iwl9560_2ac_cfg_soc, iwl9462_name),
++>>>>>>> 7897dfa2bc8f (iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg)
  
 -	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
 -		      IWL_CFG_160, IWL_CFG_CORES_BT,
 -		      iwl9560_2ac_cfg_soc, iwl9560_160_name),
 -	_IWL_DEV_INFO(IWL_CFG_ANY, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_PU, IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
 -		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
 -		      iwl9560_2ac_cfg_soc, iwl9560_name),
 +	IWL_DEV_INFO(0x2526, 0x00A0, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x00A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x02A0, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x02A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x40A4, iwl9462_2ac_cfg_soc, iwl9462_name),
 +	IWL_DEV_INFO(0x2526, 0x42A4, iwl9462_2ac_cfg_soc, iwl9462_name),
  
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
 -		      IWL_CFG_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9461_160_name),
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1,
 -		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9461_name),
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
 -		      IWL_CFG_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9462_160_name),
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_RF_TYPE_JF1, IWL_CFG_RF_ID_JF1_DIV,
 -		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9462_name),
 -
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
 -		      IWL_CFG_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9560_160_name),
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_PNJ, IWL_CFG_RF_TYPE_JF2, IWL_CFG_RF_ID_JF,
 -		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9560_name),
 -
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
 -		      IWL_CFG_160, IWL_CFG_CORES_BT_GNSS,
 -		      iwl9260_2ac_cfg, iwl9270_160_name),
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
 -		      IWL_CFG_NO_160, IWL_CFG_CORES_BT_GNSS,
 -		      iwl9260_2ac_cfg, iwl9270_name),
 -
 -	_IWL_DEV_INFO(0x271B, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH1, IWL_CFG_ANY,
 -		      IWL_CFG_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9162_160_name),
 -	_IWL_DEV_INFO(0x271B, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH1, IWL_CFG_ANY,
 -		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9162_name),
 -
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
 -		      IWL_CFG_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9260_160_name),
 -	_IWL_DEV_INFO(0x2526, IWL_CFG_ANY,
 -		      IWL_CFG_MAC_TYPE_TH, IWL_CFG_RF_TYPE_TH, IWL_CFG_ANY,
 -		      IWL_CFG_NO_160, IWL_CFG_CORES_BT,
 -		      iwl9260_2ac_cfg, iwl9260_name),
 -
 -/* AX200 */
 -	IWL_DEV_INFO(0x2723, 0x1653, iwl_ax200_cfg_cc, iwl_ax200_killer_1650w_name),
 -	IWL_DEV_INFO(0x2723, 0x1654, iwl_ax200_cfg_cc, iwl_ax200_killer_1650x_name),
 -	IWL_DEV_INFO(0x2723, IWL_CFG_ANY, iwl_ax200_cfg_cc, iwl_ax200_name),
 +	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_killer_2ac_cfg, iwl9260_killer_1550_name),
 +	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_killer_s_2ac_cfg_soc, iwl9560_killer_1550s_name),
 +	IWL_DEV_INFO(0x2526, 0x1552, iwl9560_killer_2ac_cfg_soc, iwl9560_killer_1550i_name),
  
 +	IWL_DEV_INFO(0x2526, 0x1410, iwl9270_2ac_cfg, iwl9270_name),
 +	IWL_DEV_INFO(0x2526, 0x1610, iwl9270_2ac_cfg, iwl9270_name),
  #endif /* CONFIG_IWLMVM */
  };
  
diff --git a/drivers/net/wireless/intel/iwlwifi/cfg/22000.c b/drivers/net/wireless/intel/iwlwifi/cfg/22000.c
index 355af47c5f73..978115587f21 100644
--- a/drivers/net/wireless/intel/iwlwifi/cfg/22000.c
+++ b/drivers/net/wireless/intel/iwlwifi/cfg/22000.c
@@ -479,8 +479,8 @@ const struct iwl_cfg iwl9560_2ac_cfg_quz_a0_jf_b0_soc = {
 	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
 	 */
 	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
-	.integrated = true,
-	.soc_latency = 5000,
+	.trans.integrated = true,
+	.trans.xtal_latency = 5000,
 	.num_rbds = IWL_NUM_RBDS_NON_HE,
 };
 
@@ -494,8 +494,8 @@ const struct iwl_cfg iwl9560_2ac_160_cfg_quz_a0_jf_b0_soc = {
 	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
 	 */
 	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
-	.integrated = true,
-	.soc_latency = 5000,
+	.trans.integrated = true,
+	.trans.xtal_latency = 5000,
 	.num_rbds = IWL_NUM_RBDS_NON_HE,
 };
 
@@ -509,8 +509,8 @@ const struct iwl_cfg iwl9461_2ac_cfg_quz_a0_jf_b0_soc = {
 	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
 	 */
 	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
-	.integrated = true,
-	.soc_latency = 5000,
+	.trans.integrated = true,
+	.trans.xtal_latency = 5000,
 	.num_rbds = IWL_NUM_RBDS_NON_HE,
 };
 
@@ -524,8 +524,8 @@ const struct iwl_cfg iwl9462_2ac_cfg_quz_a0_jf_b0_soc = {
 	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
 	 */
 	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
-	.integrated = true,
-	.soc_latency = 5000,
+	.trans.integrated = true,
+	.trans.xtal_latency = 5000,
 	.num_rbds = IWL_NUM_RBDS_NON_HE,
 };
 
@@ -539,8 +539,8 @@ const struct iwl_cfg iwl9560_killer_s_2ac_cfg_quz_a0_jf_b0_soc = {
 	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
 	 */
 	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
-	.integrated = true,
-	.soc_latency = 5000,
+	.trans.integrated = true,
+	.trans.xtal_latency = 5000,
 	.num_rbds = IWL_NUM_RBDS_NON_HE,
 };
 
@@ -554,8 +554,8 @@ const struct iwl_cfg iwl9560_killer_i_2ac_cfg_quz_a0_jf_b0_soc = {
 	 * HT size; mac80211 would otherwise pick the HE max (256) by default.
 	 */
 	.max_tx_agg_size = IEEE80211_MAX_AMPDU_BUF_HT,
-	.integrated = true,
-	.soc_latency = 5000,
+	.trans.integrated = true,
+	.trans.xtal_latency = 5000,
 	.num_rbds = IWL_NUM_RBDS_NON_HE,
 };
 
* Unmerged path drivers/net/wireless/intel/iwlwifi/cfg/9000.c
* Unmerged path drivers/net/wireless/intel/iwlwifi/iwl-config.h
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/fw.c b/drivers/net/wireless/intel/iwlwifi/mvm/fw.c
index 34925d8da198..a469051b548b 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/fw.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/fw.c
@@ -93,10 +93,10 @@ static int iwl_set_soc_latency(struct iwl_mvm *mvm)
 	struct iwl_soc_configuration_cmd cmd;
 	int ret;
 
-	cmd.device_type = (mvm->trans->cfg->integrated) ?
+	cmd.device_type = (mvm->trans->trans_cfg->integrated) ?
 		cpu_to_le32(SOC_CONFIG_CMD_INTEGRATED) :
 		cpu_to_le32(SOC_CONFIG_CMD_DISCRETE);
-	cmd.soc_latency = cpu_to_le32(mvm->trans->cfg->soc_latency);
+	cmd.soc_latency = cpu_to_le32(mvm->trans->trans_cfg->xtal_latency);
 
 	ret = iwl_mvm_send_cmd_pdu(mvm, iwl_cmd_id(SOC_CONFIGURATION_CMD,
 						   SYSTEM_GROUP, 0), 0,
@@ -561,7 +561,8 @@ static int iwl_send_phy_cfg_cmd(struct iwl_mvm *mvm)
 	phy_cfg_cmd.phy_cfg = cpu_to_le32(iwl_mvm_get_phy_config(mvm));
 
 	/* set flags extra PHY configuration flags from the device's cfg */
-	phy_cfg_cmd.phy_cfg |= cpu_to_le32(mvm->cfg->extra_phy_cfg_flags);
+	phy_cfg_cmd.phy_cfg |=
+		cpu_to_le32(mvm->trans->trans_cfg->extra_phy_cfg_flags);
 
 	phy_cfg_cmd.calib_control.event_trigger =
 		mvm->fw->default_calib[ucode_type].event_trigger;
* Unmerged path drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --git a/drivers/net/wireless/intel/iwlwifi/pcie/rx.c b/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
index a45d5a1269fd..c773b03a02f0 100644
--- a/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
@@ -1043,7 +1043,7 @@ static void iwl_pcie_rx_mq_hw_init(struct iwl_trans *trans)
 			       RFH_GEN_CFG_VAL(DEFAULT_RXQ_NUM, 0) |
 			       RFH_GEN_CFG_SERVICE_DMA_SNOOP |
 			       RFH_GEN_CFG_VAL(RB_CHUNK_SIZE,
-					       trans->cfg->integrated ?
+					       trans->trans_cfg->integrated ?
 					       RFH_GEN_CFG_RB_CHUNK_SIZE_64 :
 					       RFH_GEN_CFG_RB_CHUNK_SIZE_128));
 	/* Enable the relevant rx queues */
diff --git a/drivers/net/wireless/intel/iwlwifi/pcie/trans.c b/drivers/net/wireless/intel/iwlwifi/pcie/trans.c
index 46832bbfcae7..e4cbd8daa7c6 100644
--- a/drivers/net/wireless/intel/iwlwifi/pcie/trans.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/trans.c
@@ -1817,7 +1817,7 @@ static int _iwl_trans_pcie_start_hw(struct iwl_trans *trans)
 	iwl_trans_pcie_sw_reset(trans);
 
 	if (trans->trans_cfg->device_family == IWL_DEVICE_FAMILY_22000 &&
-	    trans->cfg->integrated) {
+	    trans->trans_cfg->integrated) {
 		err = iwl_pcie_gen2_force_power_gating(trans);
 		if (err)
 			return err;
