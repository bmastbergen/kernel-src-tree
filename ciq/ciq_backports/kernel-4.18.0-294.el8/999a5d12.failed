dma-direct: provide a arch_dma_clear_uncached hook

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 999a5d1203baa7cff00586361feae263ee3f23a5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/999a5d12.failed

This allows the arch code to reset the page tables to cached access when
freeing a dma coherent allocation that was set to uncached using
arch_dma_set_uncached.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Robin Murphy <robin.murphy@arm.com>
(cherry picked from commit 999a5d1203baa7cff00586361feae263ee3f23a5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/dma-noncoherent.h
diff --cc include/linux/dma-noncoherent.h
index ecd8259e2fe3,b59f1b6be3e9..000000000000
--- a/include/linux/dma-noncoherent.h
+++ b/include/linux/dma-noncoherent.h
@@@ -108,7 -108,7 +108,12 @@@ static inline void arch_dma_prep_cohere
  }
  #endif /* CONFIG_ARCH_HAS_DMA_PREP_COHERENT */
  
++<<<<<<< HEAD
 +void *uncached_kernel_address(void *addr);
 +void *cached_kernel_address(void *addr);
++=======
+ void *arch_dma_set_uncached(void *addr, size_t size);
+ void arch_dma_clear_uncached(void *addr, size_t size);
++>>>>>>> 999a5d1203ba (dma-direct: provide a arch_dma_clear_uncached hook)
  
  #endif /* _LINUX_DMA_NONCOHERENT_H */
diff --git a/arch/Kconfig b/arch/Kconfig
index ce2392831931..3ea38be21e98 100644
--- a/arch/Kconfig
+++ b/arch/Kconfig
@@ -252,6 +252,13 @@ config ARCH_HAS_UNCACHED_SEGMENT
 	select ARCH_HAS_DMA_PREP_COHERENT
 	bool
 
+#
+# Select if the architectures provides the arch_dma_clear_uncached symbol
+# to undo an in-place page table remap for uncached access.
+#
+config ARCH_HAS_DMA_CLEAR_UNCACHED
+	bool
+
 # Select if arch init_task must go in the __init_task_data section
 config ARCH_TASK_STRUCT_ON_STACK
        bool
* Unmerged path include/linux/dma-noncoherent.h
diff --git a/kernel/dma/direct.c b/kernel/dma/direct.c
index 78ee188d0def..c1a63ab04704 100644
--- a/kernel/dma/direct.c
+++ b/kernel/dma/direct.c
@@ -217,6 +217,8 @@ void dma_direct_free_pages(struct device *dev, size_t size, void *cpu_addr,
 
 	if (IS_ENABLED(CONFIG_DMA_REMAP) && is_vmalloc_addr(cpu_addr))
 		vunmap(cpu_addr);
+	else if (IS_ENABLED(CONFIG_ARCH_HAS_DMA_CLEAR_UNCACHED))
+		arch_dma_clear_uncached(cpu_addr, size);
 
 	dma_free_contiguous(dev, dma_direct_to_page(dev, dma_addr), size);
 }
