mm: memcg/slab: remove redundant check in memcg_accumulate_slabinfo()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Roman Gushchin <guro@fb.com>
commit 15999eef7f25e2ea6a1c33f026166f472c5714e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/15999eef.failed

memcg_accumulate_slabinfo() is never called with a non-root kmem_cache as
a first argument, so the is_root_cache(s) check is redundant and can be
removed without any functional change.

	Signed-off-by: Roman Gushchin <guro@fb.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Reviewed-by: Vlastimil Babka <vbabka@suse.cz>
	Reviewed-by: Shakeel Butt <shakeelb@google.com>
	Cc: Christoph Lameter <cl@linux.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Tejun Heo <tj@kernel.org>
Link: http://lkml.kernel.org/r/20200623174037.3951353-17-guro@fb.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 15999eef7f25e2ea6a1c33f026166f472c5714e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/slab_common.c
diff --cc mm/slab_common.c
index dd4f84ee402c,ad67a03c592a..000000000000
--- a/mm/slab_common.c
+++ b/mm/slab_common.c
@@@ -1469,10 -1104,8 +1469,15 @@@ memcg_accumulate_slabinfo(struct kmem_c
  	struct kmem_cache *c;
  	struct slabinfo sinfo;
  
++<<<<<<< HEAD
 +	if (!is_root_cache(s))
 +		return;
 +
 +	for_each_memcg_cache(c, s) {
++=======
+ 	c = memcg_cache(s);
+ 	if (c) {
++>>>>>>> 15999eef7f25 (mm: memcg/slab: remove redundant check in memcg_accumulate_slabinfo())
  		memset(&sinfo, 0, sizeof(sinfo));
  		get_slabinfo(c, &sinfo);
  
* Unmerged path mm/slab_common.c
