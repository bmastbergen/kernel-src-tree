arm64: vdso: Add --eh-frame-hdr to ldflags

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vincenzo Frascino <vincenzo.frascino@arm.com>
commit 7e9f5e6629f62865e67b8a02a5b522dd9af890bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/7e9f5e66.failed

LLVM's unwinder depends on the .eh_frame_hdr being present for
unwinding. However, when compiling Linux with GCC, the section
is not present in the vdso library object and when compiling
with Clang, it is present, but it has zero length.

With GCC the problem was not spotted because libgcc unwinder does
not require the .eh_frame_hdr section to be present.

Add --eh-frame-hdr to ldflags to correctly generate and populate
the section for both GCC and LLVM.

Fixes: 28b1a824a4f44 ("arm64: vdso: Substitute gettimeofday() with C implementation")
	Reported-by: Tamas Zsoldos <tamas.zsoldos@arm.com>
	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Tested-by: Tamas Zsoldos <tamas.zsoldos@arm.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
Link: https://lore.kernel.org/r/20200507104049.47834-1-vincenzo.frascino@arm.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 7e9f5e6629f62865e67b8a02a5b522dd9af890bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/vdso/Makefile
diff --cc arch/arm64/kernel/vdso/Makefile
index fa230ff09aa1,95e9e444ca93..000000000000
--- a/arch/arm64/kernel/vdso/Makefile
+++ b/arch/arm64/kernel/vdso/Makefile
@@@ -12,8 -17,35 +12,35 @@@ obj-vdso := gettimeofday.o note.o sigre
  targets := $(obj-vdso) vdso.so vdso.so.dbg
  obj-vdso := $(addprefix $(obj)/, $(obj-vdso))
  
 -# -Bsymbolic has been added for consistency with arm, the compat vDSO and
 -# potential future proofing if we end up with internal calls to the exported
 -# routines, as x86 does (see 6f121e548f83 ("x86, vdso: Reimplement vdso.so
 -# preparation in build-time C")).
  ldflags-y := -shared -nostdlib -soname=linux-vdso.so.1 --hash-style=sysv \
++<<<<<<< HEAD
 +		--build-id -n -T
++=======
+ 		-Bsymbolic --eh-frame-hdr --build-id -n -T
+ 
+ ccflags-y := -fno-common -fno-builtin -fno-stack-protector -ffixed-x18
+ ccflags-y += -DDISABLE_BRANCH_PROFILING
+ 
+ CFLAGS_REMOVE_vgettimeofday.o = $(CC_FLAGS_FTRACE) -Os
+ KBUILD_CFLAGS			+= $(DISABLE_LTO)
+ KASAN_SANITIZE			:= n
+ UBSAN_SANITIZE			:= n
+ OBJECT_FILES_NON_STANDARD	:= y
+ KCOV_INSTRUMENT			:= n
+ 
+ CFLAGS_vgettimeofday.o = -O2 -mcmodel=tiny
+ 
+ ifneq ($(c-gettimeofday-y),)
+   CFLAGS_vgettimeofday.o += -include $(c-gettimeofday-y)
+ endif
+ 
+ # Clang versions less than 8 do not support -mcmodel=tiny
+ ifeq ($(CONFIG_CC_IS_CLANG), y)
+   ifeq ($(shell test $(CONFIG_CLANG_VERSION) -lt 80000; echo $$?),0)
+     CFLAGS_REMOVE_vgettimeofday.o += -mcmodel=tiny
+   endif
+ endif
++>>>>>>> 7e9f5e6629f6 (arm64: vdso: Add --eh-frame-hdr to ldflags)
  
  # Disable gcov profiling for VDSO code
  GCOV_PROFILE := n
* Unmerged path arch/arm64/kernel/vdso/Makefile
