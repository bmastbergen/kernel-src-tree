x86/fpu/xstate: Update sanitize_restored_xstate() for supervisor xstates

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Yu-cheng Yu <yu-cheng.yu@intel.com>
commit 5d6b6a6f9b5ce7ac42273efd75d61ec63b463c18
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/5d6b6a6f.failed

The function sanitize_restored_xstate() sanitizes user xstates of an XSAVE
buffer by clearing bits not in the input 'xfeatures' from the buffer's
header->xfeatures, effectively resetting those features back to the init
state.

When supervisor xstates are introduced, it is necessary to make sure only
user xstates are sanitized.  Ensure supervisor bits in header->xfeatures
stay set and supervisor states are not modified.

To make names clear, also:

- Rename the function to sanitize_restored_user_xstate().
- Rename input parameter 'xfeatures' to 'user_xfeatures'.
- In __fpu__restore_sig(), rename 'xfeatures' to 'user_xfeatures'.

	Signed-off-by: Yu-cheng Yu <yu-cheng.yu@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
Link: https://lkml.kernel.org/r/20200512145444.15483-7-yu-cheng.yu@intel.com
(cherry picked from commit 5d6b6a6f9b5ce7ac42273efd75d61ec63b463c18)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/fpu/signal.c
diff --cc arch/x86/kernel/fpu/signal.c
index ae77c2653921,77e5c2e34ee6..000000000000
--- a/arch/x86/kernel/fpu/signal.c
+++ b/arch/x86/kernel/fpu/signal.c
@@@ -357,7 -371,7 +366,11 @@@ static int __fpu__restore_sig(void __us
  
  
  	if (use_xsave() && !fx_only) {
++<<<<<<< HEAD
 +		u64 init_bv = xfeatures_mask & ~xfeatures;
++=======
+ 		u64 init_bv = xfeatures_mask_user() & ~user_xfeatures;
++>>>>>>> 5d6b6a6f9b5c (x86/fpu/xstate: Update sanitize_restored_xstate() for supervisor xstates)
  
  		if (using_compacted_format()) {
  			ret = copy_user_to_xstate(&fpu->state.xsave, buf_fx);
* Unmerged path arch/x86/kernel/fpu/signal.c
