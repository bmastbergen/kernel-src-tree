ASoC: SOF: Intel: hda: fix the condition passed to sof_dev_dbg_or_err

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: SOF: Intel: hda: fix the condition passed to sof_dev_dbg_or_err (Jaroslav Kysela) [1783462]
Rebuild_FUZZ: 95.83%
commit-author Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
commit 8f7ef6fca0317fb217d1eef8f30010d7a9c6ae0e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/8f7ef6fc.failed

The condition boot_iteration == HDA_FW_BOOT_ATTEMPTS to determine
the log level for the DSP status dump would only work in the case of DSP
init failure after maximum number of attempts to initialize the DSP. If
DSP init succeeds in less than HDA_FW_BOOT_ATTEMPTS attempts and FW
loading fails, the ROM status dump would end up getting logged as debug
instead of an error.

So, add a new flag, SOF_DBG_DUMP_LOG_ERROR, to explicitly specify
the log level for DSP status dump.

	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Link: https://lore.kernel.org/r/20201211100743.3188821-4-kai.vehmanen@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 8f7ef6fca0317fb217d1eef8f30010d7a9c6ae0e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-loader.c
#	sound/soc/sof/loader.c
#	sound/soc/sof/sof-priv.h
diff --cc sound/soc/sof/intel/hda-loader.c
index 44f1c294d155,ed773696b495..000000000000
--- a/sound/soc/sof/intel/hda-loader.c
+++ b/sound/soc/sof/intel/hda-loader.c
@@@ -175,8 -176,14 +176,19 @@@ static int cl_dsp_init(struct snd_sof_d
  			__func__);
  
  err:
++<<<<<<< HEAD
 +	hda_dsp_dump(sdev, SOF_DBG_REGS | SOF_DBG_PCI | SOF_DBG_MBOX);
 +	hda_dsp_core_reset_power_down(sdev, chip->cores_mask);
++=======
+ 	flags = SOF_DBG_DUMP_REGS | SOF_DBG_DUMP_PCI | SOF_DBG_DUMP_MBOX;
+ 
+ 	/* force error log level after max boot attempts */
+ 	if (hda->boot_iteration == HDA_FW_BOOT_ATTEMPTS)
+ 		flags |= SOF_DBG_DUMP_FORCE_ERR_LEVEL;
+ 
+ 	hda_dsp_dump(sdev, flags);
+ 	hda_dsp_core_reset_power_down(sdev, chip->host_managed_cores_mask);
++>>>>>>> 8f7ef6fca031 (ASoC: SOF: Intel: hda: fix the condition passed to sof_dev_dbg_or_err)
  
  	return ret;
  }
@@@ -411,7 -418,8 +423,12 @@@ int hda_dsp_cl_boot_firmware(struct snd
  	if (!ret) {
  		dev_dbg(sdev->dev, "Firmware download successful, booting...\n");
  	} else {
++<<<<<<< HEAD
 +		hda_dsp_dump(sdev, SOF_DBG_REGS | SOF_DBG_PCI | SOF_DBG_MBOX);
++=======
+ 		hda_dsp_dump(sdev, SOF_DBG_DUMP_REGS | SOF_DBG_DUMP_PCI | SOF_DBG_DUMP_MBOX |
+ 			     SOF_DBG_DUMP_FORCE_ERR_LEVEL);
++>>>>>>> 8f7ef6fca031 (ASoC: SOF: Intel: hda: fix the condition passed to sof_dev_dbg_or_err)
  		dev_err(sdev->dev, "error: load fw failed ret: %d\n", ret);
  	}
  
diff --cc sound/soc/sof/loader.c
index 6c4e9c14d845,08a17abb63ff..000000000000
--- a/sound/soc/sof/loader.c
+++ b/sound/soc/sof/loader.c
@@@ -817,8 -856,8 +817,13 @@@ int snd_sof_run_firmware(struct snd_sof
  				 msecs_to_jiffies(sdev->boot_timeout));
  	if (ret == 0) {
  		dev_err(sdev->dev, "error: firmware boot failure\n");
++<<<<<<< HEAD
 +		snd_sof_dsp_dbg_dump(sdev, SOF_DBG_REGS | SOF_DBG_MBOX |
 +			SOF_DBG_TEXT | SOF_DBG_PCI);
++=======
+ 		snd_sof_dsp_dbg_dump(sdev, SOF_DBG_DUMP_REGS | SOF_DBG_DUMP_MBOX |
+ 			SOF_DBG_DUMP_TEXT | SOF_DBG_DUMP_PCI | SOF_DBG_DUMP_FORCE_ERR_LEVEL);
++>>>>>>> 8f7ef6fca031 (ASoC: SOF: Intel: hda: fix the condition passed to sof_dev_dbg_or_err)
  		sdev->fw_state = SOF_FW_BOOT_FAILED;
  		return -EIO;
  	}
diff --cc sound/soc/sof/sof-priv.h
index 0ae6bafb7d29,68da8f797403..000000000000
--- a/sound/soc/sof/sof-priv.h
+++ b/sound/soc/sof/sof-priv.h
@@@ -21,11 -21,15 +21,22 @@@
  
  /* debug flags */
  #define SOF_DBG_ENABLE_TRACE	BIT(0)
++<<<<<<< HEAD
 +#define SOF_DBG_REGS		BIT(1)
 +#define SOF_DBG_MBOX		BIT(2)
 +#define SOF_DBG_TEXT		BIT(3)
 +#define SOF_DBG_PCI		BIT(4)
 +#define SOF_DBG_RETAIN_CTX	BIT(5)	/* prevent DSP D3 on FW exception */
++=======
+ #define SOF_DBG_RETAIN_CTX	BIT(1)	/* prevent DSP D3 on FW exception */
+ 
+ #define SOF_DBG_DUMP_REGS		BIT(0)
+ #define SOF_DBG_DUMP_MBOX		BIT(1)
+ #define SOF_DBG_DUMP_TEXT		BIT(2)
+ #define SOF_DBG_DUMP_PCI		BIT(3)
+ #define SOF_DBG_DUMP_FORCE_ERR_LEVEL	BIT(4) /* used to dump dsp status with error log level */
+ 
++>>>>>>> 8f7ef6fca031 (ASoC: SOF: Intel: hda: fix the condition passed to sof_dev_dbg_or_err)
  
  /* global debug state set by SOF_DBG_ flags */
  extern int sof_core_debug;
* Unmerged path sound/soc/sof/intel/hda-loader.c
diff --git a/sound/soc/sof/intel/hda.c b/sound/soc/sof/intel/hda.c
index 78ee3b2cdb33..e7af48d989ee 100644
--- a/sound/soc/sof/intel/hda.c
+++ b/sound/soc/sof/intel/hda.c
@@ -416,9 +416,8 @@ void hda_dsp_dump_skl(struct snd_sof_dev *sdev, u32 flags)
 }
 
 /* dump the first 8 dwords representing the extended ROM status */
-static void hda_dsp_dump_ext_rom_status(struct snd_sof_dev *sdev)
+static void hda_dsp_dump_ext_rom_status(struct snd_sof_dev *sdev, u32 flags)
 {
-	struct sof_intel_hda_dev *hda = sdev->pdata->hw_pdata;
 	char msg[128];
 	int len = 0;
 	u32 value;
@@ -429,14 +428,13 @@ static void hda_dsp_dump_ext_rom_status(struct snd_sof_dev *sdev)
 		len += snprintf(msg + len, sizeof(msg) - len, " 0x%x", value);
 	}
 
-	sof_dev_dbg_or_err(sdev->dev, hda->boot_iteration == HDA_FW_BOOT_ATTEMPTS,
+	sof_dev_dbg_or_err(sdev->dev, flags & SOF_DBG_DUMP_FORCE_ERR_LEVEL,
 			   "extended rom status: %s", msg);
 
 }
 
 void hda_dsp_dump(struct snd_sof_dev *sdev, u32 flags)
 {
-	struct sof_intel_hda_dev *hda = sdev->pdata->hw_pdata;
 	struct sof_ipc_dsp_oops_xtensa xoops;
 	struct sof_ipc_panic_info panic_info;
 	u32 stack[HDA_DSP_STACK_DUMP_SIZE];
@@ -456,11 +454,11 @@ void hda_dsp_dump(struct snd_sof_dev *sdev, u32 flags)
 		snd_sof_get_status(sdev, status, panic, &xoops, &panic_info,
 				   stack, HDA_DSP_STACK_DUMP_SIZE);
 	} else {
-		sof_dev_dbg_or_err(sdev->dev, hda->boot_iteration == HDA_FW_BOOT_ATTEMPTS,
+		sof_dev_dbg_or_err(sdev->dev, flags & SOF_DBG_DUMP_FORCE_ERR_LEVEL,
 				   "status = 0x%8.8x panic = 0x%8.8x\n",
 				   status, panic);
 
-		hda_dsp_dump_ext_rom_status(sdev);
+		hda_dsp_dump_ext_rom_status(sdev, flags);
 		hda_dsp_get_status(sdev);
 	}
 }
* Unmerged path sound/soc/sof/loader.c
* Unmerged path sound/soc/sof/sof-priv.h
