mptcp: remove inner wait loop from mptcp_sendmsg_frag

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Florian Westphal <fw@strlen.de>
commit 5c8264435d4f6a056ac926989a827aba1961e3c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/5c826443.failed

previous patches made sure we only call into this function
when these prerequisites are met, so no need to wait on the
subflow socket anymore.

Closes: https://github.com/multipath-tcp/mptcp_net-next/issues/7
	Acked-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5c8264435d4f6a056ac926989a827aba1961e3c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/protocol.c
diff --cc net/mptcp/protocol.c
index 19fdd62bdade,bc950cf818f7..000000000000
--- a/net/mptcp/protocol.c
+++ b/net/mptcp/protocol.c
@@@ -540,17 -510,6 +540,20 @@@ static int mptcp_sendmsg_frag(struct so
  	 * fooled into a warning if we don't init here
  	 */
  	pfrag = sk_page_frag(sk);
++<<<<<<< HEAD
 +	while ((!retransmission && !mptcp_page_frag_refill(ssk, pfrag)) ||
 +	       !mptcp_ext_cache_refill(msk)) {
 +		ret = sk_stream_wait_memory(ssk, timeo);
 +		if (ret)
 +			return ret;
 +
 +		/* if sk_stream_wait_memory() sleeps snd_una can change
 +		 * significantly, refresh the rtx queue
 +		 */
 +		mptcp_clean_una(sk);
 +	}
++=======
++>>>>>>> 5c8264435d4f (mptcp: remove inner wait loop from mptcp_sendmsg_frag)
  	if (!retransmission) {
  		write_seq = &msk->write_seq;
  		page = pfrag->page;
* Unmerged path net/mptcp/protocol.c
