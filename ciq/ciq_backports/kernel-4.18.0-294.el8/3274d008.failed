xfs: rename the XFS_MOUNT_DFLT_IOSIZE option to

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 3274d00801007cccab8aec7f2ac50f6bc10d1692
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/3274d008.failed

Make the flag match the mount option and usage.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit 3274d00801007cccab8aec7f2ac50f6bc10d1692)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_super.c
diff --cc fs/xfs/xfs_super.c
index 7229faf8566c,a7d89b87ed22..000000000000
--- a/fs/xfs/xfs_super.c
+++ b/fs/xfs/xfs_super.c
@@@ -226,10 -225,10 +226,15 @@@ xfs_parseargs
  				return -ENOMEM;
  			break;
  		case Opt_allocsize:
 -			if (suffix_kstrtoint(args, 10, &size))
 +		case Opt_biosize:
 +			if (suffix_kstrtoint(args, 10, &iosize))
  				return -EINVAL;
++<<<<<<< HEAD
 +			iosizelog = ffs(iosize) - 1;
++=======
+ 			mp->m_allocsize_log = ffs(size) - 1;
+ 			mp->m_flags |= XFS_MOUNT_ALLOCSIZE;
++>>>>>>> 3274d0080100 (xfs: rename the XFS_MOUNT_DFLT_IOSIZE option to)
  			break;
  		case Opt_grpid:
  		case Opt_bsdgroups:
@@@ -397,17 -396,12 +402,26 @@@ done
  		return -EINVAL;
  	}
  
++<<<<<<< HEAD
 +	if (iosizelog) {
 +		if (iosizelog > XFS_MAX_IO_LOG ||
 +		    iosizelog < XFS_MIN_IO_LOG) {
 +			xfs_warn(mp, "invalid log iosize: %d [not %d-%d]",
 +				iosizelog, XFS_MIN_IO_LOG,
 +				XFS_MAX_IO_LOG);
 +			return -EINVAL;
 +		}
 +
 +		mp->m_flags |= XFS_MOUNT_DFLT_IOSIZE;
 +		mp->m_allocsize_log = iosizelog;
++=======
+ 	if ((mp->m_flags & XFS_MOUNT_ALLOCSIZE) &&
+ 	    (mp->m_allocsize_log > XFS_MAX_IO_LOG ||
+ 	     mp->m_allocsize_log < XFS_MIN_IO_LOG)) {
+ 		xfs_warn(mp, "invalid log iosize: %d [not %d-%d]",
+ 			mp->m_allocsize_log, XFS_MIN_IO_LOG, XFS_MAX_IO_LOG);
+ 		return -EINVAL;
++>>>>>>> 3274d0080100 (xfs: rename the XFS_MOUNT_DFLT_IOSIZE option to)
  	}
  
  	return 0;
diff --git a/fs/xfs/xfs_iomap.c b/fs/xfs/xfs_iomap.c
index e76d90bb07d1..eea7ea894e78 100644
--- a/fs/xfs/xfs_iomap.c
+++ b/fs/xfs/xfs_iomap.c
@@ -418,7 +418,7 @@ xfs_iomap_prealloc_size(
 	if (offset + count <= XFS_ISIZE(ip))
 		return 0;
 
-	if (!(mp->m_flags & XFS_MOUNT_DFLT_IOSIZE) &&
+	if (!(mp->m_flags & XFS_MOUNT_ALLOCSIZE) &&
 	    (XFS_ISIZE(ip) < XFS_FSB_TO_B(mp, mp->m_allocsize_blocks)))
 		return 0;
 
@@ -426,7 +426,7 @@ xfs_iomap_prealloc_size(
 	 * If an explicit allocsize is set, the file is small, or we
 	 * are writing behind a hole, then use the minimum prealloc:
 	 */
-	if ((mp->m_flags & XFS_MOUNT_DFLT_IOSIZE) ||
+	if ((mp->m_flags & XFS_MOUNT_ALLOCSIZE) ||
 	    XFS_ISIZE(ip) < XFS_FSB_TO_B(mp, mp->m_dalign) ||
 	    !xfs_iext_peek_prev_extent(ifp, icur, &prev) ||
 	    prev.br_startoff + prev.br_blockcount < offset_fsb)
diff --git a/fs/xfs/xfs_iops.c b/fs/xfs/xfs_iops.c
index be1d2e77d2a0..4ea54afb2782 100644
--- a/fs/xfs/xfs_iops.c
+++ b/fs/xfs/xfs_iops.c
@@ -513,7 +513,7 @@ xfs_stat_blksize(
 	if (!(mp->m_flags & XFS_MOUNT_COMPAT_IOSIZE)) {
 		if (mp->m_swidth)
 			return mp->m_swidth << mp->m_sb.sb_blocklog;
-		if (mp->m_flags & XFS_MOUNT_DFLT_IOSIZE)
+		if (mp->m_flags & XFS_MOUNT_ALLOCSIZE)
 			return 1U << mp->m_allocsize_log;
 	}
 
diff --git a/fs/xfs/xfs_mount.h b/fs/xfs/xfs_mount.h
index 109081c16a07..7518fd6be073 100644
--- a/fs/xfs/xfs_mount.h
+++ b/fs/xfs/xfs_mount.h
@@ -227,7 +227,7 @@ typedef struct xfs_mount {
 #define XFS_MOUNT_ATTR2		(1ULL << 8)	/* allow use of attr2 format */
 #define XFS_MOUNT_GRPID		(1ULL << 9)	/* group-ID assigned from directory */
 #define XFS_MOUNT_NORECOVERY	(1ULL << 10)	/* no recovery - dirty fs */
-#define XFS_MOUNT_DFLT_IOSIZE	(1ULL << 12)	/* set default i/o size */
+#define XFS_MOUNT_ALLOCSIZE	(1ULL << 12)	/* specified allocation size */
 #define XFS_MOUNT_SMALL_INUMS	(1ULL << 14)	/* user wants 32bit inodes */
 #define XFS_MOUNT_32BITINODES	(1ULL << 15)	/* inode32 allocator active */
 #define XFS_MOUNT_NOUUID	(1ULL << 16)	/* ignore uuid during mount */
* Unmerged path fs/xfs/xfs_super.c
