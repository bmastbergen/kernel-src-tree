qed: add support for new port modes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Alexander Lobakin <alobakin@marvell.com>
commit a396818c080db0fb0be046225aeafad02459ccae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/a396818c.failed

These ports ship on new boards revisions and are supported by newer
firmware versions.

	Signed-off-by: Alexander Lobakin <alobakin@marvell.com>
	Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a396818c080db0fb0be046225aeafad02459ccae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qed/qed_hsi.h
diff --cc drivers/net/ethernet/qlogic/qed/qed_hsi.h
index 93d33c9cf145,debc55923251..000000000000
--- a/drivers/net/ethernet/qlogic/qed/qed_hsi.h
+++ b/drivers/net/ethernet/qlogic/qed/qed_hsi.h
@@@ -12968,75 -12983,86 +12968,146 @@@ struct nvm_cfg_mac_address 
  };
  
  struct nvm_cfg1_glob {
 -	u32							generic_cont0;
 -#define NVM_CFG1_GLOB_MF_MODE_MASK				0x00000ff0
 -#define NVM_CFG1_GLOB_MF_MODE_OFFSET				4
 -#define NVM_CFG1_GLOB_MF_MODE_MF_ALLOWED			0x0
 -#define NVM_CFG1_GLOB_MF_MODE_DEFAULT				0x1
 -#define NVM_CFG1_GLOB_MF_MODE_SPIO4				0x2
 -#define NVM_CFG1_GLOB_MF_MODE_NPAR1_0				0x3
 -#define NVM_CFG1_GLOB_MF_MODE_NPAR1_5				0x4
 -#define NVM_CFG1_GLOB_MF_MODE_NPAR2_0				0x5
 -#define NVM_CFG1_GLOB_MF_MODE_BD				0x6
 -#define NVM_CFG1_GLOB_MF_MODE_UFP				0x7
 -
 +	u32 generic_cont0;
 +#define NVM_CFG1_GLOB_MF_MODE_MASK		0x00000FF0
 +#define NVM_CFG1_GLOB_MF_MODE_OFFSET		4
 +#define NVM_CFG1_GLOB_MF_MODE_MF_ALLOWED	0x0
 +#define NVM_CFG1_GLOB_MF_MODE_DEFAULT		0x1
 +#define NVM_CFG1_GLOB_MF_MODE_SPIO4		0x2
 +#define NVM_CFG1_GLOB_MF_MODE_NPAR1_0		0x3
 +#define NVM_CFG1_GLOB_MF_MODE_NPAR1_5		0x4
 +#define NVM_CFG1_GLOB_MF_MODE_NPAR2_0		0x5
 +#define NVM_CFG1_GLOB_MF_MODE_BD		0x6
 +#define NVM_CFG1_GLOB_MF_MODE_UFP		0x7
 +	u32 engineering_change[3];
 +	u32 manufacturing_id;
 +	u32 serial_number[4];
 +	u32 pcie_cfg;
 +	u32 mgmt_traffic;
 +	u32 core_cfg;
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_MASK		0x000000FF
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_OFFSET		0
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_BB_2X40G	0x0
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_2X50G		0x1
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_BB_1X100G	0x2
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_4X10G_F		0x3
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_BB_4X10G_E	0x4
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_BB_4X20G	0x5
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_1X40G		0xB
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_2X25G		0xC
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_1X25G		0xD
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_4X25G		0xE
 +#define NVM_CFG1_GLOB_NETWORK_PORT_MODE_2X10G		0xF
 +
++<<<<<<< HEAD
 +	u32 e_lane_cfg1;
 +	u32 e_lane_cfg2;
 +	u32 f_lane_cfg1;
 +	u32 f_lane_cfg2;
 +	u32 mps10_preemphasis;
 +	u32 mps10_driver_current;
 +	u32 mps25_preemphasis;
 +	u32 mps25_driver_current;
 +	u32 pci_id;
 +	u32 pci_subsys_id;
 +	u32 bar;
 +	u32 mps10_txfir_main;
 +	u32 mps10_txfir_post;
 +	u32 mps25_txfir_main;
 +	u32 mps25_txfir_post;
 +	u32 manufacture_ver;
 +	u32 manufacture_time;
 +	u32 led_global_settings;
 +	u32 generic_cont1;
 +	u32 mbi_version;
 +#define NVM_CFG1_GLOB_MBI_VERSION_0_MASK		0x000000FF
 +#define NVM_CFG1_GLOB_MBI_VERSION_0_OFFSET		0
 +#define NVM_CFG1_GLOB_MBI_VERSION_1_MASK		0x0000FF00
 +#define NVM_CFG1_GLOB_MBI_VERSION_1_OFFSET		8
 +#define NVM_CFG1_GLOB_MBI_VERSION_2_MASK		0x00FF0000
 +#define NVM_CFG1_GLOB_MBI_VERSION_2_OFFSET		16
 +	u32 mbi_date;
 +	u32 misc_sig;
 +	u32 device_capabilities;
 +#define NVM_CFG1_GLOB_DEVICE_CAPABILITIES_ETHERNET	0x1
 +#define NVM_CFG1_GLOB_DEVICE_CAPABILITIES_FCOE		0x2
 +#define NVM_CFG1_GLOB_DEVICE_CAPABILITIES_ISCSI		0x4
 +#define NVM_CFG1_GLOB_DEVICE_CAPABILITIES_ROCE		0x8
 +	u32 power_dissipated;
 +	u32 power_consumed;
 +	u32 efi_version;
 +	u32 multi_network_modes_capability;
 +	u32 reserved[41];
++=======
+ 	u32							engineering_change[3];
+ 	u32							manufacturing_id;
+ 	u32							serial_number[4];
+ 	u32							pcie_cfg;
+ 	u32							mgmt_traffic;
+ 
+ 	u32							core_cfg;
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_MASK			0x000000ff
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_OFFSET			0
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_BB_2X40G		0x0
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_2X50G			0x1
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_BB_1X100G		0x2
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_4X10G_F			0x3
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_BB_4X10G_E		0x4
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_BB_4X20G		0x5
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_1X40G			0xb
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_2X25G			0xc
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_1X25G			0xd
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_4X25G			0xe
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_2X10G			0xf
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_2X50G_R1		0x11
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_4X50G_R1		0x12
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_1X100G_R2		0x13
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_2X100G_R2		0x14
+ #define NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_1X100G_R4		0x15
+ 
+ 	u32							e_lane_cfg1;
+ 	u32							e_lane_cfg2;
+ 	u32							f_lane_cfg1;
+ 	u32							f_lane_cfg2;
+ 	u32							mps10_preemphasis;
+ 	u32							mps10_driver_current;
+ 	u32							mps25_preemphasis;
+ 	u32							mps25_driver_current;
+ 	u32							pci_id;
+ 	u32							pci_subsys_id;
+ 	u32							bar;
+ 	u32							mps10_txfir_main;
+ 	u32							mps10_txfir_post;
+ 	u32							mps25_txfir_main;
+ 	u32							mps25_txfir_post;
+ 	u32							manufacture_ver;
+ 	u32							manufacture_time;
+ 	u32							led_global_settings;
+ 	u32							generic_cont1;
+ 
+ 	u32							mbi_version;
+ #define NVM_CFG1_GLOB_MBI_VERSION_0_MASK			0x000000ff
+ #define NVM_CFG1_GLOB_MBI_VERSION_0_OFFSET			0
+ #define NVM_CFG1_GLOB_MBI_VERSION_1_MASK			0x0000ff00
+ #define NVM_CFG1_GLOB_MBI_VERSION_1_OFFSET			8
+ #define NVM_CFG1_GLOB_MBI_VERSION_2_MASK			0x00ff0000
+ #define NVM_CFG1_GLOB_MBI_VERSION_2_OFFSET			16
+ 
+ 	u32							mbi_date;
+ 	u32							misc_sig;
+ 
+ 	u32							device_capabilities;
+ #define NVM_CFG1_GLOB_DEVICE_CAPABILITIES_ETHERNET		0x1
+ #define NVM_CFG1_GLOB_DEVICE_CAPABILITIES_FCOE			0x2
+ #define NVM_CFG1_GLOB_DEVICE_CAPABILITIES_ISCSI			0x4
+ #define NVM_CFG1_GLOB_DEVICE_CAPABILITIES_ROCE			0x8
+ 
+ 	u32							power_dissipated;
+ 	u32							power_consumed;
+ 	u32							efi_version;
+ 	u32							multi_net_modes_cap;
+ 	u32							reserved[41];
++>>>>>>> a396818c080d (qed: add support for new port modes)
  };
  
  struct nvm_cfg1_path {
diff --git a/drivers/net/ethernet/qlogic/qed/qed_dev.c b/drivers/net/ethernet/qlogic/qed/qed_dev.c
index 06a21c37219c..5f613e653428 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_dev.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_dev.c
@@ -4004,6 +4004,11 @@ static int qed_hw_get_nvm_info(struct qed_hwfn *p_hwfn, struct qed_ptt *p_ptt)
 	case NVM_CFG1_GLOB_NETWORK_PORT_MODE_2X10G:
 	case NVM_CFG1_GLOB_NETWORK_PORT_MODE_1X25G:
 	case NVM_CFG1_GLOB_NETWORK_PORT_MODE_4X25G:
+	case NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_2X50G_R1:
+	case NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_4X50G_R1:
+	case NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_1X100G_R2:
+	case NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_2X100G_R2:
+	case NVM_CFG1_GLOB_NETWORK_PORT_MODE_AHP_1X100G_R4:
 		break;
 	default:
 		DP_NOTICE(p_hwfn, "Unknown port mode in 0x%08x\n", core_cfg);
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_hsi.h
