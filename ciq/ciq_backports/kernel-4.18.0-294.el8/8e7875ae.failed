ASoC: soc-pcm: add missing ret=0 at soc_pcm_open()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: soc-pcm: add missing ret=0 at soc_pcm_open() (Jaroslav Kysela) [1783462]
Rebuild_FUZZ: 94.34%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit 8e7875ae373a3690397c4e593629d3b9ad5ccf42
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/8e7875ae.failed

commit 140a4532cdb8c ("ASoC: soc-pcm: add soc_pcm_clean() and call it
from soc_pcm_open/close()") switched to use soc_pcm_clean() at
soc_pcm_open().

But it removed "return 0", and missing "ret = 0",
because of it, it always return -EINVAL eventhough no error.
This patch adds missing "ret = 0" for success case.

	Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
Link: https://lore.kernel.org/r/87ft6ya65z.wl-kuninori.morimoto.gx@renesas.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 8e7875ae373a3690397c4e593629d3b9ad5ccf42)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-pcm.c
diff --cc sound/soc/soc-pcm.c
index 82d806ac486a,dcab9527ba3d..000000000000
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@@ -685,32 -782,14 +685,37 @@@ static int soc_pcm_open(struct snd_pcm_
  		 runtime->hw.channels_max);
  	pr_debug("ASoC: min rate %d max rate %d\n", runtime->hw.rate_min,
  		 runtime->hw.rate_max);
 +
  dynamic:
 +
  	snd_soc_runtime_activate(rtd, substream->stream);
++<<<<<<< HEAD
 +
++=======
+ 	ret = 0;
+ err:
++>>>>>>> 8e7875ae373a (ASoC: soc-pcm: add missing ret=0 at soc_pcm_open())
 +	mutex_unlock(&rtd->card->pcm_mutex);
 +	return 0;
 +
 +config_err:
 +	for_each_rtd_dais_rollback(rtd, i, dai)
 +		snd_soc_dai_shutdown(dai, substream, 1);
 +
 +	soc_rtd_shutdown(rtd, substream);
 +rtd_startup_err:
 +	soc_pcm_components_close(substream);
 +component_err:
  	mutex_unlock(&rtd->card->pcm_mutex);
 -pm_err:
 -	if (ret < 0)
 -		soc_pcm_clean(substream, 1);
 +
 +	for_each_rtd_components(rtd, i, component) {
 +		pm_runtime_mark_last_busy(component->dev);
 +		pm_runtime_put_autosuspend(component->dev);
 +	}
 +
 +	for_each_rtd_components(rtd, i, component)
 +		if (!component->active)
 +			pinctrl_pm_select_sleep_state(component->dev);
  
  	return ret;
  }
* Unmerged path sound/soc/soc-pcm.c
