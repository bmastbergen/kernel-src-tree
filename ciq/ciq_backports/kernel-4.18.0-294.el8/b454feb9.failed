x86/fpu/xstate: Add supervisor PASID state for ENQCMD

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Yu-cheng Yu <yu-cheng.yu@intel.com>
commit b454feb9abc1a9ee876fb84bfea0fc8d726f5bc4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/b454feb9.failed

The ENQCMD instruction reads a PASID from the IA32_PASID MSR. The
MSR is stored in the task's supervisor XSAVE* PASID state and is
context-switched by XSAVES/XRSTORS.

 [ bp: Add (in-)definite articles and massage. ]

	Signed-off-by: Yu-cheng Yu <yu-cheng.yu@intel.com>
Co-developed-by: Fenghua Yu <fenghua.yu@intel.com>
	Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Tony Luck <tony.luck@intel.com>
Link: https://lkml.kernel.org/r/1600187413-163670-6-git-send-email-fenghua.yu@intel.com
(cherry picked from commit b454feb9abc1a9ee876fb84bfea0fc8d726f5bc4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/fpu/types.h
#	arch/x86/kernel/fpu/xstate.c
diff --cc arch/x86/include/asm/fpu/types.h
index d62512a95b47,f5a38a5f3ae1..000000000000
--- a/arch/x86/include/asm/fpu/types.h
+++ b/arch/x86/include/asm/fpu/types.h
@@@ -116,6 -114,12 +116,15 @@@ enum xfeature 
  	XFEATURE_Hi16_ZMM,
  	XFEATURE_PT_UNIMPLEMENTED_SO_FAR,
  	XFEATURE_PKRU,
++<<<<<<< HEAD
++=======
+ 	XFEATURE_PASID,
+ 	XFEATURE_RSRVD_COMP_11,
+ 	XFEATURE_RSRVD_COMP_12,
+ 	XFEATURE_RSRVD_COMP_13,
+ 	XFEATURE_RSRVD_COMP_14,
+ 	XFEATURE_LBR,
++>>>>>>> b454feb9abc1 (x86/fpu/xstate: Add supervisor PASID state for ENQCMD)
  
  	XFEATURE_MAX,
  };
@@@ -130,6 -134,8 +139,11 @@@
  #define XFEATURE_MASK_Hi16_ZMM		(1 << XFEATURE_Hi16_ZMM)
  #define XFEATURE_MASK_PT		(1 << XFEATURE_PT_UNIMPLEMENTED_SO_FAR)
  #define XFEATURE_MASK_PKRU		(1 << XFEATURE_PKRU)
++<<<<<<< HEAD
++=======
+ #define XFEATURE_MASK_PASID		(1 << XFEATURE_PASID)
+ #define XFEATURE_MASK_LBR		(1 << XFEATURE_LBR)
++>>>>>>> b454feb9abc1 (x86/fpu/xstate: Add supervisor PASID state for ENQCMD)
  
  #define XFEATURE_MASK_FPSSE		(XFEATURE_MASK_FP | XFEATURE_MASK_SSE)
  #define XFEATURE_MASK_AVX512		(XFEATURE_MASK_OPMASK \
@@@ -231,6 -237,34 +245,37 @@@ struct pkru_state 
  	u32				pad;
  } __packed;
  
++<<<<<<< HEAD
++=======
+ /*
+  * State component 15: Architectural LBR configuration state.
+  * The size of Arch LBR state depends on the number of LBRs (lbr_depth).
+  */
+ 
+ struct lbr_entry {
+ 	u64 from;
+ 	u64 to;
+ 	u64 info;
+ };
+ 
+ struct arch_lbr_state {
+ 	u64 lbr_ctl;
+ 	u64 lbr_depth;
+ 	u64 ler_from;
+ 	u64 ler_to;
+ 	u64 ler_info;
+ 	struct lbr_entry		entries[];
+ } __packed;
+ 
+ /*
+  * State component 10 is supervisor state used for context-switching the
+  * PASID state.
+  */
+ struct ia32_pasid_state {
+ 	u64 pasid;
+ } __packed;
+ 
++>>>>>>> b454feb9abc1 (x86/fpu/xstate: Add supervisor PASID state for ENQCMD)
  struct xstate_header {
  	u64				xfeatures;
  	u64				xcomp_bv;
diff --cc arch/x86/kernel/fpu/xstate.c
index 59e66b3b5b95,67f1a03b9b23..000000000000
--- a/arch/x86/kernel/fpu/xstate.c
+++ b/arch/x86/kernel/fpu/xstate.c
@@@ -565,7 -604,8 +569,12 @@@ static void check_xstate_against_struct
  	 */
  	if ((nr < XFEATURE_YMM) ||
  	    (nr >= XFEATURE_MAX) ||
++<<<<<<< HEAD
 +	    (nr == XFEATURE_PT_UNIMPLEMENTED_SO_FAR)) {
++=======
+ 	    (nr == XFEATURE_PT_UNIMPLEMENTED_SO_FAR) ||
+ 	    ((nr >= XFEATURE_RSRVD_COMP_11) && (nr <= XFEATURE_LBR))) {
++>>>>>>> b454feb9abc1 (x86/fpu/xstate: Add supervisor PASID state for ENQCMD)
  		WARN_ONCE(1, "no structure for xstate: %d\n", nr);
  		XSTATE_WARN_ON(1);
  	}
* Unmerged path arch/x86/include/asm/fpu/types.h
diff --git a/arch/x86/include/asm/fpu/xstate.h b/arch/x86/include/asm/fpu/xstate.h
index 9ba156a1547e..1f439d2688b9 100644
--- a/arch/x86/include/asm/fpu/xstate.h
+++ b/arch/x86/include/asm/fpu/xstate.h
@@ -33,7 +33,7 @@
 				      XFEATURE_MASK_BNDCSR)
 
 /* All currently supported supervisor features */
-#define XFEATURE_MASK_SUPERVISOR_SUPPORTED (0)
+#define XFEATURE_MASK_SUPERVISOR_SUPPORTED (XFEATURE_MASK_PASID)
 
 /*
  * Unsupported supervisor features. When a supervisor feature in this mask is
* Unmerged path arch/x86/kernel/fpu/xstate.c
