vfio/type1: untag user pointers in vaddr_get_pfn

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Andrey Konovalov <andreyknvl@google.com>
commit 6cf5354c1c4b74fd2e5527db084f163e9d4dae4e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/6cf5354c.failed

This patch is a part of a series that extends kernel ABI to allow to pass
tagged user pointers (with the top byte set to something else other than
0x00) as syscall arguments.

vaddr_get_pfn() uses provided user pointers for vma lookups, which can
only by done with untagged pointers.

Untag user pointers in this function.

Link: http://lkml.kernel.org/r/87422b4d72116a975896f2b19b00f38acbd28f33.1563904656.git.andreyknvl@google.com
	Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
	Reviewed-by: Eric Auger <eric.auger@redhat.com>
	Reviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Al Viro <viro@zeniv.linux.org.uk>
	Cc: Felix Kuehling <Felix.Kuehling@amd.com>
	Cc: Jens Wiklander <jens.wiklander@linaro.org>
	Cc: Khalid Aziz <khalid.aziz@oracle.com>
	Cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
	Cc: Mike Rapoport <rppt@linux.ibm.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 6cf5354c1c4b74fd2e5527db084f163e9d4dae4e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/vfio/vfio_iommu_type1.c
diff --cc drivers/vfio/vfio_iommu_type1.c
index f1a7cfd55b17,96fddc1dafc3..000000000000
--- a/drivers/vfio/vfio_iommu_type1.c
+++ b/drivers/vfio/vfio_iommu_type1.c
@@@ -386,7 -375,8 +386,12 @@@ static int vaddr_get_pfn(struct mm_stru
  
  	down_read(&mm->mmap_sem);
  
++<<<<<<< HEAD
 +retry:
++=======
+ 	vaddr = untagged_addr(vaddr);
+ 
++>>>>>>> 6cf5354c1c4b (vfio/type1: untag user pointers in vaddr_get_pfn)
  	vma = find_vma_intersection(mm, vaddr, vaddr + 1);
  
  	if (vma && vma->vm_flags & VM_PFNMAP) {
* Unmerged path drivers/vfio/vfio_iommu_type1.c
