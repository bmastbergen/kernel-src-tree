Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 16958
Number of commits matched with upstream: 16868 (99.47%)
Number of commits in upstream but not in rpm: 471362
Number of commits NOT found in upstream: 90 (0.53%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-294.el8 for kernel-4.18.0-294.el8
Clean Cherry Picks: 13423 (79.58%)
Empty Cherry Picks: 3262 (19.34%)
_______________________________

__EMPTY COMMITS__________________________
8e5cddd1262cdee59257d554440cc9a80e5fcb7b firmware: dcdbas: Move dcdbas to drivers/platform/x86
3c93a0c04dfdcba199982b53b97488b1b1d90eff sched/debug: Add a new sched_trace_*() helper functions
9d246053a69196c7c27068870e9b4b66ac536f68 sched: Add a tracepoint to track rq->nr_running
a1bd06853ee478d37fae9435c5521e301de94c67 sched: Fix use of count for nr_running tracepoint
dbce456280857f329af9069af5e48a9b6ebad146 powerpc/numa: Limit possible nodes to within num_possible_nodes
72730bfc2a2b91a525f38dfc830f598bdb95f216 powerpc/smp: Create coregroup domain
fa35e868f9ddcbb7984fd5ab7f91aef924fa8543 powerpc/smp: Implement cpu_to_coregroup_id
0dacee1bfa70e171be3a12a30414c228453048d2 sched/pelt: Remove unused runnable load average
9f68395333ad7f5bfe2f83473fed363d4229f11c sched/pelt: Add a new runnable average signal
070f5e860ee2bf588c99ef7b4c202451faa48236 sched/fair: Take into account runnable_avg to classify group
e21cf43406a190adfcc4bfe592768066fb3aaa9b sched/cfs: change initial value of runnable_avg
c887ef5707591e84f80271e95e99ff9fb38987b5 powerpc/64s: Don't set FSCR bits in INIT_THREAD
dcbbfa6b05daca94ebcdbce80a7cf05c717d2942 powerpc/powernv/idle: Rename pnv_first_spr_loss_level variable
fa54a981ea7a852c145b05c95abba11e81fc1157 powerpc/lib: Use patch_site to patch copy_32 functions once cache is enabled
04b0a72f2807ba40b155fc1689e38569779527ca powerpc/32: use patch_site_addr() in machine_init()
7c95d8893fb55869882c9f68f4c94840dc43f18f powerpc: Change calling convention for create_branch() et. al.
76a5eaa38b15dda92cd6964248c39b5a6f3a4e9d powerpc/fsl: Add infrastructure to fixup branch predictor flush
753462512868674a788ecc77bb96752efb818785 powerpc: Use a macro for creating instructions from u32s
777e26f0edf8dab58b8dd474d35d83bde0ac6d76 powerpc: Use an accessor for instructions
8094892d1aff14269d3b7bfcd8b941217eecd81f powerpc: Use a function for getting the instruction op code
aabd2233b6aefeee6d7a2f667076d8346be1d30a powerpc: Use a function for byte swapping instructions
217862d9b98bf08958d57fd7b31b9de0f1a9477d powerpc: Introduce functions for instruction equality
94afd069d937d84fb4f696eb9a78db4084e43d21 powerpc: Use a datatype for instructions
f8faaffaa7d99028e457ef2d1dcb43a98f736938 powerpc: Use a function for reading instructions
7ba68b2172c19031fdc2a2caf37328edd146e299 powerpc: Add a probe_user_read_inst() function
95b980a00d1220ca67550a933166704db8bc5c14 powerpc: Add a probe_kernel_read_inst() function
a8646f43ba5046e7f5c4396125d5136bfcb17b49 powerpc/kprobes: Use patch_instruction()
5249385ad7f0ac178433f0ae9cc5b64612c8ff77 powerpc: Define and use get_user_instr() et. al.
622cf6f436a12338bbcfbb3474629755547fd112 powerpc: Introduce a function for reporting instruction length
6c7a4f0a9f66fc7fdc6e208559e5d562f53e0991 powerpc/xmon: Use a function for reading instructions
7fccfcfba04f9cb46438f368755d368f6c57f3a0 powerpc/xmon: Move insertion of breakpoint for xol'ing
0b582db5490a1f250ef63337dd46d5c7599dae80 powerpc: Make test_translate_branch() independent of instruction length
7a8818e0df5c6b53c89c7c928498668a2bbb3de0 powerpc/optprobes: Add register argument to patch_imm64_load_insns()
650b55b707fdfa764e9f2b81314d3eb4216fb962 powerpc: Add prefixed instructions to instruction data type
f77f8ff7f13e6411c2e0ba25bb7e012a5ae6c927 powerpc: Test prefixed code patching
785b79d1e02873c2088ee1301154c66dace66ce5 powerpc: Test prefixed instructions in feature fixups
c9c831aebd8663d0129bbcee4d76be889f0627fe powerpc/xmon: Don't allow breakpoints on suffixes
b4657f7650babc9bfb41ce875abe41b18604a105 powerpc/kprobes: Don't allow breakpoints on suffixes
a3ea40d5c7365e7e5c7c85b6f30b15142b397571 powerpc: Add POWER10 architected mode
b6b54b42722a2393056c891c0d05cd8cc40eb776 powerpc/sstep: Add tests for prefixed integer load/stores
0396de6d8561c721b03fce386eb9682b37a26013 powerpc/sstep: Add tests for prefixed floating-point load/stores
4f825900786e1c24e4c48622e12eb493a6cd27b6 powerpc/sstep: Add tests for Prefixed Add Immediate
c5ff46d69c410f7fac173e4fde3eea484b4b4eda powerpc: Add ppc_inst_next()
16ef9767e4dc5cf03a71ae7bc2bc588dbbe7983e powerpc: Add ppc_inst_as_u64()
50428fdc53ba48f6936b10dfdc0d644972403908 powerpc: Add a ppc_inst_as_str() helper
8b98afc117aaf825c66d7ddd59f1849e559b42cd powerpc/xmon: Improve dumping prefixed instructions
e00b62f0b06d0ae2b844049f216807617aff0cdb x86/cpu: Add Lakefield, Alder Lake and Rocket Lake models to the to Intel CPU family
be25d1b5ea6a3a3ecbb5474e2ae8e32d2ba055ea x86/cpu: Add Sapphire Rapids CPU model number
c46172147ebbeb70094db48d76ab7945d96c638b netfilter: conntrack: do not auto-delete clash entries on reply
d1b222c6be1f8bfc77099e034219732ecaeaaf96 rcu/nocb: Add bypass callback queueing
f7a81b12d6af42a9d09be1e5f041169f04b0b67a rcu/nocb: Print no-CBs diagnostics when rcutorture writer unduly delayed
f48fe4c586604c3a09938c6a6e9fd3356dfe8f3c rcu/nocb: Don't wake no-CBs GP kthread if timer posted under overload
b8889c9c89a2655a231dfed93cc9bdca0930ea67 rcu: Fix uninitialized variable in nocb_gp_wait()
77a40f97030b27b3fc1640a3ed203870f0817f57 rcu: Remove kfree_rcu() special casing and lazy-callback handling
189a6883dcf7fa70e17403ae4225c60ffc9e404b rcu: Remove kfree_call_rcu_nobatch()
1a33e10e4a95cb109ff1145098175df3113313ef net: partially revert dynamic lockdep key changes
845e0ebb4408d4473cf60d21224a897037e9a77a net: change addr_list_lock back to static key
be74294ffa24f5fbc0d6643842e3e095447e17a2 net: get rid of lockdep_set_class_and_subclass()
3dfdecc6d1256835ac0612b2a8f7595466d66327 lib/Kconfig: fix OBJAGG in lib/ menu structure
5480280d3f2d11d47f9be59d49b20a8d7d1b33e8 arm64/mm: enable HugeTLB migration for contiguous bit HugeTLB pages
5b7a1d406062449a4d51aea1df37a73285ced1dc mm, hugetlbfs: rename address to haddr in hugetlb_cow()
974e6d66b6b5c6e2d6a3ccc18b2f9a0b472be5b4 mm, hugetlbfs: pass fault address to cow handler
ac46d4f3c43241ffa23d5bf36153a0830c0e02cc mm/mmu_notifier: use structure for invalidate_range_start/end calls v2
1ed7293ac40c5b1950b8ab21b6bc1838578ae2ad mm/memory.c: initialise mmu_notifier_range correctly
ba422731316dde1e22dcc84b83c7349dc0ce1c3c mm/mmu_notifier: mm/rmap.c: Fix a mmu_notifier range bug in try_to_unmap_one
a1123418ba1078037d9fecb72573ff7222dfe201 RDMA/uverbs: Add ioctl command to get a device context
811646998e3e64af19524c8e99b790a4043c5f9b RDMA/core: Add the core support field to METHOD_GET_CONTEXT
87d8069f6b028793254ddd0a66df1d7b6d79b450 IB/core: Add interface to advise_mr for kernel users
f03d9fadfe13a78ee28fec320d43f7b37574adcb RDMA/core: Add weak ordering dma attr to dma mapping
d15da2a2e813679aeac8bff3be38d3adc849c1a6 nl80211: link recursive netlink nested policy
40cacbcb324036233a927418441323459d28d19b mm, compaction: remove unnecessary zone parameter in some instances
70b44595eafe9c7c235f076d653a268ca1ab9fdb mm, compaction: use free lists to quickly locate a migration source
e380bebe4771548df9bece8b7ad9dab07d9158a6 mm, compaction: keep migration source private to a single compaction instance
5a811889de10f1ebb8e03a2744be006e909c405c mm, compaction: use free lists to quickly locate a migration target
804d3121ba5f03af0ab225e2f688ee3ee669c0d2 mm, compaction: avoid rescanning the same pageblock multiple times
cb2dcaf023c2cf12d45289c82d4030d33f7df73e mm, compaction: finish pageblock scanning on contention
cb810ad294d3c3a454e51b12fbb483bbb7096b98 mm, compaction: rework compact_should_abort as compact_check_resched
cf66f0700c8f1d7c7c1c1d7e5e846a1836814601 mm, compaction: do not consider a need to reschedule as contention
d097a6f63522547dfc7c75c7084a05b6a7f9e838 mm, compaction: reduce premature advancement of the migration target scanner
dbe2d4e4f12e07c6a2215e3603a5f77056323081 mm, compaction: round-robin the order while searching the free lists for a target
4fca9730c51d51f643f2a3f8f10ebd718349c80f mm, compaction: sample pageblocks for free pages
e332f741a8dd1ec9a6dc8aa997296ecbfe64323e mm, compaction: be selective about what pageblocks to clear skip hints
5e1f0f098b4649fad53011246bcaeff011ffdf5d mm, compaction: capture a page under direct compaction
f4b7e272b5c0425915e2115068e0a5a20a3a628e mm: remove zone_lru_lock() function, access ->lru_lock directly
5f438eee8f2e972e910b558a1a243def508b6a35 mm/compaction: pass pgdat to too_many_isolated() instead of zone
6b0868c820ff7370d15d6ddfe71b1ce6bbe8a25d mm/compaction.c: correct zone boundary handling when resetting pageblock skip hints
5b56d996dd50a9d2ca87c25ebb50c07b255b7e04 mm/compaction.c: abort search if isolation fails
ee8ab0eeb49bd3982090c8f14dc9cc65bcd13c5c mm, page_alloc: always use a captured page regardless of compaction result
dd7ef7bd14640f11763b54f55131000165f48321 mm/compaction.c: fix an undefined behaviour
60fce36afa9c77c7ccbf980c4f670f3be3651fce mm/compaction.c: correct zone boundary handling when isolating pages from a pageblock
e577c8b64d58fe307ea4d5149d31615df2d90861 mm, compaction: make sure we isolate a valid PFN
670105a25608affe01cb0ccdc2a1f4bd2327172b mm: compaction: avoid 100% CPU usage during compaction when a task is killed
32aaf0553df99cc4314f6e9f43216cd83afc6c20 mm/compaction.c: remove unnecessary zone parameter in isolate_migratepages()
a2e9a5afce080226edbf1882d63d99bf32070e9e mm, compaction: fix wrong pfn handling in __reset_isolation_pfn()
6467552ca64c4ddd2b83ed73192107d7145f533b mm, compaction: fully assume capture is not NULL in compact_zone_order()
f386775510bf35d8ad28ad77e8d82524957abde7 mm/compaction: fix a typo in comment "pessemistic"->"pessimistic"
b9e20f0da1f5c9c68689450a8cb436c9486434c8 mm, compaction: make capture control handling safe wrt interrupts
ad0f75e5f57ccbceec13274e1e242f2b5a6397ed cgroup: fix cgroup_sk_alloc() for sk_clone_lock()
14b032b8f8fce03a546dcf365454bec8c4a58d7d cgroup: Fix sock_cgroup_data on big-endian.
9ed431c1d7cf8c394aa7562ca6b84f3eeb8c78a8 nfp: tls: make use of kernel-driven TX resync
6a35ddc5445a8291ced6247a67977e110275acde nfp: tls: implement the stream sync RX resync
294f69e662d1570703e9b56e95be37a9fd3afba5 compiler_attributes.h: Add 'fallthrough' pseudo keyword for switch/case use
bc0ae0e737f5167348579612493e2754e2122dfb gpio: add driver for Mellanox BlueField 2 GPIO controller
9f676e5313c1fb7070997bd652a4ed68c6fb9a8c gpio: mlxbf2: remove unused including <linux/version.h>
66d8ad67aab3bc6f55e7de81565cd0d4875bd851 gpio: mlxbf2: fix return value check in mlxbf2_gpio_get_lock_res()
e6862430fa5ef557d40c221c7f9bb3beb5feaca4 gpio: mlxbf2: Fix sleeping while holding spinlock
2f9bce5f38684cd10533ac41d8dd395a611cc8c5 gpio: gpio-mlxbf2: Tell the compiler that ACPI functions may not be use
a7a9ad232f02e6aa659cc9b58b72b1a30dccd1a6 gpio: gpio-mlxbf2.c: Provide __releases() annotation to stop confusing Sparse
e262e32d6bde0f77fb0c95d977482fc872c51996 vfs: Suppress MS_* flag defs within the kernel unless explicitly enabled
a10d7c22b34bcf744679019269bfb33ebf0b75ee LSM: split ->sb_set_mnt_opts() out of ->sb_kern_mount()
5b4002391153acebce2557af318bbdc17e235134 LSM: turn sb_eat_lsm_opts() into a method
204cc0ccf1d49c6292aeef4c8edd1b3d10ff933c LSM: hide struct security_mnt_opts from any generic code
bd3236557bb256d6491df125e5e9d0393c70e4d2 selinux: switch to private struct selinux_mnt_opts
ba6418623385abf19a6c15cf0b1cfaacfdf9afc8 selinux: new helper - selinux_add_opt()
169d68efb03b728588c209c682f14328eec485c0 selinux: switch away from match_token()
da3d76abb2e74c07b1cd620ee5e3b31227846c7c selinux: regularize Opt_... names a bit
99dbbb593fe6b39153c15ea9b9c63ea911864cf2 selinux: rewrite selinux_sb_eat_lsm_opts()
757cbe597fe8490c7c0a9650ebe5d60195f151d4 LSM: new method: ->sb_add_mnt_opt()
718c43038f287e843c2f63d946977de90014cb11 mount_fs: suppress MAC on MS_SUBMOUNT as well as MS_KERNMOUNT
9bc61ab18b1d41f26dc06b9e6d3c203e65f83fe6 vfs: Introduce fs_context, switch vfs_kern_mount() to it.
8f2918898eb5fe25845dde7f4a77bda0e2966e05 new helpers: vfs_create_mount(), fc_mount()
c9ce29ed795fae86e594844857fad1b0d3be85f4 vfs_get_tree(): evict the call of security_sb_kern_mount()
8d0347f6c3a9d4953ddd636a31c6584da082e084 convert do_remount_sb() to fs_context
e1a91586d5da6f879b6dd385a2e7227bf1653570 fs_context flavour for submounts
f3a09c92018a91ad0981146a4ac59414f814d801 introduce fs_context methods
c6b82263f9c6e745eb4c5dfc2578d147c4cd7604 vfs: Introduce logging functions
31d921c7fb9691722ba9503b64153cdc322a7fa8 vfs: Add configuration parser helpers
442155c1bd84f82bff2d05d0ec4d0090df17ecfa selinux: Implement the new mount API LSM hooks
846e56621897a63966b7f03a70be29060394c363 vfs: Put security flags into the fs_context struct
3e1aeb00e6d132efc151dacc062b38269bc9eccc vfs: Implement a filesystem superblock creation/configuration context
cb50b348c71ffa90d7d1b2a494b553b5099bc090 convenience helpers: vfs_get_super() and sget_fc()
0b52075ee62301dd150c9f2c3ddd0035ed894cde introduce cloning of fs_context
60a3c3a58e2e01e19ed2b68b415adb12118ac349 procfs: Move proc_fill_super() to fs/proc/root.c
66f592e2ece0389c018d74d1bbb2d0b9738cfe48 proc: Add fs_context support to procfs
90129625d9203a917fc1d3e4768976ba90d71b44 cgroup: start switching to fs_context
7feeef58690a5ea8c5033d43e696ef41b28d82eb cgroup: fold cgroup1_mount() into cgroup1_get_tree()
f5dfb5315d340abd71bec523be9b114d5ac410de cgroup: take options parsing into ->parse_monolithic()
8d2451f4994fa60a57617282bab91b98266a00b1 cgroup1: switch to option-by-option parsing
e34a98d5b226b84a3ed6da93e7a92e65cc1c81ba cgroup2: switch to option-by-option parsing
cf6299b1d00555cd10dc30d95b300d7084128a2c cgroup: stash cgroup_root reference into cgroup_fs_context
71d883c37e8d4484207708af56685abb39703b04 cgroup_do_mount(): massage calling conventions
6678889f0726910fc884c54f951d8c5646a04819 cgroup1_get_tree(): separate "get cgroup_root to use" into a separate helper
cca8f32714d3a8bb4d109c9d7d790fd705b734e5 cgroup: store a reference to cgroup_ns into cgroup_fs_context
23bf1b6be9c291a7130118dcc7384f72ac04d813 kernfs, sysfs, cgroup, intel_rdt: Support fs_context
06a2ae56b5b88fa57cd56e0b99bd874135efdf58 vfs: Add some logging to the core users of the fs_context log
ab81dabda1d4edc1728173be6c6a279455f220e3 fix sysfs_init_fs_context() in !CONFIG_NET_NS case
a07b20004793d8926f78d63eb5980559f7813404 vfs: syscall: Add open_tree(2) to reference or clone a mount
2db154b3ea8e14b04fee23e3fdfd5e9d17fbc6ae vfs: syscall: Add move_mount(2) to move mounts around
44dfd84a6d54a675e35ab618d9fab47b36cb78cd teach move_mount(2) to work with OPEN_TREE_CLONE
dadd2299ab61fc2b55b95b7b3a8f674cdd3b69c9 Make anon_inodes unconditional
24dcb3d90a1f67fe08c68a004af37df059d74005 vfs: syscall: Add fsopen() to prepare for superblock creation
e7582e16a170db4c85995c1c03d194ea1ea621fc vfs: Implement logging through fs_context
ecdab150fddb42fe6a739335257949220033b782 vfs: syscall: Add fsconfig() for configuring and managing a context
93766fbd2696c2c4453dd8e1070977e9cd4e6b6d vfs: syscall: Add fsmount() to create a mount for a superblock
cf3cba4a429be43e5527a3f78859b1bfd9ebc5fb vfs: syscall: Add fspick() to select a superblock for reconfiguration
f1b5618e013af28b3c78daf424436a79674423c0 vfs: Add a sample program for the new mount API
1cdc415f10831c18912943017d06b2be948c67b4 uapi, fsopen: use square brackets around "fscontext" [ver #2]
9c8ad7a2ff0bfe58f019ec0abc1fb965114dde7d uapi, x86: Fix the syscall numbering of the mount API syscalls [ver #2]
d8076bdb56af5e5918376cd1573a6b0007fc1a89 uapi: Wire up the mount API syscalls on non-x86 arches [ver #2]
e2e0e09758a6f7597de0f9b819647addfb71b6bd selinux: fix a missing-check bug in selinux_add_mnt_opt( )
fec6375320c6399c708fa9801f8cfbf950fee623 selinux: fix a missing-check bug in selinux_sb_eat_lsm_opts()
75f2d86b20bf6aec0392d6dd2ae3ffff26d2ae0e fs: VALIDATE_FS_PARSER should default to n
1f58bb18f6f28d1df0b7144d90bc90ee5672416d mount_pseudo(): drop 'name' argument, switch to d_make_root()
f7a9945184100b531f0de3b12c617a349236dd8a no need to protect against put_user_ns(NULL)
0ce0cf12fc4c6a089717ff613d76457052cf4303 consolidate the capability checks in sget_{fc,userns}()
96a374a35f822e53cad3b011dd5fbadec1b1473f vfs: Convert nfsctl to use the new mount API
bb7b6b2bbdb827e68cd506c8f5e3ba13215cccb2 vfs: Kill mount_ns()
2527b284defaeadf74829b0b0bd3207ca7f165eb move the capability checks from sget_userns() to legacy_get_tree()
fd912087f4a897cfdf8274f8085c501742638be2 legacy_get_tree(): pass fc->user_ns to mount_capable()
20284ab7427ffac514faf44fd9eb50e5745f4474 switch mount_capable() to fs_context
46cf047a945c7a53cb2dc9353a87a9a4e3e778cd procfs: set ->user_ns before calling ->get_tree()
d5f68d330c156774bf69059e434b5d8acea3b92e cpuset: move mount -t cpuset logics into cgroup.c
059338aae33165179352a26b58d815801072c87d move mount_capable() calls to vfs_get_tree()
c3aabf0780a506225b53bfe2b5177dd5dfec093d move mount_capable() further out
7cdfa44227b0d8842d46a775cebe4311150cb8f2 vfs: Fix refcounting of filenames in fs_parser
c80fa7c8301c10ad10d997b9e86b4aeac5923b3e vfs: Provide sb->s_iflags settings in fs_context struct
52db59df17c0cd3ee4071a75a8509287a662abac vfs: Convert aio to use the new mount API
33cada40b51f083d8508e66f96c646640f773835 vfs: Convert anon_inodes to use the new mount API
9030d16eb8adcbf9e80d20b909856c6fdabfdec4 vfs: Convert bdev to use the new mount API
059b20d9da69d3a9bfb7ab00d1e5a3114a31c822 vfs: Convert nsfs to use the new mount API
4fa7ec5db7e731a3db26b9647f39b0595f74347d vfs: Convert pipe to use the new mount API
8e9231f819e32d8efb53b0f17f293bab74bed8ce vfs: Convert zsmalloc to use the new mount API
fba9be49701a8e89a691beffb11bfa97df8f0c9f vfs: Convert sockfs to use the new mount API
75d4e06f049ffb059fdf7e81c0c4c9fab2ba60e4 vfs: Convert dax to use the new mount API
52418c8f0073d6641411caf0a24740ed58436b21 vfs: Convert cxl to use the new mount API
219e69639070438c969e7da282f513595b00f9d8 vfs: Convert ocxlflash to use the new mount API
99558d203ceab980d74066daac4050609f5eccf4 vfs: Convert virtio_balloon to use the new mount API
8d9e46d80777b484f8f0945c317ad618224d7811 fold mount_pseudo_xattr() into pseudo_fs_get_tree()
db2c246a091efe2e49aeb3fe0cf6ed2affbddf37 vfs: Use sget_fc() for pseudo-filesystems
023d066a0d0a87696c04b0de2ceae53063d0b655 vfs: Kill sget_userns()
2ac295d4f0c095310addbcb03d91d2a4c9f7d435 convenience helper get_tree_nodev()
c23a0bbab30cc1714b6b1d6a1c153a5ccab3f0d8 convenience helper: get_tree_single()
037f11b4752f717201143a1dc5d6acf3cb71ddfa mnt_init(): call shmem_init() unconditionally
1dd9bc08cf1420d466dd8dcfcc233777e61ca5d2 vfs: set fs_context::user_ns for reconfigure
533770cc0ae84890624dc129609f3d75855c8982 new helper: get_tree_keyed()
fe62c3a4e17ddfe672710425ab6eba2ba7203526 vfs: Create fs_context-aware mount_bdev() replacement
43ce4c1feadbc84c772518a2d1974f6ba1b15089 vfs: Add a single-or-reconfig keying to vfs_get_super()
e04dc423ae2c0fc862fef6b43ed9083226375e98 shmem_parse_options(): take handling a single option into a helper
626c3920aeb4575f53c96b0d4ad4e651a21cbb66 shmem_parse_one(): switch to use of fs_parse()
f32356261d44d580649a7abce1156d15d49cf20f vfs: Convert ramfs, shmem, tmpfs, devtmpfs, rootfs to use the new mount API
74983ac20aeafc88d9ceed64a8bf2a9024c488d5 vfs: Make fs_parse() handle fs_param_is_fd-type params better
adf2314fe667565258f304a04990d334defabeaf nfs: get rid of ->set_security()
9954bf92c0cddd50a2a470be302e1c1ffdf21d42 NFS: Move mount parameterisation bits into their own file
e0a626b1247496971dfbed35d104f77e286c70bb NFS: Constify mount argument match tables
5eb005caf5383dd328199f0f2114cd7dad731d3d NFS: Rename struct nfs_parsed_mount_data to struct nfs_fs_context
f8ee01e3e2c8845e812497f0d4925c18cafaad87 NFS: Split nfs_parse_mount_options()
cbd071b5daa070976ada8601188fcefc986747d6 NFS: Deindent nfs_fs_context_parse_option()
48be8a66cf98accca033c42d214698dd64ac4f79 NFS: Add a small buffer in nfs_fs_context to avoid string dup
e558100fda7e8c7888f523920214bcb35ed9382b NFS: Do some tidying of the parsing code
38465f5d1af932494d66b52d26bb3a02b837cdf8 NFS: rename nfs_fs_context pointer arg in a few functions
e38bb238ed8ce280a217629294ba51dc217c5a2c NFS: Convert mount option parsing to use functionality from fs_parser.h
f2aedb713c284429987dc66c7aaf38decfc8da2a NFS: Add fs_context support.
62a55d088cd87d480a6fd67b0d63b14ccae80838 NFS: Additional refactoring for fs_context conversion
ce8866f0913ff157edc098f06bad07763ad317e7 NFS: Attach supplementary error information to fs_context.
3a21409a0b4bce3171001b168ca42285004c873c nfs: Return EINVAL rather than ERANGE for mount parse errors
1cef21842ff3b6043c459b6462183e70295b5b19 NFS: Ensure the fs_context has the correct fs_type before mounting
1821b26a1fed8fca57a96ef87bac7a6a48e78815 NFS: Don't hard-code the fs_type when submounting
75a9b9176157f3095d3099adf512b5a233addbc7 NFS: Fix leak of ctx->nfs_server.hostname
529af90576cfa44aa107e9876e2ebaa053983986 NFS: Fix a few constant_table array definitions
15751612734ca0c419ac43ce986c9badcb5e2829 NFS: Fix fscache super_cookie allocation
6fcf0c72e4b9360768cf5ef543c4f14c34800ee8 vfs: add missing blkdev_put() in get_tree_bdev()
0f89589a8c6f1033cb847a606517998efb0da8ee Pass consistent param->type to fs_parse()
2620327852478e695afb2eebe66c354b3bc456cc fs: fs_parser: fix printk format warning
2710c957a8ef4fb00f21acb306e3bd6bcf80c81f fs_parse: get rid of ->enums
5eede625297f4d21dc12ea7a7418fd21672f131d fold struct fs_parameter_enum into struct constant_table
34264ae3fa22429ec4fd9151602342d1f21486eb don't bother with explicit length argument for __lookup_constant()
aa1918f9491442a007a0cbe41a31539233209777 get rid of fs_value_is_filename_empty
fbc2d1686dc5c2e403091f3c25ca2bc16f88cccb get rid of cg_invalf()
9f09f649ca3350cdb49c81f7d5ac6e64a4d7e1a1 teach logfc() to handle prefices, give it saner calling conventions
3fbb8d5554a1481d9c5f54ee7dc59f416650efb1 struct p_log, variants of warnf() et.al. taking that one instead
7f5d38141e309bb4ba995d9726928af85a299c50 new primitive: __fs_parse()
cc3c0b533ab9142eac2e291628fbfca3685f38cd add prefix to fs_context->log
faa3604eda325588451c9c1eb4c8a8d04c1cd633 x86/resctrl: Fix typos in the mba_sc mount option
48ce73b1bef20331007b35de7ade8fe26cd55e84 fs_parse: handle optional arguments sanely
328de5287b10abc967c517461cf2948bd8a5b4e9 turn fs_param_is_... into functions
a3ff937b33d9dfd0923ac5279d87723048599057 prefix-handling analogues of errorf() and friends
bf45f7fcc4003a8347a172354e2b8b59a259822c procfs: switch to use of invalfc()
58c025f0e803a45453bb5ada957cbf98163d3048 cgroup1: switch to use of errorfc() et.al.
f35aa2bc809eacc44c3cee41b52cef1c451d4a89 tmpfs: switch to use of invalfc()
ee948837d7fa89127373c139766aacf6b02a9225 [fix] get rid of checking for absent device name in vfs_get_tree()
1b0b9cc8d3793e31b313e6c9685513b08cd883c4 vfs: fsmount: add missing mntget()
05883eee857eab4693e7d13ebab06716475c5754 do_move_mount(): fix an unsafe use of is_anon_ns()
570d7a98e7d6d5d8706d94ffd2d40adeaa318332 vfs: move_mount: reject moving kernel internal mounts
dd7bc8158b413e0b580c491e8bd18cb91057c7c2 Fix use after free in get_tree_bdev()
c3eeaae9fd736b7f2afbda8d3cbb1cbae06decf3 samples/vfs: avoid warning in statx override
a2d24bcb97dc7b0be1cb891e60ae133bdf36c786 nfs: add missing "posix" local_lock constant table definition
aa3367c91d360db4dc7cbd458c05a6a631aa7af1 NFS: Don\'t specify NFS version in "UDP not supported" error
c74dfe97c104bda5144bfa8193d8e5ea67d5da7f NFS: Add mount option 'softreval'
f7b37b8b139860ed786bf8ce4358290c6053d94d NFS: Add softreval behaviour to nfs_lookup_revalidate()
93ce4af774bc3d8a72ce2271d03241c96383629d NFS: Clean up process of marking inode stale.
fbf4bcc9a8373122881909331f2f9566a128126e NFS: Fix an ABBA spinlock issue in pnfs_update_layout()
bb7fcad48d3804d814b97c785514e2d1657e157f mfd: intel-lpss: Add Intel Tiger Lake PCH-H PCI IDs
a526c85c22363a145be4feb6deb895eeee484ca1 xfs: move xfs_file_iomap_begin_delay around
f150b4234397448c6abab8785e58a222bfd9ec00 xfs: split the iomap ops for buffered vs direct writes
5c5b6f7585d272a2fccf4ccf9b85251f6fbeb124 xfs: cleanup xfs_direct_write_iomap_begin
1e190f8e8098b95d9f48f91db8b618a2d371c13a xfs: improve the IOMAP_NOWAIT check for COW inodes
30fa529e3b2e6f1da277ef8525e4ce7979c57c57 xfs: add a xfs_inode_buftarg helper
837a6e7f5cdb5e411c6187729e12962c2705160d fs: add generic UNRESVSP and ZERO_RANGE ioctl handlers
c2414ad6e66ab96b867309454498f7fb29b7e855 xfs: replace -EIO with -EFSCORRUPTED for corrupt metadata
2fcddee8cd8fcce4cc5589a0344f40a28a6dd26f xfs: simplify parsing of allocsize mount option
3274d00801007cccab8aec7f2ac50f6bc10d1692 xfs: rename the XFS_MOUNT_DFLT_IOSIZE option to
e696663a97e89f88d085ff84b8a373989ae613b1 xfs: simplify the xfs_iomap_write_direct calling
a5155b870d687de1a5f07e774b49b1e8ef0f6f50 xfs: always log corruption errors
c0a6791667f81d9b12443f7ed1c7b4602be9e3c9 xfs: refactor suffix_kstrtoint()
48a06e1b5773229caf13e6cc35d73cec2d2f6519 xfs: refactor xfs_parseags()
9a861816a02653dcec7a97d4f639f04b0bcf09c3 xfs: move xfs_parseargs() validation to a helper
73e5fff98b6446de1490a8d7809121b0108d49f4 xfs: switch to use the new mount-api
63cd1e9b026e760f0455d6fb959f5c963c90c10e xfs: move xfs_fc_reconfigure() above xfs_fc_free()
2f8d66b3cd796a96532d9d73957f5c1b88d48815 xfs: move xfs_fc_get_tree() above xfs_fc_reconfigure()
8757c38f2cf6e5ac474aabd7deea14729918ff7c xfs: move xfs_fc_parse_param() above xfs_fc_get_tree()
50f8300904b1b217328219812ee67c231a5aff8d xfs: fold xfs_mount-alloc() into xfs_init_fs_context()
0279c71fe0d14c510001e9a7dd1ce2e0c77dd06c xfs: remove redundant assignment to variable error
5f213ddbcbe86577f517437ef0ecb4ef3bcc3434 xfs: fix missing header includes
2fe4f92834c40e81945284b3eaf4610c4dd84e9d xfs: refactor "does this fork map blocks" predicate
895e196fb6f84402dcd0c1d3c3feb8a58049564e xfs: convert EIO to EFSCORRUPTED when log contents are invalid
7f6bcf7c29410747fb05258870bd2254855af9c2 xfs: remove a stray tab in xfs_remount_rw()
a71895c5dad1ab8cf30622e208d148298ab602e5 xfs: convert open coded corruption check to use XFS_IS_CORRUPT
de7a866fd41b227b0aa6e9cbeb0dae221c12f542 xfs: merge the projid fields in struct xfs_icdinode
45feef8f50b94d56d6a433ad5baf5cdf58e3db98 xfs: refactor xfs_dabuf_map
199e9ba4e4a9927f5addb644c1a1e1002e68cc30 xfs: improve the xfs_dabuf_map calling conventions
06566fda428e6420aa993e32845b165936fb50d6 xfs: remove the mappedbno argument to xfs_da_reada_buf
cd2c9f1b544b8f5e1ca1874032fd669d74946a6d xfs: remove the mappedbno argument to xfs_da_read_buf
2911edb653b9c64e0aad461f308cae8ce030eb7b xfs: remove the mappedbno argument to xfs_da_get_buf
9676b54e6e28689af1b4247569f14466bdfc5390 xfs: make xfs_trans_get_buf_map return an error code
ce92464c180b60e79022bdf1175b7737a11f59b7 xfs: make xfs_trans_get_buf return an error code
ee647f85cb81b09bbfa2886954828ed03fa3ec38 xfs: remove the xfs_btree_get_buf[ls] functions
706b8c5bc70391be510a5454f307db90b622b279 xfs: remove unnecessary null pointer checks from _read_agf callers
faf8ee8476c19b30fd16079ad616b2b0f56eaff4 xfs: xfs_dabuf_map should return ENOMEM when map allocation fails
8cc0072469723459dc6bd7beff81b2b3149f4cf4 xfs: Add the missed xfs_perag_put() for xfs_ifree_cluster()
496b9bcd62b0b3a160be61e3265a086f97adcbd3 xfs: fix use-after-free when aborting corrupt attr inactivation
f74681ba2006434be195402e0b15fc5763cddd7e xfs: preserve rmapbt swapext block reservation from freed blocks
75df529bec9110dad43ab30e2d9490242529e8b8 arm64: paravirt: Initialize steal time when cpu is online
ee1dfad5325ff1cfb2239e564cd411b3bfe8667a dm: fix bio splitting and its bio completion order for regular IO
22ada802ede89829dd010a317d9b812b7df7111a block: use lcm_not_zero() when stacking chunk_sectors
094ee64d7de8ab72b495ff9c03d86a60272da56d dm: push md->immutable_target optimization down to __process_bio()
3720281db9ad4905c3afc1bf389314d64e145093 dm: optimize max_io_len() by inlining max_io_len_target_boundary()
0c2915b8c6db108b1dfb240391cc5a175f97f15b dm: fix missing imposition of queue_limits from dm_wq_work() thread
bdc1ddad3e5f385698df150a0cfaaac62b491e7e compat_ioctl: block: move blkdev_compat_ioctl() into ioctl.c
5fb889f587fa2ae486e067d8a00df955ae6492b3 compat_ioctl: block: simplify compat_blkpg_ioctl()
9b81648cb5e3ae7296825f0c8d2f98e50631ee84 compat_ioctl: simplify up block/ioctl.c
9243c6f3e012a92dd900d97ef45efaf8a8edc448 block: Document genhd capability flags
5cbd28e3cef14b43b2a8271d36b75fc61c13bb8a block: move disk_name and related helpers out of partition-generic.c
3ad5cee5cd000dc05e6c2410b06fc1d818e7b1e9 block: move sysfs methods shared by disks and partitions to genhd.c
f17c21c1ecb80e957bafa07d6454836854be7cf2 block: remove alloc_part_info and free_part_info
74cc979c3c7f8328b24651daf15280f07533e735 block: cleanup how md_autodetect_dev is called
3f1b95ef81b7dd5e5481347d7b7a7b427b29307a block: declare all partition detection routines in check.h
f6d17358dc7eb2259115c0017a1ff9958a59eb2b block: remove block/partitions/karma.h
3466f63a7cfe55217534e71af866037be2e1909e block: remove block/partitions/osf.h
95f77ef35a990e2947cee100f72c0e3ddd1ccd75 block: remove block/partitions/sgi.h
cbb5cb3b29f9eb158bd2db39cdc07db6d8087461 block: remove block/partitions/sun.h
1442f76d4317b420580e11238d20789708c742a4 block: move struct partition out of genhd.h
0226e9ead44b2eb8f2471d24e0b0c5ff60bc322c block: move the *_PARTITION enum out of genhd.h
cb0ab52652123c47cb72e665ce9fdd3029dcb175 partitions/msdos: remove LINUX_SWAP_PARTITION
387048bf67eeff8bdf7c2a41b03b48230a88b3d3 block: merge partition-generic.c and check.c
ea18e0f0a63af9064db3d4065d90fa743ae0991b block/diskstats: accumulate all per-cpu counters in one pass
8cd5b8fc00716fb71f6b32d594b38a8f286d6c20 block/diskstats: replace time_in_queue with sum of request times
581e26004a09c50e5017caadc850ea17e374a5ee block: move block layer internals out of include/linux/genhd.h
348e114bbd4dce430eae70f01a04c8fc259b4cf1 block: move the ->devnode callback to struct block_device_operations
3d745ea5b095a3985129e162900b7e6c22518a9d block: simplify queue allocation
654a3667df364f778b9b5bcdfb32e545aceb6a51 block: return NULL in blk_alloc_queue() on error
9dd44c7e998e66f749348d07a700034f513ea9ff null_blk: Fix zoned command handling
d205bde78fa53e1ce256b1f7f65ede9696d73ee5 null_blk: Cleanup zoned device initialization
fa9156ae597c244df4e12891dc8329f649970d9a block: refactor blkpg_ioctl
cddae808aeb77e5c29d22a8e0dfbdaed413f9e04 block: pass a hd_struct to delete_partition
8da2892e27833c5ee78788a66941e0e96eedad22 block: cleanup hd_struct freeing
4377b48da6da44360cc76cd3e0562dbb47dd4904 block: remove hd_struct_kill
d46430bf5a2298f55e20f59a90ebe3545d273b2f block: remove the disk argument from blk_drop_partitions
e669c1da03a9dde0e7d43852a5b6ade8312e8701 block: don't call invalidate_partition from blk_drop_partitions
d5f3178ec9ab8a3a71763310d260e1d2a047baf1 block: simplify block device syncing in bdev_del_partition
9bc5c397d8384b50c8202f4400bf2f87fe8291d9 block: fold bdev_unhash_inode into invalidate_partition
89de1504d53b59b12bfff227328ee3e63dd3a112 block: provide a blk_rq_map_sg variant that returns the last element
8cf7961dab42c9177a556b719c15f5b9449c24d1 block: bypass ->make_request_fn for blk-mq drivers
0376e9efe18388bd486a65edbc16d34b84bddc8f block: replace BIO_QUEUE_ENTERED with BIO_CGROUP_ACCT
accea322f5439df22b19465bbe67b836f36165e8 block: add a bio_queue_enter helper
aef33c2ff8aa5e24f3f7d93806aa84ca1c2b6832 bdi: simplify bdi_alloc
27eb3af9a37a85ca35f82830a8fc29753700058a block: don't hold part0's refcount in IO path
e4581105771b3523ced88f781eb2672195d217aa block: rename __bio_add_pc_page to bio_add_hw_page
0512a75b98f847c2e9a4b664013424e603e202f7 block: Introduce REQ_OP_ZONE_APPEND
e732671aa5f67232cf760666a15242dead003362 block: Modify revalidate zones
5795eb443060148796beeba106e4366d7f1458a6 scsi: sd_zbc: emulate ZONE_APPEND commands
e0489ed5daeb48cf182c4c98da4a873f947f2afa null_blk: Support REQ_OP_ZONE_APPEND
29b2a3aa296711cfdadafbf627c2d9a388fc84ee block: export bio_release_pages and bio_iov_iter_get_pages
71ac860af824ce9ebbbe8de20044e777c0fc33b9 block: move blk_io_schedule() out of header file
870c153cf0e6df1b8b5226af41b19945e8e0d143 blktrace: Report pid with note messages
ac7c5675fa45a372fab27d78a72d2e10e4734959 blk-mq: allow blk_mq_make_request to consume the q_usage_counter reference
b2f609e191edc9c7a9dec603318461eeb23f8a6b block: move the blk-mq calls out of part_in_flight{,_rw}
76268f3ac0a69e76270af5f67ab239ccd796ae56 block: don't call part_{inc,dec}_in_flight for blk-mq devices
10ec5e86f9b840b7070b9146257a199dd0227d7e block: merge part_{inc,dev}_in_flight into their only callers
c8210a57655a64c0a9b53c58c2ad5d8426c15097 block: Fix type of first compat_put_{,u}long() argument
9398554fb3979852512ff4f1405e759889b45c16 block: remove the error_sector argument to blkdev_issue_flush
956d510ee78caebc83c0eaeb892db5b239a36a06 block: add disk/bio-based accounting helpers
b9c54f5660e7eff10dd2ddd1eae554573105b15d block: account merge of two requests
b5af37ab3a2b143e278340d2c6fa5790d53817e7 block: add a blk_account_io_merge_bio helper
8ab1d40a646e753adb6814642432a093d93dbf47 block: remove rcu_read_lock() from part_stat_lock()
b2d76adbc0828e0f108567973bcc500ed1abc139 block: use __this_cpu_add() instead of access by smp_processor_id()
524f9ffd6a4d3622aa48ca286ff85a30ed1cdbcf block: reduce part_stat_lock() scope
dc35ada4251f183137ee3a524543c9329d7a4fa2 block: fix a warning when blkdev.h is included for !CONFIG_BLOCK builds
15b81ce5abdc4b502aa31dff2d415b79d2349d2f block: nr_sects_write(): Disable preemption on seqcount write
bfe373f608cf81b7626dfeb904001b0e867c5110 blk-mq-debugfs: update blk_queue_flag_name[] accordingly for new flags
c3077b5d97a39223a2d4b95a21ccff660836170f blk-mq: merge blk-softirq.c into blk-mq.c
115243f5534c7b3980cc946e00f79740fdc0e068 blk-mq: factor out a helper to reise the block softirq
dea6f3993812c82b4dd5f61acd41c55a311a445f blk-mq: remove raise_blk_irq
d391a7a399e46315a8adc65eb8fb5d9123b91700 blk-mq: merge the softirq vs non-softirq IPI logic
15f73f5b3e5958f2d169fe13c420eeeeae07bbf2 blk-mq: move failure injection out of blk_mq_complete_request
963395269c758641e1cb7208f3bdce6824ea608d blk-mq: factor out a blk_mq_complete_need_ipi helper
40d09b53bfc557af7481b9d80f060a7ac9c7d314 blk-mq: add a new blk_mq_complete_request_remote API
85e0cbbb8a79537dbc465e9deb449a08b2b092a6 block: create the request_queue debugfs_dir on registration
db18a53e5ba840993a3fc908dec648402ed740bd blk-cgroup: remove blkcg_bio_issue_check
0b8cc25d942b50abb0c7ba597bc1621b8929ab75 blk-cgroup: clean up indentation
cafe01ef8fcb248583038e1be071383530fe355a block: release disk reference in hd_struct_free_work
08fc1ab6d748ab1a690fd483f41e2938984ce353 block: fix locking in bdev_del_partition
88ce2a530cc9865a894454b2e40eba5957a60e1a block: restore a specific error code in bdev_del_partition
6c5dee18756b4721ac8518c69b22ee8ac0c9c442 scsi: sd: sd_zbc: Fix ZBC disk initialization
19e3a9c90c53479fecaa02307bf2db5ab8b3ffe3 net: bridge: convert multicast to generic rhashtable
4329596cb10d23c9e22c78e676a3667ef28ed62f net: bridge: multicast: use non-bh rcu flavor
087615bf3acdafd0ba7c7c9ed5286e7b7c80fe1b dm mpath: pass IO start time to path selector
9679b5a7ec400f18f1812339b59c94750db48a76 dm: simplify __process_abnormal_io()
7465d7ac50edb3158c5eb957c5ecd3a5310e1c68 dm: eliminate need for start_io_acct() forward declaration
33bd6f0693857492ab19869d79801437ac1e42ba dm table: make 'struct dm_table' definition accessible to all of DM core
e0910c8e4f87bb9f767e61a778b0d9271c4dc512 dm raid: fix discard limits for raid1 and raid10
61931c0ee9cf5da575996b977a2358b598ef84bb dm: export dm_copy_name_and_uuid
021a24460dc28e7412aecfae89f60e1847e685c0 block: add QUEUE_FLAG_NOWAIT
202093848cac2da7d92ae666b51b7109bbab633c nvmet-rdma: add an error flow for post_recv failures
b0012dd397155438c61b0c1b52ceec1f1366b3cc nvmet-rdma: use SRQ per completion vector
3ecb5faa07c7fd33a3ce1a8340841aa368df7d43 nvmet: centralize port enable access for configfs
7890b9701b792a4d75b4adef4abe325383ccfca4 nvme-multipath: stop using ->queuedata
92decf118f1da4c866515f80387f9cf4d48611d6 nvme: define constants for identification values
a16816b9e462e8ee86a908606bde54b53cfeca80 lightnvm: disable interleaved metadata
ffc89b1d3ca45669e8d2226f5fd4dde756f7ad17 nvme: introduce namespace features flag
b29f84857a0f1cb4355363d0307d2b83897e8955 nvme: introduce NVME_NS_METADATA_SUPPORTED flag
33cfdc2aa6969829f42640f758357e4b015e9f7d nvme: enforce extended LBA format for fabrics metadata
95093350394a394e7c4e778176194b14b76ec5d8 nvme: introduce max_integrity_segments ctrl attribute
6e43496745e75ac49d644df984d2f4ee5b5b6b4e net: add sock_set_priority
12abc5ee7873a085cc280240822b8ac53c86fecd tcp: add tcp_sock_set_nodelay
557eadfcc5ee8f8fa98a795e05ed21db58a65db5 tcp: add tcp_sock_set_syncnt
108a58585b196e31822c597891f2c83cea7aeb4a nvme: do not call del_gendisk() on a disk that was never added
ce3d9544cecacd40389c399d2b7ca31acc533b70 net: add sock_set_keepalive
d4ec47f120537c75184c3dc939d3b2e1bcc8b260 nvme-pci: initialize tagset numa value to the value of the ctrl
61f3b89630973037f67d8e25e5d26e80a51a7b37 nvme-pci: use unsigned for io queue depth
71010c30945425203da8d069a10fa45a05a00f96 nvme: implement multiple I/O Command Set support
3913f4f3a65ca9ed6ba7e4678fff10a6e7b42dbd nvme: remove ns->disk checks
c7ff819aefea04944dfcec5f0731b97277df6a9c RDMA/core: Introduce shared CQ pool API
7774e77ebedcfeeac8cce61533b590269650dcf7 nvmet: use xarray for ctrl ns storing
ca0f1a8055be2a04073af435dc68419334481638 nvmet-rdma: use new shared CQ mechanism
df21b6b1934e89c2cc2bb1332146ed6c2df1321c nvme: create helper function to obtain command effects
17365ae6975c7f7494a2d1cd0bf18b5ed238e072 nvme: introduce nvme_execute_passthru_rq to call nvme_passthru_[start|end]()
24493b8b854a67234c5c142a7ea075e2174a3084 nvme: export nvme_find_get_ns() and nvme_put_ns()
ba76af676cd0514614b5a99b8adad9d3956f5d7d nvmet: Add passthru enable/disable helpers
cae5b01a2afc2058bee94b4b8f873d3a4a9ec41e nvmet: introduce the passthru configfs interface
f783f444ceaa7eab043a7a5ae0e34c68743c0358 nvme: introduce nvme_ctrl_get_by_path()
7442ddcedc344b6fa073692f165dffdd1889e780 nvme-pci: Use u32 for nvme_dev.q_depth and nvme_queue.q_depth
c41ad98bebb8f4f0335b3c50dbb7583a6149dce4 nvme: skip noiob for zoned devices
e83d776f9f98b4af18d67f05f9d1f3042dbe62c7 nvme: only use power of two io boundaries
4c2805aab519a39e8adf281afcef40174d48fd3f lpfc: nvmet: Add support for NVME LS request hosthandle
54840bed372c7779f23ece8514853fa83887b02e lpfc: nvmet: Add Send LS Request and Abort LS Request support
9aa09e98b288649544c74d1a7b88223f36e4bffd lpfc: nvme: Add Receive LS Request and Send LS Response support to nvme
35c3363363ac7c8877b4984cdd8a2af377a4e92e scsi: core: Clean up SG_NONE
51a858817dcdbbdee22cb54b0b2b26eb145ca5b6 scsi: sr: get rid of sr global mutex
466552b9f3730f06fee75776a208f5fa9c06c6a3 scsi: core: add scsi_host_complete_all_commands() helper
dcece99e86b1191d2789fb5b5caa4c5b7fc2bfef scsi: core: add scsi_host_busy_iter()
72655c0ebd1d941d80f47bf614b02d563a1e61ae scsi: sr: Fix sr_block_release()
ea941016abf7e6f81b130f8eb792e9ad0971237a scsi: core: doc: Change function comments to kernel-doc style
0c4bc91d664953780990b0d1d8d1a65f9256474d scsi: scsi_debug: Randomize command completion time
87c715dcde633f4cc4690a24a240e838181e6a9d scsi: scsi_debug: Add per_host_store option
c3e2fe9222d428f115baeba2f6b3637b3aa444cd scsi: scsi_debug: Implement VERIFY(10), add VERIFY(16)
67da413f26afc7522250bf5c9231f6711a9e7dfd scsi: scsi_debug: Weaken rwlock around ramdisk access
ed9f3e2513f91553cc7197e8739a38a9bdea5303 scsi: scsi_debug: Implement PRE-FETCH commands
5d80707673581f95506cb2457354705ea4b51c46 scsi: scsi_debug: Re-arrange parameters alphabetically
f0d1cf9378bd4030725efa4c154cd39383dd0c12 scsi: scsi_debug: Add ZBC zone commands
9267e0eb41fedc2d4b930a90aca17051fa1ef21a scsi: scsi_debug: Add ZBC module parameter
380603a5bb83d3c55eee20511ba3091e206b7d99 scsi: scsi_debug: Add zone_max_open module parameter
aa8fecf96b704adfd2ee2b6c76248c1f1cb237ef scsi: scsi_debug: Add zone_nr_conv module parameter
98e0a689868c26eb82650ee759073f2295e74c97 scsi: scsi_debug: Add zone_size_mb module parameter
64e14ece07004f0bf434fe7aad4a6d6411b1d9b6 scsi: scsi_debug: Implement ZBC host-aware emulation
108e36f0d8bf91839613d8053a6d1354965801b0 scsi: scsi_debug: Disallow zone sizes that are not powers of 2
47742bde281b2920aae8bb82ed2d61d890aa4f56 scsi: scsi_debug: Fix an error handling bug in sdeb_zbc_model_str()
b6ff8ca733500a7394d926c74ac20b428b225db7 scsi: scsi_debug: Parser tables and code interaction
6555781b3fdec5e94e6914511496144241df7dee scsi: sr: Fix sr_probe() missing deallocate of device minor
74595c044cb56cb073370c09fefc23eb8ed6d835 scsi: scsi_debug: Fix in_use bitmap corruption
c10fa55f5e7ad3638237dd66fcb28a7225acdff8 scsi: scsi_debug: Support hostwide tags
3a90a63d02b8b7e8348d7549f55d24e1bb3a293f scsi: scsi_debug: every_nth triggered error injection
30f67481a18b85abae6099ef3196294072994870 scsi: scsi_debug: Update documentation url and bump version
fc13638ae92ee9eb861732d642d922d577b82a9e scsi: scsi_debug: Implement tur_ms_to_ready parameter
75d46c6d15efabc5176a5e2694ee236f02ee72ef scsi: scsi_debug: Remove superfluous close zone in resp_open_zone()
a73f863af4ce9730795eab7097fb2102e6854365 sched/features: Fix !CONFIG_JUMP_LABEL case
3cb73bc3fa2a3cb80b88aa63b48409939e0d996b hyperv_fb: Update screen_info after removing old framebuffer
71ad8d55f8e5ea101069b552422f392655e2ffb6 devlink: Replace devlink_port_attrs_set parameters with a struct
a21cf0a8330bba60e44ca6c99e1591042f336ff5 devlink: Add a new devlink port lanes attribute and pass to netlink
a0f49b54865273c895be3826d6d59cbc5ad725c2 devlink: Add a new devlink port split ability attribute and pass to netlink
f3348a82e72795ce218264fd00ef5cf5137836a9 selftests: net: Add port split test
1315971fea66d2c1b09cab115a487898ba628cac net/mlx5e: Fix missing switch_id for representors
1f0ce497433f8944045ee1baae218e31a0d295ee powerpc: Inline doorbell sending functions
107c55005fbd5243ee31fb13b6f166cde9e3ade1 powerpc/pseries: Add KVM guest doorbell restrictions
2d02bf835e5731de632c8a13567905fa7c0da01c powerpc/papr_scm: Fetch nvdimm performance stats from PHYP
0460534b532e5518c657c7d6492b9337d975eaa3 powerpc/papr_scm: Limit the readability of 'perf_stats' sysfs attribute
ca78ef2f08ccfa29b711d644964cdf9d7ace15e5 powerpc/papr_scm: Fix warning triggered by perf_stats_show()
12745b071e2b6b43e623e6cce521a1cb3c4c28dc i2c: i801: Add support for Intel Emmitsburg PCH
f46efbcad97bfb2caded0397eccce7c71402868c i2c: i801: Add support for Intel Tiger Lake PCH-H
4b61d3e8d3daebbde7ec02d593f84248fdf8bec2 net: qos offload add flow status with dropped count
f468f21b7af0fa472ff8ff70f10b9b4995ef7eb3 net: Take common prefetch code structure into a function
d3f7b1bb204099f2f7306318896223e8599bb6a2 mm/gup: fix gup_fast with dynamic page table folding
c2233a266178f8937cc26a84cd7672334b5424b7 ASoC: soc: use asoc_rtd_to_cpu() / asoc_rtd_to_codec() macro for DAI pointer
3a5ccf25ee184510980a2c48606f7a004a2c844b ASoC: codec: wm_adsp: use snd_compress_ops
3e645a4add53eec22f3818c9da01c19191525096 ASoC: soc-compress: avoid false-positive Wuninitialized warning
b3dea624b52e8b18cd49f804ce70fe50374aa5db ASoC: use snd_soc_xxx_active()
5e518eddd11e8f71aaffc954dc7ee9572fc59808 ASoC: codecs: use snd_soc_xxx_active()
a5e6c1090001b8a14e797364dde7c84236465fc7 ASoC: soc-link: move soc_rtd_xxx()
7cf3c5b4a04f4b27d964089630290beccc115f9f ASoC: soc-link: remove unneeded parameter from snd_soc_link_xxx()
0cbbf8a0399518e5b865f9a1320d704c1d621703 ASoC: soc-link: add snd_soc_link_be_hw_params_fixup()
9ab711cb84d4b77fb3929fabc5e3756d5010af14 ASoC: soc-link: add snd_soc_link_compr_startup()
0e532c99b468d6e4fc4e1d29b45ffe2749db6d07 ASoC: soc-link: add snd_soc_link_compr_shutdown()
eab810f37ff5fd76172ac903e5e732d6b72fc834 ASoC: soc-link: add snd_soc_link_compr_set_params()
28ff437a44fa618a14bc7402c7472b278af4c9eb ASoC: reduce verbosity of error messages for sof-dai and sof-link
209c6cdfd28360f030f88ae9adb69f633e6bcd2d ASoC: soc-card: move snd_soc_card_get_kcontrol() to soc-card
3359e9b6fa3eafeeb79d5f0ec8a04f3fe6986db1 ASoC: soc-card: move snd_soc_card_jack_new() to soc-card
63efed582cc346c098adf6f5c852e2d5b0753783 ASoC: soc-card: move snd_soc_card_set/get_drvdata() to soc-card
65a75718d68ea338b918328d471eff6f472192fc ASoC: soc-card: move snd_soc_card_get_codec_dai() to soc-card
bf5bb8db5bf07b0a82cdcdc44e4494e55aaa4ed7 ASoC: soc-card: move snd_soc_card_subclass to soc-card
130dc08c827db76f4a32fe7867075029fe9071d1 ASoC: soc-card: add snd_soc_card_suspend_pre()
d17b60b2c46750ebfb6ea39a2b02d988b97484eb ASoC: soc-card: add snd_soc_card_suspend_post()
934c752c38b751663fe3dc18413db13e73b8b2b2 ASoC: soc-card: add snd_soc_card_resume_pre()
739443d1f162ce80eb717c695e58302958b51239 ASoC: soc-card: add snd_soc_card_resume_post()
73de4b026850da432b8bcfb73fc4af94674a8102 ASoC: soc-card: add snd_soc_card_probe()
5c0eac036dfd3e20dd09ab86343c3b2fb2a1ac86 ASoC: soc-card: add snd_soc_card_late_probe()
b0275d956fab05a5088e20244c8d1eb433b7b90f ASoC: soc-card: add snd_soc_card_remove()
39caefda0a30cac8284264e5031a0dd478510ced ASoC: soc-card: add snd_soc_card_set_bias_level()
d41278ea0579a8c1e216c5321e2d207705ab3b54 ASoC: soc-card: add snd_soc_card_set_bias_level_post()
cbc7a6b5a87a129084c643455d16699ea490fd2f ASoC: soc-card: add snd_soc_card_add_dai_link()
fcbbcc325bc2dd90212de19b520c190b6fbeddae ASoC: soc-card: add snd_soc_card_remove_dai_link()
88d8822d30cc6f668d44a1a7466bed5a1f85f607 ALSA: usb-audio: Manage auto-pm of all bundled interfaces
28e60dbb83f76b18acade913dfdb029cd908c9b0 ALSA: memalloc: Initialize all fields of snd_dma_buffer properly
1d5cd5254f67bc65622f4cac04c25d6e082f21b0 ASoC: soc-pcm/compress: reduce verbosity on mapping ok messages
460b42d162e3cf634586999e6a84e74ca52e626d ASoC: soc-component: merge soc-io.c into soc-component.c
836367be289d5b130769fd7c46172557e614a148 ASoC: soc-component: merge soc_pcm_trigger_start/stop()
cf6e26c71bfdff823fd40945b07666d75f1e1412 ASoC: soc-component: merge snd_soc_component_read() and snd_soc_component_read32()
e8712315c44d2e7dfc4d29254941831ed2ddcaef ASoC: soc-component: use io_mutex correctly
5b554b0a29ce9610e3c237c77a1f76db87454b72 ASoC: remove snd_soc_component_read32()
21a00fb33790f828a34b9ce50ab9f9130bc1ffb4 ASoC: soc-link: introduce exit() callback
6748d05590594837e42dfa975879fb275099f0b2 ASoC: ti: Add custom machine driver for j721e EVM (CPB and IVI)
59b44649a8f2380dfbf282db9922ef863c8812a6 ASoC: ti: j721e-evm: Fix missing unlock on error in j721e_audio_hw_params()
fadecf947a72f54843afa12c6732c52914d5024d ASoC: amd: raven: acp3x-i2s: fix 'set but not used' warning
343403e2dad897a3c6c974a43d760b4fb96b996b ASoC: amd: raven: acp3x-i2s: remove unused-but-set variable
d789710fb248df0c2279a785c7b9beb313629c0a ASoC: hdmi-codec: merge .digital_mute() into .mute_stream()
a0234d0e6014a17c61311fc39b9adc194114c5f6 ASoC: soc-core: snd_soc_dai_digital_mute() for both CPU/Codec
beaa7bd10dce348b033aff3f466ab1a78b33fed3 ASoC: SOF: imx: Use ARRAY_SIZE instead of hardcoded value
5856d8bd308f9467cefa65d04e184a56a3977559 ASoC: Replace HTTP links with HTTPS ones
0ceef681e34a61afcd77af0837b2132925c5bad4 ASoC: soc-xxx: add asoc_substream_to_rtd()
02cde14ab59de4f578c8c949483514c22a80273d ASoC: ti: use asoc_substream_to_rtd()
83249952ffab43b82487c1c497f1b49324c602d4 ASoC: ti: fix SND_SOC_J721E_EVM warnings & errors
efc913c8fb88728626759735e1b09370a6813180 ASoC: Make soc_component_read() returning an error code again
def3f0a5c7007c899a9a4d4034130e9d175d952d ALSA: hda/ca0132 - Add quirk output selection structures.
91b94a933f28b0b819224bc638866b0844317776 ALSA: hda/ca0132 - Add output selection for SoundBlaster AE-7.
76ab546cd8f0c64d4603b2faad4558c5b670561e ASoC: SOF: IPC: make sof_ipc_window monosized
e9157a449aa3f72fdbded9ce780c666bf0951cf3 ASoC: SOF: loader: fix memory leak in get_ext_windows
8b98491a6b8c41a7e4334fb94a58c268d831458e ASoC: SOF: Intel: hda: Add sof_tgl_ops for TGL platforms
34ce41003bcbff8b20a30eb0938478b156e57a2d ASoC: ti: Kconfig: Allow the j721e machine driver to be used on K3 platform
18c140f4a2de8fa674d52fe522a47133bc124f81 ASoC: ti: j721e-evm: Add support for j7200-cpb audio
64b969177c744a76142f45823dd9d94c38f79cd0 ASoC: SOF: rename cores_mask to host_managed_cores_mask
fde106552845b7c369c2385b27062b1c2130a4dd ASoC: SOF: Intel: remove the HDA_DSP_CORE_MASK() macro
30ee3738f849b3f4af623c20adec73cdc4573a2e ASoC: SOF: Intel: Add support for tgl-h
c3212829f812a4ac0c6078978c109c6f1ff882c2 ASoC: soc-pcm: move CONFIG_DEBUG_FS functions to top side
154dae87e73faa6d56265f22cae16dcdcea3dbb0 ASoC: soc-pcm: add dpcm_create/remove_debugfs_state()
1965c4364bdd025e9e3142592edd76addcc4bab4 ALSA: usb-audio: Disable autosuspend for Lenovo ThinkStation P620
afa58b49ac52dff053e1bb363a425f09dbebc0a3 thermal/x86_pkg_temp: Make pkg_temp_lock a raw_spinlock_t
30ad3e031d2feae075cd5fd2c443baa2d86c0195 x86/platform/UV: Remove unnecessary #ifdef CONFIG_EFI
521b82fee98c1e334ba3a2459ba3739d459e9e4e x86/apic: Cleanup the include maze
90a2186b7df183c2fd35f724d0d16a0c10fac9b2 efi/x86: Clean up the eboot code
75c5a713ab4b774c7d990ec748dddba714034436 efi/x86: Merge the setup_efi_pci32() and setup_efi_pci64() routines
c4db9c1e8c70bc60e392da8a485bcfb035d559c2 efi: Deduplicate efi_open_volume()
8d93b41c09d1b74f376e3b9779eb3badeb550301 mm: Convert add_to_swap_cache to XArray
8e1599fcac2efda8b7d433ef69d2492f0b351e3f x86/traps: Complete prototype declarations
7e0dabd3010d6041ee0a952c1146b2150a11f1be x86/mm/pageattr: Introduce helper function to unmap EFI boot services
d381c54760dcfad23743da40516e7e003d73952a mm: only report isolation failures when offlining memory
fa004ab7365ffa1e17e6b267d64798afccb94946 mm, hotplug: move init_currently_empty_zone() under zone_span_lock protection
e3df4c6e4836ce93cd5cf92d9cbdeaf4439a0241 mm, memory_hotplug: __offline_pages fix wrong locking
2794129e902d8eb69413d884dc6404b8716ed9ed mm/memory-hotplug: Allow memory resources to be children
f5777bc2d9cf0712554228b1a7927b6f13f5c1f0 mm/page_isolation.c: fix a wrong flag in set_migratetype_isolate()
8f34c5b5afce91d171bb0802631197484cb69b8b x86/exceptions: Make IST index zero based
881a463cf21dbf83aab2cf6c9a359f34f88c2491 x86/cpu_entry_area: Cleanup setup functions
019b17b3ffe48100e52f609ca1c6ed6e5a40cba1 x86/exceptions: Add structs for exception stacks
a4af767ae59cc579569bbfe49513a0037d5989ee x86/cpu_entry_area: Prepare for IST guard pages
7623f37e411156e6e09b95cf5c76e509c5fda640 x86/cpu_entry_area: Provide exception stack accessor
d876b67343a648f3613506c7dbfed088fa0c875b x86/traps: Use cpu_entry_area instead of orig_ist
bf5882abab773afd1277415e2f826b21de28f30d x86/irq/64: Use cpu entry area instead of orig_ist
afcd21dad88b68d646e91ed36948117d58b4c197 x86/dumpstack/64: Use cpu_entry_area instead of orig_ist
f6ef73224a0f0400c3979c8bc68b383f9d2eb9d8 x86/cpu: Prepare TSS.IST setup for guard pages
3207426925d2b4da390be8068df1d1c2b36e5918 x86/exceptions: Disconnect IST index and stack order
1bdb67e5aa2d5d43c48cb7d93393fcba276c9e71 x86/exceptions: Enable IST guard pages
2a594d4ccf3f10f80b77d71bd3dad10813ac0137 x86/exceptions: Split debug IST stack
c450c8f532b63475b30e29bc600c25ab0a4ab282 x86/dumpstack/64: Speedup in_exception_stack()
117ed45485413b1977bfc638c32bf5b01d53c62b x86/irq/64: Remove stack overflow debug code
1a9f219157b22d0ffb340a9c5f431afd02cd2cf3 mm/hotplug: treat CMA pages as unmovable
2fd37912cfb019228bf246215938e6f7619516a2 x86/entry/64: Simplify idtentry a little
e55f31a599478fb06a5a5d95e019e963322535cb efi: x86: move efi_is_table_address() into arch/x86
ec7e1605d79d1d469b25e396f2056e42386f512f efi/x86: move UV_SYSTAB handling into arch/x86
d8c6546b1aea843fbeb4d54a1202f1adda6504be mm: introduce compound_nr()
33fce0113da2f8a5c1bbce0c46a8b131500f1677 mm/memory_hotplug.c: prevent memory leak when reusing pgdat
e361362b08cab1098b64b0e5fd8c879f086b3f46 x86/dumpstack/64: Don't evaluate exception stacks before setup
6950e31b35fdf4588cbbdec1813091bb02cf8871 x86/efi: Push EFI_MEMMAP check into leaf routines
4a1745c5bf92232f115e28296475dc42254b1c7d powerpc/pseries/cmm: Drop page array
287b89773d8172df049f0f4c27946b2ae4ac4b41 powerpc/pseries/cmm: Use adjust_managed_page_count() insted of totalram_pages_*
7659f5d6448095ef436891c33bdd7c8500620a00 powerpc/pseries/cmm: Rip out memory isolate notifier
1ef2f06b71792c2efaa4fb4aef8f1fc2a115ee1f powerpc/pseries/cmm: Convert loaned_pages to an atomic_long_t
fe030c9b85e6783bc52fe86449c0a4b8aa16c753 powerpc/pseries/cmm: Implement balloon compaction
e8decafefb67794ba30fddf7d9e90a247b5aa172 powerpc/pseries/cmm: Switch to balloon_page_alloc()
b1713975c31ae20ecc40fd00191ee3fa51445d4a powerpc/pseries/cmm: Simulation mode
5e1246ff2d3707992e3bf3eaa45551f7fab97983 x86/entry/32: Clean up return from interrupt preemption path
a1a338e5b6fe9e0a39c57c232dc96c198bb53e47 x86/entry/32: Unwind the ESPFIX stack earlier on exception entry
756d25be457fc5497da0ceee0f3d0c9eb4d8535d mm/page_isolation.c: convert SKIP_HWPOISON to MEMORY_OFFLINE
2732ea0d5c0a67ec86bfbde2bd68b6152e23ec4e efi/libstub: Use a helper to iterate over a EFI handle array
1786e83011644e18732ed006413339d5323766e9 efi/libstub: Extend native protocol definitions with mixed_mode aliases
f958efe97596837f9504fc38d75ef8e284bc0ebd efi/libstub: Distinguish between native/mixed not 32/64 bit
ea5e1919b44f09fce72d919fbb87f9611fc700a6 efi/x86: Simplify mixed mode call wrapper
bd1d7093a8086df37d260bd1f1d896c0922d34ef efi/libstub/x86: Fix unused-variable warning
1f299fad1e312947c974c6a1d8a3a484f27a6111 efi/x86: Limit EFI old memory map to SGI UV machines
3cc028619e284188cdde652631e1c3c5a83692b9 efi/x86: avoid KASAN false positives when accessing the 1: 1 mapping
3f9903b9ca5e981b5862d7b10086d0e8caa20298 mm: remove the memory isolate notifier
fe4c86c916d9151113372369f322e7436167e6f3 mm: remove "count" parameter from has_unmovable_pages()
92917998849eea951707c8fea2dc3007bb2ad2cd mm/memory_hotplug: drop valid_start/valid_end from test_pages_in_a_zone()
102f45fdbe420f7d31182a69f4b11e8a6ae998da arm64: mm: convert mm/dump.c to use walk_page_range()
bbd6ec605c0fc286c3f8ce60b4ed44635361d58b arm64/mm: Enable memory hot remove
f5637d3b42ab0465ef71d5fb8461bce97fba95e8 mm/memory_hotplug: rename mhp_restrictions to mhp_params
c164fbb40c43f8041f4d05ec9996d8ee343c92b1 x86/mm: thread pgprot_t through init_memory_mapping()
4e00c5affdd4b04e6392001716333971932f3d0c powerpc/mm: thread pgprot_t through create_section_mapping()
bfeb022f8fe4c5afdcfd7a3d868fac9765f9bcad mm/memory_hotplug: add pgprot_t to mhp_params
1eb64c07aab86eca7cdaa05a59d8da5a3ba758f8 sh: fix build error in mm/init.c
e352f576d345e5bf1fb62c8559851448a6c1d9cd powerpc/pseries/cmm: fix managed page counts when migrating pages between zones
7cc2a9596d77e598a476ec7819046a453378d4a6 mm: remove __paginginit
0188dc98ad5c7c361d46175623471d4be0fb8610 mm/page_alloc: inline function to handle CONFIG_DEFERRED_STRUCT_PAGE_INIT
03e85f9d5f1f8c74f127c5f7a87575d74a78d248 mm/page_alloc: Introduce free_area_init_core_hotplug
9705bea5f833f4fc21d5bef5fce7348427f76ea4 mm: convert zone->managed_pages to atomic variable
ca79b0c211af63fa3276f0e3fd7dd9ada2439839 mm: convert totalram_pages and totalhigh_pages variables to atomic
476567e8735a0d06225f3873a86dfa0efd95f3a5 mm: remove managed_page_count_lock spinlock
4a55c0474a92d5c418bcbbe122368de0910aeac2 mm/hotplug: silence a lockdep splat with printk()
3d680bdf60a5bade3e8cbd049927e7f8b1d3fe97 mm/page_isolation: fix potential warning from user
34beb21594519ce64a55a498c2fe7d567bc1ca20 geneve: add transport ports in route lookup for geneve
93c3a0ba2a0863a5c82a518d64044434f82a57f5 powerpc/test_emulate_step: Enhancement to test negative scenarios
7e67c73b939b25d4ad18a536e52282aa35d8ee56 powerpc/test_emulate_step: Add negative tests for prefixed addi
e93ad65e3611b06288efdf0cfd76c012df3feec1 powerpc/test_emulate_step: Move extern declaration to sstep.h
6348a34dcb98d8e285685a205f2a601817fa2d38 PCI: Use pci_speed_string() for all PCI/PCI-X/PCIe strings
757bfaa2c3515803dde9a6728bbf8c8a3c5f098a PCI: Add PCIE_LNKCAP2_SLS2SPEED() macro
cb923159bbb8cc8fe09c19a3435ee11fd546f3d3 smp: Remove allocation mask from on_each_cpu_cond.*()
1026798c644bfd3115fc4e32fd5e767cfc30ccf1 powerpc/security: re-name count cache flush to branch cache flush
c06ac2771070f465076e87bba262c64fb0b3aca3 powerpc/security: change link stack flush state to the flush type enum
1afe00c74ffe6d502bffa81c7d849cb4640d7ae5 powerpc/security: make display of branch cache flush more consistent
c0036549a9d9a060fa8bc24e31f85503ce08ad5e powerpc/security: split branch cache flush toggle from code patching
4d24e21cc694e7253a532fe5a9bde12b284f1317 powerpc/security: Allow for processors that flush the link stack using the special bcctr
792254a77201453d9a77479e63dc216ad90462d2 powerpc/security: Fix link stack flush instruction
645d5ce2f7d6cb4dcf6a4e087fb550e238d24283 powerpc/mm/radix: Fix PTE/PMD fragment count for early page table mappings
d6d6ebfc5dbb4008be21baa4ec2ad45606578966 powerpc/mm/radix: Remove split_kernel_mapping()
af9d00e93a4f062c5f160325d7b8f33336f6744e powerpc/mm/radix: Create separate mappings for hot-plugged memory
55548a86ebde2b3691b6a84baef1b02933408994 powerpc/mm: Limit resize_hpt_for_hotplug() call to hash guests only
ed6546bdc61b7c4bd926cebd82ba52d056fcefa1 powerpc/64s: remove register_process_table callback
99161de3a283af59f2813da6cbdccc1d2784c7de powerpc/64s/radix: tidy up TLB flushing code
fd13daea5f72605a0a7386ebedbb5ff2b2a48da4 powerpc/64s: make mmu_partition_table_set_entry TLB flush optional
7d805accbec57a151bd0dd305a1109feebdfd4a4 powerpc/64s: remove unnecessary translation cache flushes at boot
2275d7b5754a573ffb2ca9e40bd0546eeb986696 powerpc/64s/radix: introduce options to disable use of the tlbie instruction
029ab30b4c0a7ec587eece1ec07c3981fdff2bed powerpc/mm: Enable radix GTSE only if supported.
dd3d9aa5589c52efaec12ffeb84f0f5f8208fbc3 powerpc/mm/book3s64/radix: Off-load TLB invalidations to host when !GTSE
bf6b7661f41615c0815fce0a3f27acb5fc005470 powerpc/book3s64/radix: Add kernel command line option to disable radix GTSE
e7511f560f5499c664c1ba9181c76044e2af578d bonding: remove useless stats_lock_key
ae46f184bc1fb15bf2de47114c29236e61ca4bbc bonding: propagate transmit status
272c2330adc9c68284cb0066719160c24bfe605f xfrm: bail early on slave pass over skb
18cb261afd7bf50134e5ccacc5ec91ea16efadd4 bonding: support hardware encryption offload to slaves
bdfd2d1fa79acd03e18d1683419572f3682b39fd bonding/xfrm: use real_dev instead of slave_dev
18c955b730002afdb0f86be39c0d202450acbbfc bonding: Remove extraneous parentheses in bond_setup
a3b658cfb66497525278cbf852913a04dbaae992 bonding: allow xfrm offload setup post-module-load
5cd24cbe7dca62089ac6228f1dd14729d7da6ed8 bonding: deal with xfrm state in all modes and add more error-checking
f548a476268d621846bb0146af861bb56250ae37 bonding: don't need RTNL for ipsec helpers
07a297a9e619e4af578a74b3dada30025021b5df orinoco: Use fallthrough pseudo-keyword
fa5d010c5630b143b802e0477e87bba0656829cf RDMA: Group create AH arguments in struct
51aab12631dd7700385d275846ca49dc0b8c2124 RDMA/core: Get xmit slave for LAG
11a0ae4c4bff9b2a471b54dbe910fc0f60e58e62 RDMA: Allow ib_client's to fail when add() is called
e83f195aa45c1ffd73b3a950a887e41c260cf194 RDMA/cm: Pull duplicated code into cm_queue_work_unlock()
0ac8903cbbe618d947b5815d6e0f7b044ee83aa3 RDMA/core: Allow the ioctl layer to abort a fully created uobject
98a8890f73489416a1ea49a644565a244d3f729a IB/uverbs: Refactor related objects to use their own asynchronous event FD
cda9ee494248b890973f5d31cf7851c0d21755b9 IB/uverbs: Extend CQ to get its own asynchronous event FD
8094ba0ace7f6cd1e31ea8b151fba3594cadfa9a RDMA/cma: Provide ECE reject reason
4e373d5417ecbb4f438a8500f0379a2fc29c2643 RDMA/core: Remove FMR pool API
3a578152a9208bbcd196210be2f5396744cda302 RDMA/core: Remove FMR device ops
07549ee21ce5247143ffb069bf838025d86b908c RDMA/rds: Remove FMR support for memory registration
649392bf75a423287a9c4936b341677f12e8cf0b RDMA: Remove 'max_fmr'
4d12c04caa88cd3115f25acd832a7cddb698981b RDMA: Remove 'max_map_per_fmr'
1ea7c546b8b3f27bf7da673c265b09c8f79d11bc RDMA/core: Annotate CMA unlock helper routine
4cb47a8644cc9eb8ec81190a50e79e6530d0297f tunnels: PMTU discovery support for directly bridged IP packets
fc68c99577cc66e38d11b3e29304efb83fa08d53 vxlan: Support for PMTU discovery on directly bridged links
c1a800e88dbffca4ef48000cb3f9ad618dc7ad89 geneve: Support for PMTU discovery on directly bridged links
0b175b18648ebedfe255b11a7792f1d76848a8f7 NFSD: Add tracepoints to NFSD's duplicate reply cache
dd5e3fbc1f472951afd7e7643ace5d1672b31358 NFSD: Add tracepoints to the NFSD state management code
1eace0d1e9d0db393be87572f79f6a07405461e9 NFSD: Add tracepoints for monitoring NFSD callbacks
f2453978a4f2ddb1938fa80e9bf0c9d6252bd5f8 NFSD: Fix improperly-formatted Doxygen comments
8d92890bd6b8502d6aee4b37430ae6444ade7a8c mm/writeback: discard NR_UNSTABLE_NFS, use NR_WRITEBACK instead
c509f15a5801605652126831d965751e8d602471 SUNRPC: Split the xdr_buf event class
4659ed7cc8514369043053463514408ca16ad6f3 nfs: Fix memory leak of export_path
28df3d1539de5090f7916f6fff03891b67f366f4 nfsd: clients don't need to break their own delegations
44fb26c6b4c5ad63f733df7936deffeae2950855 nfsd: Fix old-style function definition
12e4d53f3f04e81f9e83d6fc10edc7314ab9f6b9 powerpc/mmu_gather: enable RCU_TABLE_FREE even for !SMP case
0ed1325967ab5f7a4549a2641c6ebe115f76e228 mm/mmu_gather: invalidate TLB correctly on batch allocation failure and flush
196d9d8bb71deaa2d1c7170c88a2f1a318363047 mm/memory: Move mmu_gather and TLB invalidation code into its own file
ed6a79352cad00e9a49d6e438be40e45107207bf asm-generic/tlb, arch: Provide CONFIG_HAVE_MMU_GATHER_PAGE_SIZE
5f307be18b32aeff7bbad540c0d3897ecedbeb56 asm-generic/tlb, arch: Provide generic tlb_flush() based on flush_tlb_range()
a30e32bd79e924f460b8b83408d88af34a402f6d asm-generic/tlb: Provide generic tlb_flush() based on flush_tlb_mm()
952a31c9e6fa963eabf3692f31a769e59f4c8303 asm-generic/tlb: Introduce CONFIG_HAVE_MMU_GATHER_NO_GATHER=y
9de7d833e3708213bf99d75c37483e0f773f5e16 s390/tlb: Convert to generic mmu_gather
1808d65b55e4489770dd4f76fb0dff5b81eb9b11 asm-generic/tlb: Remove arch_tlb*_mmu()
b3fa8ed4e48802e6ba0aa5f3283313a27dcbf46f asm-generic/tlb: Remove CONFIG_HAVE_GENERIC_MMU_GATHER
fa0aafb8acb684e68231ff0a547ed249f8dc31a5 asm-generic/tlb: Remove tlb_flush_mmu_free()
0a8caf211bcf52cbb59e100ead4908fe88d2a510 asm-generic/tlb: Remove tlb_table_flush()
491a49ff14b2475ad84c97b93c0182ae6daf8b37 asm-gemeric/tlb: remove stray function declarations
27796d03c9c4b2b937ed4cc2b10f21559ad5a8c9 asm-generic/tlb: add missing CONFIG symbol
a222f341586834073c2bbea225be38216eb5d993 mm: generalize putback scan functions
73444bc4d8f92e46a20cb6bd3342fc2ea75c6787 mm, page_alloc: do not wake kswapd with zone lock held
0308f7cf19c9741837f5b4c8cde14342bba72604 mm/vmscan.c: calculate reclaimed slab caches in all reclaim paths
1732d2b0117c26a6bf6027c919e49603156ea93d mm/vmscan.c: add checks for incorrect handling of current->reclaim_state
d2e5fb927ee7f52c1fe2a98b554881e9dffd8514 mm, memcg: do not set reclaim_state on soft limit reclaim
ace1db39768cdc58f6b157d99ae5958ad34ffff8 mm/page_alloc.c: move ifdefery out of free_area_init_core
364c1eebe453f06f0c1e837eb155a5725c9cd272 mm: thp: extract split_queue_* into a struct
0a432dcbeb32edcd211a5d8f7847d0da7642a8b4 mm: shrinker: make shrinker not depend on memcg kmem
87eaceb3faa59b9b4d940ec9554ce251325d83fe mm: thp: make deferred split shrinker memcg aware
fac0516b5534897bf4c4a88daa06a8cfa5611b23 mm: thp: don't need care deferred split queue in memcg charge move path
b5ead35e7e1d3434ce436dfcb2af32820ce54589 mm: vmscan: naming fixes: global_reclaim() and sane_reclaim()
d2af339706be318dadcbe14c8935426ff401d7b1 mm: vmscan: replace shrink_node() loop with a retry jump
afaf07a65ddbdd70871cc3b81463f2a8f3884b6f mm: vmscan: turn shrink_node_memcg() into shrink_lruvec()
0f6a5cff43d3bcd6aa54c9af267737249d02aa21 mm: vmscan: split shrink_node() into node part and memcgs part
1b05117df78e035afb5f66ef50bf8750d976ef08 mm: vmscan: harmonize writeback congestion tracking for nodes & memcgs
53138cea7f398d2cdd0fa22adeec7e16093e1ebd mm: vmscan: move file exhaustion detection to the node level
b91ac374346ba206cfd568bb0ab830af6b205cfd mm: vmscan: enforce inactive:active ratio at the reclaim root
af5679fbc669f31f7ebd0d473bca76c24c07de30 mm, oom: remove oom_lock from oom_reaper
c4f9c701f9b44299e6adbc58d1a4bb2c40383494 mm: fix a race during THP splitting
c530189905efe91b6a464db4ec1b56b4c069609f tipc: not enable tipc when ipv6 works as a module
f74877a5457d34d604dba6dbbb13c4c05bac8b93 rtnetlink: provide permanent hardware address in RTM_NEWLINK
2b4a8990b7df55875745a80a609a1ceaaf51f322 ethtool: introduce ethtool netlink interface
041b1c5d4a53e97fc9e029ae32469552ca12cb9b ethtool: helper functions for netlink interface
10b518d4e6dd5390e40f7d8de0f08753c1195a7e ethtool: netlink bitset handling
6b08d6c146f4c5ed451c45339c10feb06d619db2 ethtool: support for netlink notifications
728480f1244200fe294073afeb612c583a2080d2 ethtool: default handlers for GET requests
71921690f9745fef60a2bad425f30adf8cdc9da0 ethtool: provide string sets with STRSET_GET request
459e0b81b37043545d90629fdfb243444151e77d ethtool: provide link settings with LINKINFO_GET request
a53f3d41e4d3df46aba254ba51e7fbe45470fece ethtool: set link settings with LINKINFO_SET request
5cf2a548bcbd3da3e79adb0b64ef96dbb9988d78 ethtool: add default notification handler
73286734c1b0d009fd317c2a74e173cb22233dad ethtool: add LINKINFO_NTF notification
f625aa9be8c10f2e4dc677837e240730a25feda7 ethtool: provide link mode information with LINKMODES_GET request
bfbcfe2032e70bd8598d680d39ac177d507e39ac ethtool: set link modes related data with LINKMODES_SET request
1b1b1847c8505df2e1dd8804838526bed22a8bd4 ethtool: add LINKMODES_NTF notification
3d2b847fb99cf2b28aa046e486636e555bc6ed1c ethtool: provide link state with LINKSTATE_GET request
4a883ccfba3adefc7123ec1a6da3c7301a56ce97 ethtool: remove set but not used variable 'lsettings'
a6dd04807ce4d7b71920d996e6b84fa3733a1bfd ethtool: fix a memory leak in ethnl_default_start()
d97772dbd7727655aa894f1610e983e73678212e ethtool: fix ->reply_size() error handling
ac9c41d5a053e71777e8c2191681358499eff04b ethtool: potential NULL dereference in strset_prepare_data()
d2c4b444fd13f4699ab8c4c49062cd2c7516c241 ethtool: fix kernel-doc descriptions
6a94b8ccf6b77f005ab1b36a878e1d81df0c033e ethtool: provide message mask with DEBUG_GET request
e54d04e3afead22d8e7d6edaaac487a1205bac39 ethtool: set message mask with DEBUG_SET request
0bda7af39d2ba6ef83bd18e26bcb027f1630004e ethtool: add DEBUG_NTF notification
51ea22b04ea0c210f9ce87b8a600965dbe476bc2 ethtool: provide WoL settings with WOL_GET request
8d425b19b305a77cb1ba67b84e7c1ca547de032f ethtool: set wake-on-lan settings with WOL_SET request
67bffa79231f15ba372007972563cc8aa5e48bfa ethtool: add WOL_NTF notification
f623e5970501449b475a8dc007f0fe24743ab9d3 ethtool: Add support for low latency RS FEC
6699170376ab941c1cc5c3bcefa766efc3575c73 ethtool: fix application of verbose no_mask bitset
e34f1753eebc428c312527662eb1b529cf260240 ethtool: limit bitset size
812df69beb86b0e6decbb109ee3fa408dcb7fa5d net: liquidio: reject unsupported coalescing params
98130546da115a8aab663bc0c0971cc0bcc50542 ethtool: rename ethnl_parse_header() to ethnl_parse_header_dev_get()
0524399d4612f5af38b8383680dde4df4bc4eea2 ethtool: provide netdev features with FEATURES_GET request
88db6d1e4f6222d22c1c4b4d4d7166cfa9d2fe0e ethtool: add ethnl_parse_bitset() helper
0980bfcd6954f124e40a000b85335c197764de14 ethtool: set netdev features with FEATURES_SET request
9c6451ef4881c2f528c625766e8bb9af5e40941a ethtool: add FEATURES_NTF notification
e16c3386fc4d9611b6a2abaa639318c7ae793370 ethtool: provide private flags with PRIVFLAGS_GET request
f265d799596aff80fe19b0b3896a4abe13cdb534 ethtool: set device private flags with PRIVFLAGS_SET request
111dcba3c694b4ca7dc8b6abfd575745dd51be3d ethtool: add PRIVFLAGS_NTF notification
e4a1717b677c5cb285e9b425c569e261084a484c ethtool: provide ring sizes with RINGS_GET request
2fc2929e807211a9535a6541f24b57fa1c469728 ethtool: set device ring sizes with RINGS_SET request
bc9d1c995ecb8cccaac8ead2ed570544c2c885eb ethtool: add RINGS_NTF notification
0c84979c951a85fcb5c77ac2480fd476e283a07c ethtool: provide channel counts with CHANNELS_GET request
e19c591eafad4d723a2eed385e253eca0506cc25 ethtool: set device channel counts with CHANNELS_SET request
546379b9a01b6bdb5b267f8e7433944d5364cbf2 ethtool: add CHANNELS_NTF notification
5ec82c49a21a3e50b0011d8c85c119e16c6413a0 ethtool: fix spelling mistake "exceeeds" -> "exceeds"
2363d73a2f3e92787f336721c40918ba2eb0c74c ethtool: reject unrecognized request flags
2f599ec422ad6634fb5ad43748b9969ca9d742bd ethtool: fix reference leak in some *_SET handlers
b51fb7711a6d0e325d0fdb299cf67c4ec4b88b4b ethtool: fix reference leak in ethnl_set_privflags()
217275453b3e1fc5abf2a8cc2e231e1daa237d99 ethtool: provide coalescing parameters with COALESCE_GET request
9881418c7556954cd3f6c348bcd29a483bb5ac38 ethtool: set coalescing parameters with COALESCE_SET request
0cf3eac8c936ae75ac5d429627b05eae895bba9d ethtool: add COALESCE_NTF notification
7f59fb32b0960f1e19651379d8e130bd017054bf ethtool: provide pause parameters with PAUSE_GET request
3ab879933d3cf69f8896dc7ad543eee06fd229ba ethtool: set pause parameters with PAUSE_SET request
bf37faa3867b370a77e9359a27daebdbec604cfd ethtool: add PAUSE_NTF notification
b7eeefe72eb09a5dd9b259ab970d77d3e0fccdbd ethtool: provide EEE settings with EEE_GET request
fd77be7bd43c578614165b1ae5fdb91b8f2f1689 ethtool: set EEE settings with EEE_SET request
6c5bc8fe4e1915da8296a665bd742dbe34de02f0 ethtool: add EEE_NTF notification
f76510b458a52023e96b3a700a97ffb526de17dc ethtool: add timestamping related string sets
5b071c59ede04db200d9eccb97701261461e89bf ethtool: provide timestamping information with TSINFO_GET request
7c87e32d2e380228ada79d20ac5b7674718ef097 ethtool: count header size in reply size estimate
7be92514b99c15b89def6d72bbc84c354f89a025 ethtool: check if there is at least one channel for TX/RX in the core
178f67b1288b6952117fdc4e5ffbd4c4bd4e4a7f ethtool: linkinfo: remove an unnecessary NULL check
365f9ae4ee36037e2a9268fe7296065356840b4c ethtool: fix genlmsg_put() failure handling in ethnl_default_dumpit()
71fed0bc8665969f4681fc5772e5df42bfcc472e ethtool: ethnl_set_linkmodes: remove redundant null check
840110a4eae190dcbb9907d68216d5d1d9f25839 ethtool: Fix preserving of wanted feature bits in netlink interface
2847bfed888fbb8bf4c8e8067fd6127538c2c700 ethtool: Account for hw_features in netlink interface
f01204ec8be7ea5e8f0230a7d4200e338d563bde ethtool: Don't omit the netlink reply if no features were changed
dc617f29dbe5ef0c8ced65ce62c464af1daaab3d vfs: don't allow writes to swap files
d795a90e2ba024dbf2f22107ae89c210b98b08b8 mm/swapfile.c: move inode_lock out of claim_swapfile
23a60f834406c8e3805328b630d09d5546b460c1 s390/kvm: diagnose 0x318 sync and reset
bffa986c6f80e39d9903015fc7d0d99a66bbf559 kasan: move common generic and tag-based code to common.c
b938fcf42739de8270e6ea41593722929c8a7dd0 kasan: rename source files to reflect the new naming scheme
2bd926b439b4cb6b9ed240a9781cd01958b53d85 kasan: add CONFIG_KASAN_GENERIC and CONFIG_KASAN_SW_TAGS
080eb83f54cf5b96ae5b6ce3c1896e35c341aff9 kasan: initialize shadow to 0xff for tag-based mode
3c9e3aa11094e821aff4a8f6812a6e032293dbc0 kasan: add tag related helper functions
356607f21e603523d4b0a4f918722845214fc6a8 kasan, arm64: fix up fault handling logic
21696c1613244f2ad4e9216c4f6e7804831a992c kasan, arm64: enable top byte ignore for the kernel
11cd3cd69a256a353dd1a249b48ccd727d945952 kasan: split out generic_report.c from report.c
121e8f81d38cc43834195722d0768340dc130a33 kasan: add bug reporting routines for tag-based mode
7f94ffbc4c6a1bdb51d39965e4f2acaa19bd798f kasan: add hooks implementation for tag-based mode
41eea9cd239c5b3fff726894f85c97f60e5799a3 kasan, arm64: add brk handler for inline instrumentation
2813b9c0296259fb11e75c839bab2d958ba4f96c kasan, mm, arm64: tag non slab memory allocated via pagealloc
e886bf9d9abedf8236464bfd21bc5707748b4a02 kasan: add SPDX-License-Identifier mark to source files
a3fe7cdf02e318870fb71218726cc2321ff41f30 kasan: fix krealloc handling for tag-based mode
0d0c8de8788b6c441ea01365612de7efc20cc682 kasan: mark file common so ftrace doesn't trace it
e1db95befb3e9e3476629afec6e0f5d0707b9825 kasan: fix assigning tags twice
3f41b609382388f95c0a05b69b8db0d706adafb4 kasan: fix random seed generation for tag-based mode
dc15a8a2543cb9ebe67998eefe2880ce1a20d42e kasan: prevent tracing of tags.c
c412a769d2452161e97f163c4c4f31efc6626f06 kasan: fix variable 'tag' set but not used warning
880e049c9ce9020384ce305c71375aa1cb54addb mm/kasan: Simplify stacktrace handling
57b78a62e7f23c4686fe54091cdc3d12e60d6513 x86/uaccess, kasan: Fix KASAN vs SMAP
e2092740b72384e95b9c8a418536b35d628a1642 kasan: Makefile: Replace -pg with CC_FLAGS_FTRACE
0600597c854e53d2f9b7a6a718c1da2b8b4cb4db kasan: initialize tag to 0xff in __kasan_kmalloc
e89692190065c12386bd37272ae8b7d142dd079f mm/kasan: print frame description for stack bugs
ae8f06b31a83e54777514308a63f669a1fed519e kasan: add memory corruption identification for software tag-based mode
366e37e4da23f9df498cc9577cadcb354f7bd431 arm64: avoid clang warning about self-assignment
00fb24a42a68b1ee0f6495993fe1be7124433dfb mm/kasan: fix false positive invalid-free reports with CONFIG_KASAN_SW_TAGS=y
26c7295be0c5e6da3fa45970e9748be983175b1b kthread: Do not preempt current task if it is going to call schedule()
ab93a4bc955b3980c699430bc0b633f0d8b607be sched/fair: Remove distribute_running from CFS bandwidth
95d685935a2edf209fc68f52494ede4a382a6c2b sched/pelt: Sync util/runnable_sum with PELT window when propagating
87e867b4269f29dac8190bca13912d08163a277f sched/pelt: Cleanup PELT divider
c3bc8fd637a9623f5c507bd18f9677effbddf584 tracing: Centralize preemptirq tracepoints and unify their usage
da5b3ebb4527733299661229a8d035d64a4f0b1a tracing: irqsoff: Account for additional preempt_disable
bff1b208a5d1dbb2355822ef859edcb9be0379e4 tracing: Partial revert of "tracing: Centralize preemptirq tracepoints and unify their usage"
f27107fa20ad531ace5fd580473ff8dd0c6b9ca9 tracing/irqsoff: Handle preempt_count for different configs
3f1756dc210e5abb37121da3e7c10d65920f6ec0 tracing: More reverting of "tracing: Centralize preemptirq tracepoints and unify their usage"
eeeb080bae906a57b6513d37efe3c38f2cb87a1c kprobes: Prohibit probing on hardirq tracers
2f43c6022d84b2f562623a7023f49f1431e50747 kprobes: Prohibit probing on lockdep functions
153bedbac2ebd475e1c7c2d2fa0c042f5525927d irq_work: Convert flags to atomic_t
25269871db1ad0cbbaafd5098cbdb40c8db4ccb9 irq_work: Fix irq_work_claim() memory ordering
feb4a51323babe13315c3b783ea7f1cf25368918 irq_work: Slightly simplify IRQ_WORK_PENDING clearing
e9838bd51169af87ae248336d4c3fc59184a0e46 irq_work: Fix IRQ_WORK_BUSY bit clearing
2502ec37a7b228b34c1e2e89480f98b92f53046a lockdep: Rename trace_hardirq_{enter,exit}()
0d38453c85b426e47375346812d2271680c47988 lockdep: Rename trace_softirqs_{on,off}()
ef996916e78e03d25e56c2d372e5e21fdb471882 lockdep: Rename trace_{hard,soft}{irq_context,irqs_enabled}()
0995a5dfbe49badff78e78761fb66f46579f2f9a tracing: Provide lockdep less trace_hardirqs_on/off() variants
c86e9b987cea3dd0209203e714553a47f5d7c6dd lockdep: Prepare for noinstr sections
859d069ee1ddd87862e1d6a356a82ed417dbeb67 lockdep: Prepare for NMI IRQ state tracking
bf2b3008440072068580c609d79a079656af0588 x86/entry: Rename trace_hardirqs_off_prepare()
a21ee6055c30ce68c4e201c6496f0ed2a1936230 lockdep: Change hardirq{s_enabled,_context} to per-cpu variables
f9ad4a5f3f20bee022b1bdde94e5ece6dc0b0edc lockdep: Remove lockdep_hardirq{s_enabled,_context}() argument
8cf2f98411e3a0865026a1061af637161b16d32b radix tree: Remove radix_tree_maybe_preload_order
919e9e6395cfac23b7e71ed88930367459055daf Documentation: Add lock ordering and nesting documentation
7ecc6aa522e1b812a2eacc31066945e920b0fde4 Documentation/locking/locktypes: Further clarifications and wordsmithing
51e69e6551a8c6fffe0185ba305bb4e2d7223616 Documentation/locking/locktypes: Minor copy editor fixes
91710728d1725de51d06b40674abf6e860d592c7 locking: Introduce local_lock()
cfa6705d89b6562f79c40c249f8d94073c4276e4 radix-tree: Use local_lock for protection
b01b2141999936ac3e4746b7f76c0f204ae4b445 mm/swap: Use local_lock for protection
7ca8cf5347f720b07a0b32a924b768f5710547e7 locking/atomic: Move ATOMIC_INIT into linux/types.h
dfd402a4c4baae42398ce9180ff424d589b8bffc kcsan: Add Kernel Concurrency Sanitizer infrastructure
0d24f65e933ca89d55d17f6dbdb2a72ca88f0992 Documentation: locking: Describe seqlock design and usage
f4a27cbcec90ac04ee60e04b222e1449dcdba0bd seqlock: Reorder seqcount_t and seqlock_t API definitions
89b88845e05752b3d684eaf147f457c8dfa99c5f seqlock: Add kernel-doc for seqcount_t and seqlock_t APIs
859247d39fb008ea812e8f0c398a58a20c12899e seqlock: lockdep assert non-preemptibility on seqcount_t write
55f3560df975f557c48aa6afc636808f31ecb87a seqlock: Extend seqcount API with associated locks
ec8702da570ebb59f38471007bf71359c51b027b seqlock: Align multi-line macros newline escapes at 72 columns
0584df9c12f449124d0bfef9899e5365604ee7a9 lockdep: Refactor IRQ trace events fields into struct
e55687fe5c1e4849e5559a0a49199c9ca3fff36e seqlock: s/__SEQ_LOCKDEP/__SEQ_LOCK/g
a8772dccb2ec7b139db1b3ba782ecb12ed92d7c3 seqlock: Fold seqcount_LOCKNAME_t definition
e4e9ab3f9f91ad3b88d12363f890e8ad9b59b645 seqlock: Fold seqcount_LOCKNAME_init() definition
0efc94c5d15c3da0a69543d86ad2180f39256ed6 seqcount: Compress SEQCNT_LOCKNAME_ZERO()
b5e6a027bd327daa679ca55182a920659e2cbb90 seqcount: More consistent seqprop names
0cd39f4600ed4de859383018eb10f0f724900e1b locking/seqlock, headers: Untangle the spaghetti monster
fddf9055a60dfcc97bda5ef03c8fa4108ed555c5 lockdep: Use raw_cpu_*() for per-cpu variables
00b0ed2d4997af6d0a93edef820386951fd66d94 locking/lockdep: Cleanup
044d0d6de9f50192f9697583504a382347ee95ca lockdep: Only trace IRQ edges
6f24fbd38c4e05f7905814791806c01dc6c4b9de mm: make early_pfn_to_nid() and related defintions close to each other
b9726c26dc21b15a2faea96fae3a42f2f7fffdcb numa: make "nr_node_ids" unsigned int
3f08a302f533f74ad2e909e7a61274aa7eebc0ab mm: remove CONFIG_HAVE_MEMBLOCK_NODE_MAP option
fa3354e4ea39e97af906c05551a36396541d70b4 mm: free_area_init: use maximal zone PFNs rather than zone sizes
9691a071aa26a21fc8dac804a2b98d3c24f76f9a mm: use free_area_init() instead of free_area_init_nodes()
584cb13dca27be144a54f9e0b0d71f3db61130a2 arm64: simplify detection of memory zone boundaries for UMA configs
73a6e474cb376921a311786652782155eac2fdf0 mm: memmap_init: iterate over memblock regions rather that check each PFN
acd3f5c441e9635857f02a7c21e7dd590dcf672e mm: remove early_pfn_in_nid() and CONFIG_NODES_SPAN_OTHER_NODES
51930df5801e4da60e962ea52b811634d257a148 mm: free_area_init: allow defining max_zone_pfn in descending order
bc9331a19d758706493cbebba67ca70382edddac mm: rename free_area_init_node() to free_area_init_memoryless_node()
854e8848c5841b4199a70f1838f55999cecbf3b6 mm: clean up free_area_init_node() and its helpers
8b664fefa3413ea42bb68546f1f1756289b080a7 scsi: smartpqi: Add RAID bypass counter
10100ffd5f6584298b72f9fe26f32cf02abfb8b0 scsi: hpsa: Get rid of compat_alloc_user_space()
06b43f968db58fd582b09b745338eae5af9f9f5e scsi: hpsa: hpsa_ioctl(): Tidy up a bit
654cc541a949e971e7a500710b7dacc7031ee9cc scsi: hpsa: Bump version
4f72adc5068294268387a81a6bf91d9bb07ecc5c x86/vdso: Simplify the invalid vclock case
3e89bf35ebf59c12e8c1476f6681fae0ebdcb2a7 x86/vdso: Move cycle_last handling into the caller
99c19e6a8fe4a95fa0dac191207a1d40461b1604 x86/vdso: Rearrange do_hres() to improve code generation
2f328fea47ac9020ac47c88dd01cd8f93da55bcc arm64: replace arm64-obj-* in Makefile with obj-*
48166e6ea47d23984f0b481ca199250e1ce0730a y2038: add 64-bit time_t syscalls to all 32-bit architectures
83a680dd97ad2d1ed7a6355aa5baddbc0c8ae2ae arm64: asm-offsets: remove unused offsets
ca5e9aba753ed15d173c7a7b88e4d402b7ca8121 time: Add time_types.h
1d5b82331ee8b8f2c951b055329b943efcf5c834 checksyscalls: fix up mq_timedreceive and stat exceptions
dea86a80033f8b0fb25a805f46dde9f3b1a7c23a arm64: Use arch_timer_read_counter instead of arch_counter_get_cntvct
75a19a0202db21638a1c2b424afb867e1f9a2376 arm64: arch_timer: Ensure counter register reads occur with seqlock held
d1e5ca64d5bab864000566ea695617d0e124d27e arm64: compat: Split kuser32
459e3a21535ae3c7a9a123650e54f5c882b8fcbf gcc-9: properly declare the {pv,hv}clock_page storage
f31e98bfae1c8792701ef03acd47344866cb2e14 arm64: arch_timer: mark functions as __always_inline
ff17bbe0bb405ad8b36e55815d381841f9fdeebc x86/vdso: Prevent segfaults due to hoisted vclock reads
7ac8707479886c75f353bfb6a8273f423cfccb23 x86/vdso: Switch to generic vDSO implementation
f66501dc53e72079045a6a17e023b41316ede220 x86/vdso: Add clock_getres() entry point
22ca962288c0a1c9729e8e440b9bb9ad05df6db6 x86/vdso: Add clock_gettime64() entry point
9d90b93bf325e015bbae31b83f16da5e4e17effa lib/vdso: Make delta calculation work correctly
502a590a170b3b3d0ad998ee0b639ac0b3db1dfa lib/vdso: Move fallback invocation to the callers
c60a32ea4f459f99b98d383cad3b1ac7cfb3f4be lib/vdso/32: Provide legacy syscall fallbacks
1638b8f096ca165965189b9626564c933c79fe63 lib/vdso: Make clock_getres() POSIX compliant again
ffd08731b2d632459428612431060cf902324a8d lib/vdso: Make __cvdso_clock_getres() static
28b1a824a4f44da46983cd2c3249f910bd4b797b arm64: vdso: Substitute gettimeofday() with C implementation
98cd3c3f83fbba27a6bacd75ad12e8388a61a32a arm64: vdso: Build vDSO with -ffixed-x18
bfe801ebe84f42b4666d3f0adde90f504d56e35b arm64: vdso: Enable vDSO compat support
94fee4d43752b6022428d9de402632904968e15b arm64: vdso: Remove unnecessary asm-offsets.c definitions
27e11a9fe2e2e7e0d13f854e89a71e488678fb17 arm64: Fix __arch_get_hw_counter() implementation
e9a1379f9219be439f47a0f063431a92dc529eda x86/vdso: Fix flip/flop vdso build bug
2e2f3c9b864d9f21fb82aa8da5ac9adc1e020f60 arm64: vdso: fix flip/flop vdso build bug
a88754b23114cfb61efed56ed448c05e4cb7e20d arm64: vdso: Cleanup Makefiles
d2f5d3fa26196183adb44a413c44caa9872275b4 x86/vdso/32: Use 32bit syscall fallback
52338415cf4d4064ae6b8dd972dadbda841da4fa timekeeping/vsyscall: Update VDSO data unconditionally
94c467ddb273dc9a6a4fb09aef392c119b151edb y2038: add __kernel_old_timespec and __kernel_old_time_t
21346564ccad17b928cf0d51584608531d91d298 y2038: vdso: change time_t to __kernel_old_time_t
b767081c07a400ff1c6f95b87639a9405886e7a6 lib/vdso: Remove VDSO_HAS_32BIT_FALLBACK
a279235ddbe975670afe2267162028ec0a312293 lib/vdso: Remove checks on return value for 32 bit vDSO
0b5c12332db5b71c6db0c102b3e6acc7c7c6a54d x86/vdso: Remove unused VDSO_HAS_32BIT_FALLBACK
8463cf80529d0fd80b84cd5ab8b9b952b01c7eb9 lib/vdso: Let do_coarse() return 0 to simplify the callsite
c966533f8c6c45f93c52599f8460e7695f0b7eaa lib/vdso: Mark do_hres() and do_coarse() as __always_inline
769071ac9f20b6a447410c7eaa55d1a5233ef40c ns: Introduce Time Namespace
af993f58d69ee9c1f421dfc87c3ed231c113989c time: Add timens_offsets to be used for tasks in time namespace
819a95fe3adfc7b558bfd96dd5ac589c4f543fd4 posix-clocks: Rename the clock_get() callback to clock_get_timespec()
eaf80194d0fe48be393587541c48a799a9a06a70 posix-clocks: Rename .clock_get_timespec() callbacks accordingly
9c71a2e8a757bc6aee256bc97c6fb711144b0a0f posix-clocks: Introduce clock_get_ktime() callback
198fa445d5c4c1a1c6c1d39f962559f8d008e79d posix-timers: Use clock_get_ktime() in common_timer_get()
89dd8eecfe961fab4924dcd14f80cf2ab2820044 time: Add do_timens_ktime_to_host() helper
1f9b37bfbb607a09d838c248843e63a2cafe1080 posix-timers: Make clock_nanosleep() time namespace aware
660fd04f9317172ae90f414c68b18a26ae88a829 lib/vdso: Prepare for time namespace support
64b302ab66c5965702693e79690823ca120288b9 x86/vdso: Provide vdso_data offset on vvar_page
550a77a74c87ecfdadc2214fef4b25ff125f65ab x86/vdso: Add time napespace page
afaa7b5ac7c87479fb5a626f87d2157af30d6401 time: Allocate per-timens vvar page
70ddf65184ec1e8989322f35193e4fde7377f0cc x86/vdso: Zap vvar pages when switching to a time namespace
04a8682a71becdb639ec9c0d82b315a2baef7a5d fs/proc: Introduce /proc/pid/timens_offsets
9a6b55ac4a44060bcb782baf002859b2a2c63267 lib/vdso: Make __arch_update_vdso_data() logic understandable
9f24c540f7f8eb3a981528da9a9a636a5bdf5987 lib/vdso: Update coarse timekeeper unconditionally
50e818715821b89c7abac90a97721f106e893d83 x86/vdso: Mark the TSC clocksource path likely
49a101d7169c7729c7bab6b2f896faae34bd6c3d lib/vdso: Only read hrtimer_res when needed in __cvdso_clock_getres()
1dff4156d1f63b525c54aea7f097a657cbbbf837 lib/vdso: Allow the high resolution parts to be compiled out
eec399dd862762b9594df3659f15839a4e12f17a x86/vdso: Move VDSO clocksource state tracking to callback
5d51bee725cc1497352d6b0b604e42a90c680540 clocksource: Add common vdso clock mode storage
b95a8a27c300d1a39a4e36f63a518ef36e4b966c x86/vdso: Use generic VDSO clock mode storage
5e3c6a312a0946d2d83e32359612cbb925a8bed0 ARM/arm64: vdso: Use common vdso clock mode storage
f86fd32db706613fe8d0104057efa6e83e0d7e8f lib/vdso: Cleanup clock mode storage leftovers
c7a18100bdffdff440c7291db6e80863fab0461e lib/vdso: Avoid highres update if clocksource is not VDSO capable
2d6b01bd88ccabba06d342ef80eaab6b39d12497 lib/vdso: Move VCLOCK_TIMENS to vdso_clock_modes
ae12e08539de6717502c2f9f83bd60df939b5c08 lib/vdso: Allow fixed clock mode
8345228ccf31f94e3ff7ec5458ac7cc13cb323fa lib/vdso: Allow architectures to override the ns shift operation
e876f0b69dc993e86ca7795e63e98385aa9a7ef3 lib/vdso: Allow architectures to provide the vdso data pointer
659a9faa3f3c89de4c34c30c3da676059864e0fe x86: Introduce asm/vdso/clocksource.h
31fdcac07f679848b5ba371500292b685fd39217 arm64: Introduce asm/vdso/clocksource.h
14ee2ac618e49e767c9af4aa007f951eb9e35153 linux/clocksource.h: Extract common header for vDSO
639fff1cce0f7462bb4440deeffc1048ecfc6ebb linux/time.h: Extract common header for vDSO
9a4162316965818ea73701b611915deca97afece linux/time32.h: Extract common header for vDSO
60ad903e9477a832e4575734540db32023a605e9 arm64: vdso: Include common headers in the vdso library
8c59ab839f526437831ff6d1405c9a6d93f475eb lib/vdso: Enable common headers
a67de48b3075cbb6ec030205d7b78981def6596d clocksource/drivers/arm_arch_timer: Fix vDSO clockmode when vDSO disabled
b801f1e22c23c259d6a2c955efddd20370de19a6 time/namespace: Fix time_for_children symlink
eeec26d5da8248ea4e240b8795bb4364213d3247 time/namespace: Add max_time_namespaces ucount
94d440d618467806009c8edc70b094d64e12ee5a proc, time/namespace: Show clock symbolic names in /proc/pid/timens_offsets
ac84bac4062e7fc24f5e2c61c6a414b2a00a29ad vdso/datapage: Use correct clock mode name in comment
86b8783701246a22a734824674cc3f87a5ed9f13 arm64: vdso: Add '-Bsymbolic' to ldflags
1578e5d03112e3e9d37e1c4d95b6dfb734c73955 arm64: vdso: Add -fasynchronous-unwind-tables to cflags
7e9f5e6629f62865e67b8a02a5b522dd9af890bd arm64: vdso: Add --eh-frame-hdr to ldflags
c7f3d43b629b598a2bb9ec3524e844eae7492e7e clocksource: Remove obsolete ifdef
72ce778007e57e8996b4bebdec738fc5e1145fd2 lib/vdso: Provide sanity check for cycles (again)
7778d8417b74aded842eeb372961cfc460417fa0 x86/vdso: Unbreak paravirt VDSO clocks
a39060b009ca0b5b5fe0c0dab85ed437531aab52 arm64: compat: Allow 32-bit vdso and sigpage to co-exist
3503d56cc7233ced602e38a4c13caa64f00ab2aa arm64/vdso: Add time namespace page
9614cc576d76a7449cd51b60ef81fd0ce19ee694 arm64: enable time namespace support
d60d7de3e16d7cea998bad17d87366a359625894 lib/vdso: Allow to add architecture-specific vdso data
19d0070a2792181f79df01277fe00b83b9f7eda7 timekeeping/vsyscall: Provide vdso_update_begin/end()
4c5a116ada953b86125ab7c70a57c57463a55a55 vdso/treewide: Add vdso_data pointer argument to __arch_get_hw_counter()
ca214e2c1793058e3a1387f9e343cc5b1731db15 vdso: Fix clocksource.h macro detection
b8265621f4888af9494e1d685620871ec81bc33d Add pldmfw library for PLDM firmware update
9e2b4be377f0d715d9d910507890f9620cc22a9d ima: add a new CONFIG for loading arch-specific policies
065e0d42a0a728d7f6c2aec7c9f3e5dc7b715394 ethtool: Add support for 100Gbps per lane link modes
372c187b8a705c0b52c230653ac7bc38ef62182f scsi: lpfc: Add an internal trace log buffer
77dd7d7b344283a3bce334d0f43fc2c0629ffe48 scsi: lpfc: Fix less-than-zero comparison of unsigned value
7fa03c77cd54e1ff8fc58bb85f787ff67910ec48 scsi: lpfc: Use __printf() format notation
9e3e365a92d329e5e69e3f92037537be6276992b scsi: lpfc: Fix no message shown for lpfc_hdw_queue out of range value
0dbc866832a0fbf9f2b98d412da44c5cfd1b7756 libbpf: Add low-level APIs for new bpf_link commands
42fce2cfb405e613f0355c4f92429d651bf0a5b3 selftests/bpf: Convert test_hashmap into test_progs test
d46edd671a147032e22cfeb271a5734703093649 bpf: Sharing bpf runtime stats with BPF_ENABLE_STATS
0bee106716cfb2c6da81916b968395db22bd7755 libbpf: Add support for command BPF_ENABLE_STATS
5447e8e01e101ba19fe5b7551f02d37367156f6b sysctl: Fix unused function warning
15d83c4d7cef5c067a8b075ce59e97df4f60706e bpf: Allow loading of a bpf_iter program
de4e05cac46d206f9090051ef09930514bff73e4 bpf: Support bpf tracing/iter programs for BPF_LINK_CREATE
2057c92bc927f09b22f5609425eb37d7e782f484 bpf: Support bpf tracing/iter programs for BPF_LINK_UPDATE
fd4f12bc38c3ad9107169e7c9e6e7f81d93dda97 bpf: Implement bpf_seq_read() for bpf iterator
ac51d99bf81caac8d8881fe52098948110d0de68 bpf: Create anonymous bpf iterator
367ec3e4834cbd611401c2c40a23c22c825474f1 bpf: Create file bpf iterator
e5158d987b72c3f318b4b52a01ac6f3997bd0c00 bpf: Implement common macros/helpers for target iterators
b121b341e5983bdccf7a5d6cf9236a45c965a31f bpf: Add PTR_TO_BTF_ID_OR_NULL support
c09add2fbc5aece00a5b54a48ce39fd4e3284d87 tools/libbpf: Add bpf_iter support
fd49591cb49b72abd1b665222a635ccb17df7923 bpf, arm64: Optimize AND,OR,XOR,JSET BPF_K using arm64 logical immediates
8e7c2a023ac04e04c72cd7b640329511dda92672 selftests/bpf: Add benchmark runner infrastructure
4eaf0b5c5e04c21a866431bd763ab4b1f24c4d16 selftest/bpf: Fmod_ret prog and implement test_overhead as part of bench
c5d420c32cb44fdd10d76f0f01bcd0b09383d0b5 selftest/bpf: Add BPF triggering benchmark
21aef70eade22a656297c28d5da93301915d2ac2 bpf: Change btf_iter func proto prefix to "bpf_iter_"
2e3ed68bfcd9c5ca2cf8b88ba23a34992ccd0b1f bpf: Add comments to interpret bpf_prog return values
7aebfa1b3885b5aa29fcb4a596d0485ac463bbe8 bpf: Support narrow loads from bpf_sock_addr.user_port
5b0004d92b4511c39db0df23aa84395722f1d706 selftest/bpf: Fix spelling mistake "SIGALARM" -> "SIGALRM"
f307fa2cb4c935f7f1ff0aeb880c7b44fb9a642b bpf: Introduce bpf_sk_{, ancestor_}cgroup_id helpers
2c78ee898d8f10ae6fb2fa23a3fbaec96b1b7366 bpf: Implement CAP_BPF
1b66d253610c7f8f257103808a9460223a087469 bpf: Add get{peer, sock}name attach types for sock_addr
272d51af32890632134845ddf35318c11da20c7b libbpf: Add API to consume the perf ring buffer content
457f44363a8894135c85b7a9afd2bd8196db24ab bpf: Implement BPF ring buffer and verifier support for it
bf99c936f9478a05d51e9f101f90de70bee9a89c libbpf: Add BPF ring buffer support
c97099b0f22722be7d0f290278a26d297cc4b7ca bpf: Add BPF ringbuf and perf buffer benchmarks
fbee97feed9b3e4acdf9590e1f6b4a2eefecfffe bpf: Add support to attach bpf program to a devmap entry
2778797037a658be71a6c55b54700bf58ba21eb7 libbpf: Add SEC name for xdp programs attached to device map
febeb6dff7beafcaf89521f6c8ff7b0adac08d54 libbpf: Add _GNU_SOURCE for reallocarray to ringbuf.c
7cdec54f9713256bb170873a1fc5c75c9127c9d2 bpf: Add csum_level helper for fixing up csum levels
f5a1a536fa14895ccff4e94e6a5af90901ce86aa lib: introduce copy_struct_from_user() helper
0cc55a0213a02b760ade1d4755fdccfbf7d3157e mmap locking API: add mmap_read_trylock_non_owner()
d7b2977b816223a884814eea46fbe38e192cec4c bpf: factor out a bpf_trace_copy_string helper
aec6ce59133edc4ac04f7d4e2556fdf047becb62 bpf: handle the compat string in bpf_trace_copy_string better
8d92db5c04d10381f4db70ed99b1b576f5db18a7 bpf: rework the compat kernel probe handling
26afa0a4eb3fd87757f9de56ec5db5a03b14e120 bpf: Reset data_meta before running programs attached to devmap entry
281920b7e0b31e0a7706433ff58e7d52ac97c327 bpf: Devmap adjust uapi for attach bpf program
b0659d8a950d424e57cc0a67afc4740ee561224e bpf: Fix definition of bpf_ringbuf_output() helper in UAPI comments
4e15507fea70c0c312d79610efa46b6853ccf8e0 libbpf: Forward-declare bpf_stats_type for systems with outdated UAPI headers
b338cb921e6739ff59ce32f43342779fe5ffa732 bpf: Restore behaviour of CAP_SYS_ADMIN allowing the loading of networking bpf programs
bcc7f554cfa7e0ac77c7adc4027c16f4a2f99c6f bpf: Fix formatting in documentation for BPF helpers
517bbe1994a3cee29a35c730662277bb5daff582 bpf: Enforce BPF ringbuf size to be the power of 2
9b2b09717e1812e450782a43ca0c2790651cf380 bpf: sockmap: Check value of unused args to BPF_PROG_ATTACH
f418dddffc8007945fd5962380ebde770a240cf5 usercopy: Avoid soft lockups in test_check_nonzero_user()
92fb1db26eefc11554820f11ce8e92007da2fbf4 mm/page_idle.c: skip offline pages
c8ffd8bcdd28296a198f237cc595148a8d4adfbe vfs: add faccessat2 syscall
55163a1c00fcb526e2aa9f7f952fb38d3543da5e hwmon: (k10temp) Add support for Zen3 CPUs
5ef5c90e3cb3ae1ce7bebddaeb8e8f44309950f7 selftests: move timestamping selftests to net folder
b346c0c85892cb8c53e8715734f71ba5bbec3387 selftest: txtimestamp: fix net ns entry logic
42fdc5e49c2be97db112d410d07044e0e2c7d5bb blk-mq: remove the BLK_MQ_REQ_INTERNAL flag
445874e89f662c8c6a56e6bb820cbe9fbef61428 blk-mq: pass hctx to blk_mq_dispatch_rq_list
7538352453189abf3a96461e187b1085b0ae0c6c blk-mq: move getting driver tag and budget into one helper
1fd40b5ea72cf830cfb932bbf791533931c615e9 blk-mq: pass obtained budget count to blk_mq_dispatch_rq_list
6e6fcbc27e7788af54139c53537395d95560f2ef blk-mq: support batching dispatch in case of io
570e9b73b0af2e5381ca5343759779b8c1ed20e3 blk-mq: move blk_mq_get_driver_tag into blk-mq.c
7bf137298cb73afdb8c5536e474f7ba71ab1c235 blk-mq: streamline handling of q->mq_ops->queue_rq result
37f4a24c2469a10a4c16c641671bd766e276cf9f blk-mq: centralise related handling into blk_mq_get_driver_tag
c1e2b8422bf946c80e832cee22b3399634f87a2c block: fix double account of flush request's driver tag
51db1c37ee166159c5753ce8d64d6bacf113e0f0 blk-mq: Rename BLK_MQ_F_TAG_SHARED as BLK_MQ_F_TAG_QUEUE_SHARED
222a5ae03cdd12e7643f2f64689a39ed547650cb blk-mq: Use pointers for blk_mq_tags bitmap tags
32bc15afed04bd73e29d713d8db47818d6aa89af blk-mq: Facilitate a shared sbitmap per tagset
a0235d230f3245aa4bd70b514d5effb24be61acd blk-mq: Relocate hctx_may_queue()
bccf5e26d99c28980bd6ced474422a1b18402263 blk-mq: Record nr_active_requests per queue for when using shared sbitmap
f1b49fdc1c64db110aa1315831e5fe0f8599fa56 blk-mq: Record active_queues_shared_sbitmap per tag_set for when using shared sbitmap
b445547ec1bbd3e7bf4b1c142550942f70527d95 blk-mq, elevator: Count requests per hctx to improve performance
bdb01301f3ea51a59eff252b06643fc1fe843e57 scsi: Add host and host template flag 'host_tagset'
f7c4cdc712ab803f7cdd3d47025081831f457ecc scsi: scsi_debug: Support host tagset
103fbf8e4020845e4fcf63819288cedb092a3c91 scsi: megaraid_sas: Added support for shared host tagset for cpuhotplug
ff1bf4c0714e7936330bb316090a75eaa35061e7 selinux: use kernel linux/socket.h for genheaders and mdp
3ecad8c2c1ff333e204c26e2f0dddfa623153f87 docs: fix broken references for ReST files that moved around
da4ad88cab5867ee240dfd0585e9d115a8cc47db kvm: Replace vcpu->swait with rcuwait
cb953129bfe5c0f2da835a0469930873fb7e71df kvm: add halt-polling cpu usage stats
ef68017eb5704eb2b0577c3aa6619e13caf2b59f x86/kvm: Handle async page faults directly through do_page_fault()
6bca69ada4bc20fa27eb44a5e09da3363d1752af x86/kvm: Sanitize kvm_async_pf_task_wait()
3a7c8fafd1b42adea229fd204132f6a2fb3cd2d9 x86/kvm: Restrict ASYNC_PF to user space
68fd66f100d196d35ab3008d4c69af3a0d7e7200 KVM: x86: extend struct kvm_vcpu_pv_apf_data with token info
2635b5c4a0e407b84f68e188c719f28ba0e9ae1b KVM: x86: interrupt based APF 'page ready' event delivery
557a961abbe06ed9dfd3b55ef7bd6e68295cda3d KVM: x86: acknowledgment mechanism for async pf page ready notifications
72de5fa4c16195827252b961ba44028a39dfeaff KVM: x86: announce KVM_FEATURE_ASYNC_PF_INT
fb0cb6a8211cfe00178614ae72a0b426bd1ff016 KVM: selftests: update hyperv_cpuid with SynDBG tests
0e96edd9a9c2e75ece7f581d4f75d26b38cd53ba x86/kvm: Remove defunct KVM_DEBUG_FS Kconfig
b1d405751cd5792856b1b8333aafaca6bf09ccbb KVM: x86: Switch KVM guest to using interrupts for page ready APF delivery
9d3c447c72fb2337ca39f245c6ae89f2369de216 KVM: X86: Fix async pf caused null-ptr-deref
9ce372b33a2ebbd0b965148879ae169a0015d3f3 KVM: x86: drop KVM_PV_REASON_PAGE_READY case from kvm_handle_page_fault()
a8d908b5873cad212b0f74569f5a23b804e694ce KVM: x86: report sev_pin_memory errors with PTR_ERR
242636343c246e338b8ea317e32dbf4ed47edc65 kvm: svm: Always set svm->last_cpu on VMRUN
1aa561b1a4c0ae2a9a9b9c21a84b5ca66b4775d8 kvm: x86: Add "last CPU" to some KVM_EXIT information
8a14fe4f0c54f27c89389d13c4a1e467a88c35ea kvm: x86: Move last_cpu into kvm_vcpu_arch as last_vmentry_cpu
c967118ddb21191178c0e0080fdc41f5d85ca1d1 kvm: x86: Set last_vmentry_cpu in vcpu_enter_guest
761e4169346553c180bbd4a383aedd72f905bc9a KVM: nSVM: Check that MBZ bits in CR3 and CR4 are not set on vmrun of nested guests
2aa9c199cf8151c190c7e7ca3ddfcfbb2d85ac36 KVM: Move x86's version of struct kvm_mmu_memory_cache to common code
1dbf5d68af6ffdb1c8b0d38ee565768e22e2c3ab KVM: VMX: Add guest physical address check in EPT violation and misconfig
3edd68399dc155b80335244c8c2673eaa652931a KVM: x86: Add a capability for GUEST_MAXPHYADDR < HOST_MAXPHYADDR support
ff2bd9ff115218c144441e1df0370d9083b82866 KVM: SVM: Fix sev_pin_memory() error handling
0f990222108d214a0924d920e6095b58107d7b59 KVM: Check the allocation of pv cpu mask
d831de177217cd494bfb99f2c849a0d40c2a7890 KVM: x86: always allow writing '0' to MSR_KVM_ASYNC_PF_EN
7d1f8691ccffe88cec70a6e4044adf1b9bbd8a7c Revert "KVM: Check the allocation of pv cpu mask"
b96e6506c2ea7c8e3ef0860169b6d0ba2f1aca9f KVM: x86: VMX: Make smaller physical guest address space support user-configurable
ae2212a7216b674633bdc3bd2e24947a0665efb8 rculist: Introduce list/hlist_for_each_entry_srcu() macros
c55a844f46f958b4df804eccd734b86795e40359 x86/hyperv: Split hyperv-tlfs.h into arch dependent and independent files
dfc53baae3c6a165a35735b789e3e083786271d6 x86/hyperv: Remove aliases with X64 in their name
0dd16b5b0c9bd62fbff3ea375cdd5125e19317c6 KVM: nSVM: rename nested vmcb to vmcb12
a90c1ed9f11dbc3d37664a8561e50e3f3695c539 KVM: nSVM: Remove unused field
c45ad7229d139ad48e894a271f8df6975e53d12e KVM: SVM: Introduce vmcb_(set_intercept/clr_intercept/_is_intercept)
03bfeeb988a970995479eb6d108c398027ab7525 KVM: SVM: Change intercept_cr to generic intercepts
30abaa88382ce078cfc2ecebb61d9e0540fef24d KVM: SVM: Change intercept_dr to generic intercepts
9780d51dc2af1c02bed9687822ba0d6df955c302 KVM: SVM: Modify intercept_exceptions to generic intercepts
c62e2e94b9d4a221f489cfeacf665c50aa9ab6cf KVM: SVM: Modify 64 bit intercept field to two 32 bit vectors
4c44e8d6c19330e48a87103184f840ffe5a423cd KVM: SVM: Add new intercept word in vmcb_control_area
830bd71f2c0684b530970d0aea792a12c0cbcdd2 KVM: SVM: Remove set_cr_intercept, clr_cr_intercept and is_cr_intercept
9715092f8d7eaab2e06a86b67bffc61c20e76f17 KVM: X86: Move handling of INVPCID types to x86
09e3e2a1cc8d8069085785f1236a64c72707e7f2 KVM: x86: Add kvm_x86_ops hook to short circuit emulation
535f7ef2ab7dbfbcfe732ee7634faca21417a777 KVM: VMX: Move IRQ invocation to assembly subroutine
1a5488ef0dcf6af5b2a69144ad6732dd67e98146 KVM: VMX: Invoke NMI handler via indirect call instead of INTn
fb0f33fdefe9f473dc5f7b71345096c8d60ab9dd KVM: nSVM: CR3 MBZ bits are only 63:52
dc46515cf838e37c602016cc905df051e06cb8ea KVM: x86: Move illegal GPA helper out of the MMU code
b39033f504a7eda15dcb2465679b8d46651b3645 KVM: VMX: Use VMX_FEATURE_* flags to define VMCS control bits
7f3603b631362340774291a961712ec07bbf8122 KVM: VMX: Rename RDTSCP secondary exec control name to insert "ENABLE"
8b50b92f9f1a819cba290e24064337004c00ee36 KVM: VMX: Add a helper and macros to reduce boilerplate for sec exec ctls
5a085326d51d0c92bc5c1f62d60dcf3db450af69 KVM: VMX: Rename ops.h to vmx_ops.h
eb3db1b1378882a2d0abc1b6103040c97bcc91e4 KVM: VMX: Rename the "shared_msr_entry" struct to "vmx_uret_msr"
fbc18007382cb99ca68b1c6cb49d38f4f3b7a5da KVM: VMX: Rename vcpu_vmx\'s "nmsrs" to "nr_uret_msrs"
e9bb1ae92d62bd55b8093918fdec91f6fc3d3a56 KVM: VMX: Rename vcpu_vmx\'s "save_nmsrs" to "nr_active_uret_msrs"
658ece84f5da1cd8e36f0d13449aa95c61667b4b KVM: VMX: Rename vcpu_vmx\'s "guest_msrs_ready" to "guest_uret_msrs_loaded"
1e7a483037e8fa884c688f2213c8af10f2e8e96a KVM: VMX: Rename "__find_msr_index" to "__vmx_find_uret_msr"
ef1d2ee12e6cd5abbf9986f35238f2fb2cd21a6d KVM: VMX: Check guest support for RDTSCP before processing MSR_TSC_AUX
86e3e494fe32d1e7e9180458d857916155dd2856 KVM: VMX: Move uret MSR lookup into update_transition_efer()
bd65ba82b324e1765121f3602f9b0a89b7aa1c08 KVM: VMX: Add vmx_setup_uret_msr() to handle lookup and swap
d85a8034c016a1f50e879124bc5839c986d87a0a KVM: VMX: Rename "find_msr_entry" to "vmx_find_uret_msr"
7bf662bb5ea806e3958638e9b80f203d11fbcc87 KVM: VMX: Rename "vmx_set_guest_msr" to "vmx_set_guest_uret_msr"
14a61b642de9e5612f091b3295da6d0c89449a49 KVM: VMX: Rename "vmx_msr_index" to "vmx_uret_msrs_list"
802145c56a0445bba39de481214302eb3d34e4fb KVM: VMX: Rename vmx_uret_msr\'s "index" to "slot"
1ae099540e8c7f1ee066b3ad45cc91f582bb1ce8 KVM: x86: Allow deflecting unknown MSR accesses to user space
51de8151bd21bae0ce76f604eec6a7176f7093b3 KVM: x86: Add infrastructure for MSR filtering
476c9bd8e997b495524500cd82471e59b3aac20e KVM: x86: Prepare MSR bitmaps for userspace tracked MSRs
fd6fa73d13377f2bff6ed668c99ca76adcda1336 KVM: x86: SVM: Prevent MSR passthrough when MSR access is denied
3eb900173c71392087f4b0ada66f67ceae7e75f0 KVM: x86: VMX: Prevent MSR passthrough when MSR access is denied
1a155254ff937ac92cf9940d273ea597b2c667a2 KVM: x86: Introduce MSR filtering
d468706e313ca3ec85b0e6e71a960ee0bbadd9f3 KVM: selftests: Add test for user space MSR handling
0c899c25d754ae386940f0e1b86b31d3921480b6 KVM: x86: do not attempt TSC synchronization on guest writes
6a2e0923b2df5c00d1c691b0393daf1a87ffb924 KVM: VMX: vmx_uret_msrs_list[] can be static
628ade2d0816b2675ab61ba6aadfc9a94e3e1589 KVM: VMX: Fix x2APIC MSR intercept handling on !APICV platforms
9389b9d5d3566b5687829a4098e715f0016451c7 KVM: VMX: Ignore userspace MSR filters for x2APIC
043248b3280cefe286113525672327a4ddfecd3f KVM: VMX: Forbid userspace MSR filters for x2APIC
66570e966dd9cb4fd57811d0056c6472a14a2c41 kvm: x86: only provide PV features if enabled in guest's CPUID
7dffecaf4eabb700e7aef3cc6da333517cfc242a KVM: x86: report negative values from wrmsr emulation to userspace
2fcf4876ada8a293d3b92a1033b8b990a7c613d3 KVM: nSVM: implement on demand allocation of the nested state
9478dec3b5e79a1431e2e2b911e32e52a11c6320 KVM: vmx: remove unused variable
3017013dcc82a4862bd1e140f8b762cfc594008d nvme-rdma: avoid race between time out and tear down
d6f66210f4b1aa2f5944f0e34e0f8db44f499f92 nvme-tcp: avoid race between time out and tear down
fdf58e02adecbef4c7cbb2073d8ea225e6fd5f26 nvme-rdma: avoid repeated request completion
0a8a2c85b83589a5c10bc5564b796836bf4b4984 nvme-tcp: avoid repeated request completion
462582b99b6079a6fbcdfc65bac49f5c2a27cfff gfs2: add some much needed cleanup for log flushes that fail
5a61ae1402f15276ee4e003e198aab816958ca69 gfs2: Make sure we don't miss any delayed withdraws
b2539aa0d7ff1e42c74a9dd8c73ec1c2771c9e5d s390/stp: add support for leap seconds
58f3ead54752a083be6faaec270b5c4c39105c7e scsi: zfcp: move SG table helper from aux to fc and make them static
c24635acce1e875838d4bc5aae1da27e4e5ced23 scsi: zfcp: drop unnecessary forward prototype for struct zfcp_reqlist
a0e86d95558435670ce0616d031ba18aff6e4cd5 scsi: zfcp: move scsi_eh & non-ERP timeout defines owned by and local to zfcp_fsf.c
208d096154da8457ee73ddbb490d48cb07abcb20 scsi: zfcp: clarify function argument name for trace tag string
df91eefd080dcd9801145d1c210d3b078cf912b1 scsi: zfcp: the action field of zfcp_erp_action is actually the type
0023beece0c73bc11c1e2827c3de5bbbb66b4542 scsi: zfcp: use enum zfcp_erp_steps for struct zfcp_erp_action.step
d5fcdced311bf51a587b26b36e568eb1b640fbc9 scsi: zfcp: use enum zfcp_erp_act_result for argument/return of affected functions
8684d61481e2de0599fa12c184f066f7d19955ff scsi: zfcp: silence all W=1 build warnings for existing kdoc
623cd180c10c5bec815a46c4ce73c8c148d2f518 scsi: zfcp: silence remaining kdoc warnings in header files
013be03840c2ba3a2717f9cee457f01fdc4d8436 scsi: s390: zfcp_fc: use sg helper to iterate over scatterlist
b76becde2b84137faa29bbc9a3b20953b5980e48 scsi: zfcp: fix request object use-after-free in send path causing seqno errors
a10a61e807b0a226b78e2041843cbf0521bd0c35 scsi: zfcp: support retrieval of SFP Data via Exchange Port Data
6028f7c4cd87cac13481255d7e35dd2c9207ecae scsi: zfcp: introduce sysfs interface for diagnostics of local SFP transceiver
8155eb0785279728b6b2e29aba2ca52d16aa526f scsi: zfcp: implicitly refresh port-data diagnostics when reading sysfs
5a2876f0d1ef26b76755749f978d46e4666013dd scsi: zfcp: introduce sysfs interface to read the local B2B-Credit
8a72db70b5ca3c3feb3ca25519e8a9516cc60cfe scsi: zfcp: implicitly refresh config-data diagnostics when reading sysfs
48910f8c35cfd250d806f3e03150d256f40b6d4c scsi: zfcp: move maximum age of diagnostic buffers into a per-adapter variable
a3fd4bfe85fbb67cf4ec1232d0af625ece3c508b scsi: zfcp: fix wrong data and display format of SFP+ temperature
871602b1079234b2a9279062eaeadb3aad7bc863 s390/qeth: only handle IRQs while device is online
c04b116a2866b3e3a6b909a576769ccde3d622ac s390/qeth: consolidate RX code
dcdcf8670dad7547cff59ef9ddd7312fc706464a s390/qeth: use napi_gro_frags() for SG skbs
8ca8559ff3cefd78e12b9658f21cc8bcc02407ec s390/qeth: remove QETH_RX_PULL_LEN
91003f354e6bbe8d225b4d54127d80c694d201d9 s390/qeth: consolidate online/offline code
17d9723e69d44491d04289213006fea1647bd0a6 s390/qeth: remove HARDSETUP state
420579dba126c6111b5a3dea062f21a7e4e647c6 s390/qeth: don't warn for napi with 0 budget
562cf7736363c0b8a98f482cc7f6a19177d8fcea s390/qeth: support configurable RX copybreak
fcc2df8b8777c960c8125bc157423c76415a5419 s390/qeth: allow configuration of TX queues for z/VM NICs
66cddf101901a6cfcd21c840f0535e8f1c8c5186 s390/qeth: allow configuration of TX queues for IQD devices
5d8ce41c6a878afac157a61299a9f810bf80995e s390/qeth: balance the TX queue selection for IQD devices
8d145da294a9371c050994bbe6fef98c91e3c072 s390/qeth: add SW timestamping support for IQD devices
ed13615dd32690ca2a9d1f730a596f950eafd905 s390/qeth: simplify RX buffer tracking
781b9a1820a1533135811bf281fefe0fc6920006 s390/qeth: split out RX poll code
b439044b70e4b7992f82974eb77d92c95da5960f s390/qeth: remove redundant if-clause in RX poll code
0a6e634535f1b47b00501c0b563a827eb1f8ec8c s390/qdio: extend polling support to multiple queues
ee1e52d1e4bb91826a2bf5c0586d5b15eb619898 s390/qeth: add TX IRQ coalescing support for IQD devices
d8564e19da8c8b31c7fc160942f95b113f554211 s390/qdio: allow for non-contiguous SBAL array in init_data
a8a4ee2740bb6224271f06742884ec375c42cb9e s390/qdio: inline shared_ind()
9c159bbc14ba196d590dc1a2fe7931ccfe73db98 s390/qdio: clear DSCI early for polling drivers
3050f022df6a08cb3c968b9be01c163092c568d3 s390/qdio: consolidate thinint init/exit
fb8d258049f70e6bfd4674b11deb566fb13a0839 s390/qeth: add debugfs file for local IP addresses
1d38c2e4941e1add2a89ef7abb22c918bbb3c103 s390/qeth: extract helpers for next-hop lookup
c619e9a6f52f87b405053edc5abb55d3e36a8e7b s390/qeth: don't use restricted offloads for local traffic
6ee091efa7b59829448d0f9287ea62c1f448a318 s390/qeth: set TX IRQ marker on last buffer in a group
7005b7547680963ad127c5069c6be082272105bc s390/qeth: return error when starting a reset fails
a0138f59265aff4a21356ba9319171f421575b52 s390/cio, s390/qeth: cleanup PNSO CHSC
8cebedb643832586162aa5313cae781173c1f81b s390/qeth: let isolation mode override HW offload restrictions
65878fd95261d3a831e085e2c6f1e8a6d7979b14 s390/qeth: clean up error handling for isolation mode cmds
a709423f7a3a452e5fa7442425817c1bdccd7926 s390/qdio: remove internal polling in non-thinint path
eff73e16ee116f6eafa2be48fab42659a27cb453 s390/qeth: tolerate pre-filled RX buffer
7c94a88295008f66e9a0efc1c15d8511f73a0366 s390/qeth: integrate RX refill worker with NAPI
9d6a569a4cbab5a8b4c959d4e312daeecb7c9f09 s390/qeth: strictly order bridge address events
5bf490e6807bf56f49b5991b4be817407dd32656 s390/qeth: delay draining the TX buffers
b5b5b32081cd206baa6e58cca7f112d9723785d6 i2c: mlxbf: I2C SMBus driver for Mellanox BlueField SoC
ed01ddc618fc356bbc7b702823c87ed3ada198a6 i2c: mlxbf: Add CONFIG_ACPI to guard ACPI function call
08e019e27a9ed0d6c410176cab4e029e3d233cb8 i2c: mlxbf: Fix resrticted cast warning of sparse
4b19d806ac5272bb9f64d78ca6832867870eb45d i2c: mlxbf: Remove unecessary wrapper functions
67ee9fda6ed4958f4caf8f1a3a5102a2c27ddf7b i2c: mlxbf: Update reference clock frequency
54b9c3d0cea53f84024eed11ff8b6807e2ec81bf i2c: mlxbf: Update author and maintainer email info
9890923be3a6d5e606cf4ae4f4e632a5e38cb37c i2c: mlxbf: I2C_MLXBF should depend on MELLANOX_PLATFORM
facdaa917c4d5a376d09d25865f5a863f906234a mm: proactive compaction
25788738eb9ce46fe6a0fd84a3ceef5c795d41f0 mm: fix compile error due to COMPACTION_HPAGE_ORDER
d34c0a7599ea8c301bc471dfa1eb2bf2db6752d1 mm: use unsigned types for fragmentation score
fc7db767b16cf2af3be9e87a4b88e206d0e1a8b2 Documentation: PM: Add SPDX license tags to multiple files
fc1860d6b17fa00d16df5e608eed0526e11ccad1 Documentation: PM: Unify copyright notices
f6ebbcf08f37b01827c51309a188e85165e498e7 cpufreq: intel_pstate: Implement passive mode with HWP enabled
c27a0ccc3c715c55fea6709eab2f9c6f551fcfaa cpufreq: intel_pstate: Update cached EPP in the active mode
b388eb58ce47484a330681f09d1d058fe122c744 cpufreq: intel_pstate: Tweak the EPP sysfs interface
4adcf2e5829f83cbab581ba376abb7cb6404eeb3 cpufreq: intel_pstate: Add ->offline and ->online callbacks
55671ea3257ac596abd817c4031a996b2867e586 cpufreq: intel_pstate: Free memory only when turning off
c1326210477ecc06c53221f0005c64419aba30d6 nfs,nfsd: NFSv4.2 extended attribute protocol definitions
32119446bb65da559eb6f05236086fe449d2a024 nfsd: define xattr functions to call into their vfs counterparts
23e50fe3a5e6045a573c69d4b0e3d78aa6183323 nfsd: implement the xattr functions and en/decode logic
9a67fcc8f3fd1e294922f28f20003c31d7f6cfeb nfs: add client side only definitions for user xattrs
04a5da690e8f2da23c2ac940f2921e3aa622db82 NFSv4.2: define limits and sizes for user xattr handling
b78ef845c35dbae25e57b598901a65b13d940c81 NFSv4.2: query the server for extended attribute support
3e1f02123fba086d32dfd5729e6f4e2b54654acc NFSv4.2: add client side XDR handling for extended attributes
c10a75145febb588d96c6adda6eb5ae2338e4e32 NFSv4.2: add the extended attribute proc functions.
95ad37f90c338e3fd4abf61cecfe02b6f3e080f0 NFSv4.2: add client side xattr caching.
a68d5a502bbacfbd31f98371f777d574b3a91baf SUNRPC: Refresh the show_rqstp_flags() macro
048c397aa88b8c6ebbcce8b5c480ae53773f14b9 NFSv4.2: xattr cache: get rid of cache discard work queue
638037b158df00a860251772239778a25a692b8c NFS: Add tracepoints for layouterror and layoutstats.
a5032910c5e542dddedeaa6500e5eab3f1175384 fs: nfs: delete repeated words in comments
34b09af4f54e6485e28f138ccad159611a240cc1 nfsd: fix oops on mixed NFSv4/NFSv3 client access
8dd97c65185c5a63c668e5bd8a861c04f47a35ed x86/resctrl: Rename asm/resctrl_sched.h to asm/resctrl.h
0118ad82c2a64ebcf15d7565ed35361407efadfa x86/cpu: Move resctrl CPUID code to resctrl/
923f3a2b48bdccb6a1d1f0dd48de03de7ad936d9 x86/resctrl: Query LLC monitoring properties once during boot
f3d44f18b0662327c42128b9d3604489bdb6e36f x86/resctrl: Support CPUID enumeration of MBM counter width
3723c63247854c97fe044c12a40e29043e9bbc1b treewide: convert ISO_8859-1 text comments to utf-8
ae2917093fb60bdc1ed3e5757b74801420569a9a tools/power/cpupower: Display boost frequency separately
87ce243206944a57383309dcbcdcc5750e6c905b cpupower: update German translation
41ddb7e1f79693d904502ae9bea609837973eff8 cpupower: Revert library ABI changes from commit ae2917093fb60bdc1ed3e
cbf25270933742c4a6d8671bba5c79a4e879cff3 cpupower: Fix NULL but dereferenced coccicheck errors
0585c1c06a550c2a606c33ad45954892245512f6 ACPI: Use valid link to the ACPI specification
b1d45c23284e55a379f85554a27a548b7988d47a tracing: Fix header include guards in trace event headers
a34dac0b9055202cf9c64e08d8d8dc5e23029d3a net_sched: add tracepoints for qdisc_reset() and qdisc_destroy()
f5a7833e83628f18c1ee94e6ffcb1d232f029be9 net_sched: add a tracepoint for qdisc creation
a1db217861f33b8d9ea8171bcacee51186e2d5ba net: flow_offload: fix flow_indr_dev_unregister path
ae372cb1750f6c95370f92fe5f5620e0954663ba net/sched: act_ct: fix restore the qdisc_skb_cb after defrag
5f035af76e51cd622abc6564d5512ffeb9e06917 net:qos: police action offloading parameter 'burst' change to the original value
c40f4e50b6cfc7c66f69d12c6b3fbcd954f1ded5 net: sched: Pass qdisc reference in struct flow_block_offload
5923b8f7fa218a9bccd730c0a9692635eb2fc740 net/sched: cls_flower: Add hash info to flow classification
038ebb1a713d114d54dbf14868a73181c0c92758 net/sched: act_ct: fix miss set mru for ovs after defrag in act_ct
b4868b44c5628995fdd8ef2e24dda73cef963a75 NFSv4: Wait for stateid updates after CLOSE/OPEN_DOWNGRADE
dc4b6ded3c17ebe1d7532943192b2308c031c43b s390/ap: rename and clarify ap state machine related stuff
c8337c47deb9338417c61e7a6ba7de690eb1d300 s390/ap: rework crypto config info and default domain code
91ffc519c1997520ff3435ee227d86cfaa30d037 s390/zcrypt: introduce msg tracking in zcrypt functions
0b641cbd24445e56073c69dd046be488dcf1965b s390/ap: split ap queue state machine state from device state
2ea2a6099ae3d1708f90f43c81a98cba3d4bb74c s390/ap: add error response code field for ap queue devices
4f2fcccdb547b09a4532c705078811e672fb9235 s390/ap: add card/queue deconfig state
5caa2af97118308c79f29cc9876aec3ed504f9b0 s390/ap: Support AP card SCLP config and deconfig operations
e0332629e33d1926c93348d918aaaf451ef9a16b s390/ap/zcrypt: revisit ap and zcrypt error handling
3730f5300b450bc89306c3ab79c254e6039d9197 s390/zcrypt: move ap_msg param one level up the call chain
27c4f6738bdc535e42dfc1295dadc78ab7582939 s390/zcrypt: Introduce Failure Injection feature
cf9648cb71d6f1a463553d2fcd4c8137587dc060 scsi: vmw_pscsi: use sg helper to iterate over scatterlist
70438afbf17e5194dd607dd17759560a363b7bb4 NFSv4.2: fix failure to unregister shrinker
5aca284210ce827f780ea2f4f9c6ab8d6e2d6648 vfs: create a generic checking and prep function for FS_IOC_SETFLAGS
7b0e492e6b80d51db4156996b248522c7b50d467 vfs: create a generic checking function for FS_IOC_FSSETXATTR
f991492ed11055934f1b35615cb1b435325939bf vfs: teach vfs_ioc_fssetxattr_check to check project id info
ca29be753445450799958e7d2e5d797d1153389e vfs: teach vfs_ioc_fssetxattr_check to check extent size hints
dbc77f31e58b2902a5e7643761c04bf69f57a32a vfs: only allow FSSETXATTR to set DAX flag on files and dirs
c5d4355d10d414a96ca870b731756b89d068d57a libnvdimm: nd_region flush callback support
3f666c56c6b8cc40a5e9002aac484b8f5b83c402 dax: Pass dax_dev instead of bdev to dax_writeback_mapping_range()
efbe3c2493d2f7a1e1a753780fe727b34709ebd2 fs: Remove unneeded IS_DAX() check in io_is_direct()
712b2698e4c024b561694cbcc1abba13eb0fd9ce fs/stat: Define DAX statx attribute
fc626fe322f13ecdfac58cbfa6cfea797ed22623 fs/ext4: Change EXT4_MOUNT_DAX to EXT4_MOUNT_DAX_ALWAYS
a8ab6d3885ef5e2300d683b79a9e1999403eefd9 fs/ext4: Update ext4_should_use_dax()
043546e46dc70c25ff7e2cf6d09cbb0424fc9978 fs/ext4: Only change S_DAX on inode load
9cb20f94afcd2964944f9468e38da736ee855b19 fs/ext4: Make DAX mount option a tri-state
fcebc7949cd2ff97407e5b77ed99a7211674c6de fs/ext4: Remove jflag variable
b383a73f2b832491a2f9e6e8ada26aad53b5763d fs/ext4: Introduce DAX inode flag
606723d982939ab138a05a8070b1ec48ed532234 fs/xfs: Change XFS_MOUNT_DAX to XFS_MOUNT_DAX_ALWAYS
8d6c3446ec23ecd97bc089ed224342baf9426c30 fs/xfs: Make DAX mount option a tri-state
32dbc5655f1ccb3bffa5785523146f60fa4bf905 fs/xfs: Create function xfs_inode_should_enable_dax()
840d493dff1abb0cb0d73417148a3eeecd5f30d9 fs/xfs: Combine xfs_diflags_to_linux() and xfs_diflags_to_iflags()
e4f9ba20d3b8c2b86ec71f326882e1a3c4e47953 fs/xfs: Update xfs_ioctl_setattr_dax_invalidate()
829b37b8cddb1db75c1b7905505b90e593b15db1 ext4: avoid race conditions when remounting with options that change dax
e2ec5128254518cae320d5dc631b71b94160f663 dm: Call proper helper to determine dax support
aa2f77920b743c44e02e2dc8474bbf8bd30007a2 ext4: disallow modifying DAX inode flag if inline_data has been set
5467a68cbf6884c9a9d91e2a89140afb1839c835 dcache: sort the freeing-without-RCU-delay mess for good.
b811be615cb78c90fca42bbd5b958427d03ba7e0 powerpc/watchpoint: Introduce macros for watchpoint length
c3f68b0478e7c07769394d17ebde0626600a7e1d powerpc/watchpoint: Fix ptrace code that muck around with address/len
da97e18458fb42d7c00fac5fd1c56a3896ec666e perf_event: Add support for LSM and SELinux checks
ae79d5588a04aec9dc4b0c6df700d131447306e0 perf/core: Fix !CONFIG_PERF_EVENTS build warnings and failures
18aa18566218d4a46d940049b835314d2b071cc2 perf/core: Open access to the core for CAP_PERFMON privileged process
c50c75e9b87946499a62bffc021e95c87a1d57cd perf/core: Replace zero-length array with flexible-array
58da5984d2ea6d95f3f9d9e8dd9f7e1b0dddfb3c powerpc/watchpoint: Add hw_len wherever missing
11d6011c2cf29f7c8181ebde6c8bc0c4d83adcd7 net: core: device_rename: Use rwsem instead of a seqcount
24adbc1676af4e134e709ddc7f34cf2adc2131e4 tcp: fix SO_RCVLOWAT hangs with fat skbs
ba3bb0e76ccd464bb66665a1941fabe55dadb3ba tcp: fix SO_RCVLOWAT possible hangs under high mem pressure
bd971ff0b73927b91f4520621d49d3a801ee4837 net: phy: introduce phy_read_mmd_poll_timeout macro
d3ed7c5cf79bb9099c9a3fc5c1d90b51d13a4453 net: aquantia: adding fields and device features for vlan offload
880b3ca5043d16c887cc8ad22eb6831cace048b9 net: aquantia: vlan offloads logic in datapath
1a64f8dc82b1a96baae3dc7eecbbbb6a315f1512 net: aquantia: PTP skeleton declarations and callbacks
593f7b43bd78c10f636088d3a067683e3ac376b1 net: aquantia: unify styling of bit enums
910479a9f793f47b21a01564bf9f1672029cbdfe net: aquantia: add basic ptp_clock callbacks
94ad94558b0fbf18dd6fb0987540af1693157556 net: aquantia: add PTP rings infrastructure
04a1839950d92ab6519479bc95710e89ae6cbc77 net: aquantia: implement data PTP datapath
5a1bf9ef51cfd9bbe12a5a03a12a47eeacc0ef64 net: aquantia: rx filters for ptp
7db3d07afd2c1337f784ba9d528c10e225f91aa8 net: aquantia: add support for ptp ioctls
84989af0465b4a7898eb3a2392ea382cc219cb1d net: aquantia: implement get_ts_info ethtool
dbcd6806af4200c830869fb5ccd1f193361c136f net: aquantia: add support for Phy access
9c477032f7d0beafe592e65238d8fb79341e91dc net: aquantia: add support for PIN funcs
bb1eded18d139c815f39abb77390a7040fb24b04 net: aquantia: fix var initialization warning
5eeb6c3cf26eac522df07bee1a58573804179126 net: aquantia: fix warnings on endianness
7873ee26b10bcb03553b6a26ec16b9a937a5b916 net: aquantia: disable ptp object build if no config
69977901867aefbdda5f5f75af067fff08650af2 net: aquantia: fix spelling mistake: tx_queus -> tx_queues
92d72f1b8bbbd87220daa49cd1253ce72bb7553c net: aquantia: fix unintention integer overflow on left shift
11dbb632a45a120ceb64f9f2a733992f947278c8 net: aquantia: make two symbols be static
207136dfeb3b2cde873b48d745100fa688c83f06 net: aquantia: remove unused including <linux/version.h>
76d7774e203d422edb6b8c6db800478ca029fde5 net: aquantia: fix error handling in aq_ptp_poll
1dcff44a9d2b74b3de2c854bbf11a5f765e7ba77 net: aquantia: fix return value check in aq_ptp_init()
d993e14bd872e1e30e2028cbaa0302acf2661579 net: atlantic: update firmware interface
837c637869bef28b06653462cd010ccc0c2ce984 net: atlantic: implement wake_phy feature
8aaa112a57c1d725c92dfad32c0694bd21b374d0 net: atlantic: refactoring pm logic
d1287ce4ffa1d1f121571ce90ed7ebd410e31a21 net: atlantic: adding ethtool physical identification
dc12f75afcc677f225e5465b0654c54a14945168 net: atlantic: add fw configuration memory area
ea4b4d7fc1065165874c27b8add252e04d104137 net: atlantic: loopback tests via private flags
7b0c342f1f67543f1f16099238d279584d6834e0 net: atlantic: code style cleanup
ddef55263271cd7108db3821c376e7104ba7cc5f net: atlantic: stylistic renames
8009bb1928a6d5b0ce2d8a1dba79972f01e50533 net: atlantic: update flow control logic
822cd114cd05a47b7c272de9b3a4da73114894ca net: atlantic: implement UDP GSO offload
362cabda8d4da80152c20e11502ceee6672eb1c1 net: atlantic: change email domains to Marvell
0ee0bbb018938addf87b54d447cc5633d2e53490 net: atlantic: make symbol 'aq_pm_ops' static
7b094968ccbb55da9e9fa749bdfd9b90b57d64e5 net: atlantic: make function 'aq_ethtool_get_priv_flags', 'aq_ethtool_set_priv_flags' static
ac70957ee19f198a3884e6f506d75b3f6d8a7dc9 net: atlantic: broken link status on old fw
883daa1854b61fe3d21d7d9bf2c81d26a07d586b net: atlantic: loopback configuration in improper place
b585f8602acbe2620212cbedc1760906814ff515 net: atlantic: remove duplicate entries
15beab0a9d797be1b7c67458da007a62269be29a net: atlantic: checksum compat issue
f08a464c27ca0a4050333baa271504b27ce834b7 net: atlantic: ptp gpio adjustments
b42726fcf76e9367e524392e0ead7e672cc0791c net: atlantic: better loopback mode handling
52a22f4d6ff95e8bdca557765c04893eb5dd83fd net: atlantic: possible fault in transition to hibernation
0d8c4becb40d78e480b131bca934692196c33542 net/aquantia: Delete module version
aec0f1aac58e81e88efe381dc5813e2e4d2858f2 net: atlantic: MACSec offload statistics implementation
3d464aadef75415c55a5a4feb611a9bbf034d7d3 net: atlantic: add defines for 10M and EEE 100M link mode
36e90a5297ea02c67c0f17d8b39eb9ceb93dd6f0 net: atlantic: simplify hw_get_fw_version() usage
d1ad88fe9fa9f5c3e4ecf509efb579852b44cc79 net: atlantic: move IS_CHIP_FEATURE to aq_hw.h
258ff0cf61d607e17f2e273aae3e50c1dd251dec net: atlantic: minimal A2 HW bindings required for fw_ops
5cfd54d7dc186a368af92aba0dcb8b4d4bbe8658 net: atlantic: minimal A2 fw_ops
b3f0c79cba2060c1af37b32d60eff8598391519e net: atlantic: A2 hw_ops skeleton
57fe8fd2255cd97d2c2a9b69cb5172c0f15343b8 net: atlantic: HW bindings for A2 RFP
3417368494db497c0426d1dcc46c4c459ff43ca7 net: atlantic: add A2 RPF hw_ops
ec7629e0c2217963eedb886026a71040c9d32aa9 net: atlantic: HW bindings for basic A2 init/deinit hw_ops
c1be0bf092bd292ee617622c116f5981a34cce96 net: atlantic: common functions needed for basic A2 init/deinit hw_ops
e54dcf4bba3e2c36b3eb89cd9063753c2a3ef459 net: atlantic: basic A2 init/deinit hw_ops
43c670c8e48a1817ae4b64683d7d65cad5bb0502 net: atlantic: A2 ingress / egress hw configuration
843e1396f62ed7ff57feaea9ceb3374ad42f445f net: atlantic: rename AQ_NIC_RATE_2GS to AQ_NIC_RATE_2G5
c64d7b23f51161ceb6e92f8e5b8077e8e04ddbef net: atlantic: remove TPO2 check from A0 code
ad46bd5ec357ebb18c42398d8760bad4d611b53e net: atlantic: remove hw_atl_b0_hw_rss_set call from A2 code
097d638cf4e19be208d26c6bbbca7f8da348294a net: atlantic: remove check for boot code survivability before reset request
b4de6c49e569c7ca91bf0d4c25cdb6eeca9c9529 net: atlantic: unify MAC generation
593dd0fc202eed27de07c5df9ef24a3c00cf0c09 net: atlantic: move PTP TC initialization to a separate function
8ce84271697a2346e88582480b26b7e244a8603a net: atlantic: changes for multi-TC support
a83fe6b6ad6b10f6912025ae23bd5c2596a4e7f4 net: atlantic: QoS implementation: multi-TC support
4272ba8b11f88be8daca5e2477bfe110145d559c net: atlantic: per-TC queue statistics
b9e989262a3e2e9b795361a7e7978d64851eb98f net: atlantic: make TCVEC2RING accept nic_cfg
7327699f35f8e90b32c03080b5cba4e9aa95e087 net: atlantic: QoS implementation: max_rate
14ef766b13822001087d468aa41f22caa2a42022 net: atlantic: automatically downgrade the number of queues if necessary
5479e8436f32cdbe76d63119459a7d651c1c39ed net: atlantic: always use random TC-queue mapping for TX on A2.
b64f2ac9955bcd3547329c30d8f7a55f84297df8 net: atlantic: change the order of arguments for TC weight/credit setters
2deac71ac492a6025b163701436e0aa39435a05f net: atlantic: QoS implementation: min_rate
40f05e5b0d0e6ed5cc868cd09fa976495716b8f9 net: atlantic: proper rss_ctrl1 (54c0) initialization
071a02046c262f633ef8d9064cf36fd6def6d0a5 net: atlantic: A2: half duplex support
e61b28686bae30b824b690c75d011a61f90c52dd net: atlantic: remove baseX usage
ce6a690ccc99a7ece8b061d88d9457ddb556a749 net: atlantic: A2: EEE support
3e168de529b14edd13c6842ff7bd415f25672db8 net: atlantic: A2: flow control support
2b53b04de3b185ada35155e668a24a68f6a753ba net: atlantic: A2: report link partner capabilities
ecab78703f3b87b3e21160719b08819c7cc0f4e5 net: atlantic: A2: phy loopback support
e39b8ffeb9b9a185438b6dc21bb9997f9fb29cbe net: atlantic: fix variable type in aq_ethtool_get_pauseparam
e35df2186580885c59886452c9b33f02f57ab91f net: atlantic: Replace ENOTSUPP usage to EOPNOTSUPP
ab3518acac42751f5e85c57d5d14ffcd897e1957 net: atlantic: make aq_pci_func_init static
586616cbd4663a51a53f57ad503d7a93416762c0 net: atlantic: fix typo in aq_ring_tx_clean
6ec99221d780b3b4b86cf9cdafc18699ff3d06c9 net: atlantic: missing space in a comment in aq_nic.h
8664240e303827de2d40f38fc397d1912309359c net: atlantic: add alignment checks in hw_atl2_utils_fw.c
4378b882bf03f2e0471b7d92fa97a7227ff3a126 net: atlantic: put ptp code under IS_REACHABLE check
a42e6aee7f47a8a68d09923c720fc8f605a04207 net: atlantic: fix ip dst and ipv6 address filters
23e500e88723f243c27e1b26c9d035d4cdd1b24a net: atlantic: disable PTP on AQC111, AQC112
b567edbfc85ac375181862808928aeb381560c68 net: atlantic: align return value of ver_match function with function name
0044b1e1470aa62eeabb24983e2ff5433a68666a net: atlantic: add support for FW 4.x
519f0cefb4bcac8faf76b2a7b4042fb950eea23e net: atlantic: move FRAC_PER_NS to aq_hw.h
3624aa3c2582e4b9097e7648f6f03c82e474ceb8 net: atlantic: use simple assignment in _get_stats and _get_sw_stats
b772112c5af0e45ddcacb144545f06bdc594c736 net: atlantic: make _get_sw_stats return count as return value
508f2e3dce454843ffd689bb2cf0739a954dd1e9 net: atlantic: split rx and tx per-queue stats
d7d8bb9286134bcc57941c38ed2d69c50fc59511 net: atlantic: use u64_stats_update_* to protect access to 64-bit stats
aa7e17a3e35a6e3fbf4ab2055a64097efcd09310 net: atlantic: additional per-queue stats
14b539a3490102750c86a63a8f27a69935e6a84e net: atlantic: PTP statistics
8bd60710852fffe4c32b5b7f84de2a6c19d12971 net: atlantic: enable ipv6 support for TCP LSO and UDP GSO
1e41b3fee795faa8a67713749a21e60828ae21ad net: atlantic: add support for 64-bit reads/writes
a89df867ce1a3368015ff6f85ab4a23d2a0aaba1 net: atlantic: A0 ntuple filters
8dcf2ad39fdb2d183b7bd4307c837713e3150b9a net: atlantic: add hwmon getter for MAC temperature
901f3cc1639e5103a8997f6ab243785d292e2074 net: atlantic: fix PTP on AQC10X
9553b62c1dd27df67ab2f52ec8a3bc3501887619 net: atlantic: Use readx_poll_timeout() for large timeout
059432495e209279bae12db3d2b0bc8c8fe987bb net: atlantic: fix build when object tree is separate
b5141915b5aec3b29a63db869229e3741ebce258 vxlan: Ensure FDB dump is performed under RCU
f981fc3d515a588c389242b7e3a71487b40571a5 net: openvswitch: fix to make sure flow_lookup() is not preempted
cc4e3835eff474aa274d6e1d18f69d9d296d3b76 udp_tunnel: add central NIC RX port offload infrastructure
0df960f14e17e55e68dfd1342f063d17dbcc6107 net: ethtool: Make helpers public
c7d759eb7b12f91a25f4d3cd03ff5209046ddfc2 ethtool: add tunnel info interface
966e50597666d530b69de2abb9c83ff0a9bd3ee6 udp_tunnel: add the ability to hard-code IANA VXLAN
9e2a187a93c395f573ed38b888ba4bd731e70622 RDMA: Add a dedicated CQ resource tracker function
5cc34116ccec60032dbaa92768f41e95ce2d8ec7 RDMA: Add dedicated QP resource tracker function
211cd9459fdabe9f556e539966f50825853bf262 RDMA: Add dedicated CM_ID resource tracker function
65959522f8060659e308977f09f3eb7b7af5e43f RDMA: Add support to dump resource tracker in RAW format
42a3b153966c9cd9a90f6a669d1ffed7fef2d325 RDMA: Remove the udata parameter from alloc_mr callback
263427526f0c00490c20e4940d1fd4277fb5f7b3 IB/uverbs: Enable CQ ioctl commands by default
1c8fb1ea5a1dbd2159e78fa580aaffb001794cfa IB/uverbs: Expose UAPI to query ucontext
16e51f78a9db3645d2d2dd7c0a78e7e7776b630e RDMA/core: Update write interface to use automatic object lifetime
d54f23c09ec62670901f1a2a4712a5218522ca2b RDMA/cma: Simplify DEVICE_REMOVAL for internal_id
3647a28de1ada8708efc78d956619b9df5004478 RDMA/cma: Using the standard locking pattern when delivering the removal event
cc9c037343898eb7a775e6b81d092ee21eeff218 RDMA/cma: Remove unneeded locking for req paths
f6a9d47ae6854980fc4b1676f1fe9f9fa45ea4e2 RDMA/cma: Execute rdma_cm destruction from a handler properly
928da37a229f344424ffc89c9a58feb2368bb018 RDMA/umem: Add a schedule point in ib_umem_get()
8aa64be019567c4f90d45c5082a4b6f22e182d00 RDMA/core: Fix unsafe linked list traversal after failing to allocate CQ
132db93572821ec2fdf81e354cc40f558faf7e4f docs: networking: reorganize driver documentation again
68cb1a977e5e8b9531e7bf4fbfbde5ce1d19537b platform/x86: intel_pmc_core: Add Intel RocketLake (RKL) support
19a83d36f9837e8bd27435ebb31564a717a5d15a ethtool: add and use message type for tunnel info reply
cec5f268cd02d25d2d74807843d8ae0292fe0fb7 x86/delay: Introduce TPAUSE delay
15b760c37ad3c3f2b922506eaca4ca8b4292e621 nitro_enclaves: Add ioctl interface definition
77a2d673d5c9d1d359b5652ff75043273c5dea28 tunnels: Fix off-by-one in lower MTU bounds for ICMP/ICMPv6 replies
26fa656e9a0cbccddf7db132ea020d2169dbe46e scsi: qla2xxx: Fix gnl.l memory leak on adapter init failure
d83a80ee57f0cb38baccc75e96bc56ac47d300b3 scsi: qla2xxx: Add vendor extended RDP additions and amendments
bd7de0b1c3947e176effb5f5b4a47eab79db771e scsi: qla2xxx: Add ql2xrdpenable module parameter for RDP
52bfb089d9d384a1ac0f6d94da7636eb9373a8f9 scsi: qla2xxx: Add vendor extended FDMI commands
8b01e4db834db611555cc4ec5d8d9550024361af scsi: qla2xxx: Show correct port speed capabilities for RDP command
09e382bc3dd946cfee74044d18d1886567874300 scsi: qla2xxx: Cleanup ELS/PUREX iocb fields
576bfde80b28232a1dfcf0466986ed2934146d0a scsi: qla2xxx: Add deferred queue for processing ABTS and RDP
4879237cd28eebb9350a7e6d970677997abe2b9d scsi: qla2xxx: Handle cases for limiting RDP response payload length
84f7d2e7b1f5203050b47cfa65e284182d32f203 scsi: qla2xxx: Fix RDP response size
9ef4847a80d317e4033c2ecf0e73e54c5fd4771d scsi: qla2xxx: Avoid setting firmware options twice in 24xx_update_fw_options.
37efd51f75f30b48c2d19ee94eeccfd4325c3cb4 scsi: qla2xxx: Use FC generic update firmware options routine for ISP27xx
770538c3012ac8ff92d5e4ae18850588c188c5fa scsi: qla2xxx: Fix RDP respond data format
bb46737ec09e9a072424bf46def2977c5b6b925d scsi: qla2xxx: Fix regression warnings
ab053c09ee2066a2fe62a755f1e64dbc8eddc17c scsi: qla2xxx: Cast explicitly to uint16_t / uint32_t
21038b0900d1b8728ec77d9286d7b0b57ca7b585 scsi: qla2xxx: Fix endianness annotations in header files
7ffa5b939751b6638e4a99518775c8503fbb46be scsi: qla2xxx: Fix endianness annotations in source files
ef2e3ec520a8c20661ca4e7d17a5c7110d3a7828 scsi: qla2xxx: Set NVMe status code for failed NVMe FCP request
f1e12bee55e6eb28a53662765d5d2d96fa0247b1 scsi: qla2xxx: Remove the __packed annotation from struct fcp_hdr and fcp_hdr_le
57fec9f24e580d8fe4219ee89572f49758e62c75 scsi: qla2xxx: Fix a Coverity complaint in qla2100_fw_dump()
e7019c95c40daf8e8a9fa1d5f36eabce2eb8ef6b scsi: qla2xxx: Introduce a function for computing the debug message prefix
62e9dd177732843ae6c5b9d2ed61e7c9538fa276 scsi: qla2xxx: Change in PUREX to handle FPIN ELS requests
9f2475fe7406b8ef5f97099c4980021344872d9f scsi: qla2xxx: SAN congestion management implementation
58101f1504ad9b36e34533ec1fb01a8de80aa6d6 scsi: qla2xxx: Address a set of sparse warnings
2a87d485c4cb4d1b34be6c278a1c6ce3e15c8b8a scsi: qla2xxx: Fix regression on sparc64
bef93fbfcf4ae9ecaa50e38d32cf6b8dbce4a797 scsi: qla2xxx: Remove superfluous memset()
650b323c8e7c3ac4830a20895b1d444fd68dd787 scsi: qla2xxx: Fix the size used in a 'dma_free_coherent()' call
1e98fb0f9208da058e2b6627f9f19fa0a95d05cd scsi: qla2xxx: Setup debugfs entries for remote ports
27c8aa5e1b069b7629e41bba83b522f99132a6b6 scsi: qla2xxx: Allow dev_loss_tmo setting for FC-NVMe devices
3aac0c0fde17d2fdb65c7840bdf057a681f1e035 scsi: qla2xxx: Honor status qualifier in FCP_RSP per spec
d68930bae477e864e016aeb8d557f099b4636aac scsi: qla2xxx: Reduce duplicate code in reporting speed
49db4d4e02aabcd4fa2f60142ef42e50fb2dd526 scsi: qla2xxx: Performance tweak
6152d20fa6703cf364253efc4eab31151558cb01 scsi: qla2xxx: Add rport fields in debugfs
89c72f4245a8510ffdb0d1980944210b8bc6e49f scsi: qla2xxx: Add IOCB resource tracking
cf3c54fb49a4eb5b5b83ddab0b25df47b2e958af scsi: qla2xxx: Add SLER and PI control support
44f5a37d1e3e4e392412318666f8477601ae3024 scsi: qla2xxx: Fix buffer-buffer credit extraction error
72e813d9a1b7a0a6dc6b27b563c389fbdb50cee2 scsi: qla2xxx: Fix inconsistent format argument type in qla_dbg.c
b8837a0f885184bcad347b23a3e640e5735471d7 scsi: qla2xxx: Update driver version to 10.00.00.13-k
d358042793183a57094dac45a44116e1165ac593 powerpc/pmem: Add flush routines using new pmem store and sync instruction
76e6c73f33d4e1cc4de4f25c0bf66d59e42113c4 powerpc/pmem: Update ppc64 to use the new barrier instruction.
436499ab868f1a9e497cfdbf641affe8a122c571 powerpc/pmem: Avoid the barrier in flush routines
b9d8cf2eb3ceecdee3434b87763492aee9e28845 x86/hyperv: Make hv_setup_sched_clock inline
c1135c7fd0e95740cd4619ce389f43ffce043140 Drivers: hv: vmbus: Introduce types of GPADL
a6c86e336282c67a0b04f64b3b5574794249e3e1 intel_idle: Fold intel_idle_probe() into intel_idle_init()
0755a9bd9963ec3d611129cf2cdbb3e041ccbd6a intel_idle: Move and clean up intel_idle_cpuidle_devices_uninit()
095928ae484b9f765fb4967c6cf76a2f86fc9787 intel_idle: Annotate initialization code and data structures
1aefbd7aeb7695c1a9e6ece9a1612ee88e1ea3f8 intel_idle: Move 3 functions closer to their callers
86e9466ae620824dee861f0f6ed933fcd0b449f3 intel_idle: Clean up irtl_2_usec()
4dcb78ee579cdf90e30c5a0223f6f160ea37182d intel_idle: Introduce 'states_off' module parameter
30a996fbb359ed53536a055af84a54223beabf91 intel_idle: Relocate definitions of cpuidle callbacks
7f843dd71258ca0e01674be1008eca98917f3f9f intel_idle: Add __initdata annotations to init time variables
ab1a8522d81ed79f66ba87a02046ef7523f0d702 intel_idle: Annotate init time data structures
6eb0443ac89d8f256a89bb2a14c8238b86a92a61 intel_idle: Reorder declarations of static variables
6eacb15fef4ef90b8c6467bd80b8be2de1fe1b3a intel_idle: Clean up kerneldoc comments for multiple functions
317e5ec3ecaaa2d461d3044eb6cb9cc3a59de2f2 intel_idle: Update copyright notice, known limitations and version
dab20177b626198603176604c0f85ea1d67044ef intel_idle: Eliminate redundant static variable
a472ad2bcea479ba068880125d7273fc95c14b70 intel_idle: Customize IceLake server support
eba933ceebf212127c9aa1c87a162867af9cf781 cpuidle: sysfs: Minor coding style corrections
efe9711214e6138a5a2a46ca4068bfce50c03444 cpuidle: change enter_s2idle() prototype
bf9282dc26e7fe2a0736edc568762f0f05d12416 cpuidle: Make CPUIDLE_FLAG_TLB_FLUSHED generic
8747f2022fe8d8029193707ee86ff5c792cbef9b cpuidle: Allow cpuidle drivers to take over RCU-idle
bd805274577457f301bf826f86543f550cf5c1ef cpuidle: Drop misleading comments about RCU usage
4fea49a79ece30f27ce3bb8fa9dd2a19e354e750 s390/cio: Add new Operation Code OC3 to PNSO
b983aa1f7d19a83906fb7d38d337a87fe8d7745a s390/cio: Helper functions to read CSSID, IID, and CHID
fa115adff2c16b02b2baaf9ed1869c0115cd3ca4 s390/qeth: Detect PNSO OC3 capability
10a6cfc0fc8208eff3d1dd8dce1487754213e337 s390/qeth: Translate address events into switchdev notifiers
817741a8eaa21cc46baf6c4852e4ff83204b8181 s390/qeth: Reset address notification in case of buffer overflow
780b6e7db25ed97248b7f747e98d2f7e7971156a s390/qeth: implement ndo_bridge_getlink for learning_sync
521c65b6491602622562d12e219dc6a53fcab9e2 s390/qeth: implement ndo_bridge_setlink for learning_sync
17091708d1e503383f20934631305ccb375b0eb1 mptcp: fill skb page frag cache outside of mptcp_sendmsg_frag
5c8264435d4f6a056ac926989a827aba1961e3c8 mptcp: remove inner wait loop from mptcp_sendmsg_frag
b03d2142bea8cf7407a0a668ce8f5f115bd226c4 tcp: move ipv6_specific declaration to remove a warning
9b9e2f250e3e6f59ad07e6d03838c27a100e0042 tcp: move ipv4_specific to tcp include file
d39dceca388ad0e4f748836806349ebe09282283 mptcp: add __init annotation on setup functions
2c5ebd001d4f0c64a2dfda94eb1d9b31a8863c8d mptcp: refactor token container
fa68018dc45e3faee9d866d5dc484d141e8f1093 mptcp: create first subflow at msk creation time
6bad912b7e5ab51c23d8fa8362ca2d4ceeebdb74 mptcp: do nonce initialization at subflow creation time
b416268b7a819c0508ed0dc81461e513b110f2ac mptcp: use mptcp worker for path management
96d890daad05a3e47e914451f07b79275b325c95 mptcp: add msk interations helper
6ab301c98f174a8c25d5351b977a1113e2f1fb91 mptcp: zero token hash at creation time.
0235d075a592dfde575df81f150feb0d95a5ef5c mptcp: mark as fallback even early ones
f8ace8d915b88bd1bbaac695de94650dbb25c7b4 tcp: rename request_sock cookie_ts bit to syncookie
535fb8152f313dd5d30ef84ce55b01ad9cbae3cf mptcp: token: move retry to caller
c83a47e50d8fd3825a4758158e9edd5acdc74185 mptcp: subflow: add mptcp_subflow_init_cookie_req helper
9466a1ccebbe54ac57fb8a89c2b4b854826546a8 mptcp: enable JOIN requests even if cookies are in use
0e8642cf369a37b718c15effa6ffd52c00fd7d15 tcp: fix build fong CONFIG_MPTCP=n
9d8c05ad5627b3a650087c14c67dd1d22a6368ab tcp: fix syn cookied MPTCP request socket leak
7126bd5c8bcbc015cf89864cf71d750e8f33f924 mptcp: fix syncookie build error on UP
8140860c817f3e9f78bcd1e420b9777ddcbaa629 netlink: consistently use NLA_POLICY_EXACT_LEN()
2ff0e566faa4e92cba8138c5b396d6ba96a215f1 mptcp: fix subflow's remote_id issues
6719331c2f736fba881f2ce85c8b0e37fe054c46 mptcp: trigger msk processing even for OoO data
da51aef5fe5b9ef389055f693472d4fb5a3f58f9 mptcp: basic sndbuf autotuning
ab174ad8ef76276cadfdae98731d31797d265927 mptcp: move ooo skbs into msk out of order queue.
04e4cd4f7ca4600409a898fe0abc318372c4c1ab mptcp: cleanup mptcp_subflow_discard_data()
06242e44b9fbd59be0bd4a4ed82b38f8f2c3f4b2 mptcp: add OoO related mibs
ef0da3b8a2f18f59ea310ce27696c431eeb57eab mptcp: move address attribute into mptcp_addr_info
d5f49190def61c47b2faff170ba8fbc48bac4371 mptcp: allow picking different xmit subflows
c76c6956566f974bac2470bd72fc22fb923e04a1 mptcp: call tcp_cleanup_rbuf on subflows
c2ec6bc010d2bbaa6a38fec8709890511f298e1c mptcp: Fix unsigned 'max_seq' compared with zero in mptcp_data_queue_ofo
1d39cd8cf75f79d082ee97f5fd2a6286bcc692c1 mptcp: fix integer overflow in mptcp_subflow_discard_data()
5cb104ae55e9dbffe4552cd77ded37ec8b0518cd mptcp: add the outgoing RM_ADDR support
d0876b2284cf8b34dd214b2d0aa21071c345da59 mptcp: add the incoming RM_ADDR support
6a6c05a8b016bb5c63750f91cdb6d669b5a4b14f mptcp: send out ADD_ADDR with echo flag
a877de06718f2cc81fa4083b8becf4dd59a296c0 mptcp: add ADD_ADDR related mibs
31954cd8bb667030b1c0d3d77f28fe71f06999f9 tcp: Refactor pingpong code
4a41f453bedfd5e9cd040bad509d9da49feb3e2c tcp: change pingpong threshold to 3
b6c08380860b926752d57c8fa9911fa388c4b876 mptcp: remove addr and subflow in PM netlink
0ee4261a36817c441d26ee90ad96f9cc30d678ce mptcp: implement mptcp_pm_remove_subflow
7a7e52e38a40f4f6ce8f06da601556a7669cf999 mptcp: add RM_ADDR related mibs
5c8c1640956e59797f838fb18495e3d3fb964205 mptcp: add mptcp_destroy_common helper
0abd40f823cbd3beb2889a100c2210b13a63585b mptcp: add struct mptcp_pm_add_entry
00cfd77b9063dcdf3628a7087faba60de85a9cc8 mptcp: retransmit ADD_ADDR when timeout
917944da3bfc7cb5ac3af26725af3371d3a12db0 mptcp: Consistently use READ_ONCE/WRITE_ONCE with msk->ack_seq
456afe01b10085518406022c69cfd2b718d6eaf8 mptcp: ADD_ADDRs with echo bit are smaller
674d3ab94977684392200cdb193968341d452aae mptcp: Constify mptcp_pm_ops
717f20341686245fdde9000ee09fdab5dc722477 mptcp: don't skip needed ack
d582484726c4c46c8580923e855665fb91e3463e mptcp: fix fallback for MP_JOIN subflows
0e4f35d7880157ceccf0a58377d778b02762af82 mptcp: subflows garbage collection
9c3f94e1681bb0ebd93390f014082042d8bc067a mptcp: add missing memory scheduling in the rx path
c7c4c44c9a95d87e50ced38f7480e779cb472174 net: openvswitch: expand the meters supported number
eb58eebc7fb5e23c9cc7d557c0a9236630591526 net: openvswitch: set max limitation to meters
4b36a0dff794a00989a50581aed2f94c88b57107 net: openvswitch: suitable access to the dp_meters
3dad716240f95c3e6114965b8ea95018ef1b04c9 x86/platform/uv: Remove efi=old_map command line option
cadde2379f0c64f00bb17834c7095a90595255b0 x86/efi: Delete SGI UV1 detection.
66d67fecd896370d4cbbd146c9a7bf5b4c5303af x86/efi: Remove references to no-longer-used efi_have_uv1_memmap()
6aa3baabe106fa1182f904107244147395902a09 x86/platform/uv: Remove uv bios and efi code related to EFI_UV1_MEMMAP
3bcf25a40b018e632d70bb866d75746748953fbc x86/efi: Remove unused EFI_UV1_MEMMAP code
4684abe375927e745974bfddd85e171a3eb887a5 efi/x86: Remove unreachable code in kexec_enter_virtual_mode()
9726bfcdb977d6f78074fcc5dd23003b450c1f35 misc/sgi-xp: remove SGI SN2 support
ad3bc25a320742f42b3015115384f5aec69c7ce2 x86/kernel: Fix more -Wmissing-prototypes warnings
39297dde7390e01bfd737052fbb5313a09062e2d x86/platform/uv: Remove UV BAU TLB Shootdown Handler
788b66e34e8ab82a93c63a83ba5a9d04f2f4ae26 drivers/misc/sgi-xp: Adjust references in UV kernel modules
1e61f5a95f1913c015a2d6a1544c108248b3971c x86/platform/uv: Add and decode Arch Type in UVsystab
ae5f8ce3c247b8d937782e76802a9036c09998ad x86/platform/uv: Update for UV5 NMI MMR changes
7a6d94f0ed957fb667d4d74c5c6c640a26e87c8f x86/platform/uv: Update Copyrights to conform to HPE standards
1aec69ae56be28b5fd3c9daead5f3840c30153c8 x86/platform/uv: Fix missing OEM_TABLE_ID
801284f9737883a2b2639bd494455a72c82fdedf x86/platform/uv: Recognize UV5 hubless system identifier
b2896458b850ec7cb69b054b195b4b399f7e1f22 x86/platform/uv: Drop last traces of uv_flush_tlb_others
77c7e1bc060deab6430f1dff5922ccd3093d9776 x86/platform/uv: Fix copied UV5 output archtype
1a8f0886a6008c98a926bdeca49f2ef33015a491 powerpc/perf/hv-24x7: Add cpu hotplug support
dcb5cdf60a1fbbdb3b4dd2abc562206481f09ef1 powerpc/perf/hv-gpci: Add cpu hotplug support
4db61fef16a104f94bde24fe163064b98cee6b7c arm64: kvm: Modernize __smccc_workaround_1_smc_start annotations
b11483ef5a502663732c6ca1b58d14ff9eedd6f7 arm64: Make use of ARCH_WORKAROUND_1 even when KVM is not enabled
1db5cdeccd813330aaab19b3fccab15e1d07fe12 arm64: cpufeature: add cpus_have_final_cap()
b5475d8caedb71476f999a858ea3f8c24c5f9e50 arm64: kvm: hyp: use cpus_have_final_cap()
c73433fc630cda102f6527d4e5dfd289a9baec08 arm64/cpufeature: Validate hypervisor capabilities during CPU hotplug
b130a8f70cbbf907c399799bd1073a78763ca0e7 KVM: arm64: Check advertised Stage-2 page size capability
750ed56693803e992ed09ac9c46e07226dd4d350 KVM: arm64: Remove the target table
7b2399ea5640b2e5f576af08b91091a26f240ea4 KVM: arm64: Move __smccc_workaround_1_smc to .rodata
7621712918ad4f5e6356193d9058debf657a6254 KVM: arm64: Add build rules for separate VHE/nVHE object files
f50b6f6ae131b6ee7d5dd738961eda0c00b7f027 KVM: arm64: Handle calls to prefixed hyp functions
b877e9849d41e7d2100d2933e0a3971d0ddec011 KVM: arm64: Build hyp-entry.S separately for VHE/nVHE
208243c752a7eeef4236f7b7d67e806ee356e3f8 KVM: arm64: Move hyp-init.S to nVHE
e03fa29164ec1db1a81dc0168d0017a9e0366c7c KVM: arm64: Duplicate hyp/tlb.c for VHE/nVHE
09cf57eba304246141367b95c89801fd2047ac96 KVM: arm64: Split hyp/switch.c to VHE/nVHE
d400c5b2025c9aeca76213d6bd4138ec39da5cef KVM: arm64: Split hyp/debug-sr.c to VHE/nVHE
13aeb9b400c5d7c5e979fdbbf994c787487f7889 KVM: arm64: Split hyp/sysreg-sr.c to VHE/nVHE
9aebdea494b5d2d5fe0ba54d71e9d6c5acfe76b4 KVM: arm64: Duplicate hyp/timer-sr.c for VHE/nVHE
c04dd455eb311d2d289c9d81d080eaf11a06cebf KVM: arm64: Compile remaining hyp/ files for both VHE/nVHE
c50cb04303cb88c517715b078e3e010c024af1a5 KVM: arm64: Remove __hyp_text macro, use build rules instead
f9a026e3d38ba81cd274725f1caaf64322a86aa5 KVM: arm64: Lift instrumentation restrictions on VHE
71071acfd392c51d9c0b286067033534b59f6be4 KVM: arm64: hyp: Use ctxt_sys_reg/__vcpu_sys_reg instead of raw sys_regs access
2c3db77c62b681af60757378219edcc93f658ba1 KVM: arm64: pauth: Use ctxt_sys_reg() instead of raw sys_regs access
5b78077a00f8109f7a4717b19309ef0a76d73372 KVM: arm64: debug: Drop useless vpcu parameter
e47c2055c68e06977d7d8b7dbc2f7468a36d3658 KVM: arm64: Make struct kvm_regs userspace-only
98909e6d1c811b6368c9c84fa6b3f0817c32ac2f KVM: arm64: Move ELR_EL1 to the system register array
1bded23ea71cee2053fe1dd55c5d36d35bec56aa KVM: arm64: Move SP_EL1 to the system register array
fd85b66789aaa594a158f0a8aa4482c3ed0fed3d KVM: arm64: Disintegrate SPSR array
710f1982187afd3f25413d92a0804ccd780634f7 KVM: arm64: Move SPSR_EL1 to the system register array
41ce82f63c0624556b94b90551e4f70a0c913879 KVM: arm64: timers: Move timer registers to the sys_regs file
6de7dd31ded078b31a3812a46d8874f871b4e82f KVM: arm64: Don't use has_vhe() for CHOOSE_HYP_SYM()
bdbc0c7a070c0cbe3009cd271c6ec8d87d69cc7a KVM: arm64: Ensure that all nVHE hyp code is in .hyp.text
004a01241c5a0d375266ebf1c72f208de99294e9 arm64/x86: KVM: Introduce steal-time cap
c4ad98e4b72cb5be30ea282fce935248f2300e62 KVM: arm64: Assume write fault on S1PTW permission fault on instruction fetch
620cf45f7a516bf5fe9e5dce675a652e935c8bde KVM: arm64: Remove S1PTW check from kvm_vcpu_dabt_iswrite()
61ffb3a50c4402e17ead1257914ee98fd8c6f2f8 KVM: arm64: Drop @max param from mmu_topup_memory_cache()
e539451b7e7a6cb0248b1e1b1baf8ed40ce16bac KVM: arm64: Use common code's approach for __GFP_ZERO with memory caches
c1a33aebe91d49c958df1648b2a84db96c403075 KVM: arm64: Use common KVM implementation of MMU memory caches
74cc7e0c35c1e4d7ccad27bc31c526ea0916696a KVM: arm64: clean up redundant 'kvm_run' parameters
e9ee186bb735bfc17fa81dbc9aebf268aee5b41e KVM: arm64: Add kvm_extable for vaxorcism code
88a84ccccb3966bcc3f309cdb76092a9892c0260 KVM: arm64: Survive synchronous exceptions caused by AT instructions
9998a9832c4027e907353e5e05fde730cf624b77 x86/cpu: Relocate sync_core() to sync_core.h
f69ca629d89d65737537e05308ac531f7bb07d5c x86/cpu: Refactor sync_core() for readability
bf9c912f9a649776c2d741310486a6984edaac72 x86/cpu: Use SERIALIZE in sync_core() when available
40eb0cb4939e462acfedea8c8064571e886b9773 x86/cpu: Fix typos and improve the comments in sync_core()
3ee6fb4949aad0f2164829299934a77f62b79dcd Documentation: kvm: fix some typos in cpuid.rst
320debe5ef6d4990a70535b5cf891472e6e14d93 x86/kvm: Convert to new CPU match macros
624e18f92f2ec449c2b3a6d388c0dccc45e4c4d7 KVM: VMX: Add VMX_FEATURE_USR_WAIT_PAUSE
bcfcff640c4d736933c5990d5a801d6a0c22c28b x86: vmxfeatures: rename features for consistency with KVM and manual
cc4cb017678aa66d3fb4501b2f7424ed28fc7f4d KVM: x86: use positive error values for msr emulation that causes #GP
1930e5ddcead2c23567131e62c86b15efce054be kvm: x86: reads of restricted pv msrs should also result in #GP
01b4f510b9f467abfc781e198e810e1ecffb782e kvm: x86: ensure pv_cpuid.features is initialized when enabling cap
18217da36103c25d87870624dfa569e6b9906a90 powerpc/64s/radix: Fix build failure with RADIX_MMU=n
950805f4d90eda14325ceab56b0f00d034baa8bc powerpc/book3s64/radix: Make radix_mem_block_size 64bit
b25fc491cb6aa5ec9d15a4dc32c09c9119363a52 docs: move IPMI.txt to the driver API book
283b69bf7948c2470b5b7085bf291f834f3b9d95 docs: fix references for ipmi.rst file
7c47a219b95d0e06b5ef5fcc7bad807895015eac ipmi: use vzalloc instead of kmalloc for user creation
64e5f367155fe64854a0555bfa809af45f6e7e39 powercap/intel_rapl: add support for RocketLake
b428336676dbca363262cc134b6218205df4f530 netfilter: nf_tables: nft_exthdr: the presence return value should be little-endian
1cc5ef91d2ff94d2bf2de3b3585423e8a1051cb6 netfilter: ctnetlink: add a range check for l3/l4 protonum
0c92411bb81de9bc516d6924f50289d8d5f880e5 netfilter: nft_meta: use socket user_ns to retrieve skuid and skgid
cf3266ad482d1bce2c49b6cd856a3f2d46f65023 net: openvswitch: improve the coding style
df68d64ee3f54556aca1d50607e57b3129949a42 net: openvswitch: refactor flow free function
5b8f3c8d30a6176c6be35c6ac75e22b0a60a3c43 virtio_net: Add XDP related stats
461f03dc99cf6afcc3c70aaac56c4a7eee5a62bd virtio_net: Add kick stats
ca9e83b4a55bfa1cc1395b48c3bf70381833526b virtio-net: correctly update XDP_TX counters
d46eeeaf99bcfab884e3d658e2ba1356939ea783 virtio-net: get rid of unnecessary container of rq stats
f5dd3d0c9638a9d9a02b5964c4ad636f06cf7e2c net: introduce SO_BINDTOIFINDEX sockopt
cb3f0d56e153398a035eb22769d2cb2837f29747 docs: networking: convert filter.txt to ReST
9371f86ecb60f6f1f120e3d93fe892bbb70d04c0 bpfilter: match bit size of bpfilter_umh to that of the kernel
07bf2d97d1f37e7ac8d7be2d84ff108d43556a1d xsk: Remove unnecessary member in xdp_umem
b1183b6dca3e0d59ce8fa81767def6ea6188e8ec bpfilter: check if $(CC) can link static libc in Kconfig
138d0be35b141e09f6b267c6ae4094318d4e4491 net: bpf: Add netlink and ipv6_route bpf_iter targets
15172a46fa2796c1a1358a36babd31274716ed41 bpf: net: Refactor bpf_iter target registration
ab2ee4fcb9d61fd57db70db694adbcf54662bd80 bpf: Change func bpf_iter_unreg_target() signature
3c32cc1bceba8a1755dc35cd97516f6c67856844 bpf: Enable bpf_iter targets registering ctx argument types
f95f0f95cfb7f180ed7571d4915432d5098df7ec xdp: Add frame size to xdp_buff
cf02512899805d6f3d48c0cf1825148f5d24fe71 ixgbe: Add XDP frame size to driver
d20a1676df7e4c3c23d73299159811a50e4854bc xsk: Move xskmap.c to net/xdp/
a71506a4fda92a39c8ece119876bc7ccde6d3c9d xsk: Move driver interface to xdp_sock_drv.h
2b43470add8c8ff1e1ee28dffc5c5df97e955d09 xsk: Introduce AF_XDP buffer allocation API
39d6443c8daf9fefcfcf89de7ae87240956a0b84 mlx5, xsk: Migrate to new MEM_TYPE_XSK_BUFF_POOL
0807892ecb35734b7ce6f7c29b078f1b60151c94 xsk: Remove MEM_TYPE_ZERO_COPY and corresponding code
82c41671ca4f597b6ff05bd5d118161deec26e07 xdp: Simplify xdp_return_{frame, frame_rx_napi, buff}
26062b185eee49142adc45f9aa187d909d02d961 xsk: Explicitly inline functions and move definitions
64b59025c15b244c0954cf52b24fbabfcf5ed8f6 xdp: Add xdp_txq_info to xdp_buff
7594888c782e735f8a7b110094307a4dbe7b3f03 net: add sock_bindtoindex
8ea204c2b658eaef55b4716fde469fb66c589a3d net: Make locking in sock_bindtoindex optional
171526f6fee84de0c39e2b7aa7e666ba0bbfd173 flow_dissector: Pull locking up from prog attach callback
a3fd7ceee05431d2c51ed86c6cae015d236a51f0 net: Introduce netns_bpf for BPF programs attached to netns
b27f7bb590ba835b32ef122389db158e44cfda1e flow_dissector: Move out netns_bpf prog callbacks
7f045a49fee04b5662cbdeaf0838f9322ae8c63a bpf: Add link-based BPF program attachment to network namespace
d60d81acc2c180e33244857e35ef60072573b000 libbpf: Add support for bpf_link-based netns attachment
06716e04a043aa5e010f952a823ad038054b0e5c selftests/bpf: Extend test_flow_dissector to cover link creation
bb986a50421a11bf31a81afb15b9b8f45a4a3a11 seg6: fix seg6_validate_srh() to avoid slab-out-of-bounds
9c82a63cf3701b78cd092c69c3e75ff806837194 libbpf: Fix CO-RE relocs against .text section
3b7016996c4c44db5d499d98759b82fb714bb912 flow_dissector: Pull BPF program assignment up to bpf-netns
695c12147a40181fe9221d321c3f2de33c9574ed bpf, netns: Keep attached programs in bpf_prog_array
ab53cad90eb10c9991f501ba08904680a074ef3d bpf, netns: Keep a list of attached bpf_link's
7a64135f3229a808067e4bd29be15fe6856a9ae6 libbpf: Adjust SEC short cut for expected attach type BPF_XDP_DEVMAP
1b514239e85965cc4df085180a73dd91733135f7 bpf: flow_dissector: Check value of unused flags to BPF_PROG_ATTACH
4ac2add65974e4efafb8d4ccd8fc5660417ea312 bpf: flow_dissector: Check value of unused flags to BPF_PROG_DETACH
1a1ad3c20a6fe0e8a4b570fbf835d7cc6e87a9d8 selftests: bpf: Pass program to bpf_prog_detach in flow_dissector
91d5b70273267bbae6f5d1fb4cf3510bd31ef9ff xsk: Replace the cheap_dma flag with a dma_need_sync flag
53937ff7bc776aac647d0b3004d7cd21861b0f78 xsk: Remove a double pool->dev assignment in xp_dma_map
7e0245753f1794f17de472dcf4694fa5ed527384 xsk: Use dma_need_sync instead of reimplenting it
2576f87066dc08a11cb1c05f11d1eaa02148ef9e bpf, netns: Fix use-after-free in pernet pre_exit callback
9326e0f85bfaf0578d40f5357f8143ec857469f5 bpfilter: Allow to build bpfilter_umh as a module without static library
2c9d8e01f0c6017317eee7638496173d4a64e6bc netdevsim: fix unbalaced locking in nsim_create()
1667c08a9d31c7cdf09f4890816bfbf20b685495 virtio_net: Fix out of bounds access of sq
cda6618d060b5e8afc93e691d4bcd987f3dd4393 powerpc/powernv/mce: Print correct severity for MCE error.
50dbabe06a6e1c35980154ea1fac2ed6ad28652b powerpc/powernv/mce: Print additional information about MCE error.
9ca766f9891d23743b4e1a7b1cafdc63723cd6a7 powerpc/64s/pseries: machine check convert to use common event code
a95a0a1654f16366360399574e10efd87e867b39 powerpc/pseries: Fix MCE handling on pseries
efbc4303b255bb80ab1283794b36dd5fe1fb0ec3 powerpc/pseries: Handle UE event for memcpy_mcsafe
4ff753feab021242144818b9a3ba011238218145 powerpc/pseries: Avoid using addr_to_pfn in real mode
909adfc66b9a1db21b5e8733e9ebfa6cd5135d74 powerpc/64s/hash: Fix hash_preload running with interrupts enabled
a2129f24798a993abde9b4bf8b3713b52d56c121 mm: adjust shuffle code to allow for future coalescing
6ab0136310961ebf4b5ecb565f0bf52c233dc093 mm: use zone and order instead of free area in free_list manipulators
36e66c554b5c6a9d17a229faca7a61693527b0bd mm: introduce Reported pages
b0c504f154718904ae49349147e3b7e6ae91ffdc virtio-balloon: add support for providing free page reports to host
02cf8719b8cb2b474b37bcbeee4706950b3d1d3d mm/page_reporting: rotate reported pages to the tail of the list
43b76f298f023d32273c2b9c25dd83ae02711019 mm/page_reporting: add budget limit on how many pages can be reported per pass
da10329cb057e49be7f099eb7864d16f7705f798 virtio-balloon: switch back to OOM handler for VIRTIO_BALLOON_F_DEFLATE_ON_OOM
dc39cbb4e8bcd684840885f04606a7c649bc97bc virtio-balloon: make virtballoon_free_page_report() static
43d8ce9d65a54846d378545770991e65838981e0 Provide in-kernel headers to make extending kernel easier
acb2ec3dd003b50b6fb5772057a08ec0dc45d42a kernel/Makefile: don't assume that kernel/gen_ikh_data.sh is executable
f7b101d33046a837c2aa4526cef28a3c785d7af2 kheaders: Move from proc to sysfs
1457dc9ed8da871fbbc0a2ebdaed0405eeeed0cf kheaders: Do not regenerate archive if config is not changed
b60b7c2ea9b7f854d457fefd592c77f621a86580 kheaders: remove meaningless -R option of 'ls'
7199ff7d74003b5aad1e6328bf6128cd8ceea735 kheaders: include only headers into kheaders_data.tar.xz
86cdd2fdc4e39c388d39c7ba2396d1a9dfd66226 kheaders: make headers archive reproducible
700dea5a0bea9f64eba89fae7cb2540326fdfdc1 kheaders: substituting --sort in archive creation
9a066357184485784f782719093ff804d05b85db kheaders: remove unneeded 'cat' command piped to 'head' / 'tail'
0e11773e76098729552b750ccff79374d1e62002 kheaders: optimize md5sum calculation for in-tree builds
ea79e5168be644fdaf7d4e6a73eceaf07b3da76a kheaders: optimize header copy for in-tree builds
1463f74f492eea7191f0178e01f3d38371a48210 kheaders: remove the last bashism to allow sh to run it
f276031b4e2f4c961ed6d8a42f0f0124ccac2e09 kheaders: explain why include/config/autoconf.h is excluded from md5sum
4750a171c3290f9bbebca16c6372db723a4cfa3b xfs: preserve inode versioning across remounts
0bec8b7e5ca1a629f26173691526432f9d7cf8c1 Input: remove dev_err() usage after platform_get_irq()
5fc70e350edd30fb22d2f9b4e6d680c5471890ff Input: introduce input_mt_report_slot_inactive()
966334dfc472bdfa67bed864842943b19755d192 Input: elan_i2c - only increment wakeup count on touch
238c91115cd05c71447ea071624a4c9fe661f970 x86/dumpstack: Fix misleading instruction pointer error message
acf7f4a59114471c3964f118564fe8e7a6f34bb8 platform/x86: thinkpad_acpi: lap or desk mode interface
b40813ddcd6bf9f01d020804e4cb8febc480b9e4 nbd: don't update block size after device is started
e21ee5a6b9c9d30fd07ce5bd3e4a5668a03af6d9 scsi: block: Return status code in blk_mq_end_request()
d198b34f3855eee2571dda03eea75a09c7c31480 .gitignore: add SPDX License Identifier
e96d904ede6756641563d27daa746875b478a6c8 powerpc: Replace _ALIGN_DOWN() by ALIGN_DOWN()
c1fe190c06723322f2dfac31d3b982c581e434ef powerpc: Add force enable of DAWR on P9 option
fabb2efcf0846e28b4910fc20bdc203d3d0170af KVM: PPC: Book3S HV: Fix r3 corruption in h_set_dabr()
548c54acba5bd1388d50727a9a126a42d0cd4ad0 powerpc: silence a -Wcast-function-type warning in dawr_write_file_bool
a278e7ea608bea5fe6df9b6ae91fa134655c5d2c powerpc: Fix compile issue with force DAWR
c718547e4a92d74089f862457adf1f617c498e16 powerpc/perf: Add support for ISA3.1 PMU SPRs
dc462267d2d7aacffc3c1d99b02d7a7c59db7c66 powerpc/64s: handle ISA v3.1 local copy-paste context switches
35dfb43c243b28658ef757a2b9c6454f99cfc43c KVM: PPC: Book3S HV: Set LPCR[HDICE] before writing HDEC
09f82b063aa9c248a3ef919aeec361054e7b044a powerpc/watchpoint: Rename current DAWR macros
bfe3b1945d5e0531103b3d4ab3a367a1a156d99a powerpc/perf: Ignore the BHRB kernel address filtering for P10
65156f2b1d9d5bf3fd0eac54b0a7fd515c92773c powerpc/perf: Initialize power10 PMU registers in cpu setup routine
388692e943a58f28aac0fe83e75f5994da9ff8a1 powerpc/kernel: Cleanup machine check function declarations
ffd2961bb41f797eb00b58e019b707555197275e powerpc/powernv/idle: add a basic stop 0-3 driver for POWER10
3eeacd9f4ea33546f272fcf131d6a11edbe3b4a6 powerpc/ptrace: Don't use sizeof(struct pt_regs) in ptrace code
44448640dd0df98891c5ea4695d89a4972cb4c1f powerpc: permanently include 8xx registers in reg.h
39413ae009674c6ba745850515b551bbb9d6374b powerpc/hw_breakpoints: Rewrite 8xx breakpoints to allow any address range size.
da9a1c10e2c7311e923210b6ccd9fbd1ac9132df powerpc: Move ptrace into a subdirectory.
7b99ed4e8e3acd8eb9a8bcc71b9b9273a573bdbf powerpc/ptrace: split out VSX related functions.
1b20773b00b71e361a6072d4b0ea6299e10678c9 powerpc/ptrace: split out ALTIVEC related functions.
60ef9dbd9d2ada53f488f75ae7fef13bb4962636 powerpc/ptrace: split out SPE related functions.
7c1f8db019f82e5f81bf1a84fd8b064d5d01652a powerpc/ptrace: split out TRANSACTIONAL_MEM related functions.
6e0b79750ce2f3b9c9eabbb5687f343483abdc64 powerpc/ptrace: move register viewing functions out of ptrace.c
323a780ca1fccbf467cdace6c0de25459552083f powerpc/ptrace: split out ADV_DEBUG_REGS related functions.
e08227d25a26901d13c6b597e60dffba40e2659d powerpc/ptrace: create ptrace_get_debugreg()
da529d4739abbb7681b1804c5b9bf615a5796f43 powerpc/ptrace: create ppc_gethwdinfo()
ccbed90b8207851fa759e81cc9ab083f9b6496c1 powerpc/ptrace: move ptrace_triggered() into hw_breakpoint.c
4a4ec2289a5d748cb64ff67ca8d74535a76a8436 powerpc/watchpoint: Add SPRN macros for second DAWR
a6ba44e8799230e36c8ab06fda7f77f421e9e795 powerpc/watchpoint: Introduce function to get nr watchpoints dynamically
45093b382e0ac25c206b4dcd210c6be1f5e56e60 powerpc/watchpoint/ptrace: Return actual num of available watchpoints
a18b834625d345bfa89c4e2754dd6cbb0133c4d7 powerpc/watchpoint: Provide DAWR number to set_dawr
4a8a9379f2af4c9928529b3959bc2d8f7023c6bc powerpc/watchpoint: Provide DAWR number to __set_breakpoint
c2919132734f29a7a33e1339bef8a67b11f322eb powerpc/watchpoint: Get watchpoint count dynamically while disabling them
22a214e461c5cc9428b86915d9cfcf84c6e11ad7 powerpc/watchpoint: Disable all available watchpoints when !dawr_force_enable
303e6a9ddcdc168e92253c78cdb4bbe1e10d78b3 powerpc/watchpoint: Convert thread_struct->hw_brk to an array
6b424efa119d5ea06b15ff240dddc3b4b9f9cdfb powerpc/watchpoint: Use loop for thread_struct->ptrace_bps
e68ef121c1f4c38edf87a3354661ceb99d522729 powerpc/watchpoint: Use builtin ALIGN*() macros
74c6881019b7d56c327fffc268d97adb5eb1b4f9 powerpc/watchpoint: Prepare handler to handle more than one watchpoint
30df74d67d48949da87e3a5b57c381763e8fd526 powerpc/watchpoint/xmon: Support 2nd DAWR
3190ecbfeeb2ab17778887ce3fa964615d6460fd powerpc/watchpoint: Fix 512 byte boundary limit
f6780ce619f8daa285760302d56e95892087bd1f powerpc/watchpoint: Fix DAWR exception constraint
f3c832f1350bcf1e6906113ee3168066f4235dbe powerpc/watchpoint: Fix DAWR exception for CACHEOP
8f460a8175e6d85537d581734e9fa7ef97036b1a powerpc/watchpoint: Enable watchpoint functionality on power10 guest
dc1cedca54704d336c333b5398daaf13b23e391b powerpc/dt_cpu_ftrs: Add feature for 2nd DAWR
03f3e54abd95061ea11bdb4eedbe3cab6553704f powerpc/watchpoint: Guest support for 2nd DAWR hcall
deb2bd9bcc8428d4b65b6ba640ba8b57c1b20b17 powerpc/watchpoint: Return available watchpoints dynamically
3f31e49dc4588d396023028791e36c23235e1334 powerpc/watchpoint: Remove 512 byte boundary
4759c11ed20454b7b36db4ec15f7d5aa1519af4a powerpc/watchpoint: Fix quadword instruction handling on p10 predecessors
4441eb02333a9b46a0d919aa7a6d3b137b5f2562 powerpc/watchpoint: Fix handling of vector instructions
9b6b7c680cc20971444d9f836e49fc98848bcd0a powerpc/watchpoint/ptrace: Fix SETHWDEBUG when CONFIG_HAVE_HW_BREAKPOINT=N
edc8dd99b29e4d705c45e2a3a6c01b096ee056db powerpc/watchpoint: Move DAWR detection logic outside of hw_breakpoint.c
b57aeab811db07295f646808b1b17c312d17f57d powerpc/watchpoint: Fix length calculation for unaligned target
5b905d77987de065bdd3a2906816b5f143df087b powerpc/watchpoint: Fix exception handling for CONFIG_HAVE_HW_BREAKPOINT=N
fa725cc53d353110f39a9e5b9f60d6acb2c7ff49 powerpc/watchpoint/ptrace: Introduce PPC_DEBUG_FEATURE_DATA_BP_ARCH_31
cc617ceda0ebad888d592c6789276136d61d4a88 net/mlx5: E-switch, make query inline mode a static function
c2d7712ca3852886849267d61361d5137e40ee37 net/mlx5: E-Switch, Introduce per vport configuration for eswitch modes
23bb50cf7399b4b702a34edb08f29c702cc54eb3 net/mlx5: E-Switch, Update VF vports config when num of VFs changed
4110fc59eafb4fcb462ea847f00ff8c83774672e net/mlx5: E-Switch, Refactor unload all reps per rep type
d8a2034f152a99a476c8d444456fbe652da8cfd5 net/mlx5: Don't use termination tables in slow path
249ccc3c95bd1bca17406b5b3d0474fd67220931 net/mlx5e: Add support for offloading traffic from uplink to uplink
1f3db161881b7e21efb149e0ae8152b79a571a8f IB/mlx5: Generally use the WC auto detection test result
2152862298fbfd237d37c231dfca8ae8f3ed0e48 IB/mlx5: Limit the scope of struct mlx5_bfreg_info to mlx5_ib
0a2fd01c28ae490a639a32a52b81fb2df48b92a0 IB/mlx5: Move to fully dynamic UAR mode once user space supports it
84be2fdae4f80b7388f754fe49149374a41725f2 net/mlx5: Fix condition for termination table cleanup
7f4957be0d5b83c8964491863202136c916107ae thermal: Use mode helpers in drivers
bbcf90c0646ac797700269fa6645a6a46466c79f thermal: Explicitly enable non-changing thermal zone devices
5d7bd8aa7c35873f448d60ffbd996cfa151d2a11 thermal: Simplify or eliminate unnecessary set_mode() methods
f5e50bf4d3ef0aba4d5414c9ed51fa4a02e2ed12 thermal: Rename set_mode() to change_mode()
392573b73ee3373408e8b4c835d7cb3a241ec002 thermal: rcar_thermal: Add missing braces to conditional statement
03ef055fd364e498c0633c163e7b0b0a52418e96 arm64: move memstart_addr export inline
abb77f3d96407cf30c2068f4a23a14b9540a1c1f arm64: tishift: use asm EXPORT_SYMBOL()
23fe04c0c58c0432d26fd9c8d974d2fd9ab8a493 arm64: smccc: use asm EXPORT_SYMBOL()
56c08ec5162c7cf87632c59714ac625e7d54106a arm64: uaccess: use asm EXPORT_SYMBOL()
ac0e8c72b03b0e2634a355b99e1d3b780090c403 arm64: string: use asm EXPORT_SYMBOL()
dbd3196299fe5878caf43f6637ee08feb0942411 arm64: frace: use asm EXPORT_SYMBOL()
2a9cee5b7a7e39245b835403520f5e80de537130 arm64: remove arm64ksyms.c
bbbc7aa45eefd4ef7ffbd5ee3bb49bd8b68a2213 selftests: add test script for bareudp tunnels
1ccd58331f6f2af73758e572f8aa0215b0cacc0e selftests: disable rp_filter when testing bareudp
e865802357086b36632acf3e629f726f089a6769 selftests: set conf.all.rp_filter=0 in bareudp.sh
350e7ab92da8420fe97e1edf040db8c9bab750f8 net: Removed the device type check to add mpls support for devices
62ffc589abb176821662efc4525ee4ac0b9c3894 net: refactor bind_bucket fastreuse into helper
2fbc6e89b2f1403189e624cabaf73e189c5e50c6 ipv4: Update exception handling for multipath routes via same device
b38e7819cae946e2edf869e604af1e65a5d241c5 icmp: randomize the global rate limiter
7e890c37c25c7cbca37ff0ab292873d8146e713b block: add a return value to set_capacity_revalidate_and_notify
7e7986f9d3ba69a7375a41080a1f8c8012cb0923 block: use gcd() to fix chunk_sectors limit stacking
3ee16db390b42b8a21f2ad2ea2518f3469c6e532 dm: fix IO splitting
65f33b35722952fa076811d5686bfd8a611a80fa block: fix incorrect branching in blk_max_size_offset()
26bfe3d0b227ab6d38692640b44ce48f2d857602 ntb: intel: Add Icelake (gen4) support for Intel NTB
134a86545c6072c049a2c6e77d6843e650df511d ntb: intel: add hw workaround for NTB BAR alignment
893733c58d59f43e4c5219bf9ab9e9d39bb14289 ntb: intel: fix static declaration
17ec0a17e90f4b761025a6b80c8d458b9d5f9ddd sparc: Use fallthrough pseudo-keyword
090efe00ab077a669ff65a48b0b749723979b228 net: qede: correct existing SPDX tags
c4fad2a5323d991eb80fbd1197e9bb57162eb776 net: qede: update copyright years
ae7e69379fd5a87141fd8c7f2efab8e73f2a9f7e qed: add support for Forward Error Correction
a396818c080db0fb0be046225aeafad02459ccae qed: add support for new port modes
99785a87fc7d27207c7dca0f0fe04386f1981690 qed: add support for the extended speed and FEC modes
f35535f73c1c7538c26e3468562ca08ecfce9735 qede: reformat several structures in "qede.h"
4c2bacbea1a3d49b836d2554383925bcf453d22c qede: refactor XDP Tx processing
d1b25b79e162b23ec1bbdfb13bda7154b1f46cfb qede: add .ndo_xdp_xmit() and XDP_REDIRECT support
e87f53b4fab72f95952c17f672088e082e8e79ab selftests: add some benchmark for UDP GRO
3327a9c46352f111697d93d6134e7bf37c6bffca selftests: add functionals test for UDP GRO
9c549a6b057386df478e4307902cbc84f1eee058 selftests: add explicit test for multiple concurrent GRO sockets
1d0795ea9ca37be0fa0823776e0367b8fc398c91 selftests: explicitly require kernel features needed by udpgro tests
0c5edd77a21dc863aa7639ea07c9d7a5b15f62f9 selftests/net: replace obsolete NFT_CHAIN configuration
ada641ff6ed34a125fbf62ec79733352ffd4305d selftests: fixes for UDP GRO
79ebc3c26010eba3b6eaaad0efdf1f8ec19aaf9d net/udpgso_bench_tx: options to exercise TX CMSG
db63e489c7aa03bab86960d6bcb6bf1fad8eea4e selftests: extend zerocopy tests to udp
ade90d69ffefd99e5e655ec6d976a96f010bb5b3 net/udpgso_bench.sh add UDP GSO audit tests
4ffc37f5c07791ffe1de59a7c08fdf8d7f585a60 net/udpgso_bench.sh test fails on error
22f1a38a547b5ce5e73b0a77339cbf23f70dee5d selftests/net: make udpgso_bench skip unsupported testcases
6254e5c6a8d7c19e51e671e2648de2db06f8d504 selftests: net: test that listening sockets match on address properly
11fb60d1089f52dd9003d02cf2590c9b56eda840 selftests: net: reuseport_addr_any: add DCCP
3f2eadb10886340f4d67fe683c2e53b4df005461 selftests: net: refactor reuseport_addr_any test
fa2323325e8b0c61ded1e3d2c6f12f3aa43c4e30 selftests: net: reuseport_addr_any: silence clang warning
83a9b6f639e9f6b632337f9776de17d51d969c77 selftests/net: add definition for SOL_DCCP to fix compilation errors for old libc
6baec880d7a53cbc2841123e56ee31e830df9b49 kasan: turn off asan-stack for clang-8 and earlier
ebb6d35a74ce21ce1673b8f404c1039d5a1e7e2d kasan: remove clang version check for KASAN_STACK
7771bdbbfd3d6f204631b6fd9e1bbc30cd15918e kasan: remove use after scope bugs detection.
bcf6f55a0d05eedd8ebb6ecc60ae3f93205ad833 kasan: fix kasan_check_read/write definitions
7d8ad890dad00f6cd64bfb44d9be4fceb10cf819 mm/kasan: introduce __kasan_check_{read,write}
b5f6e0fc7d60e0234dac82498e90dfe9027bad1f mm/kasan: change kasan_check_{read,write} to return boolean
68ad4a3304335358f95a417f2a2b0c909e5119c4 mm/vmalloc.c: keep track of free blocks for vmap allocation
bb850f4dae4abb18c5ee727bb2d6df9ca47ede49 mm/vmap: add DEBUG_AUGMENT_PROPAGATE_CHECK macro
a6cf4e0fe3e740ed7af39fdda721e1ac12247dd3 mm/vmap: add DEBUG_AUGMENT_LOWEST_MATCH_CHECK macro
2c9292336a09f7bf019689580ceea9a2d116b999 mm/vmalloc.c: avoid bogus -Wmaybe-uninitialized warning
5336e52c9e46afa69b7a85a0a091f0e4daa23d6e mm/vmalloc.c: fix percpu free VM area search criteria
dd3b8353bae79395b12a178de057b183ff0122eb mm/vmalloc: do not keep unpurged areas in the busy tree
688fcbfc06e4fdfbb7e1d5a942a1460fe6379d2d mm/vmalloc: modify struct vmap_area to reduce its size
cacca6baf0b0a2dfe8eb3430b5f81916f35284cc mm/vmalloc.c: remove "node" argument
82dd23e84be3ead53b6d584d836f51852d1096e6 mm/vmalloc.c: preload a CPU with one object for split purpose
54f63d9d8a39118486eb8a7168cda5845240c3d2 mm/vmalloc.c: get rid of one single unlink_va() when merge
460e42d19a13d49455c5b269e8e0a1b1d522a895 mm/vmalloc.c: switch to WARN_ON() and move it under unlink_va()
81f1ba586e393ad43350bded96d1ec3c48674b00 mm/vmalloc: remove preempt_disable/enable when doing preloading
e36176be1c3920a487681e37158849b9f50189c4 mm/vmalloc: rework vmap_area_lock
3c5c3cfb9ef4da957e3357a2bd36f76ee34c0862 kasan: support backing vmalloc space with real shadow memory
2e7d31704c7fe9141b0b27ec1ece254d9993fe2d mm/kasan/common.c: fix compile error
d98c9e83b5e7ca78175df1b13ac4a6d460d3962d kasan: fix crashes on access to memory mapped by vm_map_ram()
e218f1ca3971e5bcaae1fe8e6f007f9a206e32e9 kasan: use apply_to_existing_page_range() for releasing vmalloc shadow
57ee58e39321ab4ac3f2949b90117786726cb216 kasan: No KASAN's memmove check if archs don't have it.
8cceeff48f23eede76de995df08cf665182ec8fb kasan: detect negative size in memory operation function
8a16c09edc58982d56c49ab577fdcdf830fbc3a5 kasan: consistently disable debugging features
33cd65e73abd693c00c4156cf23677c453b41b3b kasan: disable branch tracing for core runtime
ca734cc67e3c8ce20eb75dd1e45ae86e10be102b kasan: fix clang compilation warning due to stack protector
34c881745549e78f31ec65f319457c82aacc53bd rcu: Support kfree_bulk() interface in kfree_rcu()
613707929b304737e6eb841588772f1994f6702b rcu: Add a trace event for kfree_rcu() use of kfree_bulk()
9154244c1ab6c9db4f1f25ac8f73bd46dba64287 rcu/tree: Add a shrinker to prevent OOM due to kfree_rcu() batching
a6a82ce18ba443186545d3fefbee8b9419a859dc rcu/tree: Count number of batched kfree_rcu() locklessly
8e11690d2f5a9823d66f68918c3986b4e9e160ab rcu: Fix a kernel-doc warnings for "count"
8ac88f7177c75bf9b7b8c29a8054115e1c712baf rcu/tree: Keep kfree_rcu() awake during lock contention
4d2919411867848fab78c7cb13139e17ad8b85bc rcu/tree: Skip entry into the page allocator for PREEMPT_RT
594aa5975b9b5cfe9edaec06170e43b8c0607377 rcu/tree: Repeat the monitor if any free channel is busy
446044eb9c9c335d3ae1be4665193ab43ebb284e rcu/tree: Make debug_objects logic independent of rcu_head
3af84862817403d317dc33312e7a88d76e79401a rcu/tree: Simplify KFREE_BULK_MAX_ENTR macro
952371d6fc0bc360d1d5780f86bb355836117ca2 rcu/tree: Move kfree_rcu_cpu locking/unlocking to separate functions
69f08d3999dbef1553a3332b8055282dd3893b6c rcu/tree: Use static initializer for krc.lock
53c72b590b3a0afd6747d6f7957e6838003e90a4 rcu/tree: cache specified number of objects
5f3c8d620447d509e534962e23f7edfb85f4e533 rcu/tree: Maintain separate array for vmalloc ptrs
64d1d06ccb1b7de245ccf781b91517f328bebd9f rcu/tiny: support vmalloc in tiny-RCU
c408b215f58f7156bb6bafb64c0263ee907033df rcu: Rename *_kfree_callback/*_kfree_rcu_offset/kfree_call_*
3042f83f19bec2e0cd356f72b39e4d816e8cd5ff rcu: Support reclaim for head-less object
26e760c9a7c8ec31fa1a6bfbbce3f63f189ccef0 rcu: kasan: record and print call_rcu() call stack
e4b7818b9aa8fa8dfd5fc7bb98f0d4c16b50fd8b kasan: record and print the free track
7b861a53e46b6b42ab8560b105af308cb72d7285 kasan: Bump required compiler version
acf7b0bf7dcf5a96d9b44a0997227c7210d995c1 kasan: Fix required compiler version
7a3767f83f173f9df9af9eb04959abe2966d4cc8 kasan: improve and simplify Kconfig.kasan
ac4766be5e2d103ebf5d3f2ff676f866f6a56d44 kasan: update required compiler versions in documentation
253a496d8e57275d458eb3c988470525b0b2c545 kasan: don't assume percpu shadow allocations will succeed
72a2fbda53d057081d0bca2db221995435fb0d1e rcu/tree: docs: document bkvcache new members at struct kfree_rcu_cpu
548c4940b9f1f527f81509468dd60b61418880b6 net: ena: Implement XDP_TX action
913b0bfd6c859aaf1735e1c8c69731e1d5359d31 net: ena: Add first_interrupt field to napi struct
cad451dd2427d6ddd38a411e688def499daa798d net: ena: remove set but not used variable 'rx_ring'
dfdde1345bc124816f0fd42fa91b8748051e758e net: ena: fix continuous keep-alive resets
32109c7065a2dd9382d77706486cfd5d0cf700d2 net: ena: Make some functions static
08fc1cfd2d250be853d33d6505ae11ff52b83b74 ena: Add XDP frame size to amazon NIC driver
0a39a35f3f27f833282a2a87c26894167f336ba2 net: ena: cosmetic: code reorderings
1b698fa5d8ef958007c455e316aa44c37ab3c5fb xdp: Rename convert_to_xdp_frame in xdp_convert_buff_to_frame
cd07ecccba13b8bd5023ffe7be57363d07e3105f net: ena: xdp: XDP_TX: fix memory leak
3921a81c31df6057183aeb7f7d204003bf699d6f net: ena: xdp: update napi budget for DROP and ABORTED
d89d8d4db48b42d22c5b0e0e8a3f82dd00262c44 net: ena: Fix using plain integer as NULL pointer in ena_init_napi_in_range
1e5ae3507225f5560e45817155e77f496473850c net: ena: avoid unnecessary rearming of interrupt vector when busy-polling
79890d3f3cde559e0fc5a50cf77176dfcf64b6c9 net: ena: cosmetic: satisfy gcc warning
0f505c604e4ffd2ddc7cf06583ac169c443b8f68 net: ena: add support for traffic mirroring
0ee60edf4669cd8c466a532c233fcd6281da9892 net: ena: enable support of rss hash key and function changes
c29efeae37077f4bcb2ecd710fc66ca72c43ec79 net: ena: move llq configuration from ena_probe to ena_device_init()
8b147f6f3e7de4e51113e3e9ec44aa2debc02c58 net: ena: Change WARN_ON expression in ena_del_napi_in_range()
1396d3148bd250db880573f9ed0abe5d6fba1fce net: ena: fix packet's addresses for rx_offset feature
f1d9b23cabc61e58509164c3c3132556476491d2 audit: purge audit_log_string from the intra-kernel audit API
ba59eae723857257a791618092d8022ad82efaa4 audit: fix macros warnings
8066021915924f58ed338bf38208215f5a7355f6 ethtool: provide UAPI for PHY Signal Quality Index (SQI)
1ae71d997a672739b22572cbe72d61a0eed8c42c ethtool: fix error handling in linkstate_prepare_data()
ecc31c60240b9808a274befc5db6b8a249a6ade1 ethtool: Add link extended state
23d828fc3f1e309bbc23bab817e6b5c40b06d9b9 gfs2: rename variable error to ret in gfs2_evict_inode
6e7e9a505571db3edc926f4bc972c7ed3da29a9d gfs2: factor evict_unlinked_inode out of gfs2_evict_inode
53dbc27eb18999619766ff994d2b33c4655c5588 gfs2: further simplify gfs2_evict_inode with new func evict_should_delete
d90be6ab9ad76d4f5492e15b73b9cca5cbb03f91 gfs2: factor evict_linked_inode out of gfs2_evict_inode
0a0d9f55c211d7a03b8ec5ad2d8f5b3062b4387c gfs2: simplify the logic in gfs2_evict_inode
4c0e8dda608a51855225c611b5c6b442f95fbc56 gfs2: move setting current->backing_dev_info
6e5e41e2dc4e4413296d5a4af54ac92d7cd52317 gfs2: fix O_SYNC write handling
f92970c694b36a4dbac2b650b173c78c0f0954cc devlink: add timeout information to status_notify
6700acc5f1fe97b5705832f2678cba9e9756a0dc devlink: collect flash notify params into a struct
ec44e72b73b74af489196352152e53a20c8ad5eb net/mlx5: Open-code create and destroy QP calls
73a75b96fc9a79779ad7491b61d65f0bbae04d11 net/mlx5: Remove empty QP and CQ events handlers
f93f4f4f31492468d5c6903e35cc0e31a9cb2c48 net/mlx5: Remove extra indirection while storing QPN
c89da067a2e4d0f94f0f314c2918dca50348789c net/mlx5: Read embedded cpu bit only once
e08a6832f9c19a1b514675ee53a34736647f918a net/mlx5: Update eswitch to new cmd interface
e0b4b4722dfac09658d1519b296cf8dc349a2451 net/mlx5: Update transobj.c new cmd interface
6eb7edffb28558aaa3a3e625ac9dcd40fc603bc6 RDMA/mlx5: Organize QP types checks in one place
2242cc25ce82058986ff7721e3d2464d775032df RDMA/mlx5: Perform check if QP creation flow is valid
9c2ba4ede4c0166d4e3bdc15e3b32c9680309ca1 RDMA/mlx5: Prepare QP allocation for future removal
c86936e6eb13bf3759e4cc0629ccc0076dd763de RDMA/mlx5: Avoid setting redundant NULL for XRC QPs
318d2b06fbaa8fbce379a4e00901251b6368b4e3 RDMA/mlx5: Set QP subtype immediately when it is known
47c806121a515bfee3180cced40af25cbf2ac10c RDMA/mlx5: Separate create QP flows to be based on type
2fdddbd5c966c1ff7e35b0e4d1fa4b951d0f5542 RDMA/mlx5: Move DRIVER QP flags check into separate function
2dfac92dbb5d6e7607d5a4d3dc9d750f45440d98 RDMA/mlx5: Remove second copy from user for non RSS RAW QPs
5d0dc3d96c7b3bc6bc175754abcb132a1c94d02b RDMA/mlx5: Initial separation of RAW_PACKET QP from common flow
2be08c308f102eeaee7ffc4a0d08ecee82b77f9d RDMA/mlx5: Delete create QP flags obfuscation
2978975ce7f16131ddf70468f0b189231e33086b RDMA/mlx5: Process create QP flags in one place
c95e6d53970254fa04a09c0fd79ae2cfa54cd1f5 RDMA/mlx5: Use flags_en mechanism to mark QP created with WQE signature
90ecb37a751b6923bee846c4e19f73b943c6ffa1 RDMA/mlx5: Change scatter CQE flag to be set like other vendor flags
a8f3ea61e1c826a1f882b3fffbb052390ddee310 RDMA/mlx5: Return all configured create flags through query QP
37518fa49f764516ba68fcc6ec933066bb545276 RDMA/mlx5: Process all vendor flags in one place
3ae7e66a019e18896c46fcbb7ae28bfc343331c4 RDMA/mlx5: Delete unsupported QP types
7aede1a25f4b84318e8a266d7b830a5ed554e370 RDMA/mlx5: Store QP type in the vendor QP structure
266424eba6c90ab8b12cf73aae00f1b08c0619cf RDMA/mlx5: Promote RSS RAW QP attribute check in higher level
5ce0592b0ee56e41f1a4a164ac2f54dbfbbf5e49 RDMA/mlx5: Combine copy of create QP command in RSS RAW QP
76883a6cc1459b2aa1e96e1eaa19aa37221c2406 RDMA/mlx5: Remove second user copy in create_user_qp
21aad80b17e6d17adf99bf17482a5314bcb0aebb RDMA/mlx5: Globally parse DEVX UID
04bcc1c2d0d7bfa0bffa5853d9a127fb4f4cd943 RDMA/mlx5: Separate XRC_TGT QP creation from common flow
98fc1126c4161450f215254409e5539314b54a04 RDMA/mlx5: Separate to user/kernel create QP flows
747c519cdbe4a3f6a616d50c19bcb97413abe384 RDMA/mlx5: Reduce amount of duplication in QP destroy
f78d358cec9088ed77b5129c44f858cdfdb1e8c9 RDMA/mlx5: Group all create QP parameters to simplify in-kernel interfaces
5d6fffed1cfd0c368a9089acb9fcc902c649c31c RDMA/mlx5: Promote RSS RAW QP flags check to higher level
6f2cf76e6ec7885de116cfc9c08057f2f7873629 RDMA/mlx5: Handle udate outlen checks in one place
08d53976609aec17f28872423d3a3e86ad1a3ec4 RDMA/mlx5: Copy response to the user in one place
6367da46d3cb03ff717457875bd01dda7b02a1ff RDMA/mlx5: Remove redundant destroy QP call
968f0b6f9c01bdf772a4c04ee1fe08971d65af14 RDMA/mlx5: Consolidate into special function all create QP calls
5163b2743ae00bf428a8a7e06839943b2f3965ed RDMA/mlx5: Refactor affinity related code
cfc1a89e449c02207952c72a4c0394691fdedf43 RDMA/mlx5: Set lag tx affinity according to slave
029e88fd1e6142ded73f07e2baef3e8a2a87e0ed RDMA/mlx5: Move all WR logic from qp.c to separate file
42caf9cb59370cc6f296c7a9fe39fa66963236ff RDMA/mlx5: Allow only raw Ethernet QPs when RoCE isn't enabled
52c81f47f0d2680f0b2e7b61c1fa4d8ad35f3020 RDMA/mlx5: Remove duplicated assignment to variable rcqe_sz
c75a33c84b83ffbb8b8b58a6bf4dea69dba21326 net: remove newlines in NL_SET_ERR_MSG_MOD
b9019507aa6e3e6a039573eb6743b38bf846771b RDMA/mlx5: Refactor DV create flow
8c112a5f29a343f89072bed4b9fa176fea226798 RDMA/mlx5: Add support in steering default miss
f29de9eee78253d9ae57cd58a6b21eed021742c8 RDMA/mlx5: Add support for drop action in DV steering
3e09a427ae7ac347e08dca5ffac64c902860d675 RDMA/mlx5: Get ECE options from FW during create QP
e383085c24255821e79d3c2aa6302d804b6a1c48 RDMA/mlx5: Set ECE options during QP create
f18e26af6aba778b888044859d9c69bb9bbc7bc1 RDMA/mlx5: Convert modify QP to use MLX5_SET macros
5f62a521ff20e0b47a8d33421334bd245d6714ff RDMA/mlx5: Set ECE options during modify QP
50aec2c3135efd985291adc2e4d1278d52b03de9 RDMA/mlx5: Return ECE data after modify QP
7e51891a237f9ea319f53f9beb83afb0077d88e6 net/mlx5e: Use netdev events to set/del egress acl forward-to-vport rule
d34eb2fcd00472323d9e26ee0aec498c2c6f5b6f net/mlx5e: Offload flow rules to active lower representor
d97555e1452943264295cd3c1f066474bc3660dd net/mlx5e: Add bond_metadata and its slave entries
133dcfc577eaec6538db4ebd8b9205b361f59018 net/mlx5: E-Switch, Alloc and free unique metadata for match
88e96e533cfa11e996c59a44bbb6b0e0b9891970 net/mlx5e: Slave representors sharing unique metadata for match
9728366f53d283be943ee99d5989f155e55fc077 net/mlx5e: Use change upper event to setup representors' bond_metadata
fca533041aac0426f5b5618a564aeb588fc125e9 net/mlx5e: Optimize performance for IPv4/IPv6 ethertype
802dcc7fc5ec0932bea0f33db046cc744aecf233 RDMA/mlx5: Support TX port affinity for VF drivers in LAG mode
56e2287b4110fbb81456a346b1d4c12bee7cf044 mlx5: fix xdp data_meta setup in mlx5e_fill_xdp_buff
6512f11d386c7cf83a48e71cfd7c7c1b0003c151 RDMA/mlx5: Return an error if copy_to_user fails
92cd667c0e8a67de024134be0a6f0bdb320606a8 RDMA/mlx5: Don't rely on FW to set zeros in ECE response
a645a89d9a780a8fbb6e283f84fc91ad538c2edc RDMA/mlx5: Return ECE DC support
2ef5612391f0a7a631c42a8afc867095b49a1992 RDMA/mlx5: Remove duplicated assignment to resp.response_length
4f5747cf8e5947479a27a3597829e45d6d8d73e0 RDMA/mlx5: Fix -Wformat warning in check_ucmd_data()
ab183d460daac6292cb0cfd989d88b37b2437844 RDMA/mlx5: Add missed RST2INIT and INIT2INIT steps during ECE handshake
6c41965d647a97b51ff665c7406ec9435aab7fc1 RDMA/mlx5: Don't access ib_qp fields in internal destroy QP path
2c0f5292d5358c2c5576146071d641110c3c1612 RDMA/mlx5: Remove ECE limitation from the RAW_PACKET QPs
9e0dc7b9e1cbc9cd0dc4ab2377c0536d4b18bedc RDMA/mlx5: Fix integrity enabled QP creation
6eefa839c4dddf2149e9f5f6f1aa3e1191c8db9c RDMA/mlx5: Protect from kernel crash if XRC_TGT doesn't have udata
f81b4565c1108fb954f344e6b4a153c8189e57fe RDMA/mlx5: Fix legacy IPoIB QP initialization
0a03715068794e4b524f66ebbf412ab1f2933f3f RDMA/mlx5: Set PD pointers for the error flow unwind
21083309cab1a66877b410cd61340b5dd7cf4875 net/mlx5e: Fix slab-out-of-bounds in mlx5e_rep_is_lag_netdev
81530ab08ef002f90b7dc68f5a69816b0e3be803 RDMA/mlx5: Allow providing extra scatter CQE QP flag
7fa84b5708cf359efe43ce99fd1f3c8765cacd23 RDMA/mlx5: Initialize QP mutex for the debug kernels
9e8d13697c38a86e0fcf1bb20d419e3d6103e085 powerpc/perf: Add new power PMU flag "PPMU_P10_DD1" for power10 DD1
d69ea414c9b498064d4cd3ebbe2fd4b8298568bc ice: implement device flash update via devlink
78116e979ddc4928398420aa986fd283db23c361 ice: cleanup VSI on probe fail
ccb5942addd7f9713d643a8a6f0d7eabc51488b2 ice: simplify the return expression of ice_finalize_update()
0ec86e8e82b57cfb2f83a9de14732002816d3282 ice: increase maximum wait time for flash write commands
48d40025b5392dc9010eec3c99a5a4b6e5a29d1e ice: refactor devlink_port to be per-VSI
372a1786283e50e7cb437ab7fdb1b95597310ad7 IB/srpt: Fix memory leak in srpt_add_one
8fed62000039058adfd8b663344e2f448aed1e7a x86/mm: Break out kernel address space handling
92eac16819e47ab919bd8f28ed49f8fadad0954e docs/mm: vmalloc: re-indent kernel-doc comemnts
a862f68a8b360086f248cbc3606029441b5f5197 docs/core-api/mm: fix return value descriptions in mm/
a75d4c33377277b6034dd1e2663bce444f952c14 filemap: kill page_cache_read usage in filemap_fault
6b4c9f4469819a0c1a38a0a4541337e0f9bf6c11 filemap: drop the mmap_sem for all blocking operations
0001e5aa5c028c11570f2e641f0198287f4808ba powerpc/mm: make gup_hugepte() static
39656e83dab918861931ef96e5c41731b0899e56 mm: lift the x86_32 PAE version of gup_get_pte to common code
67a929e097b774c69253c8b61ef9eb8a42b463a3 mm: rename CONFIG_HAVE_GENERIC_GUP to CONFIG_HAVE_FAST_GUP
050a9adc64383aed3429a31432b4f5a7b0cdc8ac mm: consolidate the get_user_pages* implementations
cbd34da7dc9afd521e0bea5e7d12701f4a9da7c7 mm: move the powerpc hugepd code to mm/gup.c
01a369160bbea43727aa2b99877f86ebddba9acc mm: switch gup_hugepte to use try_get_compound_head
520b4a4496f12b117b94f3ac7c493651881c5fe3 mm: mark the page referenced in gup_hugepte
6cf5354c1c4b74fd2e5527db084f163e9d4dae4e vfio/type1: untag user pointers in vaddr_get_pfn
89b15332af7c0312a41e50846819ca6613b58b4c mm: drop mmap_sem before calling balance_dirty_pages() in write fault
a43e982082c24c2f5c0b139daac9657ac352eed3 mm/gup: factor out duplicate code from four routines
c4237f8b1f4f2857c3079c99f69d971f883dd69c mm: fix get_user_pages_remote()'s handling of FOLL_LONGTERM
3567813eae5e9b4d02dc227e2060e85abc912045 vfio: fix FOLL_LONGTERM use, simplify get_user_pages_remote() call
eddb1c228f7951d399240a0cc57455dccc7f8777 mm/gup: introduce pin_user_pages*() and FOLL_PIN
dfa0a4fff11b32740c67fb0baf219702b978fc51 IB/{core,hw,umem}: set FOLL_PIN via pin_user_pages*(), fix up ODP
19fed0dae94dbe66235c116a0e058712d8bc291c vfio, mm: pin_user_pages (FOLL_PIN) and put_user_page() conversion
f1f6a7dd9b53aafd81b696b9017036e7b08e57ea mm, tree-wide: rename put_user_page*() to unpin_user_page*()
5c72feee3e45b40a3c96c7145ec422899d0e8964 mm/filemap.c: don't bother dropping mmap_sem for zero size readahead
94202f126f698691f8865906ad6a68203e5dde8c mm/gup: require FOLL_GET for get_user_pages_fast()
4628b063d2180c2bf142a3f6b762778c0a2d9ab0 mm/gup: rename nr as nr_pinned in get_user_pages_fast()
39678191cd8988c811813baf4c97b43bf46094e4 x86/mm: use helper fault_signal_pending()
dde1607248328cdb7570e3a252e8fb76b3411d66 mm: introduce FAULT_FLAG_DEFAULT
c270a7eedcf278304e05ebd2c96807487c97db61 mm: introduce FAULT_FLAG_INTERRUPTIBLE
4064b982706375025628094e51d11cf1a958a5d3 mm: allow VM_FAULT_RETRY for multiple times
3e69ad081c18d138fc7fd0f1ceef3b055ab10549 mm/userfaultfd: honor FAULT_FLAG_KILLABLE in fault path
17839856fd588f4ab6b789f482ed3ffd7c403e1f gup: document and work around "COW can break either way" issue
9e1f0580d37e0d3fcfc2274128a5cc476feba5d0 mm/gup: move __get_user_pages_fast() down a few lines in gup.c
376a34efa4eeb699d285c1a741b186d44b44c429 mm/gup: refactor and de-duplicate gup_fast() code
104acc327648b347d1716374586803e82fa1dc95 mm/gup: introduce pin_user_pages_fast_only()
2170ecfa768850bb29487baa3101c993ab7d7402 drm/i915: convert get_user_pages() --> pin_user_pages()
f5678e7f2ac31c270334b936352f0ef2fe7dd2b3 kernel: better document the use_mm/unuse_mm API contract
37c54f9bd48663f7657a9178fe08c47e4f5b537b kernel: set USER_DS in kthread_use_mm
e630bfac79456d3acd22c9286b50e83aafb7a07c mm/filemap.c: fix a data race in filemap_fault()
66e22932eb795f12cc78c7592581673049d85a8c net: phy: realtek: enable ALDPS to save power for RTL8211F
4595a298d5563cf76c1d852970f162051fd1a7a6 iomap: Set all uptodate bits for an Uptodate page
fbb6cda44190d72aa5199d728797aabc6d2ed816 crypto: algapi - introduce the flag CRYPTO_ALG_ALLOCATES_MEMORY
b8aa7dc5c7535f9abfca4bceb0ade9ee10cf5f54 crypto: drivers - set the flag CRYPTO_ALG_ALLOCATES_MEMORY
e850301f0981741c47f5ee423380a2a963fce563 xfs: per-type quota timers and warn limits
df42ce64dc3eb7f01f8b601abd3881c6dddfbbaa xfs: allow individual quota grace period extension
6c2190b3fcbc92cb79e39cc7e7531656b341e463 NFS: Fix listxattr receive buffer size
c3213d260a23e263ef85ba21ac68c9e7578020b5 SUNRPC: Fix oops in the rpc_xdr_buf event class
72d1249e2ffdbc344e465031ec5335fa3489d62e uapi: fix statx attribute value overlap for DAX & MOUNT_ROOT
1edd2c055dff9710b1e29d4df01902abb0a55f1f xfs: don't fail unwritten extent conversion on writeback due to edquot
590b16516ef38e2e88674fe0a0cea39927a8ee2e xfs: refactor xfs_iomap_prealloc_size
9a5fccc1e8079a5e506b7a9aa44f2cfef2752ec2 ath10k: fix few checkpatch warnings
ca98c47d54d76d2c3f59f8f66530362562914b6b mac80211: check vif pointer before airtime calculation
67eb556da609a3c0416f5b36760ab8df02cf404f iwlwifi: combine 9260 cfgs that only change names
d6f2134a383168bfb28ac458f7e4311e58482439 iwlwifi: add mac/rf types and 160MHz to the device tables
95939551e28c9bf9267d63d0ae12a019de75483f iwlwifi: add GNSS differentiation to the device tables
f673a193d56ea0c92b1ac9bb29710fef55d4c614 iwlwifi: add Pu/PnJ/Th device values to differentiate them
b200dba702ee5354c993ef1061cdc7d7a20901c9 iwlwifi: map 9461 and 9462 using RF type and RF ID
fe25b1518f72fc6ed5d69c9f11b2003099268448 iwlwifi: move TH1 devices to the new table
55cf5fb9ff22d5e23d16af445cb71372d1c4a1a4 iwlwifi: convert the 9260-1x1 device to use the new parameters
c8685937d07f5440d9be7a6a930aa400399a2f3e iwlwifi: move pu devices to new table
2edf602d40a62fca91c0d2059ba79b103d98ad40 iwlwifi: move shared clock entries to new table
5e003982b07ae351cadef4c252b3279b3424bf0d iwlwifi: move AX200 devices to the new table
03efb863bb96411497918d10c9d4641494dd83ad mac80211: HE: set missing bss_conf fields in AP mode
1454edcad7180e7e4caeb3eb47239c13c407b4a8 iwlwifi: remove redundant iwl9560_2ac_cfg struct
7897dfa2bc8fdfd47e95f94375e7af88d465d71a iwlwifi: move integrated, extra_phy and soc_latency to trans_cfg
c990fb19f5232389e6741fe0953686dcdec639fc iwlwifi: remove some unused extern declarations from iwl-config.h
be2f6886a34eb121f5599313769bfc7ebdc852e4 iwlwifi: add HW step to new cfg device table
32ed101aa140020ca8806896892f97bab799c41e iwlwifi: convert all Qu with Jf devices to the new config table
612509d6bd4a37d21a97187448d7811a54d6b5c3 iwlwifi: convert QnJ with Jf devices to new config table
68ceba3ff484d31d13a8e5ccc49b2c655aa7b83a iwlwifi: remove unnecessary cfg mangling for Qu C and QuZ with Jf
095650c0541e1898751a25073f1a57cfd309f7eb iwlwifi: add support for version 2 of SOC_CONFIGURATION_CMD
a72abfca95f36dea268b5e19e3cbeb0959e83518 iwlwifi: add trans_cfg for devices with long latency
a661bfac2a6e2b00b5220aec54ed69736c917f08 iwlwifi: remove support for QnJ Hr STEP A
f4ed93a192199bd238888efd7a7c226b72263be2 iwlwifi: remove support for QnJ HR FPGA
9166cc49767a646990a73380480356416b7794eb mac80211: implement Operating Mode Notification extended NSS support
b6011960f392d1de619f10aa5d088c27f1e7526c mac80211: handle channel frequency offset
4af119509a4807ac450634c73d38757aaf0b3f98 iwlwifi: move API version lookup to common code
4ee27edd389174b3e1a9c84a1b3a678d9e9f0934 iwlwifi: pcie: add cfgs for SoCs with device ID 0x4FD0
0928df0a868c010c1dfb5269a23ffa2f9adc876b iwlwifi: mvm: tell firmware about required LTR delay
9c9613f0ee07b8da049914d92fc735a0e954d777 iwlwifi: pcie: add new structure for Qu devices with medium latency
a8eb340f2ea48280eb2b7dc5a0e6cfff4928f5a5 iwlwifi: move iwl_set_soc_latency to iwl-drv to be used by other op_modes
ebe7b061e9293968181bbe60a3e261681358c50f iwlwifi: pcie: remove mangling for iwl_ax101_cfg_qu_hr
d5727b60a18edb2e762a95fbf445b1ce3ff41e25 iwlwifi: pcie: convert QnJ with Hr to the device table
e34aa5abfcf56502b79a4fdbe5fd9e94f70aa279 iwlwifi: pcie: remove occurrences of 22000 in the FW name defines
3f910a25839b13436bf0a22186f1698b23eafb91 iwlwifi: pcie: convert all AX101 devices to the device tables
4dc28c948f480c5004613aab153c7160bd4f29ce mmc: sdio: Move SDIO IDs from ath10k driver to common include file
8baa6d1bce05cf26eec6b43bcd428735f33cb60e mmc: sdio: Move SDIO IDs from b43-sdio driver to common include file
b5ba46b81c2fef00bcf110777fb6d51befa4a23e iwlwifi: Make some Killer Wireless-AC 1550 cards work again
0d4b6909987723f11c23b3a996499cb8f7a0e2b7 mt76: mt7915: avoid memcpy in rxv operation
3ff901cb5df1d2102e924d75d91347a2a3070fa5 mac80211: improve AQL tx airtime estimation
322cd27c06450b2db2cb6bdc68f3814149baf767 cfg80211/mac80211: avoid bss color setting in non-HE modes
75e6b594bbaeeb3f8287a2e6eb8811384b8c7195 cfg80211: invert HE BSS color 'disabled' to 'enabled'
8ed37e79196033dbdb09a4eea9465af6a0e29fe9 mac80211: use rate provided via status->rate on ieee80211_tx_status_ext for AQL
43cd72c5892c46fe69b8a1682fb4905cf158c39c mac80211: factor out code to look up the average packet length duration for a rate
f01cfbaf9b2971126f094acfbda2589bd2394f4d mac80211: improve AQL aggregation estimation for low data rates
1f38b8c564b8c24132428f6a4d04e05366fa10f4 mac80211: extend AQL aggregation estimation to HE and fix unit mismatch
8e280369b9076dc08ce13c802c1687b81b4cccd4 mac80211: add AQL support for VHT160 tx rates
413e40550c5cfdba7e062aa6350a0d2448014519 powerpc/numa: Use cpu node map of first sibling thread
60263d5889e6dc5987dc51b801be4955ff2e4aa7 iomap: fall back to buffered writes for invalidation failures
0d0e2b538c13f4f698ba58485a573ce824036567 s390/qeth: Remove pnso workaround
8a78dd6ed1af06bfa7b4ade81328ff7ea11b6947 scsi: qla2xxx: Fix FW initialization error on big endian machines
afc516dcfe52802e0d29e37e3200c0f08583bd8f scsi: qla2xxx: Update version to 10.02.00.104-k
05504b42562066ae27ce3e7dcec37f81dea476cb powerpc/64s: Add cp_abort after tlbiel to invalidate copy-buffer address
c0b27c517acf8a2b359dd373a7e7e88b01a8308e powerpc/64s/pseries: Fix hash tlbiel_all_isa300 for guest kernels
01b0f0eae0812e80efeee4ee17687e5386335e08 powerpc/64s: Trim offlined CPUs from mm_cpumasks
46f4a69ec8ed6ab9f6a6172afe50df792c8bc1b6 mmc: sdhci: Add LTR support for some Intel BYT based controllers
d7dba6be0f31ae61f5f3296aa130f45d57d30f74 dmaengine: dw: Remove misleading is_private property
443bf36eb543238cbd6399d658839e2e17c8dab2 net/mlx5: Move helper to eswitch layer
f099fde16db3d2594a54ba8c94ce9fa3557aa3e1 net/mlx5: E-switch, Support querying port function mac address
330077d14de12df5697ef192a88b11cc2166cd47 net/mlx5: E-switch, Supporting setting devlink port function mac address
185901ceebbd4f8b11db478fd3a30eb66e5d591d net/mlx5e: Move TC-specific function definitions into MLX5_CLS_ACT
1182f36593570e8e9ca53f6fabfc40ccf93c21d7 net/mlx5e: kTLS, Add kTLS RX HW offload support
8b5ec43d73dbdb427651caac5b76610ec0f5f298 net/mlx5e: Fix build break when CONFIG_XPS is not set
5831b33362fdb60d56314a237b764e24ee1a538e net/mlx5e: fix memory leak of tls
4dca650991e4175b8d5bae7ff6f1637a0c42be4a net/mlx5: Enable QP number request when creating IPoIB underlay QP
f4375443b7861ca5d93a10dba5ef5a478d5df96a RDMA/mlx5: Get XRCD number directly for the internal use
45ec21c971eddfb5e8e953e49a9dbe780f4a4997 RDMA/mlx5: Refactor mlx5_ib_alloc_ucontext() response
0fb556b2b58d6b8336c94379042bad2a8512af1a RDMA/mlx5: Implement the query ucontext functionality
b572ebe6675526be5d3b0e831e9d567c4fc0fd5d RDMA/mlx5: Separate restrack callbacks initialization from main.c
64825827ae3a53e01fc9bb9483b1a2ed7cb2b657 RDMA/mlx5: Separate counters from main.c
f7c4ffda0cbf7823915cbfebdbbe8460e7eeca67 RDMA/mlx5: Separate flow steering logic from main.c
d8b7515e25ec0a294c18e366f98e85fcb4a035e3 RDMA/mlx5: Cleanup DEVX initialization flow
1e2b5a90ded2852017e327e93861346ee70c5384 RDMA/mlx5: Delete one-time used functions
e21feb88f7d87bc54032db480047e70ba05dcbac net/mlx5: Make MLX5_EN_TLS non-prompt
93761ca17edf83f4222ab5abda8bde837ea5a309 net/mlx5e: XDP, Avoid indirect call in TX flow
d4d7f59643f795ae2f3233e3dddce3b4f549dcdc RDMA/mlx5: Add missing srcu_read_lock in ODP implicit flow
2224635938814fc63004e30f7c41943812bd6f1c RDMA/mlx5: Use MLX5_SET macro instead of local structure
896ec9735336f5adb576d372ed7e411bce2fc74c RDMA/mlx5: Set mkey relaxed ordering by UMR with ConnectX-7
5adf4c475aaa037d8f787d08c7699954cf78b19b net/mlx5e: RX, Re-work initializaiton of RX function pointers
b307f7f163e351833cf6aa41585be8f5a1617901 net/mlx5e: Move exposure of datapath function to txrx header
5d0b84769477fd647a491e882d5aea402c5fafa8 net/mlx5e: Use indirect call wrappers for RX post WQEs functions
23fcc7dee2c6aba1060558683988263851e74bab RDMA/mlx5: Fix flow destination setting for RDMA TX flow table
fe45386a208277cae4648106133c08246eecd012 net/mlx5e: Use RCU to protect rq->xdp_prog
9c25a22dfb00270372224721fed646965420323a net/mlx5e: Use synchronize_rcu to sync with NAPI
47c97e6b10a1e3680cad539929da092bfa535446 net/mlx5e: Fix multicast counter not up-to-date in "ip -s"
b521105b68a2e3334d69202fb354d7b711b01aa3 net/mlx5e: Fix using wrong stats_grps in mlx5e_update_ndo_stats()
08a762cecc60e19cd64e379df6580f1997408e04 net/mlx5e: Fix error path for RQ alloc
8e4b53f60f7d33cf6c60f790cf506220b2bcbb0f net/mlx5e: Refactor xmit functions
97e3afd64dc2918f79026986c575f3343197e7c8 net/mlx5e: Unify constants for WQE_EMPTY_DS_COUNT
56e4da669a36b56c502ca360b3c44a6089b0aa22 net/mlx5e: Move the TLS resync check out of the function
338c46c636a790cb22f880435c8c60554c0d50fb net/mlx5e: Support multiple SKBs in a TX WQE
530d5ce22ca2d7f54b756580c02d0772c053d221 net/mlx5e: Generalize TX MPWQE checks for full session
b39fe61edc50aff03a7188c1ad925c61af5ea882 net/mlx5e: Rename xmit-related structs to generalize them
67044a88aa0556b929cd07ba0656b101f3a6a67c net/mlx5e: Move TX code into functions to be used by MPWQE
5af75c747e2a868abbf8611494b50ed5e076fca7 net/mlx5e: Enhanced TX MPWQE for SKBs
5be019040cb7bab4caf152cacadffee91a78b506 net/mlx5e: IPsec: Add Connect-X IPsec Tx data path offload
4e9a9ef7d8a977596e8de8d917bac973d34a9171 net/mlx5: E-Switch, Check and enable metadata support flag before using
406493a52f48a20b36b34701d541081cae00b900 net/mlx5: E-Switch, Dedicated metadata for uplink vport
fc99c3d6371c14343b1822cc8846ed3a54dbafe3 net/mlx5: E-Switch, Setup all vports' metadata to support peer miss rule
8383da3e4a610496c6790e46e48b2b26be0cc252 RDMA/mlx5: Clarify what the UMR is for when creating MRs
b942fc0319a72b83146b79619eb578e989062911 RDMA/mlx5: Fix type warning of sizeof in __mlx5_ib_alloc_counters()
ae35859445607f7f18dd4f332749219cd636ed59 net/mlx5: E-switch, Avoid extack error log for disabled vport
5cfb540ef27b5b763a3b181d142847ef0411728e net/mlx5e: Set IPsec WAs only in IP's non checksum partial case.
219b3267ca102a35092f5998921a9e6f99074af2 net/mlx5e: Fix check if netdev is bond slave
b336e6b25e2d053c482ee4339787e6428f390864 net/mlx5e: kTLS, Enforce HW TX csum offload with kTLS
fc3325701a6353594083f08e297d4c1965c601aa RDMA/mlx5: Fix corruption of reg_pages in mlx5_ib_rereg_user_mr()
808b2c925dd0308a89e717df57721a9ed015c243 IB/mlx5: Fix fall-through warnings for Clang
5a46b062e28f57bffde767437fad3ab1d0cee2c7 devlink: refactor end checks in devlink_nl_cmd_region_read_dumpit
29c2680fd2bf3862ff5cf2957f198512493156f9 s390/ap: fix ap devices reference counting
c98a76eabbb6e7755f3d4a4c33f8fe869dda6383 x86/boot/compressed: Fix reloading of GDTR post-relocation
e544ea57ac0734bca752eb2d8635fecbe932c356 x86/boot/compressed: Force hidden visibility for all symbol references
505b789996f64bdbfcc5847dd4b5076fc7c50274 x86/cpu: Unify cpu_init()
360e7c5c4ca4fd8e627781ed42f95d58bc3bb732 x86/cpufeatures: Add SEV-ES CPU feature
05a2fdf3230306daee1def019b8f52cd06bd2e48 x86/traps: Move pf error codes to <asm/trap_pf.h>
64e682638eb51070ba6044535b250aad43c5564e x86/boot/compressed/64: Add IDT Infrastructure
5f2bb01682b7b067783207994c7b8a3dbeb1cd83 x86/boot/compressed/64: Rename kaslr_64.c to ident_map_64.c
8b0d3b3b41ab6f14f1ce6d4a6b1c5f60b825123f x86/boot/compressed/64: Add page-fault handler
ca0e22d4f011a56e974fa3a712d76e86a791559d x86/boot/compressed/64: Always switch to own page table
8570978ea030757839747aa9944ea576708be3d4 x86/boot/compressed/64: Don't pre-map memory in KASLR code
21cf2372618ef167d8c4ae04880fb873b55b2daa x86/boot/compressed/64: Change add_identity_map() to take start and end
29dcc60f6a19fb0aaee97bd1ae2ed8a7dc6f0cfe x86/boot/compressed/64: Add stage1 #VC handler
c2a0304a286f386e45cea3f4b0617f0813de67fd x86/boot/compressed/64: Call set_sev_encryption_mask() earlier
4b3fdca64a7e8ad90c87cad1fbc6991471f48dc7 x86/boot/compressed/64: Check return value of kernel_ident_mapping_init()
c81d60029a1393183d2125fcb4b64831629b8864 x86/boot/compressed/64: Add set_page_en/decrypted() helpers
597cfe48212a3f110ab0f918bf59791f453e65b7 x86/boot/compressed/64: Setup a GHCB-based VC Exception handler
69add17a7c1992593a7cf775a66e0256ad4b3ef8 x86/boot/compressed/64: Unmap GHCB page before booting the kernel
25189d08e5168c098c307a0eaae5b30c13a331ef x86/sev-es: Add support for handling IOIO exceptions
7ad816762f9bf89e940e618ea40c43138b479e10 x86/fpu: Reset MXCSR to default in kernel_fpu_begin()
1b4fb8545f2b00f2844c4b7619d64d98440a477c x86/fpu: Move xgetbv()/xsetbv() into a separate header
a7de15d489d956217b47671705ac2218ca50eaae x86/sev-es: Add CPUID handling to #VC handler
4bed2266cc6f9c3f6cd91378ea4fc76edde674cf x86/idt: Split idt_data setup out of set_intr_gate()
866b556efa1295934ed0bc20c2f208c93a873fb0 x86/head/64: Install startup GDT
f5963ba7a45fc6ff298a34976064354be437e1d8 x86/head/64: Install a CPU bringup IDT
097ee5b778b8970e1c2ed3ca1631b297d90acd61 x86/idt: Make IDT init functions static inlines
4b47cdbda6f1ad73b08dc7d497bac12b8f26ae0d x86/head/64: Move early exception dispatch to C code
c685eb0c12b4d4816d22ee734e91f4005b152fcd x86/sev-es: Print SEV-ES info into the kernel log
f980f9c31a923e9040dee0bc679a5f5b09e61f40 x86/sev-es: Compile early handler code into kernel image
74d8d9d531b4cc945a9f75aa2fc21d99ca5a9fe3 x86/sev-es: Setup an early #VC handler
1aa9aa8ee517e0443b06e816a4fd2d15f2113615 x86/sev-es: Setup GHCB-based boot #VC handler
885689e47dfa1499b756a07237eb645234d93cf9 x86/sev-es: Setup per-CPU GHCBs for the runtime handler
b052df3da821adfd6be26a6eb16624fb50e90e56 x86/entry: Get rid of ist_begin/end_non_atomic()
0d00449c7a28a1514595630735df383dec606812 x86: Replace ist_enter() with nmi_enter()
9f58fdde95c9509a4ded27a6d0035e79294002b4 x86/db: Split out dr6/7 handling
e1de11d4d1a64ac1b90b9833f1a3629dae18facb x86/entry: Introduce local_db_{save,restore}()
f051f697955049c7cf10a635ab8149aa619243b2 x86/nmi: Protect NMI entry against instrumentation
fd338e3564b0b8597a89f83941a0eda3e5092cc0 x86/entry, nmi: Disable #DB
fd501d4f0399700011acde486576c7c1eb8e7a61 x86/entry: Remove DBn stacks
d5c678aed5eddb944b8e7ce451b107b39245962d x86/debug: Allow a single level of #DB recursion
02772fb9b68e6a72a5e17f994048df832fe2b15e x86/sev-es: Allocate and map an IST stack for #VC handler
e5ceb9a02402b984feecb95a82239be151c9f4e2 x86/boot/64: Initialize 5-level paging variables earlier
b17a45b6e53f6613118b2e5cfc4a992cc50deb2c x86/boot/64: Explicitly map boot_params and command line
315562c9af3d583502b35c4b223a08d95ce69864 x86/sev-es: Adjust #VC IST Stack on entering NMI handler
6b27edd74a5e9669120f7bd0ae1f475d124c1042 x86/dumpstack/64: Add noinstr version of get_stack_info()
a13644f3a53de4e95a7bce6459f834e832ea44c5 x86/entry/64: Add entry code for #VC handler
0786138c78e79343c7b015d77507cbf9d5f15d00 x86/sev-es: Add a Runtime #VC Exception Handler
d3529bb73f76d0ec8aafaca505226fa0971c1dc9 x86/sev-es: Wire up existing #VC exit-code handlers
5e3427a7bc432ed2e5de394ac30f160cc6c37a1f x86/sev-es: Handle instruction fetches from user-space
51ee7d6e3d2b70a3f232cceffab5084a2abd6719 x86/sev-es: Handle MMIO events
0118b604c2c94c6e34982015cfa7891af4764786 x86/sev-es: Handle MMIO String Instructions
a4afa6081c88701635e1e20090f953a25f9444e0 x86/sev-es: Handle MSR events
479a7bf5c1f7f14eb37c6d6aeb401562efc1fcad x86/sev-es: Handle DR7 read/write events
a14a92fc4b420ae6713800a8ae8c3686c1a1fa20 x86/sev-es: Handle WBINVD Events
4711e7acaa125d8cc242f06e1f4d6c74e177454b x86/sev-es: Handle RDTSC(P) Events
5d55cf78a8785a7496919462f3d1a4689f62fb1d x86/sev-es: Handle RDPMC Events
8b4ce83707cb2cff5f6d175ea38f751ac4456096 x86/sev-es: Handle INVD Events
0c2fd2ef64ef1a91d81c2f61309735ac438b68a4 x86/sev-es: Handle MONITOR/MONITORX Events
ded476bbe203e59cb571d6c576f680efe4a0ddff x86/sev-es: Handle MWAIT/MWAITX Events
2eb7dcf0ccc40ad3f39b000becf16661abf98102 x86/sev-es: Handle VMMCALL Events
a2d0171a9cf59637411281a929900fde80e6c1cb x86/sev-es: Handle #AC Events
cb1ad3ecea959593400dfac4f027dbc005e62c39 x86/sev-es: Handle #DB Events
f6a9f8a45810d2914ea422ff39bfe2e0251c50f2 x86/paravirt: Allow hypervisor-specific VMMCALL handling under SEV-ES
bf5ff276448f64f1f9ef9ffc9e231026e3887d3d x86/realmode: Add SEV-ES specific trampoline entry point
8940ac9ced8bc1c48c4e28b0784e3234c9d14469 x86/realmode: Setup AP jump table
520d030852b4c9babfce9a79d8b5320b6b5545e6 x86/smpboot: Load TSS and getcpu GDT entry before loading IDT
3ecacdbd23956a549d93023f86adc87b4a9d6520 x86/head/64: Don't call verify_cpu() on starting APs
094794f59720d7e877a1eeb372ecedeed6b441ab x86/sev-es: Support CPU offline/online
4ca68e023b11e4d5908bf9ee326fab01111d77d5 x86/sev-es: Handle NMI State
39336f4ffb2478ad384075cf4ba7ef2e5db2bbd7 x86/efi: Add GHCB mappings when SEV-ES is active
f5ed777586e08e09c4b6f1e87161a145ee1431cf x86/sev-es: Check required CPU features for SEV-ES
103a4908ad4da9decdf9bc7216ec5a4861edf703 x86/head/64: Disable stack protection for head$(BITS).o
0ddfb1cf3b6b07c97cff16ea69931d986f9622ee x86/sev-es: Use GHCB accessor for setting the MMIO scratch buffer
3ad84246a4097010f3ae3d6944120c0be00e9e7a x86/boot/compressed/64: Introduce sev_status
86ce43f7dde81562f58b24b426cef068bd9f7595 x86/boot/compressed/64: Check SEV encryption in 64-bit boot-path
ed7b895f3efb5df184722f5a30f8164fcaffceb1 x86/boot/compressed/64: Sanity-check CPUID results in the early #VC handler
c9f09539e16e281f92a27760fdfae71e8af036f6 x86/head/64: Check SEV encryption before switching to kernel page-table
2411cd82112397bfb9d8f0f19cd46c3d71e0ce67 x86/sev-es: Do not support MMIO to/from encrypted memory
e17d43b93e544f5016c0251d2074c15568d5d963 perf: Add perf text poke event
bcfd218b66790243ef303c1b35ce59f786ded225 perf/x86/rapl: Add support for Intel SPR platform
e251abee87cf9c49a2ec1b143bd71f92b71557c1 perf evlist: Fix the class prefix for 'struct evlist' 'add' evsel methods
0094024a186045ac1a48d839bdb56c42b8f8279d perf ftrace: Add change log
b0a19555efd098183db0ee3ad52a3cd3bfbd1ba2 x86/msi: Move compose message callback where it belongs
47bea873cf809f490cfac0c4e88533fd7fed6064 x86/msi: Only use high bits of MSI address for DMAR unit
f598181acfb36f67e1de138cbe80a7db497f7d8c x86/apic: Always provide irq_compose_msi_msg() method for vector domain
51130d21881d435fad5fa7f25bea77aa0ffc9a4e x86/ioapic: Handle Extended Destination ID field in RTE
6285aa507366729c618d5295fb540b24a956088a x86/msi: Provide msi message shadow structs
ab0f59c6f135289c7ea90b0e2471674bf289d884 x86/apic: Support 15 bits of APIC ID in MSI where available
5a169bf04cd2bfdbac967d12eb5b70915b29d7ee x86/kvm: Reserve KVM_FEATURE_MSI_EXT_DEST_ID
d981059e13ffa9ed03a73472e932d070323bd057 x86/hyperv: Enable 15-bit APIC ID if the hypervisor supports it
aea23c323d89836bcdcee67e49def997ffca043b ipv6: Fix use of anycast address with loopback
cec2500d44751a7782d16ce99fca104e77e324a5 mlxsw: spectrum_router: Re-increase scale of IPv6 nexthop groups
af11e818a7691468381bbb33a3b98fb718605385 mlxsw: spectrum_acl: Offload FLOW_ACTION_POLICE
fb738b99ef229bd3d25f1b3e5503925dba9b1a7c mlxsw: Fix firmware flashing
6e1d2bc675bd57640f5658a4a657ae488db4c204 intel_idle: Fix intel_idle() vs tracing
6a1743422a7c0fda26764a544136cac13e5ae486 intel_th: pci: Add Ice Lake CPU support
becf2319f320cae43e20cf179cc51a355a0deb5f selftests: netfilter: check icmp pkttoobig errors are set as related
867d2190799ab088479dfeb19d9fa92568be0a19 selftests: netfilter: add ipvs test script
0ed15462069082f12bf89d0d2d2edfe0374b6059 selftests: netfilter: add ipvs nat test case
176a52043ab853f1db7581ed02e1096aba78b4d1 selftests: netfilter: add ipvs tunnel test case
a64d558d8cf98424cc5eb9ae6631782cd8bf789c selftests: netfilter: add nfqueue test case
ea2f7da1799bfc5a98b8e0c9e9cf1a7fedc32549 selftests: netfilter: extend nfqueue test case
619ae8e0697a6fb85b99b19137590c7c337c579e selftests: netfilter: add test case for conntrack helper assignment
ff1712f953e27f0b0718762ec17d0adb15c9fd0b arm64: pgtable: Ensure dirty bit is preserved across pte_wrprotect()
67843bbaf36eb087714f40e783ee78e99e9e4b86 drivers: Introduce device lookup variants by fwnode
4495dfdd6193d9712b7b8f5d699d89d5996e6aaa drivers: Introduce device lookup variants by device type
5302dd7dd0b6d04c63cdce51d1e9fda9ef0be886 driver core: Add support for linking devices during device addition
bcbbcfd57247f4c2976055995e5760fb576aae1e driver core: Allow a device to wait on optional suppliers
03324507e66c7664c754b1ef92c5c3be24c78aa2 driver core: Allow fwnode_operations.add_links to differentiate errors
daeba9bf62e6d03667915899af48471cdf26fde4 software node: unify PROPERTY_ENTRY_XXX macros
e6bff4665c595b5a4aff173848851ed49ac3bfad software node: replace is_array with is_inline
996b0830f95d132e50891a5568fef9e2965e4af2 software node: allow embedding of small arrays into property_entry
e64b674bc9d76edb4cf1b8c98446b1d29a16b9df software node: implement reference properties
e933bedd45099dce1165104138bb703a6e31df82 software node: remove separate handling of references
8f8184d6bf676a8680d6f441e40317d166b46f73 driver core: Add sync_state driver/bus callback
26e77708fdc20ec6c24759602640ac42b8e4e88a driver core: Allow device link operations inside sync_state()
21eb93f432b1a785df193df1a56a59e9eb3a985f driver core: Call sync_state() even if supplier has no consumers
ac338acf514e7b578fa9e3742ec2c292323b4c1a driver core: Add dev_has_sync_state()
77036165d8bcf7c7b2a2df28a601ec2c52bb172d driver core: Skip unnecessary work when device doesn't have sync_state()
1745d299af5b373abad08fa29bff0d31dc6aff21 driver core: Reevaluate dev->links.need_for_probe as suppliers are added
8375e74f2bca9802a4ddf431a6d7bd2ab9950f27 driver core: Add fw_devlink kernel commandline option
9211f0a6a91ada1ee28b3fb5f30d79c8a67c73b1 driver core: fw_devlink_flags can be static
00b247557858bc0651a646710d90aba186bfeed4 driver core: Fix handling of fw_devlink=permissive
c78c31b374a68be79cb4a03ef5b6c187f034e903 Revert "Revert "driver core: Set fw_devlink to "permissive" behavior by default""
4dbe191c046e71d6ea1ba85365ecb33961b07c4f driver core: Add device links from fwnode only for the primary device
5f5377eaddfc24e5d7562e588d0ff84f9264d7c1 driver core: Look for waiting consumers only for a fwnode's primary device
716a7a25969003d82ab738179c3f1068a120ed11 driver core: fw_devlink: Add support for batching fwnode parsing
fefcfc968723caf93318613a08e1f3ad07a6154f driver core: Remove check in driver_deferred_probe_force_trigger()
21c27f06587d2c18150d27ca2382a509ec55c482 driver core: Fix SYNC_STATE_ONLY device link implementation
44e960490ddf868fc9135151c4a658936e771dc2 driver core: Fix handling of SYNC_STATE_ONLY + STATELESS device links
2cd38fd15e4ebcfe917a443734820269f8b5ba2b driver core: Remove unnecessary is_fwnode_dev variable in device_add()
f1ce39df508de4a4abd83daa3e589ccea46b1480 lib/test_printf: Add tests for %pfw printk modifier
46d26819a5056f4831649c5887ad5c71a16d86f7 software node: implement software_node_unregister()
cec72f3efc6272420c2c2c699607f03d09b93e41 driver core: Don't do deferred probe in parallel with kernel_init thread
ec7bd78498f29680f536451fbdf9464e851273ed driver core: Rename dev_links_info.defer_sync to defer_hook
2451e746478a6a6e981cfa66b62b791ca93b90c8 driver core: Avoid deferred probe due to fw_devlink_pause/resume()
287905e68dd29873bcb7986a8290cd1e4cfde600 driver core: Expose device link details in sysfs
da6d647598a6d182eb6a0344a7b14ae005244399 driver core: Add waiting_for_supplier sysfs file for devices
843e600b8a2b01463c4d873a90b2c2ea8033f1f6 driver core: Fix sleeping in invalid context during device link deletion
90b109d50da09ddaa179732c01ccba7f759c125d driver core: Change delimiter in devlink device\'s name to "--"
693a8e936590f93451e6f5a3d748616f5a59c80b driver code: print symbolic error code
180c284ce4d66d2fb386b81bea59f01bc7be150a device connection: Remove device_connection_find()
87ea5926247f7e15f0b5bc5b36cb210536177d77 device connection: Remove device_connection_add()
3370db35193b241ba5836a66df6ec1a559108389 usb: typec: Registering real device entries for the muxes
2be1fb64dfeb2b1753328a5c4ac2259e16e53efd usb: roles: intel: Enable static DRD mode for role switch
9472aff16ca0fd9351eea7773facef364743088f USB: rio500: Fix lockdep violation
eec028c9386ed1a692aa01a85b55952202b41619 kcov: remote coverage support
92df01e3601fe29eb3727a82705eafa6209053f5 driver: core: Improve documentation for fwnode_operations.add_links()
bee3bbe616a2c8de641a64d874f9206835bd4401 driver core: Clarify documentation for fwnode_operations.add_links()
87e3daa005cfba19433b5429bfbca9b848925507 usb: typec: Give the mux drivers all the details regarding the port state
bbe80c9a89b868e98ef0710cb03ee68dd78a4d8d usb: typec: altmode: Remove the notification chain
d80bdabea98698f14f741600595b15db051c2bae usb: typec: mux: Drop support for device name matching
ef441dd6af91e1f4265e890021ac3ad631b2b10e usb: typec: mux: Allow the muxes to be named
774a9df6aeac236282dc0ec711b73865b64ef6a1 usb: typec: mux: Add helpers for setting the mux state
d1c6a769cdf466053ae211789f2b0671c8a72331 usb: typec: mux: Allow the mux handles to be requested with fwnode
bce3052f0c165685a074e50136e4d341bcd59f4a usb: roles: Provide the switch drivers handle to the switch in the API
97341ef7070d984305aaefe8b713491e3213d6ab usb: typec: pi3usb30532: Set switch_ / mux_desc name field to NULL
3e63cff384e625f09758ce8f4d01ae3033402b63 usb: roles: Switch on role-switch uevent reporting
9af54301b643eca4544970037409efc986a47a9c USB: rename USB OTG hub configuration option
0d9b6d49fe39bd397f1d5913b1bfb8c4fdef0255 usb: Use fallthrough pseudo-keyword
0637e3df17be8c3b41c1dc9b8d066d9d35044be3 thunderbolt: Introduce tb_switch_is_tiger_lake()
f5514c91e9f72b719bfec64af6acac5ad41df7b5 device connection: Remove struct device_connection
f6439c531d52193f890807958aaec52905bc0f2e thunderbolt: Add support for Intel Tiger Lake-H
ed3655729182a59b9bef1b564c6fc2dcbbbe954e of: property: Fix create device links for all child-supplier dependencies
66482f640755b31cb94371ff6cef17400cda6db5 driver: core: Fix list corruption after device_del()
344fbab991a568dc33ad90711b489d870e18d26d powerpc/64s: Convert some cpu_setup() and cpu_restore() functions to C
91668ab7db4bcfae332e561df1de2401f3f18553 powerpc/perf: MMCR0 control for PMU registers under PMCC=00
e20cf8d3f1f763ad28a9cb3b41305b8a8a42653e udp: implement GRO for plain UDP sockets.
68cb7d531e6a87250a51b8a4ee1c79b3445aeff3 ip: factor out protocol delivery helper
cf329aa42b6659204fee865bbce0ea20462552eb udp: cope with UDP GRO packet misdirection
21f1b8a6636c4dbde4aa1ec0343f42eaf653ffcc udp: fix GRO reception in case of length mismatch
4dd2b82d5adfbe0b1587ccad7a8f76d826120f37 udp: fix GRO packet of death
f2696099c6c619aec4fe2b9691f0a81429957e65 udp: Avoid post-GRO UDP checksum recalculation
9fd1ff5d2ac7181844735806b0a703c942365291 udp: Support UDP fraglist GRO/GSO.
6cd021a58c18a1731f7e47f83e172c0c302d65e5 udp: segment looped gso packets correctly
bde1b56f898ca8112912d7b36e55e1543b3be0cf udp: initialize is_flist with 0 in udp_gro_receive
4b1a86281cc1d0de46df3ad2cb8c1f86ac07681c net: udp: fix UDP header access on Fast/frag0 UDP GRO
55e729889bb07d68ab071660ce3f5e7a7872ebe8 net: udp: fix IP header access and skb lookup on Fast/frag0 UDP GRO
10c678bd0a035ac2c64a9b26b222f20556227a53 udp: fix the proto value passed to ip_protocol_deliver_rcu for the segments
d74abe2138b39ae34c274f5ba5dec47408036c0b Bluetooth: btusb: Add support to read Intel debug feature
c453b10c2b28580849e382565c2e8a18ecc8bc24 Bluetooth: btusb: Configure Intel debug feature based on available support
5ea7c81a4f34e4dbb9c7bfd0fe18e5fba8a7f8f9 Bluetooth: btusb: Refactor of firmware download flow for Intel conrollers
dc45d375cfa5676ca40b67c40e568cdfb9fa915c Bluetooth: btusb: Update boot parameter specific to SKU
0a3c1d45eca09ca2fc4b84b6c42ebec7ff938df0 Bluetooth: btusb: Add *setup* function for new generation Intel controllers
9a93b8b8eee4ac971a1ac120a2be7a66b7fa5b68 Bluetooth: btusb: Define a function to construct firmware filename
3f43a37838d5b5d00419b167a22b9b0dc4c33732 Bluetooth: btusb: Helper function to download firmware to Intel adapters
ec613a57fa1d57381f890c3166175fe68cf43f12 powerpc/64s: Remove TM from Power10 features
9692ea9d3288a201df762868a52552b2e07e1c55 smb3: remove overly noisy debug line in signing errors
cba22b1c5945696d01635ffb001443974f98bcd4 Replace HTTP links with HTTPS ones: CIFS
2e98c01846b2ce96cc41f60b70fd03cd47d3ac77 cifs: remove the retry in cifs_poxis_lock_set
969ae01bab2fe938b4c8324836038b5ac1c78fac s390/pci: Fix zpci_alloc_domain() over allocation
7a11c67a1ff9b0231eaaaa6a28294776d55b569a s390/pci: Improve handling of unset UID
05bc1be6db4b2683bbf5b9394a75d0fb3acfcede s390/pci: create zPCI bus
f606b3ef47c9f874af605323099663a10f691b24 s390/pci: adapt events for zbus
65e450a9f9adabf3de1305a4c616f1313df402a3 s390/pci: Adding bus resource
44510d6fa0c00aa90b80075caa6b313b25927475 s390/pci: Handling multifunctions
d1379279f2d6b407bd08324a170cb21928e69854 s390/pci: removes wrong PCI multifunction assignment
e5794cf1a270d813a5b9373a6876487d4d154195 s390/pci: create links between PFs and VFs
3047766bc6ec9c6bc9ece85b45a41ff401e8d988 s390/pci: fix enabling a reserved PCI function
b76fee1bc56c31a9d2a49592810eba30cc06d61a s390/pci: ignore stale configuration request event
3cddb79afc60bcdb5fd9dd7a1c64a8d03bdd460f s390/pci: fix zpci_bus_link_virtfn()
2f0230b2f2d5fd287a85583eefb5aed35b6fe510 s390/pci: re-introduce zpci_remove_device()
b97bf44f99155e57088e16974afb1f2d7b5287aa s390/pci: fix PF/VF linking on hot plug
d08d6f5d75242ceb410efbdf650efecc40d68c2d s390/pci: adaptation of iommu to multifunction
12856e7acde4702b7c3238c15fcba86ff6aa507f PCI/IOV: Mark VFs as not implementing PCI_COMMAND_MEMORY
08b6e22b850c28b6032da1e4d767a33116e23dfb s390/pci: Mark all VFs as not implementing PCI_COMMAND_MEMORY
71523d1812aca61e32e742e87ec064e3d8c615e1 pwm: Ensure pwm_apply_state() doesn't modify the state argument
dcf1ccc99e6db06a3a3cc9f72161f7d084a38d40 xfs: always return -ENOSPC on project quota reservation failure
14e6b038afa014ac2288a2f3d692697f708ba344 net/mlx5e: Add support for hw decapsulation of MPLS over UDP
c98e9daa59a611ff4e163689815f40380c912415 NFS: Adjust fs_context error logging
4d213e76a359e540ca786ee937da7f35faa8e5f8 iommu/vt-d: Avoid panic if iommu init fails in tboot system
e2be2a833ab5338fa5b8b99ba622b911d96f1795 x86/tboot: Don't disable swiotlb when iommu is forced on
286e1d3f9ba89c7db5eecd30f47f9e333843ea13 RDMA/core: Clean up cq pool mechanism
e21a29552fa3f44ea41c53488875015ae70fd7f8 shmem: Convert find_swap_entry to XArray
b56a2d8af9147a4efe4011b60d93779c0461ca97 mm: rid swapoff of quadratic complexity
87039546544479d4bedb19d0ea525270c43c1c9b mm: swapoff: shmem_find_swap_entries() filter out other types
dd862deb151aad2548e72b077a82ad3aa91b715f mm: swapoff: remove too limiting SWAP_UNUSE_MAX_TRIES
64165b1affc5bc16231ac971e66aae7d68d57f2c mm: swapoff: take notice of completion sooner
af53d3e9e04024885de5b4fda51e5fa362ae2bd8 mm: swapoff: shmem_unuse() stop eviction without igrab()
77da9389b9d5f07d54fda092d1ab56002ec0019a mm: Convert collapse_shmem to XArray
701270fa193aadf00bdcf607738f64997275d4c7 mm/khugepaged: collapse_shmem() stop if punched or truncated
042a30824871fa3149b0127009074b75cc25863c mm/khugepaged: minor reorderings in collapse_shmem()
87c460a0bded56195b5eb497d44709777ef7b415 mm/khugepaged: collapse_shmem() without freezing new_page
95feeabb77149f7d48f05bde61d75621c57db67e mm/khugepaged: fix the xas_create_range() error path
010c164a5fa7e169deab0a4d8211611f1930c1cd mm: move memcmp_pages() and pages_identical()
a64b53780ec35b77daf817210c88aa42d172c98f mm/slab: sanity-check page type when looking up cache
10d1f8cb3965a6f633bf23eb984cda552927e3a5 mm/slab: refactor common ksize KASAN logic into slab_common.c
0d4ca4c9bab397b525c9a4f875d31410ce4bc738 mm/kasan: add object validation in ksize()
6471384af2a6530696fc0203bafe4de41a23c9ef mm: security: introduce init_on_alloc=1 and init_on_free=1 boot options
9adeaa226988b97bc15928e12f40a9863134467c mm, slab: move memcg_cache_params structure to mm/slab.h
1b7e816fc80e668f0ccc8542cec20b9259abace1 mm: slub: Fix slab walking for init_on_free
234fdce892f905cbc2674349a9eb4873e288e5b3 mm/page_alloc.c: fix a crash in free_pages_prepare()
0f181f9fbea8bc7ea2f7e13ae7f8c256b39e254c mm/slub.c: init_on_free=1 should wipe freelist ptr for bulk allocations
9e15afa5a87a3bf969a3b33c3dadfb8b46df42c0 mm/page_alloc: silence a KASAN false positive
68d48e6a2df575b935edd420396c3cb8b6aa6ad3 mm: workingset: add vmstat counter for shadow nodes
8e68d689afe3284a5bc1663562d3e0a45d1c64fd mm: /proc/pid/smaps: factor out mem stats gathering
258f669e7e88c18edbc23fe5ce00a476b924551f mm: /proc/pid/smaps_rollup: convert to single value seq_file
7635d9cbe8327e131a1d3d8517dc186c2796ce2e mm, thp, proc: report THP eligibility for each vma
43675e6fbbeadca90c6c5031557ff95e217e6d2f mm: thp: make transhuge_vma_suitable available for anonymous THP
c06306696f8368b08774e2a743dbc52d92a61693 mm: thp: fix false negative of shmem vma's THP eligibility
60fbf0ab5da1c360e02b7f7d882bf1c0d8f7e32a mm,thp: stats for file backed THP
99cb0dbd47a15d395bf3faa78dc122bc5efe3fc0 mm,thp: add read-only THP support for (non-shmem) FS
09d91cda0e8207c1f14ee0d572f61a53dbcdaf85 mm,thp: avoid writes to file with THP in pagecache
2be5fbf9a91c417cd178a481538baddda3e2f38c proc/meminfo: fix output alignment
06d3eff62d9dc6f21e7ebeb14399f2542a36cdf5 mm/thp: fix node page state in split_huge_page_to_list()
4655e5e5f387264fd22a835bcfbe4af6691ff774 mm,thp: recheck each page before collapsing file THP
2f33a706027c94cd4f70fcd3e3f4a17c1ce4ea4b mm,thp: stop leaking unreleased file pages
e5a59d308f52bb0052af5790c22173651b187465 mm/khugepaged.c: fix khugepaged's request size in collapse_file
11d6761218d19ca06ae5387f4e3692c4fa9e7493 mm, memcg: fix error return value of mem_cgroup_css_alloc()
9de4f22a60f731943f050f4448bf2933ed3fa70b mm: code cleanup for MADV_FREE
e0c13f9761df8f97cf5e81495d12ecbc4075684a khugepaged: add self test
5503fbf2b0b80c1a47a7dca0e4f060f52f522cfd khugepaged: allow to collapse PTE-mapped compound pages
3917c80280c93a7123f1a3a6dcdb10a3ea19737d thp: change CoW semantics for anon-THP
abb242f57196dbaa108271575353a0453f6834ef mm: memcontrol: fix stat-corrupting race in charge moving
3fba69a56e16e8dcf182fe6ca77735dd65a898aa mm: memcontrol: drop @compound parameter from memcg charging API
14235ab36019d169f5eb5bf0c064c5b12ca1bf46 mm: shmem: remove rare optimization when swapin races with hole punching
6caa6a0703e03236f46461342e31ca53d0e3c091 mm: memcontrol: move out cgroup swaprate throttling
3fea5a499d57dec46043fcdb08e38eac1767bb0d mm: memcontrol: convert page cache to a new mem_cgroup_charge() API
9f762dbe19b9f16d5df5603d4b93bad391c302bc mm: memcontrol: prepare uncharging for removal of private page type counters
49e50d277ba2bb2c6e64632bc3193585674a2261 mm: memcontrol: prepare move_account for removal of private page type counters
0d1c20722ab333ac0ac03ae2188922c1021d3abc mm: memcontrol: switch to native NR_FILE_PAGES and NR_SHMEM counters
be5d0a74c62d8da43f9526a5b08cdd18e2bbc37a mm: memcontrol: switch to native NR_ANON_MAPPED counter
468c398233da208521a0f84c2068012a66a7489d mm: memcontrol: switch to native NR_ANON_THPS counter
9d82c69438d0dff8809061edbcce43a5a4bcf09f mm: memcontrol: convert anon and file-thp to new mem_cgroup_charge() API
f0e45fb4da29746a116e810eb91423ccfa4830fc mm: memcontrol: drop unused try/commit/cancel charge API
4c6355b25e8bb83c3cb455f532b7542089699d98 mm: memcontrol: charge swapin pages on instantiation
0a27cae1389f6342e7b09179d2b2da9011d60c96 mm: memcontrol: document the new swap control behavior
d9eb1ea2bf8734afd8ec7d995270437a7242f82b mm: memcontrol: delete unused lrucare handling
5df741963d52506a985b14c4bcd9a25beb9d1981 mm: fix LRU balancing effect of new transparent huge pages
497a6c1b09902b22ceccc0f25ba4dd623e1ddb7d mm: keep separate anon and file statistics on page reclaim activity
c843966c556d7370bb32e7319a6d164cb8c70ae2 mm: allow swappiness that prefers reclaiming anon over the file workingset
6058eaec816f29fbe33c9d35694614c9a4ed75ba mm: fold and remove lru_cache_add_anon() and lru_cache_add_file()
9682468747390c14962114f261cd76ba188ed987 mm: remove use-once cache bias from LRU balancing
1431d4d11abb265e79cd44bed2f5ea93f1bcc57b mm: base LRU balancing on an explicit cost model
fbbb602e40c270e884bc545161b238074b20aaae mm: deactivations shouldn't bias the LRU balance
264e90cc07f177adec17ee7cc154ddaa132f0b2d mm: only count actual rotations as LRU reclaim cost
314b57fb0460001a090b35ff8be987f2c868ad3c mm: balance LRU lists based on relative thrashing
7cf111bc39f6792abedcdfbc4e6291a5603b0ef0 mm: vmscan: determine anon/file pressure balance at the reclaim root
96f8bf4fb1dd2656ae3e92326be9ebf003bbfd45 mm: vmscan: reclaim writepage is IO cost
d483a5dd009a091d3dab3bc873335989e2cd5b08 mm: vmscan: limit the range of LRU type balancing
5d91f31faf8ebed2acfc3a1d6ac344f95c488d66 mm: swap: fix vmstats for huge pages
21e330fc632d6a288f73de48045b782cc51d501a mm: swap: memcg: fix memcg stats for huge pages
453431a54934d917153c65211b2dabf45562ca88 mm, treewide: rename kzfree() to kfree_sensitive()
9852ae3fe5293264f01c49f2571ef7688f7823ce mm, memcg: consider subtrees in memory.events
8a931f801340c2be10552c7b5622d5f4852f3a36 mm: memcontrol: recursive memory.low protection
cd324edce598ebddde44162a2aa01321c1261b9e mm: memcontrol: handle div0 crash race condition in memory.low
04fd61a4e01028210a91f0efc408c8bc61a3018c mm, memcg: fix inconsistent oom event behavior
fa9ba3aa89f9f1c003b5f5cde893bbbc140c7223 mm: ksize() should silently accept a NULL pointer
ca0cab65ea2b8c1527dc48c8dfd38ae055f5f241 mm, slub: introduce static key for slub_debug()
59052e89fc89e3e6bef0151052e093566e446851 mm, slub: introduce kmem_cache_debug_flags()
d3c58f24be1bf10fa9e11977080a2398ddcd8361 mm, slab/slub: move and improve cache_from_obj()
e42f174e43e47b623d9dbf814521c4961000c962 mm, slab/slub: improve error reporting and overhead of cache_from_obj()
d42f3245c7e299e017213fa028c319316bcdb7f4 mm: memcg: convert vmstat slab counters to bytes
4138fdfc8b5db5a7a4b9b50c69d475fb2ac351b7 mm: slub: implement SLUB version of obj_to_index()
1a3e1f40962c445b997151a542314f3c6097f8c3 mm: memcontrol: decouple reference counting from page accounting
bf4f059954dcb221384b2f784677e19a13cd4bdb mm: memcg/slab: obj_cgroup API
286e04b8ed7a04279ae277f0f024430246ea5eec mm: memcg/slab: allocate obj_cgroups for non-root slab pages
964d4bd370d559d9bd8e4abc139e85d2753956fb mm: memcg/slab: save obj_cgroup for non-root slab objects
f2fe7b09a52bc898ec030d4fa6f78725439c7c2c mm: memcg/slab: charge individual slab objects instead of pages
9855609bde03e2472b99a95e869d29ee1e78a751 mm: memcg/slab: use a single set of kmem_caches for all accounted allocations
d797b7d05405c519f7b62ea69a75cea1883863b2 mm: memcg/slab: simplify memcg cache creation
272911a4ad18c48f8bc449a5db945a54987dd687 mm: memcg/slab: remove memcg_kmem_get_cache()
c7094406fcb7cdf4fe1de8893f0613b75349773d mm: memcg/slab: deprecate slab_root_caches
15999eef7f25e2ea6a1c33f026166f472c5714e9 mm: memcg/slab: remove redundant check in memcg_accumulate_slabinfo()
10befea91b61c4e2c2d1df06a2e978d182fcf792 mm: memcg/slab: use a single set of kmem_caches for all allocations
933dc80ec262ed8b1cc2ab463d989e1f59ee05c4 kselftests: cgroup: add kernel memory accounting tests
849504809f86ef43b0b12617c0a71b6c6e61cd78 mm: memcg/slab: remove unused argument by charge_slab_page()
74d555bed5d0f8a1264f1e083183f5409b1aa36a mm: slab: rename (un)charge_slab_page() to (un)account_slab_page()
87bf4f71af4fb162033fbd98b4252ec11a715dbe mm/slab.c: fix kernel-doc warning for __ksize()
aea4df4c53f754cc229edde6c5465e481311cc49 mm: slub: really fix slab walking for init_on_free
545b1b077ca6b359820436af097bc65e3f6f6cc9 mm: do_swap_page(): fix up the error code
31d8fcac00fcf4007f3921edc69ab4dcb3abcd4d mm: workingset: age nonresident information alongside anonymous pages
0076f029cb2906d32baf3bf4401ef09663071d16 mm/memory: fix IO cost for anonymous page
f1796544a0ca0f14386a679d3d05fbc69235015e memcg: fix use-after-free in uncharge_batch
772616b031f06e05846488b01dab46a7c832da13 mm: memcg/percpu: per-memcg percpu memory statistics
3e38e0aaca9eafb12b1c4b731d1c10975cbe7974 mm: memcg: charge memcg percpu memory to the parent cgroup
90631e1dea55bfc14a8ee8c594aa136b243d4c88 kselftests: cgroup: add perpcu memory accounting test
ccc5dc67340c109e624e07e02790e9fbdec900d6 mm/vmscan: make active/inactive ratio as 1:1 for anon lru
b518154e59aab3ad0780a169c5cc84bd4ee4357e mm/vmscan: protect the workingset on anonymous LRU
170b04b7ae49634df103810dad67b22cf8a99aa6 mm/workingset: prepare the workingset detection infrastructure for anon LRU
243bce09c91b0145aeaedd5afba799d81841c030 mm: fix swap cache node allocation mask
3852f6768ede542ed48b9077bedf482c7ecb6327 mm/swapcache: support to handle the shadow entries
aae466b0052e1888edd1d7f473d4310d64936196 mm/swap: implement workingset detection for anonymous LRU
4002570c5c585c4c9a889e45dd104ed663257eec mm/vmscan: restore active/inactive ratio for anonymous LRU
af3bbc12df80e8c279b94c752b6edca29841f4f5 mm: add thp_size
6c357848b44b4016ca422178aa368a7472245f6f mm: replace hpage_nr_pages with thp_nr_pages
9f457179244a1c0316546b1760f8993d0d718861 mm: memcontrol: fix warning when allocating the root cgroup
8d3fe09d8d6645dcbbe2413cde58f51ceb6545a6 mm: memcontrol: fix missing suffix of workingset_restore
19b629c9795bfe67bf77be8fb611b84424b56d91 mm: memcg/slab: fix racy access to page->mem_cgroup in mem_cgroup_from_obj()
d1b2cf6cb84a9bd0de6f151512648dd1af82f80f mm: memcg/slab: uncharge during kmem_cache_free_bulk()
57417cebc96b57122a2207fc84a6077d20c84b4b XArray: add xa_get_order
8fc75643c5e14574c8be59b69182452ece28315a XArray: add xas_split
198b62f83eef1d605d70eca32759c92cdcc14175 mm/filemap: fix storing to a THP shadow entry
0964730bf46b4e271c5ecad5badbbd95737c087b mlock: fix unevictable_pgs event counts on THP
8e57f8acbbd121ecfb0c9dc13b8b030f86c6bd3b mm, debug_pagealloc: don't rely on static keys too early
89eb946a7432be639b452fac295c0c2e5186c4a4 mm: Convert page migration to XArray
cc4f11e69fd00c61c38619759b07d00631bda5ca mm: migrate: lock buffers before migrate_page_move_mapping()
84ade7c15ccfb46f852f4e2469b007a33651904d mm: migrate: move migrate_page_lock_buffers()
89cb0888ca1483ad72648844ddd1b801863a8949 mm: migrate: provide buffer_migrate_page_norefs()
ab41ee6879981b3d3a16a1079a33fa6fd043eb3c mm: migrate: drop unused argument of migrate_page_move_mapping()
4cf58924951ef80eec636b863e7a53973c44261a mm: treewide: remove unused address argument from pte_alloc functions
80409c65e2c6cd1540045ee01fc55e50d95e0983 mm: migrate: make buffer_migrate_page_norefs() actually succeed
6f4f13e8d9e27cefd2cd88dd4fd80aa6d68b9131 mm/mmu_notifier: contextual information for event triggering invalidation
7269f999934b289da7972e975b781417b07ef836 mm/mmu_notifier: use correct mmu_notifier events for each invalidation
d6eacedd1f0ebf00bdf1c77715d194f7c1036fd4 powerpc/book3s: Use config independent helpers for page table walk
371096949f0ad3950b06729989bd27de51b8c5f5 mm: migrate: remove unused mode argument
ebdf4de5642fb6580b0763158b6b4b791c4d6a4d mm: migrate: fix reference check race between __find_get_block() and migration
5fd4ca2d84b249f0858ce28cf637cf25b61a398f mm: page cache: store only head pages in i_pages
8aa82df3c123129025a364d8f823929cc488b834 arm64: mm: add p?d_leaf() definitions
070434b13b6ef3d41fa5ebe25d73aa31b359b0c4 powerpc: mm: add p?d_leaf() definitions
2d57b4f142e0b03e854612b8e28978935414bced net-sysfs: take the rtnl lock when storing xps_rxqs
4ae2bb81649dc03dfc95875f02126b14b773f7ab net-sysfs: take the rtnl lock when accessing xps_rxqs_map and num_tc
b11d77fa300d98704519238a2161bc6352c28245 cpufreq: Convert to new X86 CPU match macros
a7b909376d3994ffb983a4037dd12689159fd4fb cpufreq: acpi-cpufreq: Mark sometimes used ID structs as __maybe_unused
c1d0da83358a2316d9be7f229f26126dbaa07468 mm: replace memmap_context by meminit_context
cb8d53d2c97369029cc638c9274ac7be0a316c75 ext4: fix leaking sysfs kobject after failed mount
d9befedaafcf3a111428baa7c45b02923eab2d87 ext4: clear buffer verified flag if read meta block from disk
d7dce9e08595e80bf8039a81794809c66fe26431 ext4: do not use extent after put_bh
a72b38eebea4661d4d67b194353124e63ce48f66 ext4: handle dax mount option collision
0419d8c9d8f8d825576a41b2bb1e6043f34d1ae0 net/mlx5e: kTLS, Add kTLS RX resync support
76c1e1ac2aaeddd5505e4ecfafa963885b5551ab net/mlx5e: kTLS, Add kTLS RX stats
ed9a7c53b8781f851bd8406551d6abfb2d826683 net/mlx5e: kTLS, Cleanup redundant capability check
a29074367b347af9e19d36522f7ad9a7db4b9c28 net/mlx5e: kTLS, Improve rx handler function call
6e8de0b6b4690ba7a685db33801bf7536bac674f net/mlx5e: kTLS, Fix napi sync and possible use-after-free
66ce5fc05713e6b90f74c01439f2aaa137ffd9f4 net/mlx5e: kTLS, Add missing dma_unmap in RX resync
581642f32f33017619355b7d91704c152df1fc2d net/mlx5e: kTLS, Fix leak on resync error flow
94c4fed710c372313157f20b5eced39d04a96f88 net/mlx5e: kTLS, Avoid kzalloc(GFP_KERNEL) under spinlock
ea63609857321c38fd4ad096388b413b66001c6c net/mlx5e: Fix refcount leak on kTLS RX resync
ed00495333ccc80fc8fb86fb43773c3c2a499466 locking/lockdep: Fix TRACE_IRQFLAGS vs. NMIs
4d004099a668c41522242aa146a38cc4eb59cb1e lockdep: Fix lockdep recursion
baffd723e44dc3d7f84f0b8f1fe1ece00ddd2710 lockdep: Revert "lockdep: Use raw_cpu_*() for per-cpu variables"
d48e3850030623e1c20785bceaaf78f916d0b1a3 locking/lockdep: Remove more raw_cpu_read() usage
a28e884b966e713da29caefbb347efea77367d22 seqlock: Fix multiple kernel-doc warnings
f8e48a3dca060e80f672d398d181db1298fbc86c lockdep: Fix preemption WARN for spurious IRQ-enable
313b825fa218bef78419d7b4092c1f4af222335d md: only calculate blocksize once and use i_blocksize()
48938b1e50270047566025bdc43700e71cc5e6c5 net: phy: mscc: add constants for used interrupt mask bits
9010f9deb000edce823cb79345f137742ccffa19 net: phy: improve phy_driver callback handle_interrupt
e7765d634aaa9dd5db3cb59155269ef6c18d4592 net: phylink: rename 'ops' to 'mac_ops'
4c0d6d3a7a81fcd2dcb4abf15fe2e13074cf8619 net: phylink: add separate pcs operations structure
4406d36dfdf1fbd954400e16ffeb915c1907d58a net: phy: bcm54140: add hwmon support
efcd549da9d7e8194b4d2d2f35eff8ce7b4da684 net: phy: bcm54140: fix less than zero comparison on an unsigned
bdbdac7649fac05f88c9f7ab18121a17fb591687 ethtool: provide UAPI for PHY master/slave configuration.
6349084746ff4f5f7ebc748e4b2a890f8c57b129 net: phy: add concept of shared storage for PHYs
dc9989f173289f376d06cb289ae0bd46c6ac8017 net: phy: bcm54140: use phy_package_shared
3a13f98b4c16fb3489bdfd7550fcaa333ee69850 net: phy: fix less than zero comparison with unsigned variable val
11ca3c4261cdb4e2f33e32daf6447f8185843317 net: ethtool: netlink: Add support for triggering a cable test
b28efb930ba5a7c263826fe02e13e1b6eadb5559 net: ethtool: Add attributes for cable test reports
1dd3f212af30b42c90ba252c165f2f6d2ddf5230 net: ethtool: Add infrastructure for reporting cable test results
1e2dc14509fd072739e4bab98ac42317267dbad6 net: ethtool: Add helpers for reporting test results
4a459bdc7472b0e6bea6d0dd8df66253ac4f3fe2 net: phy: Put interface into oper testing during cable test
9896a4574ecb137d4e5b9283004aa34c688bc761 net: phy: Send notifier when starting the cable test
11ecf8c55b91806e4dc6a1b9fe7cbf68cdc9b006 net: phy: broadcom: add cable test support
a307593a644443db12888f45eed0dafb5869e2cc net: phy: simplify phy_link_change arguments
a331172b156b23e83dfb556ade0ca23426c3f149 net: ethtool: Add attributes for cable test TDR data
1a644de29f712771c2ec00e52caa391544eb6141 net: ethtool: Add generic parts of cable test TDR
6b4a0fc106521e480c00b55a7ef38c89f02dc4e8 net: ethtool: Add helpers for cable test TDR data
f2bc8ad31a7f814237bc6301d59296d76505a688 net: ethtool: Allow PHY cable test TDR data to configured
a618e86da91d259374caff065cc557899dc181ce net : phy: marvell: Speedup TDR data retrieval by only changing page once
db8668a1951954156c039b9f8fe2881d428a522c net: phy: marvell: Configure TDR pulse based on measurement length
830f5ce266ce79e18f0026c36c99319b1bc08e1b net: phy: marvell: unlock after phy_select_page() failure
3190ca3b5f51a0e471ee3f04c898401c81b00385 net: phy: broadcom: don't export RDB/legacy access methods
0cc8fecf041d3e5285380da62cc6662bdc942d8c net: phy: Allow mdio buses to auto-probe c45 devices
0ef44e5cab8dbf0a0327871b48fe7c8425d0d885 net: phy: add support for a common probe between shared PHYs
c718af2d00a37587b09e5958d142da7569f3d55b net: phylink: fix ethtool -A with attached PHYs
2e919bc446faee429ac862a6cdb5e40017051f6b net: phylink: ensure manual pause mode configuration takes effect
575691b309291c5163cca5877ec159120a68774d net: phylink: only restart AN if the link mode is using in-band AN
e42bcd0f7e04e507ba90927598825efd99f948cb net: phy: arrange headers in phy_device.c alphabetically
319bfafe3494b6fd6cdf48dcdc9d17cf2a77d405 net: phylink: rearrange resolve mac_config() call
16319a7d31b5df881ab61c9a9e8b4265355d157f net: phylink: ensure link is down when changing interface
5005b163440f3fe18b434a20e8944dad508a15e8 net: phylink: update PCS when changing interface during resolution
7cceb599d15d6639b1298ae400c26d822148e86f net: phylink: avoid mac_config calls
cbc1bb1e4689ce1e6654485b6865f10b98f6ddb4 net: phylink: simplify phy case for ksettings_set method
a83c8829d18d47939980db16a0ec79fa365ce6b0 net: phylink: use config.an_enabled in ksettings_set method
1e1bf14a89c0f5d11b62a8974dc53862e214b131 net: phylink: simplify fixed-link case for ksettings_set method
1571e700fd610c39e8b50b0110b1ee9badb2fe6a net: phylink: in-band pause mode advertisement update for PCS
b7ad14c2fe2d4b2abee491e3adfa3d0123aa2d8c net: phylink: re-implement interface configuration with PCS
7137e18f6f889a67046d5004e1690a32d7d2108d net: phylink: add struct phylink_pcs
58e898a07b9aa2de5eb2fdb9bfe1d0017682d340 docs: networking: fix extra spaces in ethtool-netlink
4b973f49830d74de36b5f4a75c07f6658524d2e4 net: ethtool: Handle missing cable test TDR parameters
0b76e642f9ad2471e899e2dd71b9543b7e85e9f6 phylink: <linux/phylink.h>: fix function prototype kernel-doc warning
84da009f06e60cf59d5e861f8e2101d2d3885517 x86/sev-es: Use new for_each_insn_prefix() macro to loop over prefixes bytes
79946ee774286c12722a3dc52de18482dc6c9c09 iwlwifi: fw: move assert descriptor parser to common code
64564669e1a5d2c3202250417782b92d09c815d0 iwlwifi: add new cards for AX201 family
fda1bd0d4a6b3a7de020aa329661661fc14aee7a iwlwifi: iwl-trans: move all txcmd init to trans alloc
bc9296f4a828bd8418908793c45f02ecab574669 iwlwifi: add new cards for MA family
38cb52dd4e8643fffd288f173fbb8a3fad50d09d iwlwifi: add new card for MA family
e80bfd117d89e8f9d71893edc03bc7b3c6c1eea3 iwlwifi: fw: add default value for iwl_fw_lookup_cmd_ver
3830a01c3bfac0c037d68fa0ce22d6f9e3ed2336 iwlwifi: mvm: add support for responder dynamic config command version 3
890d814b1837a7f7d38261f84cd7af160c1ffe98 iwlwifi: mvm: location: set the HLTK when PASN station is added
68ad24742f174735d24dc5b60653c80140d249b4 iwlwifi: mvm: responder: allow to set only the HLTK for an associated station
0cd1ad2d7fd41e0de4969fd1dd0aa846c99830d1 iwlwifi: move all bus-independent TX functions to common code
0179bfff9780ae51d76b9e101a6d80205ce7b413 iwlwifi: pcie: make iwl_pcie_txq_update_byte_cnt_tbl bus independent
43dc85b5ec5485e0364483a073cf8d6c9250ff4d iwlwifi: support an additional Qu subsystem id
bebc14db4eb7120a2c12fb08ee2ea95cdecb8042 iwlwifi: mvm: avoid possible NULL pointer dereference
a48d400cc444967717a6898ee7ac454e97d25722 iwlwifi: pcie: fix 0x271B and 0x271C trans cfg struct
24436191a3b47b5589256f7f30b7baa5648b4a87 iwlwifi: pcie: fix xtal latency for 9560 devices
8fac81b5005926b1d71473816aca439b9c142a6a iwlwifi: pcie: fix the xtal latency value for a few qu devices
b3e4c0f34c1752c332f73aab5b9da75a5283e910 iwlwifi: move PNVM implementation to common code
6972592850c00e5e53ac026c22acaf0bb77aa01f iwlwifi: read and parse PNVM file
568d3434178b00274615190a19d29c3d235b4e6d iwlwifi: pcie: invert values of NO_160 device config entries
2f8cfcc43dae3fbb3cdb7377b06db5d2fef78ed6 iwlwifi: remove all queue resources before free
a4450980589522880b1429448a10db38fee2e26e iwlwifi: move reclaim flows to the queue file
59fa61f3fd4ee5315190d4233ac3e6ca1a411556 iwlwifi: remove sw_csum_tx
8e99ea8d09a159d46069faef10721a3f8436d2fd iwlwifi: use SPDX tags
e4475583b5c49d5a90dcff9ae201018cd98c7d84 iwlwifi: pcie: clean up some rx code
ac1a98e1e924e7e8d7c7e5b1ca8ddc522e10ddd0 iwlwifi: Add a new card for MA family
fd1c3318f4e7cf30cd73efb3cb5e9648efc6625b iwlwifi: mvm: validate notification size when waiting
78dc70ebaa38aa303274e333be6c98eef87619e2 tcp_bbr: adapt cwnd based on ack aggregation estimation
ef72cd3c5ce168829c6684ecb2cae047d3493690 ethtool: fix error paths in ethnl_set_channels()
279c3393e2c113365c999f16cd096bcf3d34319e mm: kmem: move memcg_kmem_bypass() calls to get_mem/obj_cgroup_from_current()
becaba65f62f88e553ec92ed98370e9d2b18e629 mm: memcg/slab: fix obj_cgroup_charge() return value handling
2f7659a314736b32b66273dbf91c19874a052fde mm: memcg/slab: fix return of child memcg objcg for root memcg
eefbfa7fd678805b38a46293e78543f98f353d3e mm: memcg/slab: fix use after free in obj_cgroup_charge
9cf93f056f783f986c19f40d5304d1bcffa0fc0d intel_idle: add SnowRidge C-state table
84bc809eecf37f3bd3ee7d2002b2528787a11cb1 lib: enable building KUnit in lib/
2cb80dbbbaba4f2f86f686c34cb79ea5cbfb0edb kernel/sysctl-test: Add null pointer test for sysctl.c:proc_dointvec()
1cbeab1b242d16fdb22dc3dab6a7d6afe746ae6d ext4: add kunit test for decoding extended timestamps
ea2dd7c0875ed31955cda7b1b20612c8337192e5 lib/list-test: add a test for the 'list' doubly linked list
c475c77d5b56398303e726969e81208196b3aab3 kunit: allow kunit tests to be loaded as a module
9fe124bf1b7788058ecfe5778fea1660b01e3e9c kunit: allow kunit to be loaded as a module
cb88577bb6b27f8f5b3d61b1006c1ff7709916be Fix linked-list KUnit test when run multiple times
e2219db280e3fe52e5cc242e4225dd2685af3c56 kunit: add debugfs /sys/kernel/debug/kunit/<suite>/results display
eda8e324f70815e90360bef1032d49ef7c61e877 kunit: add log test
c3bba690a2643245f59a4d5d66e6b687459696d9 kunit: subtests should be indented 4 spaces according to TAP
6cb1818798812fe7e2c8fe3f489ad1c86adfd6c4 kunit: Add missing newline in summary message
33d599f0529990448e7bfb0d080269e029769fed lib/test_linear_ranges: add a test for the 'linear_ranges'
beaed42c427dbe8fedba4518b2baf5203f5e398b kunit: default KUNIT_* fragments to KUNIT_ALL_TESTS
5f215aab4ea0cf39e9fcdb721733a7814f3a3a50 lib: Kconfig.debug: default KUNIT_* fragments to KUNIT_ALL_TESTS
d194e12b3ed3c4799951072271f001cbd104b5e9 fs: ext4: default KUNIT_* fragments to KUNIT_ALL_TESTS
d4cdd146d0db900b2eb6c2d28cba719b3bf0a928 kunit: generalize kunit_resource API beyond allocated resources
725aca9585956676687c4cb803e88f770b0df2b2 kunit: add support for named resources
1fe84fd4a4027a17d511a832f89ab14107650ba4 kcsan: Add test suite
3d2a9d642512c21a12d19b9250e7a835dcb41a79 IB/hfi1: Ensure correct mm is used at all times
cc20d7999000996557333910bcc99399b7244cd9 vfio/pci: Introduce VF token
137e5531351db258eff58ea28f4dc8fdf7ca2990 vfio/pci: Add sriov_configure support
b66574a3fb32e2bac5bf3589dae6d335b7a70689 vfio/pci: Cleanup .probe() exit paths
4ca234a9cbd7c3a656b34dd98c8b156f70ed7849 powerpc/smp: Stop updating cpu_core_mask
70edd4a7c753ba18e3e4bb9e97b6d85156cea738 powerpc/smp: Optimize remove_cpu_from_masks
375370a10d061d5c75c6bc5b09c5db4cc0b0fcfe powerpc/smp: Check for duplicate topologies and consolidate
b8a97cb4599cda28bd3b3bc13042f5803b42ad65 powerpc/smp: Move coregroup mask updation to a new function
70a94089d7f7fa91bc1795622426b3ed017ec71a powerpc/smp: Optimize update_coregroup_mask
84dbf66c63472069e5eb40b810731367618cd8b5 powerpc/smp: Use GFP_ATOMIC while allocating tmp mask
a77259bdcb62a2c345914df659a1fbc421269a8b perf/x86/rapl: Add AMD Fam19h RAPL support
267fb27352b6fc9fdbad753127a239f75618ecbc perf: Reduce stack usage of perf_output_begin()
76a4efa80900fc40e0fdf243b42aec9fb8c35d24 perf/arch: Remove perf_sample_data::regs_user_copy
22dd1ac91a77675238d10059c479ab6fa6160c60 tools: Remove feature-libelf-mmap feature detection
9012e3dda2a70cff7986e08d0a9cf3a8e04691e6 perf trace beauty: Add script to autogenerate mremap's flags args string/id table
61693228b6e3f9de1c07bfec10b3204e69495fb1 perf beauty mmap_flags: Conditionaly define the mmap flags
388968d864bbe25098211bf846037547f2a82ca6 perf trace: Use the autogenerated mmap 'prot' string/id table
d0098e4c6b83e502cc1cd96d67ca86bc79a6c559 net/ipv6: remove the old peer route if change it to a new one
d8f5c29653c3f6995e8979be5623d263e92f6b86 net: ipv6: fib: flush exceptions when purging route
a2c32fa736a590a7ab6e9601066a6772ae09869b powercap/intel_rapl_msr: Convert rapl_msr_priv into pointer
43756a298928c9a4e8201baaeb205c0c103728af powercap: Add AMD Fam17h RAPL support
8a9d881f22d7a0e06a46a326d0880fb45a06d3b5 powercap: RAPL: Add AMD Fam19h RAPL support
9ed9647dc0671486f9e998b7258f75167a9c4697 perf/amd/uncore: Inform the user how many counters each uncore PMU has
83d83bebf40132e2d55ec58af666713cc76f9764 console/fbcon: Add support for deferred console takeover
15f4c357f909d5fbde43b36e137756d5c654a59d fbcon: Only allow FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER if fbdev is builtin
bedb38fc917527e7a6a7e5a0ecedd44690fab167 fbcon: Only defer console takeover if the current console driver is the dummycon
df37e225f25933732c17e43cbe7d21eec31b24be fbcon: Do not takeover the console from atomic context
1cd51b5d200dec292577a4656803d8aeff54ad51 vgaswitcheroo: call fbcon_remap_all directly
315cc066b8ae8349a27887ad7a34e1916e9797fe augmented rbtree: add new RB_DECLARE_CALLBACKS_MAX macro
6d2052d188d962ffb7ad3d413e6ffd5f276aec94 augmented rbtree: rework the RB_DECLARE_CALLBACKS macro definition
8b700983de82f79e05b2c1136d6513ea4c9b22c4 sched: Remove sched_set_*() return value
321bd212619a7269308696e4ddc446930ea73fad virtio: VIRTIO_F_IOMMU_PLATFORM -> VIRTIO_F_ACCESS_PLATFORM
24b6842ade6925199e182988259761504aacfbc0 virtio: virtio_has_iommu_quirk -> virtio_has_dma_quirk
2d831155cf0607566e43d8465da33774b2dc7221 drm/nouveau/kms/nv50-: Get rid of bogus nouveau_conn_mode_valid()
d7787cc04e0a1f2043264d1550465081096bd065 drm/nouveau/kms/nv50-: Fix clock checking algorithm in nv50_dp_mode_valid()
707d561f77b5e2a6f90c9786bee44ee7a8dedc7e drm: allow limiting the scatter list size.
a88a7b3eb076ade6205176915fd2ee73a60f4a32 vfio: Use dev_printk() when possible
1f97970e6c8e60349b045599f4525608db895009 vfio/pci: Add device denylist
50173329c8cc0c892eaa7a9d0f0692ac39cd7b04 vfio/pci: Add QAT devices to denylist
eac7cc21c4e49ab7dfeef22e29abdee8432face9 vfio/pci: Remove redundant declaration of vfio_pci_driver
f23efcbcc523b09c2ee359a35eb3897dc1764fd3 crypto: ctr - no longer needs CRYPTO_SEQIV
df561f6688fef775baa341a0f5d960becd248b11 treewide: Use fallthrough pseudo-keyword
37ea0f18fb19e0646c166037043232915cd9e995 esp: select CRYPTO_SEQIV
48f5e52e916b55fb73754833efbacc7f8081a159 x86/ptrace: Prevent ptrace from clearing the FS/GS selector
2fff071d28b54f050f62654dad4ec111b8416d8e x86/process: Unify copy_thread_tls()
1d07316b1363a004ed548c3759584f8e8b1e24e3 x86/entry/64: Switch CR3 before SWAPGS in paranoid entry
79e1932fa3cedd731ddbd6af111fe4db8ca109ae x86/entry/64: Introduce the FIND_PERCPU_BASE macro
9628f26baef262a49d877e3785e8b88d241bc064 x86/entry/64: Remove TRACE_IRQS_*_DEBUG
708078f65721b46d82d9934a3f0b36a2b8ad0656 x86/entry/64: Handle FSGSBASE enabled paranoid entry/exit
2c7b5ac5d5a93c4b0557293d06c6677f765081a6 Documentation/x86/64: Add documentation for GS/FS addressing mode
40c45904f818c1f6555294ca27afc5fda4f09e68 x86/ptrace: Fix 32-bit PTRACE_SETREGS vs fsbase and gsbase
6a3ea3e68b8a8a26c4aaac03432ed92269c9a14e x86/entry/64: Do not use RDPID in paranoid entry to accomodate KVM
0b2c605fa4ee3117c00b97b7af67791576b28f88 x86/entry/64: Correct the comment over SAVE_AND_SET_GSBASE
753039ef8b2f1078e5bff8cd42f80578bf6385b0 x86/cpu/amd: Call init_amd_zn() om Family 19h processors too
507ebe6444a44d9b7676a36f24b4d5360ef79327 ibmvnic: Fix use-after-free of VNIC login response buffer
9a87c3fca2372af3177cb454c7aa381c7080307f ibmvnic: Ensure that device queue memory is cache-line aligned
9281cf2d584083a450fd65fd27cc5f0e692f6e30 ibmvnic: avoid memset null scrq msgs
b71ec952234610b4f90ef17a2fdcb124d5320070 ibmvnic: Ensure that SCRQ entry reads are correctly ordered
862aecbd9569e563b979c0e23a908b43cda4b0b9 ibmvnic: fix: NULL pointer dereference.
214a5ea081e77346e4963dd6d20c5539ff8b6ae6 cifs: do not fail __smb_send_rqst if non-fatal signals are pending
007ab5345545aba2f9cbe4c096cc35d2fd3275ac bonding: fix feature flag setting at init time
d241b3826e942b356d94b5f8a021d5591b316558 bonding: set xfrm feature flags more sanely
0b2ca2c7d0c9e2731d01b6c862375d44a7e13923 s390/pci: fix hot-plug of PCI function missing bus
7bd3a33ae6d2b820bc44a206f9b81b96840219fd libbpf: Bump version to 0.1.0
41c48f3a98231738c5ce79f6f2aa6e40ba924d18 bpf: Support access to bpf map fields
2872e9ac33a4440173418147351ed4f93177e763 bpf: Set map_btf_{name, id} for all map types
1bdb6c9a1c43fdf9b83b2331dfc6229bd2e71d9b libbpf: Add a bunch of attribute getters/setters for map definitions
bdb7b79b4ce864a724250e1d35948c46f135de36 bpf: Switch most helper return values from 32-bit int to 64-bit long
72e2b2b66f9c1225e51fc4a1c1e8512959195b76 bpf: Allow tracing programs to use bpf_jiffies64() helper
af7ec13833619e17f03aa73a785a2f871da6d66b bpf: Add bpf_skc_to_tcp6_sock() helper
478cfbdf5f13dfe09cfd0b1cbac821f5e27f6108 bpf: Add bpf_skc_to_{tcp, tcp_timewait, tcp_request}_sock() helpers
0d4fad3e57df2bf61e8ffc8d12a34b1caf9b8835 bpf: Add bpf_skc_to_udp6_sock() helper
9023497d8746d355bac8ddbc65797a4f553726fd tools, bpftool: Define prog_type_name array only once
d929758101fc0674008169dc1de963e3181c587b libbpf: Support disabling auto-loading BPF programs
bba1dc0b55ac462d24ed1228ad49800c238cd6d7 bpf: Remove redundant synchronize_rcu.
fa28dcb82a38f8e3993b0fae9106b1a80b59e4f0 bpf: Introduce helper bpf_get_task_stack()
6b207d66aa9fad0deed13d5f824e1ea193b0a777 bpf: Fix net/core/filter build errors when INET is not enabled
8d821b5db70723d27ee749b4870de90760606918 selftests/bpf: Switch test_vmlinux to use hrtimer_range_start_ns.
046cc3dd9a2507b8e111714807ab8bf15ea5bb70 bpf: Fix build without CONFIG_STACKTRACE
f5836749c9c04a10decd2742845ad4870965fdef bpf: Add BPF_CGROUP_INET_SOCK_RELEASE hook
e8b012e9fabe7eafc1b2c72414e174547683860d libbpf: Add support for BPF_CGROUP_INET_SOCK_RELEASE
81372e121802fd57892a0b44d93cc747d9568627 libbpf: Add btf__set_fd() for more control over loaded BTF FD
1c5eb4481e0151d579f738175497f998840f7bbc tracing: Rename trace_buffer to array_buffer
13292494379f92f532de71b31a54018336adc589 tracing: Make struct ring_buffer less ambiguous
8959e39272d6e625da1cd62f2e7622d79e04447d kbuild: Parameterize kallsyms generation and correct reporting
af73d78bd384aa9b8789aa6e7ddbb165f971276f kbuild: Remove debug info from kallsyms linking
90ceddcb495008ac8ba7a3dce297841efcd7d584 bpf: Support llvm-objcopy for vmlinux BTF
5a2798ab32ba2952cfe25701ee460bccbd434c75 bpf: Add BTF_ID_LIST/BTF_ID/BTF_ID_UNUSED macros
c9a0f3b85e09dd16665b639cb884490410619434 bpf: Resolve BTF IDs in vmlinux image
138b9a0511c789f2451ff1d80e7fd3f9eef3a9e3 bpf: Remove btf_id helpers resolving
ac5a72ea5c8989871e61f6bb0852e0f91de51ebe bpf: Use dedicated bpf_trace_printk event instead of trace_printk()
079ef53673f2e3b3ee1728800311f20f28eed4f7 bpf: Fix build for disabled CONFIG_DEBUG_INFO_BTF option
11bb2f7a45909f4f64afe471875672ae1b84a380 bpf: Fix cross build for CONFIG_DEBUG_INFO_BTF option
1d33dd84080f4a430bde2fc363d9b70f0a010c19 powerpc/ppc-opcode: Move ppc instruction encoding from test_emulate_step
3a181237916310b2bbbad158d97933bb2b4e7552 powerpc/ppc-opcode: Consolidate powerpc instructions from bpf_jit.h
daa5cdc3fd08407048538585b2433601d4089a82 net: Refactor xdp_convert_buff_to_frame
9216477449f33cdbc9c9a99d49f500b7fbb81702 bpf: cpumap: Add the possibility to attach an eBPF program to cpumap
28b1520ebf81ced970141640d90279ac7b9f1f9a bpf: cpumap: Implement XDP_REDIRECT for eBPF programs attached to map entries
4be556cf5aef416904743f2cee689351f91445b6 libbpf: Add SEC name for xdp programs attached to CPUMAP
ce3aa9cc5109363099b7c4ac82e2c9768afcaf31 bpf, netns: Handle multiple link attachments
e9ddbb7707ff5891616240026062b8c1e29864ca bpf: Introduce SK_LOOKUP program type with a dedicated attach point
a352b32ae969788b706f666f764702cd0ab4a40a bpf: Sync linux/bpf.h to tools/
499dd29d90bb78d4ac4f0d6648e26f4a339829b1 libbpf: Add support for SK_LOOKUP program type
93a3545d812ae7cfe4426374e00a7d8f64ac02e0 tools/bpftool: Add name mappings for SK_LOOKUP prog and attach type
17248ea0367465f4aaef728f6af661ed38e38cf1 s390: fix __EMIT_BUG() macro
05a68e892e89c97df6650cd8cc55058002657cbc s390/kernel: expand exception table logic to allow new handling options
bc4f0548f683a3d53359cef15f088d2d5bb4bc39 bpf: Compute bpf_skc_to_*() helper socket btf ids at build time
0f12e584b241285cf60a6227f3771fa444cfcf76 bpf: Add BTF_ID_LIST_GLOBAL in btf_ids.h
fce557bcef119a1bc5ab3cb02678cf454bcaf424 bpf: Make btf_sock_ids global
951cf368bcb11d6f817709660cf5cd914072c36f bpf: net: Use precomputed btf_id for bpf iterators
14fc6bd6b79c430f615500d0fe6cea4722110db8 bpf: Refactor bpf_iter_reg to have separate seq_info member
f9c792729581bd8b8473af163e8ab426c2c61d89 bpf: Refactor to provide aux info to bpf_iter_init_seq_priv_t
afbf21dce668ef59482037596eaffbe5041e094c bpf: Support readonly/readwrite buffers in verifier
a5cbe05a6673b85bed2a63ffcfea6a96c6410cff bpf: Implement bpf iterator for map elements
d6c4503cc29638f328e1a6e6fefbdbda401c28fc bpf: Implement bpf iterator for hash maps
d3cc2ab546adc6e52b65f36f7c34820d2830d0c9 bpf: Implement bpf iterator for array maps
cd31039a7347610863aa8b77a9162048999723d0 tools/libbpf: Add support for bpf map element iterator
5d99cb2c86775b4780c02a339a9578bf9471ead9 bpf: Fail PERF_EVENT_IOC_SET_BPF when bpf_get_[stack|stackid] cannot work
67c0496e87d193b8356d2af49ab95e8a1b954b3c kernfs: convert kernfs_node->id from union kernfs_node_id to u64
743210386c0354a2f8ef3d697353c7d8477fa81d cgroup: use cgrp->kn->id as the cgroup ID
7d9c3427894fe70d1347b4820476bf37736d2ff0 bpf: Make cgroup storages shared between programs on the same cgroup
2b9b305fcdda1810bdffeb599361174eb2cd0b7c bpf: Fix build on architectures with special bpf_user_pt_regs_t
dc8698cac7aada9b61a612cb819341d84591163e libbpf: Add support for BPF XDP link
9a97c9d2af5ca798377342debf7f0f44281d050e tools, bpftool: Add LSM type to array of prog names
e1613b5714ee6c186c9628e9958edf65e9d9cddd bpf: Fix bpf_ringbuf_output() signature to return long
f6dfbe31e8fa5cbd5bc89df9d7f0fa0af7e69981 bpf: Fix swapped arguments in calls to check_buffer_access
800834285361dcf8e98b018e891df876472a4fac bpf, arm64: Add BPF exception tables
4fc00b79b85d4c34bef06ad49f109ad7cd9e5d83 bpf: Add missing newline characters in verifier error messages
2e49527e52486dac910460b1b3f6fce6e21c6b48 libbpf: Add bpf_link detach APIs
94a1fedd63edb672933bef44ca9213937e377c05 libbpf: Add btf__parse_raw() and generic btf__parse() APIs
932ac54a3e59335a847f7682b5124a788ab3c798 libbf: Fix uninitialized pointer at btf__parse_raw()
5e7b30205cef80f6bb922e61834437ca7bff5837 bpf: Change uapi for bpf iterator map elements
74fc097de327b37e8fe3ff580ce7ffaa7c1740dd tools/bpf: Support new uapi for map element bpf iterator
0d360d64b01231cdb36e1936de889f308fd9317f bpf: Remove inline from bpf_do_trace_printk
d5ca590525cfbd87ca307dcf498a566e2e7c1767 selftests/bpf: Fix silent Makefile output
b8c1a3090741f349322ad855d2b66d6e9752a60d bpf: Delete repeated words in comments
fd09af010788a884de1c39537c288830c3d305db bpf: sock_ops ctx access may stomp registers in corner case
a62f68c172c3954a78c9dbf7e68496c3e9c22aaf doc: Add link to bpf helpers man page
15728ad3e71c120278105f20fa65b3735e715e0f libbpf: Fix BTF-defined map-in-map initialization on 32-bit host arches
44ad23dfbccbcd26d6ca504eba1ac55755864969 libbpf: Handle BTF pointer sizes more carefully
e679654a704e5bd676ea6446fa7b764cbabf168a bpf: Fix a rcu_sched stall issue with bpf task/task_file iterator
3168c158ad3535af1cd7423c9f8cd5ac549f2f9c libbpf: Fix build failure from uninitialized variable warning
dc0988bbe1bd41e2fa555e4a6f890b819a34b49b bpf: Do not use bucket_lock for hashmap iterator
8c33dadc3e0eef1599811a55d748a0b95da0317d bpf: Bpf_skc_to_* casting helpers require a NULL check on sk
e23bb04b0c938588eae41b7f4712b722290ed2b8 bpf: Fix sysfs export of empty BTF section
65c204398928f9c79f1a29912b410439f7052635 bpf: Prevent .BTF section elimination
1245008122d7311683d70c05b2eea167a314fb5f libbpf: Fix native endian assumption when parsing BTF
87f92ac4c12758c4da3bbe4393f1d884b610b8a6 libbpf: Fix XDP program load regression for old kernels
9cf51446e68607136e42a4e531a30c888c472463 bpf, powerpc: Fix misuse of fallthrough in bpf_jit_comp()
d82a532a611572d85fd2610ec41b5c9e222931b6 bpf: Fix "unresolved symbol" build error with resolve_btfids
d66423fbe11e141206f117b232916aa899d44959 bpf: Plug hole in struct bpf_sk_lookup_kern
93c230e3f5bd6e1d2b2759d582fdfe9c2731473b bpf: Enforce id generation for all may-be-null register type
912f442cfb1fc695510e055bdae5f4a88e4de6b8 bpf: Override the meaning of ARG_PTR_TO_MAP_VALUE for sockmap and sockhash
cf83b2d2e2b64920bd6999b199dfa271d7e94cf8 bpf: Permit cond_resched for some iterators
cb72477be7290ce81ad81838039e106c194ab16f scsi: ibmvfc: Set and track hw queue in ibmvfc_event struct
31750fbd7b6decc81d7736f236ea8be0f397df08 scsi: ibmvfc: Send commands down HW Sub-CRQ when channelized
c6825c6395b7dbcb5421d89ac8d5631be815ca36 serial: 8250_tegra: Create Tegra specific 8250 driver
1f705bc61aee5fab2826bcf6de152a5d92378a85 net: stmmac: Add support for CBS QDISC
c18a9c096683dd30300686ffc755443816893968 net: stmmac_tc: use 64-bit arithmetic instead of 32-bit
8f704ef666406fc5e42032308a2b366ea7bca846 stmmac: fix signed 64-bit division
0650d4017f4d2eee67230a02285a7ae5204240c2 net: stmmac: Check if CBS is supported before configuring
1a981c0586c038710227eb740350f291e77ce365 net: stmmac: Make MDIO bus reset optional
d1a55841ab24c6d1e4087e5c285601a9dffb8641 net: Remove dev_err() usage after platform_get_irq()
425eabddaf0f6e81756720f60a838a3941a6ceb8 net: stmmac: Implement L3/L4 Filters using TC Flower
5904a980f93c6bba44055dd4e7c6cb6cbb8b2a48 net: stmmac: xgmac: Implement ARP Offload
c2b69474d63b62e7a1898faf86d096ad132e7baa net: stmmac: xgmac: Correct RAVSEL field interpretation
b6b6cc9acd7b99df216c007e9565aebdc2c77469 net: stmmac: selftest: avoid large stack usage
c11986b9fa74cd3ce218e0ca7e0de88d30e6f497 net: stmmac: xgmac: Detect Hash Table size dinamically
3c72d4d33059cf84a23492e827731f12c023ab00 net: stmmac: xgmac: Fix RSS not writing all Keys to HW
56627336b655494356a23e65200c21718a1c3b2b net: stmmac: xgmac: Fix RSS writing wrong keys
bad28d889caea00bc9415c59fa6a433a72eeaf5e net: stmmac: make tc_flow_parsers static
08c1ac3bcba8cd52449f55a065e60779a0fa2c97 net: stmmac: xgmac: Fix AV Feature detection
399e06a517b6f1da5f617d413f6e5489f5054f7a ethernet: Delete unnecessary checks before the macro call \xe2\x80\x9cdev_kfree_skb\xe2\x80\x9d
cda4985a3ebb95f14fe3a9dc905820417baf79a5 net: stmmac: Fix the packet count in stmmac_rx()
bc41a6689b30abaf213c66ac574beefb6d02717c net: stmmac: tc: Remove the speed dependency
88ebe2cf7f3fc9da95e0f06483fd58da3e67e675 net: stmmac: Rework stmmac_rx()
d46b7e4fb06037a61415f5b6964fcf632ee1dc34 net: phylink: rename mac_link_state() op to mac_pcs_get_state()
93b5dce401ccd4a688fe1f0d0bf0d97e63cdf921 net: stmmac: Only the last buffer has the FCS field
7bd754c47dd3ad1b048c9641294b0234fcce2c58 net: stmmac: tc: Do not setup flower filtering if RSS is enabled
b9f0b2f634c0765999bec5547bc7a4ac08fda3ff net: stmmac: platform: fix probe for ACPI devices
504723af0d85434be5fb6f2dde0b62644a7f1ead net: stmmac: Add basic EST support for GMAC5+
8572aec3d0dc43045254fd1bf581fb980bfdbc4b net: stmmac: Add basic EST support for XGMAC
b60189e0392fa06348911077ef281eb2b1047b6a net: stmmac: Integrate EST with TAPRIO scheduler API
1ac14241543c0108e9fd23aca4927a148a44c815 net: stmmac: Add Frame Preemption support using TAPRIO API
7c7282746883e48aff54ff6d55e6d8674a0c414a net: stmmac: gmac5+: Add support for Frame Preemption
f0e56c8d8f7d0e03e571e21c778f02d226aaeb97 net: stmmac: xgmac3+: Add support for Frame Preemption
a1ec57c020201ba29608a5a3588832d07de1a518 net: stmmac: tc: Fix TAPRIO division operation
8eea7c7f3f2fcc8d580df331890090a023ef3f6b net: stmmac: xgmac: Fix missing return
e735def0186770d9a2904bee6ee82a4e6dd99578 net: stmmac: gmac5+: Fix missing return
579a25a854d482bc9d0f9ab0e07ba32fb66bd9e3 net: stmmac: Initial support for TBS
430b383c737ca07e83e0fe2a8d1ecdff6f4974bd net: stmmac: tc: Add support for ETF Scheduler using TBS
6a549b9f0dcd9a73991077da64eb3603b3e5f681 net: stmmac: xgmac: Add TBS support
58ae92814008a324fc5698fa76fcd7497207fe0f net: stmmac: gmac4+: Add TBS support
07cc79efb1e53967444766f9e3abf9f0af362b93 net: ethernet: stmmac: demote warnings about missing optional clocks
91a208f2185ad4855ff03c342d0b7e4f5fc6f5df net: phylink: propagate resolved link config via mac_link_up()
f213bbe8a9d6ba1d0adf424787c02f361ea78c38 net: stmmac: Integrate it with DesignWare XPCS
ed64639bc1e0899d89120b82af52e74fcbeebf6a net: stmmac: Add support for VLAN Rx filtering
dd6a4998e64a7806b54c3eba1e5e7bf6c81ccf8c net: stmmac: Fix VLAN filtering when HW does not support it
b9663b7ca6ff780555108394c9c1b409f63b99a7 net: stmmac: Enable SERDES power up/down sequence
801eb0501824da196c7b1c18c453528457308c5a stmmac: intel: Fix kernel crash due to wrong error path
44d95cc6b10ff7439d45839c96c581cb4368c088 net: stmmac: gmac5+: fix potential integer overflow on 32 bit multiply
31096c3e8b1163c6e966bf4d1f36d8b699008f84 net: stmmac: don't attach interface until resume finishes
f1da567f1dc1b55d178b8f2d0cfe8353858aac19 driver core: platform: Add platform_get_irq_byname_optional()
c114574ebfdf42f826776f717c8056a00fa94881 net: phy: add PHY_INTERFACE_MODE_10GBASER
c89f44ff10fd4cdcfbebf4854aa1282fdad8de5d net: stmmac: Add support for VLAN promiscuous mode
e859a60add1dd3f844c94c7a782c1a16610bd192 net: phylink: avoid oops during initialisation
31f2760e41d3315e01895c4a9f9d365a5549ebfa net: stmmac: set get_rx_header_len() as void for it didn't have any error code to return
686cff3d7022ddf35d7e38bc80191eb92de5989a net: stmmac: Fix incorrect location to set real_num_rx|tx_queues
aa042f60e4961d4bec57e3268624df1f3a6befa4 net: stmmac: Add support to Ethtool get/set ring parameters
e0f9956a3862b32ad73869a8e52a33c84aafa46f net: stmmac: Add option for VLAN filter fail queue enable
fe28c53ed71d463e187748b6b10e1130dd72ceeb net: stmmac: fix taprio configuration when base_time is in the past
d7495343228f30d8206e92dccfd1c41adcfa142d cgroup: fix incorrect WARN_ON_ONCE() in cgroup_setup_root()
190ecb190a9cd8c0599d8499b901e3c32e87966a cgroup: fix psi_show() crash on 32bit ino archs
673235f915318ced5d7ec4b2bfd8cb909e6a4a55 scsi: core: Fix race between handling STS_RESOURCE and completion
fb01a2932e81a1fb2273f87ff92dc8172b8880ee blk-mq: add new API of blk_mq_hctx_set_fq_lock_class
7aa390ec2d9db0cd6677d95d0b8f307f9c086770 Revert "block: Fix a lockdep complaint triggered by request queue flushing"
435ccfa894e35e3d4a1799e6ac030e48a7b69ef5 tcp: Prevent low rmem stalls with SO_RCVLOWAT.
1de111b51b829bcf01d2e57971f8fd07a665fa3f KVM: arm64: ARM_SMCCC_ARCH_WORKAROUND_1 doesn't return SMCCC_RET_NOT_REQUIRED
91a2c34b7d6fadc9c5d9433c620ea4c32ee7cae8 KVM: arm64: Force PTE mapping on fault resulting in a device mapping
fd02029a9e019e941835e110651486e2d77d3f84 KVM: selftests: Add aarch64 get-reg-list test
31d212959179015bc07f3af4e890cadd26e01ee0 KVM: selftests: Add blessed SVE registers to get-reg-list
c6232bd40b2eda3819d108e6e3f621ec604e15d8 KVM: arm64: selftests: Filter out DEMUX registers
14bda7a927336055d7c0deb1483f9cdb687c2080 KVM: arm64: Add kvm_vcpu_has_pmu() helper
472c2e07eef045145bc1493cc94a01c87140780a tcp: add one skb cache for tx
4f661542a40217713f2cee0bb6678fbb30d9d367 tcp: fix zerocopy and notsent_lowat issues
eb70a1ae2339769156f8ecddd7f6cd59ac994888 tcp: cleanup sk_tx_skb_cache before reuse
d7cc399e1227e74e44f78847d9732a228b46cc91 tcp: properly reset skb->truesize for tx recycling
858f5017446764e8bca0b29589a3b164186ae471 tcp: do not recycle cloned skbs
0b7d7f6b22084a3156f267c85303908a8f4c9a08 tcp: add tcp_tx_skb_cache sysctl
13c7ba0c8494a4fcee9e8cc163ae332d0480bde5 mptcp: adjust mptcp receive buffer limit if subflow has larger one
93f323b9cccc1fc77660de49faefd11fdfd55017 mptcp: add a new sysctl add_addr_timeout
9ce7deff92e89b1807d0968c0b319d26361a72a6 docs: networking: mptcp: Add MPTCP sysctl entries
724d06b437bba9faf280842a983e69c04f244767 mptcp: fix static checker warnings in mptcp_pm_add_timer
0f31746452e6793ad6271337438af8f4defb8940 tcp: annotate tp->write_seq lockless reads
b796d04bd014fd24e60ab4a6c604b258ac947825 tcp: factor out tcp_build_frag()
ba8f48f7a4d79352b764ace585b5f602ef940be0 mptcp: introduce mptcp_schedule_work
caf971df01b86f33f151bcfa61b4385cf5e43822 mptcp: reduce the arguments of mptcp_sendmsg_frag
f0e6a4cf11f16425ccdc69f4410e4fe59719a9ea mptcp: add accounting for pending data
e16163b6e2b720fb74e5af758546f6dad27e6c9e mptcp: refactor shutdown and close
d9ca1de8c0cd7a8ca2a0506e1741418741848e53 mptcp: move page frag allocation in mptcp_sendmsg()
813e0a683d4cacb668622bc9a1693cb82b5f8ff8 mptcp: try to push pending data on snd una updates
8edf08649eede6e5a3e39a3d38c63f30039a0c1e mptcp: rework poll+nospace handling
6f8a612a33e426d473f7161d1950dc00a613494b mptcp: keep track of advertised windows right edge
7ed90803a213736290bdcf971764ddb8ff3fa44f mptcp: send explicit ack on delayed ack_seq incr
b680a214ec281dbd44b5ebbf3f126a57f1ecf0f7 mptcp: update rtx timeout only if required.
b2771d2419fa6e978dec9ba6ccb93c5c76106374 mptcp: drop WORKER_RUNNING status bit
26aa231439fef49f11284ea9d9245e074d69197a mptcp: fix state tracking for fallback socket
0397c6d85f9c6f81f6dc3a0a166331b2475b325c mptcp: keep unaccepted MPC subflow into join list
d91d322a72a390702376787b925711ce8338daec mptcp: change add_addr_signal type
84dfe3677a6f45b3d0dfdd564e55717a1a5e60cc mptcp: send out dedicated ADD_ADDR packet
fa3fe2b150316b294f2c662653501273ff25bba8 mptcp: track window announced to peer
ea4ca586b16ff2eb6157fe13969eb72d2403a3a1 mptcp: refine MPTCP-level ack scheduling
b6d69fc8e8cfd1694e709c16e6192339bde68923 mptcp: put reference in mptcp timeout timer
fd8976790a6c1fee98bd7bc73754ddc9f01273ab mptcp: be careful on MPTCP-level ack.
e93da92896bc0ddc26e88bbc09e7e39b84366a38 mptcp: implement wmem reservation
879526030c8b5e8bd786a6408730893b9b2958ea mptcp: protect the rx path with the msk socket spinlock
724cfd2ee8aa12e933253bb7a8bccb743a6fa6ef mptcp: allocate TX skbs in msk context
7439d687b79cbbd971c6a170be9aefda4a564be4 mptcp: avoid a few atomic ops in the rx path
6e628cd3a8f78cb0dfe85353e5e488bda296bedf mptcp: use mptcp release_cb for delayed tasks
05e3ecea4a6305597a060da0a123c80df8827bf1 mptcp: avoid potential infinite loop in mptcp_recvmsg()
41dd9596d6b239a125c3d19f9d0ca90bdbfbf876 security: add const qualifier to struct sock in various places
7ea851d19b23593d7601ecb8091d529f4f475bf5 tcp: merge 'init_req' and 'route_req' functions
3ecfbe3e820997033beb4181c95d80d5c9ac6f85 mptcp: emit tcp reset when a join request fails
2ec72faec86bc92c573fc3bada8001115670da44 mptcp: use adding up size to get ADD_ADDR length
4a2777a83406cc87edf08b5c71887d896f628525 mptcp: add the outgoing ADD_ADDR port support
fbe0f87ac7710de31f9c37280b08e0d0d43aa6bf mptcp: send out dedicated packet for ADD_ADDR using port
0f5c9e3f079f1d0355fd8f5e5ec7e3ada095eef4 mptcp: add port parameter for mptcp_pm_announce_addr
90a4aea8b6edff458977361be4b403779c84af80 mptcp: print out port and ahmac when receiving ADD_ADDR
42842a425ad6d1ef1087b63486879a6d54b26893 mptcp: drop rm_addr_signal flag
13ad9f01a29e3f458fb3b319fb53323b2b0d1e68 mptcp: rename add_addr_signal and mptcp_add_addr_status
432d9e74d8a303fc0e897392e7b8334ba222c5f8 mptcp: use the variable sk instead of open-coding
5b950ff4331ddda6421b21a779ec23127e8e3eb8 mptcp: link MPC subflow into msk only after accept
0597d0f8e030d1a5e64708b0f3233209a8b5d39e mptcp: plug subflow context memory leak
d7b1bfd0832c1d005f571203306b6c50e9805150 mptcp: be careful on subflows shutdown
ab82e996a1fa1b9ae514fa357d9ce8df62321157 mptcp: hold mptcp socket before calling tcp_done
50c504a20a754ca37b5e1f4e660cd687769a7dca mptcp: parse and act on incoming FASTCLOSE option
15e6ca974b14c2dc4221738ef81b23ef694c9160 mptcp: let MPTCP create max size skbs
3ae32c07815a24ae12de2e7838d9d429ba31e5e0 mptcp: clear use_ack and use_map when dropping other suboptions
3f8b2667f257c21a992bda33bfb919ee164a429c mptcp: properly annotate nested lock
219d04992b689e0498ece02d2a451f2b6e2563a9 mptcp: push pending frames when subflow has free space
13e1603739e58e94e7a3c24191fa2dcd1a8a5df3 mptcp: fix pending data accounting
e7579d5d5b3298f7e888ed07ac16bfb7174c135a net: mptcp: cap forward allocation to 1M
efd5a4c04e1835acc64eb44818247ca88e80b294 mptcp: add the address ID assignment bitmap
067065422fcd625492efb7ba130adb8ac1bd8078 mptcp: add the outgoing MP_PRIO support
40453a5c61f4dc43bbbdbf7cefed4eb1bc8d69b7 mptcp: add the incoming MP_PRIO support
0f9f696a502e1b01fbb137a08f56f157da9d95eb mptcp: add set_flags command in PM netlink
0be2ac287bcc8a5b60d7c9ab11892a774052d269 mptcp: add the mibs for MP_PRIO
20bc80b6f582ad1151c52ca09ab66b472768c9c8 mptcp: more strict state checking for acks
76e2a55d16259b51116767b28b19d759bff43f72 mptcp: better msk-level shutdown.
13a9499e833387fcc7a53915bbe5cddf3c336b59 mptcp: fix locking in mptcp_disconnect()
866f26f2a9c33bc70eb0f07ffc37fd9424ffe501 mptcp: always graft subflow socket to parent
5cf92bbadc585e1bcb710df75293e07b7c846bb6 mptcp: re-enable sndbuf autotune
ec369c3a337fe075a7bd4da88d163d44c62ccbb1 mptcp: do not queue excessive data on subflows
40dc9416cc957ac8b74d09550a808fabfd4435f8 mptcp: schedule work for better snd subflow selection
b19bc2945b40b9fd38e835700907ffe8534ef0de mptcp: implement delegated actions
8321ddb2fa2964bffbc61400894a47dc3462323f xfs: don't drain buffer lru on freeze and read-only remount
1d05334d2899bd3ecdf01beb53f0a70884a7f471 livepatch: Remove .klp.arch
a4ae16f65c335f8be58b67b78628c788c4b325a5 livepatch: Make klp_apply_object_relocs static
1cd7af509dc223905dce622c07ec62e26044e3c0 Documentation: x86: convert resctrl_ui.txt to reST
7c7a49958286fee9a2b18baffc9c626304a00843 Documentation: x86: Remove cdpl2 unspported statement and fix capitalisation
b5453a8ec310f3ee2f7689958d63d9b8ffcbcd3e Documentation: x86: Clarify MBA takes MB as referring to mba_sc
57794aab8884087debb22fc214d8ca81999ffb0e Documentation: x86: fix some typos
2c18bd525c47f882f033b0a813ecd09c93e1ecdf x86/resctrl: Fix memory bandwidth counter width for AMD
1d97898b36bab91e8ffb38a660cc40eaba613f88 ipv6: add ipv6_fragment hook in ipv6_stub
c129412f74e99b609f0a8e95fc3915af1fd40f34 net/sched: sch_frag: add generic packet fragment support.
193d357d087309f2d5ab8e8caab1af5e3bc29fa0 net: spread "enum sock_flags"
dfde1d7dee9bfd095a4f16c9e0579a10f4092e81 sock: Move sock_valbool_flag to header
71c48eb81c9ecb6fed49dc33e7c9b621fdcb7bf8 tcp: add tcp_sock_set_keepidle
aad4a0a9513af962137c4842463d11ed491eec37 tcp: Expose tcp_sock_set_keepidle_locked
38fd525a4c61e7ecdc9ad4dcbf7b767d0a007962 exit: Factor thread_group_exited out of pidfd_poll
8c2f52663973e643c617663d826e2b0daa008b38 umd: Remove exit_umh
8aa5a33578e9685d06020bd10d1637557423e945 xsk: Add new statistics
2f0bc54ba9a85032f2402faf0fccab513848300a xdp: introduce xdp_get_shared_info_from_{buff, frame} utility routines
1559b4aa1db443096af493c7d621dc156054babe inet: Run SK_LOOKUP BPF program on socket lookup
7629c73a1466ec2348e9f64c874c19bf13f35f4c udp: Extract helper for selecting socket from reuseport group
72f7e9440e9bd06f855b21eba09c1017395f430a udp: Run SK_LOOKUP BPF program on socket lookup
2a08748cd384cdfb8e1222bd3645a8d1d36e6a5d udp6: Extract helper for selecting socket from reuseport group
343ead287dde0064c430ee1db477726f52e0269c bpf, netns: Fix build without CONFIG_INET
7f0a838254bdd9114b978ef2541a6ce330307e9e bpf, xdp: Maintain info on attached XDP BPF programs in net_device
d4baa9368a5e4d694e787e0442ddd6ab95d6fd96 bpf, xdp: Extract common XDP program attachment logic
aa8d3a716b59db6c1ad6c68fb8aa05e31980da60 bpf, xdp: Add bpf_link-based XDP attachment API
026a4c28e1db3b0cb99cd9a3e495d4a8b632fa74 bpf, xdp: Implement LINK_UPDATE for BPF XDP link
c1931c9784ebb5787c0784c112fb8baa5e8455b3 bpf: Implement BPF XDP link-specific introspection APIs
e8407fdeb9a6866784e249881f6c786a0835faba bpf, xdp: Remove XDP_QUERY_PROG and XDP_QUERY_PROG_HW XDP commands
c8a2983c4df06c4cd11bea6abfa7e2947bd3113b udp: Don't discard reuseport selection when group has connections
b1ea9ff6aff2deae84eccaf0a07cd14912669680 net: switch copy_bpf_fprog_from_user to sockptr_t
6d04fe15f78acdf8e32329e208552e226f7a8ae6 net: optimize the sockptr_t for unified kernel/user address spaces
d3c48151512922dd35f1f393b30b9138e4441d14 net: remove sockptr_advance
a31edb2059ed4e498f9aa8230c734b59d0ad797a net: improve the user pointer check in init_user_sockptr
519a8a6cf91dda095be2d36216fc4ebc525270a1 net: Revert "net: optimize the sockptr_t for unified kernel/user address spaces"
c64c9c282a9a7ec0515b725d5aaed68c32e403a4 udp, bpf: Ignore connections in reuseport group after BPF sk lookup
3c4f850e8441ac8b3b6dbaa6107604c4199ef01f xdp: Prevent kernel-infoleak in xsk_getsockopt()
310ad7970a0dec847563dc6dba9e7e587d545622 bpf: Fix build without CONFIG_NET when using BPF XDP link
73b11c2ab072d5b0599d1e12cc126f55ee306daf bpf: Add support for forced LINK_DETACH command
068d9d1eba72423e99162aad3586727180715c2a bpf: Fix XDP FD-based attach/detach logic around XDP_FLAGS_UPDATE_IF_NOEXIST
c8a36f1945b2b1b3f9823b66fc2181dc069cf803 bpf: xdp: Fix XDP mode when no mode flags specified
ffa59b0b396cb2c0ea6712ff30ee05c35d4c9c8d netdevice.h: fix xdp_state kernel-doc warning
36ccdf85829a7dd6936dba5d02fa50138471f0d3 net, xsk: Avoid taking multiple skbuff references
998f17296234aa8d3676b4a13962eb39f4ad24e0 xdp: Remove the xdp_attachment_flags_ok() callback
5137d303659d8c324e67814b1cc2e1bc0c0d9836 net: flow_offload: Fix memory leak for indirect flow block
51aff91ad123e03d1461ec1d980efd1814dca69e ASoC: soc-component: add mark for soc_pcm_components_open/close()
939a5cfb2a5609d2d6f996b5cd853397a82a92b9 ASoC: soc-component: add mark for snd_soc_pcm_component_pm_runtime_get/put()
6064ed73cd2405d13c252b190ac64c03ab40e4b9 ASoC: soc-link: add mark for snd_soc_link_startup/shutdown()
140a4532cdb8c44a664e7e871ea5dbaa4c2829bc ASoC: soc-pcm: add soc_pcm_clean() and call it from soc_pcm_open/close()
ce820145a9ec04797a417fcb01b8ff02dcfd9846 ASoC: soc-pcm: remove unneeded dev_err() for snd_soc_dai_startup()
bcae16317bcfa45f6b767cf59e02e9cc72715d27 ASoC: soc-pcm: remove unneeded dev_err() for snd_soc_component_module/open()
cb2fce94c84e2c2798dca45aa00d1e03294fab95 ASoC: soc-pcm: ignore un-needed mutex_unlock() case on soc_pcm_open()
8e7875ae373a3690397c4e593629d3b9ad5ccf42 ASoC: soc-pcm: add missing ret=0 at soc_pcm_open()
edbaaada5c9b57e243a98bf5b442f3a7a43ed14d ASoC: SOF: Intel: hda: define parse_platform_ext_manifest op
e3a85dbe30cf4c6904640da10e7dbd18c4ee7be7 ASoC: SOF: ext_manifest: parse cavs extra config data elem
fbfa22ec4b2b8a1bb1a52c56c376295c7b7e7849 ASoC: SOF: modify the SOF_DBG flags
8f7ef6fca0317fb217d1eef8f30010d7a9c6ae0e ASoC: SOF: Intel: hda: fix the condition passed to sof_dev_dbg_or_err
5b10b62989219aa527ee4fa555d1995a3b70981b ASoC: SOF: Add `memory_info` file to debugfs
029258d7b22894fabcecb1626e1b87d18a6823f4 libbpf: Remove any use of reallocarray() in libbpf
740e69c3c511aa207155ba993a854b5bee79cdc2 libbpf: Refactor internals of BTF type index
b86042478fa083d87f1b67047e788d70b8c81eef libbpf: Remove assumption of single contiguous memory for BTF data
192f5a1fe6894dca58d14dc883e6c7030e7267f7 libbpf: Generalize common logic for managing dynamically-sized arrays
919d2b1dbb074d438027135ba644411931179a59 libbpf: Allow modification of BTF and add btf__add_str API
a871b04310248024e022e104eba3ec81d144cc64 libbpf: Add btf__new_empty() to create an empty BTF object
4a3b33f8579af182ebcf9c7e9304effce505500e libbpf: Add BTF writing APIs
f86ed050bcee3b7daa420eb31a8b6d079701caab libbpf: Add btf__str_by_offset() as a more generic variant of name_by_offset
9141f75a3279bab4a7d761c6050d96777b646767 selftests/bpf: Test BTF writing APIs
3289959b97cac205df006fc79c88f042bf2765ab libbpf: Support BTF loading and raw data output in both endianness
33433913459a6bfbfa808c202d6f5490aa43d7a7 libbpf: Fix uninitialized variable in btf_parse_type_sec
0afda3a888dccf12557b41ef42eee942327d122b locking/lockdep: Cure noinstr fail
2d18e54dd8662442ef5898c6bdadeaf90b3cebbc cgroup: Fix memory leak when parsing multiple source parameters
56292e8609e39537297a7468dda4d87b9bd81d6a rcu/tree: Defer kvfree_rcu() allocation to a clean context
989a1db06eb18ff605377eec87e18d795e0ec74b net: bridge: Fix a warning when del bridge sysfs
1c3d247eee746016f268a3e7f6b4a11cfa205e8e RDMA/mlx5: Remove mlx5_ib_mr->npages
ca991a7d14d4835b302bcd182fdbf54470f45520 RDMA/mlx5: Assign dev to DM MR
b544011f0e58ce43c40105468d6dc67f980a0c7a net/mlx5e: Fix SWP offsets when vlan inserted by driver
3b050680c84153d8e6f5ae3785922cd417f4b071 drm/nouveau/core: recognise GA10[024]
70afbe4bdc0a7ccdb462a38216f5abc3db7e5c1b drm/nouveau/pci/ga10[024]: initial support
a34632482f1ea768429a9d4c79a10d12f5093405 drm/nouveau/bios/ga10[024]: initial support
7ddf5e9597faa6f939370e294e0f6d9516d2a431 drm/nouveau/devinit/ga10[024]: initial support
21e938d0017d3523ef5114a8feebc32e95007983 drm/nouveau/ltc/ga102: initial support
e0df4bbfc3365d7699e32bebb24647dc7a09b00c drm/nouveau/privring/ga10[024]: initial support
de4781d0f22b54fdbe7ac459eb67b585ca3ee430 drm/nouveau/imem/ga10[024]: initial support
41ba806f40a9a4c4f4c04a474bf368160f1baa2c drm/nouveau/fb/ga10[024]: initial support
6f300e0a0ba8873f1225959089f8bb2897d93ec6 drm/nouveau/timer/ga10[024]: initial support
a3abc23ac40111c76708119013d63451169e7838 drm/nouveau/mmu/ga10[024]: initial support
4b569ded09fdadb0c14f797c8dae4e8bc4bbad9f drm/nouveau/acr/ga102: initial support
c28efb15f9e51a96c6bce2b92c0f3a4da87db877 drm/nouveau/gpio/ga10[024]: initial support
8a0412265f06490d93724bf8badf220180790ad1 drm/nouveau/i2c/ga10[024]: initial support
a6cf0320aad0c69a6b558dd41d3cb6891a6c9872 drm/nouveau/dmaobj/ga10[24]: initial support
8ef23b6f6a79e6fa2a169081d2d76011fffa0482 drm/nouveau/disp/ga10[24]: initial support
142537e419234c396890a22806b8644dce21b132 net_sched: sch_fq: switch to CLOCK_TAI
ab408b6dc7449c0f791e9e5f8de72fa7428584f2 tcp: switch tcp and sch_fq to new earliest departure time model
c092dd5f4a7f4e4dbbcc8cf2e50b516bf07e432f tcp: switch tcp_internal_pacing() to tcp_wstamp_ns
fb420d5d91c1274d5966917725e71f27ed092a85 tcp/fq: move back to CLOCK_MONOTONIC
a7a2563064e963bc5e3f39f533974f2730c0ff56 tcp: mitigate scheduling jitter in EDT pacing model
7baf33bdac37da65ddce3adf4daa8c7805802174 net_sched: sch_fq: no longer use skb_is_tcp_pure_ack()
864e5c090749448e879e86bec06ee396aa2c19c5 tcp: optimize tcp internal pacing
97ec3eb33dd300764ca5fa8923e5430dc4dbac13 tcp_bbr: fix typo in bbr_pacing_margin_percent
a87c83d5ee25cf7208279819642ae7bd218e3782 tcp_bbr: adjust TCP BBR for departure time pacing
79861919b8896e14b8e5707242721f2312c57ae4 tcp: fix TCP_REPAIR xmit queue setup
1106a5ade15fa2effdbfb3b3a1ba560a536dbcfe tcp_bbr: update comments to reflect pacing_margin_percent
08e14fe429a07475ee9f29a283945d602e4a6d92 net_sched: sch_fq: ensure maxrate fq parameter applies to EDT flows
bf50b606cfd85ac8d3d0adb711f3e22204059848 tcp: repaired skbs must init their tso_segs
9669fffc1415bb0c30e5d2ec98a8e1c3a418cb9c net: ensure correct skb->tstamp in various fragmenters
8dc242ad661c2694a582541c2264ffc0e7c4d27d tcp: refine tcp_pacing_delay() for very low pacing rates
da74240eb3fcd806edb1643874363e954d9e948b mm/filemap: add missing mem_cgroup_uncharge() to __add_to_page_cache_locked()
34f8fe501f0624de115d087680c84000b5d9abc9 bdi: Add bdi->id
9c9be85f6b59d80efe4705109c0396df18d4e11d net/mlx5e: Add missing capability check for uplink follow
e2194a1744e8594e82a861687808c1adca419b85 net/mlx5: CT: Fix incorrect removal of tuple_nat_node from nat rhashtable
5bef709d76a28a50a5beaac9f1af1facf66af7f3 net/mlx5: Enable host PF HCA after eswitch is initialized
2614488d1f3cd5989375042286b11424208e20c8 RDMA/mlx5: Allow creating all QPs even when non RDMA profile is used
ee69c92bac61f4379e97f40b259a1c1257e5987f KVM: x86: Return bool instead of int for CR4 and SREGS validity checks
c21d54f0307ff42a346294899107b570b98c47b5 KVM: x86: hyper-v: allow KVM_GET_SUPPORTED_HV_CPUID as a system ioctl
8b460692fee46a47cebd66d70df88dc9aa6d6b8b KVM: selftests: test KVM_GET_SUPPORTED_HV_CPUID as a system ioctl
8cce12b3c82717df72afb955ce74c769b0eb2b4f KVM: nSVM: set fixed bits by hand
be261ffce6f13229dad50f59c5e491f933d3167f x86: Remove X86_FEATURE_MFENCE_RDTSC
5866e9205b47a983a77ebc8654949f696342f2ab x86/cpu: Add hardware-enforced cache coherency as a CPUID feature
88bf56d04bc3564542049ec4ec168a8b60d0b48c kvm: check tlbs_dirty directly
d95df9510679757bdfc22376d351cdf367b3a604 kvm: tracing: Fix unmatched kvm_entry and kvm_exit events
054409ab253d9f31bec5760105144166b4b71e22 KVM: SVM: fix error return code in svm_create_vcpu()
8b474427cbeea05850fb32da65cc95eebcbad089 KVM: x86: use kvm_complete_insn_gp in emulating RDMSR/WRMSR
17fae1294ad9d711b2c3dd0edef479d40c76a5e8 x86/{mce,mm}: Unmap the entire page if the whole page is affected and poisoned
2a3f34750b8b07df42ab4b30b70e029d46e0d7f3 PM: sleep: core: Rename DPM_FLAG_LEAVE_SUSPENDED
0b104773b4f72ccd8af98a2f1efe69b174c344d3 PCI: Constify struct pci_ecam_ops
7a7d66f26b0ff47e7edbc9df884ad711ed918992 acpi: thermal: Don't call thermal_zone_device_is_enabled()
b8e069a2a8da02137605ba585837a3a0c45df01a ACPI/IORT: Add an input ID to acpi_dma_configure()
384b02d6b83bd4c5df96de00658623b4e04e2472 i2c: designware: Add device HID for Hygon I2C controller
d58669b093997e4e5f98c38a54f99761657c19d2 ACPI: APD: Change name from ST to FCH
877c1a5f79c6984bbe3f2924234c08e2f4f1acd5 PCI/ACPI: Add Ampere Altra SOC MCFG quirk
32c6f3ffa0182d7f1a8f3e385de3fef74bc27b24 ACPI: APD: Clean up header file include statements
f2af6d3978d74a7891d0f428537b4494498202cb virtio-mem: Allow to specify an ACPI PXM as nid
3b0d31011d39759e3ba7214f75f77bb31983b5a4 x86/numa: add 'nohmat' option
c01044cc819160323f3ca4acd44fca487c4432e6 ACPI: HMAT: refactor hmat_register_target_device to hmem_register_device
c6237b210ddc4f026a368172e957cbd3d5b5c78a ACPI: Fix whitespace inconsistencies
6ce73ba7691555fd182bc68529dc03cbd4378f72 powerpc/ppc-opcode: Add encoding macros for VSX vector paired instructions
3d2ffcdd2a982e8bbe65fa0f94fb21bf304c281e powerpc/watchpoint: Workaround P10 DD1 issue with VSX-32 byte instructions
ec99a470c7d5517c97dee6dd7953275a92c63834 mptcp: fix length of MP_PRIO suboption
38bf8cd821be292e7d8e6f6283d67c5d9708f887 selftests: fix poll error in udpgro.sh
c30da2e981a703c6b1d49911511f7ade8dac20be fuse: convert to use the new mount API
c7eb6869632a5d33b41d0a00d683b8395392b7ee vfs: subtype handling moved to fuse
96cafb9ccb153f6a82ff2c9bde68916d9d65501e fs_parser: remove fs_parameter_description name field
d7167b149943e38ad610191ecbb0800c78bbced9 fs_parse: fold fs_parameter_desc/fs_parameter_spec
2e28c49ea648d29c3d7b625ea6996addf28335ec fuse: switch to use errorfc() et.al.
0189a2d367f49729622fdafaef5da73161591859 fuse: use ->reconfigure() instead of ->remount_fs()
e8b20a474cf2c42698d1942f939ff2128819f151 fuse: ignore 'data' argument of mount(..., MS_REMOUNT)
b330966f79fb4fdc49183f58db113303695a750f fuse: reject options on reconfigure via fsconfig(2)
7fd3abfa8dd7c08ecacd25b2f9f9e1d3fb642440 virtiofs: do not use fuse_fill_super_common() for device installation
f4fd4ae354ba23c948afb0ee3386182acb96d481 virtiofs: get rid of no_mount_options
1dd539577c42b67da796e2e758e04171bb889779 virtiofs: add a mount option to enable dax
45f2348eceb6a2a5b248ef44ea7dc2c4ede88b30 virtiofs: keep a list of free dax memory ranges
fd1a1dc6f5aa7361e3562790336e116935f8fcfa virtiofs: implement FUSE_INIT map_alignment field
c2d0ad00d948de73c78f05d2b3e5bdfa605035cc virtiofs: implement dax read/write operations
2a9a609a0c4a3b0a6892fbe360b8c419839e6da7 virtiofs: add DAX mmap support
9483e7d5809ab41890298a6a1f5d23c4e10a2cfd virtiofs: define dax address space operations
6ae330cad6ef22ab8347ea9e0707dc56a7c7363f virtiofs: serialize truncate/punch_hole and dax fault path
d0cfb9dcbca6ebd21ec78ea719b451ea4c22cecf virtiofs: maintain a list of busy elements
9a752d18c85ae5da28e4a07d52adfd95eacb2495 virtiofs: add logic to free up a memory range
5d069dbe8aaf2a197142558b6fb2978189ba3454 fuse: fix bad inode
9be1485accd4a0375170b93f90894e7728029078 i2c: i801: Add support for Intel Elkhart Lake
d2923aa4535664ae5c46c3a093985afd18fec118 mfd: intel-lpss: Fix Intel Elkhart Lake LPSS I2C input clock
c7345159f7db6fb69ec1c3b3f8f28cd05c731be2 dma-direct: avoid a forward declaration for phys_to_dma
dab0198413d227f13be7da8abf0d5bc8620427f0 x86/PCI: Remove X86_DEV_DMA_OPS
ac6bbf0cdf4206c517ac9789814c23e372ebce4d iommu: Remove IOMMU_OF_DECLARE
0caf5f4e84fe0a870917984abf1f0eb29fa6e375 iommu/arm-smmu: Convert GR0 registers to bitfields
490325e0c123b2f1f393a679805c580ee69cd2f6 iommu/arm-smmu: Rework cb_base handling
71e8a8cdaff995a46e3e186a736636747cbd2f50 iommu/arm-smmu: Split arm_smmu_tlb_inv_range_nosync()
6100576284e9df139477817e1a207b5fae1a3df8 iommu/arm-smmu: Get rid of weird "atomic" write
19713fd40df8e65759e836129671be5f6f21c626 iommu/arm-smmu: Abstract context bank accesses
00320ce6505821b405992c241ebe4c79f178bf8f iommu/arm-smmu: Abstract GR0 accesses
fc058d37b3450db3e146d475f85e6afd51888997 iommu/arm-smmu: Add implementation infrastructure
6d7dff62afb0c7a880860148a8984d0cddc6e589 iommu/arm-smmu: Move Secure access quirk to implementation
3995e18689fda2434863bdf2a8cd19acea4e61f0 iommu/arm-smmu: Add configuration implementation hook
62b993a36e4c2d60669beb3d1afe038ed44a41ec iommu/arm-smmu: Add reset implementation hook
ba7e4a08bbf7441664b3d140671db8d08ea15f22 iommu/arm-smmu: Add context init implementation hook
4b67f1ddcf23d6dc4b5a3a486b758cb91f725e72 iommu/arm-smmu: Make private implementation details static
d720e64150c79d14f4faf931604faa1f0755134d iommu/arm-smmu: Ensure 64-bit I/O accessors are available on 32-bit CPU
5950b9541b509037aeb9e7b95f88a692bf3f46a3 iommu/io-pgtable-arm-v7s: Add paddr_to_iopte and iopte_to_paddr helpers
3f3b8d0c9c1838271543df9e655032117a663f88 iommu/arm-smmu: Remove .tlb_inv_range indirection
3370cb6bf64f6896a30eb7ad97721b9598c8fb10 iommu/arm-smmu: Remove "leaf" indirection
ae2b60f34ab21780bc30d01ae976cc7340446bde iommu/arm-smmu: Move .tlb_sync method to implementation
696bcfb709862077e8fd0e484cca952db7f2001a iommu/arm-smmu: Remove arm_smmu_flush_ops
931a0ba638e09a707e9a905cb6bea1fb1c6d4183 iommu/arm-smmu: Report USF more clearly
205577ab6f7ade6185f764ed78fb6875dca40205 iommu/io-pgtable-arm: Rationalise MAIR handling
d1e5f26f14272b5039cc198569ec4fabed14e6db iommu/io-pgtable-arm: Rationalise TTBRn handling
6e8fa7404c13ca0497f3ad40e0f37bf08bf6795c Revert "iommu/arm-smmu: Make arm-smmu-v3 explicitly non-modular"
b06c076ea96258f31eabd2987a14193883b3641e Revert "iommu/arm-smmu: Make arm-smmu explicitly non-modular"
34debdca68efd5625a2fcea7df1a215591a01f80 iommu/arm-smmu: Prevent forced unbinding of Arm SMMU drivers
d3daf66621b9dd5749d4661ace74afb84d3d465e iommu/arm-smmu: Support SMMU module probing from the IORT
7359572e1a5d4280ad87b969b0d30be43ef4989a iommu/arm-smmu: Unregister IOMMU and bus ops on device removal
cd221bd24ff5567bbcc11ec0c303141a7c2b71bf iommu/arm-smmu: Allow building as a module
1ea27ee2f76e67f98b9942988f1336a70d351317 iommu/arm-smmu: Update my email address in MODULE_AUTHOR()
8efda06f83d65c015a99d99a195df533aec0fcf9 iommu/arm-smmu-v3: Remove useless of_match_ptr()
7618e479098226799207e021e8b0c2c28a23c96b iommu/io-pgtable-arm: Improve attribute handling
fb485eb18e632ff1071662122b9d9b7d40c23c73 iommu/io-pgtable-arm: Rationalise TCR handling
fba6e960772b7b68189168abc3259384b7a44388 iommu/arm-smmu: Rename public #defines under ARM_SMMU_ namespace
ac4b80e5b9d0ecf906300d79e4dc4df5526579a8 iommu/io-pgtable-arm: Rationalise VTCR handling
db6903010aa5b7691d8234a179f4cf71a119445a iommu/io-pgtable-arm: Prepare for TTBR1 usage
08090744f2dbba6b10d38fb17443c81f66798ca0 iommu/io-pgtable-arm: Fix IOVA validation for 32-bit
79f7a5cb87baa229b321246b3f33af875d8a1ef7 iommu/arm-smmu: Improve SMR mask test
ab362fffa0feb0da23191111e60b641d39130053 iommu/arm-smmu: Restore naming of driver parameter prefix
edcd69ab9a323b7ac7a86e1c44b6c9c46598391f iommu: Add virtio-iommu driver
2a5a314874450decec244923209ce6ba97e3ed93 iommu/virtio: Add probe request
169a126c6e88a99578a309a9021f314b5d532c5f iommu/virtio: Add event queue
ae24fb49d01103c80d6ff3b78714259c1c62c958 iommu/virtio: Update to most recent specification
c1c8058dfb9852eb5adf968b7617a9a4771a08ce iommu/virtio: Remove unused variable
c11738cf9d2931c2dbdc44b984ba03519cdeb7fb iommu: virtio: Use generic_iommu_put_resv_regions()
fa4afd78ea12cf31113f8b146b696c500d6a9dc3 iommu/virtio: Build virtio-iommu as module
7062af3ed2ba451029e3733d9f677c68f5ea9e77 iommu/virtio: Fix freeing of incomplete domains
39b3b3c9cac1b4a64a6e546c9faf0c1011d775d4 iommu/virtio: Reject IOMMU page granule larger than PAGE_SIZE
a4b6c2af8f65439cd29c1de56489bc6e9244db35 iommu/virtio: Use accessor functions for iommu private data
fb3637a113349f53830f7d6ca45891b7192cd28f iommu/virtio: Reverse arguments to list_add
21acf6599cfb4407e9745b36f69c93cf99a3d189 iommu/virtio: Convert to probe/release_device() call-backs
ddf09b6d43ece8e4d5591e4957e89c4fe7714792 iommu/vt-d: Setup pasid entries for iova over first level
e2726daea583d81e447b71e09b79e67f618d6152 iommu/vt-d: debugfs: Add support to show page table internals
4c7c171f85b261f91270d405b7c7390aa6ddfb60 iommu: Introduce cache_invalidate API
808be0aae53a3675337fad9cde616e086bdc8287 iommu: Introduce guest PASID bind function
b0d1f8741b812352fe0e5f3b2381427085f23e19 iommu/vt-d: Add nested translation helper function
4c0fa5bfca7eba479002f0a1ecd1bf7631b2f5da iommu/vt-d: debugfs: Add support to show inv queue internals
bfe6240dfe4f16c20db94bc7c0ab9ffa316fb926 iommu/vt-d: Fix pointer cast warnings on 32 bit
e93a1695d7fb551376b1c1220a267d032b6ad159 iommu: Enable compile testing for some of drivers
d1dcb7255c2b0ae77fbe297e4543c6cfff54e9b9 iommu/mediatek: Fix MTK_IOMMU dependencies
3f84b96c9779c8c2c8f4215a9d08cc6af1d45fdb iommu/virtio: Fix sparse warning
232c5ae8a3614f112712d43e1dbbd8dd6f8453c1 iommu/arm-smmu: Implement iommu_ops->def_domain_type call-back
786dfe496e3b30b92d11cf7ae1d36d1a458702f6 iommu/amd: Merge private header files
ad8694bac410e5d72ad610dfb146f58bf2fe0365 iommu/amd: Move AMD IOMMU driver into subdirectory
672cf6df9b8a3a6d70a6a5c30397f76fa40d3178 iommu/vt-d: Move Intel IOMMU driver into subdirectory
e7fc23838ebbdbb227c8d45fe02904d0d67a0540 iommu/amd: Make amd_iommu_apply_ivrs_quirks() static inline
ad962d864c61a73757085847027a532cbe2c1353 x86: Remove dev->archdata.iommu pointer
5866a75b50b381fa05028e7ff3f2272ed006e321 arm64: Remove dev->archdata.iommu pointer
16ecf10e815d70d11d2300243f4a3b4c7c5acac7 iommu/vt-d: Set U/S bit in first level page table by default
4f8232bbf887123f78bcdca3dfd2b3dfa52a0112 dma-direct: remove the cached_kernel_address hook
fa7e2247c5729f990c7456fe09f3af99c8f2571b dma-direct: make uncached_kernel_address more general
999a5d1203baa7cff00586361feae263ee3f23a5 dma-direct: provide a arch_dma_clear_uncached hook
e860c299ac0d738b44ff91693f11e63080a29698 dma-remap: separate DMA atomic pools from direct remap code
c84dc6e68a1d2464e050d9694be4e4ff49e32bfd dma-pool: add additional coherent pools to map to gfp mask
54adadf9b08571fb8b11dc9d0d3a2ddd39825efd dma-pool: dynamically expanding atomic pools
76a19940bd62a81148c303f3df6d0cee9ae4b509 dma-direct: atomic allocations must come from atomic coherent pools
2edc5bb3c5cc42131438460a50b7b16905c81c2a dma-pool: add pool sizes to debugfs
1d659236fb43c4d2b37af7a4309681e834e9ec9a dma-pool: scale the default DMA coherent pool size with memory capacity
a7f7f6248d9740d710fd6bd190293fe5e16410ac treewide: replace '---help---' in Kconfig files with 'help'
3ee06a6d532f75f20528ff4d2c473cda36c484fe dma-pool: fix too large DMA pools on medium memory size systems
dbed452a078d56bc7f1abecc3edd6a75e8e4484e dma-pool: decouple DMA_REMAP from DMA_COHERENT_POOL
26749b3201ab05e288fbf78fbc8585dfa2da3218 dma-direct: mark __dma_direct_alloc_pages static
633d5fce78a61e8727674467944939f55b0bcfab dma-direct: always align allocation size in dma_direct_alloc_pages()
96a539fa3bb71f443ae08e57b9f63d6e5bb2207c dma-direct: re-encrypt memory if dma_direct_alloc_pages() fails
56fccf21d1961a06e2a0c96ce446ebf036651062 dma-direct: check return value when encrypting or decrypting memory
d07ae4c486908615ab336b987c7c367d132fd844 dma-mapping: DMA_COHERENT_POOL should select GENERIC_ALLOCATOR
71cdec4fab76667dabdbb2ca232b039004ebd40f dma-mapping: warn when coherent pool is depleted
91a6fda95cb67c94b887355690d1923a7eb6f630 dma-mapping: remove dma_mark_declared_memory_occupied
728c1471b54499e618fb8586852ac5e15a2c95ee docs: move DMA kAPI to Documentation/core-api
567f6a6eba0c09e5f502e0290e57651befa8aacb dma-direct: provide function to check physical memory area validity
23e469be6239d9cf3d921fc3e38545491df56534 dma-pool: get rid of dma_in_atomic_pool()
48b6703858dd5526c82d8ff2dbac59acab3a9dda dma-pool: introduce dma_guess_pool()
81e9d894e03f9a279102c7aac62ea7cbf9949f4b dma-pool: make sure atomic pool suits device
d9765e41d8e9ea2251bf73735a2895c8bad546fc dma-pool: do not allocate pool memory from CMA
3f649ab728cda8038259d8f14492fe400fbab911 treewide: Remove uninitialized_var() usage
d35834c64820c7ef397f8a244061d4450720540e dma-mapping: add a dma_ops_bypass flag to struct device
985098a05eee6bf5caca7e997e02a5b15242cfa0 docs: fix references for DMA*.txt files
99b50be9d8ec9ef319cc7d5de07f4d405fac7764 PCI: Treat "external-facing" devices themselves as internal
eb8d93ea3c1d35b0baf693dd0b7c87ec62358fc9 iommu/vt-d: Report page request faults for guest SVA
02f3effddfd04f3f08a24d23a82d1c1c6d89b777 iommu/vt-d: Rename intel-pasid.h to pasid.h
6255c8c8d256b38b550b35c6362750f64ce46b8d powerpc/dma: Remove dev->archdata.iommu_domain
b4ceb4a5359ed1c9ba4a20acf3a70d4bbead3248 iommu: Tidy up Kconfig for SoC IOMMUs
f34ce7a7018c2f71d78fc7f512f6daf01e487114 iommu: Add gfp parameter to io_pgtable_ops->map()
ab65ba57e3acb55920999f96a6152228b52a2f49 iommu/vt-d: Move Kconfig and Makefile bits down into intel directory
cbe94c6e1a7d11050050c4d5b89bb278c163e8d6 iommu/amd: Move Kconfig and Makefile bits down into amd directory
9420139f516d7fbc248ce17f35275cb005ed98ea dma-pool: fix coherent pool allocations for IOMMU mappings
d7e673ec2c8e0ea39c4c70fc490d67d7fbda869d dma-pool: Only allocate from CMA when in same memory zone
892fc9f6835ecf075efac20789b012c5c9997fcc dma-pool: Fix an uninitialized variable bug in atomic_pool_expand()
e52d58d54a321d4fe9d0ecdabe4f8774449f0d6e iommu/amd: Use cmpxchg_double() when updating 128-bit IRTE
5ae9a046a452d60b6a6c076f6df7e3f8e34f918f iommu/amd: Add sanity check for interrupt remapping table length macros
524bb73bc15c56f5587e33c817e103a259b019d2 x86/fpu/xstate: Separate user and supervisor xfeatures mask
71581eefd7a0a81b1af7d7c93641925a01d70a9a x86/fpu/xstate: Introduce XSAVES supervisor states
5d6b6a6f9b5ce7ac42273efd75d61ec63b463c18 x86/fpu/xstate: Update sanitize_restored_xstate() for supervisor xstates
eeedf1533687b8e81865fdbde79eddf7c4b76c9a x86/fpu: Introduce copy_supervisor_to_kernel()
98265c17efa9f2279c59262cd27679aca12e0bb8 x86/fpu/xstate: Preserve supervisor states for the slow path in __fpu__restore_sig()
55e00fb66fd5048f4a3ee357018fd26fc527abca x86/fpu/xstate: Restore supervisor states for signal return
ff4f82816dff28ffaaff96d1409bb3811d345514 x86/cpufeatures: Enumerate ENQCMD and ENQCMDS instructions
b454feb9abc1a9ee876fb84bfea0fc8d726f5bc4 x86/fpu/xstate: Add supervisor PASID state for ENQCMD
52ad9bc64c74167466e70e0df4b99ee5ccef0078 mm: Add a pasid member to struct mm_struct
20f0afd1fb3d7d44f4a3db5a4b6e904410862140 x86/mmu: Allocate/free a PASID
c7b6bac9c72c5fcbd6e9e12545bd3022c7f21860 drm, iommu: Change type of pasid to u32
2a5054c6e7b16906984ac36a7363ca46b8d99ade iommu/vt-d: Change flags type to unsigned int in binding mm
4e7b11567d946ebe14a3d10b697b078971a9da89 Documentation/x86: Add documentation for SVA (Shared Virtual Addressing)
361deb7243d275ba8ce6e27db7727fce6fd39f3e dmaengine: dmatest: wrap src & dst data into a struct
41d00bb7a60fadbae76e1826bd27a320e18c769f dmaengine: dmatest: add short-hand `buf_size` var in dmatest_func()
3b6679f91e6f7772b7bfa3417b637f09e5998357 dmaengine: dmatest: move test data alloc & free into functions
11a0fd2b3baa5e4a97197b9cd990b5d05e69d669 dmaengine: Move dma_channel_rebalance() infrastructure up in code
08baca4280d8abcf139fa8fec5b3de6f346efbae dmaengine: print more meaningful error message
69b1189ba2cd6643474312004f10685324e38f58 dmaengine: Remove dma_device_satisfies_mask() wrapper
0888e1030d3e3e5ce9dfd8e030cf13a2e9a1519a x86/asm: Carve out a generic movdir64b() helper for general usage
51fe9cd2bd92d95fc200385187d346e293ceefc9 dmaengine: virt-dma: Add missing locking
b167f94d2928f3516176c8107cb698a6d9bb9911 dmaengine: virt-dma: use vchan_vdesc_fini() to free descriptors
9872e23d6879ee04c7fe8372328195d12e977071 dmaengine: Fix doc strings to satisfy validation script
466f966b1f4545acad150331911784d3f49ab1c3 dmaengine: Replace zero-length array with flexible-array
0d5c10b4c84d6ae6255129e5f16a0d2119c74334 dmaengine: idxd: add work queue drain support
df841b17e809f48f740cd2dd8b63543073c91a02 dmaengine: idxd: reset states after device disable or reset
ff18de55a62f0e8f0dcf11bfa7f69b23e6e951b0 dmaengine: idxd: add command status to idxd sysfs attribute
8e50d392652f20616a136165dff516b86baf5e49 dmaengine: idxd: Add shared workqueue support
e4f4d8cdeb9a2fe746411c0b9a7538b5c0232c1e dmaengine: idxd: Clean up descriptors with fault error
4749f51ddd8aee5c7aa11e6593a54f96374a77ad dmaengine: idxd: Add ABI documentation for shared wq
f1565c24b5965dfd2352f209c417ff160be04db9 powerpc: use the generic dma_ops_bypass mode
e380a0394c36a3a878c858418d5dd7f5f195b6fc x86/PCI: sta2x11: use default DMA address translation
a8e8af35c9f4f75f981a95488c7066d31bac4bef dma-iommu: use static-key to minimize the impact in the fast-path
3ab657291638ea267654c3e4798161b2cee6ae01 iommu: use the __iommu_attach_device() directly for deferred attach
eae9eec476d13fad9af6da1f44a054ee02b7b161 powerpc/pseries/svm: Allocate SWIOTLB buffer anywhere in memory
0b98acd6188309333c3a8a6e16feadadd31e4523 libceph, rbd, ceph: "blacklist" -> "blocklist"
1b05fae7f29db4c41864aed903865086e070fa89 libceph: switch to the new "osd blocklist add" command
dbeec07bc84f8229322d7919692a17adae1e388e ceph: remove timeout on allowing reconnect after blocklisting
c381b07941adc2274ce552daf86c94701c5e265a net: introduce helper sendpage_ok() in include/linux/net.h
2f713615ddd9d805b6c5e79c52e0e11af99d2bf1 libceph: move msgr1 protocol implementation to its own file
a56dd9bf47220c3206f27075af8bdfb219a2a3cf libceph: move msgr1 protocol specific fields to its own struct
00498b994113a871a556f7ff24a4cf8a00611700 libceph: introduce connection modes and ms_mode option
cd1a677cad994021b19665ed476aea63f5d54f31 libceph, ceph: implement msgr2.1 protocol (crc and secure modes)
2f0df6cfa325d7106b8a65bc0e02db1086e3f73b libceph: drop ceph_auth_{create,update}_authorizer()
ad32fe8801c38f7b1a8b3814bd1f006cb2b5e781 libceph: fix auth_signature buffer allocation in secure mode
f5f2c9a0e3073debc6bc0ecc855ced0158526ee8 libceph: align session_key and con_secret to 16 bytes
664f1e259a982bf213f0cd8eea7616c89546585c libceph: add __maybe_unused to DEFINE_MSGR2_FEATURE
10f42b3e648377b2f2f323a5530354710616c6cc libceph: zero out session key and connection secret
4972cf605f8a10784bb9ec9bdf3465892fb547c8 libceph, ceph: disambiguate ceph_connection_operations handlers
e8a60aa7404bfef37705da5607c97737073ac38d platform/x86: Introduce support for Systems Management Driver over WMI for Dell Systems
5b09081f4c5c7159cb3789f35bb82bd9d32061c9 docs: ABI: sysfs-class-firmware-attributes: solve some warnings
76adf0df04c294d2e97981ec7310f93f35dfa6ee platform/x86/dell-wmi-sysman: Make wmi_sysman_kobj_sysfs_ops static
83f7a38ecd3354fd38d9024a0703452041bdc417 platform/x86/dell-wmi-sysman: Make some symbols static
20f67902824f04bc9a319814d5872c8ff6a74559 platform/x86: dell-wmi-sysman: fix init_bios_attributes() error handling
1f7cb4665df8a25ae577a822a47fc4576f60c30f platform/x86: dell-wmi-sysman: work around for BIOS bug
64b0efa18f8c3b1baac369b8d74d0fdae02bc4bc platform/x86: dell-wmi-sysman: fix a NULL pointer dereference
e1b35da5e624f8b09d2e98845c2e4c84b179d9a4 x86: Enumerate AVX512 FP16 CPUID feature flag
8a7f97b902f4fb0d94b355b6b3f1fbd7154cafb9 treewide: add checks for the return value of memblock_alloc*()
0cd22afdcea21fa16bb5b0d3e0508ca42072d0bd mm/gup: fix a misnamed "write" argument, and a related bug
4c29700ed9908c15feeb84a40a415f4e921c5a66 mm/sparse: consistently do not zero memmap
09dbcf422e9b791d2d43cad8c283d9bdaef019a9 mm/sparse.c: do not waste pre allocated memmap space
56939e014a6c212b317414faa307029e2e80c3b9 hibernate: Allow uswsusp to write to swap
bbe98f9cadff58cdd6a4acaeba0efa8565dabe65 khugepaged: khugepaged_test_exit() check mmget_still_valid()
822bca52ee7eb279acfba261a423ed7ac47d6f73 mm/swapfile.c: fix potential memory leak in sys_swapon
c041098c690fe53cea5d20c62f128a4f7a5c19fe mm/vmalloc.c: fix kasan shadow poisoning size
597c892038e08098b17ccfe65afd9677e6979800 mm: don't wake kswapd prematurely when watermark boosting is disabled
1af9270e908cd50a4f5d815c9b6f794c7d57ed07 bpf: disallow attaching modify_return tracing functions to other BPF programs
efc68158c429f37d87fd02ee9a26913c78546fc9 bpf: change logging calls from verbose() to bpf_log() and use log pointer
f7b12b6fea00988496b7606d4964cd77beef46a5 bpf: verifier: refactor check_attach_btf_id()
3aac1ead5eb6b76f3d2b8d111e6de1c2de23fb34 bpf: Move prog->aux->linked_prog and trampoline into bpf_link on attach
4a1e7c0c63e02daad751842b7880f9bbcdfb6e89 bpf: Support attaching freplace programs to multiple attach points
a535909142bf2a6f3a95cabbb8b38ce3860c4807 libbpf: Add support for freplace attachment in bpf_link_create
5541075a348b6ca6ac668653f7d2c423ae8e00b6 bpf: Prevent double bpf_prog_put call from bpf_tracing_prog_attach
973c096f6a85e5b5f2a295126ba6928d9a6afd45 vgacon: remove software scrollback support
e7b6385b01d8e9fb7a97887c3ea649abb95bb8c8 x86/cpufeatures: Add Intel SGX hardware bits
d205e0f1426e0f99e2b4f387c49f2d8b66e129dd x86/{cpufeatures,msr}: Add Intel SGX Launch Control hardware bits
74faeee06db81a06add0def6a394210c8fef0ab7 x86/mm: Signal SIGSEGV with PF_SGX
888d249117876239593fe3039b6ead8ad6849035 x86/sgx: Add SGX_IOC_ENCLAVE_CREATE
c6d26d370767fa227fc44b98a8bdad112efdf563 x86/sgx: Add SGX_IOC_ENCLAVE_ADD_PAGES
9d0c151b41fed7b879030f4e533143d098781701 x86/sgx: Add SGX_IOC_ENCLAVE_INIT
c82c61865024b9981f00358433bebed92ca20c00 x86/sgx: Add SGX_IOC_ENCLAVE_PROVISION
8382c668ce4f367d902f4a340a1bfa9e46096ec1 x86/vdso: Add support for exception fixup in vDSO functions
cd072dab453a9b4a9f7927f9eddca5a156fbd87d x86/fault: Add a helper function to sanitize error code
334872a0919890a70cccd00b8e11931020a819be x86/traps: Attempt to fixup exceptions in vDSO before signaling
84664369520170f48546c55cbc1f3fbde9b1e140 x86/vdso: Implement a vDSO for Intel SGX enclave call
1728ab54b4be94aed89276eeb8e750a345659765 x86/sgx: Add a page reclaimer
947c6e11fa4310b31c10016ae9816cdca3f1694e x86/sgx: Add ptrace() support for the SGX driver
3fa97bf001262a1d88ec9b4ac5ae6abe0ed1356c Documentation/x86: Document SGX kernel architecture
67655b57f8f59467506463055d9a8398d2836377 x86/sgx: Clarify 'laundry_list' locking
14132a5b807bb5caf778fe7ae1597e630971e949 x86/sgx: Return -ERESTARTSYS in sgx_ioc_enclave_add_pages()
afe76eca862ccde2a0c30105fc97a46a0b59339b x86/sgx: Fix sgx_ioc_enclave_provision() kernel-doc comment
bab8c183d1d452f5fdc059aef2f0788bd2986231 x86/sgx: Fix a typo in kernel-doc markup
a4b9c48b96517ff4780b22a784e7537eac5dc21b x86/sgx: Return -EINVAL on a zero length buffer in sgx_ioc_enclave_add_pages()
f93c789a3e245707e3eddcaab5c2b7c62615692d tools headers cpufeatures: Sync with the kernel sources
9b4feb630e8e9801603f3cab3a36369e3c1cf88d arch: wire-up close_range()
2c5db60e46ad7f03789fe7e2beedb15496930468 tests: add close_range() tests
a5161eeef97cb0cdc4de966005926db2f5894af4 tests: add CLOSE_RANGE_UNSHARE tests
c0bde40ae0104c1fe13055b5e208053ea7729176 tools headers API: Update close_range affected files
1d44d0dd61b6121b49f25b731f2f7f605cb3c896 selftests: core: use SKIP instead of XFAIL in close_range_test.c
a4a600dd301ccde6ea239804ec1f19364a39d643 udp: call udp_encap_enable for v6 sockets when enabling encap
ae31a514a134d9e4ca1d7b0f0a19b5934747d79f objtool: Ignore intentional differences for the x86 insn decoder
4d65adfcd1196818659d3bd9b42dccab291e1751 x86: xen: insn: Decode Xen and KVM emulate-prefix signature
69393cb03ccdf29f3b452d3482ef918469d1c098 powerpc/xmon: Restrict when kernel is locked down
b000def2e052fc8ddea31a18019f6ebe044defb3 selftests: Remove fmod_ret from test_overhead
34a2a3b83e2caf18ab85627f9c6a78bc0a1d1520 net/intel: remove driver versions from Intel drivers
16d79cd4e23b1964d36c041ab027505ceacbbeeb PCI: Use 'pci_channel_state_t' instead of 'enum pci_channel_state'
b50f7bca5e83d9e8306ceb2a8b0ef0ed2416f133 intel-ethernet: clean up W=1 warnings in kdoc
207ddc0ef4f413ab1f4e0c1fcab2226425dec293 xfs: don't catch dax+reflink inodes as corruption in verifier
46d6c5ae953cc0be38efd0e469284df7c4328cf8 netfilter: use actual socket sk rather than skb sk when routing harder
2377c92e37fe97bc5b365f55cf60f56dfc4849f5 powerpc/kexec_file: fix FDT size estimation for kdump kernel
c2c44ec20a8496f7a3b3401c092afe96908eced1 Unbreak mount_capable()
9c37de297f6590937f95a28bec1b7ac68a38618f dm: remove special-casing of bio-based immutable singleton target on NVMe
a4c8dd9c2d0987cf542a2a0c42684c9c6d78a04e dm table: fix iterate_devices based device capability checks
5b0fab508992c2e120971da658ce80027acbc405 dm table: fix DAX iterate_devices based device capability checks

__CHANGES NOT IN UPSTREAM________________
x86/kvm: Increase KVM_MAX_VCPUS to 2048
powerpc: fix wrong backport on Kernel lockdown for power
powerpc: Don't enable FSCR_SCV in init_FSCR_power9()
bpf: selftests: remove test_progs LSM test
s390/kdump: fix out-of-memory with PCI
x86/intel_split_lock: Really Disable split lock detector by default in RHEL8
megaraid_sas: re-add certain pci-ids as unsupported
megaraid_sas: mark unsupported devices
rh_taint: add support function
powerpc: lock down kernel in secure boot mode
tests: close_range - Replace clone3 with clone
x86/sgx: mark tech preview
libbpf: fix backport of "libbpf: Remove any use of reallocarray() in libbpf"
block: export blk_mq_make_request
platform/x86: Use appropriate module alias macro for this kernel
virtiofs: Convert virtiofs to use new mount API
fix setsockopt(SO_REUSEADDR) for MPTCP sockets
ACPI: acpi_pad: initialize preferred_cpu
mlx5: Mark BlueField-3 as unsupported device
add a kernel_wait helper
powerpc: fix the backport macros of hv_24x7 and hv_gpci
mlx5: Remove the unsupported mark from ConnectX-6 Lx and BlueField-2
block: add blk_queue_make_request declaration back
PCI: Add MCFG quirks for Tegra194 host controllers
net/core/filter.c: Use sizeof_field() macro
bpf: Separate bpf_get_for perf events BPF
ahci: Add Intel Emmitsburg PCH RAID PCI IDs
DRM Backport 5.8 -> 5.9
DRM Backport 5.7 -> 5.8
DRM Backport 5.6 -> 5.7
kselftests: set rx/txtimestamp.sh to correct permission
kselftests: set udpgro.sh, udpgro_bench.sh, reuseport_addr_any.sh to correct permission
selftests/net: remove not backported tests
Revert "powerpc/pci: unmap legacy INTx interrupts of passthrough IO adapters"
block: add blk_alloc_queue declaration back
tls: move mark_tech_preview to tls_init
mm/swap_state.c: use the same way to count page in_swap_cache
mm/memcg: Document access rule regarding mem_cgroup structure
sched: flower: Mark MPLS multilabel match as Tech Preview
sched: Mark VLAN_ACT_{POP,PUSH}_ETH as Tech Preview
iommu/amd: Set DTEto represent 512 IRTEs
USB: correct API of usb_control_msg_send/recv in sound driver
kernel: fork: properly initialize task_struct->task_struct_rh
intel_idle: cleanup code to address out of order commits
rtw88: fix compile warning:
Revert "mark the intel igc driver as tech preview"
kernel/crash: reserve more memory for fadump
networking: ethtool-netlink: Add link extended state
NTB: Revert "Add Hygon Device ID"
bareudp: Corrected description of bareudp module.
bareudp: update iproute2 sample commands
crypto: qat - Use fallthrough pseudo-keyword
fs/namespace.c: fix mountpoint reference counter race
Replace _ALIGN_UP() by ALIGN()
bpf: Use valid and new links in index.rst
netlink: Use sizeof_field() macro
bnx2: mark driver deprecated
RDMA/rxe: Mark Soft-RoCE driver as unsupported
s/AMEVTYPE/AMEVTYPER
kdump: update kdump documentation due to change of crash URL
cpuidle: Add RH_KABI warnings
hv: vmbus: Move __vmbus_open()
RDMA/hns: Mark hns_roce driver as unsupported
random: decouple random and urandom extrng fops
LiquidIO: mark liquidio and liquidio_vf as deprecated in RHEL8
redhat: use local hashmap library in perf
Revert "vmw_pvscsi: Fixed to work with SG_CHAIN"
docs: net: fm10k: add documentation for fm10k driver
mm: disable proactive compaction by default
netxen: mark netxen_nic as deprecated in RHEL8
Revert "dm writecache: set "Tech Preview" taint using mark_tech_preview()"
random: Add a poll handler to extrng_fops
selinux: map CAP_PERFMON and CAP_BPF to CAP_SYS_ADMIN
bpf: sockmap: use mmap locking API
firewire: Deprecate Firewire support in RHEL8
redhat: Fix the number of KVM_CAP_S390_DIAG318
ethtool: move RHEL specific stuff to separate header file
ALSA: redhat: add drivers/soundwire tree and regmap-sdw to the redhat/filter-modules.sh
ALSA: ASoC - enable AMD Renoir support for DMIC
ALSA: ASoC - enable the Intel's SoundWire driver
ALSA: ASoC: add soc-card.c
ALSA: ASoC: add soc-link.c
ALSA: ASoC: SOF: Fix build
nvme-rdma: params to enable pi_capable devices
lpfc: Fix pointer checks and comments in
dm: fix request-based DM to not bounce through indirect dm_make_request
block: move bdevname() into block/generic-partition-rh.c
dm: fold dm_process_bio() into dm_make_request()
rcu: Maintain RHEL kABI
sched: Disable allowing small imbalance to preserve RHEL performance
