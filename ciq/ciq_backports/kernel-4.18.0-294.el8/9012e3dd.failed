perf trace beauty: Add script to autogenerate mremap's flags args string/id table

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 9012e3dda2a70cff7986e08d0a9cf3a8e04691e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/9012e3dd.failed

It'll also conditionally generate the defines, so that if we don't have
those when building a new tool tarball in an older systems, we get
those, and we need them sometimes in the actual scnprintf routine, such
as when checking if a flags means we have an extra arg, like with
MREMAP_FIXED.

  $ tools/perf/trace/beauty/mremap_flags.sh
  static const char *mremap_flags[] = {
  	[ilog2(1) + 1] = "MAYMOVE",
  #ifndef MREMAP_MAYMOVE
  #define MREMAP_MAYMOVE 1
  #endif
  	[ilog2(2) + 1] = "FIXED",
  #ifndef MREMAP_FIXED
  #define MREMAP_FIXED 2
  #endif
  	[ilog2(4) + 1] = "DONTUNMAP",
  #ifndef MREMAP_DONTUNMAP
  #define MREMAP_DONTUNMAP 4
  #endif
  };
  $

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Ian Rogers <irogers@google.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 9012e3dda2a70cff7986e08d0a9cf3a8e04691e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/trace/beauty/mmap.c
diff --cc tools/perf/trace/beauty/mmap.c
index 9fa771a90d79,58a70ffa0a88..000000000000
--- a/tools/perf/trace/beauty/mmap.c
+++ b/tools/perf/trace/beauty/mmap.c
@@@ -54,27 -54,22 +54,28 @@@ static size_t syscall_arg__scnprintf_mm
  
  #define SCA_MMAP_FLAGS syscall_arg__scnprintf_mmap_flags
  
- static size_t syscall_arg__scnprintf_mremap_flags(char *bf, size_t size,
- 						  struct syscall_arg *arg)
+ #include "trace/beauty/generated/mremap_flags_array.c"
+ static DEFINE_STRARRAY(mremap_flags, "MREMAP_");
+ 
+ static size_t mremap__scnprintf_flags(unsigned long flags, char *bf, size_t size, bool show_prefix)
  {
- 	const char *flags_prefix = "MREMAP_";
- 	bool show_prefix = arg->show_string_prefix;
- 	int printed = 0, flags = arg->val;
+        return strarray__scnprintf_flags(&strarray__mremap_flags, bf, size, show_prefix, flags);
+ }
  
- #define P_MREMAP_FLAG(n) \
- 	if (flags & MREMAP_##n) { \
- 		printed += scnprintf(bf + printed, size - printed, "%s%s%s", printed ? "|" : "", show_prefix ? flags_prefix : "", #n); \
- 		flags &= ~MREMAP_##n; \
- 	}
+ static size_t syscall_arg__scnprintf_mremap_flags(char *bf, size_t size, struct syscall_arg *arg)
+ {
+ 	unsigned long flags = arg->val;
  
++<<<<<<< HEAD
 +	P_MREMAP_FLAG(MAYMOVE);
 +	P_MREMAP_FLAG(FIXED);
 +#undef P_MREMAP_FLAG
++=======
+ 	if (!(flags & MREMAP_FIXED))
+ 		arg->mask |=  (1 << 5); /* Mask 5th ('new_address') args, ignored */
++>>>>>>> 9012e3dda2a7 (perf trace beauty: Add script to autogenerate mremap's flags args string/id table)
  
- 	if (flags)
- 		printed += scnprintf(bf + printed, size - printed, "%s%#x", printed ? "|" : "", flags);
- 
- 	return printed;
+ 	return mremap__scnprintf_flags(flags, bf, size, arg->show_string_prefix);
  }
  
  #define SCA_MREMAP_FLAGS syscall_arg__scnprintf_mremap_flags
diff --git a/tools/perf/Makefile.perf b/tools/perf/Makefile.perf
index 34f197c51df0..18715ddc3bcf 100644
--- a/tools/perf/Makefile.perf
+++ b/tools/perf/Makefile.perf
@@ -536,6 +536,12 @@ mmap_flags_tbl := $(srctree)/tools/perf/trace/beauty/mmap_flags.sh
 $(mmap_flags_array): $(asm_generic_uapi_dir)/mman.h $(asm_generic_uapi_dir)/mman-common.h $(mmap_flags_tbl)
 	$(Q)$(SHELL) '$(mmap_flags_tbl)' $(asm_generic_uapi_dir) $(arch_asm_uapi_dir) > $@
 
+mremap_flags_array := $(beauty_outdir)/mremap_flags_array.c
+mremap_flags_tbl := $(srctree)/tools/perf/trace/beauty/mremap_flags.sh
+
+$(mremap_flags_array): $(linux_uapi_dir)/mman.h $(mremap_flags_tbl)
+	$(Q)$(SHELL) '$(mremap_flags_tbl)' $(linux_uapi_dir) > $@
+
 mount_flags_array := $(beauty_outdir)/mount_flags_array.c
 mount_flags_tbl := $(srctree)/tools/perf/trace/beauty/mount_flags.sh
 
@@ -703,6 +709,7 @@ prepare: $(OUTPUT)PERF-VERSION-FILE $(OUTPUT)common-cmds.h archheaders $(drm_ioc
 	$(vhost_virtio_ioctl_array) \
 	$(madvise_behavior_array) \
 	$(mmap_flags_array) \
+	$(mremap_flags_array) \
 	$(mount_flags_array) \
 	$(move_mount_flags_array) \
 	$(perf_ioctl_array) \
@@ -1000,6 +1007,7 @@ clean:: $(LIBTRACEEVENT)-clean $(LIBAPI)-clean $(LIBBPF)-clean $(LIBSUBCMD)-clea
 		$(OUTPUT)$(fspick_arrays) \
 		$(OUTPUT)$(madvise_behavior_array) \
 		$(OUTPUT)$(mmap_flags_array) \
+		$(OUTPUT)$(mremap_flags_array) \
 		$(OUTPUT)$(mount_flags_array) \
 		$(OUTPUT)$(move_mount_flags_array) \
 		$(OUTPUT)$(drm_ioctl_array) \
* Unmerged path tools/perf/trace/beauty/mmap.c
diff --git a/tools/perf/trace/beauty/mremap_flags.sh b/tools/perf/trace/beauty/mremap_flags.sh
new file mode 100755
index 000000000000..d58182300bb1
--- /dev/null
+++ b/tools/perf/trace/beauty/mremap_flags.sh
@@ -0,0 +1,18 @@
+#!/bin/sh
+# SPDX-License-Identifier: LGPL-2.1
+
+if [ $# -ne 1 ] ; then
+	linux_header_dir=tools/include/uapi/linux
+else
+	linux_header_dir=$1
+fi
+
+linux_mman=${linux_header_dir}/mman.h
+
+printf "static const char *mremap_flags[] = {\n"
+regex='^[[:space:]]*#[[:space:]]*define[[:space:]]+MREMAP_([[:alnum:]_]+)[[:space:]]+((0x)?[[:xdigit:]]+)[[:space:]]*.*'
+egrep -q $regex ${linux_mman} && \
+(egrep $regex ${linux_mman} | \
+	sed -r "s/$regex/\2 \1 \1 \1 \2/g"	| \
+	xargs printf "\t[ilog2(%s) + 1] = \"%s\",\n#ifndef MREMAP_%s\n#define MREMAP_%s %s\n#endif\n")
+printf "};\n"
