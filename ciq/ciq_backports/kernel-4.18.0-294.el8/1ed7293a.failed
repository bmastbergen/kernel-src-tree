mm/memory.c: initialise mmu_notifier_range correctly

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Matthew Wilcox <willy@infradead.org>
commit 1ed7293ac40c5b1950b8ab21b6bc1838578ae2ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/1ed7293a.failed

One of the paths in follow_pte_pmd() initialised the mmu_notifier_range
incorrectly.

Link: http://lkml.kernel.org/r/20190103002126.GM6310@bombadil.infradead.org
Fixes: ac46d4f3c432 ("mm/mmu_notifier: use structure for invalidate_range_start/end calls v2")
	Signed-off-by: Matthew Wilcox <willy@infradead.org>
	Tested-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Jérôme Glisse <jglisse@redhat.com>
	Cc: John Hubbard <jhubbard@nvidia.com>
	Cc: Jan Kara <jack@suse.cz>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 1ed7293ac40c5b1950b8ab21b6bc1838578ae2ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memory.c
diff --cc mm/memory.c
index 25fae8673e61,e11ca9dd823f..000000000000
--- a/mm/memory.c
+++ b/mm/memory.c
@@@ -4418,10 -4098,10 +4418,17 @@@ static int __follow_pte_pmd(struct mm_s
  	if (pmd_none(*pmd) || unlikely(pmd_bad(*pmd)))
  		goto out;
  
++<<<<<<< HEAD
 +	if (start && end) {
 +		*start = address & PAGE_MASK;
 +		*end = *start + PAGE_SIZE;
 +		mmu_notifier_invalidate_range_start(mm, *start, *end);
++=======
+ 	if (range) {
+ 		mmu_notifier_range_init(range, mm, address & PAGE_MASK,
+ 				     (address & PAGE_MASK) + PAGE_SIZE);
+ 		mmu_notifier_invalidate_range_start(range);
++>>>>>>> 1ed7293ac40c (mm/memory.c: initialise mmu_notifier_range correctly)
  	}
  	ptep = pte_offset_map_lock(mm, pmd, address, ptlp);
  	if (!pte_present(*ptep))
* Unmerged path mm/memory.c
