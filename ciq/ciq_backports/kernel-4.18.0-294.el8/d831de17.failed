KVM: x86: always allow writing '0' to MSR_KVM_ASYNC_PF_EN

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit d831de177217cd494bfb99f2c849a0d40c2a7890
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/d831de17.failed

Even without in-kernel LAPIC we should allow writing '0' to
MSR_KVM_ASYNC_PF_EN as we're not enabling the mechanism. In
particular, QEMU with 'kernel-irqchip=off' fails to start
a guest with

qemu-system-x86_64: error: failed to set MSR 0x4b564d02 to 0x0

Fixes: 9d3c447c72fb2 ("KVM: X86: Fix async pf caused null-ptr-deref")
	Reported-by: Dr. David Alan Gilbert <dgilbert@redhat.com>
	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Message-Id: <20200911093147.484565-1-vkuznets@redhat.com>
[Actually commit the version proposed by Sean Christopherson. - Paolo]
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit d831de177217cd494bfb99f2c849a0d40c2a7890)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index b438f29501f9,e3de0fe5af37..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -2715,13 -2730,16 +2715,18 @@@ static int kvm_pv_enable_async_pf(struc
  {
  	gpa_t gpa = data & ~0x3f;
  
 -	/* Bits 4:5 are reserved, Should be zero */
 -	if (data & 0x30)
 +	/* Bits 3:5 are reserved, Should be zero */
 +	if (data & 0x38)
  		return 1;
  
++<<<<<<< HEAD
 +	vcpu->arch.apf.msr_val = data;
++=======
+ 	if (!lapic_in_kernel(vcpu))
+ 		return data ? 1 : 0;
++>>>>>>> d831de177217 (KVM: x86: always allow writing '0' to MSR_KVM_ASYNC_PF_EN)
  
 -	vcpu->arch.apf.msr_en_val = data;
 -
 -	if (!kvm_pv_async_pf_enabled(vcpu)) {
 +	if (!(data & KVM_ASYNC_PF_ENABLED)) {
  		kvm_clear_async_pf_completion_queue(vcpu);
  		kvm_async_pf_hash_reset(vcpu);
  		return 0;
* Unmerged path arch/x86/kvm/x86.c
