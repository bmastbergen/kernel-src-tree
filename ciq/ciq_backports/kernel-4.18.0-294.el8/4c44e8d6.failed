KVM: SVM: Add new intercept word in vmcb_control_area

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Babu Moger <babu.moger@amd.com>
commit 4c44e8d6c19330e48a87103184f840ffe5a423cd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/4c44e8d6.failed

The new intercept bits have been added in vmcb control area to support
few more interceptions. Here are the some of them.
 - INTERCEPT_INVLPGB,
 - INTERCEPT_INVLPGB_ILLEGAL,
 - INTERCEPT_INVPCID,
 - INTERCEPT_MCOMMIT,
 - INTERCEPT_TLBSYNC,

Add a new intercept word in vmcb_control_area to support these instructions.
Also update kvm_nested_vmrun trace function to support the new addition.

AMD documentation for these instructions is available at "AMD64
Architecture Programmerâ€™s Manual Volume 2: System Programming, Pub. 24593
Rev. 3.34(or later)"

The documentation can be obtained at the links below:
Link: https://www.amd.com/system/files/TechDocs/24593.pdf
Link: https://bugzilla.kernel.org/show_bug.cgi?id=206537

	Signed-off-by: Babu Moger <babu.moger@amd.com>
	Reviewed-by: Jim Mattson <jmattson@google.com>
Message-Id: <159985251547.11252.16994139329949066945.stgit@bmoger-ubuntu>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 4c44e8d6c19330e48a87103184f840ffe5a423cd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/svm.h
#	arch/x86/kvm/svm/nested.c
#	arch/x86/kvm/trace.h
diff --cc arch/x86/include/asm/svm.h
index acac55d6f941,71d630bb5e08..000000000000
--- a/arch/x86/include/asm/svm.h
+++ b/arch/x86/include/asm/svm.h
@@@ -3,10 -3,54 +3,27 @@@
  #define __SVM_H
  
  #include <uapi/asm/svm.h>
 -#include <uapi/asm/kvm.h>
  
++<<<<<<< HEAD
++=======
+ /*
+  * 32-bit intercept words in the VMCB Control Area, starting
+  * at Byte offset 000h.
+  */
+ 
+ enum intercept_words {
+ 	INTERCEPT_CR = 0,
+ 	INTERCEPT_DR,
+ 	INTERCEPT_EXCEPTION,
+ 	INTERCEPT_WORD3,
+ 	INTERCEPT_WORD4,
+ 	INTERCEPT_WORD5,
+ 	MAX_INTERCEPT,
+ };
++>>>>>>> 4c44e8d6c193 (KVM: SVM: Add new intercept word in vmcb_control_area)
  
  enum {
 -	/* Byte offset 000h (word 0) */
 -	INTERCEPT_CR0_READ = 0,
 -	INTERCEPT_CR3_READ = 3,
 -	INTERCEPT_CR4_READ = 4,
 -	INTERCEPT_CR8_READ = 8,
 -	INTERCEPT_CR0_WRITE = 16,
 -	INTERCEPT_CR3_WRITE = 16 + 3,
 -	INTERCEPT_CR4_WRITE = 16 + 4,
 -	INTERCEPT_CR8_WRITE = 16 + 8,
 -	/* Byte offset 004h (word 1) */
 -	INTERCEPT_DR0_READ = 32,
 -	INTERCEPT_DR1_READ,
 -	INTERCEPT_DR2_READ,
 -	INTERCEPT_DR3_READ,
 -	INTERCEPT_DR4_READ,
 -	INTERCEPT_DR5_READ,
 -	INTERCEPT_DR6_READ,
 -	INTERCEPT_DR7_READ,
 -	INTERCEPT_DR0_WRITE = 48,
 -	INTERCEPT_DR1_WRITE,
 -	INTERCEPT_DR2_WRITE,
 -	INTERCEPT_DR3_WRITE,
 -	INTERCEPT_DR4_WRITE,
 -	INTERCEPT_DR5_WRITE,
 -	INTERCEPT_DR6_WRITE,
 -	INTERCEPT_DR7_WRITE,
 -	/* Byte offset 008h (word 2) */
 -	INTERCEPT_EXCEPTION_OFFSET = 64,
 -	/* Byte offset 00Ch (word 3) */
 -	INTERCEPT_INTR = 96,
 +	INTERCEPT_INTR,
  	INTERCEPT_NMI,
  	INTERCEPT_SMI,
  	INTERCEPT_INIT,
diff --cc arch/x86/kvm/svm/nested.c
index 3a222ac541d6,cf6e74b9461d..000000000000
--- a/arch/x86/kvm/svm/nested.c
+++ b/arch/x86/kvm/svm/nested.c
@@@ -459,16 -475,18 +459,25 @@@ int nested_svm_vmrun(struct vcpu_svm *s
  		goto out;
  	}
  
 -	trace_kvm_nested_vmrun(svm->vmcb->save.rip, vmcb12_gpa,
 -			       vmcb12->save.rip,
 -			       vmcb12->control.int_ctl,
 -			       vmcb12->control.event_inj,
 -			       vmcb12->control.nested_ctl);
 -
 +	trace_kvm_nested_vmrun(svm->vmcb->save.rip, vmcb_gpa,
 +			       nested_vmcb->save.rip,
 +			       nested_vmcb->control.int_ctl,
 +			       nested_vmcb->control.event_inj,
 +			       nested_vmcb->control.nested_ctl);
 +
++<<<<<<< HEAD
 +	trace_kvm_nested_intercepts(nested_vmcb->control.intercept_cr & 0xffff,
 +				    nested_vmcb->control.intercept_cr >> 16,
 +				    nested_vmcb->control.intercept_exceptions,
 +				    nested_vmcb->control.intercept);
++=======
+ 	trace_kvm_nested_intercepts(vmcb12->control.intercepts[INTERCEPT_CR] & 0xffff,
+ 				    vmcb12->control.intercepts[INTERCEPT_CR] >> 16,
+ 				    vmcb12->control.intercepts[INTERCEPT_EXCEPTION],
+ 				    vmcb12->control.intercepts[INTERCEPT_WORD3],
+ 				    vmcb12->control.intercepts[INTERCEPT_WORD4],
+ 				    vmcb12->control.intercepts[INTERCEPT_WORD5]);
++>>>>>>> 4c44e8d6c193 (KVM: SVM: Add new intercept word in vmcb_control_area)
  
  	/* Clear internal status */
  	kvm_clear_exception_queue(&svm->vcpu);
diff --cc arch/x86/kvm/trace.h
index dd3e08ca8345,11cb4c070f0c..000000000000
--- a/arch/x86/kvm/trace.h
+++ b/arch/x86/kvm/trace.h
@@@ -544,26 -544,33 +544,51 @@@ TRACE_EVENT(kvm_nested_vmrun
  );
  
  TRACE_EVENT(kvm_nested_intercepts,
++<<<<<<< HEAD
 +	    TP_PROTO(__u16 cr_read, __u16 cr_write, __u32 exceptions, __u64 intercept),
 +	    TP_ARGS(cr_read, cr_write, exceptions, intercept),
++=======
+ 	    TP_PROTO(__u16 cr_read, __u16 cr_write, __u32 exceptions,
+ 		     __u32 intercept1, __u32 intercept2, __u32 intercept3),
+ 	    TP_ARGS(cr_read, cr_write, exceptions, intercept1,
+ 		    intercept2, intercept3),
++>>>>>>> 4c44e8d6c193 (KVM: SVM: Add new intercept word in vmcb_control_area)
  
  	TP_STRUCT__entry(
  		__field(	__u16,		cr_read		)
  		__field(	__u16,		cr_write	)
  		__field(	__u32,		exceptions	)
++<<<<<<< HEAD
 +		__field(	__u64,		intercept	)
++=======
+ 		__field(	__u32,		intercept1	)
+ 		__field(	__u32,		intercept2	)
+ 		__field(	__u32,		intercept3	)
++>>>>>>> 4c44e8d6c193 (KVM: SVM: Add new intercept word in vmcb_control_area)
  	),
  
  	TP_fast_assign(
  		__entry->cr_read	= cr_read;
  		__entry->cr_write	= cr_write;
  		__entry->exceptions	= exceptions;
++<<<<<<< HEAD
 +		__entry->intercept	= intercept;
 +	),
 +
 +	TP_printk("cr_read: %04x cr_write: %04x excp: %08x intercept: %016llx",
 +		__entry->cr_read, __entry->cr_write, __entry->exceptions,
 +		__entry->intercept)
++=======
+ 		__entry->intercept1	= intercept1;
+ 		__entry->intercept2	= intercept2;
+ 		__entry->intercept3	= intercept3;
+ 	),
+ 
+ 	TP_printk("cr_read: %04x cr_write: %04x excp: %08x "
+ 		  "intercepts: %08x %08x %08x",
+ 		  __entry->cr_read, __entry->cr_write, __entry->exceptions,
+ 		  __entry->intercept1, __entry->intercept2, __entry->intercept3)
++>>>>>>> 4c44e8d6c193 (KVM: SVM: Add new intercept word in vmcb_control_area)
  );
  /*
   * Tracepoint for #VMEXIT while nested
* Unmerged path arch/x86/include/asm/svm.h
* Unmerged path arch/x86/kvm/svm/nested.c
* Unmerged path arch/x86/kvm/trace.h
