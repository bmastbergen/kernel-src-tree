ena: Add XDP frame size to amazon NIC driver

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-294.el8
commit-author Jesper Dangaard Brouer <brouer@redhat.com>
commit 08fc1cfd2d250be853d33d6505ae11ff52b83b74
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-294.el8/08fc1cfd.failed

Frame size ENA_PAGE_SIZE is limited to 16K on systems with larger
PAGE_SIZE than 16K. Change ENA_XDP_MAX_MTU to also take into account
the reserved tailroom.

	Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Sameeh Jubran <sameehj@amazon.com>
	Cc: Arthur Kiyanovski <akiyano@amazon.com>
Link: https://lore.kernel.org/bpf/158945341384.97035.907403694833419456.stgit@firesoul
(cherry picked from commit 08fc1cfd2d250be853d33d6505ae11ff52b83b74)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amazon/ena/ena_netdev.c
diff --cc drivers/net/ethernet/amazon/ena/ena_netdev.c
index 5e24b5d1b586,85b87ed02dd5..000000000000
--- a/drivers/net/ethernet/amazon/ena/ena_netdev.c
+++ b/drivers/net/ethernet/amazon/ena/ena_netdev.c
@@@ -1212,6 -1606,8 +1212,11 @@@ static int ena_clean_rx_irq(struct ena_
  		  "%s qid %d\n", __func__, rx_ring->qid);
  	res_budget = budget;
  	xdp.rxq = &rx_ring->xdp_rxq;
++<<<<<<< HEAD
++=======
+ 	xdp.frame_sz = ENA_PAGE_SIZE;
+ 
++>>>>>>> 08fc1cfd2d25 (ena: Add XDP frame size to amazon NIC driver)
  	do {
  		xdp_verdict = XDP_PASS;
  		skb = NULL;
* Unmerged path drivers/net/ethernet/amazon/ena/ena_netdev.c
diff --git a/drivers/net/ethernet/amazon/ena/ena_netdev.h b/drivers/net/ethernet/amazon/ena/ena_netdev.h
index a49741240d5d..2aaa6438e488 100644
--- a/drivers/net/ethernet/amazon/ena/ena_netdev.h
+++ b/drivers/net/ethernet/amazon/ena/ena_netdev.h
@@ -151,8 +151,9 @@
  * The buffer size we share with the device is defined to be ENA_PAGE_SIZE
  */
 
-#define ENA_XDP_MAX_MTU (ENA_PAGE_SIZE - ETH_HLEN - ETH_FCS_LEN - \
-				VLAN_HLEN - XDP_PACKET_HEADROOM)
+#define ENA_XDP_MAX_MTU (ENA_PAGE_SIZE - ETH_HLEN - ETH_FCS_LEN -	\
+			 VLAN_HLEN - XDP_PACKET_HEADROOM -		\
+			 SKB_DATA_ALIGN(sizeof(struct skb_shared_info)))
 
 struct ena_irq {
 	irq_handler_t handler;
