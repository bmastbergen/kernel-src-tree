GFS2: gfs2_dir_get_hash_table(): avoiding deferred vfree() is easy here...

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.99.1.el7
commit-author Al Viro <viro@ZenIV.linux.org.uk>
commit 9265f1d0c7593e3e7e1e94a4a83a6dea34230a35
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.99.1.el7/9265f1d0.failed

vfree() is allowed under spinlock these days, but it's cheaper when
it doesn't step into deferred case and here it's very easy to avoid.

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
	Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>

(cherry picked from commit 9265f1d0c7593e3e7e1e94a4a83a6dea34230a35)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/dir.c
diff --cc fs/gfs2/dir.c
index c5e83830a5cd,c5a34f09e228..000000000000
--- a/fs/gfs2/dir.c
+++ b/fs/gfs2/dir.c
@@@ -374,15 -370,12 +374,22 @@@ static __be64 *gfs2_dir_get_hash_table(
  	}
  
  	spin_lock(&inode->i_lock);
++<<<<<<< HEAD
 +	if (ip->i_hash_cache) {
 +		if (is_vmalloc_addr(hc))
 +			vfree(hc);
 +		else
 +			kfree(hc);
 +	} else {
 +		ip->i_hash_cache = hc;
++=======
+ 	if (likely(!ip->i_hash_cache)) {
+ 		ip->i_hash_cache = hc;
+ 		hc = NULL;
++>>>>>>> 9265f1d0c759 (GFS2: gfs2_dir_get_hash_table(): avoiding deferred vfree() is easy here...)
  	}
  	spin_unlock(&inode->i_lock);
+ 	kvfree(hc);
  
  	return ip->i_hash_cache;
  }
* Unmerged path fs/gfs2/dir.c
