swiotlb-xen: arrange to have buffer info logged

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Jan Beulich <jbeulich@suse.com>
commit 7fd880a38cfefb2d54a912e4ae809110adec1c94
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/7fd880a3.failed

I consider it unhelpful that address and size of the buffer aren't put
in the log file; it makes diagnosing issues needlessly harder. The
majority of callers of swiotlb_init() also passes 1 for the "verbose"
parameter.

	Signed-off-by: Jan Beulich <jbeulich@suse.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>

Link: https://lore.kernel.org/r/2e3c8e68-36b2-4ae9-b829-bf7f75d39d47@suse.com
	Signed-off-by: Juergen Gross <jgross@suse.com>
(cherry picked from commit 7fd880a38cfefb2d54a912e4ae809110adec1c94)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/xen/swiotlb-xen.c
diff --cc drivers/xen/swiotlb-xen.c
index 8ccd85660984,afe8c7eb31b9..000000000000
--- a/drivers/xen/swiotlb-xen.c
+++ b/drivers/xen/swiotlb-xen.c
@@@ -255,6 -219,46 +255,49 @@@ error
  	return rc;
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_X86
+ void __init xen_swiotlb_init_early(void)
+ {
+ 	unsigned long bytes = swiotlb_size_or_default();
+ 	unsigned long nslabs = bytes >> IO_TLB_SHIFT;
+ 	unsigned int repeat = 3;
+ 	char *start;
+ 	int rc;
+ 
+ retry:
+ 	/*
+ 	 * Get IO TLB memory from any location.
+ 	 */
+ 	start = memblock_alloc(PAGE_ALIGN(bytes), PAGE_SIZE);
+ 	if (!start)
+ 		panic("%s: Failed to allocate %lu bytes align=0x%lx\n",
+ 		      __func__, PAGE_ALIGN(bytes), PAGE_SIZE);
+ 
+ 	/*
+ 	 * And replace that memory with pages under 4GB.
+ 	 */
+ 	rc = xen_swiotlb_fixup(start, nslabs);
+ 	if (rc) {
+ 		memblock_free(__pa(start), PAGE_ALIGN(bytes));
+ 		if (nslabs > 1024 && repeat--) {
+ 			/* Min is 2MB */
+ 			nslabs = max(1024UL, ALIGN(nslabs >> 1, IO_TLB_SEGSIZE));
+ 			bytes = nslabs << IO_TLB_SHIFT;
+ 			pr_info("Lowering to %luMB\n", bytes >> 20);
+ 			goto retry;
+ 		}
+ 		panic("%s (rc:%d)", xen_swiotlb_error(XEN_SWIOTLB_EFIXUP), rc);
+ 	}
+ 
+ 	if (swiotlb_init_with_tbl(start, nslabs, true))
+ 		panic("Cannot allocate SWIOTLB buffer");
+ 	swiotlb_set_max_segment(PAGE_SIZE);
+ }
+ #endif /* CONFIG_X86 */
+ 
++>>>>>>> 7fd880a38cfe (swiotlb-xen: arrange to have buffer info logged)
  static void *
  xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,
  			   dma_addr_t *dma_handle, gfp_t flags,
* Unmerged path drivers/xen/swiotlb-xen.c
