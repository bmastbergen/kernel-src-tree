drm/i915/adlp/fb: Remove restriction on CCS AUX plane strides

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Imre Deak <imre.deak@intel.com>
commit e6d6f689435aaebc2e407026d9fdfc2d89bd7902
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/e6d6f689.failed

As opposed to other GEN12 platforms ADLP provides a way to program the
stride of CCS surfaces independently of the main surface stride (within
the corresponding limit of the preceding and succeeding power-of-two
values of the main surface stride). Using this HW feature we can remove
the POT stride restriction on CCS surfaces, making the ADLP CCS FB uAPI
(FB modifiers) identical to that of TGL.

The HW makes the CCS stride flexible programming possible by deriving
the stride from the value programmed to the PLANE_STRIDE register. After
that the HW rounds up this value to the next power-of-two value and uses
this for walking the pages of the main surface mapped to GTT/DPT.

To align with the above scheme, introduce a scanout_stride view
parameter which will be programmed to the PLANE_STRIDE register and use
the mapping_stride view param to store the POT aligned value of the
same. By requiring userspace to pass in FBs with a CCS stride that
aligns with the main surface stride (matching the requirement of all
GEN12 platforms), the scanout_stride will be the userspace main surface
stride and the mapping_stride will be the POT rounded value of the same.

	Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Cc: Juha-Pekka Heikkila <juhapekka.heikkila@gmail.com>
	Cc: Nanley G Chery <nanley.g.chery@intel.com>
	Cc: Sameer Lattannavar <sameer.lattannavar@intel.com>
	Signed-off-by: Imre Deak <imre.deak@intel.com>
	Reviewed-by: Juha-Pekka Heikkila <juhapekka.heikkila@gmail.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20211026225105.2783797-8-imre.deak@intel.com
(cherry picked from commit e6d6f689435aaebc2e407026d9fdfc2d89bd7902)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_display_types.h
#	drivers/gpu/drm/i915/display/intel_fb.c
#	drivers/gpu/drm/i915/display/skl_universal_plane.c
diff --cc drivers/gpu/drm/i915/display/intel_display_types.h
index 421b07aecc99,a174b0b83640..000000000000
--- a/drivers/gpu/drm/i915/display/intel_display_types.h
+++ b/drivers/gpu/drm/i915/display/intel_display_types.h
@@@ -84,6 -85,41 +84,44 @@@ enum intel_broadcast_rgb 
  	INTEL_BROADCAST_RGB_LIMITED,
  };
  
++<<<<<<< HEAD
++=======
+ struct intel_fb_view {
+ 	/*
+ 	 * The remap information used in the remapped and rotated views to
+ 	 * create the DMA scatter-gather list for each FB color plane. This sg
+ 	 * list is created along with the view type (gtt.type) specific
+ 	 * i915_vma object and contains the list of FB object pages (reordered
+ 	 * in the rotated view) that are visible in the view.
+ 	 * In the normal view the FB object's backing store sg list is used
+ 	 * directly and hence the remap information here is not used.
+ 	 */
+ 	struct i915_ggtt_view gtt;
+ 
+ 	/*
+ 	 * The GTT view (gtt.type) specific information for each FB color
+ 	 * plane. In the normal GTT view all formats (up to 4 color planes),
+ 	 * in the rotated and remapped GTT view all no-CCS formats (up to 2
+ 	 * color planes) are supported.
+ 	 *
+ 	 * The view information shared by all FB color planes in the FB,
+ 	 * like dst x/y and src/dst width, is stored separately in
+ 	 * intel_plane_state.
+ 	 */
+ 	struct i915_color_plane_view {
+ 		u32 offset;
+ 		unsigned int x, y;
+ 		/*
+ 		 * Plane stride in:
+ 		 *   bytes for 0/180 degree rotation
+ 		 *   pixels for 90/270 degree rotation
+ 		 */
+ 		unsigned int mapping_stride;
+ 		unsigned int scanout_stride;
+ 	} color_plane[4];
+ };
+ 
++>>>>>>> e6d6f689435a (drm/i915/adlp/fb: Remove restriction on CCS AUX plane strides)
  struct intel_framebuffer {
  	struct drm_framebuffer base;
  	struct intel_frontbuffer *frontbuffer;
* Unmerged path drivers/gpu/drm/i915/display/intel_fb.c
* Unmerged path drivers/gpu/drm/i915/display/skl_universal_plane.c
* Unmerged path drivers/gpu/drm/i915/display/intel_display_types.h
* Unmerged path drivers/gpu/drm/i915/display/intel_fb.c
* Unmerged path drivers/gpu/drm/i915/display/skl_universal_plane.c
