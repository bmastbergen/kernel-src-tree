drm/i915: Update memory bandwidth parameters

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Radhakrishna Sripada <radhakrishna.sripada@intel.com>
commit f6d66fc8cf5f673ea76407be84dc17dbb3eda108
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/f6d66fc8.failed

Earlier while calculating derated bw we would use 90% of the calculated
bw. Starting ADL-P we use a non standard derating. Updating the formulae
to reflect the same.

Bspec: 64631

v2: Use the new derating value only for ADL-P(MattR)

Fixes: 4d32fe2f14a7 ("drm/i915/adl_p: Update memory bandwidth parameters")
	Cc: Matt Roper <matthew.d.roper@intel.com>
	Signed-off-by: Radhakrishna Sripada <radhakrishna.sripada@intel.com>
	Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
	Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210914220744.16042-1-radhakrishna.sripada@intel.com
(cherry picked from commit f6d66fc8cf5f673ea76407be84dc17dbb3eda108)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_bw.c
diff --cc drivers/gpu/drm/i915/display/intel_bw.c
index a682be05da88,4b94256d7319..000000000000
--- a/drivers/gpu/drm/i915/display/intel_bw.c
+++ b/drivers/gpu/drm/i915/display/intel_bw.c
@@@ -150,8 -243,23 +152,26 @@@ static const struct intel_sa_info rkl_s
  	.deburst = 16,
  	.deprogbwlimit = 20, /* GB/s */
  	.displayrtids = 128,
+ 	.derating = 10,
  };
  
++<<<<<<< HEAD
++=======
+ static const struct intel_sa_info adls_sa_info = {
+ 	.deburst = 16,
+ 	.deprogbwlimit = 38, /* GB/s */
+ 	.displayrtids = 256,
+ 	.derating = 10,
+ };
+ 
+ static const struct intel_sa_info adlp_sa_info = {
+ 	.deburst = 16,
+ 	.deprogbwlimit = 38, /* GB/s */
+ 	.displayrtids = 256,
+ 	.derating = 20,
+ };
+ 
++>>>>>>> f6d66fc8cf5f (drm/i915: Update memory bandwidth parameters)
  static int icl_get_bw_info(struct drm_i915_private *dev_priv, const struct intel_sa_info *sa)
  {
  	struct intel_qgv_info qi = {};
@@@ -261,11 -409,17 +281,21 @@@ void intel_bw_init_hw(struct drm_i915_p
  	if (!HAS_DISPLAY(dev_priv))
  		return;
  
++<<<<<<< HEAD
 +	if (IS_ROCKETLAKE(dev_priv))
++=======
+ 	if (IS_DG2(dev_priv))
+ 		dg2_get_bw_info(dev_priv);
+ 	else if (IS_ALDERLAKE_P(dev_priv))
+ 		icl_get_bw_info(dev_priv, &adlp_sa_info);
+ 	else if (IS_ALDERLAKE_S(dev_priv))
+ 		icl_get_bw_info(dev_priv, &adls_sa_info);
+ 	else if (IS_ROCKETLAKE(dev_priv))
++>>>>>>> f6d66fc8cf5f (drm/i915: Update memory bandwidth parameters)
  		icl_get_bw_info(dev_priv, &rkl_sa_info);
 -	else if (DISPLAY_VER(dev_priv) == 12)
 +	else if (IS_GEN(dev_priv, 12))
  		icl_get_bw_info(dev_priv, &tgl_sa_info);
 -	else if (DISPLAY_VER(dev_priv) == 11)
 +	else if (IS_GEN(dev_priv, 11))
  		icl_get_bw_info(dev_priv, &icl_sa_info);
  }
  
* Unmerged path drivers/gpu/drm/i915/display/intel_bw.c
