x86/fpu/signal: Change return code of check_xstate_in_sigframe() to boolean

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit be0040144152ed834c369a7830487e5ee4f27080
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/be004014.failed

__fpu_sig_restore() only needs success/fail information and no detailed
error code.

	Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20210908132526.024024598@linutronix.de
(cherry picked from commit be0040144152ed834c369a7830487e5ee4f27080)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/fpu/signal.c
diff --cc arch/x86/kernel/fpu/signal.c
index 15e09f1a412b,2bd4d51f985e..000000000000
--- a/arch/x86/kernel/fpu/signal.c
+++ b/arch/x86/kernel/fpu/signal.c
@@@ -321,9 -324,8 +321,14 @@@ static int __fpu_restore_sig(void __use
  	if (use_xsave()) {
  		struct _fpx_sw_bytes fx_sw_user;
  
++<<<<<<< HEAD
 +		ret = check_xstate_in_sigframe(buf_fx, &fx_sw_user);
 +		if (unlikely(ret))
 +			return ret;
++=======
+ 		if (!check_xstate_in_sigframe(buf_fx, &fx_sw_user))
+ 			return false;
++>>>>>>> be0040144152 (x86/fpu/signal: Change return code of check_xstate_in_sigframe() to boolean)
  
  		fx_only = !fx_sw_user.magic1;
  		state_size = fx_sw_user.xstate_size;
* Unmerged path arch/x86/kernel/fpu/signal.c
