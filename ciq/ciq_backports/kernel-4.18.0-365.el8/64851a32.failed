drm/i915/tc: Add a mode for the TypeC PHY's disconnected state

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Imre Deak <imre.deak@intel.com>
commit 64851a32c463e5412561de67764d6fdc074bd193
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/64851a32.failed

A follow-up change will start to disconnect/re-connect PHYs around AUX
transfers and modeset enable/disables. To prepare for that add a new
TypeC PHY disconnected mode, to help tracking the TC-cold blocking power
domain status (no power domain in disconnected state, mode dependent
power domain in connected state).

v2: Move the !disconnected mode and phy-owned asserts in
    __intel_tc_port_lock() later in the patchset, when the asserts will
    hold. (Jose)

	Cc: José Roberto de Souza <jose.souza@intel.com>
	Signed-off-by: Imre Deak <imre.deak@intel.com>
	Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210929132833.2253961-3-imre.deak@intel.com
(cherry picked from commit 64851a32c463e5412561de67764d6fdc074bd193)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_tc.c
diff --cc drivers/gpu/drm/i915/display/intel_tc.c
index 2cefc13535a0,62a3070abf0a..000000000000
--- a/drivers/gpu/drm/i915/display/intel_tc.c
+++ b/drivers/gpu/drm/i915/display/intel_tc.c
@@@ -377,14 -528,13 +378,21 @@@ static void icl_tc_phy_disconnect(struc
  {
  	switch (dig_port->tc_mode) {
  	case TC_PORT_LEGACY:
 +		/* Nothing to do, we never disconnect from legacy mode */
 +		break;
  	case TC_PORT_DP_ALT:
++<<<<<<< HEAD
 +		icl_tc_phy_set_safe_mode(dig_port, true);
 +		dig_port->tc_mode = TC_PORT_TBT_ALT;
 +		break;
++=======
+ 		tc_phy_take_ownership(dig_port, false);
+ 		fallthrough;
++>>>>>>> 64851a32c463 (drm/i915/tc: Add a mode for the TypeC PHY's disconnected state)
  	case TC_PORT_TBT_ALT:
- 		/* Nothing to do, we stay in TBT-alt mode */
+ 		dig_port->tc_mode = TC_PORT_DISCONNECTED;
+ 		fallthrough;
+ 	case TC_PORT_DISCONNECTED:
  		break;
  	default:
  		MISSING_CASE(dig_port->tc_mode);
@@@ -506,13 -660,9 +516,17 @@@ void intel_tc_port_sanitize(struct inte
  				    dig_port->tc_port_name, active_links);
  		intel_tc_port_link_init_refcount(dig_port, active_links);
  
++<<<<<<< HEAD
 +		goto out;
++=======
+ 		tc_cold_unblock(dig_port, tc_cold_wref);
++>>>>>>> 64851a32c463 (drm/i915/tc: Add a mode for the TypeC PHY's disconnected state)
  	}
  
 +	if (dig_port->tc_legacy_port)
 +		icl_tc_phy_connect(dig_port, 1);
 +
 +out:
  	drm_dbg_kms(&i915->drm, "Port %s: sanitize mode (%s)\n",
  		    dig_port->tc_port_name,
  		    tc_port_mode_name(dig_port->tc_mode));
diff --git a/drivers/gpu/drm/i915/display/intel_display.h b/drivers/gpu/drm/i915/display/intel_display.h
index 76f8a805b0a3..1074f9fc1fc8 100644
--- a/drivers/gpu/drm/i915/display/intel_display.h
+++ b/drivers/gpu/drm/i915/display/intel_display.h
@@ -265,6 +265,7 @@ enum tc_port {
 };
 
 enum tc_port_mode {
+	TC_PORT_DISCONNECTED,
 	TC_PORT_TBT_ALT,
 	TC_PORT_DP_ALT,
 	TC_PORT_LEGACY,
* Unmerged path drivers/gpu/drm/i915/display/intel_tc.c
