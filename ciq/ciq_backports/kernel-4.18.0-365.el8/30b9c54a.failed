skmsg: Clear skb redirect pointer before dropping it

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Cong Wang <cong.wang@bytedance.com>
commit 30b9c54a707db4155735cf71f4600241c1b7b6ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/30b9c54a.failed

When we drop skb inside sk_psock_skb_redirect(), we have to clear
its skb->_sk_redir pointer too, otherwise kfree_skb() would
misinterpret it as a valid skb->_skb_refdst and dst_release()
would eventually complain.

Fixes: e3526bb92a20 ("skmsg: Move sk_redir from TCP_SKB_CB to skb")
	Reported-by: Jiang Wang <jiang.wang@bytedance.com>
	Signed-off-by: Cong Wang <cong.wang@bytedance.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: John Fastabend <john.fastabend@gmail.com>
	Acked-by: Jakub Sitnicki <jakub@cloudflare.com>
Link: https://lore.kernel.org/bpf/20210615021342.7416-5-xiyou.wangcong@gmail.com
(cherry picked from commit 30b9c54a707db4155735cf71f4600241c1b7b6ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/skmsg.c
diff --cc net/core/skmsg.c
index cfa6fc7cc1e0,4334720e2a04..000000000000
--- a/net/core/skmsg.c
+++ b/net/core/skmsg.c
@@@ -776,8 -842,15 +776,20 @@@ static void sk_psock_skb_redirect(struc
  	 * error that caused the pipe to break. We can't send a packet on
  	 * a socket that is in this state so we drop the skb.
  	 */
++<<<<<<< HEAD
 +	if (!psock_other || sock_flag(sk_other, SOCK_DEAD) ||
 +	    !sk_psock_test_state(psock_other, SK_PSOCK_TX_ENABLED)) {
++=======
+ 	if (!psock_other || sock_flag(sk_other, SOCK_DEAD)) {
+ 		skb_bpf_redirect_clear(skb);
+ 		kfree_skb(skb);
+ 		return;
+ 	}
+ 	spin_lock_bh(&psock_other->ingress_lock);
+ 	if (!sk_psock_test_state(psock_other, SK_PSOCK_TX_ENABLED)) {
+ 		spin_unlock_bh(&psock_other->ingress_lock);
+ 		skb_bpf_redirect_clear(skb);
++>>>>>>> 30b9c54a707d (skmsg: Clear skb redirect pointer before dropping it)
  		kfree_skb(skb);
  		return;
  	}
* Unmerged path net/core/skmsg.c
