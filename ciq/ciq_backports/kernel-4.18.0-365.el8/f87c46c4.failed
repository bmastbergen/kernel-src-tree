drm/i915/dsi/xelpd: Add WA to program LP to HS wakeup guardband

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Vandita Kulkarni <vandita.kulkarni@intel.com>
commit f87c46c43175d382f3f1e4d067be529a84c6fb7c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/f87c46c4.failed

Wa_16012360555 SW will have to program the "LP to HS Wakeup Guardband"
field to account for the repeaters on the HS Request/Ready PPI signaling
between the Display engine and the DPHY.

v2: Fix build issue.
v3: Align to new naming (Jani)

	Signed-off-by: Vandita Kulkarni <vandita.kulkarni@intel.com>
	Reviewed-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210826054811.10572-2-vandita.kulkarni@intel.com
(cherry picked from commit f87c46c43175d382f3f1e4d067be529a84c6fb7c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/icl_dsi.c
diff --cc drivers/gpu/drm/i915/display/icl_dsi.c
index a7edfaa09035,a1e35180d5dd..000000000000
--- a/drivers/gpu/drm/i915/display/icl_dsi.c
+++ b/drivers/gpu/drm/i915/display/icl_dsi.c
@@@ -1214,6 -1254,43 +1214,46 @@@ static void gen11_dsi_pre_enable(struc
  	gen11_dsi_set_transcoder_timings(encoder, pipe_config);
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * Wa_1409054076:icl,jsl,ehl
+  * When pipe A is disabled and MIPI DSI is enabled on pipe B,
+  * the AMT KVMR feature will incorrectly see pipe A as enabled.
+  * Set 0x42080 bit 23=1 before enabling DSI on pipe B and leave
+  * it set while DSI is enabled on pipe B
+  */
+ static void icl_apply_kvmr_pipe_a_wa(struct intel_encoder *encoder,
+ 				     enum pipe pipe, bool enable)
+ {
+ 	struct drm_i915_private *dev_priv = to_i915(encoder->base.dev);
+ 
+ 	if (DISPLAY_VER(dev_priv) == 11 && pipe == PIPE_B)
+ 		intel_de_rmw(dev_priv, CHICKEN_PAR1_1,
+ 			     IGNORE_KVMR_PIPE_A,
+ 			     enable ? IGNORE_KVMR_PIPE_A : 0);
+ }
+ 
+ /*
+  * Wa_16012360555:adl-p
+  * SW will have to program the "LP to HS Wakeup Guardband"
+  * to account for the repeaters on the HS Request/Ready
+  * PPI signaling between the Display engine and the DPHY.
+  */
+ static void adlp_set_lp_hs_wakeup_gb(struct intel_encoder *encoder)
+ {
+ 	struct drm_i915_private *i915 = to_i915(encoder->base.dev);
+ 	struct intel_dsi *intel_dsi = enc_to_intel_dsi(encoder);
+ 	enum port port;
+ 
+ 	if (DISPLAY_VER(i915) == 13) {
+ 		for_each_dsi_port(port, intel_dsi->ports)
+ 			intel_de_rmw(i915, TGL_DSI_CHKN_REG(port),
+ 				     TGL_DSI_CHKN_LSHS_GB, 0x4);
+ 	}
+ }
+ 
++>>>>>>> f87c46c43175 (drm/i915/dsi/xelpd: Add WA to program LP to HS wakeup guardband)
  static void gen11_dsi_enable(struct intel_atomic_state *state,
  			     struct intel_encoder *encoder,
  			     const struct intel_crtc_state *crtc_state,
@@@ -1223,6 -1300,13 +1263,15 @@@
  
  	drm_WARN_ON(state->base.dev, crtc_state->has_pch_encoder);
  
++<<<<<<< HEAD
++=======
+ 	/* Wa_1409054076:icl,jsl,ehl */
+ 	icl_apply_kvmr_pipe_a_wa(encoder, crtc->pipe, true);
+ 
+ 	/* Wa_16012360555:adl-p */
+ 	adlp_set_lp_hs_wakeup_gb(encoder);
+ 
++>>>>>>> f87c46c43175 (drm/i915/dsi/xelpd: Add WA to program LP to HS wakeup guardband)
  	/* step6d: enable dsi transcoder */
  	gen11_dsi_enable_transcoder(encoder);
  
* Unmerged path drivers/gpu/drm/i915/display/icl_dsi.c
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index f76d9b4ae356..bb1d9dbf3975 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -11457,6 +11457,14 @@ enum skl_power_gate {
 						    _ICL_DSI_IO_MODECTL_1)
 #define  COMBO_PHY_MODE_DSI				(1 << 0)
 
+/* TGL DSI Chicken register */
+#define _TGL_DSI_CHKN_REG_0			0x6B0C0
+#define _TGL_DSI_CHKN_REG_1			0x6B8C0
+#define TGL_DSI_CHKN_REG(port)		_MMIO_PORT(port,	\
+						    _TGL_DSI_CHKN_REG_0, \
+						    _TGL_DSI_CHKN_REG_1)
+#define TGL_DSI_CHKN_LSHS_GB			REG_GENMASK(15, 12)
+
 /* Display Stream Splitter Control */
 #define DSS_CTL1				_MMIO(0x67400)
 #define  SPLITTER_ENABLE			(1 << 31)
