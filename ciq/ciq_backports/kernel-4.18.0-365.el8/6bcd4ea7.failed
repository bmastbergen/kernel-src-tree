xen-swiotlb: remove the unused size argument from xen_swiotlb_fixup

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 6bcd4ea717f3d26edf3da397c82fc9c2236f4f27
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/6bcd4ea7.failed

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
(cherry picked from commit 6bcd4ea717f3d26edf3da397c82fc9c2236f4f27)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/xen/swiotlb-xen.c
diff --cc drivers/xen/swiotlb-xen.c
index 8ccd85660984,4ecfce2c6f72..000000000000
--- a/drivers/xen/swiotlb-xen.c
+++ b/drivers/xen/swiotlb-xen.c
@@@ -213,17 -193,10 +212,21 @@@ retry
  	/*
  	 * And replace that memory with pages under 4GB.
  	 */
++<<<<<<< HEAD
 +	rc = xen_swiotlb_fixup(start,
 +			       bytes,
 +			       nslabs);
++=======
+ 	rc = xen_swiotlb_fixup(start, nslabs);
++>>>>>>> 6bcd4ea717f3 (xen-swiotlb: remove the unused size argument from xen_swiotlb_fixup)
  	if (rc) {
 -		free_pages((unsigned long)start, order);
 +		if (early)
 +			memblock_free(__pa(start),
 +				      PAGE_ALIGN(bytes));
 +		else {
 +			free_pages((unsigned long)start, order);
 +			start = NULL;
 +		}
  		m_ret = XEN_SWIOTLB_EFIXUP;
  		goto error;
  	}
@@@ -255,6 -218,49 +258,52 @@@ error
  	return rc;
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_X86
+ void __init xen_swiotlb_init_early(void)
+ {
+ 	unsigned long nslabs, bytes;
+ 	unsigned int repeat = 3;
+ 	char *start;
+ 	int rc;
+ 
+ 	nslabs = swiotlb_nr_tbl();
+ 	if (!nslabs)
+ 		nslabs = DEFAULT_NSLABS;
+ retry:
+ 	/*
+ 	 * Get IO TLB memory from any location.
+ 	 */
+ 	bytes = nslabs << IO_TLB_SHIFT;
+ 	start = memblock_alloc(PAGE_ALIGN(bytes), PAGE_SIZE);
+ 	if (!start)
+ 		panic("%s: Failed to allocate %lu bytes align=0x%lx\n",
+ 		      __func__, PAGE_ALIGN(bytes), PAGE_SIZE);
+ 
+ 	/*
+ 	 * And replace that memory with pages under 4GB.
+ 	 */
+ 	rc = xen_swiotlb_fixup(start, nslabs);
+ 	if (rc) {
+ 		memblock_free(__pa(start), PAGE_ALIGN(bytes));
+ 		if (repeat--) {
+ 			/* Min is 2MB */
+ 			nslabs = max(1024UL, (nslabs >> 1));
+ 			pr_info("Lowering to %luMB\n",
+ 				(nslabs << IO_TLB_SHIFT) >> 20);
+ 			goto retry;
+ 		}
+ 		panic("%s (rc:%d)", xen_swiotlb_error(XEN_SWIOTLB_EFIXUP), rc);
+ 	}
+ 
+ 	if (swiotlb_init_with_tbl(start, nslabs, false))
+ 		panic("Cannot allocate SWIOTLB buffer");
+ 	swiotlb_set_max_segment(PAGE_SIZE);
+ }
+ #endif /* CONFIG_X86 */
+ 
++>>>>>>> 6bcd4ea717f3 (xen-swiotlb: remove the unused size argument from xen_swiotlb_fixup)
  static void *
  xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,
  			   dma_addr_t *dma_handle, gfp_t flags,
* Unmerged path drivers/xen/swiotlb-xen.c
