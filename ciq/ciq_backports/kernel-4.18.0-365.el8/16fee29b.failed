dma-mapping: remove the dma_direct_set_offset export

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 16fee29b07358293f135759d9fdbf1267da57ebd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/16fee29b.failed

Drop the dma_direct_set_offset export and move the declaration to
dma-map-ops.h now that the Allwinner drivers have stopped calling it.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Maxime Ripard <maxime@cerno.tech>
(cherry picked from commit 16fee29b07358293f135759d9fdbf1267da57ebd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm/mach-keystone/keystone.c
#	arch/arm/mach-omap1/usb.c
#	arch/sh/drivers/pci/pcie-sh7786.c
#	include/linux/dma-map-ops.h
#	include/linux/dma-mapping.h
#	kernel/dma/direct.c
diff --cc arch/arm/mach-keystone/keystone.c
index 84613abf35a3,cd711bfc591f..000000000000
--- a/arch/arm/mach-keystone/keystone.c
+++ b/arch/arm/mach-keystone/keystone.c
@@@ -11,6 -8,7 +11,10 @@@
   */
  #include <linux/io.h>
  #include <linux/of.h>
++<<<<<<< HEAD
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 16fee29b0735 (dma-mapping: remove the dma_direct_set_offset export)
  #include <linux/init.h>
  #include <linux/of_platform.h>
  #include <linux/of_address.h>
diff --cc arch/arm/mach-omap1/usb.c
index 455e2cf2866d,86d3b3c157af..000000000000
--- a/arch/arm/mach-omap1/usb.c
+++ b/arch/arm/mach-omap1/usb.c
@@@ -22,6 -9,7 +22,10 @@@
  #include <linux/kernel.h>
  #include <linux/init.h>
  #include <linux/platform_device.h>
++<<<<<<< HEAD
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 16fee29b0735 (dma-mapping: remove the dma_direct_set_offset export)
  #include <linux/io.h>
  
  #include <asm/irq.h>
diff --cc arch/sh/drivers/pci/pcie-sh7786.c
index 3d81a8b80942,4d499476c33a..000000000000
--- a/arch/sh/drivers/pci/pcie-sh7786.c
+++ b/arch/sh/drivers/pci/pcie-sh7786.c
@@@ -15,6 -12,7 +15,10 @@@
  #include <linux/io.h>
  #include <linux/async.h>
  #include <linux/delay.h>
++<<<<<<< HEAD
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 16fee29b0735 (dma-mapping: remove the dma_direct_set_offset export)
  #include <linux/slab.h>
  #include <linux/clk.h>
  #include <linux/sh_clk.h>
diff --cc include/linux/dma-mapping.h
index 5c32cbab4717,199d85285246..000000000000
--- a/include/linux/dma-mapping.h
+++ b/include/linux/dma-mapping.h
@@@ -825,4 -558,6 +825,10 @@@ static inline int dma_mmap_wc(struct de
  #define dma_unmap_len_set(PTR, LEN_NAME, VAL)    do { } while (0)
  #endif
  
++<<<<<<< HEAD
 +#endif
++=======
+ extern const struct dma_map_ops dma_virt_ops;
+ 
+ #endif /* _LINUX_DMA_MAPPING_H */
++>>>>>>> 16fee29b0735 (dma-mapping: remove the dma_direct_set_offset export)
diff --cc kernel/dma/direct.c
index 7d488b64b9de,002268262c9a..000000000000
--- a/kernel/dma/direct.c
+++ b/kernel/dma/direct.c
@@@ -498,3 -506,44 +498,47 @@@ bool dma_direct_need_sync(struct devic
  	return !dev_is_dma_coherent(dev) ||
  		is_swiotlb_buffer(dma_to_phys(dev, dma_addr));
  }
++<<<<<<< HEAD
++=======
+ 
+ /**
+  * dma_direct_set_offset - Assign scalar offset for a single DMA range.
+  * @dev:	device pointer; needed to "own" the alloced memory.
+  * @cpu_start:  beginning of memory region covered by this offset.
+  * @dma_start:  beginning of DMA/PCI region covered by this offset.
+  * @size:	size of the region.
+  *
+  * This is for the simple case of a uniform offset which cannot
+  * be discovered by "dma-ranges".
+  *
+  * It returns -ENOMEM if out of memory, -EINVAL if a map
+  * already exists, 0 otherwise.
+  *
+  * Note: any call to this from a driver is a bug.  The mapping needs
+  * to be described by the device tree or other firmware interfaces.
+  */
+ int dma_direct_set_offset(struct device *dev, phys_addr_t cpu_start,
+ 			 dma_addr_t dma_start, u64 size)
+ {
+ 	struct bus_dma_region *map;
+ 	u64 offset = (u64)cpu_start - (u64)dma_start;
+ 
+ 	if (dev->dma_range_map) {
+ 		dev_err(dev, "attempt to add DMA range to existing map\n");
+ 		return -EINVAL;
+ 	}
+ 
+ 	if (!offset)
+ 		return 0;
+ 
+ 	map = kcalloc(2, sizeof(*map), GFP_KERNEL);
+ 	if (!map)
+ 		return -ENOMEM;
+ 	map[0].cpu_start = cpu_start;
+ 	map[0].dma_start = dma_start;
+ 	map[0].offset = offset;
+ 	map[0].size = size;
+ 	dev->dma_range_map = map;
+ 	return 0;
+ }
++>>>>>>> 16fee29b0735 (dma-mapping: remove the dma_direct_set_offset export)
* Unmerged path include/linux/dma-map-ops.h
* Unmerged path arch/arm/mach-keystone/keystone.c
* Unmerged path arch/arm/mach-omap1/usb.c
* Unmerged path arch/sh/drivers/pci/pcie-sh7786.c
diff --git a/arch/x86/pci/sta2x11-fixup.c b/arch/x86/pci/sta2x11-fixup.c
index 289b14fe2cba..e61b73655146 100644
--- a/arch/x86/pci/sta2x11-fixup.c
+++ b/arch/x86/pci/sta2x11-fixup.c
@@ -26,7 +26,8 @@
 #include <linux/pci_ids.h>
 #include <linux/export.h>
 #include <linux/list.h>
-#include <linux/dma-direct.h>
+#include <linux/dma-map-ops.h>
+#include <linux/swiotlb.h>
 #include <asm/iommu.h>
 
 #define STA2X11_SWIOTLB_SIZE (4*1024*1024)
* Unmerged path include/linux/dma-map-ops.h
* Unmerged path include/linux/dma-mapping.h
* Unmerged path kernel/dma/direct.c
