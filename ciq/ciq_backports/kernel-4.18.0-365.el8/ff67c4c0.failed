drm/i915/tc: Drop extra TC cold blocking from intel_tc_port_connected()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Imre Deak <imre.deak@intel.com>
commit ff67c4c0dd67b6dbb78a0d045100dd2f9dee88b0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/ff67c4c0.failed

After the previous patch the driver holds a power domain blocking
TC-cold whenever the port is locked, so we can remove the extra blocking
around the lock/unlock sequence.

	Cc: José Roberto de Souza <jose.souza@intel.com>
	Signed-off-by: Imre Deak <imre.deak@intel.com>
	Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210921002313.1132357-13-imre.deak@intel.com
(cherry picked from commit ff67c4c0dd67b6dbb78a0d045100dd2f9dee88b0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_tc.c
diff --cc drivers/gpu/drm/i915/display/intel_tc.c
index 2cefc13535a0,4a14db604cba..000000000000
--- a/drivers/gpu/drm/i915/display/intel_tc.c
+++ b/drivers/gpu/drm/i915/display/intel_tc.c
@@@ -540,15 -740,12 +540,23 @@@ bool intel_tc_port_connected(struct int
  {
  	struct intel_digital_port *dig_port = enc_to_dig_port(encoder);
  	bool is_connected;
++<<<<<<< HEAD
 +	intel_wakeref_t tc_cold_wref;
 +
 +	intel_tc_port_lock(dig_port);
 +	tc_cold_wref = tc_cold_block(dig_port);
++=======
+ 
+ 	intel_tc_port_lock(dig_port);
++>>>>>>> ff67c4c0dd67 (drm/i915/tc: Drop extra TC cold blocking from intel_tc_port_connected())
  
  	is_connected = tc_port_live_status_mask(dig_port) &
  		       BIT(dig_port->tc_mode);
  
++<<<<<<< HEAD
 +	tc_cold_unblock(dig_port, tc_cold_wref);
++=======
++>>>>>>> ff67c4c0dd67 (drm/i915/tc: Drop extra TC cold blocking from intel_tc_port_connected())
  	intel_tc_port_unlock(dig_port);
  
  	return is_connected;
* Unmerged path drivers/gpu/drm/i915/display/intel_tc.c
