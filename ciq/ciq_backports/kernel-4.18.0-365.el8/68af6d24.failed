Documentation/arm64: fix RST layout of memory.rst

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Ard Biesheuvel <ardb@kernel.org>
commit 68af6d2483dbd0385317bc87a338b155be75eeb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/68af6d24.failed

Stephen reports that commit f4693c2716b3 ("arm64: mm: extend linear region
for 52-bit VA configurations") triggers the following warnings when building
the htmldocs make target of today's linux-next:

  Documentation/arm64/memory.rst:35: WARNING: Literal block ends without a blank line; unexpected unindent.
  Documentation/arm64/memory.rst:53: WARNING: Literal block ends without a blank line; unexpected unindent.

Let's tweak the memory layout table to work around this.

	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
	Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
Fixes: f4693c2716b3 ("arm64: mm: extend linear region for 52-bit VA configurations")
Link: https://lore.kernel.org/r/20201110130851.15751-1-ardb@kernel.org
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit 68af6d2483dbd0385317bc87a338b155be75eeb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/arm64/memory.rst
diff --cc Documentation/arm64/memory.rst
index b040909e45f8,e7522e5c8322..000000000000
--- a/Documentation/arm64/memory.rst
+++ b/Documentation/arm64/memory.rst
@@@ -32,17 -32,16 +32,30 @@@ AArch64 Linux memory layout with 4KB pa
    -----------------------------------------------------------------------
    0000000000000000	0000ffffffffffff	 256TB		user
    ffff000000000000	ffff7fffffffffff	 128TB		kernel logical memory map
++<<<<<<< HEAD
 +  ffff800000000000	ffff9fffffffffff	  32TB		kasan shadow region
 +  ffffa00000000000	ffffa00007ffffff	 128MB		bpf jit region
 +  ffffa00008000000	ffffa0000fffffff	 128MB		modules
 +  ffffa00010000000	fffffdffbffeffff	 ~93TB		vmalloc
 +  fffffdffbfff0000	fffffdfffe5f8fff	~998MB		[guard region]
 +  fffffdfffe5f9000	fffffdfffe9fffff	4124KB		fixed mappings
 +  fffffdfffea00000	fffffdfffebfffff	   2MB		[guard region]
 +  fffffdfffec00000	fffffdffffbfffff	  16MB		PCI I/O space
 +  fffffdffffc00000	fffffdffffdfffff	   2MB		[guard region]
 +  fffffdffffe00000	ffffffffffdfffff	   2TB		vmemmap
 +  ffffffffffe00000	ffffffffffffffff	   2MB		[guard region]
++=======
+  [ffff600000000000	ffff7fffffffffff]	  32TB		[kasan shadow region]
+   ffff800000000000	ffff800007ffffff	 128MB		bpf jit region
+   ffff800008000000	ffff80000fffffff	 128MB		modules
+   ffff800010000000	fffffbffefffffff	 124TB		vmalloc
+   fffffbfff0000000	fffffbfffdffffff	 224MB		fixed mappings (top down)
+   fffffbfffe000000	fffffbfffe7fffff	   8MB		[guard region]
+   fffffbfffe800000	fffffbffff7fffff	  16MB		PCI I/O space
+   fffffbffff800000	fffffbffffffffff	   8MB		[guard region]
+   fffffc0000000000	fffffdffffffffff	   2TB		vmemmap
+   fffffe0000000000	ffffffffffffffff	   2TB		[guard region]
++>>>>>>> 68af6d2483db (Documentation/arm64: fix RST layout of memory.rst)
  
  
  AArch64 Linux memory layout with 64KB pages + 3 levels (52-bit with HW support)::
@@@ -50,19 -49,17 +63,33 @@@
    Start			End			Size		Use
    -----------------------------------------------------------------------
    0000000000000000	000fffffffffffff	   4PB		user
++<<<<<<< HEAD
 +  fff0000000000000	fff7ffffffffffff	   2PB		kernel logical memory map
 +  fff8000000000000	fffd9fffffffffff	1440TB		[gap]
 +  fffda00000000000	ffff9fffffffffff	 512TB		kasan shadow region
 +  ffffa00000000000	ffffa00007ffffff	 128MB		bpf jit region
 +  ffffa00008000000	ffffa0000fffffff	 128MB		modules
 +  ffffa00010000000	fffff81ffffeffff	 ~88TB		vmalloc
 +  fffff81fffff0000	fffffc1ffe58ffff	  ~3TB		[guard region]
 +  fffffc1ffe590000	fffffc1ffe9fffff	4544KB		fixed mappings
 +  fffffc1ffea00000	fffffc1ffebfffff	   2MB		[guard region]
 +  fffffc1ffec00000	fffffc1fffbfffff	  16MB		PCI I/O space
 +  fffffc1fffc00000	fffffc1fffdfffff	   2MB		[guard region]
 +  fffffc1fffe00000	ffffffffffdfffff	3968GB		vmemmap
 +  ffffffffffe00000	ffffffffffffffff	   2MB		[guard region]
++=======
+   fff0000000000000	ffff7fffffffffff	  ~4PB		kernel logical memory map
+  [fffd800000000000	ffff7fffffffffff]	 512TB		[kasan shadow region]
+   ffff800000000000	ffff800007ffffff	 128MB		bpf jit region
+   ffff800008000000	ffff80000fffffff	 128MB		modules
+   ffff800010000000	fffffbffefffffff	 124TB		vmalloc
+   fffffbfff0000000	fffffbfffdffffff	 224MB		fixed mappings (top down)
+   fffffbfffe000000	fffffbfffe7fffff	   8MB		[guard region]
+   fffffbfffe800000	fffffbffff7fffff	  16MB		PCI I/O space
+   fffffbffff800000	fffffbffffffffff	   8MB		[guard region]
+   fffffc0000000000	ffffffdfffffffff	  ~4TB		vmemmap
+   ffffffe000000000	ffffffffffffffff	 128GB		[guard region]
++>>>>>>> 68af6d2483db (Documentation/arm64: fix RST layout of memory.rst)
  
  
  Translation table lookup with 4KB pages::
* Unmerged path Documentation/arm64/memory.rst
