net: Introduce skb_send_sock() for sock_map

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Cong Wang <cong.wang@bytedance.com>
commit 0739cd28f2645e814586c7536ba5da9825cb8029
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/0739cd28.failed

We only have skb_send_sock_locked() which requires callers
to use lock_sock(). Introduce a variant skb_send_sock()
which locks on its own, callers do not need to lock it
any more. This will save us from adding a ->sendmsg_locked
for each protocol.

To reuse the code, pass function pointers to __skb_send_sock()
and build skb_send_sock() and skb_send_sock_locked() on top.

	Signed-off-by: Cong Wang <cong.wang@bytedance.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
Link: https://lore.kernel.org/bpf/20210331023237.41094-4-xiyou.wangcong@gmail.com
(cherry picked from commit 0739cd28f2645e814586c7536ba5da9825cb8029)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/skbuff.c
diff --cc net/core/skbuff.c
index 227cf9d48f35,3ad9e8425ab2..000000000000
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@@ -2412,12 -2574,14 +2436,20 @@@ do_frag_list
  	for (; len && fragidx < skb_shinfo(skb)->nr_frags; fragidx++) {
  		skb_frag_t *frag  = &skb_shinfo(skb)->frags[fragidx];
  
 -		slen = min_t(size_t, len, skb_frag_size(frag) - offset);
 +		slen = min_t(size_t, len, frag->size - offset);
  
  		while (slen) {
++<<<<<<< HEAD
 +			ret = kernel_sendpage_locked(sk, frag->page.p,
 +						     frag->page_offset + offset,
 +						     slen, MSG_DONTWAIT);
++=======
+ 			ret = INDIRECT_CALL_2(sendpage, kernel_sendpage_locked,
+ 					      sendpage_unlocked, sk,
+ 					      skb_frag_page(frag),
+ 					      skb_frag_off(frag) + offset,
+ 					      slen, MSG_DONTWAIT);
++>>>>>>> 0739cd28f264 (net: Introduce skb_send_sock() for sock_map)
  			if (ret <= 0)
  				goto error;
  
diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 0c800a991f4c..993af5456d9d 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -3610,6 +3610,7 @@ int skb_splice_bits(struct sk_buff *skb, struct sock *sk, unsigned int offset,
 		    unsigned int flags);
 int skb_send_sock_locked(struct sock *sk, struct sk_buff *skb, int offset,
 			 int len);
+int skb_send_sock(struct sock *sk, struct sk_buff *skb, int offset, int len);
 void skb_copy_and_csum_dev(const struct sk_buff *skb, u8 *to);
 unsigned int skb_zerocopy_headlen(const struct sk_buff *from);
 int skb_zerocopy(struct sk_buff *to, struct sk_buff *from,
* Unmerged path net/core/skbuff.c
