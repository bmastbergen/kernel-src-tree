of: Drop superfluous ULL suffix for ~0

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Geert Uytterhoeven <geert+renesas@glider.be>
commit 495023e4e49e4b7dee35928800bf0317276576c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/495023e4.failed

There is no need to specify a "ULL" suffix for "all bits set": "~0" is
sufficient, and works regardless of type.  In fact adding the suffix
makes the code more fragile.

Fixes: 48ab6d5d1f09 ("dma-mapping: fix 32-bit overflow with CONFIG_ARM_LPAE=n")
	Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
	Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 495023e4e49e4b7dee35928800bf0317276576c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/of/device.c
diff --cc drivers/of/device.c
index f137835e2a84,aedfaaafd3e7..000000000000
--- a/drivers/of/device.c
+++ b/drivers/of/device.c
@@@ -106,10 -107,19 +106,22 @@@ int of_dma_configure_id(struct device *
  		 */
  		if (!force_dma)
  			return ret == -ENODEV ? 0 : ret;
 -	} else {
 -		const struct bus_dma_region *r = map;
 -		u64 dma_end = 0;
  
++<<<<<<< HEAD
 +		dma_addr = offset = 0;
 +	} else {
 +		offset = PFN_DOWN(paddr - dma_addr);
++=======
+ 		/* Determine the overall bounds of all DMA regions */
+ 		for (dma_start = ~0; r->size; r++) {
+ 			/* Take lower and upper limits */
+ 			if (r->dma_start < dma_start)
+ 				dma_start = r->dma_start;
+ 			if (r->dma_start + r->size > dma_end)
+ 				dma_end = r->dma_start + r->size;
+ 		}
+ 		size = dma_end - dma_start;
++>>>>>>> 495023e4e49e (of: Drop superfluous ULL suffix for ~0)
  
  		/*
  		 * Add a work around to treat the size as mask + 1 in case
* Unmerged path drivers/of/device.c
