irqchip/gic: Cleanup Franken-GIC handling

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Marc Zyngier <maz@kernel.org>
commit 8594c3b85171b6f68e34e07b533ec2f1bf7fb065
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/8594c3b8.failed

Introduce a static key identifying Samsung's unique creation, allowing
to replace the indirect call to compute the base addresses with
a simple test on the static key.

Faster, cheaper, negative diffstat.

	Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
(cherry picked from commit 8594c3b85171b6f68e34e07b533ec2f1bf7fb065)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/irqchip/irq-gic.c
diff --cc drivers/irqchip/irq-gic.c
index de8a3602de3a,30edcca627d6..000000000000
--- a/drivers/irqchip/irq-gic.c
+++ b/drivers/irqchip/irq-gic.c
@@@ -127,32 -121,26 +124,24 @@@ static struct gic_chip_data gic_data[CO
  
  static struct gic_kvm_info gic_v2_kvm_info;
  
 -static DEFINE_PER_CPU(u32, sgi_intid);
 -
  #ifdef CONFIG_GIC_NON_BANKED
- static void __iomem *gic_get_percpu_base(union gic_base *base)
- {
- 	return raw_cpu_read(*base->percpu_base);
- }
+ static DEFINE_STATIC_KEY_FALSE(frankengic_key);
  
- static void __iomem *gic_get_common_base(union gic_base *base)
+ static void enable_frankengic(void)
  {
- 	return base->common_base;
+ 	static_branch_enable(&frankengic_key);
  }
  
- static inline void __iomem *gic_data_dist_base(struct gic_chip_data *data)
+ static inline void __iomem *__get_base(union gic_base *base)
  {
- 	return data->get_base(&data->dist_base);
- }
+ 	if (static_branch_unlikely(&frankengic_key))
+ 		return raw_cpu_read(*base->percpu_base);
  
- static inline void __iomem *gic_data_cpu_base(struct gic_chip_data *data)
- {
- 	return data->get_base(&data->cpu_base);
+ 	return base->common_base;
  }
  
- static inline void gic_set_base_accessor(struct gic_chip_data *data,
- 					 void __iomem *(*f)(union gic_base *))
- {
- 	data->get_base = f;
- }
+ #define gic_data_dist_base(d)	__get_base(&(d)->dist_base)
+ #define gic_data_cpu_base(d)	__get_base(&(d)->cpu_base)
  #else
  #define gic_data_dist_base(d)	((d)->dist_base.common_base)
  #define gic_data_cpu_base(d)	((d)->cpu_base.common_base)
@@@ -298,7 -296,7 +287,11 @@@ static int gic_set_type(struct irq_dat
  
  	/* Interrupt configuration for SGIs can't be changed */
  	if (gicirq < 16)
++<<<<<<< HEAD
 +		return -EINVAL;
++=======
+ 		return type != IRQ_TYPE_EDGE_RISING ? -EINVAL : 0;
++>>>>>>> 8594c3b85171 (irqchip/gic: Cleanup Franken-GIC handling)
  
  	/* SPIs have restrictions on the supported types */
  	if (gicirq >= 32 && type != IRQ_TYPE_LEVEL_HIGH &&
* Unmerged path drivers/irqchip/irq-gic.c
