kasan: fix null pointer dereference in kasan_record_aux_stack

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Walter Wu <walter-zh.wu@mediatek.com>
commit 13384f6125ad7ebdcc8914fe1e03ded48ce76581
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/13384f61.failed

Syzbot reported the following [1]:

  BUG: kernel NULL pointer dereference, address: 0000000000000008
  #PF: supervisor read access in kernel mode
  #PF: error_code(0x0000) - not-present page
  PGD 2d993067 P4D 2d993067 PUD 19a3c067 PMD 0
  Oops: 0000 [#1] PREEMPT SMP KASAN
  CPU: 1 PID: 3852 Comm: kworker/1:2 Not tainted 5.10.0-syzkaller #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
  Workqueue: events free_ipc
  RIP: 0010:kasan_record_aux_stack+0x77/0xb0

Add null checking slab object from kasan_get_alloc_meta() in order to
avoid null pointer dereference.

[1] https://syzkaller.appspot.com/x/log.txt?x=10a82a50d00000

Link: https://lkml.kernel.org/r/20201228080018.23041-1-walter-zh.wu@mediatek.com
	Signed-off-by: Walter Wu <walter-zh.wu@mediatek.com>
	Suggested-by: Dmitry Vyukov <dvyukov@google.com>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: Andrey Konovalov <andreyknvl@google.com>
	Cc: Alexander Potapenko <glider@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 13384f6125ad7ebdcc8914fe1e03ded48ce76581)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/kasan/generic.c
diff --cc mm/kasan/generic.c
index d341859a1b95,5106b84b07d4..000000000000
--- a/mm/kasan/generic.c
+++ b/mm/kasan/generic.c
@@@ -332,10 -336,12 +332,16 @@@ void kasan_record_aux_stack(void *addr
  
  	cache = page->slab_cache;
  	object = nearest_obj(cache, page, addr);
++<<<<<<< HEAD
 +	alloc_info = get_alloc_info(cache, object);
++=======
+ 	alloc_meta = kasan_get_alloc_meta(cache, object);
+ 	if (!alloc_meta)
+ 		return;
++>>>>>>> 13384f6125ad (kasan: fix null pointer dereference in kasan_record_aux_stack)
  
 -	alloc_meta->aux_stack[1] = alloc_meta->aux_stack[0];
 -	alloc_meta->aux_stack[0] = kasan_save_stack(GFP_NOWAIT);
 +	alloc_info->aux_stack[1] = alloc_info->aux_stack[0];
 +	alloc_info->aux_stack[0] = kasan_save_stack(GFP_NOWAIT);
  }
  
  void kasan_set_free_info(struct kmem_cache *cache,
* Unmerged path mm/kasan/generic.c
