netfilter: conntrack: tag conntracks picked up in local out hook

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Florian Westphal <fw@strlen.de>
commit 4a6fbdd801e882ee6ca5cdfdc3374f0ae263174c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/4a6fbdd8.failed

This allows to identify flows that originate from local machine
in a followup patch.

It would be possible to make this a ->status bit instead.
For now I did not do that yet because I don't have a use-case for
exposing this info to userspace.

If one comes up the toggle can be replaced with a status bit.

	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 4a6fbdd801e882ee6ca5cdfdc3374f0ae263174c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/netfilter/nf_conntrack.h
diff --cc include/net/netfilter/nf_conntrack.h
index 4ee5e4c9c956,871489df63c6..000000000000
--- a/include/net/netfilter/nf_conntrack.h
+++ b/include/net/netfilter/nf_conntrack.h
@@@ -81,9 -94,8 +81,14 @@@ struct nf_conn 
  	/* Have we seen traffic both ways yet? (bitset) */
  	unsigned long status;
  
++<<<<<<< HEAD
 +	/* jiffies32 when this ct is considered dead */
 +	u32 timeout;
 +
++=======
+ 	u16		cpu;
+ 	u16		local_origin:1;
++>>>>>>> 4a6fbdd801e8 (netfilter: conntrack: tag conntracks picked up in local out hook)
  	possible_net_t ct_net;
  
  #if IS_ENABLED(CONFIG_NF_NAT)
* Unmerged path include/net/netfilter/nf_conntrack.h
diff --git a/net/netfilter/nf_conntrack_core.c b/net/netfilter/nf_conntrack_core.c
index d262f395908a..7a1b827f79b6 100644
--- a/net/netfilter/nf_conntrack_core.c
+++ b/net/netfilter/nf_conntrack_core.c
@@ -1668,6 +1668,9 @@ resolve_normal_ct(struct nf_conn *tmpl,
 			return 0;
 		if (IS_ERR(h))
 			return PTR_ERR(h);
+
+		ct = nf_ct_tuplehash_to_ctrack(h);
+		ct->local_origin = state->hook == NF_INET_LOCAL_OUT;
 	}
 	ct = nf_ct_tuplehash_to_ctrack(h);
 
