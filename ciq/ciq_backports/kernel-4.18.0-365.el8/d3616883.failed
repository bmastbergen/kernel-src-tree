drm/i915/fb: move intel_tile_width_bytes() to intel_fb.c

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Jani Nikula <jani.nikula@intel.com>
commit d36168832755112573b926efe3b9d5213504f265
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/d3616883.failed

Split out fb related stuff from intel_display.c to intel_fb.c.

	Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/35c3ade81a54fea890cf92e21b778c38ab78cd04.1629721467.git.jani.nikula@intel.com
(cherry picked from commit d36168832755112573b926efe3b9d5213504f265)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_display.c
#	drivers/gpu/drm/i915/display/intel_display.h
#	drivers/gpu/drm/i915/display/intel_fb.c
#	drivers/gpu/drm/i915/display/intel_fb.h
diff --cc drivers/gpu/drm/i915/display/intel_display.c
index 19f6e7572c75,6118bd782b57..000000000000
--- a/drivers/gpu/drm/i915/display/intel_display.c
+++ b/drivers/gpu/drm/i915/display/intel_display.c
@@@ -1160,99 -879,6 +1160,102 @@@ intel_format_info_is_yuv_semiplanar(con
  	       info->num_planes == (is_ccs_modifier(modifier) ? 4 : 2);
  }
  
++<<<<<<< HEAD
 +static bool is_semiplanar_uv_plane(const struct drm_framebuffer *fb,
 +				   int color_plane)
 +{
 +	return intel_format_info_is_yuv_semiplanar(fb->format, fb->modifier) &&
 +	       color_plane == 1;
 +}
 +
 +static unsigned int
 +intel_tile_width_bytes(const struct drm_framebuffer *fb, int color_plane)
 +{
 +	struct drm_i915_private *dev_priv = to_i915(fb->dev);
 +	unsigned int cpp = fb->format->cpp[color_plane];
 +
 +	switch (fb->modifier) {
 +	case DRM_FORMAT_MOD_LINEAR:
 +		return intel_tile_size(dev_priv);
 +	case I915_FORMAT_MOD_X_TILED:
 +		if (IS_GEN(dev_priv, 2))
 +			return 128;
 +		else
 +			return 512;
 +	case I915_FORMAT_MOD_Y_TILED_CCS:
 +		if (is_ccs_plane(fb, color_plane))
 +			return 128;
 +		fallthrough;
 +	case I915_FORMAT_MOD_Y_TILED_GEN12_RC_CCS:
 +	case I915_FORMAT_MOD_Y_TILED_GEN12_RC_CCS_CC:
 +	case I915_FORMAT_MOD_Y_TILED_GEN12_MC_CCS:
 +		if (is_ccs_plane(fb, color_plane))
 +			return 64;
 +		fallthrough;
 +	case I915_FORMAT_MOD_Y_TILED:
 +		if (IS_GEN(dev_priv, 2) || HAS_128_BYTE_Y_TILING(dev_priv))
 +			return 128;
 +		else
 +			return 512;
 +	case I915_FORMAT_MOD_Yf_TILED_CCS:
 +		if (is_ccs_plane(fb, color_plane))
 +			return 128;
 +		fallthrough;
 +	case I915_FORMAT_MOD_Yf_TILED:
 +		switch (cpp) {
 +		case 1:
 +			return 64;
 +		case 2:
 +		case 4:
 +			return 128;
 +		case 8:
 +		case 16:
 +			return 256;
 +		default:
 +			MISSING_CASE(cpp);
 +			return cpp;
 +		}
 +		break;
 +	default:
 +		MISSING_CASE(fb->modifier);
 +		return cpp;
 +	}
 +}
 +
 +static unsigned int
 +intel_tile_height(const struct drm_framebuffer *fb, int color_plane)
 +{
 +	if (is_gen12_ccs_plane(fb, color_plane))
 +		return 1;
 +
 +	return intel_tile_size(to_i915(fb->dev)) /
 +		intel_tile_width_bytes(fb, color_plane);
 +}
 +
 +/* Return the tile dimensions in pixel units */
 +static void intel_tile_dims(const struct drm_framebuffer *fb, int color_plane,
 +			    unsigned int *tile_width,
 +			    unsigned int *tile_height)
 +{
 +	unsigned int tile_width_bytes = intel_tile_width_bytes(fb, color_plane);
 +	unsigned int cpp = fb->format->cpp[color_plane];
 +
 +	*tile_width = tile_width_bytes / cpp;
 +	*tile_height = intel_tile_height(fb, color_plane);
 +}
 +
 +static unsigned int intel_tile_row_size(const struct drm_framebuffer *fb,
 +					int color_plane)
 +{
 +	unsigned int tile_width, tile_height;
 +
 +	intel_tile_dims(fb, color_plane, &tile_width, &tile_height);
 +
 +	return fb->pitches[color_plane] * tile_height;
 +}
 +
++=======
++>>>>>>> d36168832755 (drm/i915/fb: move intel_tile_width_bytes() to intel_fb.c)
  unsigned int
  intel_fb_align_height(const struct drm_framebuffer *fb,
  		      int color_plane, unsigned int height)
diff --cc drivers/gpu/drm/i915/display/intel_display.h
index 76f8a805b0a3,e04394c8a9ad..000000000000
--- a/drivers/gpu/drm/i915/display/intel_display.h
+++ b/drivers/gpu/drm/i915/display/intel_display.h
@@@ -653,12 -629,12 +653,18 @@@ void intel_plane_unpin_fb(struct intel_
  struct intel_encoder *
  intel_get_crtc_new_encoder(const struct intel_atomic_state *state,
  			   const struct intel_crtc_state *crtc_state);
 -
  unsigned int intel_surf_alignment(const struct drm_framebuffer *fb,
  				  int color_plane);
++<<<<<<< HEAD
 +u32 intel_plane_adjust_aligned_offset(int *x, int *y,
 +				      const struct intel_plane_state *state,
 +				      int color_plane,
 +				      u32 old_offset, u32 new_offset);
++=======
+ 
+ void intel_display_driver_register(struct drm_i915_private *i915);
+ void intel_display_driver_unregister(struct drm_i915_private *i915);
++>>>>>>> d36168832755 (drm/i915/fb: move intel_tile_width_bytes() to intel_fb.c)
  
  /* modesetting */
  void intel_modeset_init_hw(struct drm_i915_private *i915);
* Unmerged path drivers/gpu/drm/i915/display/intel_fb.c
* Unmerged path drivers/gpu/drm/i915/display/intel_fb.h
* Unmerged path drivers/gpu/drm/i915/display/intel_display.c
* Unmerged path drivers/gpu/drm/i915/display/intel_display.h
* Unmerged path drivers/gpu/drm/i915/display/intel_fb.c
* Unmerged path drivers/gpu/drm/i915/display/intel_fb.h
