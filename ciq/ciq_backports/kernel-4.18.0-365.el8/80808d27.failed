swiotlb: split swiotlb_tbl_sync_single

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 80808d273a3f075196d1a26463f65d4c9d2891c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/80808d27.failed

Split swiotlb_tbl_sync_single into two separate funtions for the to device
and to cpu synchronization.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
(cherry picked from commit 80808d273a3f075196d1a26463f65d4c9d2891c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/dma/direct.c
#	kernel/dma/direct.h
#	kernel/dma/swiotlb.c
diff --cc kernel/dma/direct.c
index 7d488b64b9de,f737e3347059..000000000000
--- a/kernel/dma/direct.c
+++ b/kernel/dma/direct.c
@@@ -365,8 -370,11 +365,16 @@@ void dma_direct_sync_sg_for_cpu(struct 
  			arch_sync_dma_for_cpu(paddr, sg->length, dir);
  
  		if (unlikely(is_swiotlb_buffer(paddr)))
++<<<<<<< HEAD
 +			swiotlb_tbl_sync_single(dev, paddr, sg->length, dir,
 +					SYNC_FOR_CPU);
++=======
+ 			swiotlb_sync_single_for_cpu(dev, paddr, sg->length,
+ 						    dir);
+ 
+ 		if (dir == DMA_FROM_DEVICE)
+ 			arch_dma_mark_clean(paddr, sg->length);
++>>>>>>> 80808d273a3f (swiotlb: split swiotlb_tbl_sync_single)
  	}
  
  	if (!dev_is_dma_coherent(dev))
diff --cc kernel/dma/swiotlb.c
index 017e72bac63a,5fe8781be6f2..000000000000
--- a/kernel/dma/swiotlb.c
+++ b/kernel/dma/swiotlb.c
@@@ -716,37 -715,22 +716,52 @@@ void swiotlb_tbl_unmap_single(struct de
  	spin_unlock_irqrestore(&io_tlb_lock, flags);
  }
  
- void swiotlb_tbl_sync_single(struct device *hwdev, phys_addr_t tlb_addr,
- 			     size_t size, enum dma_data_direction dir,
- 			     enum dma_sync_target target)
+ void swiotlb_sync_single_for_device(struct device *dev, phys_addr_t tlb_addr,
+ 		size_t size, enum dma_data_direction dir)
  {
++<<<<<<< HEAD
 +	int index = (tlb_addr - io_tlb_start) >> IO_TLB_SHIFT;
 +	size_t orig_size = io_tlb_orig_size[index];
 +	phys_addr_t orig_addr = io_tlb_orig_addr[index];
 +
 +	if (orig_addr == INVALID_PHYS_ADDR)
 +		return;
 +
 +	validate_sync_size_and_truncate(hwdev, orig_size, &size);
 +
 +	switch (target) {
 +	case SYNC_FOR_CPU:
 +		if (likely(dir == DMA_FROM_DEVICE || dir == DMA_BIDIRECTIONAL))
 +			swiotlb_bounce(orig_addr, tlb_addr,
 +				       size, DMA_FROM_DEVICE);
 +		else
 +			BUG_ON(dir != DMA_TO_DEVICE);
 +		break;
 +	case SYNC_FOR_DEVICE:
 +		if (likely(dir == DMA_TO_DEVICE || dir == DMA_BIDIRECTIONAL))
 +			swiotlb_bounce(orig_addr, tlb_addr,
 +				       size, DMA_TO_DEVICE);
 +		else
 +			BUG_ON(dir != DMA_FROM_DEVICE);
 +		break;
 +	default:
 +		BUG();
 +	}
++=======
+ 	if (dir == DMA_TO_DEVICE || dir == DMA_BIDIRECTIONAL)
+ 		swiotlb_bounce(dev, tlb_addr, size, DMA_TO_DEVICE);
+ 	else
+ 		BUG_ON(dir != DMA_FROM_DEVICE);
+ }
+ 
+ void swiotlb_sync_single_for_cpu(struct device *dev, phys_addr_t tlb_addr,
+ 		size_t size, enum dma_data_direction dir)
+ {
+ 	if (dir == DMA_FROM_DEVICE || dir == DMA_BIDIRECTIONAL)
+ 		swiotlb_bounce(dev, tlb_addr, size, DMA_FROM_DEVICE);
+ 	else
+ 		BUG_ON(dir != DMA_TO_DEVICE);
++>>>>>>> 80808d273a3f (swiotlb: split swiotlb_tbl_sync_single)
  }
  
  /*
* Unmerged path kernel/dma/direct.h
diff --git a/drivers/iommu/dma-iommu.c b/drivers/iommu/dma-iommu.c
index 7a9d033bfda4..629990213ec7 100644
--- a/drivers/iommu/dma-iommu.c
+++ b/drivers/iommu/dma-iommu.c
@@ -799,7 +799,7 @@ static void iommu_dma_sync_single_for_cpu(struct device *dev,
 		arch_sync_dma_for_cpu(phys, size, dir);
 
 	if (is_swiotlb_buffer(phys))
-		swiotlb_tbl_sync_single(dev, phys, size, dir, SYNC_FOR_CPU);
+		swiotlb_sync_single_for_cpu(dev, phys, size, dir);
 }
 
 static void iommu_dma_sync_single_for_device(struct device *dev,
@@ -812,7 +812,7 @@ static void iommu_dma_sync_single_for_device(struct device *dev,
 
 	phys = iommu_iova_to_phys(iommu_get_dma_domain(dev), dma_handle);
 	if (is_swiotlb_buffer(phys))
-		swiotlb_tbl_sync_single(dev, phys, size, dir, SYNC_FOR_DEVICE);
+		swiotlb_sync_single_for_device(dev, phys, size, dir);
 
 	if (!dev_is_dma_coherent(dev))
 		arch_sync_dma_for_device(phys, size, dir);
@@ -833,8 +833,8 @@ static void iommu_dma_sync_sg_for_cpu(struct device *dev,
 			arch_sync_dma_for_cpu(sg_phys(sg), sg->length, dir);
 
 		if (is_swiotlb_buffer(sg_phys(sg)))
-			swiotlb_tbl_sync_single(dev, sg_phys(sg), sg->length,
-						dir, SYNC_FOR_CPU);
+			swiotlb_sync_single_for_cpu(dev, sg_phys(sg),
+						    sg->length, dir);
 	}
 }
 
@@ -850,8 +850,8 @@ static void iommu_dma_sync_sg_for_device(struct device *dev,
 
 	for_each_sg(sgl, sg, nelems, i) {
 		if (is_swiotlb_buffer(sg_phys(sg)))
-			swiotlb_tbl_sync_single(dev, sg_phys(sg), sg->length,
-						dir, SYNC_FOR_DEVICE);
+			swiotlb_sync_single_for_device(dev, sg_phys(sg),
+						       sg->length, dir);
 
 		if (!dev_is_dma_coherent(dev))
 			arch_sync_dma_for_device(sg_phys(sg), sg->length, dir);
diff --git a/drivers/xen/swiotlb-xen.c b/drivers/xen/swiotlb-xen.c
index d199863cc446..5c7c9abfd54f 100644
--- a/drivers/xen/swiotlb-xen.c
+++ b/drivers/xen/swiotlb-xen.c
@@ -459,7 +459,7 @@ xen_swiotlb_sync_single_for_cpu(struct device *dev, dma_addr_t dma_addr,
 		xen_dma_sync_for_cpu(dma_addr, paddr, size, dir);
 
 	if (is_xen_swiotlb_buffer(dev, dma_addr))
-		swiotlb_tbl_sync_single(dev, paddr, size, dir, SYNC_FOR_CPU);
+		swiotlb_sync_single_for_cpu(dev, paddr, size, dir);
 }
 
 static void
@@ -469,7 +469,7 @@ xen_swiotlb_sync_single_for_device(struct device *dev, dma_addr_t dma_addr,
 	phys_addr_t paddr = xen_dma_to_phys(dev, dma_addr);
 
 	if (is_xen_swiotlb_buffer(dev, dma_addr))
-		swiotlb_tbl_sync_single(dev, paddr, size, dir, SYNC_FOR_DEVICE);
+		swiotlb_sync_single_for_device(dev, paddr, size, dir);
 
 	if (!dev_is_dma_coherent(dev))
 		xen_dma_sync_for_device(dma_addr, paddr, size, dir);
diff --git a/include/linux/swiotlb.h b/include/linux/swiotlb.h
index 5857a937c637..479ffe1b9a2b 100644
--- a/include/linux/swiotlb.h
+++ b/include/linux/swiotlb.h
@@ -42,14 +42,6 @@ extern int swiotlb_late_init_with_tbl(char *tlb, unsigned long nslabs);
 extern int swiotlb_late_init_with_default_size(size_t default_size);
 extern void __init swiotlb_update_mem_attributes(void);
 
-/*
- * Enumeration for sync targets
- */
-enum dma_sync_target {
-	SYNC_FOR_CPU = 0,
-	SYNC_FOR_DEVICE = 1,
-};
-
 phys_addr_t swiotlb_tbl_map_single(struct device *hwdev, phys_addr_t phys,
 		size_t mapping_size, size_t alloc_size,
 		enum dma_data_direction dir, unsigned long attrs);
@@ -61,11 +53,10 @@ extern void swiotlb_tbl_unmap_single(struct device *hwdev,
 				     enum dma_data_direction dir,
 				     unsigned long attrs);
 
-extern void swiotlb_tbl_sync_single(struct device *hwdev,
-				    phys_addr_t tlb_addr,
-				    size_t size, enum dma_data_direction dir,
-				    enum dma_sync_target target);
-
+void swiotlb_sync_single_for_device(struct device *dev, phys_addr_t tlb_addr,
+		size_t size, enum dma_data_direction dir);
+void swiotlb_sync_single_for_cpu(struct device *dev, phys_addr_t tlb_addr,
+		size_t size, enum dma_data_direction dir);
 dma_addr_t swiotlb_map(struct device *dev, phys_addr_t phys,
 		size_t size, enum dma_data_direction dir, unsigned long attrs);
 
* Unmerged path kernel/dma/direct.c
* Unmerged path kernel/dma/direct.h
* Unmerged path kernel/dma/swiotlb.c
