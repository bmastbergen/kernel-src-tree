x86/fpu: Add basic helpers for dynamically enabled features

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 23686ef25d4ae81bc12fe3994d1905191fcf71f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/23686ef2.failed

To allow building up the infrastructure required to support dynamically
enabled FPU features, add:

 - XFEATURES_MASK_DYNAMIC

   This constant will hold xfeatures which can be dynamically enabled.

 - fpu_state_size_dynamic()

   A static branch for 64-bit and a simple 'return false' for 32-bit.

   This helper allows to add dynamic-feature-specific changes to common
   code which is shared between 32-bit and 64-bit without #ifdeffery.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Chang S. Bae <chang.seok.bae@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20211021225527.10184-8-chang.seok.bae@intel.com
(cherry picked from commit 23686ef25d4ae81bc12fe3994d1905191fcf71f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/fpu/xstate.h
diff --cc arch/x86/include/asm/fpu/xstate.h
index 2df5bd667a43,cf285464eabe..000000000000
--- a/arch/x86/include/asm/fpu/xstate.h
+++ b/arch/x86/include/asm/fpu/xstate.h
@@@ -143,14 -99,22 +146,34 @@@ int copy_sigframe_from_user_to_xstate(s
  void xsaves(struct xregs_state *xsave, u64 mask);
  void xrstors(struct xregs_state *xsave, u64 mask);
  
++<<<<<<< HEAD
 +enum xstate_copy_mode {
 +	XSTATE_COPY_FP,
 +	XSTATE_COPY_FX,
 +	XSTATE_COPY_XSAVE,
 +};
 +
 +struct membuf;
 +void copy_xstate_to_uabi_buf(struct membuf to, struct task_struct *tsk,
 +			     enum xstate_copy_mode mode);
++=======
+ #ifdef CONFIG_X86_64
+ DECLARE_STATIC_KEY_FALSE(__fpu_state_size_dynamic);
+ #endif
+ 
+ #ifdef CONFIG_X86_64
+ DECLARE_STATIC_KEY_FALSE(__fpu_state_size_dynamic);
+ 
+ static __always_inline __pure bool fpu_state_size_dynamic(void)
+ {
+ 	return static_branch_unlikely(&__fpu_state_size_dynamic);
+ }
+ #else
+ static __always_inline __pure bool fpu_state_size_dynamic(void)
+ {
+ 	return false;
+ }
+ #endif
++>>>>>>> 23686ef25d4a (x86/fpu: Add basic helpers for dynamically enabled features)
  
  #endif
* Unmerged path arch/x86/include/asm/fpu/xstate.h
diff --git a/arch/x86/kernel/fpu/core.c b/arch/x86/kernel/fpu/core.c
index 2859edb41245..1b041ae55cdc 100644
--- a/arch/x86/kernel/fpu/core.c
+++ b/arch/x86/kernel/fpu/core.c
@@ -24,6 +24,10 @@
 #define CREATE_TRACE_POINTS
 #include <asm/trace/fpu.h>
 
+#ifdef CONFIG_X86_64
+DEFINE_STATIC_KEY_FALSE(__fpu_state_size_dynamic);
+#endif
+
 /* The FPU state configuration data for kernel and user space */
 struct fpu_state_config	fpu_kernel_cfg __ro_after_init;
 struct fpu_state_config fpu_user_cfg __ro_after_init;
