drm/i915/display: Settle on "adl-x" in WA comments

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author José Roberto de Souza <jose.souza@intel.com>
commit 1d2b8fd93ed592db6498bfb428ea288441b0f3b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/1d2b8fd9.failed

Most of the places are using this format so lets consolidate it.

v2:
- split patch in two: display and non-display because of conflicts
between drm-intel-gt-next x drm-intel-next

	Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
	Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
	Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210713003854.143197-1-jose.souza@intel.com
(cherry picked from commit 1d2b8fd93ed592db6498bfb428ea288441b0f3b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_cdclk.c
#	drivers/gpu/drm/i915/display/intel_cursor.c
#	drivers/gpu/drm/i915/display/intel_display.c
#	drivers/gpu/drm/i915/display/intel_psr.c
#	drivers/gpu/drm/i915/display/skl_universal_plane.c
diff --cc drivers/gpu/drm/i915/display/intel_cdclk.c
index 2e878cc274b7,71067a62264d..000000000000
--- a/drivers/gpu/drm/i915/display/intel_cdclk.c
+++ b/drivers/gpu/drm/i915/display/intel_cdclk.c
@@@ -2846,7 -2873,17 +2846,21 @@@ u32 intel_read_rawclk(struct drm_i915_p
   */
  void intel_init_cdclk_hooks(struct drm_i915_private *dev_priv)
  {
++<<<<<<< HEAD
 +	if (IS_ROCKETLAKE(dev_priv)) {
++=======
+ 	if (IS_ALDERLAKE_P(dev_priv)) {
+ 		dev_priv->display.set_cdclk = bxt_set_cdclk;
+ 		dev_priv->display.bw_calc_min_cdclk = skl_bw_calc_min_cdclk;
+ 		dev_priv->display.modeset_calc_cdclk = bxt_modeset_calc_cdclk;
+ 		dev_priv->display.calc_voltage_level = tgl_calc_voltage_level;
+ 		/* Wa_22011320316:adl-p[a0] */
+ 		if (IS_ADLP_DISPLAY_STEP(dev_priv, STEP_A0, STEP_A0))
+ 			dev_priv->cdclk.table = adlp_a_step_cdclk_table;
+ 		else
+ 			dev_priv->cdclk.table = adlp_cdclk_table;
+ 	} else if (IS_ROCKETLAKE(dev_priv)) {
++>>>>>>> 1d2b8fd93ed5 (drm/i915/display: Settle on "adl-x" in WA comments)
  		dev_priv->display.set_cdclk = bxt_set_cdclk;
  		dev_priv->display.bw_calc_min_cdclk = skl_bw_calc_min_cdclk;
  		dev_priv->display.modeset_calc_cdclk = bxt_modeset_calc_cdclk;
diff --cc drivers/gpu/drm/i915/display/intel_cursor.c
index 21fe4d2753e9,f61a25fb87e9..000000000000
--- a/drivers/gpu/drm/i915/display/intel_cursor.c
+++ b/drivers/gpu/drm/i915/display/intel_cursor.c
@@@ -381,6 -383,10 +381,13 @@@ static u32 i9xx_cursor_ctl(const struc
  	if (plane_state->hw.rotation & DRM_MODE_ROTATE_180)
  		cntl |= MCURSOR_ROTATE_180;
  
++<<<<<<< HEAD
++=======
+ 	/* Wa_22012358565:adl-p */
+ 	if (DISPLAY_VER(dev_priv) == 13)
+ 		cntl |= MCURSOR_ARB_SLOTS(1);
+ 
++>>>>>>> 1d2b8fd93ed5 (drm/i915/display: Settle on "adl-x" in WA comments)
  	return cntl;
  }
  
diff --cc drivers/gpu/drm/i915/display/intel_display.c
index 19f6e7572c75,588b8ebe3020..000000000000
--- a/drivers/gpu/drm/i915/display/intel_display.c
+++ b/drivers/gpu/drm/i915/display/intel_display.c
@@@ -1013,7 -975,10 +1013,14 @@@ void intel_enable_pipe(const struct int
  		/* FIXME: assert CPU port conditions for SNB+ */
  	}
  
++<<<<<<< HEAD
 +	trace_intel_pipe_enable(crtc);
++=======
+ 	/* Wa_22012358565:adl-p */
+ 	if (DISPLAY_VER(dev_priv) == 13)
+ 		intel_de_rmw(dev_priv, PIPE_ARB_CTL(pipe),
+ 			     0, PIPE_ARB_USE_PROG_SLOTS);
++>>>>>>> 1d2b8fd93ed5 (drm/i915/display: Settle on "adl-x" in WA comments)
  
  	reg = PIPECONF(cpu_transcoder);
  	val = intel_de_read(dev_priv, reg);
diff --cc drivers/gpu/drm/i915/display/intel_psr.c
index 2c6c4a4f9477,4dfe1dceb863..000000000000
--- a/drivers/gpu/drm/i915/display/intel_psr.c
+++ b/drivers/gpu/drm/i915/display/intel_psr.c
@@@ -527,13 -539,40 +527,44 @@@ static void hsw_activate_psr2(struct in
  	val = psr_compute_idle_frames(intel_dp) << EDP_PSR2_IDLE_FRAME_SHIFT;
  
  	val |= EDP_PSR2_ENABLE | EDP_SU_TRACK_ENABLE;
 -	if (DISPLAY_VER(dev_priv) >= 10 && DISPLAY_VER(dev_priv) <= 12)
 +	if (INTEL_GEN(dev_priv) >= 10 || IS_GEMINILAKE(dev_priv))
  		val |= EDP_Y_COORDINATE_ENABLE;
  
 -	val |= EDP_PSR2_FRAME_BEFORE_SU(intel_dp->psr.sink_sync_latency + 1);
 +	val |= EDP_PSR2_FRAME_BEFORE_SU(dev_priv->psr.sink_sync_latency + 1);
  	val |= intel_psr2_get_tp_time(intel_dp);
  
++<<<<<<< HEAD
 +	if (INTEL_GEN(dev_priv) >= 12) {
++=======
+ 	/* Wa_22012278275:adl-p */
+ 	if (IS_ADLP_DISPLAY_STEP(dev_priv, STEP_A0, STEP_D1)) {
+ 		static const u8 map[] = {
+ 			2, /* 5 lines */
+ 			1, /* 6 lines */
+ 			0, /* 7 lines */
+ 			3, /* 8 lines */
+ 			6, /* 9 lines */
+ 			5, /* 10 lines */
+ 			4, /* 11 lines */
+ 			7, /* 12 lines */
+ 		};
+ 		/*
+ 		 * Still using the default IO_BUFFER_WAKE and FAST_WAKE, see
+ 		 * comments bellow for more information
+ 		 */
+ 		u32 tmp, lines = 7;
+ 
+ 		val |= TGL_EDP_PSR2_BLOCK_COUNT_NUM_2;
+ 
+ 		tmp = map[lines - TGL_EDP_PSR2_IO_BUFFER_WAKE_MIN_LINES];
+ 		tmp = tmp << TGL_EDP_PSR2_IO_BUFFER_WAKE_SHIFT;
+ 		val |= tmp;
+ 
+ 		tmp = map[lines - TGL_EDP_PSR2_FAST_WAKE_MIN_LINES];
+ 		tmp = tmp << TGL_EDP_PSR2_FAST_WAKE_MIN_SHIFT;
+ 		val |= tmp;
+ 	} else if (DISPLAY_VER(dev_priv) >= 12) {
++>>>>>>> 1d2b8fd93ed5 (drm/i915/display: Settle on "adl-x" in WA comments)
  		/*
  		 * TODO: 7 lines of IO_BUFFER_WAKE and FAST_WAKE are default
  		 * values from BSpec. In order to setting an optimal power
@@@ -661,12 -727,14 +692,20 @@@ tgl_dc3co_exitline_compute_config(struc
  	if (crtc_state->enable_psr2_sel_fetch)
  		return;
  
 -	if (!(dev_priv->dmc.allowed_dc_mask & DC_STATE_EN_DC3CO))
 +	if (!(dev_priv->csr.allowed_dc_mask & DC_STATE_EN_DC3CO))
  		return;
  
++<<<<<<< HEAD
 +	/* B.Specs:49196 DC3CO only works with pipeA and DDIA.*/
 +	if (to_intel_crtc(crtc_state->uapi.crtc)->pipe != PIPE_A ||
 +	    dig_port->base.port != PORT_A)
++=======
+ 	if (!dc3co_is_pipe_port_compatible(intel_dp, crtc_state))
+ 		return;
+ 
+ 	/* Wa_16011303918:adl-p */
+ 	if (IS_ADLP_DISPLAY_STEP(dev_priv, STEP_A0, STEP_A0))
++>>>>>>> 1d2b8fd93ed5 (drm/i915/display: Settle on "adl-x" in WA comments)
  		return;
  
  	/*
@@@ -812,6 -959,20 +851,23 @@@ static bool intel_psr2_config_valid(str
  		return false;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (!_compute_psr2_sdp_prior_scanline_indication(intel_dp, crtc_state)) {
+ 		drm_dbg_kms(&dev_priv->drm,
+ 			    "PSR2 not enabled, PSR2 SDP indication do not fit in hblank\n");
+ 		return false;
+ 	}
+ 
+ 	/* Wa_16011303918:adl-p */
+ 	if (crtc_state->vrr.enable &&
+ 	    IS_ADLP_DISPLAY_STEP(dev_priv, STEP_A0, STEP_A0)) {
+ 		drm_dbg_kms(&dev_priv->drm,
+ 			    "PSR2 not enabled, not compatible with HW stepping + VRR\n");
+ 		return false;
+ 	}
+ 
++>>>>>>> 1d2b8fd93ed5 (drm/i915/display: Settle on "adl-x" in WA comments)
  	tgl_dc3co_exitline_compute_config(intel_dp, crtc_state);
  	return true;
  }
@@@ -968,10 -1157,10 +1024,10 @@@ static void intel_psr_enable_source(str
  
  	if (HAS_PSR_HW_TRACKING(dev_priv) && HAS_PSR2_SEL_FETCH(dev_priv))
  		intel_de_rmw(dev_priv, CHICKEN_PAR1_1, IGNORE_PSR2_HW_TRACKING,
 -			     intel_dp->psr.psr2_sel_fetch_enabled ?
 +			     dev_priv->psr.psr2_sel_fetch_enabled ?
  			     IGNORE_PSR2_HW_TRACKING : 0);
  
- 	/* Wa_16011168373:adlp */
+ 	/* Wa_16011168373:adl-p */
  	if (IS_ADLP_DISPLAY_STEP(dev_priv, STEP_A0, STEP_A0) &&
  	    intel_dp->psr.psr2_enabled)
  		intel_de_rmw(dev_priv,
* Unmerged path drivers/gpu/drm/i915/display/skl_universal_plane.c
* Unmerged path drivers/gpu/drm/i915/display/intel_cdclk.c
* Unmerged path drivers/gpu/drm/i915/display/intel_cursor.c
* Unmerged path drivers/gpu/drm/i915/display/intel_display.c
* Unmerged path drivers/gpu/drm/i915/display/intel_psr.c
* Unmerged path drivers/gpu/drm/i915/display/skl_universal_plane.c
