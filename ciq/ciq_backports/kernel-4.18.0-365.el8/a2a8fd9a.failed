x86/fpu/signal: Change return code of restore_fpregs_from_user() to boolean

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit a2a8fd9a3efd8d22ee14a441e9e78cf5c998e69a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/a2a8fd9a.failed

__fpu_sig_restore() only needs information about success or fail and no
real error code.

This cleans up the confusing conversion of the trap number, which is
returned by the *RSTOR() exception fixups, to an error code.

	Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20210908132526.084109938@linutronix.de
(cherry picked from commit a2a8fd9a3efd8d22ee14a441e9e78cf5c998e69a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/fpu/signal.c
diff --cc arch/x86/kernel/fpu/signal.c
index 15e09f1a412b,68f03da2012e..000000000000
--- a/arch/x86/kernel/fpu/signal.c
+++ b/arch/x86/kernel/fpu/signal.c
@@@ -281,13 -283,12 +281,17 @@@ retry
  		fpregs_unlock();
  
  		/* Try to handle #PF, but anything else is fatal. */
++<<<<<<< HEAD
 +		if (ret != -EFAULT)
 +			return -EINVAL;
++=======
+ 		if (ret != X86_TRAP_PF)
+ 			return false;
++>>>>>>> a2a8fd9a3efd (x86/fpu/signal: Change return code of restore_fpregs_from_user() to boolean)
  
- 		ret = fault_in_pages_readable(buf, size);
- 		if (!ret)
+ 		if (!fault_in_pages_readable(buf, size))
  			goto retry;
- 		return ret;
+ 		return false;
  	}
  
  	/*
@@@ -304,11 -305,11 +308,11 @@@
  
  	fpregs_mark_activate();
  	fpregs_unlock();
- 	return 0;
+ 	return true;
  }
  
 -static bool __fpu_restore_sig(void __user *buf, void __user *buf_fx,
 -			      bool ia32_fxstate)
 +static int __fpu_restore_sig(void __user *buf, void __user *buf_fx,
 +			     bool ia32_fxstate)
  {
  	int state_size = fpu_kernel_xstate_size;
  	struct task_struct *tsk = current;
* Unmerged path arch/x86/kernel/fpu/signal.c
