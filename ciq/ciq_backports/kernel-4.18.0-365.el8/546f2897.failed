virtio_net: Account for tx bytes and packets on sending xdp_frames

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
commit 546f28974d771b124fb0bf7b551b343888cf0419
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/546f2897.failed

Previously virtnet_xdp_xmit() did not account for device tx counters,
which caused confusions.
To be consistent with SKBs, account them on freeing xdp_frames.

	Reported-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 546f28974d771b124fb0bf7b551b343888cf0419)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/virtio_net.c
diff --cc drivers/net/virtio_net.c
index f5102a04f2c0,4cfceb789eea..000000000000
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@@ -531,10 -528,18 +533,25 @@@ static int virtnet_xdp_xmit(struct net_
  
  	/* Free up any pending old buffers before queueing new ones. */
  	while ((ptr = virtqueue_get_buf(sq->vq, &len)) != NULL) {
++<<<<<<< HEAD
 +		if (likely(is_xdp_frame(ptr)))
 +			xdp_return_frame(ptr_to_xdp(ptr));
 +		else
 +			dev_consume_skb_any(ptr);
++=======
+ 		if (likely(is_xdp_frame(ptr))) {
+ 			struct xdp_frame *frame = ptr_to_xdp(ptr);
+ 
+ 			bytes += frame->len;
+ 			xdp_return_frame(frame);
+ 		} else {
+ 			struct sk_buff *skb = ptr;
+ 
+ 			bytes += skb->len;
+ 			napi_consume_skb(skb, false);
+ 		}
+ 		packets++;
++>>>>>>> 546f28974d77 (virtio_net: Account for tx bytes and packets on sending xdp_frames)
  	}
  
  	for (i = 0; i < n; i++) {
* Unmerged path drivers/net/virtio_net.c
