tty: make everyone's write_room return >= 0

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit 6bfbfcfc58005ee12d37b56a5e722618ef6bee8f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/6bfbfcfc.failed

The tty line disciplines don't expect tty_operations::write_room to
return negative values. Fix the five drivers which violate this.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210302062214.29627-44-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 6bfbfcfc58005ee12d37b56a5e722618ef6bee8f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/n_gsm.c
diff --cc drivers/tty/n_gsm.c
index f4af82c4f03e,9e12f9cb1a98..000000000000
--- a/drivers/tty/n_gsm.c
+++ b/drivers/tty/n_gsm.c
@@@ -3032,8 -3048,8 +3032,13 @@@ static int gsmtty_write_room(struct tty
  {
  	struct gsm_dlci *dlci = tty->driver_data;
  	if (dlci->state == DLCI_CLOSED)
++<<<<<<< HEAD
 +		return -EINVAL;
 +	return TX_SIZE - kfifo_len(dlci->fifo);
++=======
+ 		return 0;
+ 	return TX_SIZE - kfifo_len(&dlci->fifo);
++>>>>>>> 6bfbfcfc5800 (tty: make everyone's write_room return >= 0)
  }
  
  static int gsmtty_chars_in_buffer(struct tty_struct *tty)
diff --git a/drivers/staging/gdm724x/gdm_tty.c b/drivers/staging/gdm724x/gdm_tty.c
index bf554f7c56ca..e0450c3e01fa 100644
--- a/drivers/staging/gdm724x/gdm_tty.c
+++ b/drivers/staging/gdm724x/gdm_tty.c
@@ -196,7 +196,7 @@ static int gdm_tty_write_room(struct tty_struct *tty)
 	struct gdm *gdm = tty->driver_data;
 
 	if (!GDM_TTY_READY(gdm))
-		return -ENODEV;
+		return 0;
 
 	return WRITE_SIZE;
 }
diff --git a/drivers/tty/ipwireless/tty.c b/drivers/tty/ipwireless/tty.c
index 1ef751c27ac6..0e9922379b57 100644
--- a/drivers/tty/ipwireless/tty.c
+++ b/drivers/tty/ipwireless/tty.c
@@ -236,10 +236,10 @@ static int ipw_write_room(struct tty_struct *linux_tty)
 
 	/* FIXME: Exactly how is the tty object locked here .. */
 	if (!tty)
-		return -ENODEV;
+		return 0;
 
 	if (!tty->port.count)
-		return -EINVAL;
+		return 0;
 
 	room = IPWIRELESS_TX_QUEUE_SIZE - tty->tx_bytes_queued;
 	if (room < 0)
* Unmerged path drivers/tty/n_gsm.c
diff --git a/drivers/tty/vcc.c b/drivers/tty/vcc.c
index 58b454c34560..030066b3727e 100644
--- a/drivers/tty/vcc.c
+++ b/drivers/tty/vcc.c
@@ -916,7 +916,7 @@ static int vcc_write_room(struct tty_struct *tty)
 	port = vcc_get_ne(tty->index);
 	if (unlikely(!port)) {
 		pr_err("VCC: write_room: Failed to find VCC port\n");
-		return -ENODEV;
+		return 0;
 	}
 
 	num = VCC_BUFF_LEN - port->chars_in_buffer;
diff --git a/drivers/usb/serial/mos7720.c b/drivers/usb/serial/mos7720.c
index f5caf38ba2be..164d7740235c 100644
--- a/drivers/usb/serial/mos7720.c
+++ b/drivers/usb/serial/mos7720.c
@@ -1200,7 +1200,7 @@ static int mos7720_write_room(struct tty_struct *tty)
 
 	mos7720_port = usb_get_serial_port_data(port);
 	if (mos7720_port == NULL)
-		return -ENODEV;
+		return 0;
 
 	/* FIXME: Locking */
 	for (i = 0; i < NUM_URBS; ++i) {
