drm/i915: split fdi link training from display vtable.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Dave Airlie <airlied@redhat.com>
commit 5c8c179bcaf6dbbc3381ae8afbb6dc5978d4f234
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/5c8c179b.failed

It may make sense to merge this with display again later,
however the fdi use of the vtable is limited to only a
few generations.

	Reviewed-by: Jani Nikula <jani.nikula@intel.com>
	Signed-off-by: Dave Airlie <airlied@redhat.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/7af7359b6cec33bd2d32152893d9a1e8f8cf7f21.1632869550.git.jani.nikula@intel.com
(cherry picked from commit 5c8c179bcaf6dbbc3381ae8afbb6dc5978d4f234)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_fdi.c
#	drivers/gpu/drm/i915/i915_drv.h
diff --cc drivers/gpu/drm/i915/display/intel_fdi.c
index 5f9fe340a7c6,f828bebe8962..000000000000
--- a/drivers/gpu/drm/i915/display/intel_fdi.c
+++ b/drivers/gpu/drm/i915/display/intel_fdi.c
@@@ -680,12 -918,110 +680,19 @@@ void ilk_fdi_disable(struct intel_crtc 
  void
  intel_fdi_init_hook(struct drm_i915_private *dev_priv)
  {
++<<<<<<< HEAD
 +	if (IS_GEN(dev_priv, 5)) {
 +		dev_priv->display.fdi_link_train = ilk_fdi_link_train;
 +	} else if (IS_GEN(dev_priv, 6)) {
 +		dev_priv->display.fdi_link_train = gen6_fdi_link_train;
++=======
+ 	if (IS_IRONLAKE(dev_priv)) {
+ 		dev_priv->fdi_funcs.fdi_link_train = ilk_fdi_link_train;
+ 	} else if (IS_SANDYBRIDGE(dev_priv)) {
+ 		dev_priv->fdi_funcs.fdi_link_train = gen6_fdi_link_train;
++>>>>>>> 5c8c179bcaf6 (drm/i915: split fdi link training from display vtable.)
  	} else if (IS_IVYBRIDGE(dev_priv)) {
  		/* FIXME: detect B0+ stepping and use auto training */
- 		dev_priv->display.fdi_link_train = ivb_manual_fdi_link_train;
+ 		dev_priv->fdi_funcs.fdi_link_train = ivb_manual_fdi_link_train;
  	}
  }
diff --cc drivers/gpu/drm/i915/i915_drv.h
index 6638c0aec2d4,c51142ffef54..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@@ -330,33 -364,58 +330,68 @@@ struct drm_i915_display_funcs 
  	void (*read_luts)(struct intel_crtc_state *crtc_state);
  };
  
 -struct intel_audio_funcs {
 -	void (*audio_codec_enable)(struct intel_encoder *encoder,
 -				   const struct intel_crtc_state *crtc_state,
 -				   const struct drm_connector_state *conn_state);
 -	void (*audio_codec_disable)(struct intel_encoder *encoder,
 -				    const struct intel_crtc_state *old_crtc_state,
 -				    const struct drm_connector_state *old_conn_state);
 +struct intel_csr {
 +	struct work_struct work;
 +	const char *fw_path;
 +	u32 required_version;
 +	u32 max_fw_size; /* bytes */
 +	u32 *dmc_payload;
 +	u32 dmc_fw_size; /* dwords */
 +	u32 version;
 +	u32 mmio_count;
 +	i915_reg_t mmioaddr[20];
 +	u32 mmiodata[20];
 +	u32 dc_state;
 +	u32 target_dc_state;
 +	u32 allowed_dc_mask;
 +	intel_wakeref_t wakeref;
  };
  
 -struct intel_cdclk_funcs {
 -	void (*get_cdclk)(struct drm_i915_private *dev_priv,
 -			  struct intel_cdclk_config *cdclk_config);
 -	void (*set_cdclk)(struct drm_i915_private *dev_priv,
 -			  const struct intel_cdclk_config *cdclk_config,
 -			  enum pipe pipe);
 -	int (*bw_calc_min_cdclk)(struct intel_atomic_state *state);
 -	int (*modeset_calc_cdclk)(struct intel_cdclk_state *state);
 -	u8 (*calc_voltage_level)(int cdclk);
 +enum i915_cache_level {
 +	I915_CACHE_NONE = 0,
 +	I915_CACHE_LLC, /* also used for snoopable memory on non-LLC */
 +	I915_CACHE_L3_LLC, /* gen7+, L3 sits between the domain specifc
 +			      caches, eg sampler/render caches, and the
 +			      large Last-Level-Cache. LLC is coherent with
 +			      the CPU, but L3 is only visible to the GPU. */
 +	I915_CACHE_WT, /* hsw:gt3e WriteThrough for scanouts */
  };
  
++<<<<<<< HEAD
++=======
+ struct intel_hotplug_funcs {
+ 	void (*hpd_irq_setup)(struct drm_i915_private *dev_priv);
+ };
+ 
+ struct intel_fdi_funcs {
+ 	void (*fdi_link_train)(struct intel_crtc *crtc,
+ 			       const struct intel_crtc_state *crtc_state);
+ };
+ 
+ struct drm_i915_display_funcs {
+ 	/* Returns the active state of the crtc, and if the crtc is active,
+ 	 * fills out the pipe-config with the hw state. */
+ 	bool (*get_pipe_config)(struct intel_crtc *,
+ 				struct intel_crtc_state *);
+ 	void (*get_initial_plane_config)(struct intel_crtc *,
+ 					 struct intel_initial_plane_config *);
+ 	int (*crtc_compute_clock)(struct intel_crtc_state *crtc_state);
+ 	void (*crtc_enable)(struct intel_atomic_state *state,
+ 			    struct intel_crtc *crtc);
+ 	void (*crtc_disable)(struct intel_atomic_state *state,
+ 			     struct intel_crtc *crtc);
+ 	void (*commit_modeset_enables)(struct intel_atomic_state *state);
+ 	void (*commit_modeset_disables)(struct intel_atomic_state *state);
+ 
+ 	/* clock updates for mode set */
+ 	/* cursor updates */
+ 	/* render clock increase/decrease */
+ 	/* display clock increase/decrease */
+ 	/* pll clock increase/decrease */
+ };
+ 
+ 
++>>>>>>> 5c8c179bcaf6 (drm/i915: split fdi link training from display vtable.)
  #define I915_COLOR_UNEVICTABLE (-1) /* a non-vma sharing the address space */
  
  struct intel_fbc {
@@@ -962,6 -978,18 +997,21 @@@ struct drm_i915_private 
  	/* unbound hipri wq for page flips/plane updates */
  	struct workqueue_struct *flip_wq;
  
++<<<<<<< HEAD
++=======
+ 	/* pm private clock gating functions */
+ 	struct drm_i915_clock_gating_funcs clock_gating_funcs;
+ 
+ 	/* pm display functions */
+ 	struct drm_i915_wm_disp_funcs wm_disp;
+ 
+ 	/* irq display functions */
+ 	struct intel_hotplug_funcs hotplug_funcs;
+ 
+ 	/* fdi display functions */
+ 	struct intel_fdi_funcs fdi_funcs;
+ 
++>>>>>>> 5c8c179bcaf6 (drm/i915: split fdi link training from display vtable.)
  	/* Display functions */
  	struct drm_i915_display_funcs display;
  
* Unmerged path drivers/gpu/drm/i915/display/intel_fdi.c
* Unmerged path drivers/gpu/drm/i915/i915_drv.h
