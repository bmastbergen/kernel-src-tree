drm/i915/icl/tc: Remove the ICL special casing during TC-cold blocking

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Imre Deak <imre.deak@intel.com>
commit 38c393462d01d2746f9f91c1a6482fded2b1b8bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/38c39346.failed

While a TypeC port mode is locked a DISPLAY_CORE power domain reference
is held, which implies a runtime PM ref. By removing the ICL !legacy
port special casing, a TC_COLD_OFF power domain reference will be taken
for such ports, which also translates to a runtime PM ref on that
platform. A follow-up change will stop holding the DISPLAY_CORE power
domain while the port is locked.

	Cc: José Roberto de Souza <jose.souza@intel.com>
	Signed-off-by: Imre Deak <imre.deak@intel.com>
	Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210921002313.1132357-11-imre.deak@intel.com
(cherry picked from commit 38c393462d01d2746f9f91c1a6482fded2b1b8bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_tc.c
diff --cc drivers/gpu/drm/i915/display/intel_tc.c
index 2cefc13535a0,9367770de5d7..000000000000
--- a/drivers/gpu/drm/i915/display/intel_tc.c
+++ b/drivers/gpu/drm/i915/display/intel_tc.c
@@@ -35,16 -64,22 +35,28 @@@ tc_cold_get_power_domain(struct intel_d
  }
  
  static intel_wakeref_t
 -tc_cold_block_in_mode(struct intel_digital_port *dig_port, enum tc_port_mode mode,
 -		      enum intel_display_power_domain *domain)
 +tc_cold_block(struct intel_digital_port *dig_port)
  {
  	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
 +	enum intel_display_power_domain domain;
 +
++<<<<<<< HEAD
 +	if (INTEL_GEN(i915) == 11 && !dig_port->tc_legacy_port)
 +		return 0;
  
 +	domain = tc_cold_get_power_domain(dig_port);
 +	return intel_display_power_get(i915, domain);
++=======
+ 	*domain = tc_cold_get_power_domain(dig_port, mode);
+ 
+ 	return intel_display_power_get(i915, *domain);
+ }
+ 
+ static intel_wakeref_t
+ tc_cold_block(struct intel_digital_port *dig_port, enum intel_display_power_domain *domain)
+ {
+ 	return tc_cold_block_in_mode(dig_port, dig_port->tc_mode, domain);
++>>>>>>> 38c393462d01 (drm/i915/icl/tc: Remove the ICL special casing during TC-cold blocking)
  }
  
  static void
@@@ -71,11 -105,9 +83,14 @@@ assert_tc_cold_blocked(struct intel_dig
  	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
  	bool enabled;
  
++<<<<<<< HEAD
 +	if (INTEL_GEN(i915) == 11 && !dig_port->tc_legacy_port)
 +		return;
 +
++=======
++>>>>>>> 38c393462d01 (drm/i915/icl/tc: Remove the ICL special casing during TC-cold blocking)
  	enabled = intel_display_power_is_enabled(i915,
 -						 tc_cold_get_power_domain(dig_port,
 -									  dig_port->tc_mode));
 +						 tc_cold_get_power_domain(dig_port));
  	drm_WARN_ON(&i915->drm, !enabled);
  }
  
* Unmerged path drivers/gpu/drm/i915/display/intel_tc.c
