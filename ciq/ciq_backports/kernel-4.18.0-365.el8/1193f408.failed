x86/fpu/signal: Change return type of __fpu_restore_sig() to boolean

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 1193f408cd5140f2cfd38c7e60a2d39d39cd485f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/1193f408.failed

Now that fpu__restore_sig() returns a boolean get rid of the individual
error codes in __fpu_restore_sig() as well.

	Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20210908132525.966197097@linutronix.de
(cherry picked from commit 1193f408cd5140f2cfd38c7e60a2d39d39cd485f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/fpu/signal.c
diff --cc arch/x86/kernel/fpu/signal.c
index 15e09f1a412b,912d770363e6..000000000000
--- a/arch/x86/kernel/fpu/signal.c
+++ b/arch/x86/kernel/fpu/signal.c
@@@ -411,12 -411,12 +409,16 @@@ static bool __fpu_restore_sig(void __us
  		u64 mask = user_xfeatures | xfeatures_mask_supervisor();
  
  		fpu->state.xsave.header.xfeatures &= mask;
++<<<<<<< HEAD
 +		ret = os_xrstor_safe(&fpu->state.xsave, xfeatures_mask_all);
++=======
+ 		success = !os_xrstor_safe(&fpu->state.xsave, xfeatures_mask_all);
++>>>>>>> 1193f408cd51 (x86/fpu/signal: Change return type of __fpu_restore_sig() to boolean)
  	} else {
- 		ret = fxrstor_safe(&fpu->state.fxsave);
+ 		success = !fxrstor_safe(&fpu->state.fxsave);
  	}
  
- 	if (likely(!ret))
+ 	if (likely(success))
  		fpregs_mark_activate();
  
  	fpregs_unlock();
* Unmerged path arch/x86/kernel/fpu/signal.c
