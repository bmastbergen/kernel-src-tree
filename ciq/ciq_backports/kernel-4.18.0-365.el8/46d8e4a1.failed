drm/i915: split clock gating init from display vtable

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Dave Airlie <airlied@redhat.com>
commit 46d8e4a1da52460912392f51fcda2326be7217a2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/46d8e4a1.failed

This function is only used inside intel_pm.c

	Reviewed-by: Jani Nikula <jani.nikula@intel.com>
	Signed-off-by: Dave Airlie <airlied@redhat.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/95d626a7329ab5779804762894e304e12c6dbe1f.1632869550.git.jani.nikula@intel.com
(cherry picked from commit 46d8e4a1da52460912392f51fcda2326be7217a2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_pm.c
diff --cc drivers/gpu/drm/i915/intel_pm.c
index 7f3ec682595b,34d6faee8969..000000000000
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@@ -7563,53 -7895,53 +7563,82 @@@ static void nop_init_clock_gating(struc
   */
  void intel_init_clock_gating_hooks(struct drm_i915_private *dev_priv)
  {
++<<<<<<< HEAD
 +	if (IS_DG1(dev_priv))
 +		dev_priv->display.init_clock_gating = dg1_init_clock_gating;
 +	else if (IS_GEN(dev_priv, 12))
 +		dev_priv->display.init_clock_gating = gen12lp_init_clock_gating;
 +	else if (IS_GEN(dev_priv, 11))
 +		dev_priv->display.init_clock_gating = icl_init_clock_gating;
 +	else if (IS_CANNONLAKE(dev_priv))
 +		dev_priv->display.init_clock_gating = cnl_init_clock_gating;
++=======
+ 	if (IS_ALDERLAKE_P(dev_priv))
+ 		dev_priv->clock_gating_funcs.init_clock_gating = adlp_init_clock_gating;
+ 	else if (IS_DG1(dev_priv))
+ 		dev_priv->clock_gating_funcs.init_clock_gating = dg1_init_clock_gating;
+ 	else if (GRAPHICS_VER(dev_priv) == 12)
+ 		dev_priv->clock_gating_funcs.init_clock_gating = gen12lp_init_clock_gating;
+ 	else if (GRAPHICS_VER(dev_priv) == 11)
+ 		dev_priv->clock_gating_funcs.init_clock_gating = icl_init_clock_gating;
++>>>>>>> 46d8e4a1da52 (drm/i915: split clock gating init from display vtable)
  	else if (IS_COFFEELAKE(dev_priv) || IS_COMETLAKE(dev_priv))
- 		dev_priv->display.init_clock_gating = cfl_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = cfl_init_clock_gating;
  	else if (IS_SKYLAKE(dev_priv))
- 		dev_priv->display.init_clock_gating = skl_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = skl_init_clock_gating;
  	else if (IS_KABYLAKE(dev_priv))
- 		dev_priv->display.init_clock_gating = kbl_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = kbl_init_clock_gating;
  	else if (IS_BROXTON(dev_priv))
- 		dev_priv->display.init_clock_gating = bxt_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = bxt_init_clock_gating;
  	else if (IS_GEMINILAKE(dev_priv))
- 		dev_priv->display.init_clock_gating = glk_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = glk_init_clock_gating;
  	else if (IS_BROADWELL(dev_priv))
- 		dev_priv->display.init_clock_gating = bdw_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = bdw_init_clock_gating;
  	else if (IS_CHERRYVIEW(dev_priv))
- 		dev_priv->display.init_clock_gating = chv_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = chv_init_clock_gating;
  	else if (IS_HASWELL(dev_priv))
- 		dev_priv->display.init_clock_gating = hsw_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = hsw_init_clock_gating;
  	else if (IS_IVYBRIDGE(dev_priv))
- 		dev_priv->display.init_clock_gating = ivb_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = ivb_init_clock_gating;
  	else if (IS_VALLEYVIEW(dev_priv))
++<<<<<<< HEAD
 +		dev_priv->display.init_clock_gating = vlv_init_clock_gating;
 +	else if (IS_GEN(dev_priv, 6))
 +		dev_priv->display.init_clock_gating = gen6_init_clock_gating;
 +	else if (IS_GEN(dev_priv, 5))
 +		dev_priv->display.init_clock_gating = ilk_init_clock_gating;
++=======
+ 		dev_priv->clock_gating_funcs.init_clock_gating = vlv_init_clock_gating;
+ 	else if (GRAPHICS_VER(dev_priv) == 6)
+ 		dev_priv->clock_gating_funcs.init_clock_gating = gen6_init_clock_gating;
+ 	else if (GRAPHICS_VER(dev_priv) == 5)
+ 		dev_priv->clock_gating_funcs.init_clock_gating = ilk_init_clock_gating;
++>>>>>>> 46d8e4a1da52 (drm/i915: split clock gating init from display vtable)
  	else if (IS_G4X(dev_priv))
- 		dev_priv->display.init_clock_gating = g4x_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = g4x_init_clock_gating;
  	else if (IS_I965GM(dev_priv))
- 		dev_priv->display.init_clock_gating = i965gm_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = i965gm_init_clock_gating;
  	else if (IS_I965G(dev_priv))
++<<<<<<< HEAD
 +		dev_priv->display.init_clock_gating = i965g_init_clock_gating;
 +	else if (IS_GEN(dev_priv, 3))
 +		dev_priv->display.init_clock_gating = gen3_init_clock_gating;
 +	else if (IS_I85X(dev_priv) || IS_I865G(dev_priv))
 +		dev_priv->display.init_clock_gating = i85x_init_clock_gating;
 +	else if (IS_GEN(dev_priv, 2))
 +		dev_priv->display.init_clock_gating = i830_init_clock_gating;
++=======
+ 		dev_priv->clock_gating_funcs.init_clock_gating = i965g_init_clock_gating;
+ 	else if (GRAPHICS_VER(dev_priv) == 3)
+ 		dev_priv->clock_gating_funcs.init_clock_gating = gen3_init_clock_gating;
+ 	else if (IS_I85X(dev_priv) || IS_I865G(dev_priv))
+ 		dev_priv->clock_gating_funcs.init_clock_gating = i85x_init_clock_gating;
+ 	else if (GRAPHICS_VER(dev_priv) == 2)
+ 		dev_priv->clock_gating_funcs.init_clock_gating = i830_init_clock_gating;
++>>>>>>> 46d8e4a1da52 (drm/i915: split clock gating init from display vtable)
  	else {
  		MISSING_CASE(INTEL_DEVID(dev_priv));
- 		dev_priv->display.init_clock_gating = nop_init_clock_gating;
+ 		dev_priv->clock_gating_funcs.init_clock_gating = nop_init_clock_gating;
  	}
  }
  
diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 6638c0aec2d4..91ad635454aa 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -259,6 +259,11 @@ struct intel_crtc;
 struct intel_limit;
 struct dpll;
 
+/* functions used internal in intel_pm.c */
+struct drm_i915_clock_gating_funcs {
+	void (*init_clock_gating)(struct drm_i915_private *dev_priv);
+};
+
 struct drm_i915_display_funcs {
 	void (*get_cdclk)(struct drm_i915_private *dev_priv,
 			  struct intel_cdclk_config *cdclk_config);
@@ -304,7 +309,6 @@ struct drm_i915_display_funcs {
 				    const struct drm_connector_state *old_conn_state);
 	void (*fdi_link_train)(struct intel_crtc *crtc,
 			       const struct intel_crtc_state *crtc_state);
-	void (*init_clock_gating)(struct drm_i915_private *dev_priv);
 	void (*hpd_irq_setup)(struct drm_i915_private *dev_priv);
 	/* clock updates for mode set */
 	/* cursor updates */
@@ -962,6 +966,9 @@ struct drm_i915_private {
 	/* unbound hipri wq for page flips/plane updates */
 	struct workqueue_struct *flip_wq;
 
+	/* pm private clock gating functions */
+	struct drm_i915_clock_gating_funcs clock_gating_funcs;
+
 	/* Display functions */
 	struct drm_i915_display_funcs display;
 
* Unmerged path drivers/gpu/drm/i915/intel_pm.c
