dma-mapping: simplify dma_init_coherent_memory

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Christoph Hellwig <hch@lst.de>
commit a6933571f34a9aee843fff2aa4b96949c57d6274
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/a6933571.failed

Return the allocated dma_coherent_mem structure, set the
use_dma_pfn_offset and print the failure warning inside of
dma_init_coherent_memory instead of leaving that to the callers.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Tested-by: Dillon Min <dillon.minfei@gmail.com>
(cherry picked from commit a6933571f34a9aee843fff2aa4b96949c57d6274)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/dma/coherent.c
diff --cc kernel/dma/coherent.c
index a760fc17a542,ab397ebfd5ad..000000000000
--- a/kernel/dma/coherent.c
+++ b/kernel/dma/coherent.c
@@@ -32,41 -33,31 +32,37 @@@ static inline dma_addr_t dma_get_device
  					     struct dma_coherent_mem * mem)
  {
  	if (mem->use_dev_dma_pfn_offset)
 -		return phys_to_dma(dev, PFN_PHYS(mem->pfn_base));
 -	return mem->device_base;
 +		return (mem->pfn_base - dev->dma_pfn_offset) << PAGE_SHIFT;
 +	else
 +		return mem->device_base;
  }
  
- static int dma_init_coherent_memory(phys_addr_t phys_addr,
- 		dma_addr_t device_addr, size_t size,
- 		struct dma_coherent_mem **mem)
+ static struct dma_coherent_mem *dma_init_coherent_memory(phys_addr_t phys_addr,
+ 		dma_addr_t device_addr, size_t size, bool use_dma_pfn_offset)
  {
++<<<<<<< HEAD
 +	struct dma_coherent_mem *dma_mem = NULL;
 +	void __iomem *mem_base = NULL;
++=======
+ 	struct dma_coherent_mem *dma_mem;
++>>>>>>> a6933571f34a (dma-mapping: simplify dma_init_coherent_memory)
  	int pages = size >> PAGE_SHIFT;
  	int bitmap_size = BITS_TO_LONGS(pages) * sizeof(long);
- 	int ret;
+ 	void *mem_base;
  
- 	if (!size) {
- 		ret = -EINVAL;
- 		goto out;
- 	}
+ 	if (!size)
+ 		return ERR_PTR(-EINVAL);
  
  	mem_base = memremap(phys_addr, size, MEMREMAP_WC);
- 	if (!mem_base) {
- 		ret = -EINVAL;
- 		goto out;
- 	}
+ 	if (!mem_base)
+ 		return ERR_PTR(-EINVAL);
+ 
  	dma_mem = kzalloc(sizeof(struct dma_coherent_mem), GFP_KERNEL);
- 	if (!dma_mem) {
- 		ret = -ENOMEM;
- 		goto out;
- 	}
+ 	if (!dma_mem)
+ 		goto out_unmap_membase;
  	dma_mem->bitmap = kzalloc(bitmap_size, GFP_KERNEL);
- 	if (!dma_mem->bitmap) {
- 		ret = -ENOMEM;
- 		goto out;
- 	}
+ 	if (!dma_mem->bitmap)
+ 		goto out_free_dma_mem;
  
  	dma_mem->virt_base = mem_base;
  	dma_mem->device_base = device_addr;
* Unmerged path kernel/dma/coherent.c
