drm/i915/tc: Check for DP-alt, legacy sinks before taking PHY ownership

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Imre Deak <imre.deak@intel.com>
commit 30e114ef4b1620bd6768952279b53ea24e232efb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/30e114ef.failed

On ADL-P the PHY ready/complete flag is always set even in TBT-alt mode.
To avoid taking the PHY ownership and the following spurious "PHY sudden
disconnect" messages on this platform when connecting the PHY in TBT
mode, check if there is any DP-alt or legacy sink connected before
taking the ownership.

v2: (Jose)
- Fix debug message clarifying that a TBT sink can be connected.
- Add comments describing the PHY complete HW flag semantic differences
  between adl-p and other platforms.

	Cc: José Roberto de Souza <jose.souza@intel.com>
	Signed-off-by: Imre Deak <imre.deak@intel.com>
	Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210929132833.2253961-2-imre.deak@intel.com
(cherry picked from commit 30e114ef4b1620bd6768952279b53ea24e232efb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_tc.c
diff --cc drivers/gpu/drm/i915/display/intel_tc.c
index 2cefc13535a0,4e5ff823a3a3..000000000000
--- a/drivers/gpu/drm/i915/display/intel_tc.c
+++ b/drivers/gpu/drm/i915/display/intel_tc.c
@@@ -238,6 -236,48 +238,51 @@@ static u32 tc_port_live_status_mask(str
  	return mask;
  }
  
++<<<<<<< HEAD
++=======
+ static u32 adl_tc_port_live_status_mask(struct intel_digital_port *dig_port)
+ {
+ 	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
+ 	enum tc_port tc_port = intel_port_to_tc(i915, dig_port->base.port);
+ 	u32 isr_bit = i915->hotplug.pch_hpd[dig_port->base.hpd_pin];
+ 	struct intel_uncore *uncore = &i915->uncore;
+ 	u32 val, mask = 0;
+ 
+ 	val = intel_uncore_read(uncore, TCSS_DDI_STATUS(tc_port));
+ 	if (val & TCSS_DDI_STATUS_HPD_LIVE_STATUS_ALT)
+ 		mask |= BIT(TC_PORT_DP_ALT);
+ 	if (val & TCSS_DDI_STATUS_HPD_LIVE_STATUS_TBT)
+ 		mask |= BIT(TC_PORT_TBT_ALT);
+ 
+ 	if (intel_uncore_read(uncore, SDEISR) & isr_bit)
+ 		mask |= BIT(TC_PORT_LEGACY);
+ 
+ 	/* The sink can be connected only in a single mode. */
+ 	if (!drm_WARN_ON(&i915->drm, hweight32(mask) > 1))
+ 		tc_port_fixup_legacy_flag(dig_port, mask);
+ 
+ 	return mask;
+ }
+ 
+ static u32 tc_port_live_status_mask(struct intel_digital_port *dig_port)
+ {
+ 	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
+ 
+ 	if (IS_ALDERLAKE_P(i915))
+ 		return adl_tc_port_live_status_mask(dig_port);
+ 
+ 	return icl_tc_port_live_status_mask(dig_port);
+ }
+ 
+ /*
+  * Return the PHY status complete flag indicating that display can acquire the
+  * PHY ownership. The IOM firmware sets this flag when a DP-alt or legacy sink
+  * is connected and it's ready to switch the ownership to display. The flag
+  * will be left cleared when a TBT-alt sink is connected, where the PHY is
+  * owned by the TBT subsystem and so switching the ownership to display is not
+  * required.
+  */
++>>>>>>> 30e114ef4b16 (drm/i915/tc: Check for DP-alt, legacy sinks before taking PHY ownership)
  static bool icl_tc_phy_status_complete(struct intel_digital_port *dig_port)
  {
  	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
@@@ -256,8 -296,42 +301,47 @@@
  	return val & DP_PHY_MODE_STATUS_COMPLETED(dig_port->tc_phy_fia_idx);
  }
  
++<<<<<<< HEAD
 +static bool icl_tc_phy_set_safe_mode(struct intel_digital_port *dig_port,
 +				     bool enable)
++=======
+ /*
+  * Return the PHY status complete flag indicating that display can acquire the
+  * PHY ownership. The IOM firmware sets this flag when it's ready to switch
+  * the ownership to display, regardless of what sink is connected (TBT-alt,
+  * DP-alt, legacy or nothing). For TBT-alt sinks the PHY is owned by the TBT
+  * subsystem and so switching the ownership to display is not required.
+  */
+ static bool adl_tc_phy_status_complete(struct intel_digital_port *dig_port)
+ {
+ 	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
+ 	struct intel_uncore *uncore = &i915->uncore;
+ 	u32 val;
+ 
+ 	val = intel_uncore_read(uncore, TCSS_DDI_STATUS(dig_port->tc_phy_fia_idx));
+ 	if (val == 0xffffffff) {
+ 		drm_dbg_kms(&i915->drm,
+ 			    "Port %s: PHY in TCCOLD, assuming not complete\n",
+ 			    dig_port->tc_port_name);
+ 		return false;
+ 	}
+ 
+ 	return val & TCSS_DDI_STATUS_READY;
+ }
+ 
+ static bool tc_phy_status_complete(struct intel_digital_port *dig_port)
+ {
+ 	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
+ 
+ 	if (IS_ALDERLAKE_P(i915))
+ 		return adl_tc_phy_status_complete(dig_port);
+ 
+ 	return icl_tc_phy_status_complete(dig_port);
+ }
+ 
+ static bool icl_tc_phy_take_ownership(struct intel_digital_port *dig_port,
+ 				      bool take)
++>>>>>>> 30e114ef4b16 (drm/i915/tc: Check for DP-alt, legacy sinks before taking PHY ownership)
  {
  	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
  	struct intel_uncore *uncore = &i915->uncore;
@@@ -321,15 -439,23 +405,27 @@@ static void icl_tc_phy_connect(struct i
  			       int required_lanes)
  {
  	struct drm_i915_private *i915 = to_i915(dig_port->base.base.dev);
+ 	u32 live_status_mask;
  	int max_lanes;
  
 -	if (!tc_phy_status_complete(dig_port)) {
 +	if (!icl_tc_phy_status_complete(dig_port)) {
  		drm_dbg_kms(&i915->drm, "Port %s: PHY not ready\n",
  			    dig_port->tc_port_name);
  		goto out_set_tbt_alt_mode;
  	}
  
++<<<<<<< HEAD
 +	if (!icl_tc_phy_set_safe_mode(dig_port, false) &&
++=======
+ 	live_status_mask = tc_port_live_status_mask(dig_port);
+ 	if (!(live_status_mask & (BIT(TC_PORT_DP_ALT) | BIT(TC_PORT_LEGACY)))) {
+ 		drm_dbg_kms(&i915->drm, "Port %s: PHY ownership not required (live status %02x)\n",
+ 			    dig_port->tc_port_name, live_status_mask);
+ 		goto out_set_tbt_alt_mode;
+ 	}
+ 
+ 	if (!tc_phy_take_ownership(dig_port, true) &&
++>>>>>>> 30e114ef4b16 (drm/i915/tc: Check for DP-alt, legacy sinks before taking PHY ownership)
  	    !drm_WARN_ON(&i915->drm, dig_port->tc_legacy_port))
  		goto out_set_tbt_alt_mode;
  
* Unmerged path drivers/gpu/drm/i915/display/intel_tc.c
