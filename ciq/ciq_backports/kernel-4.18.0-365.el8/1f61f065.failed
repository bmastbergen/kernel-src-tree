drm/i915/display/psr: Do full fetch when handling multi-planar formats

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
commit 1f61f0655b95d5b89589390e6f83c4a61d9b1e8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/1f61f065.failed

We are still missing the PSR2 selective fetch handling of multi-planar
formats but until proper handle is added we can workaround it by
doing full frames fetch when state has such formats.

	Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Signed-off-by: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
	Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210930001409.254817-2-jose.souza@intel.com
	Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
(cherry picked from commit 1f61f0655b95d5b89589390e6f83c4a61d9b1e8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_psr.c
diff --cc drivers/gpu/drm/i915/display/intel_psr.c
index 2c6c4a4f9477,ba1739b5895a..000000000000
--- a/drivers/gpu/drm/i915/display/intel_psr.c
+++ b/drivers/gpu/drm/i915/display/intel_psr.c
@@@ -1309,6 -1532,81 +1309,84 @@@ static void clip_area_update(struct drm
  		overlap_damage_area->y2 = damage_area->y2;
  }
  
++<<<<<<< HEAD
++=======
+ static void intel_psr2_sel_fetch_pipe_alignment(const struct intel_crtc_state *crtc_state,
+ 						struct drm_rect *pipe_clip)
+ {
+ 	struct drm_i915_private *dev_priv = to_i915(crtc_state->uapi.crtc->dev);
+ 	const u16 y_alignment = crtc_state->su_y_granularity;
+ 
+ 	pipe_clip->y1 -= pipe_clip->y1 % y_alignment;
+ 	if (pipe_clip->y2 % y_alignment)
+ 		pipe_clip->y2 = ((pipe_clip->y2 / y_alignment) + 1) * y_alignment;
+ 
+ 	if (IS_ALDERLAKE_P(dev_priv) && crtc_state->dsc.compression_enable)
+ 		drm_warn(&dev_priv->drm, "Missing PSR2 sel fetch alignment with DSC\n");
+ }
+ 
+ /*
+  * FIXME: Not sure why but when moving the cursor fast it causes some artifacts
+  * of the cursor to be left in the cursor path, adding some pixels above the
+  * cursor to the damaged area fixes the issue.
+  */
+ static void cursor_area_workaround(const struct intel_plane_state *new_plane_state,
+ 				   struct drm_rect *damaged_area,
+ 				   struct drm_rect *pipe_clip)
+ {
+ 	const struct intel_plane *plane = to_intel_plane(new_plane_state->uapi.plane);
+ 	int height;
+ 
+ 	if (plane->id != PLANE_CURSOR)
+ 		return;
+ 
+ 	height = drm_rect_height(&new_plane_state->uapi.dst) / 2;
+ 	damaged_area->y1 -=  height;
+ 	damaged_area->y1 = max(damaged_area->y1, 0);
+ 
+ 	clip_area_update(pipe_clip, damaged_area);
+ }
+ 
+ /*
+  * TODO: Not clear how to handle planes with negative position,
+  * also planes are not updated if they have a negative X
+  * position so for now doing a full update in this cases
+  *
+  * TODO: We are missing multi-planar formats handling, until it is
+  * implemented it will send full frame updates.
+  *
+  * Plane scaling and rotation is not supported by selective fetch and both
+  * properties can change without a modeset, so need to be check at every
+  * atomic commmit.
+  */
+ static bool psr2_sel_fetch_plane_state_supported(const struct intel_plane_state *plane_state)
+ {
+ 	if (plane_state->uapi.dst.y1 < 0 ||
+ 	    plane_state->uapi.dst.x1 < 0 ||
+ 	    plane_state->scaler_id >= 0 ||
+ 	    plane_state->hw.fb->format->num_planes > 1 ||
+ 	    plane_state->uapi.rotation != DRM_MODE_ROTATE_0)
+ 		return false;
+ 
+ 	return true;
+ }
+ 
+ /*
+  * Check for pipe properties that is not supported by selective fetch.
+  *
+  * TODO: pipe scaling causes a modeset but skl_update_scaler_crtc() is executed
+  * after intel_psr_compute_config(), so for now keeping PSR2 selective fetch
+  * enabled and going to the full update path.
+  */
+ static bool psr2_sel_fetch_pipe_state_supported(const struct intel_crtc_state *crtc_state)
+ {
+ 	if (crtc_state->scaler_state.scaler_id >= 0)
+ 		return false;
+ 
+ 	return true;
+ }
+ 
++>>>>>>> 1f61f0655b95 (drm/i915/display/psr: Do full fetch when handling multi-planar formats)
  int intel_psr2_sel_fetch_update(struct intel_atomic_state *state,
  				struct intel_crtc *crtc)
  {
* Unmerged path drivers/gpu/drm/i915/display/intel_psr.c
