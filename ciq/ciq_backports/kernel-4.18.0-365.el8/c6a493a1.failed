ACPI: scan: Reorganize acpi_device_add()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit c6a493a1b603ed216ce69d1faac3f0ddc6a2f8eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/c6a493a1.failed

Move the invocation of acpi_attach_data() in acpi_device_add()
into a separate function.

No intentional functional impact.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Reviewed-by: Hans de Goede <hdegoede@redhat.com>
(cherry picked from commit c6a493a1b603ed216ce69d1faac3f0ddc6a2f8eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/scan.c
diff --cc drivers/acpi/scan.c
index 70d0d2830632,c62ce287fdb9..000000000000
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@@ -632,6 -618,38 +632,41 @@@ static struct acpi_device_bus_id *acpi_
  	return NULL;
  }
  
++<<<<<<< HEAD
++=======
+ static int acpi_device_set_name(struct acpi_device *device,
+ 				struct acpi_device_bus_id *acpi_device_bus_id)
+ {
+ 	struct ida *instance_ida = &acpi_device_bus_id->instance_ida;
+ 	int result;
+ 
+ 	result = ida_simple_get(instance_ida, 0, ACPI_MAX_DEVICE_INSTANCES, GFP_KERNEL);
+ 	if (result < 0)
+ 		return result;
+ 
+ 	device->pnp.instance_no = result;
+ 	dev_set_name(&device->dev, "%s:%02x", acpi_device_bus_id->bus_id, result);
+ 	return 0;
+ }
+ 
+ static int acpi_tie_acpi_dev(struct acpi_device *adev)
+ {
+ 	acpi_handle handle = adev->handle;
+ 	acpi_status status;
+ 
+ 	if (!handle)
+ 		return 0;
+ 
+ 	status = acpi_attach_data(handle, acpi_scan_drop_device, adev);
+ 	if (ACPI_FAILURE(status)) {
+ 		acpi_handle_err(handle, "Unable to attach device data\n");
+ 		return -ENODEV;
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> c6a493a1b603 (ACPI: scan: Reorganize acpi_device_add())
  int acpi_device_add(struct acpi_device *device,
  		    void (*release)(struct device *))
  {
* Unmerged path drivers/acpi/scan.c
