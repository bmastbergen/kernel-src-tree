drm/i915/adlp: Implement workaround 16013190616

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author José Roberto de Souza <jose.souza@intel.com>
commit 9556829ce4d0618ae4295af8e4b3dd7e38f43598
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/9556829c.failed

New workaround added to specification, requiring bit 15 of
GEN8_CHICKEN_DCPR_1 to be programed before power well 1 is enabled.

BSpec: 54369
	Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
	Reviewed-by: Imre Deak <imre.deak@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20211028230449.115832-1-jose.souza@intel.com
(cherry picked from commit 9556829ce4d0618ae4295af8e4b3dd7e38f43598)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_reg.h
diff --cc drivers/gpu/drm/i915/i915_reg.h
index bb852024d031,e4f1d8275ad0..000000000000
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@@ -8131,10 -8308,10 +8131,17 @@@ enum 
  #define  RESET_PCH_HANDSHAKE_ENABLE	(1 << 4)
  
  #define GEN8_CHICKEN_DCPR_1		_MMIO(0x46430)
++<<<<<<< HEAD
 +#define   SKL_SELECT_ALTERNATE_DC_EXIT	(1 << 30)
 +#define   CNL_DELAY_PMRSP		(1 << 22)
 +#define   MASK_WAKEMEM			(1 << 13)
 +#define   CNL_DDI_CLOCK_REG_ACCESS_ON	(1 << 7)
++=======
+ #define   SKL_SELECT_ALTERNATE_DC_EXIT	REG_BIT(30)
+ #define   ICL_DELAY_PMRSP		REG_BIT(22)
+ #define   DISABLE_FLR_SRC		REG_BIT(15)
+ #define   MASK_WAKEMEM			REG_BIT(13)
++>>>>>>> 9556829ce4d0 (drm/i915/adlp: Implement workaround 16013190616)
  
  #define GEN11_CHICKEN_DCPR_2			_MMIO(0x46434)
  #define   DCPR_MASK_MAXLATENCY_MEMUP_CLR	REG_BIT(27)
diff --git a/drivers/gpu/drm/i915/display/intel_display_power.c b/drivers/gpu/drm/i915/display/intel_display_power.c
index e2cb6e6ca250..3700a33764d8 100644
--- a/drivers/gpu/drm/i915/display/intel_display_power.c
+++ b/drivers/gpu/drm/i915/display/intel_display_power.c
@@ -410,6 +410,11 @@ static void hsw_power_well_enable(struct drm_i915_private *dev_priv,
 
 		pg = INTEL_GEN(dev_priv) >= 11 ? ICL_PW_CTL_IDX_TO_PG(pw_idx) :
 						 SKL_PW_CTL_IDX_TO_PG(pw_idx);
+
+		/* Wa_16013190616:adlp */
+		if (IS_ALDERLAKE_P(dev_priv) && pg == SKL_PG1)
+			intel_de_rmw(dev_priv, GEN8_CHICKEN_DCPR_1, 0, DISABLE_FLR_SRC);
+
 		/*
 		 * For PW1 we have to wait both for the PW0/PG0 fuse state
 		 * before enabling the power well and PW1/PG1's own fuse
* Unmerged path drivers/gpu/drm/i915/i915_reg.h
