media: fix incorrect kernel doc usages

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Hans Verkuil <hverkuil-cisco@xs4all.nl>
commit a4184b4f99019f5d91b3a1bb1905af986e002aa4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/a4184b4f.failed

This patch fixes the following trivial warnings w.r.t. kernel-doc usage:

drivers/media/common/videobuf2/frame_vector.c:38: warning: Excess function parameter 'gup_flags' description in 'get_vaddr_frames'
drivers/media/dvb-core/dvb_ca_en50221.c:193: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1014: warning: expecting prototype for Wake up the DVB CA thread(). Prototype was for
dvb_ca_en50221_thread_wakeup() instead
drivers/media/dvb-core/dvb_ca_en50221.c:1023: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1081: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1112: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1327: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1411: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1426: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1582: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1693: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1743: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1772: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1830: warning: wrong kernel-doc identifier on line:
drivers/media/dvb-core/dvb_ca_en50221.c:1922: warning: wrong kernel-doc identifier on line:
drivers/media/rc/img-ir/img-ir-hw.c:628: warning: expecting prototype for img_ir_decoder_compatable(). Prototype was for
img_ir_decoder_compatible() instead
drivers/media/v4l2-core/v4l2-jpeg.c:461: warning: expecting prototype for jpeg_parse_header(). Prototype was for v4l2_jpeg_parse_header()
instead
drivers/media/platform/vsp1/vsp1_dl.c:166: warning: expecting prototype for struct vsp1_cmd_pool. Prototype was for struct vsp1_dl_cmd_pool
instead
drivers/media/platform/mtk-vpu/mtk_vpu.c:28: warning: expecting prototype for is a tiny processor controlling video hardware(). Prototype
was for INIT_TIMEOUT_MS() instead
drivers/media/platform/mtk-vcodec/vdec/vdec_vp9_if.c:73: warning: expecting prototype for struct vp9_fb_info. Prototype was for struct
vp9_ref_buf instead
drivers/media/platform/mtk-vcodec/vdec/vdec_vp9_if.c:85: warning: expecting prototype for struct vp9_fb_info. Prototype was for struct
vp9_sf_ref_fb instead
drivers/media/tuners/mt2063.c:1404: warning: expecting prototype for fLO_FractionalTerm(). Prototype was for MT2063_fLO_FractionalTerm() instead
drivers/media/tuners/mt2063.c:1465: warning: expecting prototype for CalcLO2Mult(). Prototype was for MT2063_CalcLO2Mult() instead
drivers/media/usb/pwc/pwc-dec23.c:640: warning: wrong kernel-doc identifier on line:
drivers/media/platform/exynos4-is/media-dev.c:820: warning: expecting prototype for __fimc_md_create_fimc_links(). Prototype was for
__fimc_md_create_fimc_sink_links() instead
drivers/media/i2c/s5k6aa.c:426: warning: expecting prototype for s5k6aa_configure_pixel_clock(). Prototype was for
s5k6aa_configure_pixel_clocks() instead
drivers/media/i2c/imx274.c:700: warning: wrong kernel-doc identifier on line:
drivers/media/i2c/imx274.c:735: warning: wrong kernel-doc identifier on line:
drivers/media/i2c/imx274.c:983: warning: wrong kernel-doc identifier on line:

Most are missing or mistyped function names.

	Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
	Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
(cherry picked from commit a4184b4f99019f5d91b3a1bb1905af986e002aa4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/i2c/imx274.c
#	drivers/media/platform/vsp1/vsp1_dl.c
#	drivers/media/v4l2-core/v4l2-jpeg.c
diff --cc drivers/media/i2c/imx274.c
index b5c18562e917,a9305077be45..000000000000
--- a/drivers/media/i2c/imx274.c
+++ b/drivers/media/i2c/imx274.c
@@@ -697,10 -696,68 +697,75 @@@ static inline int imx274_write_reg(stru
  	return err;
  }
  
++<<<<<<< HEAD
 +static int imx274_write_table(struct stimx274 *priv, const struct reg_8 table[])
 +{
 +	return imx274_regmap_util_write_table_8(priv->regmap,
 +		table, IMX274_TABLE_WAIT_MS, IMX274_TABLE_END);
++=======
+ /**
+  * imx274_read_mbreg - Read a multibyte register.
+  *
+  * Uses a bulk read where possible.
+  *
+  * @priv: Pointer to device structure
+  * @addr: Address of the LSB register.  Other registers must be
+  *        consecutive, least-to-most significant.
+  * @val: Pointer to store the register value (cpu endianness)
+  * @nbytes: Number of bytes to read (range: [1..3]).
+  *          Other bytes are zet to 0.
+  *
+  * Return: 0 on success, errors otherwise
+  */
+ static int imx274_read_mbreg(struct stimx274 *priv, u16 addr, u32 *val,
+ 			     size_t nbytes)
+ {
+ 	__le32 val_le = 0;
+ 	int err;
+ 
+ 	err = regmap_bulk_read(priv->regmap, addr, &val_le, nbytes);
+ 	if (err) {
+ 		dev_err(&priv->client->dev,
+ 			"%s : i2c bulk read failed, %x (%zu bytes)\n",
+ 			__func__, addr, nbytes);
+ 	} else {
+ 		*val = le32_to_cpu(val_le);
+ 		dev_dbg(&priv->client->dev,
+ 			"%s : addr 0x%x, val=0x%x (%zu bytes)\n",
+ 			__func__, addr, *val, nbytes);
+ 	}
+ 
+ 	return err;
+ }
+ 
+ /**
+  * imx274_write_mbreg - Write a multibyte register.
+  *
+  * Uses a bulk write where possible.
+  *
+  * @priv: Pointer to device structure
+  * @addr: Address of the LSB register.  Other registers must be
+  *        consecutive, least-to-most significant.
+  * @val: Value to be written to the register (cpu endianness)
+  * @nbytes: Number of bytes to write (range: [1..3])
+  */
+ static int imx274_write_mbreg(struct stimx274 *priv, u16 addr, u32 val,
+ 			      size_t nbytes)
+ {
+ 	__le32 val_le = cpu_to_le32(val);
+ 	int err;
+ 
+ 	err = regmap_bulk_write(priv->regmap, addr, &val_le, nbytes);
+ 	if (err)
+ 		dev_err(&priv->client->dev,
+ 			"%s : i2c bulk write failed, %x = %x (%zu bytes)\n",
+ 			__func__, addr, val, nbytes);
+ 	else
+ 		dev_dbg(&priv->client->dev,
+ 			"%s : addr 0x%x, val=0x%x (%zu bytes)\n",
+ 			__func__, addr, val, nbytes);
+ 	return err;
++>>>>>>> a4184b4f9901 (media: fix incorrect kernel doc usages)
  }
  
  /*
@@@ -830,6 -946,118 +895,119 @@@ static int imx274_s_ctrl(struct v4l2_ct
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static int imx274_binning_goodness(struct stimx274 *imx274,
+ 				   int w, int ask_w,
+ 				   int h, int ask_h, u32 flags)
+ {
+ 	struct device *dev = &imx274->client->dev;
+ 	const int goodness = 100000;
+ 	int val = 0;
+ 
+ 	if (flags & V4L2_SEL_FLAG_GE) {
+ 		if (w < ask_w)
+ 			val -= goodness;
+ 		if (h < ask_h)
+ 			val -= goodness;
+ 	}
+ 
+ 	if (flags & V4L2_SEL_FLAG_LE) {
+ 		if (w > ask_w)
+ 			val -= goodness;
+ 		if (h > ask_h)
+ 			val -= goodness;
+ 	}
+ 
+ 	val -= abs(w - ask_w);
+ 	val -= abs(h - ask_h);
+ 
+ 	dev_dbg(dev, "%s: ask %dx%d, size %dx%d, goodness %d\n",
+ 		__func__, ask_w, ask_h, w, h, val);
+ 
+ 	return val;
+ }
+ 
+ /**
+  * __imx274_change_compose - Helper function to change binning and set both
+  *	compose and format.
+  *
+  * We have two entry points to change binning: set_fmt and
+  * set_selection(COMPOSE). Both have to compute the new output size
+  * and set it in both the compose rect and the frame format size. We
+  * also need to do the same things after setting cropping to restore
+  * 1:1 binning.
+  *
+  * This function contains the common code for these three cases, it
+  * has many arguments in order to accommodate the needs of all of
+  * them.
+  *
+  * Must be called with imx274->lock locked.
+  *
+  * @imx274: The device object
+  * @cfg:    The pad config we are editing for TRY requests
+  * @which:  V4L2_SUBDEV_FORMAT_ACTIVE or V4L2_SUBDEV_FORMAT_TRY from the caller
+  * @width:  Input-output parameter: set to the desired width before
+  *          the call, contains the chosen value after returning successfully
+  * @height: Input-output parameter for height (see @width)
+  * @flags:  Selection flags from struct v4l2_subdev_selection, or 0 if not
+  *          available (when called from set_fmt)
+  */
+ static int __imx274_change_compose(struct stimx274 *imx274,
+ 				   struct v4l2_subdev_pad_config *cfg,
+ 				   u32 which,
+ 				   u32 *width,
+ 				   u32 *height,
+ 				   u32 flags)
+ {
+ 	struct device *dev = &imx274->client->dev;
+ 	const struct v4l2_rect *cur_crop;
+ 	struct v4l2_mbus_framefmt *tgt_fmt;
+ 	unsigned int i;
+ 	const struct imx274_mode *best_mode = &imx274_modes[0];
+ 	int best_goodness = INT_MIN;
+ 
+ 	if (which == V4L2_SUBDEV_FORMAT_TRY) {
+ 		cur_crop = &cfg->try_crop;
+ 		tgt_fmt = &cfg->try_fmt;
+ 	} else {
+ 		cur_crop = &imx274->crop;
+ 		tgt_fmt = &imx274->format;
+ 	}
+ 
+ 	for (i = 0; i < ARRAY_SIZE(imx274_modes); i++) {
+ 		u8 wratio = imx274_modes[i].wbin_ratio;
+ 		u8 hratio = imx274_modes[i].hbin_ratio;
+ 
+ 		int goodness = imx274_binning_goodness(
+ 			imx274,
+ 			cur_crop->width / wratio, *width,
+ 			cur_crop->height / hratio, *height,
+ 			flags);
+ 
+ 		if (goodness >= best_goodness) {
+ 			best_goodness = goodness;
+ 			best_mode = &imx274_modes[i];
+ 		}
+ 	}
+ 
+ 	*width = cur_crop->width / best_mode->wbin_ratio;
+ 	*height = cur_crop->height / best_mode->hbin_ratio;
+ 
+ 	if (which == V4L2_SUBDEV_FORMAT_ACTIVE)
+ 		imx274->mode = best_mode;
+ 
+ 	dev_dbg(dev, "%s: selected %ux%u binning\n",
+ 		__func__, best_mode->wbin_ratio, best_mode->hbin_ratio);
+ 
+ 	tgt_fmt->width = *width;
+ 	tgt_fmt->height = *height;
+ 	tgt_fmt->field = V4L2_FIELD_NONE;
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> a4184b4f9901 (media: fix incorrect kernel doc usages)
  /**
   * imx274_get_fmt - Get the pad format
   * @sd: Pointer to V4L2 Sub device structure
diff --cc drivers/media/platform/vsp1/vsp1_dl.c
index d9b9cdd8fbe2,ad3fa1c9cc73..000000000000
--- a/drivers/media/platform/vsp1/vsp1_dl.c
+++ b/drivers/media/platform/vsp1/vsp1_dl.c
@@@ -93,6 -142,30 +93,33 @@@ struct vsp1_dl_body_pool 
  };
  
  /**
++<<<<<<< HEAD
++=======
+  * struct vsp1_dl_cmd_pool - Display List commands pool
+  * @dma: DMA address of the entries
+  * @size: size of the full DMA memory pool in bytes
+  * @mem: CPU memory pointer for the pool
+  * @cmds: Array of command structures for the pool
+  * @free: Free pool entries
+  * @lock: Protects the free list
+  * @vsp1: the VSP1 device
+  */
+ struct vsp1_dl_cmd_pool {
+ 	/* DMA allocation */
+ 	dma_addr_t dma;
+ 	size_t size;
+ 	void *mem;
+ 
+ 	struct vsp1_dl_ext_cmd *cmds;
+ 	struct list_head free;
+ 
+ 	spinlock_t lock;
+ 
+ 	struct vsp1_device *vsp1;
+ };
+ 
+ /**
++>>>>>>> a4184b4f9901 (media: fix incorrect kernel doc usages)
   * struct vsp1_dl_list - Display list
   * @list: entry in the display list manager lists
   * @dlm: the display list manager
* Unmerged path drivers/media/v4l2-core/v4l2-jpeg.c
diff --git a/drivers/media/common/videobuf2/frame_vector.c b/drivers/media/common/videobuf2/frame_vector.c
index d89e0cecf917..ce879f6f8f82 100644
--- a/drivers/media/common/videobuf2/frame_vector.c
+++ b/drivers/media/common/videobuf2/frame_vector.c
@@ -14,7 +14,6 @@
  * get_vaddr_frames() - map virtual addresses to pfns
  * @start:	starting user address
  * @nr_frames:	number of pages / pfns from start to map
- * @gup_flags:	flags modifying lookup behaviour
  * @vec:	structure which receives pages / pfns of the addresses mapped.
  *		It should have space for at least nr_frames entries.
  *
diff --git a/drivers/media/dvb-core/dvb_ca_en50221.c b/drivers/media/dvb-core/dvb_ca_en50221.c
index 1310526b0d49..507033691c47 100644
--- a/drivers/media/dvb-core/dvb_ca_en50221.c
+++ b/drivers/media/dvb-core/dvb_ca_en50221.c
@@ -201,7 +201,7 @@ static int dvb_ca_en50221_write_data(struct dvb_ca_private *ca, int slot,
 				     u8 *ebuf, int ecount);
 
 /**
- * Safely find needle in haystack.
+ * findstr - Safely find needle in haystack.
  *
  * @haystack: Buffer to look in.
  * @hlen: Number of bytes in haystack.
@@ -1017,7 +1017,7 @@ EXPORT_SYMBOL(dvb_ca_en50221_frda_irq);
 /* EN50221 thread functions */
 
 /**
- * Wake up the DVB CA thread
+ * dvb_ca_en50221_thread_wakeup - Wake up the DVB CA thread
  *
  * @ca: CA instance.
  */
@@ -1031,7 +1031,7 @@ static void dvb_ca_en50221_thread_wakeup(struct dvb_ca_private *ca)
 }
 
 /**
- * Update the delay used by the thread.
+ * dvb_ca_en50221_thread_update_delay - Update the delay used by the thread.
  *
  * @ca: CA instance.
  */
@@ -1089,7 +1089,7 @@ static void dvb_ca_en50221_thread_update_delay(struct dvb_ca_private *ca)
 }
 
 /**
- * Poll if the CAM is gone.
+ * dvb_ca_en50221_poll_cam_gone - Poll if the CAM is gone.
  *
  * @ca: CA instance.
  * @slot: Slot to process.
@@ -1120,7 +1120,8 @@ static int dvb_ca_en50221_poll_cam_gone(struct dvb_ca_private *ca, int slot)
 }
 
 /**
- * Thread state machine for one CA slot to perform the data transfer.
+ * dvb_ca_en50221_thread_state_machine - Thread state machine for one CA slot
+ *	to perform the data transfer.
  *
  * @ca: CA instance.
  * @slot: Slot to process.
@@ -1335,13 +1336,14 @@ static int dvb_ca_en50221_thread(void *data)
 /* EN50221 IO interface functions */
 
 /**
- * Real ioctl implementation.
- * NOTE: CA_SEND_MSG/CA_GET_MSG ioctls have userspace buffers passed to them.
+ * dvb_ca_en50221_io_do_ioctl - Real ioctl implementation.
  *
  * @file: File concerned.
  * @cmd: IOCTL command.
  * @parg: Associated argument.
  *
+ * NOTE: CA_SEND_MSG/CA_GET_MSG ioctls have userspace buffers passed to them.
+ *
  * return: 0 on success, <0 on error.
  */
 static int dvb_ca_en50221_io_do_ioctl(struct file *file,
@@ -1419,7 +1421,7 @@ static int dvb_ca_en50221_io_do_ioctl(struct file *file,
 }
 
 /**
- * Wrapper for ioctl implementation.
+ * dvb_ca_en50221_io_ioctl - Wrapper for ioctl implementation.
  *
  * @file: File concerned.
  * @cmd: IOCTL command.
@@ -1434,7 +1436,7 @@ static long dvb_ca_en50221_io_ioctl(struct file *file,
 }
 
 /**
- * Implementation of write() syscall.
+ * dvb_ca_en50221_io_write - Implementation of write() syscall.
  *
  * @file: File structure.
  * @buf: Source buffer.
@@ -1590,7 +1592,7 @@ static int dvb_ca_en50221_io_read_condition(struct dvb_ca_private *ca,
 }
 
 /**
- * Implementation of read() syscall.
+ * dvb_ca_en50221_io_read - Implementation of read() syscall.
  *
  * @file: File structure.
  * @buf: Destination buffer.
@@ -1701,7 +1703,7 @@ static ssize_t dvb_ca_en50221_io_read(struct file *file, char __user *buf,
 }
 
 /**
- * Implementation of file open syscall.
+ * dvb_ca_en50221_io_open - Implementation of file open syscall.
  *
  * @inode: Inode concerned.
  * @file: File concerned.
@@ -1751,7 +1753,7 @@ static int dvb_ca_en50221_io_open(struct inode *inode, struct file *file)
 }
 
 /**
- * Implementation of file close syscall.
+ * dvb_ca_en50221_io_release - Implementation of file close syscall.
  *
  * @inode: Inode concerned.
  * @file: File concerned.
@@ -1780,7 +1782,7 @@ static int dvb_ca_en50221_io_release(struct inode *inode, struct file *file)
 }
 
 /**
- * Implementation of poll() syscall.
+ * dvb_ca_en50221_io_poll - Implementation of poll() syscall.
  *
  * @file: File concerned.
  * @wait: poll wait table.
@@ -1839,7 +1841,7 @@ static const struct dvb_device dvbdev_ca = {
 /* Initialisation/shutdown functions */
 
 /**
- * Initialise a new DVB CA EN50221 interface device.
+ * dvb_ca_en50221_init - Initialise a new DVB CA EN50221 interface device.
  *
  * @dvb_adapter: DVB adapter to attach the new CA device to.
  * @pubca: The dvb_ca instance.
@@ -1931,7 +1933,7 @@ int dvb_ca_en50221_init(struct dvb_adapter *dvb_adapter,
 EXPORT_SYMBOL(dvb_ca_en50221_init);
 
 /**
- * Release a DVB CA EN50221 interface device.
+ * dvb_ca_en50221_release - Release a DVB CA EN50221 interface device.
  *
  * @pubca: The associated dvb_ca instance.
  */
* Unmerged path drivers/media/i2c/imx274.c
diff --git a/drivers/media/i2c/s5k6aa.c b/drivers/media/i2c/s5k6aa.c
index 52ca033f7069..9f6098d993ff 100644
--- a/drivers/media/i2c/s5k6aa.c
+++ b/drivers/media/i2c/s5k6aa.c
@@ -420,7 +420,7 @@ static int s5k6aa_set_ahb_address(struct i2c_client *client)
 }
 
 /**
- * s5k6aa_configure_pixel_clock - apply ISP main clock/PLL configuration
+ * s5k6aa_configure_pixel_clocks - apply ISP main clock/PLL configuration
  * @s5k6aa: pointer to &struct s5k6aa describing the device
  *
  * Configure the internal ISP PLL for the required output frequency.
diff --git a/drivers/media/platform/exynos4-is/media-dev.c b/drivers/media/platform/exynos4-is/media-dev.c
index 0be6e93dc9f5..8637b243ad31 100644
--- a/drivers/media/platform/exynos4-is/media-dev.c
+++ b/drivers/media/platform/exynos4-is/media-dev.c
@@ -766,7 +766,7 @@ static void fimc_md_unregister_entities(struct fimc_md *fmd)
 }
 
 /**
- * __fimc_md_create_fimc_links - create links to all FIMC entities
+ * __fimc_md_create_fimc_sink_links - create links to all FIMC entities
  * @fmd: fimc media device
  * @source: the source entity to create links to all fimc entities from
  * @sensor: sensor subdev linked to FIMC[fimc_id] entity, may be null
diff --git a/drivers/media/platform/mtk-vcodec/vdec/vdec_vp9_if.c b/drivers/media/platform/mtk-vcodec/vdec/vdec_vp9_if.c
index bc8349bc2e80..1e05d1e621d0 100644
--- a/drivers/media/platform/mtk-vcodec/vdec/vdec_vp9_if.c
+++ b/drivers/media/platform/mtk-vcodec/vdec/vdec_vp9_if.c
@@ -69,7 +69,7 @@ struct vp9_ref_cnt_buf {
 };
 
 /**
- * struct vp9_fb_info - contains current frame's reference buffer information
+ * struct vp9_ref_buf - contains current frame's reference buffer information
  * @buf : reference buffer
  * @idx : reference buffer index to frm_bufs
  * @reserved : reserved field used by vpu
@@ -81,7 +81,7 @@ struct vp9_ref_buf {
 };
 
 /**
- * struct vp9_fb_info - contains frame buffer info
+ * struct vp9_sf_ref_fb - contains frame buffer info
  * @fb : super frame reference frame buffer
  * @used : this reference frame info entry is used
  * @padding : for 64 bytes size align
diff --git a/drivers/media/platform/mtk-vpu/mtk_vpu.c b/drivers/media/platform/mtk-vpu/mtk_vpu.c
index 88ab4922d881..5148f1043c55 100644
--- a/drivers/media/platform/mtk-vpu/mtk_vpu.c
+++ b/drivers/media/platform/mtk-vpu/mtk_vpu.c
@@ -27,11 +27,11 @@
 
 #include "mtk_vpu.h"
 
-/**
+/*
  * VPU (video processor unit) is a tiny processor controlling video hardware
  * related to video codec, scaling and color format converting.
  * VPU interfaces with other blocks by share memory and interrupt.
- **/
+ */
 
 #define INIT_TIMEOUT_MS		2000U
 #define IPI_TIMEOUT_MS		2000U
* Unmerged path drivers/media/platform/vsp1/vsp1_dl.c
diff --git a/drivers/media/rc/img-ir/img-ir-hw.c b/drivers/media/rc/img-ir/img-ir-hw.c
index ec4ded84cd17..dda22a70e857 100644
--- a/drivers/media/rc/img-ir/img-ir-hw.c
+++ b/drivers/media/rc/img-ir/img-ir-hw.c
@@ -621,7 +621,7 @@ static void img_ir_set_decoder(struct img_ir_priv *priv,
 }
 
 /**
- * img_ir_decoder_compatable() - Find whether a decoder will work with a device.
+ * img_ir_decoder_compatible() - Find whether a decoder will work with a device.
  * @priv:	IR private data.
  * @dec:	Decoder to check.
  *
diff --git a/drivers/media/tuners/mt2063.c b/drivers/media/tuners/mt2063.c
index e3371be254dd..9be3698d244a 100644
--- a/drivers/media/tuners/mt2063.c
+++ b/drivers/media/tuners/mt2063.c
@@ -1383,7 +1383,7 @@ static u32 MT2063_Round_fLO(u32 f_LO, u32 f_LO_Step, u32 f_ref)
 }
 
 /**
- * fLO_FractionalTerm() - Calculates the portion contributed by FracN / denom.
+ * MT2063_fLO_FractionalTerm - Calculates the portion contributed by FracN / denom.
  *                        This function preserves maximum precision without
  *                        risk of overflow.  It accurately calculates
  *                        f_ref * num / denom to within 1 HZ with fixed math.
@@ -1411,7 +1411,7 @@ static u32 MT2063_fLO_FractionalTerm(u32 f_ref, u32 num, u32 denom)
 }
 
 /*
- * CalcLO1Mult()- Calculates Integer divider value and the numerator
+ * MT2063_CalcLO1Mult - Calculates Integer divider value and the numerator
  *                value for a FracN PLL.
  *
  *                This function assumes that the f_LO and f_Ref are
@@ -1444,7 +1444,7 @@ static u32 MT2063_CalcLO1Mult(u32 *Div,
 }
 
 /**
- * CalcLO2Mult() - Calculates Integer divider value and the numerator
+ * MT2063_CalcLO2Mult - Calculates Integer divider value and the numerator
  *                 value for a FracN PLL.
  *
  *                  This function assumes that the f_LO and f_Ref are
diff --git a/drivers/media/usb/pwc/pwc-dec23.c b/drivers/media/usb/pwc/pwc-dec23.c
index 4e26ada87f7b..a3aa8c7174b9 100644
--- a/drivers/media/usb/pwc/pwc-dec23.c
+++ b/drivers/media/usb/pwc/pwc-dec23.c
@@ -637,7 +637,7 @@ static void DecompressBand23(struct pwc_dec23_private *pdec,
 }
 
 /**
- * Uncompress a pwc23 buffer.
+ * pwc_dec23_decompress - Uncompress a pwc23 buffer.
  * @pdev: pointer to pwc device's internal struct
  * @src: raw data
  * @dst: image output
* Unmerged path drivers/media/v4l2-core/v4l2-jpeg.c
