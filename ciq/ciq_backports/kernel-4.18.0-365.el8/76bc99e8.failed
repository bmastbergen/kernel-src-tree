kasan: fix HW_TAGS boot parameters

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Andrey Konovalov <andreyknvl@google.com>
commit 76bc99e81a7cb78a78e058107e4b5b1d8ed3c874
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/76bc99e8.failed

The initially proposed KASAN command line parameters are redundant.

This change drops the complex "kasan.mode=off/prod/full" parameter and
adds a simpler kill switch "kasan=off/on" instead.  The new parameter
together with the already existing ones provides a cleaner way to
express the same set of features.

The full set of parameters with this change:

  kasan=off/on             - whether KASAN is enabled
  kasan.fault=report/panic - whether to only print a report or also panic
  kasan.stacktrace=off/on  - whether to collect alloc/free stack traces

Default values:

  kasan=on
  kasan.fault=report
  kasan.stacktrace=on  (if CONFIG_DEBUG_KERNEL=y)
  kasan.stacktrace=off (otherwise)

Link: https://linux-review.googlesource.com/id/Ib3694ed90b1e8ccac6cf77dfd301847af4aba7b8
Link: https://lkml.kernel.org/r/4e9c4a4bdcadc168317deb2419144582a9be6e61.1610736745.git.andreyknvl@google.com
	Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
	Reviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Reviewed-by: Marco Elver <elver@google.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: Alexander Potapenko <glider@google.com>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Will Deacon <will.deacon@arm.com>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Peter Collingbourne <pcc@google.com>
	Cc: Evgenii Stepanov <eugenis@google.com>
	Cc: Branislav Rankov <Branislav.Rankov@arm.com>
	Cc: Kevin Brodsky <kevin.brodsky@arm.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 76bc99e81a7cb78a78e058107e4b5b1d8ed3c874)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/dev-tools/kasan.rst
#	mm/kasan/hw_tags.c
diff --cc Documentation/dev-tools/kasan.rst
index 19b982c535c7,1651d961f06a..000000000000
--- a/Documentation/dev-tools/kasan.rst
+++ b/Documentation/dev-tools/kasan.rst
@@@ -151,7 -150,41 +151,45 @@@ In the report above the arrows point t
  the accessed address is partially accessible.
  
  For tag-based KASAN this last report section shows the memory tags around the
++<<<<<<< HEAD
 +accessed address (see Implementation details section).
++=======
+ accessed address (see `Implementation details`_ section).
+ 
+ Boot parameters
+ ~~~~~~~~~~~~~~~
+ 
+ Hardware tag-based KASAN mode (see the section about different mode below) is
+ intended for use in production as a security mitigation. Therefore it supports
+ boot parameters that allow to disable KASAN competely or otherwise control
+ particular KASAN features.
+ 
+ - ``kasan=off`` or ``=on`` controls whether KASAN is enabled (default: ``on``).
+ 
+ - ``kasan.stacktrace=off`` or ``=on`` disables or enables alloc and free stack
+   traces collection (default: ``on`` for ``CONFIG_DEBUG_KERNEL=y``, otherwise
+   ``off``).
+ 
+ - ``kasan.fault=report`` or ``=panic`` controls whether to only print a KASAN
+   report or also panic the kernel (default: ``report``).
+ 
+ For developers
+ ~~~~~~~~~~~~~~
+ 
+ Software KASAN modes use compiler instrumentation to insert validity checks.
+ Such instrumentation might be incompatible with some part of the kernel, and
+ therefore needs to be disabled. To disable instrumentation for specific files
+ or directories, add a line similar to the following to the respective kernel
+ Makefile:
+ 
+ - For a single file (e.g. main.o)::
+ 
+     KASAN_SANITIZE_main.o := n
+ 
+ - For all files in one directory::
+ 
+     KASAN_SANITIZE := n
++>>>>>>> 76bc99e81a7c (kasan: fix HW_TAGS boot parameters)
  
  
  Implementation details
* Unmerged path mm/kasan/hw_tags.c
* Unmerged path Documentation/dev-tools/kasan.rst
* Unmerged path mm/kasan/hw_tags.c
