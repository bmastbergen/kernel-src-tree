drm/i915/display/adl_p: Implement Wa_16011303918

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author José Roberto de Souza <jose.souza@intel.com>
commit c4449742a7c2c4f565cef5604738cfcb29769db9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/c4449742.failed

PSR2 is not compatible with DC3CO or VRR in this stepping, so not
enabling PSR2 if VRR will be enabled or not enabling DC3CO if PSR2 is
possible.

BSpec: 54369
	Cc: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
	Cc: Matt Atwood <matthew.s.atwood@intel.com>
	Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
	Reviewed-by: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20210616203158.118111-5-jose.souza@intel.com
(cherry picked from commit c4449742a7c2c4f565cef5604738cfcb29769db9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_psr.c
diff --cc drivers/gpu/drm/i915/display/intel_psr.c
index 2c6c4a4f9477,9643624fe160..000000000000
--- a/drivers/gpu/drm/i915/display/intel_psr.c
+++ b/drivers/gpu/drm/i915/display/intel_psr.c
@@@ -661,14 -727,16 +661,18 @@@ tgl_dc3co_exitline_compute_config(struc
  	if (crtc_state->enable_psr2_sel_fetch)
  		return;
  
 -	if (!(dev_priv->dmc.allowed_dc_mask & DC_STATE_EN_DC3CO))
 +	if (!(dev_priv->csr.allowed_dc_mask & DC_STATE_EN_DC3CO))
  		return;
  
 -	if (!dc3co_is_pipe_port_compatible(intel_dp, crtc_state))
 +	/* B.Specs:49196 DC3CO only works with pipeA and DDIA.*/
 +	if (to_intel_crtc(crtc_state->uapi.crtc)->pipe != PIPE_A ||
 +	    dig_port->base.port != PORT_A)
  		return;
  
+ 	/* Wa_16011303918:adlp */
+ 	if (IS_ADLP_DISPLAY_STEP(dev_priv, STEP_A0, STEP_A0))
+ 		return;
+ 
  	/*
  	 * DC3CO Exit time 200us B.Spec 49196
  	 * PSR2 transcoder Early Exit scanlines = ROUNDUP(200 / line time) + 1
@@@ -812,6 -959,20 +816,23 @@@ static bool intel_psr2_config_valid(str
  		return false;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (!_compute_psr2_sdp_prior_scanline_indication(intel_dp, crtc_state)) {
+ 		drm_dbg_kms(&dev_priv->drm,
+ 			    "PSR2 not enabled, PSR2 SDP indication do not fit in hblank\n");
+ 		return false;
+ 	}
+ 
+ 	/* Wa_16011303918:adlp */
+ 	if (crtc_state->vrr.enable &&
+ 	    IS_ADLP_DISPLAY_STEP(dev_priv, STEP_A0, STEP_A0)) {
+ 		drm_dbg_kms(&dev_priv->drm,
+ 			    "PSR2 not enabled, not compatible with HW stepping + VRR\n");
+ 		return false;
+ 	}
+ 
++>>>>>>> c4449742a7c2 (drm/i915/display/adl_p: Implement Wa_16011303918)
  	tgl_dc3co_exitline_compute_config(intel_dp, crtc_state);
  	return true;
  }
* Unmerged path drivers/gpu/drm/i915/display/intel_psr.c
