dma-mapping: split <linux/dma-mapping.h>

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 0a0f0d8be76dcd4390ff538e7060fda34db79717
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/0a0f0d8b.failed

Split out all the bits that are purely for dma_map_ops implementations
and related code into a new <linux/dma-map-ops.h> header so that they
don't get pulled into all the drivers.  That also means the architecture
specific <asm/dma-mapping.h> is not pulled in by <linux/dma-mapping.h>
any more, which leads to a missing includes that were pulled in by the
x86 or arm versions in a few not overly portable drivers.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 0a0f0d8be76dcd4390ff538e7060fda34db79717)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm/common/dmabounce.c
#	arch/arm/mm/dma-mapping.c
#	arch/arm64/mm/dma-mapping.c
#	arch/ia64/kernel/dma-mapping.c
#	arch/mips/jazz/jazzdma.c
#	arch/mips/mm/dma-noncoherent.c
#	arch/sh/boards/mach-ap325rxa/setup.c
#	arch/sh/boards/mach-kfr2r09/setup.c
#	arch/sh/boards/mach-migor/setup.c
#	arch/sh/boards/mach-se/7724/setup.c
#	arch/sparc/mm/io-unit.c
#	arch/sparc/mm/iommu.c
#	arch/x86/kernel/setup.c
#	drivers/acpi/arm64/iort.c
#	drivers/gpu/drm/exynos/exynos_drm_dma.c
#	drivers/of/device.c
#	drivers/remoteproc/remoteproc_virtio.c
#	drivers/vdpa/vdpa_sim/vdpa_sim.c
#	include/linux/dma-mapping.h
#	kernel/dma/coherent.c
diff --cc arch/arm/common/dmabounce.c
index 9a92de63426f,7996c04393d5..000000000000
--- a/arch/arm/common/dmabounce.c
+++ b/arch/arm/common/dmabounce.c
@@@ -27,7 -24,8 +27,12 @@@
  #include <linux/slab.h>
  #include <linux/page-flags.h>
  #include <linux/device.h>
++<<<<<<< HEAD
 +#include <linux/dma-mapping.h>
++=======
+ #include <linux/dma-direct.h>
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/dmapool.h>
  #include <linux/list.h>
  #include <linux/scatterlist.h>
diff --cc arch/arm/mm/dma-mapping.c
index e5a585d6d58c,8bf0bc6bc311..000000000000
--- a/arch/arm/mm/dma-mapping.c
+++ b/arch/arm/mm/dma-mapping.c
@@@ -18,7 -15,8 +18,12 @@@
  #include <linux/init.h>
  #include <linux/device.h>
  #include <linux/dma-direct.h>
++<<<<<<< HEAD
 +#include <linux/dma-mapping.h>
++=======
+ #include <linux/dma-map-ops.h>
+ #include <linux/dma-noncoherent.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/dma-contiguous.h>
  #include <linux/highmem.h>
  #include <linux/memblock.h>
diff --cc arch/arm64/mm/dma-mapping.c
index 8f556361d408,3afd3bd659d8..000000000000
--- a/arch/arm64/mm/dma-mapping.c
+++ b/arch/arm64/mm/dma-mapping.c
@@@ -18,19 -5,12 +18,23 @@@
   */
  
  #include <linux/gfp.h>
 +#include <linux/acpi.h>
 +#include <linux/memblock.h>
  #include <linux/cache.h>
++<<<<<<< HEAD
 +#include <linux/export.h>
 +#include <linux/slab.h>
 +#include <linux/genalloc.h>
 +#include <linux/dma-direct.h>
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/dma-noncoherent.h>
 +#include <linux/dma-contiguous.h>
  #include <linux/dma-iommu.h>
 -#include <xen/xen.h>
 -#include <xen/swiotlb-xen.h>
 +#include <linux/vmalloc.h>
 +#include <linux/swiotlb.h>
 +#include <linux/pci.h>
  
  #include <asm/cacheflush.h>
  
diff --cc arch/ia64/kernel/dma-mapping.c
index 7a471d8d67d4,cd0c166bfbc2..000000000000
--- a/arch/ia64/kernel/dma-mapping.c
+++ b/arch/ia64/kernel/dma-mapping.c
@@@ -1,6 -1,5 +1,10 @@@
  // SPDX-License-Identifier: GPL-2.0
++<<<<<<< HEAD
 +#include <linux/dma-mapping.h>
 +#include <linux/swiotlb.h>
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/export.h>
  
  /* Set this to 1 if there is a HW IOMMU in the system */
diff --cc arch/mips/jazz/jazzdma.c
index e792328651d1,b8fb42e56da0..000000000000
--- a/arch/mips/jazz/jazzdma.c
+++ b/arch/mips/jazz/jazzdma.c
@@@ -16,6 -16,8 +16,11 @@@
  #include <linux/memblock.h>
  #include <linux/spinlock.h>
  #include <linux/gfp.h>
++<<<<<<< HEAD
++=======
+ #include <linux/dma-map-ops.h>
+ #include <linux/dma-noncoherent.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <asm/mipsregs.h>
  #include <asm/jazz.h>
  #include <asm/io.h>
diff --cc arch/sh/boards/mach-ap325rxa/setup.c
index de8393cb7313,bac8a058ebd7..000000000000
--- a/arch/sh/boards/mach-ap325rxa/setup.c
+++ b/arch/sh/boards/mach-ap325rxa/setup.c
@@@ -4,16 -5,25 +4,32 @@@
   *
   * Copyright (C) 2008 Renesas Solutions Corp.
   * Author : Yusuke Goda <goda.yuske@renesas.com>
 + *
 + * This file is subject to the terms and conditions of the GNU General Public
 + * License.  See the file "COPYING" in the main directory of this archive
 + * for more details.
   */
  
++<<<<<<< HEAD
++=======
+ #include <asm/clock.h>
+ #include <asm/io.h>
+ #include <asm/suspend.h>
+ 
+ #include <cpu/sh7723.h>
+ 
+ #include <linux/dma-map-ops.h>
+ #include <linux/clkdev.h>
+ #include <linux/delay.h>
+ #include <linux/device.h>
+ #include <linux/gpio.h>
+ #include <linux/gpio/machine.h>
+ #include <linux/i2c.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/init.h>
 +#include <linux/device.h>
  #include <linux/interrupt.h>
 -#include <linux/memblock.h>
 -#include <linux/mfd/tmio.h>
 +#include <linux/platform_device.h>
  #include <linux/mmc/host.h>
  #include <linux/mtd/physmap.h>
  #include <linux/mtd/sh_flctl.h>
diff --cc arch/sh/boards/mach-kfr2r09/setup.c
index 6af7777332fc,eeb5ce341efd..000000000000
--- a/arch/sh/boards/mach-kfr2r09/setup.c
+++ b/arch/sh/boards/mach-kfr2r09/setup.c
@@@ -2,40 -3,50 +2,64 @@@
   * KFR2R09 board support code
   *
   * Copyright (C) 2009 Magnus Damm
 + *
 + * This file is subject to the terms and conditions of the GNU General Public
 + * License.  See the file "COPYING" in the main directory of this archive
 + * for more details.
   */
++<<<<<<< HEAD
++=======
+ 
+ #include <asm/clock.h>
+ #include <asm/io.h>
+ #include <asm/machvec.h>
+ #include <asm/suspend.h>
+ 
+ #include <cpu/sh7724.h>
+ 
+ #include <linux/clkdev.h>
+ #include <linux/delay.h>
+ #include <linux/gpio.h>
+ #include <linux/gpio/machine.h>
+ #include <linux/i2c.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/init.h>
 -#include <linux/input.h>
 -#include <linux/input/sh_keysc.h>
 +#include <linux/platform_device.h>
  #include <linux/interrupt.h>
 -#include <linux/memblock.h>
 -#include <linux/mfd/tmio.h>
  #include <linux/mmc/host.h>
 +#include <linux/mfd/tmio.h>
  #include <linux/mtd/physmap.h>
 +#include <linux/mtd/onenand.h>
 +#include <linux/delay.h>
 +#include <linux/clk.h>
 +#include <linux/gpio.h>
 +#include <linux/input.h>
 +#include <linux/input/sh_keysc.h>
 +#include <linux/i2c.h>
  #include <linux/platform_data/lv5207lp.h>
 -#include <linux/platform_device.h>
  #include <linux/regulator/fixed.h>
  #include <linux/regulator/machine.h>
 -#include <linux/sh_intc.h>
  #include <linux/usb/r8a66597.h>
  #include <linux/videodev2.h>
++<<<<<<< HEAD
 +#include <linux/sh_intc.h>
++=======
+ #include <linux/dma-map-ops.h>
+ 
+ #include <mach/kfr2r09.h>
+ 
+ #include <media/drv-intf/renesas-ceu.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <media/i2c/rj54n1cb0c.h>
 -
 +#include <media/soc_camera.h>
 +#include <media/drv-intf/sh_mobile_ceu.h>
  #include <video/sh_mobile_lcdc.h>
 -
 -#define CEU_BUFFER_MEMORY_SIZE		(4 << 20)
 -static phys_addr_t ceu_dma_membase;
 -
 -/* set VIO_CKO clock to 25MHz */
 -#define CEU_MCLK_FREQ			25000000
 -#define DRVCRB				0xA405018C
 +#include <asm/suspend.h>
 +#include <asm/clock.h>
 +#include <asm/machvec.h>
 +#include <asm/io.h>
 +#include <cpu/sh7724.h>
 +#include <mach/kfr2r09.h>
  
  static struct mtd_partition kfr2r09_nor_flash_partitions[] =
  {
diff --cc arch/sh/boards/mach-migor/setup.c
index 3d7d0046cf49,6703a2122c0d..000000000000
--- a/arch/sh/boards/mach-migor/setup.c
+++ b/arch/sh/boards/mach-migor/setup.c
@@@ -5,6 -5,7 +5,10 @@@
   * Copyright (C) 2008 Magnus Damm
   */
  #include <linux/clkdev.h>
++<<<<<<< HEAD
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/init.h>
  #include <linux/platform_device.h>
  #include <linux/interrupt.h>
diff --cc arch/sh/boards/mach-se/7724/setup.c
index 255952555656,8d6541ba0186..000000000000
--- a/arch/sh/boards/mach-se/7724/setup.c
+++ b/arch/sh/boards/mach-se/7724/setup.c
@@@ -4,40 -5,46 +4,48 @@@
   * Copyright (C) 2009 Renesas Solutions Corp.
   *
   * Kuninori Morimoto <morimoto.kuninori@renesas.com>
 + *
 + * This file is subject to the terms and conditions of the GNU General Public
 + * License.  See the file "COPYING" in the main directory of this archive
 + * for more details.
   */
 -#include <asm/clock.h>
 -#include <asm/heartbeat.h>
 -#include <asm/io.h>
 -#include <asm/suspend.h>
 -
 -#include <cpu/sh7724.h>
  
 -#include <linux/delay.h>
 -#include <linux/device.h>
 -#include <linux/gpio.h>
  #include <linux/init.h>
 -#include <linux/input.h>
 -#include <linux/input/sh_keysc.h>
 +#include <linux/device.h>
  #include <linux/interrupt.h>
 -#include <linux/memblock.h>
 -#include <linux/mfd/tmio.h>
 +#include <linux/platform_device.h>
  #include <linux/mmc/host.h>
 +#include <linux/mfd/tmio.h>
  #include <linux/mtd/physmap.h>
 -#include <linux/platform_device.h>
 +#include <linux/delay.h>
  #include <linux/regulator/fixed.h>
  #include <linux/regulator/machine.h>
 -#include <linux/sh_eth.h>
 -#include <linux/sh_intc.h>
  #include <linux/smc91x.h>
 +#include <linux/gpio.h>
 +#include <linux/input.h>
 +#include <linux/input/sh_keysc.h>
  #include <linux/usb/r8a66597.h>
 +#include <linux/sh_eth.h>
 +#include <linux/sh_intc.h>
  #include <linux/videodev2.h>
++<<<<<<< HEAD
 +#include <video/sh_mobile_lcdc.h>
 +#include <media/drv-intf/sh_mobile_ceu.h>
++=======
+ #include <linux/dma-map-ops.h>
+ 
+ #include <mach-se/mach/se7724.h>
+ #include <media/drv-intf/renesas-ceu.h>
+ 
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <sound/sh_fsi.h>
  #include <sound/simple_card.h>
 -
 -#include <video/sh_mobile_lcdc.h>
 -
 -#define CEU_BUFFER_MEMORY_SIZE		(4 << 20)
 -static phys_addr_t ceu0_dma_membase;
 -static phys_addr_t ceu1_dma_membase;
 +#include <asm/io.h>
 +#include <asm/heartbeat.h>
 +#include <asm/clock.h>
 +#include <asm/suspend.h>
 +#include <cpu/sh7724.h>
 +#include <mach-se/mach/se7724.h>
  
  /*
   * SWx    1234 5678
diff --cc arch/sparc/mm/io-unit.c
index c8cb27d3ea75,bf3e6d2fe5d9..000000000000
--- a/arch/sparc/mm/io-unit.c
+++ b/arch/sparc/mm/io-unit.c
@@@ -10,9 -10,8 +10,13 @@@
  #include <linux/slab.h>
  #include <linux/spinlock.h>
  #include <linux/mm.h>
 +#include <linux/highmem.h>	/* pte_offset_map => kmap_atomic */
  #include <linux/bitops.h>
++<<<<<<< HEAD
 +#include <linux/scatterlist.h>
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/of.h>
  #include <linux/of_device.h>
  
diff --cc arch/sparc/mm/iommu.c
index 2c5f8a648f8c,0c0342e5b10d..000000000000
--- a/arch/sparc/mm/iommu.c
+++ b/arch/sparc/mm/iommu.c
@@@ -12,8 -12,7 +12,12 @@@
  #include <linux/init.h>
  #include <linux/mm.h>
  #include <linux/slab.h>
++<<<<<<< HEAD
 +#include <linux/highmem.h>	/* pte_offset_map => kmap_atomic */
 +#include <linux/scatterlist.h>
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/of.h>
  #include <linux/of_device.h>
  
diff --cc arch/x86/kernel/setup.c
index 93b30760cb47,9286fa9d575e..000000000000
--- a/arch/x86/kernel/setup.c
+++ b/arch/x86/kernel/setup.c
@@@ -1,132 -1,59 +1,177 @@@
  /*
   *  Copyright (C) 1995  Linus Torvalds
   *
 - * This file contains the setup_arch() code, which handles the architecture-dependent
 - * parts of early kernel initialization.
 + *  Support of BIGMEM added by Gerhard Wichert, Siemens AG, July 1999
 + *
 + *  Memory region support
 + *	David Parsons <orc@pell.chi.il.us>, July-August 1999
 + *
 + *  Added E820 sanitization routine (removes overlapping memory regions);
 + *  Brian Moyle <bmoyle@mvista.com>, February 2001
 + *
 + * Moved CPU detection code to cpu/${cpu}.c
 + *    Patrick Mochel <mochel@osdl.org>, March 2002
 + *
 + *  Provisions for empty E820 memory regions (reported by certain BIOSes).
 + *  Alex Achenbach <xela@slit.de>, December 2002.
 + *
   */
++<<<<<<< HEAD
++=======
+ #include <linux/console.h>
+ #include <linux/crash_dump.h>
+ #include <linux/dma-contiguous.h>
+ #include <linux/dmi.h>
+ #include <linux/efi.h>
+ #include <linux/init_ohci1394_dma.h>
+ #include <linux/initrd.h>
+ #include <linux/iscsi_ibft.h>
+ #include <linux/memblock.h>
+ #include <linux/pci.h>
+ #include <linux/root_dev.h>
+ #include <linux/sfi.h>
+ #include <linux/hugetlb.h>
+ #include <linux/tboot.h>
+ #include <linux/usb/xhci-dbgp.h>
+ #include <linux/swiotlb.h>
+ 
+ #include <uapi/linux/mount.h>
+ 
+ #include <xen/xen.h>
+ 
+ #include <asm/apic.h>
+ #include <asm/numa.h>
+ #include <asm/bios_ebda.h>
+ #include <asm/bugs.h>
+ #include <asm/cpu.h>
+ #include <asm/efi.h>
+ #include <asm/gart.h>
+ #include <asm/hypervisor.h>
+ #include <asm/io_apic.h>
+ #include <asm/kasan.h>
+ #include <asm/kaslr.h>
+ #include <asm/mce.h>
+ #include <asm/mtrr.h>
+ #include <asm/realmode.h>
+ #include <asm/olpc_ofw.h>
+ #include <asm/pci-direct.h>
+ #include <asm/prom.h>
+ #include <asm/proto.h>
+ #include <asm/unwind.h>
+ #include <asm/vsyscall.h>
+ #include <linux/vmalloc.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
 +
 +/*
 + * This file handles the architecture-dependent parts of initialization
 + */
 +
 +#include <linux/sched.h>
 +#include <linux/mm.h>
 +#include <linux/mmzone.h>
 +#include <linux/screen_info.h>
 +#include <linux/ioport.h>
 +#include <linux/acpi.h>
 +#include <linux/sfi.h>
 +#include <linux/apm_bios.h>
 +#include <linux/initrd.h>
 +#include <linux/memblock.h>
 +#include <linux/seq_file.h>
 +#include <linux/console.h>
 +#include <linux/root_dev.h>
 +#include <linux/highmem.h>
 +#include <linux/export.h>
 +#include <linux/efi.h>
 +#include <linux/init.h>
 +#include <linux/edd.h>
 +#include <linux/iscsi_ibft.h>
 +#include <linux/nodemask.h>
 +#include <linux/kexec.h>
 +#include <linux/dmi.h>
 +#include <linux/pfn.h>
 +#include <linux/pci.h>
 +#include <asm/pci-direct.h>
 +#include <linux/init_ohci1394_dma.h>
 +#include <linux/kvm_para.h>
 +#include <linux/dma-contiguous.h>
 +#include <xen/xen.h>
 +#include <uapi/linux/mount.h>
 +
 +#include <linux/errno.h>
 +#include <linux/kernel.h>
 +#include <linux/stddef.h>
 +#include <linux/unistd.h>
 +#include <linux/ptrace.h>
 +#include <linux/user.h>
 +#include <linux/delay.h>
 +
 +#include <linux/kallsyms.h>
 +#include <linux/cpufreq.h>
 +#include <linux/dma-mapping.h>
 +#include <linux/ctype.h>
 +#include <linux/uaccess.h>
 +#include <linux/security.h>
 +
 +#include <linux/percpu.h>
 +#include <linux/crash_dump.h>
 +#include <linux/tboot.h>
 +#include <linux/jiffies.h>
 +#include <linux/mem_encrypt.h>
 +#include <linux/sizes.h>
 +
 +#include <linux/usb/xhci-dbgp.h>
 +#include <video/edid.h>
 +
 +#include <asm/mtrr.h>
 +#include <asm/apic.h>
 +#include <asm/realmode.h>
 +#include <asm/e820/api.h>
 +#include <asm/mpspec.h>
 +#include <asm/setup.h>
 +#include <asm/efi.h>
 +#include <asm/timer.h>
 +#include <asm/i8259.h>
 +#include <asm/sections.h>
 +#include <asm/io_apic.h>
 +#include <asm/ist.h>
 +#include <asm/setup_arch.h>
 +#include <asm/bios_ebda.h>
 +#include <asm/cacheflush.h>
 +#include <asm/processor.h>
 +#include <asm/bugs.h>
 +#include <asm/kasan.h>
 +
 +#include <asm/vsyscall.h>
 +#include <asm/cpu.h>
 +#include <asm/desc.h>
 +#include <asm/dma.h>
 +#include <asm/iommu.h>
 +#include <asm/gart.h>
 +#include <asm/mmu_context.h>
 +#include <asm/proto.h>
 +
 +#include <asm/paravirt.h>
 +#include <asm/hypervisor.h>
 +#include <asm/olpc_ofw.h>
 +
 +#include <asm/percpu.h>
 +#include <asm/topology.h>
 +#include <asm/apicdef.h>
 +#include <asm/amd_nb.h>
 +#include <asm/mce.h>
 +#include <asm/alternative.h>
 +#include <asm/prom.h>
 +#include <asm/microcode.h>
 +#include <asm/kaslr.h>
 +#include <asm/unwind.h>
 +#include <asm/intel-family.h>
  
  /*
 - * max_low_pfn_mapped: highest directly mapped pfn < 4 GB
 - * max_pfn_mapped:     highest directly mapped pfn > 4 GB
 + * max_low_pfn_mapped: highest direct mapped pfn under 4GB
 + * max_pfn_mapped:     highest direct mapped pfn over 4GB
   *
   * The direct mapping only covers E820_TYPE_RAM regions, so the ranges and gaps are
 - * represented by pfn_mapped[].
 + * represented by pfn_mapped
   */
  unsigned long max_low_pfn_mapped;
  unsigned long max_pfn_mapped;
diff --cc drivers/acpi/arm64/iort.c
index 5db705e2b54d,6446b2572f07..000000000000
--- a/drivers/acpi/arm64/iort.c
+++ b/drivers/acpi/arm64/iort.c
@@@ -26,6 -18,7 +26,10 @@@
  #include <linux/pci.h>
  #include <linux/platform_device.h>
  #include <linux/slab.h>
++<<<<<<< HEAD
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  
  #define IORT_TYPE_MASK(type)	(1 << (type))
  #define IORT_MSI_TYPE		(1 << ACPI_IORT_NODE_ITS_GROUP)
diff --cc drivers/of/device.c
index f137835e2a84,655dee422563..000000000000
--- a/drivers/of/device.c
+++ b/drivers/of/device.c
@@@ -5,7 -5,8 +5,12 @@@
  #include <linux/of_device.h>
  #include <linux/of_address.h>
  #include <linux/of_iommu.h>
++<<<<<<< HEAD
 +#include <linux/dma-mapping.h>
++=======
+ #include <linux/dma-direct.h> /* for bus_dma_region */
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/init.h>
  #include <linux/module.h>
  #include <linux/mod_devicetable.h>
diff --cc drivers/remoteproc/remoteproc_virtio.c
index 65133412ff08,0cc617f76068..000000000000
--- a/drivers/remoteproc/remoteproc_virtio.c
+++ b/drivers/remoteproc/remoteproc_virtio.c
@@@ -6,18 -7,11 +6,22 @@@
   *
   * Ohad Ben-Cohen <ohad@wizery.com>
   * Brian Swetland <swetland@google.com>
 + *
 + * This software is licensed under the terms of the GNU General Public
 + * License version 2, as published by the Free Software Foundation, and
 + * may be copied, distributed, and modified under those terms.
 + *
 + * This program is distributed in the hope that it will be useful,
 + * but WITHOUT ANY WARRANTY; without even the implied warranty of
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 + * GNU General Public License for more details.
   */
  
++<<<<<<< HEAD
++=======
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/export.h>
 -#include <linux/of_reserved_mem.h>
  #include <linux/remoteproc.h>
  #include <linux/virtio.h>
  #include <linux/virtio_config.h>
diff --cc drivers/vdpa/vdpa_sim/vdpa_sim.c
index 808cea454bb1,2629911c29bb..000000000000
--- a/drivers/vdpa/vdpa_sim/vdpa_sim.c
+++ b/drivers/vdpa/vdpa_sim/vdpa_sim.c
@@@ -11,15 -11,23 +11,25 @@@
  #include <linux/module.h>
  #include <linux/device.h>
  #include <linux/kernel.h>
 -#include <linux/fs.h>
 -#include <linux/poll.h>
  #include <linux/slab.h>
  #include <linux/sched.h>
++<<<<<<< HEAD
 +#include <linux/dma-mapping.h>
++=======
+ #include <linux/wait.h>
+ #include <linux/uuid.h>
+ #include <linux/iommu.h>
+ #include <linux/dma-map-ops.h>
+ #include <linux/sysfs.h>
+ #include <linux/file.h>
+ #include <linux/etherdevice.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #include <linux/vringh.h>
  #include <linux/vdpa.h>
 -#include <linux/virtio_byteorder.h>
  #include <linux/vhost_iotlb.h>
 -#include <uapi/linux/virtio_config.h>
 -#include <uapi/linux/virtio_net.h>
 +#include <linux/iova.h>
 +
 +#include "vdpa_sim.h"
  
  #define DRV_VERSION  "0.1"
  #define DRV_AUTHOR   "Jason Wang <jasowang@redhat.com>"
diff --cc include/linux/dma-mapping.h
index 5c32cbab4717,9591cd482d7c..000000000000
--- a/include/linux/dma-mapping.h
+++ b/include/linux/dma-mapping.h
@@@ -62,79 -62,6 +62,82 @@@
   */
  #define DMA_ATTR_PRIVILEGED		(1UL << 9)
  
++<<<<<<< HEAD
 +struct dma_map_ops_extended_rh {
 +};
 +
 +struct dma_map_ops {
 +	void* (*alloc)(struct device *dev, size_t size,
 +				dma_addr_t *dma_handle, gfp_t gfp,
 +				unsigned long attrs);
 +	void (*free)(struct device *dev, size_t size,
 +			      void *vaddr, dma_addr_t dma_handle,
 +			      unsigned long attrs);
 +	int (*mmap)(struct device *, struct vm_area_struct *,
 +			  void *, dma_addr_t, size_t,
 +			  unsigned long attrs);
 +
 +	int (*get_sgtable)(struct device *dev, struct sg_table *sgt, void *,
 +			   dma_addr_t, size_t, unsigned long attrs);
 +
 +	dma_addr_t (*map_page)(struct device *dev, struct page *page,
 +			       unsigned long offset, size_t size,
 +			       enum dma_data_direction dir,
 +			       unsigned long attrs);
 +	void (*unmap_page)(struct device *dev, dma_addr_t dma_handle,
 +			   size_t size, enum dma_data_direction dir,
 +			   unsigned long attrs);
 +	/*
 +	 * map_sg returns 0 on error and a value > 0 on success.
 +	 * It should never return a value < 0.
 +	 */
 +	int (*map_sg)(struct device *dev, struct scatterlist *sg,
 +		      int nents, enum dma_data_direction dir,
 +		      unsigned long attrs);
 +	void (*unmap_sg)(struct device *dev,
 +			 struct scatterlist *sg, int nents,
 +			 enum dma_data_direction dir,
 +			 unsigned long attrs);
 +	dma_addr_t (*map_resource)(struct device *dev, phys_addr_t phys_addr,
 +			       size_t size, enum dma_data_direction dir,
 +			       unsigned long attrs);
 +	void (*unmap_resource)(struct device *dev, dma_addr_t dma_handle,
 +			   size_t size, enum dma_data_direction dir,
 +			   unsigned long attrs);
 +	RH_KABI_USE(1, size_t (*max_mapping_size)(struct device *dev))
 +	RH_KABI_USE(2, unsigned long (*get_merge_boundary)(struct device *dev))
 +	RH_KABI_USE(3, struct page *(*alloc_pages)(struct device *dev, size_t size,\
 +			dma_addr_t *dma_handle, enum dma_data_direction dir,\
 +						   gfp_t gfp))
 +	RH_KABI_USE(4, void (*free_pages)(struct device *dev, size_t size,\
 +					  struct page *vaddr, dma_addr_t dma_handle,\
 +					  enum dma_data_direction dir))
 +	RH_KABI_USE(5, struct sg_table *(*alloc_noncontiguous)(struct device *dev, size_t size,	\
 +				enum dma_data_direction dir, gfp_t gfp,\
 +				unsigned long attrs))
 +	RH_KABI_USE(6, void (*free_noncontiguous)(struct device *dev, size_t size,\
 +				struct sg_table *sgt, enum dma_data_direction dir))
 +	void (*sync_single_for_cpu)(struct device *dev,
 +				    dma_addr_t dma_handle, size_t size,
 +				    enum dma_data_direction dir);
 +	void (*sync_single_for_device)(struct device *dev,
 +				       dma_addr_t dma_handle, size_t size,
 +				       enum dma_data_direction dir);
 +	void (*sync_sg_for_cpu)(struct device *dev,
 +				struct scatterlist *sg, int nents,
 +				enum dma_data_direction dir);
 +	void (*sync_sg_for_device)(struct device *dev,
 +				   struct scatterlist *sg, int nents,
 +				   enum dma_data_direction dir);
 +	void (*cache_sync)(struct device *dev, void *vaddr, size_t size,
 +			enum dma_data_direction direction);
 +	int (*dma_supported)(struct device *dev, u64 mask);
 +	u64 (*get_required_mask)(struct device *dev);
 +	RH_KABI_AUX_EMBED(dma_map_ops_extended)
 +};
 +
++=======
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  /*
   * A dma_addr_t can hold any valid DMA or bus address for the platform.  It can
   * be given to a device to use as a DMA source or target.  It is specific to a
@@@ -147,100 -74,9 +150,74 @@@
   */
  #define DMA_MAPPING_ERROR		(~(dma_addr_t)0)
  
- extern const struct dma_map_ops dma_virt_ops;
- extern const struct dma_map_ops dma_dummy_ops;
- 
  #define DMA_BIT_MASK(n)	(((n) == 64) ? ~0ULL : ((1ULL<<(n))-1))
  
++<<<<<<< HEAD
 +#define DMA_MASK_NONE	0x0ULL
 +
 +static inline int is_device_dma_capable(struct device *dev)
 +{
 +	return dev->dma_mask != NULL && *dev->dma_mask != DMA_MASK_NONE;
 +}
 +
 +#ifdef CONFIG_HAVE_GENERIC_DMA_COHERENT
 +/*
 + * These three functions are only for dma allocator.
 + * Don't use them in device drivers.
 + */
 +int dma_alloc_from_dev_coherent(struct device *dev, ssize_t size,
 +				       dma_addr_t *dma_handle, void **ret);
 +int dma_release_from_dev_coherent(struct device *dev, int order, void *vaddr);
 +
 +int dma_mmap_from_dev_coherent(struct device *dev, struct vm_area_struct *vma,
 +			    void *cpu_addr, size_t size, int *ret);
 +
 +void *dma_alloc_from_global_coherent(struct device *dev, ssize_t size, dma_addr_t *dma_handle);
 +int dma_release_from_global_coherent(int order, void *vaddr);
 +int dma_mmap_from_global_coherent(struct vm_area_struct *vma, void *cpu_addr,
 +				  size_t size, int *ret);
 +
 +#else
 +#define dma_alloc_from_dev_coherent(dev, size, handle, ret) (0)
 +#define dma_release_from_dev_coherent(dev, order, vaddr) (0)
 +#define dma_mmap_from_dev_coherent(dev, vma, vaddr, order, ret) (0)
 +
 +static inline void *dma_alloc_from_global_coherent(struct device *dev, ssize_t size,
 +						   dma_addr_t *dma_handle)
 +{
 +	return NULL;
 +}
 +
 +static inline int dma_release_from_global_coherent(int order, void *vaddr)
 +{
 +	return 0;
 +}
 +
 +static inline int dma_mmap_from_global_coherent(struct vm_area_struct *vma,
 +						void *cpu_addr, size_t size,
 +						int *ret)
 +{
 +	return 0;
 +}
 +#endif /* CONFIG_HAVE_GENERIC_DMA_COHERENT */
 +
 +/*
 + * This is the actual return value from the ->alloc_noncontiguous method.
 + * The users of the DMA API should only care about the sg_table, but to make
 + * the DMA-API internal vmaping and freeing easier we stash away the page
 + * array as well (except for the fallback case).  This can go away any time,
 + * e.g. when a vmap-variant that takes a scatterlist comes along.
 + */
 +struct dma_sgt_handle {
 +	struct sg_table sgt;
 +	struct page **pages;
 +};
 +#define sgt_handle(sgt) \
 +	container_of((sgt), struct dma_sgt_handle, sgt)
 +
++=======
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  #ifdef CONFIG_HAS_DMA
- #include <asm/dma-mapping.h>
- 
- #ifdef CONFIG_DMA_OPS
- static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
- {
- 	if (dev->dma_ops)
- 		return dev->dma_ops;
- 	return get_arch_dma_ops(dev->bus);
- }
- 
- static inline void set_dma_ops(struct device *dev,
- 			       const struct dma_map_ops *dma_ops)
- {
- 	dev->dma_ops = dma_ops;
- }
- #else /* CONFIG_DMA_OPS */
- static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
- {
- 	return NULL;
- }
- static inline void set_dma_ops(struct device *dev,
- 			       const struct dma_map_ops *dma_ops)
- {
- }
- #endif /* CONFIG_DMA_OPS */
- 
  static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
  {
  	debug_dma_mapping_error(dev, dma_addr);
@@@ -672,20 -459,6 +649,23 @@@ static inline bool dma_addressing_limit
  			    dma_get_required_mask(dev);
  }
  
++<<<<<<< HEAD
 +#ifdef CONFIG_ARCH_HAS_SETUP_DMA_OPS
 +void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
 +		const struct iommu_ops *iommu, bool coherent);
 +#else
 +static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,
 +		u64 size, const struct iommu_ops *iommu, bool coherent)
 +{
 +}
 +#endif /* CONFIG_ARCH_HAS_SETUP_DMA_OPS */
 +
 +#ifndef arch_teardown_dma_ops
 +static inline void arch_teardown_dma_ops(struct device *dev) { }
 +#endif
 +
++=======
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  static inline unsigned int dma_get_max_seg_size(struct device *dev)
  {
  	if (dev->dma_parms && dev->dma_parms->max_segment_size)
@@@ -754,18 -518,6 +734,21 @@@ static inline int dma_get_cache_alignme
  	return 1;
  }
  
++<<<<<<< HEAD
 +#ifdef CONFIG_HAVE_GENERIC_DMA_COHERENT
 +int dma_declare_coherent_memory(struct device *dev, phys_addr_t phys_addr,
 +				dma_addr_t device_addr, size_t size);
 +#else
 +static inline int
 +dma_declare_coherent_memory(struct device *dev, phys_addr_t phys_addr,
 +			    dma_addr_t device_addr, size_t size)
 +{
 +	return -ENOSYS;
 +}
 +#endif /* CONFIG_HAVE_GENERIC_DMA_COHERENT */
 +
++=======
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  static inline void *dmam_alloc_coherent(struct device *dev, size_t size,
  		dma_addr_t *dma_handle, gfp_t gfp)
  {
@@@ -825,4 -568,13 +808,17 @@@ static inline int dma_mmap_wc(struct de
  #define dma_unmap_len_set(PTR, LEN_NAME, VAL)    do { } while (0)
  #endif
  
++<<<<<<< HEAD
 +#endif
++=======
+ /*
+  * Legacy interface to set up the dma offset map.  Drivers really should not
+  * actually use it, but we have a few legacy cases left.
+  */
+ int dma_direct_set_offset(struct device *dev, phys_addr_t cpu_start,
+ 		dma_addr_t dma_start, u64 size);
+ 
+ extern const struct dma_map_ops dma_virt_ops;
+ 
+ #endif /* _LINUX_DMA_MAPPING_H */
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
diff --cc kernel/dma/coherent.c
index 0d92e92edbda,5b5b6c7ec7f2..000000000000
--- a/kernel/dma/coherent.c
+++ b/kernel/dma/coherent.c
@@@ -7,7 -7,8 +7,12 @@@
  #include <linux/slab.h>
  #include <linux/kernel.h>
  #include <linux/module.h>
++<<<<<<< HEAD
 +#include <linux/dma-mapping.h>
++=======
+ #include <linux/dma-direct.h>
+ #include <linux/dma-map-ops.h>
++>>>>>>> 0a0f0d8be76d (dma-mapping: split <linux/dma-mapping.h>)
  
  struct dma_coherent_mem {
  	void		*virt_base;
* Unmerged path arch/mips/mm/dma-noncoherent.c
* Unmerged path drivers/gpu/drm/exynos/exynos_drm_dma.c
diff --git a/MAINTAINERS b/MAINTAINERS
index 4850069063f0..31b72420d0db 100644
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@ -4488,6 +4488,7 @@ F:	kernel/dma/
 F:	include/asm-generic/dma-mapping.h
 F:	include/linux/dma-direct.h
 F:	include/linux/dma-mapping.h
+F:	include/linux/dma-map-ops.h
 F:	include/linux/dma-noncoherent.h
 
 DME1737 HARDWARE MONITOR DRIVER
diff --git a/arch/alpha/kernel/pci_iommu.c b/arch/alpha/kernel/pci_iommu.c
index 80c69ddba9b9..8ab189c023a9 100644
--- a/arch/alpha/kernel/pci_iommu.c
+++ b/arch/alpha/kernel/pci_iommu.c
@@ -11,7 +11,7 @@
 #include <linux/export.h>
 #include <linux/scatterlist.h>
 #include <linux/log2.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/iommu-helper.h>
 
 #include <asm/io.h>
diff --git a/arch/arc/mm/dma.c b/arch/arc/mm/dma.c
index ec47e6079f5d..26713e1f052c 100644
--- a/arch/arc/mm/dma.c
+++ b/arch/arc/mm/dma.c
@@ -16,6 +16,7 @@
  * The default DMA address == Phy address which is 0x8000_0000 based.
  */
 
+#include <linux/dma-map-ops.h>
 #include <linux/dma-noncoherent.h>
 #include <asm/cache.h>
 #include <asm/cacheflush.h>
* Unmerged path arch/arm/common/dmabounce.c
diff --git a/arch/arm/mach-highbank/highbank.c b/arch/arm/mach-highbank/highbank.c
index 07f60986dc2c..439ed49e7c70 100644
--- a/arch/arm/mach-highbank/highbank.c
+++ b/arch/arm/mach-highbank/highbank.c
@@ -16,7 +16,7 @@
 #include <linux/clk.h>
 #include <linux/clkdev.h>
 #include <linux/clocksource.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/input.h>
 #include <linux/io.h>
 #include <linux/irqchip.h>
diff --git a/arch/arm/mach-imx/mach-imx27_visstrim_m10.c b/arch/arm/mach-imx/mach-imx27_visstrim_m10.c
index 07d4fcfe5c2e..9d687fc3d98a 100644
--- a/arch/arm/mach-imx/mach-imx27_visstrim_m10.c
+++ b/arch/arm/mach-imx/mach-imx27_visstrim_m10.c
@@ -30,7 +30,7 @@
 #include <linux/input.h>
 #include <linux/gpio.h>
 #include <linux/delay.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/leds.h>
 #include <linux/platform_data/asoc-mx27vis.h>
 #include <media/soc_camera.h>
diff --git a/arch/arm/mach-imx/mach-mx31moboard.c b/arch/arm/mach-imx/mach-mx31moboard.c
index fe50f4cf00a7..59b21f75eab7 100644
--- a/arch/arm/mach-imx/mach-mx31moboard.c
+++ b/arch/arm/mach-imx/mach-mx31moboard.c
@@ -13,7 +13,7 @@
  */
 
 #include <linux/delay.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/gfp.h>
 #include <linux/gpio.h>
 #include <linux/init.h>
diff --git a/arch/arm/mach-mvebu/coherency.c b/arch/arm/mach-mvebu/coherency.c
index 8f8748a0c84f..49e3c8d20c2f 100644
--- a/arch/arm/mach-mvebu/coherency.c
+++ b/arch/arm/mach-mvebu/coherency.c
@@ -25,7 +25,7 @@
 #include <linux/of_address.h>
 #include <linux/io.h>
 #include <linux/smp.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/platform_device.h>
 #include <linux/slab.h>
 #include <linux/mbus.h>
diff --git a/arch/arm/mm/dma-mapping-nommu.c b/arch/arm/mm/dma-mapping-nommu.c
index b7084a2d048b..467ee38bf843 100644
--- a/arch/arm/mm/dma-mapping-nommu.c
+++ b/arch/arm/mm/dma-mapping-nommu.c
@@ -12,6 +12,7 @@
 #include <linux/export.h>
 #include <linux/mm.h>
 #include <linux/dma-direct.h>
+#include <linux/dma-map-ops.h>
 #include <linux/scatterlist.h>
 
 #include <asm/cachetype.h>
* Unmerged path arch/arm/mm/dma-mapping.c
* Unmerged path arch/arm64/mm/dma-mapping.c
diff --git a/arch/ia64/hp/common/sba_iommu.c b/arch/ia64/hp/common/sba_iommu.c
index 356e261983b6..e49e4b68919d 100644
--- a/arch/ia64/hp/common/sba_iommu.c
+++ b/arch/ia64/hp/common/sba_iommu.c
@@ -36,7 +36,7 @@
 #include <linux/bitops.h>         /* hweight64() */
 #include <linux/crash_dump.h>
 #include <linux/iommu-helper.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/prefetch.h>
 
 #include <asm/delay.h>		/* ia64_get_itc() */
* Unmerged path arch/ia64/kernel/dma-mapping.c
* Unmerged path arch/mips/jazz/jazzdma.c
* Unmerged path arch/mips/mm/dma-noncoherent.c
diff --git a/arch/parisc/kernel/drivers.c b/arch/parisc/kernel/drivers.c
index 5eb979d04b90..f2f5355d0bd4 100644
--- a/arch/parisc/kernel/drivers.c
+++ b/arch/parisc/kernel/drivers.c
@@ -34,6 +34,7 @@
 #include <linux/spinlock.h>
 #include <linux/string.h>
 #include <linux/export.h>
+#include <linux/dma-map-ops.h>
 #include <asm/hardware.h>
 #include <asm/io.h>
 #include <asm/pdc.h>
diff --git a/arch/powerpc/include/asm/iommu.h b/arch/powerpc/include/asm/iommu.h
index cc599cf78dca..cf821917bf1a 100644
--- a/arch/powerpc/include/asm/iommu.h
+++ b/arch/powerpc/include/asm/iommu.h
@@ -25,7 +25,7 @@
 #include <linux/compiler.h>
 #include <linux/spinlock.h>
 #include <linux/device.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/bitops.h>
 #include <asm/machdep.h>
 #include <asm/types.h>
diff --git a/arch/powerpc/include/asm/pci.h b/arch/powerpc/include/asm/pci.h
index 4194fca0b208..6781e124bdc8 100644
--- a/arch/powerpc/include/asm/pci.h
+++ b/arch/powerpc/include/asm/pci.h
@@ -12,7 +12,7 @@
 #include <linux/types.h>
 #include <linux/slab.h>
 #include <linux/string.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/scatterlist.h>
 
 #include <asm/machdep.h>
diff --git a/arch/powerpc/platforms/ps3/system-bus.c b/arch/powerpc/platforms/ps3/system-bus.c
index a8f688f57c33..ef8ccf9b038b 100644
--- a/arch/powerpc/platforms/ps3/system-bus.c
+++ b/arch/powerpc/platforms/ps3/system-bus.c
@@ -21,7 +21,7 @@
 #include <linux/kernel.h>
 #include <linux/init.h>
 #include <linux/export.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/err.h>
 #include <linux/slab.h>
 
diff --git a/arch/powerpc/platforms/pseries/ibmebus.c b/arch/powerpc/platforms/pseries/ibmebus.c
index 729f65dfe190..1dba9438cae6 100644
--- a/arch/powerpc/platforms/pseries/ibmebus.c
+++ b/arch/powerpc/platforms/pseries/ibmebus.c
@@ -40,7 +40,7 @@
 #include <linux/export.h>
 #include <linux/console.h>
 #include <linux/kobject.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/interrupt.h>
 #include <linux/of.h>
 #include <linux/slab.h>
diff --git a/arch/powerpc/platforms/pseries/vio.c b/arch/powerpc/platforms/pseries/vio.c
index 4f70b4fc7e22..6c97d250d87f 100644
--- a/arch/powerpc/platforms/pseries/vio.c
+++ b/arch/powerpc/platforms/pseries/vio.c
@@ -24,7 +24,7 @@
 #include <linux/console.h>
 #include <linux/export.h>
 #include <linux/mm.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/kobject.h>
 
 #include <asm/iommu.h>
diff --git a/arch/s390/pci/pci_dma.c b/arch/s390/pci/pci_dma.c
index 55a5248b87dc..3cdcce8137b2 100644
--- a/arch/s390/pci/pci_dma.c
+++ b/arch/s390/pci/pci_dma.c
@@ -10,7 +10,7 @@
 #include <linux/slab.h>
 #include <linux/export.h>
 #include <linux/iommu-helper.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/vmalloc.h>
 #include <linux/pci.h>
 #include <asm/pci_dma.h>
* Unmerged path arch/sh/boards/mach-ap325rxa/setup.c
diff --git a/arch/sh/boards/mach-ecovec24/setup.c b/arch/sh/boards/mach-ecovec24/setup.c
index e914c56a2d21..655313e09e8b 100644
--- a/arch/sh/boards/mach-ecovec24/setup.c
+++ b/arch/sh/boards/mach-ecovec24/setup.c
@@ -39,6 +39,7 @@
 #include <linux/usb/r8a66597.h>
 #include <linux/usb/renesas_usbhs.h>
 #include <linux/videodev2.h>
+#include <linux/dma-map-ops.h>
 
 #include <media/drv-intf/renesas-ceu.h>
 #include <media/i2c/mt9t112.h>
* Unmerged path arch/sh/boards/mach-kfr2r09/setup.c
* Unmerged path arch/sh/boards/mach-migor/setup.c
* Unmerged path arch/sh/boards/mach-se/7724/setup.c
diff --git a/arch/sh/drivers/pci/fixups-dreamcast.c b/arch/sh/drivers/pci/fixups-dreamcast.c
index bf75274d8135..99e9f1027bdf 100644
--- a/arch/sh/drivers/pci/fixups-dreamcast.c
+++ b/arch/sh/drivers/pci/fixups-dreamcast.c
@@ -22,7 +22,7 @@
 #include <linux/init.h>
 #include <linux/irq.h>
 #include <linux/pci.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 
 #include <asm/io.h>
 #include <asm/irq.h>
diff --git a/arch/sparc/kernel/iommu.c b/arch/sparc/kernel/iommu.c
index 8190fcccc86e..c70e37fa0b20 100644
--- a/arch/sparc/kernel/iommu.c
+++ b/arch/sparc/kernel/iommu.c
@@ -10,7 +10,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/device.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/errno.h>
 #include <linux/iommu-helper.h>
 #include <linux/bitmap.h>
diff --git a/arch/sparc/kernel/pci_sun4v.c b/arch/sparc/kernel/pci_sun4v.c
index 18e7f9091c61..3e6f9e18e8db 100644
--- a/arch/sparc/kernel/pci_sun4v.c
+++ b/arch/sparc/kernel/pci_sun4v.c
@@ -16,6 +16,7 @@
 #include <linux/export.h>
 #include <linux/log2.h>
 #include <linux/of_device.h>
+#include <linux/dma-map-ops.h>
 #include <asm/iommu-common.h>
 
 #include <asm/iommu.h>
* Unmerged path arch/sparc/mm/io-unit.c
* Unmerged path arch/sparc/mm/iommu.c
diff --git a/arch/x86/kernel/amd_gart_64.c b/arch/x86/kernel/amd_gart_64.c
index b508c3efd493..b6b4b71776b5 100644
--- a/arch/x86/kernel/amd_gart_64.c
+++ b/arch/x86/kernel/amd_gart_64.c
@@ -32,6 +32,7 @@
 #include <linux/gfp.h>
 #include <linux/atomic.h>
 #include <linux/dma-direct.h>
+#include <linux/dma-map-ops.h>
 #include <asm/mtrr.h>
 #include <asm/pgtable.h>
 #include <asm/proto.h>
diff --git a/arch/x86/kernel/pci-dma.c b/arch/x86/kernel/pci-dma.c
index 80d2a0954d39..4cebe417743e 100644
--- a/arch/x86/kernel/pci-dma.c
+++ b/arch/x86/kernel/pci-dma.c
@@ -1,4 +1,5 @@
 // SPDX-License-Identifier: GPL-2.0
+#include <linux/dma-map-ops.h>
 #include <linux/dma-direct.h>
 #include <linux/dma-debug.h>
 #include <linux/iommu.h>
* Unmerged path arch/x86/kernel/setup.c
diff --git a/arch/x86/xen/pci-swiotlb-xen.c b/arch/x86/xen/pci-swiotlb-xen.c
index 37c6056a7bba..c91d060ccaa9 100644
--- a/arch/x86/xen/pci-swiotlb-xen.c
+++ b/arch/x86/xen/pci-swiotlb-xen.c
@@ -1,6 +1,6 @@
 /* Glue code to lib/swiotlb-xen.c */
 
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/pci.h>
 #include <xen/swiotlb-xen.h>
 
* Unmerged path drivers/acpi/arm64/iort.c
diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index 5f66eaf81a2b..aca4c4b5c299 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -15,7 +15,7 @@
 #include <linux/kthread.h>
 #include <linux/dmi.h>
 #include <linux/nls.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/platform_data/x86/apple.h>
 
 #include <asm/pgtable.h>
diff --git a/drivers/base/dd.c b/drivers/base/dd.c
index 659e6792510a..928ac8a2ee2c 100644
--- a/drivers/base/dd.c
+++ b/drivers/base/dd.c
@@ -19,7 +19,7 @@
 #include <linux/debugfs.h>
 #include <linux/device.h>
 #include <linux/delay.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/kthread.h>
* Unmerged path drivers/gpu/drm/exynos/exynos_drm_dma.c
diff --git a/drivers/gpu/drm/msm/msm_gem.c b/drivers/gpu/drm/msm/msm_gem.c
index 50b04ddb11b3..e160d1f58554 100644
--- a/drivers/gpu/drm/msm/msm_gem.c
+++ b/drivers/gpu/drm/msm/msm_gem.c
@@ -15,6 +15,7 @@
  * this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
+#include <linux/dma-map-ops.h>
 #include <linux/spinlock.h>
 #include <linux/shmem_fs.h>
 #include <linux/dma-buf.h>
diff --git a/drivers/iommu/dma-iommu.c b/drivers/iommu/dma-iommu.c
index 7a9d033bfda4..f13d5fec2932 100644
--- a/drivers/iommu/dma-iommu.c
+++ b/drivers/iommu/dma-iommu.c
@@ -21,6 +21,7 @@
 
 #include <linux/acpi_iort.h>
 #include <linux/device.h>
+#include <linux/dma-map-ops.h>
 #include <linux/dma-contiguous.h>
 #include <linux/dma-iommu.h>
 #include <linux/dma-noncoherent.h>
diff --git a/drivers/iommu/intel/iommu.c b/drivers/iommu/intel/iommu.c
index 8e05c1ec4dd5..22f25545a4eb 100644
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@ -31,7 +31,7 @@
 #include <linux/spinlock.h>
 #include <linux/pci.h>
 #include <linux/dmar.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/mempool.h>
 #include <linux/memory.h>
 #include <linux/cpu.h>
diff --git a/drivers/misc/mic/bus/mic_bus.c b/drivers/misc/mic/bus/mic_bus.c
index 77b16ca66846..35e43999f94a 100644
--- a/drivers/misc/mic/bus/mic_bus.c
+++ b/drivers/misc/mic/bus/mic_bus.c
@@ -20,6 +20,7 @@
  * This implementation is very similar to the the virtio bus driver
  * implementation @ drivers/virtio/virtio.c
  */
+#include <linux/dma-map-ops.h>
 #include <linux/slab.h>
 #include <linux/module.h>
 #include <linux/idr.h>
diff --git a/drivers/misc/mic/bus/scif_bus.c b/drivers/misc/mic/bus/scif_bus.c
index a444db5f61fe..1f3c908bc28c 100644
--- a/drivers/misc/mic/bus/scif_bus.c
+++ b/drivers/misc/mic/bus/scif_bus.c
@@ -17,7 +17,7 @@
 #include <linux/slab.h>
 #include <linux/module.h>
 #include <linux/idr.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 
 #include "scif_bus.h"
 
diff --git a/drivers/misc/mic/bus/scif_bus.h b/drivers/misc/mic/bus/scif_bus.h
index ff59568219ad..f22ec5e22303 100644
--- a/drivers/misc/mic/bus/scif_bus.h
+++ b/drivers/misc/mic/bus/scif_bus.h
@@ -20,7 +20,7 @@
  * Everything a scif driver needs to work with any particular scif
  * hardware abstraction layer.
  */
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 
 #include <linux/mic_common.h>
 #include "../common/mic_dev.h"
diff --git a/drivers/misc/mic/bus/vop_bus.c b/drivers/misc/mic/bus/vop_bus.c
index e5bb9c749b5d..be457e2e4f4a 100644
--- a/drivers/misc/mic/bus/vop_bus.c
+++ b/drivers/misc/mic/bus/vop_bus.c
@@ -20,7 +20,7 @@
 #include <linux/slab.h>
 #include <linux/module.h>
 #include <linux/idr.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 
 #include "vop_bus.h"
 
diff --git a/drivers/misc/mic/host/mic_boot.c b/drivers/misc/mic/host/mic_boot.c
index 6479435ac96b..02e5d11304da 100644
--- a/drivers/misc/mic/host/mic_boot.c
+++ b/drivers/misc/mic/host/mic_boot.c
@@ -22,6 +22,7 @@
 #include <linux/firmware.h>
 #include <linux/pci.h>
 #include <linux/kmod.h>
+#include <linux/dma-map-ops.h>
 #include <linux/mic_common.h>
 #include <linux/mic_bus.h>
 #include "../bus/scif_bus.h"
* Unmerged path drivers/of/device.c
diff --git a/drivers/parisc/ccio-dma.c b/drivers/parisc/ccio-dma.c
index e76f96739840..c3aa65465b18 100644
--- a/drivers/parisc/ccio-dma.c
+++ b/drivers/parisc/ccio-dma.c
@@ -42,6 +42,7 @@
 #include <linux/reboot.h>
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
+#include <linux/dma-map-ops.h>
 #include <linux/scatterlist.h>
 #include <linux/iommu-helper.h>
 #include <linux/export.h>
diff --git a/drivers/parisc/sba_iommu.c b/drivers/parisc/sba_iommu.c
index 7d078bff88a9..7881df3d552c 100644
--- a/drivers/parisc/sba_iommu.c
+++ b/drivers/parisc/sba_iommu.c
@@ -28,6 +28,7 @@
 #include <linux/mm.h>
 #include <linux/string.h>
 #include <linux/pci.h>
+#include <linux/dma-map-ops.h>
 #include <linux/scatterlist.h>
 #include <linux/iommu-helper.h>
 
diff --git a/drivers/pci/xen-pcifront.c b/drivers/pci/xen-pcifront.c
index d1b16cf3403f..41881d2e730f 100644
--- a/drivers/pci/xen-pcifront.c
+++ b/drivers/pci/xen-pcifront.c
@@ -22,6 +22,7 @@
 #include <linux/bitops.h>
 #include <linux/time.h>
 #include <linux/ktime.h>
+#include <linux/swiotlb.h>
 #include <xen/platform_pci.h>
 
 #include <asm/xen/swiotlb-xen.h>
diff --git a/drivers/remoteproc/remoteproc_core.c b/drivers/remoteproc/remoteproc_core.c
index a9609d971f7f..9fbc7c1201c5 100644
--- a/drivers/remoteproc/remoteproc_core.c
+++ b/drivers/remoteproc/remoteproc_core.c
@@ -29,6 +29,7 @@
 #include <linux/device.h>
 #include <linux/slab.h>
 #include <linux/mutex.h>
+#include <linux/dma-map-ops.h>
 #include <linux/dma-mapping.h>
 #include <linux/firmware.h>
 #include <linux/string.h>
* Unmerged path drivers/remoteproc/remoteproc_virtio.c
* Unmerged path drivers/vdpa/vdpa_sim/vdpa_sim.c
diff --git a/drivers/xen/swiotlb-xen.c b/drivers/xen/swiotlb-xen.c
index d199863cc446..faefbb6162b0 100644
--- a/drivers/xen/swiotlb-xen.c
+++ b/drivers/xen/swiotlb-xen.c
@@ -36,6 +36,7 @@
 #define pr_fmt(fmt) "xen:" KBUILD_MODNAME ": " fmt
 
 #include <linux/memblock.h>
+#include <linux/dma-map-ops.h>
 #include <linux/dma-direct.h>
 #include <linux/dma-noncoherent.h>
 #include <linux/export.h>
diff --git a/include/linux/dma-map-ops.h b/include/linux/dma-map-ops.h
new file mode 100644
index 000000000000..4b4ba5bdcf6a
--- /dev/null
+++ b/include/linux/dma-map-ops.h
@@ -0,0 +1,158 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * This header is for implementations of dma_map_ops and related code.
+ * It should not be included in drivers just using the DMA API.
+ */
+#ifndef _LINUX_DMA_MAP_OPS_H
+#define _LINUX_DMA_MAP_OPS_H
+
+#include <linux/dma-mapping.h>
+
+struct dma_map_ops {
+	void *(*alloc)(struct device *dev, size_t size,
+			dma_addr_t *dma_handle, gfp_t gfp,
+			unsigned long attrs);
+	void (*free)(struct device *dev, size_t size, void *vaddr,
+			dma_addr_t dma_handle, unsigned long attrs);
+	struct page *(*alloc_pages)(struct device *dev, size_t size,
+			dma_addr_t *dma_handle, enum dma_data_direction dir,
+			gfp_t gfp);
+	void (*free_pages)(struct device *dev, size_t size, struct page *vaddr,
+			dma_addr_t dma_handle, enum dma_data_direction dir);
+	void *(*alloc_noncoherent)(struct device *dev, size_t size,
+			dma_addr_t *dma_handle, enum dma_data_direction dir,
+			gfp_t gfp);
+	void (*free_noncoherent)(struct device *dev, size_t size, void *vaddr,
+			dma_addr_t dma_handle, enum dma_data_direction dir);
+	int (*mmap)(struct device *, struct vm_area_struct *,
+			void *, dma_addr_t, size_t, unsigned long attrs);
+
+	int (*get_sgtable)(struct device *dev, struct sg_table *sgt,
+			void *cpu_addr, dma_addr_t dma_addr, size_t size,
+			unsigned long attrs);
+
+	dma_addr_t (*map_page)(struct device *dev, struct page *page,
+			unsigned long offset, size_t size,
+			enum dma_data_direction dir, unsigned long attrs);
+	void (*unmap_page)(struct device *dev, dma_addr_t dma_handle,
+			size_t size, enum dma_data_direction dir,
+			unsigned long attrs);
+	/*
+	 * map_sg returns 0 on error and a value > 0 on success.
+	 * It should never return a value < 0.
+	 */
+	int (*map_sg)(struct device *dev, struct scatterlist *sg, int nents,
+			enum dma_data_direction dir, unsigned long attrs);
+	void (*unmap_sg)(struct device *dev, struct scatterlist *sg, int nents,
+			enum dma_data_direction dir, unsigned long attrs);
+	dma_addr_t (*map_resource)(struct device *dev, phys_addr_t phys_addr,
+			size_t size, enum dma_data_direction dir,
+			unsigned long attrs);
+	void (*unmap_resource)(struct device *dev, dma_addr_t dma_handle,
+			size_t size, enum dma_data_direction dir,
+			unsigned long attrs);
+	void (*sync_single_for_cpu)(struct device *dev, dma_addr_t dma_handle,
+			size_t size, enum dma_data_direction dir);
+	void (*sync_single_for_device)(struct device *dev,
+			dma_addr_t dma_handle, size_t size,
+			enum dma_data_direction dir);
+	void (*sync_sg_for_cpu)(struct device *dev, struct scatterlist *sg,
+			int nents, enum dma_data_direction dir);
+	void (*sync_sg_for_device)(struct device *dev, struct scatterlist *sg,
+			int nents, enum dma_data_direction dir);
+	void (*cache_sync)(struct device *dev, void *vaddr, size_t size,
+			enum dma_data_direction direction);
+	int (*dma_supported)(struct device *dev, u64 mask);
+	u64 (*get_required_mask)(struct device *dev);
+	size_t (*max_mapping_size)(struct device *dev);
+	unsigned long (*get_merge_boundary)(struct device *dev);
+};
+
+#ifdef CONFIG_DMA_OPS
+#include <asm/dma-mapping.h>
+
+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
+{
+	if (dev->dma_ops)
+		return dev->dma_ops;
+	return get_arch_dma_ops(dev->bus);
+}
+
+static inline void set_dma_ops(struct device *dev,
+			       const struct dma_map_ops *dma_ops)
+{
+	dev->dma_ops = dma_ops;
+}
+#else /* CONFIG_DMA_OPS */
+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
+{
+	return NULL;
+}
+static inline void set_dma_ops(struct device *dev,
+			       const struct dma_map_ops *dma_ops)
+{
+}
+#endif /* CONFIG_DMA_OPS */
+
+#ifdef CONFIG_DMA_DECLARE_COHERENT
+int dma_declare_coherent_memory(struct device *dev, phys_addr_t phys_addr,
+		dma_addr_t device_addr, size_t size);
+int dma_alloc_from_dev_coherent(struct device *dev, ssize_t size,
+		dma_addr_t *dma_handle, void **ret);
+int dma_release_from_dev_coherent(struct device *dev, int order, void *vaddr);
+int dma_mmap_from_dev_coherent(struct device *dev, struct vm_area_struct *vma,
+		void *cpu_addr, size_t size, int *ret);
+
+void *dma_alloc_from_global_coherent(struct device *dev, ssize_t size,
+		dma_addr_t *dma_handle);
+int dma_release_from_global_coherent(int order, void *vaddr);
+int dma_mmap_from_global_coherent(struct vm_area_struct *vma, void *cpu_addr,
+		size_t size, int *ret);
+
+#else
+static inline int dma_declare_coherent_memory(struct device *dev,
+		phys_addr_t phys_addr, dma_addr_t device_addr, size_t size)
+{
+	return -ENOSYS;
+}
+#define dma_alloc_from_dev_coherent(dev, size, handle, ret) (0)
+#define dma_release_from_dev_coherent(dev, order, vaddr) (0)
+#define dma_mmap_from_dev_coherent(dev, vma, vaddr, order, ret) (0)
+
+static inline void *dma_alloc_from_global_coherent(struct device *dev,
+		ssize_t size, dma_addr_t *dma_handle)
+{
+	return NULL;
+}
+static inline int dma_release_from_global_coherent(int order, void *vaddr)
+{
+	return 0;
+}
+static inline int dma_mmap_from_global_coherent(struct vm_area_struct *vma,
+		void *cpu_addr, size_t size, int *ret)
+{
+	return 0;
+}
+#endif /* CONFIG_DMA_DECLARE_COHERENT */
+
+#ifdef CONFIG_ARCH_HAS_SETUP_DMA_OPS
+void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
+		const struct iommu_ops *iommu, bool coherent);
+#else
+static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,
+		u64 size, const struct iommu_ops *iommu, bool coherent)
+{
+}
+#endif /* CONFIG_ARCH_HAS_SETUP_DMA_OPS */
+
+#ifdef CONFIG_ARCH_HAS_TEARDOWN_DMA_OPS
+void arch_teardown_dma_ops(struct device *dev);
+#else
+static inline void arch_teardown_dma_ops(struct device *dev)
+{
+}
+#endif /* CONFIG_ARCH_HAS_TEARDOWN_DMA_OPS */
+
+extern const struct dma_map_ops dma_dummy_ops;
+
+#endif /* _LINUX_DMA_MAP_OPS_H */
* Unmerged path include/linux/dma-mapping.h
* Unmerged path kernel/dma/coherent.c
diff --git a/kernel/dma/direct.c b/kernel/dma/direct.c
index 7d488b64b9de..eef269de585c 100644
--- a/kernel/dma/direct.c
+++ b/kernel/dma/direct.c
@@ -8,6 +8,7 @@
 #include <linux/export.h>
 #include <linux/mm.h>
 #include <linux/dma-direct.h>
+#include <linux/dma-map-ops.h>
 #include <linux/scatterlist.h>
 #include <linux/dma-contiguous.h>
 #include <linux/pfn.h>
diff --git a/kernel/dma/dummy.c b/kernel/dma/dummy.c
index 6974b1bd7d0b..eacd4c5b10bf 100644
--- a/kernel/dma/dummy.c
+++ b/kernel/dma/dummy.c
@@ -2,7 +2,7 @@
 /*
  * Dummy DMA ops that always fail.
  */
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 
 static int dma_dummy_mmap(struct device *dev, struct vm_area_struct *vma,
 		void *cpu_addr, dma_addr_t dma_addr, size_t size,
diff --git a/kernel/dma/mapping.c b/kernel/dma/mapping.c
index b152e4e4a653..5fe7b45edea8 100644
--- a/kernel/dma/mapping.c
+++ b/kernel/dma/mapping.c
@@ -8,7 +8,7 @@
 #include <linux/memblock.h> /* for max_pfn */
 #include <linux/acpi.h>
 #include <linux/dma-direct.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/export.h>
 #include <linux/gfp.h>
 #include <linux/of_device.h>
diff --git a/kernel/dma/ops_helpers.c b/kernel/dma/ops_helpers.c
index 5828e5e01b79..60d7b6cdfd8d 100644
--- a/kernel/dma/ops_helpers.c
+++ b/kernel/dma/ops_helpers.c
@@ -4,6 +4,7 @@
  * the allocated memory contains normal pages in the direct kernel mapping.
  */
 #include <linux/dma-contiguous.h>
+#include <linux/dma-map-ops.h>
 #include <linux/dma-noncoherent.h>
 
 /*
diff --git a/kernel/dma/virt.c b/kernel/dma/virt.c
index 6986bf1fd668..59d32317dd57 100644
--- a/kernel/dma/virt.c
+++ b/kernel/dma/virt.c
@@ -4,7 +4,7 @@
  */
 #include <linux/export.h>
 #include <linux/mm.h>
-#include <linux/dma-mapping.h>
+#include <linux/dma-map-ops.h>
 #include <linux/scatterlist.h>
 
 static void *dma_virt_alloc(struct device *dev, size_t size,
