drm/i915: split audio functions from display vtable

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Dave Airlie <airlied@redhat.com>
commit 7b75709ac8b566a386b1aa5642287ce6d4a78bd9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/7b75709a.failed

These are only used internally in the audio code

	Reviewed-by: Jani Nikula <jani.nikula@intel.com>
	Signed-off-by: Dave Airlie <airlied@redhat.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/d12257cc7685a9b52618f7da444ba1fc8848b4db.1632869550.git.jani.nikula@intel.com
(cherry picked from commit 7b75709ac8b566a386b1aa5642287ce6d4a78bd9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_audio.c
#	drivers/gpu/drm/i915/i915_drv.h
diff --cc drivers/gpu/drm/i915/display/intel_audio.c
index f7de55707746,bf96d1529775..000000000000
--- a/drivers/gpu/drm/i915/display/intel_audio.c
+++ b/drivers/gpu/drm/i915/display/intel_audio.c
@@@ -928,17 -922,17 +928,25 @@@ void intel_audio_codec_disable(struct i
  void intel_init_audio_hooks(struct drm_i915_private *dev_priv)
  {
  	if (IS_G4X(dev_priv)) {
- 		dev_priv->display.audio_codec_enable = g4x_audio_codec_enable;
- 		dev_priv->display.audio_codec_disable = g4x_audio_codec_disable;
+ 		dev_priv->audio_funcs.audio_codec_enable = g4x_audio_codec_enable;
+ 		dev_priv->audio_funcs.audio_codec_disable = g4x_audio_codec_disable;
  	} else if (IS_VALLEYVIEW(dev_priv) || IS_CHERRYVIEW(dev_priv)) {
++<<<<<<< HEAD
 +		dev_priv->display.audio_codec_enable = ilk_audio_codec_enable;
 +		dev_priv->display.audio_codec_disable = ilk_audio_codec_disable;
 +	} else if (IS_HASWELL(dev_priv) || INTEL_GEN(dev_priv) >= 8) {
 +		dev_priv->display.audio_codec_enable = hsw_audio_codec_enable;
 +		dev_priv->display.audio_codec_disable = hsw_audio_codec_disable;
++=======
+ 		dev_priv->audio_funcs.audio_codec_enable = ilk_audio_codec_enable;
+ 		dev_priv->audio_funcs.audio_codec_disable = ilk_audio_codec_disable;
+ 	} else if (IS_HASWELL(dev_priv) || DISPLAY_VER(dev_priv) >= 8) {
+ 		dev_priv->audio_funcs.audio_codec_enable = hsw_audio_codec_enable;
+ 		dev_priv->audio_funcs.audio_codec_disable = hsw_audio_codec_disable;
++>>>>>>> 7b75709ac8b5 (drm/i915: split audio functions from display vtable)
  	} else if (HAS_PCH_SPLIT(dev_priv)) {
- 		dev_priv->display.audio_codec_enable = ilk_audio_codec_enable;
- 		dev_priv->display.audio_codec_disable = ilk_audio_codec_disable;
+ 		dev_priv->audio_funcs.audio_codec_enable = ilk_audio_codec_enable;
+ 		dev_priv->audio_funcs.audio_codec_disable = ilk_audio_codec_disable;
  	}
  }
  
diff --cc drivers/gpu/drm/i915/i915_drv.h
index 6638c0aec2d4,8f81c2bd2899..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@@ -330,32 -364,48 +330,75 @@@ struct drm_i915_display_funcs 
  	void (*read_luts)(struct intel_crtc_state *crtc_state);
  };
  
++<<<<<<< HEAD
 +struct intel_csr {
 +	struct work_struct work;
 +	const char *fw_path;
 +	u32 required_version;
 +	u32 max_fw_size; /* bytes */
 +	u32 *dmc_payload;
 +	u32 dmc_fw_size; /* dwords */
 +	u32 version;
 +	u32 mmio_count;
 +	i915_reg_t mmioaddr[20];
 +	u32 mmiodata[20];
 +	u32 dc_state;
 +	u32 target_dc_state;
 +	u32 allowed_dc_mask;
 +	intel_wakeref_t wakeref;
++=======
+ struct intel_audio_funcs {
+ 	void (*audio_codec_enable)(struct intel_encoder *encoder,
+ 				   const struct intel_crtc_state *crtc_state,
+ 				   const struct drm_connector_state *conn_state);
+ 	void (*audio_codec_disable)(struct intel_encoder *encoder,
+ 				    const struct intel_crtc_state *old_crtc_state,
+ 				    const struct drm_connector_state *old_conn_state);
+ };
+ 
+ struct drm_i915_display_funcs {
+ 	void (*get_cdclk)(struct drm_i915_private *dev_priv,
+ 			  struct intel_cdclk_config *cdclk_config);
+ 	void (*set_cdclk)(struct drm_i915_private *dev_priv,
+ 			  const struct intel_cdclk_config *cdclk_config,
+ 			  enum pipe pipe);
+ 	int (*bw_calc_min_cdclk)(struct intel_atomic_state *state);
+ 	int (*modeset_calc_cdclk)(struct intel_cdclk_state *state);
+ 	u8 (*calc_voltage_level)(int cdclk);
+ 	/* Returns the active state of the crtc, and if the crtc is active,
+ 	 * fills out the pipe-config with the hw state. */
+ 	bool (*get_pipe_config)(struct intel_crtc *,
+ 				struct intel_crtc_state *);
+ 	void (*get_initial_plane_config)(struct intel_crtc *,
+ 					 struct intel_initial_plane_config *);
+ 	int (*crtc_compute_clock)(struct intel_crtc_state *crtc_state);
+ 	void (*crtc_enable)(struct intel_atomic_state *state,
+ 			    struct intel_crtc *crtc);
+ 	void (*crtc_disable)(struct intel_atomic_state *state,
+ 			     struct intel_crtc *crtc);
+ 	void (*commit_modeset_enables)(struct intel_atomic_state *state);
+ 	void (*commit_modeset_disables)(struct intel_atomic_state *state);
+ 
+ 	void (*fdi_link_train)(struct intel_crtc *crtc,
+ 			       const struct intel_crtc_state *crtc_state);
+ 	void (*hpd_irq_setup)(struct drm_i915_private *dev_priv);
+ 	/* clock updates for mode set */
+ 	/* cursor updates */
+ 	/* render clock increase/decrease */
+ 	/* display clock increase/decrease */
+ 	/* pll clock increase/decrease */
++>>>>>>> 7b75709ac8b5 (drm/i915: split audio functions from display vtable)
  };
  
 +enum i915_cache_level {
 +	I915_CACHE_NONE = 0,
 +	I915_CACHE_LLC, /* also used for snoopable memory on non-LLC */
 +	I915_CACHE_L3_LLC, /* gen7+, L3 sits between the domain specifc
 +			      caches, eg sampler/render caches, and the
 +			      large Last-Level-Cache. LLC is coherent with
 +			      the CPU, but L3 is only visible to the GPU. */
 +	I915_CACHE_WT, /* hsw:gt3e WriteThrough for scanouts */
 +};
  
  #define I915_COLOR_UNEVICTABLE (-1) /* a non-vma sharing the address space */
  
@@@ -965,6 -972,18 +1008,15 @@@ struct drm_i915_private 
  	/* Display functions */
  	struct drm_i915_display_funcs display;
  
++<<<<<<< HEAD
++=======
+ 	/* Display internal color functions */
+ 	struct intel_color_funcs color_funcs;
+ 
+ 	/* Display internal audio functions */
+ 	struct intel_audio_funcs audio_funcs;
+ 
++>>>>>>> 7b75709ac8b5 (drm/i915: split audio functions from display vtable)
  	/* PCH chipset type */
  	enum intel_pch pch_type;
  	unsigned short pch_id;
* Unmerged path drivers/gpu/drm/i915/display/intel_audio.c
* Unmerged path drivers/gpu/drm/i915/i915_drv.h
