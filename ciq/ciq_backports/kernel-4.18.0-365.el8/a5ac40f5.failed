arm64: memory: Simplify _VA_START and _PAGE_OFFSET definitions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-365.el8
commit-author Will Deacon <will@kernel.org>
commit a5ac40f53bfa5e43d9c76e3c23415ee4afd71932
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-365.el8/a5ac40f5.failed

Rather than subtracting from -1 and then adding 1, we can simply
subtract from 0.

	Tested-by: Steve Capper <steve.capper@arm.com>
	Reviewed-by: Steve Capper <steve.capper@arm.com>
	Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
	Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit a5ac40f53bfa5e43d9c76e3c23415ee4afd71932)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/memory.h
diff --cc arch/arm64/include/asm/memory.h
index 630eaf618e50,a7a985602cba..000000000000
--- a/arch/arm64/include/asm/memory.h
+++ b/arch/arm64/include/asm/memory.h
@@@ -64,12 -44,10 +64,17 @@@
   * VA_START - the first kernel virtual address.
   */
  #define VA_BITS			(CONFIG_ARM64_VA_BITS)
++<<<<<<< HEAD
 +#define VA_START		(UL(0xffffffffffffffff) - \
 +	(UL(1) << (VA_BITS - 1)) + 1)
 +#define PAGE_OFFSET		(UL(0xffffffffffffffff) - \
 +	(UL(1) << VA_BITS) + 1)
++=======
+ #define _PAGE_OFFSET(va)	(-(UL(1) << (va)))
+ #define PAGE_OFFSET		(_PAGE_OFFSET(VA_BITS))
++>>>>>>> a5ac40f53bfa (arm64: memory: Simplify _VA_START and _PAGE_OFFSET definitions)
  #define KIMAGE_VADDR		(MODULES_END)
 -#define BPF_JIT_REGION_START	(KASAN_SHADOW_END)
 +#define BPF_JIT_REGION_START	(VA_START + KASAN_SHADOW_SIZE)
  #define BPF_JIT_REGION_SIZE	(SZ_128M)
  #define BPF_JIT_REGION_END	(BPF_JIT_REGION_START + BPF_JIT_REGION_SIZE)
  #define MODULES_END		(MODULES_VADDR + MODULES_VSIZE)
@@@ -79,6 -57,12 +84,15 @@@
  #define PCI_IO_END		(VMEMMAP_START - SZ_2M)
  #define PCI_IO_START		(PCI_IO_END - PCI_IO_SIZE)
  #define FIXADDR_TOP		(PCI_IO_START - SZ_2M)
++<<<<<<< HEAD
++=======
+ #if VA_BITS > 48
+ #define VA_BITS_MIN		(48)
+ #else
+ #define VA_BITS_MIN		(VA_BITS)
+ #endif
+ #define _VA_START(va)		(-(UL(1) << ((va) - 1)))
++>>>>>>> a5ac40f53bfa (arm64: memory: Simplify _VA_START and _PAGE_OFFSET definitions)
  
  #define KERNEL_START      _text
  #define KERNEL_END        _end
* Unmerged path arch/arm64/include/asm/memory.h
