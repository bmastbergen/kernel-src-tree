name: VM Test
on:
  push:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  vm-test:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9
      options: --cpus 4 --privileged
    steps:
      #- name: Check out repository
      #  uses: actions/checkout@v4
      #  with:
      #    ref: "${{ github.event.pull_request.head.sha }}"

      #- name: Enable KVM
      #  run: |
      #    #echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
      #    echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | tee /etc/udev/rules.d/99-kvm4all.rules
      #    udevadm control --reload-rules
      #    udevadm trigger --name-match=kvm
      #    #sudo udevadm control --reload-rules
      #    #sudo udevadm trigger --name-match=kvm

      #- name: Install tools
      #  run: |
      #    sudo apt-get install bison build-essential cowsay flex libelf-dev libncurses-dev libssl-dev pahole virtme-ng

      #- name: Run vng
      #  run: |
      #    sed -i 's/set_page_dirty = v9fs_set_page_dirty/dirty_folio = v9fs_dirty_folio/g' fs/9p/vfs_addr.c
      #    sed -i 's/v9fs_set_page_dirty __set_page_dirty_nobuffers/v9fs_dirty_folio filemap_dirty_folio/g' fs/9p/vfs_addr.c
      #    sudo vng -b --config configs/kernel-x86_64-rhel.config
      #    sudo vng --cpus $(nproc) -- uname -r | cowsay

      - name: Install virtme-ng
        run: |
          dnf install epel-release -y
          dnf install qemu-kvm virtme-ng cowsay -y

      - name: Run vng
        run: |
          vng -r --cpus $(nproc) --qemu /usr/libexec/qemu-kvm --disable-microvm -- uname -r | cowsay
